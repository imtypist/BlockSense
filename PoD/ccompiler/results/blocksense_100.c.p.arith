total 312878
input 0                                  # input
input 1                                  # input
input 2                                  # input
input 3                                  # input
input 4                                  # input
input 5                                  # input
input 6                                  # input
input 7                                  # input
input 8                                  # input
input 9                                  # input
input 10                                 # input
input 11                                 # input
input 12                                 # input
input 13                                 # input
input 14                                 # input
input 15                                 # input
input 16                                 # input
input 17                                 # input
input 18                                 # input
input 19                                 # input
input 20                                 # input
input 21                                 # input
input 22                                 # input
input 23                                 # input
input 24                                 # input
input 25                                 # input
input 26                                 # input
input 27                                 # input
input 28                                 # input
input 29                                 # input
input 30                                 # input
input 31                                 # input
input 32                                 # input
input 33                                 # input
input 34                                 # input
input 35                                 # input
input 36                                 # input
input 37                                 # input
input 38                                 # input
input 39                                 # input
input 40                                 # input
input 41                                 # input
input 42                                 # input
input 43                                 # input
input 44                                 # input
input 45                                 # input
input 46                                 # input
input 47                                 # input
input 48                                 # input
input 49                                 # input
input 50                                 # input
input 51                                 # input
input 52                                 # input
input 53                                 # input
input 54                                 # input
input 55                                 # input
input 56                                 # input
input 57                                 # input
input 58                                 # input
input 59                                 # input
input 60                                 # input
input 61                                 # input
input 62                                 # input
input 63                                 # input
input 64                                 # input
input 65                                 # input
input 66                                 # input
input 67                                 # input
input 68                                 # input
input 69                                 # input
input 70                                 # input
input 71                                 # input
input 72                                 # input
input 73                                 # input
input 74                                 # input
input 75                                 # input
input 76                                 # input
input 77                                 # input
input 78                                 # input
input 79                                 # input
input 80                                 # input
input 81                                 # input
input 82                                 # input
input 83                                 # input
input 84                                 # input
input 85                                 # input
input 86                                 # input
input 87                                 # input
input 88                                 # input
input 89                                 # input
input 90                                 # input
input 91                                 # input
input 92                                 # input
input 93                                 # input
input 94                                 # input
input 95                                 # input
input 96                                 # input
input 97                                 # input
input 98                                 # input
input 99                                 # input
input 100                                # one-input
const-mul-0 in 1 <100> out 1 <101>       # zero
const-mul-0 in 1 <100> out 1 <102>       # constant 0
const-mul-1 in 1 <100> out 1 <103>       # constant 1
const-mul-5 in 1 <100> out 1 <104>       # constant 5
const-mul-ffffffff in 1 <0> out 1 <105>  # multiply-by-constant 4294967295
add in 2 <0 1> out 1 <106>               # ArithBusReq.AddReq(DFG.Input,DFG.Input)
add in 2 <106 105> out 1 <107>           # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <107> out 1 <108> # multiply-by-constant 4294967295
add in 2 <106 108> out 1 <109>           # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <0> out 1 <110>  # multiply-by-constant 4294967295
add in 2 <1 110> out 1 <111>             # 'CmpLT DFG.Input - DFG.Input'
split in 1 <111> out 65 <112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176> # SplitBus
mul in 2 <143 109> out 1 <177>           # cond trueterm
const-mul-neg-1 in 1 <143> out 1 <178>   # cond minuscond
add in 2 <100 178> out 1 <179>           # cond negcond
mul in 2 <179 1> out 1 <180>             # cond falseterm
add in 2 <177 180> out 1 <181>           # cond result
const-mul-ffffffff in 1 <181> out 1 <182> # multiply-by-constant 4294967295
add in 2 <181 2> out 1 <183>             # ArithBusReq.AddReq(DFG.Conditional,DFG.Input)
add in 2 <183 182> out 1 <184>           # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <184> out 1 <185> # multiply-by-constant 4294967295
add in 2 <183 185> out 1 <186>           # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <181> out 1 <187> # multiply-by-constant 4294967295
add in 2 <2 187> out 1 <188>             # 'CmpLT DFG.Input - DFG.Conditional'
split in 1 <188> outplitBus
mul in 2 <220 186> out 1 <320>           # cond trueterm
const-mul-neg-1 in 1 <220> out 1 <321>   # cond minuscond
add in 2 <100 321> out 1 <322>           # cond negcond
mul in 2 <322 2> out 1 <323>             # cond falseterm
add in 2 <320 323> out 1 <324>           # cond result
const-mul-ffffffff in 1 <324> out 1 <325> # multiply-by-constant 4294967295
add in 2 <324 3> out 1 <326>             # ArithBusReq.AddReq(DFG.Conditional,DFG.Input)
add in 2 <326 325> out 1 <327>           # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <324> out 1 <328> # multiply-by-constant 4294967295
add in 2 <3 328> out 1 <329>             # 'CmpLT DFG.Input - DFG.Conditional'
split in 1 <329> out 197 <330 331 332 333 334 335 336 337 338 339 340 341 342 343 344 345 346 347 348 349 350 351 352 353 354 355 356 357 358 359 360 361 362 363 364 365 366 367 368 369 370 371 372 373 374 375 376 377 378 379 380 381 382 383 384 385 386 387 388 389 390 391 392 393 394 395 396 397 398 399 400 401 402 403 404 405 406 407 408 409 410 411 412 413 414 415 416 417 418 419 420 421 422 423 424 425 426 427 428 429 430 431 432 433 434 435 436 437 438 439 440 441 442 443 444 445 446 447 448 449 450 451 452 453 454 455 456 457 458 459 460 461 462 463 464 465 466 467 468 469 470 471 472 473 474 475 476 477 478 479 480 481 482 483 484 485 486 487 488 489 490 491 492 493 494 495 496 497 498 499 500 501 502 503 504 505 506 507 508 509 510 511 512 513 514 515 516 517 518 519 520 521 522 523 524 525 526> # SplitBus
mul in 2 <361 327> out 1 <527>           # cond trueterm
const-mul-neg-1 in 1 <361> out 1 <528>   # cond minuscond
add in 2 <100 528> out 1 <529>           # cond negcond
mul in 2 <529 324> out 1 <530>           # cond falseterm
add in 2 <527 530> out 1 <531>           # cond result
mul in 2 <220 184> out 1 <532>           # cond trueterm
const-mul-neg-1 in 1 <220> out 1 <533>   # cond minuscond
add in 2 <100 533> out 1 <534>           # cond negcond
mul in 2 <534 181> out 1 <535>           # cond falseterm
add in 2 <532 535> out 1 <536>           # cond result
mul in 2 <143 107> out 1 <537>           # cond trueterm
const-mul-neg-1 in 1 <143> out 1 <538>   # cond minuscond
add in 2 <100 538> out 1 <539>           # cond negcond
mul in 2 <539 0> out 1 <540>             # cond falseterm
add in 2 <537 540> out 1 <541>           # cond result
const-mul-ffffffff in 1 <541> out 1 <542> # multiply-by-constant 4294967295
add in 2 <541 536> out 1 <543>           # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
add in 2 <543 542> out 1 <544>           # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <544> out 1 <545> # multiply-by-constant 4294967295
add in 2 <543 545> out 1 <546>           # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <541> out 1 <547> # multiply-by-constant 4294967295
add in 2 <536 547> out 1 <548>           # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <548> out 132 <549 550 551 552 553 554 555 556 557 558 559 560 561 562 563 564 565 566 567 568 569 570 571 572 573 574 575 576 577 578 579 580 581 582 583 584 585 586 587 588 589 590 591 592 593 594 595 596 597 598 599 600 601 602 603 604 605 606 607 608 609 610 611 612 613 614 615 616 617 618 619 620 621 622 623 624 625 626 627 628 629 630 631 632 633 634 635 636 637 638 639 640 641 642 643 644 645 646 647 648 649 650 651 652 653 654 655 656 657 658 659 660 661 662 663 664 665 666 667 668 669 670 671 672 673 674 675 676 677 678 679 680> # SplitBus
mul in 2 <580 546> out 1 <681>           # cond trueterm
const-mul-neg-1 in 1 <580> out 1 <682>   # cond minuscond
add in 2 <100 682> out 1 <683>           # cond negcond
mul in 2 <683 536> out 1 <684>           # cond falseterm
add in 2 <681 684> out 1 <685>           # cond result
const-mul-ffffffff in 1 <685> out 1 <686> # multiply-by-constant 4294967295
add in 2 <685 531> out 1 <687>           # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
add in 2 <687 686> out 1 <688>           # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <688> out 1 <689> # multiply-by-constant 4294967295
add in 2 <687 689> out 1 <690>           # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <685> out 1 <691> # multiply-by-constant 4294967295
add in 2 <531 691> out 1 <692>           # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <692> out 199 <693 694 695 696 697 698 699 700 701 702 703 704 705 706 707 708 709 710 711 712 713 714 715 716 717 718 719 720 721 722 723 724 725 726 727 728 729 730 731 732 733 734 735 736 737 738 739 740 741 742 743 744 745 746 747 748 749 750 751 752 753 754 755 756 757 758 759 760 761 762 763 764 765 766 767 768 769 770 771 772 773 774 775 776 777 778 779 780 781 782 783 784 785 786 787 788 789 790 791 792 793 794 795 796 797 798 799 800 801 802 803 804 805 806 807 808 809 810 811 812 813 814 815 816 817 818 819 820 821 822 823 824 825 826 827 828 829 830 831 832 833 834 835 836 837 838 839 840 841 842 843 844 845 846 847 848 849 850 851 852 853 854 855 856 857 858 859 860 861 862 863 864 865 866 867 868 869 870 871 872 873 874 875 876 877 878 879 880 881 882 883 884 885 886 887 888 889 890 891> # SplitBus
mul in 2 <724 690> out 1 <892>           # cond trueterm
const-mul-neg-1 in 1 <724> out 1 <893>   # cond minuscond
add in 2 <100 893> out 1 <894>           # cond negcond
mul in 2 <894 531> out 1 <895>           # cond falseterm
add in 2 <892 895> out 1 <896>           # cond result
const-mul-ffffffff in 1 <896> out 1 <897> # multiply-by-constant 4294967295
const-mul-ffffffff in 1 <327> out 1 <898> # multiply-by-constant 4294967295
add in 2 <326 898> out 1 <899>           # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
mul in 2 <361 899> out 1 <900>           # cond trueterm
const-mul-neg-1 in 1 <361> out 1 <901>   # cond minuscond
add in 2 <100 901> out 1 <902>           # cond negcond
mul in 2 <902 3> out 1 <903>             # cond falseterm
add in 2 <900 903> out 1 <904>           # cond result
const-mul-ffffffff in 1 <904> out 1 <905> # multiply-by-constant 4294967295
add in 2 <904 4> out 1 <906>             # ArithBusReq.AddReq(DFG.Conditional,DFG.Input)
split in 1 <906> out 231 <907 908 909 910 911 912 913 914 915 916 917 918 919 920 921 922 923 924 925 926 927 928 929 930 931 932 933 934 935 936 937 938 939 940 941 942 943 944 945 946 947 948 949 950 951 952 953 954 955 956 957 958 959 960 961 962 963 964 965 966 967 968 969 970 971 972 973 974 975 976 977 978 979 980 981 982 983 984 985 986 987 988 989 990 991 992 993 994 995 996 997 998 999 1000 1001 1002 1003 1004 1005 1006 1007 1008 1009 1010 1011 1012 1013 1014 1015 1016 1017 1018 1019 1020 1021 1022 1023 1024 1025 1026 1027 1028 1029 1030 1031 1032 1033 1034 1035 1036 1037 1038 1039 1040 1041 1042 1043 1044 1045 1046 1047 1048 1049 1050 1051 1052 1053 1054 1055 1056 1057 1058 1059 1060 1061 1062 1063 1064 1065 1066 1067 1068 1069 1070 1071 1072 1073 1074 1075 1076 1077 1078 1079 1080 1081 1082 1083 1084 1085 1086 1087 1088 1089 1090 1091 1092 1093 1094 1095 1096 1097 1098 1099 1100 1101 1102 1103 1104 1105 1106 1107 1108 1109 1110 1111 1112 1113 1114 1115 1116 1117 1118 1119 1120 1121 1122 1123 1124 1125 1126 1127 1128 1129 1130 1131 1132 1133 1134 1135 1136 1137> # SplitBus
const-mul-2 in 1 <938> out 1 <1138>      # join source bit 31
add in 2 <937 1138> out 1 <1139>         # join source bit 30
const-mul-2 in 1 <1139> out 1 <1140>     # join
add in 2 <936 1140> out 1 <1141>         # join source bit 29
const-mul-2 in 1 <1141> out 1 <1142>     # join
add in 2 <935 1142> out 1 <1143>         # join source bit 28
const-mul-2 in 1 <1143> out 1 <1144>     # join
add in 2 <934 1144> out 1 <1145>         # join source bit 27
const-mul-2 in 1 <1145> out 1 <1146>     # join
add in 2 <933 1146> out 1 <1147>         # join source bit 26
const-mul-2 in 1 <1147> out 1 <1148>     # join
add in 2 <932 1148> out 1 <1149>         # join source bit 25
const-mul-2 in 1 <1149> out 1 <1150>     # join
add in 2 <931 1150> out 1 <1151>         # join source bit 24
const-mul-2 in 1 <1151> out 1 <1152>     # join
add in 2 <930 1152> out 1 <1153>         # join source bit 23
const-mul-2 in 1 <1153> out 1 <1154>     # join
add in 2 <929 1154> out 1 <1155>         # join source bit 22
const-mul-2 in 1 <1155> out 1 <1156>     # join
add in 2 <928 1156> out 1 <1157>         # join source bit 21
const-mul-2 in 1 <1157> out 1 <1158>     # join
add in 2 <927 1158> out 1 <1159>         # join source bit 20
const-mul-2 in 1 <1159> out 1 <1160>     # join
add in 2 <926 1160> out 1 <1161>         # join source bit 19
const-mul-2 in 1 <1161> out 1 <1162>     # join
add in 2 <925 1162> out 1 <1163>         # join source bit 18
const-mul-2 in 1 <1163> out 1 <1164>     # join
add in 2 <924 1164> out 1 <1165>         # join source bit 17
const-mul-2 in 1 <1165> out 1 <1166>     # join
add in 2 <923 1166> out 1 <1167>         # join source bit 16
const-mul-2 in 1 <1167> out 1 <1168>     # join
add in 2 <922 1168> out 1 <1169>         # join source bit 15
const-mul-2 in 1 <1169> out 1 <1170>     # join
add in 2 <921 1170> out 1 <1171>         # join source bit 14
const-mul-2 in 1 <1171> out 1 <1172>     # join
add in 2 <920 1172> out 1 <1173>         # join source bit 13
const-mul-2 in 1 <1173> out 1 <1174>     # join
add in 2 <919 1174> out 1 <1175>         # join source bit 12
const-mul-2 in 1 <1175> out 1 <1176>     # join
add in 2 <918 1176> out 1 <1177>         # join source bit 11
const-mul-2 in 1 <1177> out 1 <1178>     # join
add in 2 <917 1178> out 1 <1179>         # join source bit 10
const-mul-2 in 1 <1179> out 1 <1180>     # join
add in 2 <916 1180> out 1 <1181>         # join source bit 9
const-mul-2 in 1 <1181> out 1 <1182>     # join
add in 2 <915 1182> out 1 <1183>         # join source bit 8
const-mul-2 in 1 <1183> out 1 <1184>     # join
add in 2 <914 1184> out 1 <1185>         # join source bit 7
const-mul-2 in 1 <1185> out 1 <1186>     # join
add in 2 <913 1186> out 1 <1187>         # join source bit 6
const-mul-2 in 1 <1187> out 1 <1188>     # join
add in 2 <912 1188> out 1 <1189>         # join source bit 5
const-mul-2 in 1 <1189> out 1 <1190>     # join
add in 2 <911 1190> out 1 <1191>         # join source bit 4
const-mul-2 in 1 <1191> out 1 <1192>     # join
add in 2 <910 1192> out 1 <1193>         # join source bit 3
const-mul-2 in 1 <1193> out 1 <1194>     # join
add in 2 <909 1194> out 1 <1195>         # join source bit 2
const-mul-2 in 1 <1195> out 1 <1196>     # join
add in 2 <908 1196> out 1 <1197>         # join source bit 1
const-mul-2 in 1 <1197> out 1 <1198>     # join
add in 2 <907 1198> out 1 <1199>         # join source bit 0
add in 2 <1199 1199> out 1 <1200>        # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <904> out 1 <1201> # multiply-by-constant 4294967295
add in 2 <4 1201> out 1 <1202>           # 'CmpLT DFG.Input - DFG.Conditional'
split in 1 <1202> out 263 <1203 1204 1205 1206 1207 1208 1209 1210 1211 1212 1213 1214 1215 1216 1217 1218 1219 1220 1221 1222 1223 1224 1225 1226 1227 1228 1229 1230 1231 1232 1233 1234 1235 1236 1237 1238 1239 1240 1241 1242 1243 1244 1245 1246 1247 1248 1249 1250 1251 1252 1253 1254 1255 1256 1257 1258 1259 1260 1261 1262 1263 1264 1265 1266 1267 1268 1269 1270 1271 1272 1273 1274 1275 1276 1277 1278 1279 1280 1281 1282 1283 1284 1285 1286 1287 1288 1289 1290 1291 1292 1293 1294 1295 1296 1297 1298 1299 1300 1301 1302 1303 1304 1305 1306 1307 1308 1309 1310 1311 1312 1313 1314 1315 1316 1317 1318 1319 1320 1321 1322 1323 1324 1325 1326 1327 1328 1329 1330 1331 1332 1333 1334 1335 1336 1337 1338 1339 1340 1341 1342 1343 1344 1345 1346 1347 1348 1349 1350 1351 1352 1353 1354 1355 1356 1357 1358 1359 1360 1361 1362 1363 1364 1365 1366 1367 1368 1369 1370 1371 1372 1373 1374 1375 1376 1377 1378 1379 1380 1381 1382 1383 1384 1385 1386 1387 1388 1389 1390 1391 1392 1393 1394 1395 1396 1397 1398 1399 1400 1401 1402 1403 1404 1405 1406 1407 1408 1409 1410 1411 1412 1413 1414 1415 1416 1417 1418 1419 1420 1421 1422 1423 1424 1425 1426 1427 1428 1429 1430 1431 1432 1433 1434 1435 1436 1437 1438 1439 1440 1441 1442 1443 1444 1445 1446 1447 1448 1449 1450 1451 1452 1453 1454 1455 1456 1457 1458 1459 1460 1461 1462 1463 1464 1465> # SplitBus
mul in 2 <1234 1200> out 1 <1466>        # cond trueterm
const-mul-neg-1 in 1 <1234> out 1 <1467> # cond minuscond
add in 2 <100 1467> out 1 <1468>         # cond negcond
mul in 2 <1468 904> out 1 <1469>         # cond falseterm
add in 2 <1466 1469> out 1 <1470>        # cond result
add in 2 <896 1470> out 1 <1471>         # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
split in 1 <1471> out 233 <1472 1473 1474 1475 1476 1477 1478 1479 1480 1481 1482 1483 1484 1485 1486 1487 1488 1489 1490 1491 1492 1493 1494 1495 1496 1497 1498 1499 1500 1501 1502 1503 1504 1505 1506 1507 1508 1509 1510 1511 1512 1513 1514 1515 1516 1517 1518 1519 1520 1521 1522 1523 1524 1525 1526 1527 1528 1529 1530 1531 1532 1533 1534 1535 1536 1537 1538 1539 1540 1541 1542 1543 1544 1545 1546 1547 1548 1549 1550 1551 1552 1553 1554 1555 1556 1557 1558 1559 1560 1561 1562 1563 1564 1565 1566 1567 1568 1569 1570 1571 1572 1573 1574 1575 1576 1577 1578 1579 1580 1581 1582 1583 1584 1585 1586 1587 1588 1589 1590 1591 1592 1593 1594 1595 1596 1597 1598 1599 1600 1601 1602 1603 1604 1605 1606 1607 1608 1609 1610 1611 1612 1613 1614 1615 1616 1617 1618 1619 1620 1621 1622 1623 1624 1625 1626 1627 1628 1629 1630 1631 1632 1633 1634 1635 1636 1637 1638 1639 1640 1641 1642 1643 1644 1645 1646 1647 1648 1649 1650 1651 1652 1653 1654 1655 1656 1657 1658 1659 1660 1661 1662 1663 1664 1665 1666 1667 1668 1669 1670 1671 1672 1673 1674 1675 1676 1677 1678 1679 1680 1681 1682 1683 1684 1685 1686 1687 1688 1689 1690 1691 1692 1693 1694 1695 1696 1697 1698 1699 1700 1701 1702 1703 1704> # SplitBus
const-mul-2 in 1 <1503> out 1 <1705>     # join source bit 31
add in 2 <1502 1705> out 1 <1706>        # join source bit 30
const-mul-2 in 1 <1706> out 1 <1707>     # join
add in 2 <1501 1707> out 1 <1708>        # join source bit 29
const-mul-2 in 1 <1708> out 1 <1709>     # join
add in 2 <1500 1709> out 1 <1710>        # join source bit 28
const-mul-2 in 1 <1710> out 1 <1711>     # join
add in 2 <1499 1711> out 1 <1712>        # join source bit 27
const-mul-2 in 1 <1712> out 1 <1713>     # join
add in 2 <1498 1713> out 1 <1714>        # join source bit 26
const-mul-2 in 1 <1714> out 1 <1715>     # join
add in 2 <1497 1715> out 1 <1716>        # join source bit 25
const-mul-2 in 1 <1716> out 1 <1717>     # join
add in 2 <1496 1717> out 1 <1718>        # join source bit 24
const-mul-2 in 1 <1718> out 1 <1719>     # join
add in 2 <1495 1719> out 1 <1720>        # join source bit 23
const-mul-2 in 1 <1720> out 1 <1721>     # join
add in 2 <1494 1721> out 1 <1722>        # join source bit 22
const-mul-2 in 1 <1722> out 1 <1723>     # join
add in 2 <1493 1723> out 1 <1724>        # join source bit 21
const-mul-2 in 1 <1724> out 1 <1725>     # join
add in 2 <1492 1725> out 1 <1726>        # join source bit 20
const-mul-2 in 1 <1726> out 1 <1727>     # join
add in 2 <1491 1727> out 1 <1728>        # join source bit 19
const-mul-2 in 1 <1728> out 1 <1729>     # join
add in 2 <1490 1729> out 1 <1730>        # join source bit 18
const-mul-2 in 1 <1730> out 1 <1731>     # join
add in 2 <1489 1731> out 1 <1732>        # join source bit 17
const-mul-2 in 1 <1732> out 1 <1733>     # join
add in 2 <1488 1733> out 1 <1734>        # join source bit 16
const-mul-2 in 1 <1734> out 1 <1735>     # join
add in 2 <1487 1735> out 1 <1736>        # join source bit 15
const-mul-2 in 1 <1736> out 1 <1737>     # join
add in 2 <1486 1737> out 1 <1738>        # join source bit 14
const-mul-2 in 1 <1738> out 1 <1739>     # join
add in 2 <1485 1739> out 1 <1740>        # join source bit 13
const-mul-2 in 1 <1740> out 1 <1741>     # join
add in 2 <1484 1741> out 1 <1742>        # join source bit 12
const-mul-2 in 1 <1742> out 1 <1743>     # join
add in 2 <1483 1743> out 1 <1744>        # join source bit 11
const-mul-2 in 1 <1744> out 1 <1745>     # join
add in 2 <1482 1745> out 1 <1746>        # join source bit 10
const-mul-2 in 1 <1746> out 1 <1747>     # join
add in 2 <1481 1747> out 1 <1748>        # join source bit 9
const-mul-2 in 1 <1748> out 1 <1749>     # join
add in 2 <1480 1749> out 1 <1750>        # join source bit 8
const-mul-2 in 1 <1750> out 1 <1751>     # join
add in 2 <1479 1751> out 1 <1752>        # join source bit 7
const-mul-2 in 1 <1752> out 1 <1753>     # join
add in 2 <1478 1753> out 1 <1754>        # join source bit 6
const-mul-2 in 1 <1754> out 1 <1755>     # join
add in 2 <1477 1755> out 1 <1756>        # join source bit 5
const-mul-2 in 1 <1756> out 1 <1757>     # join
add in 2 <1476 1757> out 1 <1758>        # join source bit 4
const-mul-2 in 1 <1758> out 1 <1759>     # join
add in 2 <1475 1759> out 1 <1760>        # join source bit 3
const-mul-2 in 1 <1760> out 1 <1761>     # join
add in 2 <1474 1761> out 1 <1762>        # join source bit 2
const-mul-2 in 1 <1762> out 1 <1763>     # join
add in 2 <1473 1763> out 1 <1764>        # join source bit 1
const-mul-2 in 1 <1764> out 1 <1765>     # join
add in 2 <1472 1765> out 1 <1766>        # join source bit 0
add in 2 <1766 1766> out 1 <1767>        # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <896> out 1 <1768> # multiply-by-constant 4294967295
add in 2 <1470 1768> out 1 <1769>        # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <1769> out 265 <1770 1771 1772 1773 1774 1775 1776 1777 1778 1779 1780 1781 1782 1783 1784 1785 1786 1787 1788 1789 1790 1791 1792 1793 1794 1795 1796 1797 1798 1799 1800 1801 1802 1803 1804 1805 1806 1807 1808 1809 1810 1811 1812 1813 1814 1815 1816 1817 1818 1819 1820 1821 1822 1823 1824 1825 1826 1827 1828 1829 1830 1831 1832 1833 1834 1835 1836 1837 1838 1839 1840 1841 1842 1843 1844 1845 1846 1847 1848 1849 1850 1851 1852 1853 1854 1855 1856 1857 1858 1859 1860 1861 1862 1863 1864 1865 1866 1867 1868 1869 1870 1871 1872 1873 1874 1875 1876 1877 1878 1879 1880 1881 1882 1883 1884 1885 1886 1887 1888 1889 1890 1891 1892 1893 1894 1895 1896 1897 1898 1899 1900 1901 1902 1903 1904 1905 1906 1907 1908 1909 1910 1911 1912 1913 1914 1915 1916 1917 1918 1919 1920 1921 1922 1923 1924 1925 1926 1927 1928 1929 1930 1931 1932 1933 1934 1935 1936 1937 1938 1939 1940 1941 1942 1943 1944 1945 1946 1947 1948 1949 1950 1951 1952 1953 1954 1955 1956 1957 1958 1959 1960 1961 1962 1963 1964 1965 1966 1967 1968 1969 1970 1971 1972 1973 1974 1975 1976 1977 1978 1979 1980 1981 1982 1983 1984 1985 1986 1987 1988 1989 1990 1991 1992 1993 1994 1995 1996 1997 1998 1999 2000 2001 2002 2003 2004 2005 2006 2007 2008 2009 2010 2011 2012 2013 2014 2015 2016 2017 2018 2019 2020 2021 2022 2023 2024 2025 2026 2027 2028 2029 2030 2031 2032 2033 2034> # SplitBus
mul in 2 <1801 1767> out 1 <2035>        # cond trueterm
const-mul-neg-1 in 1 <1801> out 1 <2036> # cond minuscond
add in 2 <100 2036> out 1 <2037>         # cond negcond
mul in 2 <2037 896> out 1 <2038>         # cond falseterm
add in 2 <2035 2038> out 1 <2039>        # cond result
mul in 2 <724 688> out 1 <2040>          # cond trueterm
const-mul-neg-1 in 1 <724> out 1 <2041>  # cond minuscond
add in 2 <100 2041> out 1 <2042>         # cond negcond
mul in 2 <2042 685> out 1 <2043>         # cond falseterm
add in 2 <2040 2043> out 1 <2044>        # cond result
mul in 2 <580 544> out 1 <2045>          # cond trueterm
const-mul-neg-1 in 1 <580> out 1 <2046>  # cond minuscond
add in 2 <100 2046> out 1 <2047>         # cond negcond
mul in 2 <2047 541> out 1 <2048>         # cond falseterm
add in 2 <2045 2048> out 1 <2049>        # cond result
const-mul-ffffffff in 1 <2049> out 1 <2050> # multiply-by-constant 4294967295
add in 2 <2049 2044> out 1 <2051>        # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
add in 2 <2051 2050> out 1 <2052>        # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <2052> out 1 <2053> # multiply-by-constant 4294967295
add in 2 <2051 2053> out 1 <2054>        # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <2049> out 1 <2055> # multiply-by-constant 4294967295
add in 2 <2044 2055> out 1 <2056>        # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <2056> out 200 <2057 2058 2059 2060 2061 2062 2063 2064 2065 2066 2067 2068 2069 2070 2071 2072 2073 2074 2075 2076 2077 2078 2079 2080 2081 2082 2083 2084 2085 2086 2087 2088 2089 2090 2091 2092 2093 2094 2095 2096 2097 2098 2099 2100 2101 2102 2103 2104 2105 2106 2107 2108 2109 2110 2111 2112 2113 2114 2115 2116 2117 2118 2119 2120 2121 2122 2123 2124 2125 2126 2127 2128 2129 2130 2131 2132 2133 2134 2135 2136 2137 2138 2139 2140 2141 2142 2143 2144 2145 2146 2147 2148 2149 2150 2151 2152 2153 2154 2155 2156 2157 2158 2159 2160 2161 2162 2163 2164 2165 2166 2167 2168 2169 2170 2171 2172 2173 2174 2175 2176 2177 2178 2179 2180 2181 2182 2183 2184 2185 2186 2187 2188 2189 2190 2191 2192 2193 2194 2195 2196 2197 2198 2199 2200 2201 2202 2203 2204 2205 2206 2207 2208 2209 2210 2211 2212 2213 2214 2215 2216 2217 2218 2219 2220 2221 2222 2223 2224 2225 2226 2227 2228 2229 2230 2231 2232 2233 2234 2235 2236 2237 2238 2239 2240 2241 2242 2243 2244 2245 2246 2247 2248 2249 2250 2251 2252 2253 2254 2255 2256> # SplitBus
mul in 2 <2088 2054> out 1 <2257>        # cond trueterm
const-mul-neg-1 in 1 <2088> out 1 <2258> # cond minuscond
add in 2 <100 2258> out 1 <2259>         # cond negcond
mul in 2 <2259 2044> out 1 <2260>        # cond falseterm
add in 2 <2257 2260> out 1 <2261>        # cond result
const-mul-ffffffff in 1 <2261> out 1 <2262> # multiply-by-constant 4294967295
add in 2 <2261 2039> out 1 <2263>        # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
split in 1 <2263> out 235 <2264 2265 2266 2267 2268 2269 2270 2271 2272 2273 2274 2275 2276 2277 2278 2279 2280 2281 2282 2283 2284 2285 2286 2287 2288 2289 2290 2291 2292 2293 2294 2295 2296 2297 2298 2299 2300 2301 2302 2303 2304 2305 2306 2307 2308 2309 2310 2311 2312 2313 2314 2315 2316 2317 2318 2319 2320 2321 2322 2323 2324 2325 2326 2327 2328 2329 2330 2331 2332 2333 2334 2335 2336 2337 2338 2339 2340 2341 2342 2343 2344 2345 2346 2347 2348 2349 2350 2351 2352 2353 2354 2355 2356 2357 2358 2359 2360 2361 2362 2363 2364 2365 2366 2367 2368 2369 2370 2371 2372 2373 2374 2375 2376 2377 2378 2379 2380 2381 2382 2383 2384 2385 2386 2387 2388 2389 2390 2391 2392 2393 2394 2395 2396 2397 2398 2399 2400 2401 2402 2403 2404 2405 2406 2407 2408 2409 2410 2411 2412 2413 2414 2415 2416 2417 2418 2419 2420 2421 2422 2423 2424 2425 2426 2427 2428 2429 2430 2431 2432 2433 2434 2435 2436 2437 2438 2439 2440 2441 2442 2443 2444 2445 2446 2447 2448 2449 2450 2451 2452 2453 2454 2455 2456 2457 2458 2459 2460 2461 2462 2463 2464 2465 2466 2467 2468 2469 2470 2471 2472 2473 2474 2475 2476 2477 2478 2479 2480 2481 2482 2483 2484 2485 2486 2487 2488 2489 2490 2491 2492 2493 2494 2495 2496 2497 2498> # SplitBus
const-mul-2 in 1 <2295> out 1 <2499>     # join source bit 31
add in 2 <2294 2499> out 1 <2500>        # join source bit 30
const-mul-2 in 1 <2500> out 1 <2501>     # join
add in 2 <2293 2501> out 1 <2502>        # join source bit 29
const-mul-2 in 1 <2502> out 1 <2503>     # join
add in 2 <2292 2503> out 1 <2504>        # join source bit 28
const-mul-2 in 1 <2504> out 1 <2505>     # join
add in 2 <2291 2505> out 1 <2506>        # join source bit 27
const-mul-2 in 1 <2506> out 1 <2507>     # join
add in 2 <2290 2507> out 1 <2508>        # join source bit 26
const-mul-2 in 1 <2508> out 1 <2509>     # join
add in 2 <2289 2509> out 1 <2510>        # join source bit 25
const-mul-2 in 1 <2510> out 1 <2511>     # join
add in 2 <2288 2511> out 1 <2512>        # join source bit 24
const-mul-2 in 1 <2512> out 1 <2513>     # join
add in 2 <2287 2513> out 1 <2514>        # join source bit 23
const-mul-2 in 1 <2514> out 1 <2515>     # join
add in 2 <2286 2515> out 1 <2516>        # join source bit 22
const-mul-2 in 1 <2516> out 1 <2517>     # join
add in 2 <2285 2517> out 1 <2518>        # join source bit 21
const-mul-2 in 1 <2518> out 1 <2519>     # join
add in 2 <2284 2519> out 1 <2520>        # join source bit 20
const-mul-2 in 1 <2520> out 1 <2521>     # join
add in 2 <2283 2521> out 1 <2522>        # join source bit 19
const-mul-2 in 1 <2522> out 1 <2523>     # join
add in 2 <2282 2523> out 1 <2524>        # join source bit 18
const-mul-2 in 1 <2524> out 1 <2525>     # join
add in 2 <2281 2525> out 1 <2526>        # join source bit 17
const-mul-2 in 1 <2526> out 1 <2527>     # join
add in 2 <2280 2527> out 1 <2528>        # join source bit 16
const-mul-2 in 1 <2528> out 1 <2529>     # join
add in 2 <2279 2529> out 1 <2530>        # join source bit 15
const-mul-2 in 1 <2530> out 1 <2531>     # join
add in 2 <2278 2531> out 1 <2532>        # join source bit 14
const-mul-2 in 1 <2532> out 1 <2533>     # join
add in 2 <2277 2533> out 1 <2534>        # join source bit 13
const-mul-2 in 1 <2534> out 1 <2535>     # join
add in 2 <2276 2535> out 1 <2536>        # join source bit 12
const-mul-2 in 1 <2536> out 1 <2537>     # join
add in 2 <2275 2537> out 1 <2538>        # join source bit 11
const-mul-2 in 1 <2538> out 1 <2539>     # join
add in 2 <2274 2539> out 1 <2540>        # join source bit 10
const-mul-2 in 1 <2540> out 1 <2541>     # join
add in 2 <2273 2541> out 1 <2542>        # join source bit 9
const-mul-2 in 1 <2542> out 1 <2543>     # join
add in 2 <2272 2543> out 1 <2544>        # join source bit 8
const-mul-2 in 1 <2544> out 1 <2545>     # join
add in 2 <2271 2545> out 1 <2546>        # join source bit 7
const-mul-2 in 1 <2546> out 1 <2547>     # join
add in 2 <2270 2547> out 1 <2548>        # join source bit 6
const-mul-2 in 1 <2548> out 1 <2549>     # join
add in 2 <2269 2549> out 1 <2550>        # join source bit 5
const-mul-2 in 1 <2550> out 1 <2551>     # join
add in 2 <2268 2551> out 1 <2552>        # join source bit 4
const-mul-2 in 1 <2552> out 1 <2553>     # join
add in 2 <2267 2553> out 1 <2554>        # join source bit 3
const-mul-2 in 1 <2554> out 1 <2555>     # join
add in 2 <2266 2555> out 1 <2556>        # join source bit 2
const-mul-2 in 1 <2556> out 1 <2557>     # join
add in 2 <2265 2557> out 1 <2558>        # join source bit 1
const-mul-2 in 1 <2558> out 1 <2559>     # join
add in 2 <2264 2559> out 1 <2560>        # join source bit 0
add in 2 <2560 2560> out 1 <2561>        # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <2561> out 1 <2562> # multiply-by-constant 4294967295
add in 2 <2263 2562> out 1 <2563>        # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <2261> out 1 <2564> # multiply-by-constant 4294967295
add in 2 <2039 2564> out 1 <2565>        # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <2565> out 267 <2566 2567 2568 2569 2570 2571 2572 2573 2574 2575 2576 2577 2578 2579 2580 2581 2582 2583 2584 2585 2586 2587 2588 2589 2590 2591 2592 2593 2594 2595 2596 2597 2598 2599 2600 2601 2602 2603 2604 2605 2606 2607 2608 2609 2610 2611 2612 2613 2614 2615 2616 2617 2618 2619 2620 2621 2622 2623 2624 2625 2626 2627 2628 2629 2630 2631 2632 2633 2634 2635 2636 2637 2638 2639 2640 2641 2642 2643 2644 2645 2646 2647 2648 2649 2650 2651 2652 2653 2654 2655 2656 2657 2658 2659 2660 2661 2662 2663 2664 2665 2666 2667 2668 2669 2670 2671 2672 2673 2674 2675 2676 2677 2678 2679 2680 2681 2682 2683 2684 2685 2686 2687 2688 2689 2690 2691 2692 2693 2694 2695 2696 2697 2698 2699 2700 2701 2702 2703 2704 2705 2706 2707 2708 2709 2710 2711 2712 2713 2714 2715 2716 2717 2718 2719 2720 2721 2722 2723 2724 2725 2726 2727 2728 2729 2730 2731 2732 2733 2734 2735 2736 2737 2738 2739 2740 2741 2742 2743 2744 2745 2746 2747 2748 2749 2750 2751 2752 2753 2754 2755 2756 2757 2758 2759 2760 2761 2762 2763 2764 2765 2766 2767 2768 2769 2770 2771 2772 2773 2774 2775 2776 2777 2778 2779 2780 2781 2782 2783 2784 2785 2786 2787 2788 2789 2790 2791 2792 2793 2794 2795 2796 2797 2798 2799 2800 2801 2802 2803 2804 2805 2806 2807 2808 2809 2810 2811 2812 2813 2814 2815 2816 2817 2818 2819 2820 2821 2822 2823 2824 2825 2826 2827 2828 2829 2830 2831 2832> # SplitBus
mul in 2 <2597 2563> out 1 <2833>        # cond trueterm
const-mul-neg-1 in 1 <2597> out 1 <2834> # cond minuscond
add in 2 <100 2834> out 1 <2835>         # cond negcond
mul in 2 <2835 2039> out 1 <2836>        # cond falseterm
add in 2 <2833 2836> out 1 <2837>        # cond result
add in 2 <2837 104> out 1 <2838>         # ArithBusReq.AddReq(DFG.Conditional,DFG.Constant)
const-mul-ffffffff in 1 <2> out 1 <2839> # multiply-by-constant 4294967295
add in 2 <2838 2839> out 1 <2840>        # 'CmpLT DFG.Add - DFG.Input'
split in 1 <2840> out 238 <2841 2842 2843 2844 2845 2846 2847 2848 2849 2850 2851 2852 2853 2854 2855 2856 2857 2858 2859 2860 2861 2862 2863 2864 2865 2866 2867 2868 2869 2870 2871 2872 2873 2874 2875 2876 2877 2878 2879 2880 2881 2882 2883 2884 2885 2886 2887 2888 2889 2890 2891 2892 2893 2894 2895 2896 2897 2898 2899 2900 2901 2902 2903 2904 2905 2906 2907 2908 2909 2910 2911 2912 2913 2914 2915 2916 2917 2918 2919 2920 2921 2922 2923 2924 2925 2926 2927 2928 2929 2930 2931 2932 2933 2934 2935 2936 2937 2938 2939 2940 2941 2942 2943 2944 2945 2946 2947 2948 2949 2950 2951 2952 2953 2954 2955 2956 2957 2958 2959 2960 2961 2962 2963 2964 2965 2966 2967 2968 2969 2970 2971 2972 2973 2974 2975 2976 2977 2978 2979 2980 2981 2982 2983 2984 2985 2986 2987 2988 2989 2990 2991 2992 2993 2994 2995 2996 2997 2998 2999 3000 3001 3002 3003 3004 3005 3006 3007 3008 3009 3010 3011 3012 3013 3014 3015 3016 3017 3018 3019 3020 3021 3022 3023 3024 3025 3026 3027 3028 3029 3030 3031 3032 3033 3034 3035 3036 3037 3038 3039 3040 3041 3042 3043 3044 3045 3046 3047 3048 3049 3050 3051 3052 3053 3054 3055 3056 3057 3058 3059 3060 3061 3062 3063 3064 3065 3066 3067 3068 3069 3070 3071 3072 3073 3074 3075 3076 3077 3078> # SplitBus
mul in 2 <2872 103> out 1 <3079>         # cond trueterm
const-mul-neg-1 in 1 <2872> out 1 <3080> # cond minuscond
add in 2 <100 3080> out 1 <3081>         # cond negcond
mul in 2 <3081 102> out 1 <3082>         # cond falseterm
add in 2 <3079 3082> out 1 <3083>        # cond result
const-mul-ffffffff in 1 <104> out 1 <3084> # multiply-by-constant 4294967295
add in 2 <2837 3084> out 1 <3085>        # ArithBusReq.AddReq(DFG.Conditional,DFG.Negate)
const-mul-ffffffff in 1 <3085> out 1 <3086> # multiply-by-constant 4294967295
add in 2 <2 3086> out 1 <3087>           # 'CmpLT DFG.Input - DFG.Subtract'
split in 1 <3087> out 270 <3088 3089 3090 3091 3092 3093 3094 3095 3096 3097 3098 3099 3100 3101 3102 3103 3104 3105 3106 3107 3108 3109 3110 3111 3112 3113 3114 3115 3116 3117 3118 3119 3120 3121 3122 3123 3124 3125 3126 3127 3128 3129 3130 3131 3132 3133 3134 3135 3136 3137 3138 3139 3140 3141 3142 3143 3144 3145 3146 3147 3148 3149 3150 3151 3152 3153 3154 3155 3156 3157 3158 3159 3160 3161 3162 3163 3164 3165 3166 3167 3168 3169 3170 3171 3172 3173 3174 3175 3176 3177 3178 3179 3180 3181 3182 3183 3184 3185 3186 3187 3188 3189 3190 3191 3192 3193 3194 3195 3196 3197 3198 3199 3200 3201 3202 3203 3204 3205 3206 3207 3208 3209 3210 3211 3212 3213 3214 3215 3216 3217 3218 3219 3220 3221 3222 3223 3224 3225 3226 3227 3228 3229 3230 3231 3232 3233 3234 3235 3236 3237 3238 3239 3240 3241 3242 3243 3244 3245 3246 3247 3248 3249 3250 3251 3252 3253 3254 3255 3256 3257 3258 3259 3260 3261 3262 3263 3264 3265 3266 3267 3268 3269 3270 3271 3272 3273 3274 3275 3276 3277 3278 3279 3280 3281 3282 3283 3284 3285 3286 3287 3288 3289 3290 3291 3292 3293 3294 3295 3296 3297 3298 3299 3300 3301 3302 3303 3304 3305 3306 3307 3308 3309 3310 3311 3312 3313 3314 3315 3316 3317 3318 3319 3320 3321 3322 3323 3324 3325 3326 3327 3328 3329 3330 3331 3332 3333 3334 3335 3336 3337 3338 3339 3340 3341 3342 3343 3344 3345 3346 3347 3348 3349 3350 3351 3352 3353 3354 3355 3356 3357> # SplitBus
mul in 2 <3119 103> out 1 <3358>         # cond trueterm
const-mul-neg-1 in 1 <3119> out 1 <3359> # cond minuscond
add in 2 <100 3359> out 1 <3360>         # cond negcond
mul in 2 <3360 3083> out 1 <3361>        # cond falseterm
add in 2 <3358 3361> out 1 <3362>        # cond result
const-mul-ffffffff in 1 <1> out 1 <3363> # multiply-by-constant 4294967295
add in 2 <1 2> out 1 <3364>              # ArithBusReq.AddReq(DFG.Input,DFG.Input)
add in 2 <3364 3363> out 1 <3365>        # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <3365> out 1 <3366> # multiply-by-constant 4294967295
add in 2 <3364 3366> out 1 <3367>        # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <1> out 1 <3368> # multiply-by-constant 4294967295
add in 2 <2 3368> out 1 <3369>           # 'CmpLT DFG.Input - DFG.Input'
split in 1 <3369> out 65 <3370 3371 3372 3373 3374 3375 3376 3377 3378 3379 3380 3381 3382 3383 3384 3385 3386 3387 3388 3389 3390 3391 3392 3393 3394 3395 3396 3397 3398 3399 3400 3401 3402 3403 3404 3405 3406 3407 3408 3409 3410 3411 3412 3413 3414 3415 3416 3417 3418 3419 3420 3421 3422 3423 3424 3425 3426 3427 3428 3429 3430 3431 3432 3433 3434> # SplitBus
mul in 2 <3401 3367> out 1 <3435>        # cond trueterm
const-mul-neg-1 in 1 <3401> out 1 <3436> # cond minuscond
add in 2 <100 3436> out 1 <3437>         # cond negcond
mul in 2 <3437 2> out 1 <3438>           # cond falseterm
add in 2 <3435 3438> out 1 <3439>        # cond result
const-mul-ffffffff in 1 <3439> out 1 <3440> # multiply-by-constant 4294967295
add in 2 <3439 3> out 1 <3441>           # ArithBusReq.AddReq(DFG.Conditional,DFG.Input)
add in 2 <3441 3440> out 1 <3442>        # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <3442> out 1 <3443> # multiply-by-constant 4294967295
add in 2 <3441 3443> out 1 <3444>        # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <3439> out 1 <3445> # multiply-by-constant 4294967295
add in 2 <3 3445> out 1 <3446>           # 'CmpLT DFG.Input - DFG.Conditional'
split in 1 <3446> out 131 <3447 3448 3449 3450 3451 3452 3453 3454 3455 3456 3457 3458 3459 3460 3461 3462 3463 3464 3465 3466 3467 3468 3469 3470 3471 3472 3473 3474 3475 3476 3477 3478 3479 3480 3481 3482 3483 3484 3485 3486 3487 3488 3489 3490 3491 3492 3493 3494 3495 3496 3497 3498 3499 3500 3501 3502 3503 3504 3505 3506 3507 3508 3509 3510 3511 3512 3513 3514 3515 3516 3517 3518 3519 3520 3521 3522 3523 3524 3525 3526 3527 3528 3529 3530 3531 3532 3533 3534 3535 3536 3537 3538 3539 3540 3541 3542 3543 3544 3545 3546 3547 3548 3549 3550 3551 3552 3553 3554 3555 3556 3557 3558 3559 3560 3561 3562 3563 3564 3565 3566 3567 3568 3569 3570 3571 3572 3573 3574 3575 3576 3577> # SplitBus
mul in 2 <3478 3444> out 1 <3578>        # cond trueterm
const-mul-neg-1 in 1 <3478> out 1 <3579> # cond minuscond
add in 2 <100 3579> out 1 <3580>         # cond negcond
mul in 2 <3580 3> out 1 <3581>           # cond falseterm
add in 2 <3578 3581> out 1 <3582>        # cond result
const-mul-ffffffff in 1 <3582> out 1 <3583> # multiply-by-constant 4294967295
add in 2 <3582 4> out 1 <3584>           # ArithBusReq.AddReq(DFG.Conditional,DFG.Input)
add in 2 <3584 3583> out 1 <3585>        # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <3582> out 1 <3586> # multiply-by-constant 4294967295
add in 2 <4 3586> out 1 <3587>           # 'CmpLT DFG.Input - DFG.Conditional'
split in 1 <3587> out 197 <3588 3589 3590 3591 3592 3593 3594 3595 3596 3597 3598 3599 3600 3601 3602 3603 3604 3605 3606 3607 3608 3609 3610 3611 3612 3613 3614 3615 3616 3617 3618 3619 3620 3621 3622 3623 3624 3625 3626 3627 3628 3629 3630 3631 3632 3633 3634 3635 3636 3637 3638 3639 3640 3641 3642 3643 3644 3645 3646 3647 3648 3649 3650 3651 3652 3653 3654 3655 3656 3657 3658 3659 3660 3661 3662 3663 3664 3665 3666 3667 3668 3669 3670 3671 3672 3673 3674 3675 3676 3677 3678 3679 3680 3681 3682 3683 3684 3685 3686 3687 3688 3689 3690 3691 3692 3693 3694 3695 3696 3697 3698 3699 3700 3701 3702 3703 3704 3705 3706 3707 3708 3709 3710 3711 3712 3713 3714 3715 3716 3717 3718 3719 3720 3721 3722 3723 3724 3725 3726 3727 3728 3729 3730 3731 3732 3733 3734 3735 3736 3737 3738 3739 3740 3741 3742 3743 3744 3745 3746 3747 3748 3749 3750 3751 3752 3753 3754 3755 3756 3757 3758 3759 3760 3761 3762 3763 3764 3765 3766 3767 3768 3769 3770 3771 3772 3773 3774 3775 3776 3777 3778 3779 3780 3781 3782 3783 3784> # SplitBus
mul in 2 <3619 3585> out 1 <3785>        # cond trueterm
const-mul-neg-1 in 1 <3619> out 1 <3786> # cond minuscond
add in 2 <100 3786> out 1 <3787>         # cond negcond
mul in 2 <3787 3582> out 1 <3788>        # cond falseterm
add in 2 <3785 3788> out 1 <3789>        # cond result
mul in 2 <3478 3442> out 1 <3790>        # cond trueterm
const-mul-neg-1 in 1 <3478> out 1 <3791> # cond minuscond
add in 2 <100 3791> out 1 <3792>         # cond negcond
mul in 2 <3792 3439> out 1 <3793>        # cond falseterm
add in 2 <3790 3793> out 1 <3794>        # cond result
mul in 2 <3401 3365> out 1 <3795>        # cond trueterm
const-mul-neg-1 in 1 <3401> out 1 <3796> # cond minuscond
add in 2 <100 3796> out 1 <3797>         # cond negcond
mul in 2 <3797 1> out 1 <3798>           # cond falseterm
add in 2 <3795 3798> out 1 <3799>        # cond result
const-mul-ffffffff in 1 <3799> out 1 <3800> # multiply-by-constant 4294967295
add in 2 <3799 3794> out 1 <3801>        # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
add in 2 <3801 3800> out 1 <3802>        # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <3802> out 1 <3803> # multiply-by-constant 4294967295
add in 2 <3801 3803> out 1 <3804>        # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <3799> out 1 <3805> # multiply-by-constant 4294967295
add in 2 <3794 3805> out 1 <3806>        # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <3806> out 132 <3807 3808 3809 3810 3811 3812 3813 3814 3815 3816 3817 3818 3819 3820 3821 3822 3823 3824 3825 3826 3827 3828 3829 3830 3831 3832 3833 3834 3835 3836 3837 3838 3839 3840 3841 3842 3843 3844 3845 3846 3847 3848 3849 3850 3851 3852 3853 3854 3855 3856 3857 3858 3859 3860 3861 3862 3863 3864 3865 3866 3867 3868 3869 3870 3871 3872 3873 3874 3875 3876 3877 3878 3879 3880 3881 3882 3883 3884 3885 3886 3887 3888 3889 3890 3891 3892 3893 3894 3895 3896 3897 3898 3899 3900 3901 3902 3903 3904 3905 3906 3907 3908 3909 3910 3911 3912 3913 3914 3915 3916 3917 3918 3919 3920 3921 3922 3923 3924 3925 3926 3927 3928 3929 3930 3931 3932 3933 3934 3935 3936 3937 3938> # SplitBus
mul in 2 <3838 3804> out 1 <3939>        # cond trueterm
const-mul-neg-1 in 1 <3838> out 1 <3940> # cond minuscond
add in 2 <100 3940> out 1 <3941>         # cond negcond
mul in 2 <3941 3794> out 1 <3942>        # cond falseterm
add in 2 <3939 3942> out 1 <3943>        # cond result
const-mul-ffffffff in 1 <3943> out 1 <3944> # multiply-by-constant 4294967295
add in 2 <3943 3789> out 1 <3945>        # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
add in 2 <3945 3944> out 1 <3946>        # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <3946> out 1 <3947> # multiply-by-constant 4294967295
add in 2 <3945 3947> out 1 <3948>        # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <3943> out 1 <3949> # multiply-by-constant 4294967295
add in 2 <3789 3949> out 1 <3950>        # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <3950> out 199 <3951 3952 3953 3954 3955 3956 3957 3958 3959 3960 3961 3962 3963 3964 3965 3966 3967 3968 3969 3970 3971 3972 3973 3974 3975 3976 3977 3978 3979 3980 3981 3982 3983 3984 3985 3986 3987 3988 3989 3990 3991 3992 3993 3994 3995 3996 3997 3998 3999 4000 4001 4002 4003 4004 4005 4006 4007 4008 4009 4010 4011 4012 4013 4014 4015 4016 4017 4018 4019 4020 4021 4022 4023 4024 4025 4026 4027 4028 4029 4030 4031 4032 4033 4034 4035 4036 4037 4038 4039 4040 4041 4042 4043 4044 4045 4046 4047 4048 4049 4050 4051 4052 4053 4054 4055 4056 4057 4058 4059 4060 4061 4062 4063 4064 4065 4066 4067 4068 4069 4070 4071 4072 4073 4074 4075 4076 4077 4078 4079 4080 4081 4082 4083 4084 4085 4086 4087 4088 4089 4090 4091 4092 4093 4094 4095 4096 4097 4098 4099 4100 4101 4102 4103 4104 4105 4106 4107 4108 4109 4110 4111 4112 4113 4114 4115 4116 4117 4118 4119 4120 4121 4122 4123 4124 4125 4126 4127 4128 4129 4130 4131 4132 4133 4134 4135 4136 4137 4138 4139 4140 4141 4142 4143 4144 4145 4146 4147 4148 4149> # SplitBus
mul in 2 <3982 3948> out 1 <4150>        # cond trueterm
const-mul-neg-1 in 1 <3982> out 1 <4151> # cond minuscond
add in 2 <100 4151> out 1 <4152>         # cond negcond
mul in 2 <4152 3789> out 1 <4153>        # cond falseterm
add in 2 <4150 4153> out 1 <4154>        # cond result
const-mul-ffffffff in 1 <4154> out 1 <4155> # multiply-by-constant 4294967295
const-mul-ffffffff in 1 <3585> out 1 <4156> # multiply-by-constant 4294967295
add in 2 <3584 4156> out 1 <4157>        # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
mul in 2 <3619 4157> out 1 <4158>        # cond trueterm
const-mul-neg-1 in 1 <3619> out 1 <4159> # cond minuscond
add in 2 <100 4159> out 1 <4160>         # cond negcond
mul in 2 <4160 4> out 1 <4161>           # cond falseterm
add in 2 <4158 4161> out 1 <4162>        # cond result
const-mul-ffffffff in 1 <4162> out 1 <4163> # multiply-by-constant 4294967295
add in 2 <4162 5> out 1 <4164>           # ArithBusReq.AddReq(DFG.Conditional,DFG.Input)
split in 1 <4164> out 231 <4165 4166 4167 4168 4169 4170 4171 4172 4173 4174 4175 4176 4177 4178 4179 4180 4181 4182 4183 4184 4185 4186 4187 4188 4189 4190 4191 4192 4193 4194 4195 4196 4197 4198 4199 4200 4201 4202 4203 4204 4205 4206 4207 4208 4209 4210 4211 4212 4213 4214 4215 4216 4217 4218 4219 4220 4221 4222 4223 4224 4225 4226 4227 4228 4229 4230 4231 4232 4233 4234 4235 4236 4237 4238 4239 4240 4241 4242 4243 4244 4245 4246 4247 4248 4249 4250 4251 4252 4253 4254 4255 4256 4257 4258 4259 4260 4261 4262 4263 4264 4265 4266 4267 4268 4269 4270 4271 4272 4273 4274 4275 4276 4277 4278 4279 4280 4281 4282 4283 4284 4285 4286 4287 4288 4289 4290 4291 4292 4293 4294 4295 4296 4297 4298 4299 4300 4301 4302 4303 4304 4305 4306 4307 4308 4309 4310 4311 4312 4313 4314 4315 4316 4317 4318 4319 4320 4321 4322 4323 4324 4325 4326 4327 4328 4329 4330 4331 4332 4333 4334 4335 4336 4337 4338 4339 4340 4341 4342 4343 4344 4345 4346 4347 4348 4349 4350 4351 4352 4353 4354 4355 4356 4357 4358 4359 4360 4361 4362 4363 4364 4365 4366 4367 4368 4369 4370 4371 4372 4373 4374 4375 4376 4377 4378 4379 4380 4381 4382 4383 4384 4385 4386 4387 4388 4389 4390 4391 4392 4393 4394 4395> # SplitBus
const-mul-2 in 1 <4196> out 1 <4396>     # join source bit 31
add in 2 <4195 4396> out 1 <4397>        # join source bit 30
const-mul-2 in 1 <4397> out 1 <4398>     # join
add in 2 <4194 4398> out 1 <4399>        # join source bit 29
const-mul-2 in 1 <4399> out 1 <4400>     # join
add in 2 <4193 4400> out 1 <4401>        # join source bit 28
const-mul-2 in 1 <4401> out 1 <4402>     # join
add in 2 <4192 4402> out 1 <4403>        # join source bit 27
const-mul-2 in 1 <4403> out 1 <4404>     # join
add in 2 <4191 4404> out 1 <4405>        # join source bit 26
const-mul-2 in 1 <4405> out 1 <4406>     # join
add in 2 <4190 4406> out 1 <4407>        # join source bit 25
const-mul-2 in 1 <4407> out 1 <4408>     # join
add in 2 <4189 4408> out 1 <4409>        # join source bit 24
const-mul-2 in 1 <4409> out 1 <4410>     # join
add in 2 <4188 4410> out 1 <4411>        # join source bit 23
const-mul-2 in 1 <4411> out 1 <4412>     # join
add in 2 <4187 4412> out 1 <4413>        # join source bit 22
const-mul-2 in 1 <4413> out 1 <4414>     # join
add in 2 <4186 4414> out 1 <4415>        # join source bit 21
const-mul-2 in 1 <4415> out 1 <4416>     # join
add in 2 <4185 4416> out 1 <4417>        # join source bit 20
const-mul-2 in 1 <4417> out 1 <4418>     # join
add in 2 <4184 4418> out 1 <4419>        # join source bit 19
const-mul-2 in 1 <4419> out 1 <4420>     # join
add in 2 <4183 4420> out 1 <4421>        # join source bit 18
const-mul-2 in 1 <4421> out 1 <4422>     # join
add in 2 <4182 4422> out 1 <4423>        # join source bit 17
const-mul-2 in 1 <4423> out 1 <4424>     # join
add in 2 <4181 4424> out 1 <4425>        # join source bit 16
const-mul-2 in 1 <4425> out 1 <4426>     # join
add in 2 <4180 4426> out 1 <4427>        # join source bit 15
const-mul-2 in 1 <4427> out 1 <4428>     # join
add in 2 <4179 4428> out 1 <4429>        # join source bit 14
const-mul-2 in 1 <4429> out 1 <4430>     # join
add in 2 <4178 4430> out 1 <4431>        # join source bit 13
const-mul-2 in 1 <4431> out 1 <4432>     # join
add in 2 <4177 4432> out 1 <4433>        # join source bit 12
const-mul-2 in 1 <4433> out 1 <4434>     # join
add in 2 <4176 4434> out 1 <4435>        # join source bit 11
const-mul-2 in 1 <4435> out 1 <4436>     # join
add in 2 <4175 4436> out 1 <4437>        # join source bit 10
const-mul-2 in 1 <4437> out 1 <4438>     # join
add in 2 <4174 4438> out 1 <4439>        # join source bit 9
const-mul-2 in 1 <4439> out 1 <4440>     # join
add in 2 <4173 4440> out 1 <4441>        # join source bit 8
const-mul-2 in 1 <4441> out 1 <4442>     # join
add in 2 <4172 4442> out 1 <4443>        # join source bit 7
const-mul-2 in 1 <4443> out 1 <4444>     # join
add in 2 <4171 4444> out 1 <4445>        # join source bit 6
const-mul-2 in 1 <4445> out 1 <4446>     # join
add in 2 <4170 4446> out 1 <4447>        # join source bit 5
const-mul-2 in 1 <4447> out 1 <4448>     # join
add in 2 <4169 4448> out 1 <4449>        # join source bit 4
const-mul-2 in 1 <4449> out 1 <4450>     # join
add in 2 <4168 4450> out 1 <4451>        # join source bit 3
const-mul-2 in 1 <4451> out 1 <4452>     # join
add in 2 <4167 4452> out 1 <4453>        # join source bit 2
const-mul-2 in 1 <4453> out 1 <4454>     # join
add in 2 <4166 4454> out 1 <4455>        # join source bit 1
const-mul-2 in 1 <4455> out 1 <4456>     # join
add in 2 <4165 4456> out 1 <4457>        # join source bit 0
add in 2 <4457 4457> out 1 <4458>        # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <4162> out 1 <4459> # multiply-by-constant 4294967295
add in 2 <5 4459> out 1 <4460>           # 'CmpLT DFG.Input - DFG.Conditional'
split in 1 <4460> out 263 <4461 4462 4463 4464 4465 4466 4467 4468 4469 4470 4471 4472 4473 4474 4475 4476 4477 4478 4479 4480 4481 4482 4483 4484 4485 4486 4487 4488 4489 4490 4491 4492 4493 4494 4495 4496 4497 4498 4499 4500 4501 4502 4503 4504 4505 4506 4507 4508 4509 4510 4511 4512 4513 4514 4515 4516 4517 4518 4519 4520 4521 4522 4523 4524 4525 4526 4527 4528 4529 4530 4531 4532 4533 4534 4535 4536 4537 4538 4539 4540 4541 4542 4543 4544 4545 4546 4547 4548 4549 4550 4551 4552 4553 4554 4555 4556 4557 4558 4559 4560 4561 4562 4563 4564 4565 4566 4567 4568 4569 4570 4571 4572 4573 4574 4575 4576 4577 4578 4579 4580 4581 4582 4583 4584 4585 4586 4587 4588 4589 4590 4591 4592 4593 4594 4595 4596 4597 4598 4599 4600 4601 4602 4603 4604 4605 4606 4607 4608 4609 4610 4611 4612 4613 4614 4615 4616 4617 4618 4619 4620 4621 4622 4623 4624 4625 4626 4627 4628 4629 4630 4631 4632 4633 4634 4635 4636 4637 4638 4639 4640 4641 4642 4643 4644 4645 4646 4647 4648 4649 4650 4651 4652 4653 4654 4655 4656 4657 4658 4659 4660 4661 4662 4663 4664 4665 4666 4667 4668 4669 4670 4671 4672 4673 4674 4675 4676 4677 4678 4679 4680 4681 4682 4683 4684 4685 4686 4687 4688 4689 4690 4691 4692 4693 4694 4695 4696 4697 4698 4699 4700 4701 4702 4703 4704 4705 4706 4707 4708 4709 4710 4711 4712 4713 4714 4715 4716 4717 4718 4719 4720 4721 4722 4723> # SplitBus
mul in 2 <4492 4458> out 1 <4724>        # cond trueterm
const-mul-neg-1 in 1 <4492> out 1 <4725> # cond minuscond
add in 2 <100 4725> out 1 <4726>         # cond negcond
mul in 2 <4726 4162> out 1 <4727>        # cond falseterm
add in 2 <4724 4727> out 1 <4728>        # cond result
add in 2 <4154 4728> out 1 <4729>        # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
split in 1 <4729> out 233 <4730 4731 4732 4733 4734 4735 4736 4737 4738 4739 4740 4741 4742 4743 4744 4745 4746 4747 4748 4749 4750 4751 4752 4753 4754 4755 4756 4757 4758 4759 4760 4761 4762 4763 4764 4765 4766 4767 4768 4769 4770 4771 4772 4773 4774 4775 4776 4777 4778 4779 4780 4781 4782 4783 4784 4785 4786 4787 4788 4789 4790 4791 4792 4793 4794 4795 4796 4797 4798 4799 4800 4801 4802 4803 4804 4805 4806 4807 4808 4809 4810 4811 4812 4813 4814 4815 4816 4817 4818 4819 4820 4821 4822 4823 4824 4825 4826 4827 4828 4829 4830 4831 4832 4833 4834 4835 4836 4837 4838 4839 4840 4841 4842 4843 4844 4845 4846 4847 4848 4849 4850 4851 4852 4853 4854 4855 4856 4857 4858 4859 4860 4861 4862 4863 4864 4865 4866 4867 4868 4869 4870 4871 4872 4873 4874 4875 4876 4877 4878 4879 4880 4881 4882 4883 4884 4885 4886 4887 4888 4889 4890 4891 4892 4893 4894 4895 4896 4897 4898 4899 4900 4901 4902 4903 4904 4905 4906 4907 4908 4909 4910 4911 4912 4913 4914 4915 4916 4917 4918 4919 4920 4921 4922 4923 4924 4925 4926 4927 4928 4929 4930 4931 4932 4933 4934 4935 4936 4937 4938 4939 4940 4941 4942 4943 4944 4945 4946 4947 4948 4949 4950 4951 4952 4953 4954 4955 4956 4957 4958 4959 4960 4961 4962> # SplitBus
const-mul-2 in 1 <4761> out 1 <4963>     # join source bit 31
add in 2 <4760 4963> out 1 <4964>        # join source bit 30
const-mul-2 in 1 <4964> out 1 <4965>     # join
add in 2 <4759 4965> out 1 <4966>        # join source bit 29
const-mul-2 in 1 <4966> out 1 <4967>     # join
add in 2 <4758 4967> out 1 <4968>        # join source bit 28
const-mul-2 in 1 <4968> out 1 <4969>     # join
add in 2 <4757 4969> out 1 <4970>        # join source bit 27
const-mul-2 in 1 <4970> out 1 <4971>     # join
add in 2 <4756 4971> out 1 <4972>        # join source bit 26
const-mul-2 in 1 <4972> out 1 <4973>     # join
add in 2 <4755 4973> out 1 <4974>        # join source bit 25
const-mul-2 in 1 <4974> out 1 <4975>     # join
add in 2 <4754 4975> out 1 <4976>        # join source bit 24
const-mul-2 in 1 <4976> out 1 <4977>     # join
add in 2 <4753 4977> out 1 <4978>        # join source bit 23
const-mul-2 in 1 <4978> out 1 <4979>     # join
add in 2 <4752 4979> out 1 <4980>        # join source bit 22
const-mul-2 in 1 <4980> out 1 <4981>     # join
add in 2 <4751 4981> out 1 <4982>        # join source bit 21
const-mul-2 in 1 <4982> out 1 <4983>     # join
add in 2 <4750 4983> out 1 <4984>        # join source bit 20
const-mul-2 in 1 <4984> out 1 <4985>     # join
add in 2 <4749 4985> out 1 <4986>        # join source bit 19
const-mul-2 in 1 <4986> out 1 <4987>     # join
add in 2 <4748 4987> out 1 <4988>        # join source bit 18
const-mul-2 in 1 <4988> out 1 <4989>     # join
add in 2 <4747 4989> out 1 <4990>        # join source bit 17
const-mul-2 in 1 <4990> out 1 <4991>     # join
add in 2 <4746 4991> out 1 <4992>        # join source bit 16
const-mul-2 in 1 <4992> out 1 <4993>     # join
add in 2 <4745 4993> out 1 <4994>        # join source bit 15
const-mul-2 in 1 <4994> out 1 <4995>     # join
add in 2 <4744 4995> out 1 <4996>        # join source bit 14
const-mul-2 in 1 <4996> out 1 <4997>     # join
add in 2 <4743 4997> out 1 <4998>        # join source bit 13
const-mul-2 in 1 <4998> out 1 <4999>     # join
add in 2 <4742 4999> out 1 <5000>        # join source bit 12
const-mul-2 in 1 <5000> out 1 <5001>     # join
add in 2 <4741 5001> out 1 <5002>        # join source bit 11
const-mul-2 in 1 <5002> out 1 <5003>     # join
add in 2 <4740 5003> out 1 <5004>        # join source bit 10
const-mul-2 in 1 <5004> out 1 <5005>     # join
add in 2 <4739 5005> out 1 <5006>        # join source bit 9
const-mul-2 in 1 <5006> out 1 <5007>     # join
add in 2 <4738 5007> out 1 <5008>        # join source bit 8
const-mul-2 in 1 <5008> out 1 <5009>     # join
add in 2 <4737 5009> out 1 <5010>        # join source bit 7
const-mul-2 in 1 <5010> out 1 <5011>     # join
add in 2 <4736 5011> out 1 <5012>        # join source bit 6
const-mul-2 in 1 <5012> out 1 <5013>     # join
add in 2 <4735 5013> out 1 <5014>        # join source bit 5
const-mul-2 in 1 <5014> out 1 <5015>     # join
add in 2 <4734 5015> out 1 <5016>        # join source bit 4
const-mul-2 in 1 <5016> out 1 <5017>     # join
add in 2 <4733 5017> out 1 <5018>        # join source bit 3
const-mul-2 in 1 <5018> out 1 <5019>     # join
add in 2 <4732 5019> out 1 <5020>        # join source bit 2
const-mul-2 in 1 <5020> out 1 <5021>     # join
add in 2 <4731 5021> out 1 <5022>        # join source bit 1
const-mul-2 in 1 <5022> out 1 <5023>     # join
add in 2 <4730 5023> out 1 <5024>        # join source bit 0
add in 2 <5024 5024> out 1 <5025>        # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <4154> out 1 <5026> # multiply-by-constant 4294967295
add in 2 <4728 5026> out 1 <5027>        # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <5027> out 265 <5028 5029 5030 5031 5032 5033 5034 5035 5036 5037 5038 5039 5040 5041 5042 5043 5044 5045 5046 5047 5048 5049 5050 5051 5052 5053 5054 5055 5056 5057 5058 5059 5060 5061 5062 5063 5064 5065 5066 5067 5068 5069 5070 5071 5072 5073 5074 5075 5076 5077 5078 5079 5080 5081 5082 5083 5084 5085 5086 5087 5088 5089 5090 5091 5092 5093 5094 5095 5096 5097 5098 5099 5100 5101 5102 5103 5104 5105 5106 5107 5108 5109 5110 5111 5112 5113 5114 5115 5116 5117 5118 5119 5120 5121 5122 5123 5124 5125 5126 5127 5128 5129 5130 5131 5132 5133 5134 5135 5136 5137 5138 5139 5140 5141 5142 5143 5144 5145 5146 5147 5148 5149 5150 5151 5152 5153 5154 5155 5156 5157 5158 5159 5160 5161 5162 5163 5164 5165 5166 5167 5168 5169 5170 5171 5172 5173 5174 5175 5176 5177 5178 5179 5180 5181 5182 5183 5184 5185 5186 5187 5188 5189 5190 5191 5192 5193 5194 5195 5196 5197 5198 5199 5200 5201 5202 5203 5204 5205 5206 5207 5208 5209 5210 5211 5212 5213 5214 5215 5216 5217 5218 5219 5220 5221 5222 5223 5224 5225 5226 5227 5228 5229 5230 5231 5232 5233 5234 5235 5236 5237 5238 5239 5240 5241 5242 5243 5244 5245 5246 5247 5248 5249 5250 5251 5252 5253 5254 5255 5256 5257 5258 5259 5260 5261 5262 5263 5264 5265 5266 5267 5268 5269 5270 5271 5272 5273 5274 5275 5276 5277 5278 5279 5280 5281 5282 5283 5284 5285 5286 5287 5288 5289 5290 5291 5292> # SplitBus
mul in 2 <5059 5025> out 1 <5293>        # cond trueterm
const-mul-neg-1 in 1 <5059> out 1 <5294> # cond minuscond
add in 2 <100 5294> out 1 <5295>         # cond negcond
mul in 2 <5295 4154> out 1 <5296>        # cond falseterm
add in 2 <5293 5296> out 1 <5297>        # cond result
mul in 2 <3982 3946> out 1 <5298>        # cond trueterm
const-mul-neg-1 in 1 <3982> out 1 <5299> # cond minuscond
add in 2 <100 5299> out 1 <5300>         # cond negcond
mul in 2 <5300 3943> out 1 <5301>        # cond falseterm
add in 2 <5298 5301> out 1 <5302>        # cond result
mul in 2 <3838 3802> out 1 <5303>        # cond trueterm
const-mul-neg-1 in 1 <3838> out 1 <5304> # cond minuscond
add in 2 <100 5304> out 1 <5305>         # cond negcond
mul in 2 <5305 3799> out 1 <5306>        # cond falseterm
add in 2 <5303 5306> out 1 <5307>        # cond result
const-mul-ffffffff in 1 <5307> out 1 <5308> # multiply-by-constant 4294967295
add in 2 <5307 5302> out 1 <5309>        # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
add in 2 <5309 5308> out 1 <5310>        # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <5310> out 1 <5311> # multiply-by-constant 4294967295
add in 2 <5309 5311> out 1 <5312>        # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <5307> out 1 <5313> # multiply-by-constant 4294967295
add in 2 <5302 5313> out 1 <5314>        # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <5314> out 200 <5315 5316 5317 5318 5319 5320 5321 5322 5323 5324 5325 5326 5327 5328 5329 5330 5331 5332 5333 5334 5335 5336 5337 5338 5339 5340 5341 5342 5343 5344 5345 5346 5347 5348 5349 5350 5351 5352 5353 5354 5355 5356 5357 5358 5359 5360 5361 5362 5363 5364 5365 5366 5367 5368 5369 5370 5371 5372 5373 5374 5375 5376 5377 5378 5379 5380 5381 5382 5383 5384 5385 5386 5387 5388 5389 5390 5391 5392 5393 5394 5395 5396 5397 5398 5399 5400 5401 5402 5403 5404 5405 5406 5407 5408 5409 5410 5411 5412 5413 5414 5415 5416 5417 5418 5419 5420 5421 5422 5423 5424 5425 5426 5427 5428 5429 5430 5431 5432 5433 5434 5435 5436 5437 5438 5439 5440 5441 5442 5443 5444 5445 5446 5447 5448 5449 5450 5451 5452 5453 5454 5455 5456 5457 5458 5459 5460 5461 5462 5463 5464 5465 5466 5467 5468 5469 5470 5471 5472 5473 5474 5475 5476 5477 5478 5479 5480 5481 5482 5483 5484 5485 5486 5487 5488 5489 5490 5491 5492 5493 5494 5495 5496 5497 5498 5499 5500 5501 5502 5503 5504 5505 5506 5507 5508 5509 5510 5511 5512 5513 5514> # SplitBus
mul in 2 <5346 5312> out 1 <5515>        # cond trueterm
const-mul-neg-1 in 1 <5346> out 1 <5516> # cond minuscond
add in 2 <100 5516> out 1 <5517>         # cond negcond
mul in 2 <5517 5302> out 1 <5518>        # cond falseterm
add in 2 <5515 5518> out 1 <5519>        # cond result
const-mul-ffffffff in 1 <5519> out 1 <5520> # multiply-by-constant 4294967295
add in 2 <5519 5297> out 1 <5521>        # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
split in 1 <5521> out 235 <5522 5523 5524 5525 5526 5527 5528 5529 5530 5531 5532 5533 5534 5535 5536 5537 5538 5539 5540 5541 5542 5543 5544 5545 5546 5547 5548 5549 5550 5551 5552 5553 5554 5555 5556 5557 5558 5559 5560 5561 5562 5563 5564 5565 5566 5567 5568 5569 5570 5571 5572 5573 5574 5575 5576 5577 5578 5579 5580 5581 5582 5583 5584 5585 5586 5587 5588 5589 5590 5591 5592 5593 5594 5595 5596 5597 5598 5599 5600 5601 5602 5603 5604 5605 5606 5607 5608 5609 5610 5611 5612 5613 5614 5615 5616 5617 5618 5619 5620 5621 5622 5623 5624 5625 5626 5627 5628 5629 5630 5631 5632 5633 5634 5635 5636 5637 5638 5639 5640 5641 5642 5643 5644 5645 5646 5647 5648 5649 5650 5651 5652 5653 5654 5655 5656 5657 5658 5659 5660 5661 5662 5663 5664 5665 5666 5667 5668 5669 5670 5671 5672 5673 5674 5675 5676 5677 5678 5679 5680 5681 5682 5683 5684 5685 5686 5687 5688 5689 5690 5691 5692 5693 5694 5695 5696 5697 5698 5699 5700 5701 5702 5703 5704 5705 5706 5707 5708 5709 5710 5711 5712 5713 5714 5715 5716 5717 5718 5719 5720 5721 5722 5723 5724 5725 5726 5727 5728 5729 5730 5731 5732 5733 5734 5735 5736 5737 5738 5739 5740 5741 5742 5743 5744 5745 5746 5747 5748 5749 5750 5751 5752 5753 5754 5755 5756> # SplitBus
const-mul-2 in 1 <5553> out 1 <5757>     # join source bit 31
add in 2 <5552 5757> out 1 <5758>        # join source bit 30
const-mul-2 in 1 <5758> out 1 <5759>     # join
add in 2 <5551 5759> out 1 <5760>        # join source bit 29
const-mul-2 in 1 <5760> out 1 <5761>     # join
add in 2 <5550 5761> out 1 <5762>        # join source bit 28
const-mul-2 in 1 <5762> out 1 <5763>     # join
add in 2 <5549 5763> out 1 <5764>        # join source bit 27
const-mul-2 in 1 <5764> out 1 <5765>     # join
add in 2 <5548 5765> out 1 <5766>        # join source bit 26
const-mul-2 in 1 <5766> out 1 <5767>     # join
add in 2 <5547 5767> out 1 <5768>        # join source bit 25
const-mul-2 in 1 <5768> out 1 <5769>     # join
add in 2 <5546 5769> out 1 <5770>        # join source bit 24
const-mul-2 in 1 <5770> out 1 <5771>     # join
add in 2 <5545 5771> out 1 <5772>        # join source bit 23
const-mul-2 in 1 <5772> out 1 <5773>     # join
add in 2 <5544 5773> out 1 <5774>        # join source bit 22
const-mul-2 in 1 <5774> out 1 <5775>     # join
add in 2 <5543 5775> out 1 <5776>        # join source bit 21
const-mul-2 in 1 <5776> out 1 <5777>     # join
add in 2 <5542 5777> out 1 <5778>        # join source bit 20
const-mul-2 in 1 <5778> out 1 <5779>     # join
add in 2 <5541 5779> out 1 <5780>        # join source bit 19
const-mul-2 in 1 <5780> out 1 <5781>     # join
add in 2 <5540 5781> out 1 <5782>        # join source bit 18
const-mul-2 in 1 <5782> out 1 <5783>     # join
add in 2 <5539 5783> out 1 <5784>        # join source bit 17
const-mul-2 in 1 <5784> out 1 <5785>     # join
add in 2 <5538 5785> out 1 <5786>        # join source bit 16
const-mul-2 in 1 <5786> out 1 <5787>     # join
add in 2 <5537 5787> out 1 <5788>        # join source bit 15
const-mul-2 in 1 <5788> out 1 <5789>     # join
add in 2 <5536 5789> out 1 <5790>        # join source bit 14
const-mul-2 in 1 <5790> out 1 <5791>     # join
add in 2 <5535 5791> out 1 <5792>        # join source bit 13
const-mul-2 in 1 <5792> out 1 <5793>     # join
add in 2 <5534 5793> out 1 <5794>        # join source bit 12
const-mul-2 in 1 <5794> out 1 <5795>     # join
add in 2 <5533 5795> out 1 <5796>        # join source bit 11
const-mul-2 in 1 <5796> out 1 <5797>     # join
add in 2 <5532 5797> out 1 <5798>        # join source bit 10
const-mul-2 in 1 <5798> out 1 <5799>     # join
add in 2 <5531 5799> out 1 <5800>        # join source bit 9
const-mul-2 in 1 <5800> out 1 <5801>     # join
add in 2 <5530 5801> out 1 <5802>        # join source bit 8
const-mul-2 in 1 <5802> out 1 <5803>     # join
add in 2 <5529 5803> out 1 <5804>        # join source bit 7
const-mul-2 in 1 <5804> out 1 <5805>     # join
add in 2 <5528 5805> out 1 <5806>        # join source bit 6
const-mul-2 in 1 <5806> out 1 <5807>     # join
add in 2 <5527 5807> out 1 <5808>        # join source bit 5
const-mul-2 in 1 <5808> out 1 <5809>     # join
add in 2 <5526 5809> out 1 <5810>        # join source bit 4
const-mul-2 in 1 <5810> out 1 <5811>     # join
add in 2 <5525 5811> out 1 <5812>        # join source bit 3
const-mul-2 in 1 <5812> out 1 <5813>     # join
add in 2 <5524 5813> out 1 <5814>        # join source bit 2
const-mul-2 in 1 <5814> out 1 <5815>     # join
add in 2 <5523 5815> out 1 <5816>        # join source bit 1
const-mul-2 in 1 <5816> out 1 <5817>     # join
add in 2 <5522 5817> out 1 <5818>        # join source bit 0
add in 2 <5818 5818> out 1 <5819>        # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <5819> out 1 <5820> # multiply-by-constant 4294967295
add in 2 <5521 5820> out 1 <5821>        # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <5519> out 1 <5822> # multiply-by-constant 4294967295
add in 2 <5297 5822> out 1 <5823>        # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <5823> out 267 <5824 5825 5826 5827 5828 5829 5830 5831 5832 5833 5834 5835 5836 5837 5838 5839 5840 5841 5842 5843 5844 5845 5846 5847 5848 5849 5850 5851 5852 5853 5854 5855 5856 5857 5858 5859 5860 5861 5862 5863 5864 5865 5866 5867 5868 5869 5870 5871 5872 5873 5874 5875 5876 5877 5878 5879 5880 5881 5882 5883 5884 5885 5886 5887 5888 5889 5890 5891 5892 5893 5894 5895 5896 5897 5898 5899 5900 5901 5902 5903 5904 5905 5906 5907 5908 5909 5910 5911 5912 5913 5914 5915 5916 5917 5918 5919 5920 5921 5922 5923 5924 5925 5926 5927 5928 5929 5930 5931 5932 5933 5934 5935 5936 5937 5938 5939 5940 5941 5942 5943 5944 5945 5946 5947 5948 5949 5950 5951 5952 5953 5954 5955 5956 5957 5958 5959 5960 5961 5962 5963 5964 5965 5966 5967 5968 5969 5970 5971 5972 5973 5974 5975 5976 5977 5978 5979 5980 5981 5982 5983 5984 5985 5986 5987 5988 5989 5990 5991 5992 5993 5994 5995 5996 5997 5998 5999 6000 6001 6002 6003 6004 6005 6006 6007 6008 6009 6010 6011 6012 6013 6014 6015 6016 6017 6018 6019 6020 6021 6022 6023 6024 6025 6026 6027 6028 6029 6030 6031 6032 6033 6034 6035 6036 6037 6038 6039 6040 6041 6042 6043 6044 6045 6046 6047 6048 6049 6050 6051 6052 6053 6054 6055 6056 6057 6058 6059 6060 6061 6062 6063 6064 6065 6066 6067 6068 6069 6070 6071 6072 6073 6074 6075 6076 6077 6078 6079 6080 6081 6082 6083 6084 6085 6086 6087 6088 6089 6090> # SplitBus
mul in 2 <5855 5821> out 1 <6091>        # cond trueterm
const-mul-neg-1 in 1 <5855> out 1 <6092> # cond minuscond
add in 2 <100 6092> out 1 <6093>         # cond negcond
mul in 2 <6093 5297> out 1 <6094>        # cond falseterm
add in 2 <6091 6094> out 1 <6095>        # cond result
add in 2 <6095 104> out 1 <6096>         # ArithBusReq.AddReq(DFG.Conditional,DFG.Constant)
const-mul-ffffffff in 1 <3> out 1 <6097> # multiply-by-constant 4294967295
add in 2 <6096 6097> out 1 <6098>        # 'CmpLT DFG.Add - DFG.Input'
split in 1 <6098> out 238 <6099 6100 6101 6102 6103 6104 6105 6106 6107 6108 6109 6110 6111 6112 6113 6114 6115 6116 6117 6118 6119 6120 6121 6122 6123 6124 6125 6126 6127 6128 6129 6130 6131 6132 6133 6134 6135 6136 6137 6138 6139 6140 6141 6142 6143 6144 6145 6146 6147 6148 6149 6150 6151 6152 6153 6154 6155 6156 6157 6158 6159 6160 6161 6162 6163 6164 6165 6166 6167 6168 6169 6170 6171 6172 6173 6174 6175 6176 6177 6178 6179 6180 6181 6182 6183 6184 6185 6186 6187 6188 6189 6190 6191 6192 6193 6194 6195 6196 6197 6198 6199 6200 6201 6202 6203 6204 6205 6206 6207 6208 6209 6210 6211 6212 6213 6214 6215 6216 6217 6218 6219 6220 6221 6222 6223 6224 6225 6226 6227 6228 6229 6230 6231 6232 6233 6234 6235 6236 6237 6238 6239 6240 6241 6242 6243 6244 6245 6246 6247 6248 6249 6250 6251 6252 6253 6254 6255 6256 6257 6258 6259 6260 6261 6262 6263 6264 6265 6266 6267 6268 6269 6270 6271 6272 6273 6274 6275 6276 6277 6278 6279 6280 6281 6282 6283 6284 6285 6286 6287 6288 6289 6290 6291 6292 6293 6294 6295 6296 6297 6298 6299 6300 6301 6302 6303 6304 6305 6306 6307 6308 6309 6310 6311 6312 6313 6314 6315 6316 6317 6318 6319 6320 6321 6322 6323 6324 6325 6326 6327 6328 6329 6330 6331 6332 6333 6334 6335 6336> # SplitBus
mul in 2 <6130 103> out 1 <6337>         # cond trueterm
const-mul-neg-1 in 1 <6130> out 1 <6338> # cond minuscond
add in 2 <100 6338> out 1 <6339>         # cond negcond
mul in 2 <6339 102> out 1 <6340>         # cond falseterm
add in 2 <6337 6340> out 1 <6341>        # cond result
add in 2 <6095 3084> out 1 <6342>        # ArithBusReq.AddReq(DFG.Conditional,DFG.Negate)
const-mul-ffffffff in 1 <6342> out 1 <6343> # multiply-by-constant 4294967295
add in 2 <3 6343> out 1 <6344>           # 'CmpLT DFG.Input - DFG.Subtract'
split in 1 <6344> out 270 <6345 6346 6347 6348 6349 6350 6351 6352 6353 6354 6355 6356 6357 6358 6359 6360 6361 6362 6363 6364 6365 6366 6367 6368 6369 6370 6371 6372 6373 6374 6375 6376 6377 6378 6379 6380 6381 6382 6383 6384 6385 6386 6387 6388 6389 6390 6391 6392 6393 6394 6395 6396 6397 6398 6399 6400 6401 6402 6403 6404 6405 6406 6407 6408 6409 6410 6411 6412 6413 6414 6415 6416 6417 6418 6419 6420 6421 6422 6423 6424 6425 6426 6427 6428 6429 6430 6431 6432 6433 6434 6435 6436 6437 6438 6439 6440 6441 6442 6443 6444 6445 6446 6447 6448 6449 6450 6451 6452 6453 6454 6455 6456 6457 6458 6459 6460 6461 6462 6463 6464 6465 6466 6467 6468 6469 6470 6471 6472 6473 6474 6475 6476 6477 6478 6479 6480 6481 6482 6483 6484 6485 6486 6487 6488 6489 6490 6491 6492 6493 6494 6495 6496 6497 6498 6499 6500 6501 6502 6503 6504 6505 6506 6507 6508 6509 6510 6511 6512 6513 6514 6515 6516 6517 6518 6519 6520 6521 6522 6523 6524 6525 6526 6527 6528 6529 6530 6531 6532 6533 6534 6535 6536 6537 6538 6539 6540 6541 6542 6543 6544 6545 6546 6547 6548 6549 6550 6551 6552 6553 6554 6555 6556 6557 6558 6559 6560 6561 6562 6563 6564 6565 6566 6567 6568 6569 6570 6571 6572 6573 6574 6575 6576 6577 6578 6579 6580 6581 6582 6583 6584 6585 6586 6587 6588 6589 6590 6591 6592 6593 6594 6595 6596 6597 6598 6599 6600 6601 6602 6603 6604 6605 6606 6607 6608 6609 6610 6611 6612 6613 6614> # SplitBus
mul in 2 <6376 103> out 1 <6615>         # cond trueterm
const-mul-neg-1 in 1 <6376> out 1 <6616> # cond minuscond
add in 2 <100 6616> out 1 <6617>         # cond negcond
mul in 2 <6617 6341> out 1 <6618>        # cond falseterm
add in 2 <6615 6618> out 1 <6619>        # cond result
const-mul-ffffffff in 1 <2> out 1 <6620> # multiply-by-constant 4294967295
add in 2 <2 3> out 1 <6621>              # ArithBusReq.AddReq(DFG.Input,DFG.Input)
add in 2 <6621 6620> out 1 <6622>        # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <6622> out 1 <6623> # multiply-by-constant 4294967295
add in 2 <6621 6623> out 1 <6624>        # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <2> out 1 <6625> # multiply-by-constant 4294967295
add in 2 <3 6625> out 1 <6626>           # 'CmpLT DFG.Input - DFG.Input'
split in 1 <6626> out 65 <6627 6628 6629 6630 6631 6632 6633 6634 6635 6636 6637 6638 6639 6640 6641 6642 6643 6644 6645 6646 6647 6648 6649 6650 6651 6652 6653 6654 6655 6656 6657 6658 6659 6660 6661 6662 6663 6664 6665 6666 6667 6668 6669 6670 6671 6672 6673 6674 6675 6676 6677 6678 6679 6680 6681 6682 6683 6684 6685 6686 6687 6688 6689 6690 6691> # SplitBus
mul in 2 <6658 6624> out 1 <6692>        # cond trueterm
const-mul-neg-1 in 1 <6658> out 1 <6693> # cond minuscond
add in 2 <100 6693> out 1 <6694>         # cond negcond
mul in 2 <6694 3> out 1 <6695>           # cond falseterm
add in 2 <6692 6695> out 1 <6696>        # cond result
const-mul-ffffffff in 1 <6696> out 1 <6697> # multiply-by-constant 4294967295
add in 2 <6696 4> out 1 <6698>           # ArithBusReq.AddReq(DFG.Conditional,DFG.Input)
add in 2 <6698 6697> out 1 <6699>        # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <6699> out 1 <6700> # multiply-by-constant 4294967295
add in 2 <6698 6700> out 1 <6701>        # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <6696> out 1 <6702> # multiply-by-constant 4294967295
add in 2 <4 6702> out 1 <6703>           # 'CmpLT DFG.Input - DFG.Conditional'
split in 1 <6703> out 131 <6704 6705 6706 6707 6708 6709 6710 6711 6712 6713 6714 6715 6716 6717 6718 6719 6720 6721 6722 6723 6724 6725 6726 6727 6728 6729 6730 6731 6732 6733 6734 6735 6736 6737 6738 6739 6740 6741 6742 6743 6744 6745 6746 6747 6748 6749 6750 6751 6752 6753 6754 6755 6756 6757 6758 6759 6760 6761 6762 6763 6764 6765 6766 6767 6768 6769 6770 6771 6772 6773 6774 6775 6776 6777 6778 6779 6780 6781 6782 6783 6784 6785 6786 6787 6788 6789 6790 6791 6792 6793 6794 6795 6796 6797 6798 6799 6800 6801 6802 6803 6804 6805 6806 6807 6808 6809 6810 6811 6812 6813 6814 6815 6816 6817 6818 6819 6820 6821 6822 6823 6824 6825 6826 6827 6828 6829 6830 6831 6832 6833 6834> # SplitBus
mul in 2 <6735 6701> out 1 <6835>        # cond trueterm
const-mul-neg-1 in 1 <6735> out 1 <6836> # cond minuscond
add in 2 <100 6836> out 1 <6837>         # cond negcond
mul in 2 <6837 4> out 1 <6838>           # cond falseterm
add in 2 <6835 6838> out 1 <6839>        # cond result
const-mul-ffffffff in 1 <6839> out 1 <6840> # multiply-by-constant 4294967295
add in 2 <6839 5> out 1 <6841>           # ArithBusReq.AddReq(DFG.Conditional,DFG.Input)
add in 2 <6841 6840> out 1 <6842>        # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <6839> out 1 <6843> # multiply-by-constant 4294967295
add in 2 <5 6843> out 1 <6844>           # 'CmpLT DFG.Input - DFG.Conditional'
split in 1 <6844> out 197 <6845 6846 6847 6848 6849 6850 6851 6852 6853 6854 6855 6856 6857 6858 6859 6860 6861 6862 6863 6864 6865 6866 6867 6868 6869 6870 6871 6872 6873 6874 6875 6876 6877 6878 6879 6880 6881 6882 6883 6884 6885 6886 6887 6888 6889 6890 6891 6892 6893 6894 6895 6896 6897 6898 6899 6900 6901 6902 6903 6904 6905 6906 6907 6908 6909 6910 6911 6912 6913 6914 6915 6916 6917 6918 6919 6920 6921 6922 6923 6924 6925 6926 6927 6928 6929 6930 6931 6932 6933 6934 6935 6936 6937 6938 6939 6940 6941 6942 6943 6944 6945 6946 6947 6948 6949 6950 6951 6952 6953 6954 6955 6956 6957 6958 6959 6960 6961 6962 6963 6964 6965 6966 6967 6968 6969 6970 6971 6972 6973 6974 6975 6976 6977 6978 6979 6980 6981 6982 6983 6984 6985 6986 6987 6988 6989 6990 6991 6992 6993 6994 6995 6996 6997 6998 6999 7000 7001 7002 7003 7004 7005 7006 7007 7008 7009 7010 7011 7012 7013 7014 7015 7016 7017 7018 7019 7020 7021 7022 7023 7024 7025 7026 7027 7028 7029 7030 7031 7032 7033 7034 7035 7036 7037 7038 7039 7040 7041> # SplitBus
mul in 2 <6876 6842> out 1 <7042>        # cond trueterm
const-mul-neg-1 in 1 <6876> out 1 <7043> # cond minuscond
add in 2 <100 7043> out 1 <7044>         # cond negcond
mul in 2 <7044 6839> out 1 <7045>        # cond falseterm
add in 2 <7042 7045> out 1 <7046>        # cond result
mul in 2 <6735 6699> out 1 <7047>        # cond trueterm
const-mul-neg-1 in 1 <6735> out 1 <7048> # cond minuscond
add in 2 <100 7048> out 1 <7049>         # cond negcond
mul in 2 <7049 6696> out 1 <7050>        # cond falseterm
add in 2 <7047 7050> out 1 <7051>        # cond result
mul in 2 <6658 6622> out 1 <7052>        # cond trueterm
const-mul-neg-1 in 1 <6658> out 1 <7053> # cond minuscond
add in 2 <100 7053> out 1 <7054>         # cond negcond
mul in 2 <7054 2> out 1 <7055>           # cond falseterm
add in 2 <7052 7055> out 1 <7056>        # cond result
const-mul-ffffffff in 1 <7056> out 1 <7057> # multiply-by-constant 4294967295
add in 2 <7056 7051> out 1 <7058>        # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
add in 2 <7058 7057> out 1 <7059>        # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <7059> out 1 <7060> # multiply-by-constant 4294967295
add in 2 <7058 7060> out 1 <7061>        # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <7056> out 1 <7062> # multiply-by-constant 4294967295
add in 2 <7051 7062> out 1 <7063>        # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <7063> out 132 <7064 7065 7066 7067 7068 7069 7070 7071 7072 7073 7074 7075 7076 7077 7078 7079 7080 7081 7082 7083 7084 7085 7086 7087 7088 7089 7090 7091 7092 7093 7094 7095 7096 7097 7098 7099 7100 7101 7102 7103 7104 7105 7106 7107 7108 7109 7110 7111 7112 7113 7114 7115 7116 7117 7118 7119 7120 7121 7122 7123 7124 7125 7126 7127 7128 7129 7130 7131 7132 7133 7134 7135 7136 7137 7138 7139 7140 7141 7142 7143 7144 7145 7146 7147 7148 7149 7150 7151 7152 7153 7154 7155 7156 7157 7158 7159 7160 7161 7162 7163 7164 7165 7166 7167 7168 7169 7170 7171 7172 7173 7174 7175 7176 7177 7178 7179 7180 7181 7182 7183 7184 7185 7186 7187 7188 7189 7190 7191 7192 7193 7194 7195> # SplitBus
mul in 2 <7095 7061> out 1 <7196>        # cond trueterm
const-mul-neg-1 in 1 <7095> out 1 <7197> # cond minuscond
add in 2 <100 7197> out 1 <7198>         # cond negcond
mul in 2 <7198 7051> out 1 <7199>        # cond falseterm
add in 2 <7196 7199> out 1 <7200>        # cond result
const-mul-ffffffff in 1 <7200> out 1 <7201> # multiply-by-constant 4294967295
add in 2 <7200 7046> out 1 <7202>        # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
add in 2 <7202 7201> out 1 <7203>        # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <7203> out 1 <7204> # multiply-by-constant 4294967295
add in 2 <7202 7204> out 1 <7205>        # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <7200> out 1 <7206> # multiply-by-constant 4294967295
add in 2 <7046 7206> out 1 <7207>        # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <7207> out 199 <7208 7209 7210 7211 7212 7213 7214 7215 7216 7217 7218 7219 7220 7221 7222 7223 7224 7225 7226 7227 7228 7229 7230 7231 7232 7233 7234 7235 7236 7237 7238 7239 7240 7241 7242 7243 7244 7245 7246 7247 7248 7249 7250 7251 7252 7253 7254 7255 7256 7257 7258 7259 7260 7261 7262 7263 7264 7265 7266 7267 7268 7269 7270 7271 7272 7273 7274 7275 7276 7277 7278 7279 7280 7281 7282 7283 7284 7285 7286 7287 7288 7289 7290 7291 7292 7293 7294 7295 7296 7297 7298 7299 7300 7301 7302 7303 7304 7305 7306 7307 7308 7309 7310 7311 7312 7313 7314 7315 7316 7317 7318 7319 7320 7321 7322 7323 7324 7325 7326 7327 7328 7329 7330 7331 7332 7333 7334 7335 7336 7337 7338 7339 7340 7341 7342 7343 7344 7345 7346 7347 7348 7349 7350 7351 7352 7353 7354 7355 7356 7357 7358 7359 7360 7361 7362 7363 7364 7365 7366 7367 7368 7369 7370 7371 7372 7373 7374 7375 7376 7377 7378 7379 7380 7381 7382 7383 7384 7385 7386 7387 7388 7389 7390 7391 7392 7393 7394 7395 7396 7397 7398 7399 7400 7401 7402 7403 7404 7405 7406> # SplitBus
mul in 2 <7239 7205> out 1 <7407>        # cond trueterm
const-mul-neg-1 in 1 <7239> out 1 <7408> # cond minuscond
add in 2 <100 7408> out 1 <7409>         # cond negcond
mul in 2 <7409 7046> out 1 <7410>        # cond falseterm
add in 2 <7407 7410> out 1 <7411>        # cond result
const-mul-ffffffff in 1 <7411> out 1 <7412> # multiply-by-constant 4294967295
const-mul-ffffffff in 1 <6842> out 1 <7413> # multiply-by-constant 4294967295
add in 2 <6841 7413> out 1 <7414>        # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
mul in 2 <6876 7414> out 1 <7415>        # cond trueterm
const-mul-neg-1 in 1 <6876> out 1 <7416> # cond minuscond
add in 2 <100 7416> out 1 <7417>         # cond negcond
mul in 2 <7417 5> out 1 <7418>           # cond falseterm
add in 2 <7415 7418> out 1 <7419>        # cond result
const-mul-ffffffff in 1 <7419> out 1 <7420> # multiply-by-constant 4294967295
add in 2 <7419 6> out 1 <7421>           # ArithBusReq.AddReq(DFG.Conditional,DFG.Input)
split in 1 <7421> out 231 <7422 7423 7424 7425 7426 7427 7428 7429 7430 7431 7432 7433 7434 7435 7436 7437 7438 7439 7440 7441 7442 7443 7444 7445 7446 7447 7448 7449 7450 7451 7452 7453 7454 7455 7456 7457 7458 7459 7460 7461 7462 7463 7464 7465 7466 7467 7468 7469 7470 7471 7472 7473 7474 7475 7476 7477 7478 7479 7480 7481 7482 7483 7484 7485 7486 7487 7488 7489 7490 7491 7492 7493 7494 7495 7496 7497 7498 7499 7500 7501 7502 7503 7504 7505 7506 7507 7508 7509 7510 7511 7512 7513 7514 7515 7516 7517 7518 7519 7520 7521 7522 7523 7524 7525 7526 7527 7528 7529 7530 7531 7532 7533 7534 7535 7536 7537 7538 7539 7540 7541 7542 7543 7544 7545 7546 7547 7548 7549 7550 7551 7552 7553 7554 7555 7556 7557 7558 7559 7560 7561 7562 7563 7564 7565 7566 7567 7568 7569 7570 7571 7572 7573 7574 7575 7576 7577 7578 7579 7580 7581 7582 7583 7584 7585 7586 7587 7588 7589 7590 7591 7592 7593 7594 7595 7596 7597 7598 7599 7600 7601 7602 7603 7604 7605 7606 7607 7608 7609 7610 7611 7612 7613 7614 7615 7616 7617 7618 7619 7620 7621 7622 7623 7624 7625 7626 7627 7628 7629 7630 7631 7632 7633 7634 7635 7636 7637 7638 7639 7640 7641 7642 7643 7644 7645 7646 7647 7648 7649 7650 7651 7652> # SplitBus
const-mul-2 in 1 <7453> out 1 <7653>     # join source bit 31
add in 2 <7452 7653> out 1 <7654>        # join source bit 30
const-mul-2 in 1 <7654> out 1 <7655>     # join
add in 2 <7451 7655> out 1 <7656>        # join source bit 29
const-mul-2 in 1 <7656> out 1 <7657>     # join
add in 2 <7450 7657> out 1 <7658>        # join source bit 28
const-mul-2 in 1 <7658> out 1 <7659>     # join
add in 2 <7449 7659> out 1 <7660>        # join source bit 27
const-mul-2 in 1 <7660> out 1 <7661>     # join
add in 2 <7448 7661> out 1 <7662>        # join source bit 26
const-mul-2 in 1 <7662> out 1 <7663>     # join
add in 2 <7447 7663> out 1 <7664>        # join source bit 25
const-mul-2 in 1 <7664> out 1 <7665>     # join
add in 2 <7446 7665> out 1 <7666>        # join source bit 24
const-mul-2 in 1 <7666> out 1 <7667>     # join
add in 2 <7445 7667> out 1 <7668>        # join source bit 23
const-mul-2 in 1 <7668> out 1 <7669>     # join
add in 2 <7444 7669> out 1 <7670>        # join source bit 22
const-mul-2 in 1 <7670> out 1 <7671>     # join
add in 2 <7443 7671> out 1 <7672>        # join source bit 21
const-mul-2 in 1 <7672> out 1 <7673>     # join
add in 2 <7442 7673> out 1 <7674>        # join source bit 20
const-mul-2 in 1 <7674> out 1 <7675>     # join
add in 2 <7441 7675> out 1 <7676>        # join source bit 19
const-mul-2 in 1 <7676> out 1 <7677>     # join
add in 2 <7440 7677> out 1 <7678>        # join source bit 18
const-mul-2 in 1 <7678> out 1 <7679>     # join
add in 2 <7439 7679> out 1 <7680>        # join source bit 17
const-mul-2 in 1 <7680> out 1 <7681>     # join
add in 2 <7438 7681> out 1 <7682>        # join source bit 16
const-mul-2 in 1 <7682> out 1 <7683>     # join
add in 2 <7437 7683> out 1 <7684>        # join source bit 15
const-mul-2 in 1 <7684> out 1 <7685>     # join
add in 2 <7436 7685> out 1 <7686>        # join source bit 14
const-mul-2 in 1 <7686> out 1 <7687>     # join
add in 2 <7435 7687> out 1 <7688>        # join source bit 13
const-mul-2 in 1 <7688> out 1 <7689>     # join
add in 2 <7434 7689> out 1 <7690>        # join source bit 12
const-mul-2 in 1 <7690> out 1 <7691>     # join
add in 2 <7433 7691> out 1 <7692>        # join source bit 11
const-mul-2 in 1 <7692> out 1 <7693>     # join
add in 2 <7432 7693> out 1 <7694>        # join source bit 10
const-mul-2 in 1 <7694> out 1 <7695>     # join
add in 2 <7431 7695> out 1 <7696>        # join source bit 9
const-mul-2 in 1 <7696> out 1 <7697>     # join
add in 2 <7430 7697> out 1 <7698>        # join source bit 8
const-mul-2 in 1 <7698> out 1 <7699>     # join
add in 2 <7429 7699> out 1 <7700>        # join source bit 7
const-mul-2 in 1 <7700> out 1 <7701>     # join
add in 2 <7428 7701> out 1 <7702>        # join source bit 6
const-mul-2 in 1 <7702> out 1 <7703>     # join
add in 2 <7427 7703> out 1 <7704>        # join source bit 5
const-mul-2 in 1 <7704> out 1 <7705>     # join
add in 2 <7426 7705> out 1 <7706>        # join source bit 4
const-mul-2 in 1 <7706> out 1 <7707>     # join
add in 2 <7425 7707> out 1 <7708>        # join source bit 3
const-mul-2 in 1 <7708> out 1 <7709>     # join
add in 2 <7424 7709> out 1 <7710>        # join source bit 2
const-mul-2 in 1 <7710> out 1 <7711>     # join
add in 2 <7423 7711> out 1 <7712>        # join source bit 1
const-mul-2 in 1 <7712> out 1 <7713>     # join
add in 2 <7422 7713> out 1 <7714>        # join source bit 0
add in 2 <7714 7714> out 1 <7715>        # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <7419> out 1 <7716> # multiply-by-constant 4294967295
add in 2 <6 7716> out 1 <7717>           # 'CmpLT DFG.Input - DFG.Conditional'
split in 1 <7717> out 263 <7718 7719 7720 7721 7722 7723 7724 7725 7726 7727 7728 7729 7730 7731 7732 7733 7734 7735 7736 7737 7738 7739 7740 7741 7742 7743 7744 7745 7746 7747 7748 7749 7750 7751 7752 7753 7754 7755 7756 7757 7758 7759 7760 7761 7762 7763 7764 7765 7766 7767 7768 7769 7770 7771 7772 7773 7774 7775 7776 7777 7778 7779 7780 7781 7782 7783 7784 7785 7786 7787 7788 7789 7790 7791 7792 7793 7794 7795 7796 7797 7798 7799 7800 7801 7802 7803 7804 7805 7806 7807 7808 7809 7810 7811 7812 7813 7814 7815 7816 7817 7818 7819 7820 7821 7822 7823 7824 7825 7826 7827 7828 7829 7830 7831 7832 7833 7834 7835 7836 7837 7838 7839 7840 7841 7842 7843 7844 7845 7846 7847 7848 7849 7850 7851 7852 7853 7854 7855 7856 7857 7858 7859 7860 7861 7862 7863 7864 7865 7866 7867 7868 7869 7870 7871 7872 7873 7874 7875 7876 7877 7878 7879 7880 7881 7882 7883 7884 7885 7886 7887 7888 7889 7890 7891 7892 7893 7894 7895 7896 7897 7898 7899 7900 7901 7902 7903 7904 7905 7906 7907 7908 7909 7910 7911 7912 7913 7914 7915 7916 7917 7918 7919 7920 7921 7922 7923 7924 7925 7926 7927 7928 7929 7930 7931 7932 7933 7934 7935 7936 7937 7938 7939 7940 7941 7942 7943 7944 7945 7946 7947 7948 7949 7950 7951 7952 7953 7954 7955 7956 7957 7958 7959 7960 7961 7962 7963 7964 7965 7966 7967 7968 7969 7970 7971 7972 7973 7974 7975 7976 7977 7978 7979 7980> # SplitBus
mul in 2 <7749 7715> out 1 <7981>        # cond trueterm
const-mul-neg-1 in 1 <7749> out 1 <7982> # cond minuscond
add in 2 <100 7982> out 1 <7983>         # cond negcond
mul in 2 <7983 7419> out 1 <7984>        # cond falseterm
add in 2 <7981 7984> out 1 <7985>        # cond result
add in 2 <7411 7985> out 1 <7986>        # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
split in 1 <7986> out 233 <7987 7988 7989 7990 7991 7992 7993 7994 7995 7996 7997 7998 7999 8000 8001 8002 8003 8004 8005 8006 8007 8008 8009 8010 8011 8012 8013 8014 8015 8016 8017 8018 8019 8020 8021 8022 8023 8024 8025 8026 8027 8028 8029 8030 8031 8032 8033 8034 8035 8036 8037 8038 8039 8040 8041 8042 8043 8044 8045 8046 8047 8048 8049 8050 8051 8052 8053 8054 8055 8056 8057 8058 8059 8060 8061 8062 8063 8064 8065 8066 8067 8068 8069 8070 8071 8072 8073 8074 8075 8076 8077 8078 8079 8080 8081 8082 8083 8084 8085 8086 8087 8088 8089 8090 8091 8092 8093 8094 8095 8096 8097 8098 8099 8100 8101 8102 8103 8104 8105 8106 8107 8108 8109 8110 8111 8112 8113 8114 8115 8116 8117 8118 8119 8120 8121 8122 8123 8124 8125 8126 8127 8128 8129 8130 8131 8132 8133 8134 8135 8136 8137 8138 8139 8140 8141 8142 8143 8144 8145 8146 8147 8148 8149 8150 8151 8152 8153 8154 8155 8156 8157 8158 8159 8160 8161 8162 8163 8164 8165 8166 8167 8168 8169 8170 8171 8172 8173 8174 8175 8176 8177 8178 8179 8180 8181 8182 8183 8184 8185 8186 8187 8188 8189 8190 8191 8192 8193 8194 8195 8196 8197 8198 8199 8200 8201 8202 8203 8204 8205 8206 8207 8208 8209 8210 8211 8212 8213 8214 8215 8216 8217 8218 8219> # SplitBus
const-mul-2 in 1 <8018> out 1 <8220>     # join source bit 31
add in 2 <8017 8220> out 1 <8221>        # join source bit 30
const-mul-2 in 1 <8221> out 1 <8222>     # join
add in 2 <8016 8222> out 1 <8223>        # join source bit 29
const-mul-2 in 1 <8223> out 1 <8224>     # join
add in 2 <8015 8224> out 1 <8225>        # join source bit 28
const-mul-2 in 1 <8225> out 1 <8226>     # join
add in 2 <8014 8226> out 1 <8227>        # join source bit 27
const-mul-2 in 1 <8227> out 1 <8228>     # join
add in 2 <8013 8228> out 1 <8229>        # join source bit 26
const-mul-2 in 1 <8229> out 1 <8230>     # join
add in 2 <8012 8230> out 1 <8231>        # join source bit 25
const-mul-2 in 1 <8231> out 1 <8232>     # join
add in 2 <8011 8232> out 1 <8233>        # join source bit 24
const-mul-2 in 1 <8233> out 1 <8234>     # join
add in 2 <8010 8234> out 1 <8235>        # join source bit 23
const-mul-2 in 1 <8235> out 1 <8236>     # join
add in 2 <8009 8236> out 1 <8237>        # join source bit 22
const-mul-2 in 1 <8237> out 1 <8238>     # join
add in 2 <8008 8238> out 1 <8239>        # join source bit 21
const-mul-2 in 1 <8239> out 1 <8240>     # join
add in 2 <8007 8240> out 1 <8241>        # join source bit 20
const-mul-2 in 1 <8241> out 1 <8242>     # join
add in 2 <8006 8242> out 1 <8243>        # join source bit 19
const-mul-2 in 1 <8243> out 1 <8244>     # join
add in 2 <8005 8244> out 1 <8245>        # join source bit 18
const-mul-2 in 1 <8245> out 1 <8246>     # join
add in 2 <8004 8246> out 1 <8247>        # join source bit 17
const-mul-2 in 1 <8247> out 1 <8248>     # join
add in 2 <8003 8248> out 1 <8249>        # join source bit 16
const-mul-2 in 1 <8249> out 1 <8250>     # join
add in 2 <8002 8250> out 1 <8251>        # join source bit 15
const-mul-2 in 1 <8251> out 1 <8252>     # join
add in 2 <8001 8252> out 1 <8253>        # join source bit 14
const-mul-2 in 1 <8253> out 1 <8254>     # join
add in 2 <8000 8254> out 1 <8255>        # join source bit 13
const-mul-2 in 1 <8255> out 1 <8256>     # join
add in 2 <7999 8256> out 1 <8257>        # join source bit 12
const-mul-2 in 1 <8257> out 1 <8258>     # join
add in 2 <7998 8258> out 1 <8259>        # join source bit 11
const-mul-2 in 1 <8259> out 1 <8260>     # join
add in 2 <7997 8260> out 1 <8261>        # join source bit 10
const-mul-2 in 1 <8261> out 1 <8262>     # join
add in 2 <7996 8262> out 1 <8263>        # join source bit 9
const-mul-2 in 1 <8263> out 1 <8264>     # join
add in 2 <7995 8264> out 1 <8265>        # join source bit 8
const-mul-2 in 1 <8265> out 1 <8266>     # join
add in 2 <7994 8266> out 1 <8267>        # join source bit 7
const-mul-2 in 1 <8267> out 1 <8268>     # join
add in 2 <7993 8268> out 1 <8269>        # join source bit 6
const-mul-2 in 1 <8269> out 1 <8270>     # join
add in 2 <7992 8270> out 1 <8271>        # join source bit 5
const-mul-2 in 1 <8271> out 1 <8272>     # join
add in 2 <7991 8272> out 1 <8273>        # join source bit 4
const-mul-2 in 1 <8273> out 1 <8274>     # join
add in 2 <7990 8274> out 1 <8275>        # join source bit 3
const-mul-2 in 1 <8275> out 1 <8276>     # join
add in 2 <7989 8276> out 1 <8277>        # join source bit 2
const-mul-2 in 1 <8277> out 1 <8278>     # join
add in 2 <7988 8278> out 1 <8279>        # join source bit 1
const-mul-2 in 1 <8279> out 1 <8280>     # join
add in 2 <7987 8280> out 1 <8281>        # join source bit 0
add in 2 <8281 8281> out 1 <8282>        # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <7411> out 1 <8283> # multiply-by-constant 4294967295
add in 2 <7985 8283> out 1 <8284>        # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <8284> out 265 <8285 8286 8287 8288 8289 8290 8291 8292 8293 8294 8295 8296 8297 8298 8299 8300 8301 8302 8303 8304 8305 8306 8307 8308 8309 8310 8311 8312 8313 8314 8315 8316 8317 8318 8319 8320 8321 8322 8323 8324 8325 8326 8327 8328 8329 8330 8331 8332 8333 8334 8335 8336 8337 8338 8339 8340 8341 8342 8343 8344 8345 8346 8347 8348 8349 8350 8351 8352 8353 8354 8355 8356 8357 8358 8359 8360 8361 8362 8363 8364 8365 8366 8367 8368 8369 8370 8371 8372 8373 8374 8375 8376 8377 8378 8379 8380 8381 8382 8383 8384 8385 8386 8387 8388 8389 8390 8391 8392 8393 8394 8395 8396 8397 8398 8399 8400 8401 8402 8403 8404 8405 8406 8407 8408 8409 8410 8411 8412 8413 8414 8415 8416 8417 8418 8419 8420 8421 8422 8423 8424 8425 8426 8427 8428 8429 8430 8431 8432 8433 8434 8435 8436 8437 8438 8439 8440 8441 8442 8443 8444 8445 8446 8447 8448 8449 8450 8451 8452 8453 8454 8455 8456 8457 8458 8459 8460 8461 8462 8463 8464 8465 8466 8467 8468 8469 8470 8471 8472 8473 8474 8475 8476 8477 8478 8479 8480 8481 8482 8483 8484 8485 8486 8487 8488 8489 8490 8491 8492 8493 8494 8495 8496 8497 8498 8499 8500 8501 8502 8503 8504 8505 8506 8507 8508 8509 8510 8511 8512 8513 8514 8515 8516 8517 8518 8519 8520 8521 8522 8523 8524 8525 8526 8527 8528 8529 8530 8531 8532 8533 8534 8535 8536 8537 8538 8539 8540 8541 8542 8543 8544 8545 8546 8547 8548 8549> # SplitBus
mul in 2 <8316 8282> out 1 <8550>        # cond trueterm
const-mul-neg-1 in 1 <8316> out 1 <8551> # cond minuscond
add in 2 <100 8551> out 1 <8552>         # cond negcond
mul in 2 <8552 7411> out 1 <8553>        # cond falseterm
add in 2 <8550 8553> out 1 <8554>        # cond result
mul in 2 <7239 7203> out 1 <8555>        # cond trueterm
const-mul-neg-1 in 1 <7239> out 1 <8556> # cond minuscond
add in 2 <100 8556> out 1 <8557>         # cond negcond
mul in 2 <8557 7200> out 1 <8558>        # cond falseterm
add in 2 <8555 8558> out 1 <8559>        # cond result
mul in 2 <7095 7059> out 1 <8560>        # cond trueterm
const-mul-neg-1 in 1 <7095> out 1 <8561> # cond minuscond
add in 2 <100 8561> out 1 <8562>         # cond negcond
mul in 2 <8562 7056> out 1 <8563>        # cond falseterm
add in 2 <8560 8563> out 1 <8564>        # cond result
const-mul-ffffffff in 1 <8564> out 1 <8565> # multiply-by-constant 4294967295
add in 2 <8564 8559> out 1 <8566>        # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
add in 2 <8566 8565> out 1 <8567>        # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <8567> out 1 <8568> # multiply-by-constant 4294967295
add in 2 <8566 8568> out 1 <8569>        # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <8564> out 1 <8570> # multiply-by-constant 4294967295
add in 2 <8559 8570> out 1 <8571>        # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <8571> out 200 <8572 8573 8574 8575 8576 8577 8578 8579 8580 8581 8582 8583 8584 8585 8586 8587 8588 8589 8590 8591 8592 8593 8594 8595 8596 8597 8598 8599 8600 8601 8602 8603 8604 8605 8606 8607 8608 8609 8610 8611 8612 8613 8614 8615 8616 8617 8618 8619 8620 8621 8622 8623 8624 8625 8626 8627 8628 8629 8630 8631 8632 8633 8634 8635 8636 8637 8638 8639 8640 8641 8642 8643 8644 8645 8646 8647 8648 8649 8650 8651 8652 8653 8654 8655 8656 8657 8658 8659 8660 8661 8662 8663 8664 8665 8666 8667 8668 8669 8670 8671 8672 8673 8674 8675 8676 8677 8678 8679 8680 8681 8682 8683 8684 8685 8686 8687 8688 8689 8690 8691 8692 8693 8694 8695 8696 8697 8698 8699 8700 8701 8702 8703 8704 8705 8706 8707 8708 8709 8710 8711 8712 8713 8714 8715 8716 8717 8718 8719 8720 8721 8722 8723 8724 8725 8726 8727 8728 8729 8730 8731 8732 8733 8734 8735 8736 8737 8738 8739 8740 8741 8742 8743 8744 8745 8746 8747 8748 8749 8750 8751 8752 8753 8754 8755 8756 8757 8758 8759 8760 8761 8762 8763 8764 8765 8766 8767 8768 8769 8770 8771> # SplitBus
mul in 2 <8603 8569> out 1 <8772>        # cond trueterm
const-mul-neg-1 in 1 <8603> out 1 <8773> # cond minuscond
add in 2 <100 8773> out 1 <8774>         # cond negcond
mul in 2 <8774 8559> out 1 <8775>        # cond falseterm
add in 2 <8772 8775> out 1 <8776>        # cond result
const-mul-ffffffff in 1 <8776> out 1 <8777> # multiply-by-constant 4294967295
add in 2 <8776 8554> out 1 <8778>        # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
split in 1 <8778> out 235 <8779 8780 8781 8782 8783 8784 8785 8786 8787 8788 8789 8790 8791 8792 8793 8794 8795 8796 8797 8798 8799 8800 8801 8802 8803 8804 8805 8806 8807 8808 8809 8810 8811 8812 8813 8814 8815 8816 8817 8818 8819 8820 8821 8822 8823 8824 8825 8826 8827 8828 8829 8830 8831 8832 8833 8834 8835 8836 8837 8838 8839 8840 8841 8842 8843 8844 8845 8846 8847 8848 8849 8850 8851 8852 8853 8854 8855 8856 8857 8858 8859 8860 8861 8862 8863 8864 8865 8866 8867 8868 8869 8870 8871 8872 8873 8874 8875 8876 8877 8878 8879 8880 8881 8882 8883 8884 8885 8886 8887 8888 8889 8890 8891 8892 8893 8894 8895 8896 8897 8898 8899 8900 8901 8902 8903 8904 8905 8906 8907 8908 8909 8910 8911 8912 8913 8914 8915 8916 8917 8918 8919 8920 8921 8922 8923 8924 8925 8926 8927 8928 8929 8930 8931 8932 8933 8934 8935 8936 8937 8938 8939 8940 8941 8942 8943 8944 8945 8946 8947 8948 8949 8950 8951 8952 8953 8954 8955 8956 8957 8958 8959 8960 8961 8962 8963 8964 8965 8966 8967 8968 8969 8970 8971 8972 8973 8974 8975 8976 8977 8978 8979 8980 8981 8982 8983 8984 8985 8986 8987 8988 8989 8990 8991 8992 8993 8994 8995 8996 8997 8998 8999 9000 9001 9002 9003 9004 9005 9006 9007 9008 9009 9010 9011 9012 9013> # SplitBus
const-mul-2 in 1 <8810> out 1 <9014>     # join source bit 31
add in 2 <8809 9014> out 1 <9015>        # join source bit 30
const-mul-2 in 1 <9015> out 1 <9016>     # join
add in 2 <8808 9016> out 1 <9017>        # join source bit 29
const-mul-2 in 1 <9017> out 1 <9018>     # join
add in 2 <8807 9018> out 1 <9019>        # join source bit 28
const-mul-2 in 1 <9019> out 1 <9020>     # join
add in 2 <8806 9020> out 1 <9021>        # join source bit 27
const-mul-2 in 1 <9021> out 1 <9022>     # join
add in 2 <8805 9022> out 1 <9023>        # join source bit 26
const-mul-2 in 1 <9023> out 1 <9024>     # join
add in 2 <8804 9024> out 1 <9025>        # join source bit 25
const-mul-2 in 1 <9025> out 1 <9026>     # join
add in 2 <8803 9026> out 1 <9027>        # join source bit 24
const-mul-2 in 1 <9027> out 1 <9028>     # join
add in 2 <8802 9028> out 1 <9029>        # join source bit 23
const-mul-2 in 1 <9029> out 1 <9030>     # join
add in 2 <8801 9030> out 1 <9031>        # join source bit 22
const-mul-2 in 1 <9031> out 1 <9032>     # join
add in 2 <8800 9032> out 1 <9033>        # join source bit 21
const-mul-2 in 1 <9033> out 1 <9034>     # join
add in 2 <8799 9034> out 1 <9035>        # join source bit 20
const-mul-2 in 1 <9035> out 1 <9036>     # join
add in 2 <8798 9036> out 1 <9037>        # join source bit 19
const-mul-2 in 1 <9037> out 1 <9038>     # join
add in 2 <8797 9038> out 1 <9039>        # join source bit 18
const-mul-2 in 1 <9039> out 1 <9040>     # join
add in 2 <8796 9040> out 1 <9041>        # join source bit 17
const-mul-2 in 1 <9041> out 1 <9042>     # join
add in 2 <8795 9042> out 1 <9043>        # join source bit 16
const-mul-2 in 1 <9043> out 1 <9044>     # join
add in 2 <8794 9044> out 1 <9045>        # join source bit 15
const-mul-2 in 1 <9045> out 1 <9046>     # join
add in 2 <8793 9046> out 1 <9047>        # join source bit 14
const-mul-2 in 1 <9047> out 1 <9048>     # join
add in 2 <8792 9048> out 1 <9049>        # join source bit 13
const-mul-2 in 1 <9049> out 1 <9050>     # join
add in 2 <8791 9050> out 1 <9051>        # join source bit 12
const-mul-2 in 1 <9051> out 1 <9052>     # join
add in 2 <8790 9052> out 1 <9053>        # join source bit 11
const-mul-2 in 1 <9053> out 1 <9054>     # join
add in 2 <8789 9054> out 1 <9055>        # join source bit 10
const-mul-2 in 1 <9055> out 1 <9056>     # join
add in 2 <8788 9056> out 1 <9057>        # join source bit 9
const-mul-2 in 1 <9057> out 1 <9058>     # join
add in 2 <8787 9058> out 1 <9059>        # join source bit 8
const-mul-2 in 1 <9059> out 1 <9060>     # join
add in 2 <8786 9060> out 1 <9061>        # join source bit 7
const-mul-2 in 1 <9061> out 1 <9062>     # join
add in 2 <8785 9062> out 1 <9063>        # join source bit 6
const-mul-2 in 1 <9063> out 1 <9064>     # join
add in 2 <8784 9064> out 1 <9065>        # join source bit 5
const-mul-2 in 1 <9065> out 1 <9066>     # join
add in 2 <8783 9066> out 1 <9067>        # join source bit 4
const-mul-2 in 1 <9067> out 1 <9068>     # join
add in 2 <8782 9068> out 1 <9069>        # join source bit 3
const-mul-2 in 1 <9069> out 1 <9070>     # join
add in 2 <8781 9070> out 1 <9071>        # join source bit 2
const-mul-2 in 1 <9071> out 1 <9072>     # join
add in 2 <8780 9072> out 1 <9073>        # join source bit 1
const-mul-2 in 1 <9073> out 1 <9074>     # join
add in 2 <8779 9074> out 1 <9075>        # join source bit 0
add in 2 <9075 9075> out 1 <9076>        # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <9076> out 1 <9077> # multiply-by-constant 4294967295
add in 2 <8778 9077> out 1 <9078>        # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <8776> out 1 <9079> # multiply-by-constant 4294967295
add in 2 <8554 9079> out 1 <9080>        # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <9080> out 267 <9081 9082 9083 9084 9085 9086 9087 9088 9089 9090 9091 9092 9093 9094 9095 9096 9097 9098 9099 9100 9101 9102 9103 9104 9105 9106 9107 9108 9109 9110 9111 9112 9113 9114 9115 9116 9117 9118 9119 9120 9121 9122 9123 9124 9125 9126 9127 9128 9129 9130 9131 9132 9133 9134 9135 9136 9137 9138 9139 9140 9141 9142 9143 9144 9145 9146 9147 9148 9149 9150 9151 9152 9153 9154 9155 9156 9157 9158 9159 9160 9161 9162 9163 9164 9165 9166 9167 9168 9169 9170 9171 9172 9173 9174 9175 9176 9177 9178 9179 9180 9181 9182 9183 9184 9185 9186 9187 9188 9189 9190 9191 9192 9193 9194 9195 9196 9197 9198 9199 9200 9201 9202 9203 9204 9205 9206 9207 9208 9209 9210 9211 9212 9213 9214 9215 9216 9217 9218 9219 9220 9221 9222 9223 9224 9225 9226 9227 9228 9229 9230 9231 9232 9233 9234 9235 9236 9237 9238 9239 9240 9241 9242 9243 9244 9245 9246 9247 9248 9249 9250 9251 9252 9253 9254 9255 9256 9257 9258 9259 9260 9261 9262 9263 9264 9265 9266 9267 9268 9269 9270 9271 9272 9273 9274 9275 9276 9277 9278 9279 9280 9281 9282 9283 9284 9285 9286 9287 9288 9289 9290 9291 9292 9293 9294 9295 9296 9297 9298 9299 9300 9301 9302 9303 9304 9305 9306 9307 9308 9309 9310 9311 9312 9313 9314 9315 9316 9317 9318 9319 9320 9321 9322 9323 9324 9325 9326 9327 9328 9329 9330 9331 9332 9333 9334 9335 9336 9337 9338 9339 9340 9341 9342 9343 9344 9345 9346 9347> # SplitBus
mul in 2 <9112 9078> out 1 <9348>        # cond trueterm
const-mul-neg-1 in 1 <9112> out 1 <9349> # cond minuscond
add in 2 <100 9349> out 1 <9350>         # cond negcond
mul in 2 <9350 8554> out 1 <9351>        # cond falseterm
add in 2 <9348 9351> out 1 <9352>        # cond result
add in 2 <9352 104> out 1 <9353>         # ArithBusReq.AddReq(DFG.Conditional,DFG.Constant)
const-mul-ffffffff in 1 <4> out 1 <9354> # multiply-by-constant 4294967295
add in 2 <9353 9354> out 1 <9355>        # 'CmpLT DFG.Add - DFG.Input'
split in 1 <9355> out 238 <9356 9357 9358 9359 9360 9361 9362 9363 9364 9365 9366 9367 9368 9369 9370 9371 9372 9373 9374 9375 9376 9377 9378 9379 9380 9381 9382 9383 9384 9385 9386 9387 9388 9389 9390 9391 9392 9393 9394 9395 9396 9397 9398 9399 9400 9401 9402 9403 9404 9405 9406 9407 9408 9409 9410 9411 9412 9413 9414 9415 9416 9417 9418 9419 9420 9421 9422 9423 9424 9425 9426 9427 9428 9429 9430 9431 9432 9433 9434 9435 9436 9437 9438 9439 9440 9441 9442 9443 9444 9445 9446 9447 9448 9449 9450 9451 9452 9453 9454 9455 9456 9457 9458 9459 9460 9461 9462 9463 9464 9465 9466 9467 9468 9469 9470 9471 9472 9473 9474 9475 9476 9477 9478 9479 9480 9481 9482 9483 9484 9485 9486 9487 9488 9489 9490 9491 9492 9493 9494 9495 9496 9497 9498 9499 9500 9501 9502 9503 9504 9505 9506 9507 9508 9509 9510 9511 9512 9513 9514 9515 9516 9517 9518 9519 9520 9521 9522 9523 9524 9525 9526 9527 9528 9529 9530 9531 9532 9533 9534 9535 9536 9537 9538 9539 9540 9541 9542 9543 9544 9545 9546 9547 9548 9549 9550 9551 9552 9553 9554 9555 9556 9557 9558 9559 9560 9561 9562 9563 9564 9565 9566 9567 9568 9569 9570 9571 9572 9573 9574 9575 9576 9577 9578 9579 9580 9581 9582 9583 9584 9585 9586 9587 9588 9589 9590 9591 9592 9593> # SplitBus
mul in 2 <9387 103> out 1 <9594>         # cond trueterm
const-mul-neg-1 in 1 <9387> out 1 <9595> # cond minuscond
add in 2 <100 9595> out 1 <9596>         # cond negcond
mul in 2 <9596 102> out 1 <9597>         # cond falseterm
add in 2 <9594 9597> out 1 <9598>        # cond result
add in 2 <9352 3084> out 1 <9599>        # ArithBusReq.AddReq(DFG.Conditional,DFG.Negate)
const-mul-ffffffff in 1 <9599> out 1 <9600> # multiply-by-constant 4294967295
add in 2 <4 9600> out 1 <9601>           # 'CmpLT DFG.Input - DFG.Subtract'
split in 1 <9601> out 270 <9602 9603 9604 9605 9606 9607 9608 9609 9610 9611 9612 9613 9614 9615 9616 9617 9618 9619 9620 9621 9622 9623 9624 9625 9626 9627 9628 9629 9630 9631 9632 9633 9634 9635 9636 9637 9638 9639 9640 9641 9642 9643 9644 9645 9646 9647 9648 9649 9650 9651 9652 9653 9654 9655 9656 9657 9658 9659 9660 9661 9662 9663 9664 9665 9666 9667 9668 9669 9670 9671 9672 9673 9674 9675 9676 9677 9678 9679 9680 9681 9682 9683 9684 9685 9686 9687 9688 9689 9690 9691 9692 9693 9694 9695 9696 9697 9698 9699 9700 9701 9702 9703 9704 9705 9706 9707 9708 9709 9710 9711 9712 9713 9714 9715 9716 9717 9718 9719 9720 9721 9722 9723 9724 9725 9726 9727 9728 9729 9730 9731 9732 9733 9734 9735 9736 9737 9738 9739 9740 9741 9742 9743 9744 9745 9746 9747 9748 9749 9750 9751 9752 9753 9754 9755 9756 9757 9758 9759 9760 9761 9762 9763 9764 9765 9766 9767 9768 9769 9770 9771 9772 9773 9774 9775 9776 9777 9778 9779 9780 9781 9782 9783 9784 9785 9786 9787 9788 9789 9790 9791 9792 9793 9794 9795 9796 9797 9798 9799 9800 9801 9802 9803 9804 9805 9806 9807 9808 9809 9810 9811 9812 9813 9814 9815 9816 9817 9818 9819 9820 9821 9822 9823 9824 9825 9826 9827 9828 9829 9830 9831 9832 9833 9834 9835 9836 9837 9838 9839 9840 9841 9842 9843 9844 9845 9846 9847 9848 9849 9850 9851 9852 9853 9854 9855 9856 9857 9858 9859 9860 9861 9862 9863 9864 9865 9866 9867 9868 9869 9870 9871> # SplitBus
mul in 2 <9633 103> out 1 <9872>         # cond trueterm
const-mul-neg-1 in 1 <9633> out 1 <9873> # cond minuscond
add in 2 <100 9873> out 1 <9874>         # cond negcond
mul in 2 <9874 9598> out 1 <9875>        # cond falseterm
add in 2 <9872 9875> out 1 <9876>        # cond result
const-mul-ffffffff in 1 <3> out 1 <9877> # multiply-by-constant 4294967295
add in 2 <3 4> out 1 <9878>              # ArithBusReq.AddReq(DFG.Input,DFG.Input)
add in 2 <9878 9877> out 1 <9879>        # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <9879> out 1 <9880> # multiply-by-constant 4294967295
add in 2 <9878 9880> out 1 <9881>        # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <3> out 1 <9882> # multiply-by-constant 4294967295
add in 2 <4 9882> out 1 <9883>           # 'CmpLT DFG.Input - DFG.Input'
split in 1 <9883> out 65 <9884 9885 9886 9887 9888 9889 9890 9891 9892 9893 9894 9895 9896 9897 9898 9899 9900 9901 9902 9903 9904 9905 9906 9907 9908 9909 9910 9911 9912 9913 9914 9915 9916 9917 9918 9919 9920 9921 9922 9923 9924 9925 9926 9927 9928 9929 9930 9931 9932 9933 9934 9935 9936 9937 9938 9939 9940 9941 9942 9943 9944 9945 9946 9947 9948> # SplitBus
mul in 2 <9915 9881> out 1 <9949>        # cond trueterm
const-mul-neg-1 in 1 <9915> out 1 <9950> # cond minuscond
add in 2 <100 9950> out 1 <9951>         # cond negcond
mul in 2 <9951 4> out 1 <9952>           # cond falseterm
add in 2 <9949 9952> out 1 <9953>        # cond result
const-mul-ffffffff in 1 <9953> out 1 <9954> # multiply-by-constant 4294967295
add in 2 <9953 5> out 1 <9955>           # ArithBusReq.AddReq(DFG.Conditional,DFG.Input)
add in 2 <9955 9954> out 1 <9956>        # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <9956> out 1 <9957> # multiply-by-constant 4294967295
add in 2 <9955 9957> out 1 <9958>        # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <9953> out 1 <9959> # multiply-by-constant 4294967295
add in 2 <5 9959> out 1 <9960>           # 'CmpLT DFG.Input - DFG.Conditional'
split in 1 <9960> out 131 <9961 9962 9963 9964 9965 9966 9967 9968 9969 9970 9971 9972 9973 9974 9975 9976 9977 9978 9979 9980 9981 9982 9983 9984 9985 9986 9987 9988 9989 9990 9991 9992 9993 9994 9995 9996 9997 9998 9999 10000 10001 10002 10003 10004 10005 10006 10007 10008 10009 10010 10011 10012 10013 10014 10015 10016 10017 10018 10019 10020 10021 10022 10023 10024 10025 10026 10027 10028 10029 10030 10031 10032 10033 10034 10035 10036 10037 10038 10039 10040 10041 10042 10043 10044 10045 10046 10047 10048 10049 10050 10051 10052 10053 10054 10055 10056 10057 10058 10059 10060 10061 10062 10063 10064 10065 10066 10067 10068 10069 10070 10071 10072 10073 10074 10075 10076 10077 10078 10079 10080 10081 10082 10083 10084 10085 10086 10087 10088 10089 10090 10091> # SplitBus
mul in 2 <9992 9958> out 1 <10092>       # cond trueterm
const-mul-neg-1 in 1 <9992> out 1 <10093> # cond minuscond
add in 2 <100 10093> out 1 <10094>       # cond negcond
mul in 2 <10094 5> out 1 <10095>         # cond falseterm
add in 2 <10092 10095> out 1 <10096>     # cond result
const-mul-ffffffff in 1 <10096> out 1 <10097> # multiply-by-constant 4294967295
add in 2 <10096 6> out 1 <10098>         # ArithBusReq.AddReq(DFG.Conditional,DFG.Input)
add in 2 <10098 10097> out 1 <10099>     # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <10096> out 1 <10100> # multiply-by-constant 4294967295
add in 2 <6 10100> out 1 <10101>         # 'CmpLT DFG.Input - DFG.Conditional'
split in 1 <10101> out 197 <10102 10103 10104 10105 10106 10107 10108 10109 10110 10111 10112 10113 10114 10115 10116 10117 10118 10119 10120 10121 10122 10123 10124 10125 10126 10127 10128 10129 10130 10131 10132 10133 10134 10135 10136 10137 10138 10139 10140 10141 10142 10143 10144 10145 10146 10147 10148 10149 10150 10151 10152 10153 10154 10155 10156 10157 10158 10159 10160 10161 10162 10163 10164 10165 10166 10167 10168 10169 10170 10171 10172 10173 10174 10175 10176 10177 10178 10179 10180 10181 10182 10183 10184 10185 10186 10187 10188 10189 10190 10191 10192 10193 10194 10195 10196 10197 10198 10199 10200 10201 10202 10203 10204 10205 10206 10207 10208 10209 10210 10211 10212 10213 10214 10215 10216 10217 10218 10219 10220 10221 10222 10223 10224 10225 10226 10227 10228 10229 10230 10231 10232 10233 10234 10235 10236 10237 10238 10239 10240 10241 10242 10243 10244 10245 10246 10247 10248 10249 10250 10251 10252 10253 10254 10255 10256 10257 10258 10259 10260 10261 10262 10263 10264 10265 10266 10267 10268 10269 10270 10271 10272 10273 10274 10275 10276 10277 10278 10279 10280 10281 10282 10283 10284 10285 10286 10287 10288 10289 10290 10291 10292 10293 10294 10295 10296 10297 10298> # SplitBus
mul in 2 <10133 10099> out 1 <10299>     # cond trueterm
const-mul-neg-1 in 1 <10133> out 1 <10300> # cond minuscond
add in 2 <100 10300> out 1 <10301>       # cond negcond
mul in 2 <10301 10096> out 1 <10302>     # cond falseterm
add in 2 <10299 10302> out 1 <10303>     # cond result
mul in 2 <9992 9956> out 1 <10304>       # cond trueterm
const-mul-neg-1 in 1 <9992> out 1 <10305> # cond minuscond
add in 2 <100 10305> out 1 <10306>       # cond negcond
mul in 2 <10306 9953> out 1 <10307>      # cond falseterm
add in 2 <10304 10307> out 1 <10308>     # cond result
mul in 2 <9915 9879> out 1 <10309>       # cond trueterm
const-mul-neg-1 in 1 <9915> out 1 <10310> # cond minuscond
add in 2 <100 10310> out 1 <10311>       # cond negcond
mul in 2 <10311 3> out 1 <10312>         # cond falseterm
add in 2 <10309 10312> out 1 <10313>     # cond result
const-mul-ffffffff in 1 <10313> out 1 <10314> # multiply-by-constant 4294967295
add in 2 <10313 10308> out 1 <10315>     # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
add in 2 <10315 10314> out 1 <10316>     # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <10316> out 1 <10317> # multiply-by-constant 4294967295
add in 2 <10315 10317> out 1 <10318>     # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <10313> out 1 <10319> # multiply-by-constant 4294967295
add in 2 <10308 10319> out 1 <10320>     # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <10320> outplitBus
mul in 2 <10352 10318> out 1 <10453>     # cond trueterm
const-mul-neg-1 in 1 <10352> out 1 <10454> # cond minuscond
add in 2 <100 10454> out 1 <10455>       # cond negcond
mul in 2 <10455 10308> out 1 <10456>     # cond falseterm
add in 2 <10453 10456> out 1 <10457>     # cond result
const-mul-ffffffff in 1 <10457> out 1 <10458> # multiply-by-constant 4294967295
add in 2 <10457 10303> out 1 <10459>     # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
add in 2 <10459 10458> out 1 <10460>     # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <10460> out 1 <10461> # multiply-by-constant 4294967295
add in 2 <10459 10461> out 1 <10462>     # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <10457> out 1 <10463> # multiply-by-constant 4294967295
add in 2 <10303 10463> out 1 <10464>     # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <10464> out 199 <10465 10466 10467 10468 10469 10470 10471 10472 10473 10474 10475 10476 10477 10478 10479 10480 10481 10482 10483 10484 10485 10486 10487 10488 10489 10490 10491 10492 10493 10494 10495 10496 10497 10498 10499 10500 10501 10502 10503 10504 10505 10506 10507 10508 10509 10510 10511 10512 10513 10514 10515 10516 10517 10518 10519 10520 10521 10522 10523 10524 10525 10526 10527 10528 10529 10530 10531 10532 10533 10534 10535 10536 10537 10538 10539 10540 10541 10542 10543 10544 10545 10546 10547 10548 10549 10550 10551 10552 10553 10554 10555 10556 10557 10558 10559 10560 10561 10562 10563 10564 10565 10566 10567 10568 10569 10570 10571 10572 10573 10574 10575 10576 10577 10578 10579 10580 10581 10582 10583 10584 10585 10586 10587 10588 10589 10590 10591 10592 10593 10594 10595 10596 10597 10598 10599 10600 10601 10602 10603 10604 10605 10606 10607 10608 10609 10610 10611 10612 10613 10614 10615 10616 10617 10618 10619 10620 10621 10622 10623 10624 10625 10626 10627 10628 10629 10630 10631 10632 10633 10634 10635 10636 10637 10638 10639 10640 10641 10642 10643 10644 10645 10646 10647 10648 10649 10650 10651 10652 10653 10654 10655 10656 10657 10658 10659 10660 10661 10662 10663> # SplitBus
mul in 2 <10496 10462> out 1 <10664>     # cond trueterm
const-mul-neg-1 in 1 <10496> out 1 <10665> # cond minuscond
add in 2 <100 10665> out 1 <10666>       # cond negcond
mul in 2 <10666 10303> out 1 <10667>     # cond falseterm
add in 2 <10664 10667> out 1 <10668>     # cond result
const-mul-ffffffff in 1 <10668> out 1 <10669> # multiply-by-constant 4294967295
const-mul-ffffffff in 1 <10099> out 1 <10670> # multiply-by-constant 4294967295
add in 2 <10098 10670> out 1 <10671>     # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
mul in 2 <10133 10671> out 1 <10672>     # cond trueterm
const-mul-neg-1 in 1 <10133> out 1 <10673> # cond minuscond
add in 2 <100 10673> out 1 <10674>       # cond negcond
mul in 2 <10674 6> out 1 <10675>         # cond falseterm
add in 2 <10672 10675> out 1 <10676>     # cond result
const-mul-ffffffff in 1 <10676> out 1 <10677> # multiply-by-constant 4294967295
add in 2 <10676 7> out 1 <10678>         # ArithBusReq.AddReq(DFG.Conditional,DFG.Input)
split in 1 <10678> outplitBus
const-mul-2 in 1 <10710> out 1 <10910>   # join source bit 31
add in 2 <10709 10910> out 1 <10911>     # join source bit 30
const-mul-2 in 1 <10911> out 1 <10912>   # join
add in 2 <10708 10912> out 1 <10913>     # join source bit 29
const-mul-2 in 1 <10913> out 1 <10914>   # join
add in 2 <10707 10914> out 1 <10915>     # join source bit 28
const-mul-2 in 1 <10915> out 1 <10916>   # join
add in 2 <10706 10916> out 1 <10917>     # join source bit 27
const-mul-2 in 1 <10917> out 1 <10918>   # join
add in 2 <10705 10918> out 1 <10919>     # join source bit 26
const-mul-2 in 1 <10919> out 1 <10920>   # join
add in 2 <10704 10920> out 1 <10921>     # join source bit 25
const-mul-2 in 1 <10921> out 1 <10922>   # join
add in 2 <10703 10922> out 1 <10923>     # join source bit 24
const-mul-2 in 1 <10923> out 1 <10924>   # join
add in 2 <10702 10924> out 1 <10925>     # join source bit 23
const-mul-2 in 1 <10925> out 1 <10926>   # join
add in 2 <10701 10926> out 1 <10927>     # join source bit 22
const-mul-2 in 1 <10927> out 1 <10928>   # join
add in 2 <10700 10928> out 1 <10929>     # join source bit 21
const-mul-2 in 1 <10929> out 1 <10930>   # join
add in 2 <10699 10930> out 1 <10931>     # join source bit 20
const-mul-2 in 1 <10931> out 1 <10932>   # join
add in 2 <10698 10932> out 1 <10933>     # join source bit 19
const-mul-2 in 1 <10933> out 1 <10934>   # join
add in 2 <10697 10934> out 1 <10935>     # join source bit 18
const-mul-2 in 1 <10935> out 1 <10936>   # join
add in 2 <10696 10936> out 1 <10937>     # join source bit 17
const-mul-2 in 1 <10937> out 1 <10938>   # join
add in 2 <10695 10938> out 1 <10939>     # join source bit 16
const-mul-2 in 1 <10939> out 1 <10940>   # join
add in 2 <10694 10940> out 1 <10941>     # join source bit 15
const-mul-2 in 1 <10941> out 1 <10942>   # join
add in 2 <10693 10942> out 1 <10943>     # join source bit 14
const-mul-2 in 1 <10943> out 1 <10944>   # join
add in 2 <10692 10944> out 1 <10945>     # join source bit 13
const-mul-2 in 1 <10945> out 1 <10946>   # join
add in 2 <10691 10946> out 1 <10947>     # join source bit 12
const-mul-2 in 1 <10947> out 1 <10948>   # join
add in 2 <10690 10948> out 1 <10949>     # join source bit 11
const-mul-2 in 1 <10949> out 1 <10950>   # join
add in 2 <10689 10950> out 1 <10951>     # join source bit 10
const-mul-2 in 1 <10951> out 1 <10952>   # join
add in 2 <10688 10952> out 1 <10953>     # join source bit 9
const-mul-2 in 1 <10953> out 1 <10954>   # join
add in 2 <10687 10954> out 1 <10955>     # join source bit 8
const-mul-2 in 1 <10955> out 1 <10956>   # join
add in 2 <10686 10956> out 1 <10957>     # join source bit 7
const-mul-2 in 1 <10957> out 1 <10958>   # join
add in 2 <10685 10958> out 1 <10959>     # join source bit 6
const-mul-2 in 1 <10959> out 1 <10960>   # join
add in 2 <10684 10960> out 1 <10961>     # join source bit 5
const-mul-2 in 1 <10961> out 1 <10962>   # join
add in 2 <10683 10962> out 1 <10963>     # join source bit 4
const-mul-2 in 1 <10963> out 1 <10964>   # join
add in 2 <10682 10964> out 1 <10965>     # join source bit 3
const-mul-2 in 1 <10965> out 1 <10966>   # join
add in 2 <10681 10966> out 1 <10967>     # join source bit 2
const-mul-2 in 1 <10967> out 1 <10968>   # join
add in 2 <10680 10968> out 1 <10969>     # join source bit 1
const-mul-2 in 1 <10969> out 1 <10970>   # join
add in 2 <10679 10970> out 1 <10971>     # join source bit 0
add in 2 <10971 10971> out 1 <10972>     # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <10676> out 1 <10973> # multiply-by-constant 4294967295
add in 2 <7 10973> out 1 <10974>         # 'CmpLT DFG.Input - DFG.Conditional'
split in 1 <10974> outplitBus
mul in 2 <11006 10972> out 1 <11238>     # cond trueterm
const-mul-neg-1 in 1 <11006> out 1 <11239> # cond minuscond
add in 2 <100 11239> out 1 <11240>       # cond negcond
mul in 2 <11240 10676> out 1 <11241>     # cond falseterm
add in 2 <11238 11241> out 1 <11242>     # cond result
add in 2 <10668 11242> out 1 <11243>     # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
split in 1 <11243> outplitBus
const-mul-2 in 1 <11275> out 1 <11477>   # join source bit 31
add in 2 <11274 11477> out 1 <11478>     # join source bit 30
const-mul-2 in 1 <11478> out 1 <11479>   # join
add in 2 <11273 11479> out 1 <11480>     # join source bit 29
const-mul-2 in 1 <11480> out 1 <11481>   # join
add in 2 <11272 11481> out 1 <11482>     # join source bit 28
const-mul-2 in 1 <11482> out 1 <11483>   # join
add in 2 <11271 11483> out 1 <11484>     # join source bit 27
const-mul-2 in 1 <11484> out 1 <11485>   # join
add in 2 <11270 11485> out 1 <11486>     # join source bit 26
const-mul-2 in 1 <11486> out 1 <11487>   # join
add in 2 <11269 11487> out 1 <11488>     # join source bit 25
const-mul-2 in 1 <11488> out 1 <11489>   # join
add in 2 <11268 11489> out 1 <11490>     # join source bit 24
const-mul-2 in 1 <11490> out 1 <11491>   # join
add in 2 <11267 11491> out 1 <11492>     # join source bit 23
const-mul-2 in 1 <11492> out 1 <11493>   # join
add in 2 <11266 11493> out 1 <11494>     # join source bit 22
const-mul-2 in 1 <11494> out 1 <11495>   # join
add in 2 <11265 11495> out 1 <11496>     # join source bit 21
const-mul-2 in 1 <11496> out 1 <11497>   # join
add in 2 <11264 11497> out 1 <11498>     # join source bit 20
const-mul-2 in 1 <11498> out 1 <11499>   # join
add in 2 <11263 11499> out 1 <11500>     # join source bit 19
const-mul-2 in 1 <11500> out 1 <11501>   # join
add in 2 <11262 11501> out 1 <11502>     # join source bit 18
const-mul-2 in 1 <11502> out 1 <11503>   # join
add in 2 <11261 11503> out 1 <11504>     # join source bit 17
const-mul-2 in 1 <11504> out 1 <11505>   # join
add in 2 <11260 11505> out 1 <11506>     # join source bit 16
const-mul-2 in 1 <11506> out 1 <11507>   # join
add in 2 <11259 11507> out 1 <11508>     # join source bit 15
const-mul-2 in 1 <11508> out 1 <11509>   # join
add in 2 <11258 11509> out 1 <11510>     # join source bit 14
const-mul-2 in 1 <11510> out 1 <11511>   # join
add in 2 <11257 11511> out 1 <11512>     # join source bit 13
const-mul-2 in 1 <11512> out 1 <11513>   # join
add in 2 <11256 11513> out 1 <11514>     # join source bit 12
const-mul-2 in 1 <11514> out 1 <11515>   # join
add in 2 <11255 11515> out 1 <11516>     # join source bit 11
const-mul-2 in 1 <11516> out 1 <11517>   # join
add in 2 <11254 11517> out 1 <11518>     # join source bit 10
const-mul-2 in 1 <11518> out 1 <11519>   # join
add in 2 <11253 11519> out 1 <11520>     # join source bit 9
const-mul-2 in 1 <11520> out 1 <11521>   # join
add in 2 <11252 11521> out 1 <11522>     # join source bit 8
const-mul-2 in 1 <11522> out 1 <11523>   # join
add in 2 <11251 11523> out 1 <11524>     # join source bit 7
const-mul-2 in 1 <11524> out 1 <11525>   # join
add in 2 <11250 11525> out 1 <11526>     # join source bit 6
const-mul-2 in 1 <11526> out 1 <11527>   # join
add in 2 <11249 11527> out 1 <11528>     # join source bit 5
const-mul-2 in 1 <11528> out 1 <11529>   # join
add in 2 <11248 11529> out 1 <11530>     # join source bit 4
const-mul-2 in 1 <11530> out 1 <11531>   # join
add in 2 <11247 11531> out 1 <11532>     # join source bit 3
const-mul-2 in 1 <11532> out 1 <11533>   # join
add in 2 <11246 11533> out 1 <11534>     # join source bit 2
const-mul-2 in 1 <11534> out 1 <11535>   # join
add in 2 <11245 11535> out 1 <11536>     # join source bit 1
const-mul-2 in 1 <11536> out 1 <11537>   # join
add in 2 <11244 11537> out 1 <11538>     # join source bit 0
add in 2 <11538 11538> out 1 <11539>     # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <10668> out 1 <11540> # multiply-by-constant 4294967295
add in 2 <11242 11540> out 1 <11541>     # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <11541> outplitBus
mul in 2 <11573 11539> out 1 <11807>     # cond trueterm
const-mul-neg-1 in 1 <11573> out 1 <11808> # cond minuscond
add in 2 <100 11808> out 1 <11809>       # cond negcond
mul in 2 <11809 10668> out 1 <11810>     # cond falseterm
add in 2 <11807 11810> out 1 <11811>     # cond result
mul in 2 <10496 10460> out 1 <11812>     # cond trueterm
const-mul-neg-1 in 1 <10496> out 1 <11813> # cond minuscond
add in 2 <100 11813> out 1 <11814>       # cond negcond
mul in 2 <11814 10457> out 1 <11815>     # cond falseterm
add in 2 <11812 11815> out 1 <11816>     # cond result
mul in 2 <10352 10316> out 1 <11817>     # cond trueterm
const-mul-neg-1 in 1 <10352> out 1 <11818> # cond minuscond
add in 2 <100 11818> out 1 <11819>       # cond negcond
mul in 2 <11819 10313> out 1 <11820>     # cond falseterm
add in 2 <11817 11820> out 1 <11821>     # cond result
const-mul-ffffffff in 1 <11821> out 1 <11822> # multiply-by-constant 4294967295
add in 2 <11821 11816> out 1 <11823>     # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
add in 2 <11823 11822> out 1 <11824>     # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <11824> out 1 <11825> # multiply-by-constant 4294967295
add in 2 <11823 11825> out 1 <11826>     # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <11821> out 1 <11827> # multiply-by-constant 4294967295
add in 2 <11816 11827> out 1 <11828>     # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <11828> out 200 <11829 11830 11831 11832 11833 11834 11835 11836 11837 11838 11839 11840 11841 11842 11843 11844 11845 11846 11847 11848 11849 11850 11851 11852 11853 11854 11855 11856 11857 11858 11859 11860 11861 11862 11863 11864 11865 11866 11867 11868 11869 11870 11871 11872 11873 11874 11875 11876 11877 11878 11879 11880 11881 11882 11883 11884 11885 11886 11887 11888 11889 11890 11891 11892 11893 11894 11895 11896 11897 11898 11899 11900 11901 11902 11903 11904 11905 11906 11907 11908 11909 11910 11911 11912 11913 11914 11915 11916 11917 11918 11919 11920 11921 11922 11923 11924 11925 11926 11927 11928 11929 11930 11931 11932 11933 11934 11935 11936 11937 11938 11939 11940 11941 11942 11943 11944 11945 11946 11947 11948 11949 11950 11951 11952 11953 11954 11955 11956 11957 11958 11959 11960 11961 11962 11963 11964 11965 11966 11967 11968 11969 11970 11971 11972 11973 11974 11975 11976 11977 11978 11979 11980 11981 11982 11983 11984 11985 11986 11987 11988 11989 11990 11991 11992 11993 11994 11995 11996 11997 11998 11999 12000 12001 12002 12003 12004 12005 12006 12007 12008 12009 12010 12011 12012 12013 12014 12015 12016 12017 12018 12019 12020 12021 12022 12023 12024 12025 12026 12027 12028> # SplitBus
mul in 2 <11860 11826> out 1 <12029>     # cond trueterm
const-mul-neg-1 in 1 <11860> out 1 <12030> # cond minuscond
add in 2 <100 12030> out 1 <12031>       # cond negcond
mul in 2 <12031 11816> out 1 <12032>     # cond falseterm
add in 2 <12029 12032> out 1 <12033>     # cond result
const-mul-ffffffff in 1 <12033> out 1 <12034> # multiply-by-constant 4294967295
add in 2 <12033 11811> out 1 <12035>     # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
split in 1 <12035> outplitBus
const-mul-2 in 1 <12067> out 1 <12271>   # join source bit 31
add in 2 <12066 12271> out 1 <12272>     # join source bit 30
const-mul-2 in 1 <12272> out 1 <12273>   # join
add in 2 <12065 12273> out 1 <12274>     # join source bit 29
const-mul-2 in 1 <12274> out 1 <12275>   # join
add in 2 <12064 12275> out 1 <12276>     # join source bit 28
const-mul-2 in 1 <12276> out 1 <12277>   # join
add in 2 <12063 12277> out 1 <12278>     # join source bit 27
const-mul-2 in 1 <12278> out 1 <12279>   # join
add in 2 <12062 12279> out 1 <12280>     # join source bit 26
const-mul-2 in 1 <12280> out 1 <12281>   # join
add in 2 <12061 12281> out 1 <12282>     # join source bit 25
const-mul-2 in 1 <12282> out 1 <12283>   # join
add in 2 <12060 12283> out 1 <12284>     # join source bit 24
const-mul-2 in 1 <12284> out 1 <12285>   # join
add in 2 <12059 12285> out 1 <12286>     # join source bit 23
const-mul-2 in 1 <12286> out 1 <12287>   # join
add in 2 <12058 12287> out 1 <12288>     # join source bit 22
const-mul-2 in 1 <12288> out 1 <12289>   # join
add in 2 <12057 12289> out 1 <12290>     # join source bit 21
const-mul-2 in 1 <12290> out 1 <12291>   # join
add in 2 <12056 12291> out 1 <12292>     # join source bit 20
const-mul-2 in 1 <12292> out 1 <12293>   # join
add in 2 <12055 12293> out 1 <12294>     # join source bit 19
const-mul-2 in 1 <12294> out 1 <12295>   # join
add in 2 <12054 12295> out 1 <12296>     # join source bit 18
const-mul-2 in 1 <12296> out 1 <12297>   # join
add in 2 <12053 12297> out 1 <12298>     # join source bit 17
const-mul-2 in 1 <12298> out 1 <12299>   # join
add in 2 <12052 12299> out 1 <12300>     # join source bit 16
const-mul-2 in 1 <12300> out 1 <12301>   # join
add in 2 <12051 12301> out 1 <12302>     # join source bit 15
const-mul-2 in 1 <12302> out 1 <12303>   # join
add in 2 <12050 12303> out 1 <12304>     # join source bit 14
const-mul-2 in 1 <12304> out 1 <12305>   # join
add in 2 <12049 12305> out 1 <12306>     # join source bit 13
const-mul-2 in 1 <12306> out 1 <12307>   # join
add in 2 <12048 12307> out 1 <12308>     # join source bit 12
const-mul-2 in 1 <12308> out 1 <12309>   # join
add in 2 <12047 12309> out 1 <12310>     # join source bit 11
const-mul-2 in 1 <12310> out 1 <12311>   # join
add in 2 <12046 12311> out 1 <12312>     # join source bit 10
const-mul-2 in 1 <12312> out 1 <12313>   # join
add in 2 <12045 12313> out 1 <12314>     # join source bit 9
const-mul-2 in 1 <12314> out 1 <12315>   # join
add in 2 <12044 12315> out 1 <12316>     # join source bit 8
const-mul-2 in 1 <12316> out 1 <12317>   # join
add in 2 <12043 12317> out 1 <12318>     # join source bit 7
const-mul-2 in 1 <12318> out 1 <12319>   # join
add in 2 <12042 12319> out 1 <12320>     # join source bit 6
const-mul-2 in 1 <12320> out 1 <12321>   # join
add in 2 <12041 12321> out 1 <12322>     # join source bit 5
const-mul-2 in 1 <12322> out 1 <12323>   # join
add in 2 <12040 12323> out 1 <12324>     # join source bit 4
const-mul-2 in 1 <12324> out 1 <12325>   # join
add in 2 <12039 12325> out 1 <12326>     # join source bit 3
const-mul-2 in 1 <12326> out 1 <12327>   # join
add in 2 <12038 12327> out 1 <12328>     # join source bit 2
const-mul-2 in 1 <12328> out 1 <12329>   # join
add in 2 <12037 12329> out 1 <12330>     # join source bit 1
const-mul-2 in 1 <12330> out 1 <12331>   # join
add in 2 <12036 12331> out 1 <12332>     # join source bit 0
add in 2 <12332 12332> out 1 <12333>     # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <12333> out 1 <12334> # multiply-by-constant 4294967295
add in 2 <12035 12334> out 1 <12335>     # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <12033> out 1 <12336> # multiply-by-constant 4294967295
add in 2 <11811 12336> out 1 <12337>     # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <12337> outplitBus
mul in 2 <12369 12335> out 1 <12605>     # cond trueterm
const-mul-neg-1 in 1 <12369> out 1 <12606> # cond minuscond
add in 2 <100 12606> out 1 <12607>       # cond negcond
mul in 2 <12607 11811> out 1 <12608>     # cond falseterm
add in 2 <12605 12608> out 1 <12609>     # cond result
add in 2 <12609 104> out 1 <12610>       # ArithBusReq.AddReq(DFG.Conditional,DFG.Constant)
const-mul-ffffffff in 1 <5> out 1 <12611> # multiply-by-constant 4294967295
add in 2 <12610 12611> out 1 <12612>     # 'CmpLT DFG.Add - DFG.Input'
split in 1 <12612> outplitBus
mul in 2 <12644 103> out 1 <12851>       # cond trueterm
const-mul-neg-1 in 1 <12644> out 1 <12852> # cond minuscond
add in 2 <100 12852> out 1 <12853>       # cond negcond
mul in 2 <12853 102> out 1 <12854>       # cond falseterm
add in 2 <12851 12854> out 1 <12855>     # cond result
add in 2 <12609 3084> out 1 <12856>      # ArithBusReq.AddReq(DFG.Conditional,DFG.Negate)
const-mul-ffffffff in 1 <12856> out 1 <12857> # multiply-by-constant 4294967295
add in 2 <5 12857> out 1 <12858>         # 'CmpLT DFG.Input - DFG.Subtract'
split in 1 <12858> outplitBus
mul in 2 <12890 103> out 1 <13129>       # cond trueterm
const-mul-neg-1 in 1 <12890> out 1 <13130> # cond minuscond
add in 2 <100 13130> out 1 <13131>       # cond negcond
mul in 2 <13131 12855> out 1 <13132>     # cond falseterm
add in 2 <13129 13132> out 1 <13133>     # cond result
const-mul-ffffffff in 1 <4> out 1 <13134> # multiply-by-constant 4294967295
add in 2 <4 5> out 1 <13135>             # ArithBusReq.AddReq(DFG.Input,DFG.Input)
add in 2 <13135 13134> out 1 <13136>     # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <13136> out 1 <13137> # multiply-by-constant 4294967295
add in 2 <13135 13137> out 1 <13138>     # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <4> out 1 <13139> # multiply-by-constant 4294967295
add in 2 <5 13139> out 1 <13140>         # 'CmpLT DFG.Input - DFG.Input'
split in 1 <13140> out 65 <13141 13142 13143 13144 13145 13146 13147 13148 13149 13150 13151 13152 13153 13154 13155 13156 13157 13158 13159 13160 13161 13162 13163 13164 13165 13166 13167 13168 13169 13170 13171 13172 13173 13174 13175 13176 13177 13178 13179 13180 13181 13182 13183 13184 13185 13186 13187 13188 13189 13190 13191 13192 13193 13194 13195 13196 13197 13198 13199 13200 13201 13202 13203 13204 13205> # SplitBus
mul in 2 <13172 13138> out 1 <13206>     # cond trueterm
const-mul-neg-1 in 1 <13172> out 1 <13207> # cond minuscond
add in 2 <100 13207> out 1 <13208>       # cond negcond
mul in 2 <13208 5> out 1 <13209>         # cond falseterm
add in 2 <13206 13209> out 1 <13210>     # cond result
const-mul-ffffffff in 1 <13210> out 1 <13211> # multiply-by-constant 4294967295
add in 2 <13210 6> out 1 <13212>         # ArithBusReq.AddReq(DFG.Conditional,DFG.Input)
add in 2 <13212 13211> out 1 <13213>     # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <13213> out 1 <13214> # multiply-by-constant 4294967295
add in 2 <13212 13214> out 1 <13215>     # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <13210> out 1 <13216> # multiply-by-constant 4294967295
add in 2 <6 13216> out 1 <13217>         # 'CmpLT DFG.Input - DFG.Conditional'
split in 1 <13217> out 131 <13218 13219 13220 13221 13222 13223 13224 13225 13226 13227 13228 13229 13230 13231 13232 13233 13234 13235 13236 13237 13238 13239 13240 13241 13242 13243 13244 13245 13246 13247 13248 13249 13250 13251 13252 13253 13254 13255 13256 13257 13258 13259 13260 13261 13262 13263 13264 13265 13266 13267 13268 13269 13270 13271 13272 13273 13274 13275 13276 13277 13278 13279 13280 13281 13282 13283 13284 13285 13286 13287 13288 13289 13290 13291 13292 13293 13294 13295 13296 13297 13298 13299 13300 13301 13302 13303 13304 13305 13306 13307 13308 13309 13310 13311 13312 13313 13314 13315 13316 13317 13318 13319 13320 13321 13322 13323 13324 13325 13326 13327 13328 13329 13330 13331 13332 13333 13334 13335 13336 13337 13338 13339 13340 13341 13342 13343 13344 13345 13346 13347 13348> # SplitBus
mul in 2 <13249 13215> out 1 <13349>     # cond trueterm
const-mul-neg-1 in 1 <13249> out 1 <13350> # cond minuscond
add in 2 <100 13350> out 1 <13351>       # cond negcond
mul in 2 <13351 6> out 1 <13352>         # cond falseterm
add in 2 <13349 13352> out 1 <13353>     # cond result
const-mul-ffffffff in 1 <13353> out 1 <13354> # multiply-by-constant 4294967295
add in 2 <13353 7> out 1 <13355>         # ArithBusReq.AddReq(DFG.Conditional,DFG.Input)
add in 2 <13355 13354> out 1 <13356>     # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <13353> out 1 <13357> # multiply-by-constant 4294967295
add in 2 <7 13357> out 1 <13358>         # 'CmpLT DFG.Input - DFG.Conditional'
split in 1 <13358> out 197 <13359 13360 13361 13362 13363 13364 13365 13366 13367 13368 13369 13370 13371 13372 13373 13374 13375 13376 13377 13378 13379 13380 13381 13382 13383 13384 13385 13386 13387 13388 13389 13390 13391 13392 13393 13394 13395 13396 13397 13398 13399 13400 13401 13402 13403 13404 13405 13406 13407 13408 13409 13410 13411 13412 13413 13414 13415 13416 13417 13418 13419 13420 13421 13422 13423 13424 13425 13426 13427 13428 13429 13430 13431 13432 13433 13434 13435 13436 13437 13438 13439 13440 13441 13442 13443 13444 13445 13446 13447 13448 13449 13450 13451 13452 13453 13454 13455 13456 13457 13458 13459 13460 13461 13462 13463 13464 13465 13466 13467 13468 13469 13470 13471 13472 13473 13474 13475 13476 13477 13478 13479 13480 13481 13482 13483 13484 13485 13486 13487 13488 13489 13490 13491 13492 13493 13494 13495 13496 13497 13498 13499 13500 13501 13502 13503 13504 13505 13506 13507 13508 13509 13510 13511 13512 13513 13514 13515 13516 13517 13518 13519 13520 13521 13522 13523 13524 13525 13526 13527 13528 13529 13530 13531 13532 13533 13534 13535 13536 13537 13538 13539 13540 13541 13542 13543 13544 13545 13546 13547 13548 13549 13550 13551 13552 13553 13554 13555> # SplitBus
mul in 2 <13390 13356> out 1 <13556>     # cond trueterm
const-mul-neg-1 in 1 <13390> out 1 <13557> # cond minuscond
add in 2 <100 13557> out 1 <13558>       # cond negcond
mul in 2 <13558 13353> out 1 <13559>     # cond falseterm
add in 2 <13556 13559> out 1 <13560>     # cond result
mul in 2 <13249 13213> out 1 <13561>     # cond trueterm
const-mul-neg-1 in 1 <13249> out 1 <13562> # cond minuscond
add in 2 <100 13562> out 1 <13563>       # cond negcond
mul in 2 <13563 13210> out 1 <13564>     # cond falseterm
add in 2 <13561 13564> out 1 <13565>     # cond result
mul in 2 <13172 13136> out 1 <13566>     # cond trueterm
const-mul-neg-1 in 1 <13172> out 1 <13567> # cond minuscond
add in 2 <100 13567> out 1 <13568>       # cond negcond
mul in 2 <13568 4> out 1 <13569>         # cond falseterm
add in 2 <13566 13569> out 1 <13570>     # cond result
const-mul-ffffffff in 1 <13570> out 1 <13571> # multiply-by-constant 4294967295
add in 2 <13570 13565> out 1 <13572>     # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
add in 2 <13572 13571> out 1 <13573>     # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <13573> out 1 <13574> # multiply-by-constant 4294967295
add in 2 <13572 13574> out 1 <13575>     # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <13570> out 1 <13576> # multiply-by-constant 4294967295
add in 2 <13565 13576> out 1 <13577>     # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <13577> outplitBus
mul in 2 <13609 13575> out 1 <13710>     # cond trueterm
const-mul-neg-1 in 1 <13609> out 1 <13711> # cond minuscond
add in 2 <100 13711> out 1 <13712>       # cond negcond
mul in 2 <13712 13565> out 1 <13713>     # cond falseterm
add in 2 <13710 13713> out 1 <13714>     # cond result
const-mul-ffffffff in 1 <13714> out 1 <13715> # multiply-by-constant 4294967295
add in 2 <13714 13560> out 1 <13716>     # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
add in 2 <13716 13715> out 1 <13717>     # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <13717> out 1 <13718> # multiply-by-constant 4294967295
add in 2 <13716 13718> out 1 <13719>     # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <13714> out 1 <13720> # multiply-by-constant 4294967295
add in 2 <13560 13720> out 1 <13721>     # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <13721> out 199 <13722 13723 13724 13725 13726 13727 13728 13729 13730 13731 13732 13733 13734 13735 13736 13737 13738 13739 13740 13741 13742 13743 13744 13745 13746 13747 13748 13749 13750 13751 13752 13753 13754 13755 13756 13757 13758 13759 13760 13761 13762 13763 13764 13765 13766 13767 13768 13769 13770 13771 13772 13773 13774 13775 13776 13777 13778 13779 13780 13781 13782 13783 13784 13785 13786 13787 13788 13789 13790 13791 13792 13793 13794 13795 13796 13797 13798 13799 13800 13801 13802 13803 13804 13805 13806 13807 13808 13809 13810 13811 13812 13813 13814 13815 13816 13817 13818 13819 13820 13821 13822 13823 13824 13825 13826 13827 13828 13829 13830 13831 13832 13833 13834 13835 13836 13837 13838 13839 13840 13841 13842 13843 13844 13845 13846 13847 13848 13849 13850 13851 13852 13853 13854 13855 13856 13857 13858 13859 13860 13861 13862 13863 13864 13865 13866 13867 13868 13869 13870 13871 13872 13873 13874 13875 13876 13877 13878 13879 13880 13881 13882 13883 13884 13885 13886 13887 13888 13889 13890 13891 13892 13893 13894 13895 13896 13897 13898 13899 13900 13901 13902 13903 13904 13905 13906 13907 13908 13909 13910 13911 13912 13913 13914 13915 13916 13917 13918 13919 13920> # SplitBus
mul in 2 <13753 13719> out 1 <13921>     # cond trueterm
const-mul-neg-1 in 1 <13753> out 1 <13922> # cond minuscond
add in 2 <100 13922> out 1 <13923>       # cond negcond
mul in 2 <13923 13560> out 1 <13924>     # cond falseterm
add in 2 <13921 13924> out 1 <13925>     # cond result
const-mul-ffffffff in 1 <13925> out 1 <13926> # multiply-by-constant 4294967295
const-mul-ffffffff in 1 <13356> out 1 <13927> # multiply-by-constant 4294967295
add in 2 <13355 13927> out 1 <13928>     # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
mul in 2 <13390 13928> out 1 <13929>     # cond trueterm
const-mul-neg-1 in 1 <13390> out 1 <13930> # cond minuscond
add in 2 <100 13930> out 1 <13931>       # cond negcond
mul in 2 <13931 7> out 1 <13932>         # cond falseterm
add in 2 <13929 13932> out 1 <13933>     # cond result
const-mul-ffffffff in 1 <13933> out 1 <13934> # multiply-by-constant 4294967295
add in 2 <13933 8> out 1 <13935>         # ArithBusReq.AddReq(DFG.Conditional,DFG.Input)
split in 1 <13935> outplitBus
const-mul-2 in 1 <13967> out 1 <14167>   # join source bit 31
add in 2 <13966 14167> out 1 <14168>     # join source bit 30
const-mul-2 in 1 <14168> out 1 <14169>   # join
add in 2 <13965 14169> out 1 <14170>     # join source bit 29
const-mul-2 in 1 <14170> out 1 <14171>   # join
add in 2 <13964 14171> out 1 <14172>     # join source bit 28
const-mul-2 in 1 <14172> out 1 <14173>   # join
add in 2 <13963 14173> out 1 <14174>     # join source bit 27
const-mul-2 in 1 <14174> out 1 <14175>   # join
add in 2 <13962 14175> out 1 <14176>     # join source bit 26
const-mul-2 in 1 <14176> out 1 <14177>   # join
add in 2 <13961 14177> out 1 <14178>     # join source bit 25
const-mul-2 in 1 <14178> out 1 <14179>   # join
add in 2 <13960 14179> out 1 <14180>     # join source bit 24
const-mul-2 in 1 <14180> out 1 <14181>   # join
add in 2 <13959 14181> out 1 <14182>     # join source bit 23
const-mul-2 in 1 <14182> out 1 <14183>   # join
add in 2 <13958 14183> out 1 <14184>     # join source bit 22
const-mul-2 in 1 <14184> out 1 <14185>   # join
add in 2 <13957 14185> out 1 <14186>     # join source bit 21
const-mul-2 in 1 <14186> out 1 <14187>   # join
add in 2 <13956 14187> out 1 <14188>     # join source bit 20
const-mul-2 in 1 <14188> out 1 <14189>   # join
add in 2 <13955 14189> out 1 <14190>     # join source bit 19
const-mul-2 in 1 <14190> out 1 <14191>   # join
add in 2 <13954 14191> out 1 <14192>     # join source bit 18
const-mul-2 in 1 <14192> out 1 <14193>   # join
add in 2 <13953 14193> out 1 <14194>     # join source bit 17
const-mul-2 in 1 <14194> out 1 <14195>   # join
add in 2 <13952 14195> out 1 <14196>     # join source bit 16
const-mul-2 in 1 <14196> out 1 <14197>   # join
add in 2 <13951 14197> out 1 <14198>     # join source bit 15
const-mul-2 in 1 <14198> out 1 <14199>   # join
add in 2 <13950 14199> out 1 <14200>     # join source bit 14
const-mul-2 in 1 <14200> out 1 <14201>   # join
add in 2 <13949 14201> out 1 <14202>     # join source bit 13
const-mul-2 in 1 <14202> out 1 <14203>   # join
add in 2 <13948 14203> out 1 <14204>     # join source bit 12
const-mul-2 in 1 <14204> out 1 <14205>   # join
add in 2 <13947 14205> out 1 <14206>     # join source bit 11
const-mul-2 in 1 <14206> out 1 <14207>   # join
add in 2 <13946 14207> out 1 <14208>     # join source bit 10
const-mul-2 in 1 <14208> out 1 <14209>   # join
add in 2 <13945 14209> out 1 <14210>     # join source bit 9
const-mul-2 in 1 <14210> out 1 <14211>   # join
add in 2 <13944 14211> out 1 <14212>     # join source bit 8
const-mul-2 in 1 <14212> out 1 <14213>   # join
add in 2 <13943 14213> out 1 <14214>     # join source bit 7
const-mul-2 in 1 <14214> out 1 <14215>   # join
add in 2 <13942 14215> out 1 <14216>     # join source bit 6
const-mul-2 in 1 <14216> out 1 <14217>   # join
add in 2 <13941 14217> out 1 <14218>     # join source bit 5
const-mul-2 in 1 <14218> out 1 <14219>   # join
add in 2 <13940 14219> out 1 <14220>     # join source bit 4
const-mul-2 in 1 <14220> out 1 <14221>   # join
add in 2 <13939 14221> out 1 <14222>     # join source bit 3
const-mul-2 in 1 <14222> out 1 <14223>   # join
add in 2 <13938 14223> out 1 <14224>     # join source bit 2
const-mul-2 in 1 <14224> out 1 <14225>   # join
add in 2 <13937 14225> out 1 <14226>     # join source bit 1
const-mul-2 in 1 <14226> out 1 <14227>   # join
add in 2 <13936 14227> out 1 <14228>     # join source bit 0
add in 2 <14228 14228> out 1 <14229>     # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <13933> out 1 <14230> # multiply-by-constant 4294967295
add in 2 <8 14230> out 1 <14231>         # 'CmpLT DFG.Input - DFG.Conditional'
split in 1 <14231> outplitBus
mul in 2 <14263 14229> out 1 <14495>     # cond trueterm
const-mul-neg-1 in 1 <14263> out 1 <14496> # cond minuscond
add in 2 <100 14496> out 1 <14497>       # cond negcond
mul in 2 <14497 13933> out 1 <14498>     # cond falseterm
add in 2 <14495 14498> out 1 <14499>     # cond result
add in 2 <13925 14499> out 1 <14500>     # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
split in 1 <14500> outplitBus
const-mul-2 in 1 <14532> out 1 <14734>   # join source bit 31
add in 2 <14531 14734> out 1 <14735>     # join source bit 30
const-mul-2 in 1 <14735> out 1 <14736>   # join
add in 2 <14530 14736> out 1 <14737>     # join source bit 29
const-mul-2 in 1 <14737> out 1 <14738>   # join
add in 2 <14529 14738> out 1 <14739>     # join source bit 28
const-mul-2 in 1 <14739> out 1 <14740>   # join
add in 2 <14528 14740> out 1 <14741>     # join source bit 27
const-mul-2 in 1 <14741> out 1 <14742>   # join
add in 2 <14527 14742> out 1 <14743>     # join source bit 26
const-mul-2 in 1 <14743> out 1 <14744>   # join
add in 2 <14526 14744> out 1 <14745>     # join source bit 25
const-mul-2 in 1 <14745> out 1 <14746>   # join
add in 2 <14525 14746> out 1 <14747>     # join source bit 24
const-mul-2 in 1 <14747> out 1 <14748>   # join
add in 2 <14524 14748> out 1 <14749>     # join source bit 23
const-mul-2 in 1 <14749> out 1 <14750>   # join
add in 2 <14523 14750> out 1 <14751>     # join source bit 22
const-mul-2 in 1 <14751> out 1 <14752>   # join
add in 2 <14522 14752> out 1 <14753>     # join source bit 21
const-mul-2 in 1 <14753> out 1 <14754>   # join
add in 2 <14521 14754> out 1 <14755>     # join source bit 20
const-mul-2 in 1 <14755> out 1 <14756>   # join
add in 2 <14520 14756> out 1 <14757>     # join source bit 19
const-mul-2 in 1 <14757> out 1 <14758>   # join
add in 2 <14519 14758> out 1 <14759>     # join source bit 18
const-mul-2 in 1 <14759> out 1 <14760>   # join
add in 2 <14518 14760> out 1 <14761>     # join source bit 17
const-mul-2 in 1 <14761> out 1 <14762>   # join
add in 2 <14517 14762> out 1 <14763>     # join source bit 16
const-mul-2 in 1 <14763> out 1 <14764>   # join
add in 2 <14516 14764> out 1 <14765>     # join source bit 15
const-mul-2 in 1 <14765> out 1 <14766>   # join
add in 2 <14515 14766> out 1 <14767>     # join source bit 14
const-mul-2 in 1 <14767> out 1 <14768>   # join
add in 2 <14514 14768> out 1 <14769>     # join source bit 13
const-mul-2 in 1 <14769> out 1 <14770>   # join
add in 2 <14513 14770> out 1 <14771>     # join source bit 12
const-mul-2 in 1 <14771> out 1 <14772>   # join
add in 2 <14512 14772> out 1 <14773>     # join source bit 11
const-mul-2 in 1 <14773> out 1 <14774>   # join
add in 2 <14511 14774> out 1 <14775>     # join source bit 10
const-mul-2 in 1 <14775> out 1 <14776>   # join
add in 2 <14510 14776> out 1 <14777>     # join source bit 9
const-mul-2 in 1 <14777> out 1 <14778>   # join
add in 2 <14509 14778> out 1 <14779>     # join source bit 8
const-mul-2 in 1 <14779> out 1 <14780>   # join
add in 2 <14508 14780> out 1 <14781>     # join source bit 7
const-mul-2 in 1 <14781> out 1 <14782>   # join
add in 2 <14507 14782> out 1 <14783>     # join source bit 6
const-mul-2 in 1 <14783> out 1 <14784>   # join
add in 2 <14506 14784> out 1 <14785>     # join source bit 5
const-mul-2 in 1 <14785> out 1 <14786>   # join
add in 2 <14505 14786> out 1 <14787>     # join source bit 4
const-mul-2 in 1 <14787> out 1 <14788>   # join
add in 2 <14504 14788> out 1 <14789>     # join source bit 3
const-mul-2 in 1 <14789> out 1 <14790>   # join
add in 2 <14503 14790> out 1 <14791>     # join source bit 2
const-mul-2 in 1 <14791> out 1 <14792>   # join
add in 2 <14502 14792> out 1 <14793>     # join source bit 1
const-mul-2 in 1 <14793> out 1 <14794>   # join
add in 2 <14501 14794> out 1 <14795>     # join source bit 0
add in 2 <14795 14795> out 1 <14796>     # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <13925> out 1 <14797> # multiply-by-constant 4294967295
add in 2 <14499 14797> out 1 <14798>     # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <14798> outplitBus
mul in 2 <14830 14796> out 1 <15064>     # cond trueterm
const-mul-neg-1 in 1 <14830> out 1 <15065> # cond minuscond
add in 2 <100 15065> out 1 <15066>       # cond negcond
mul in 2 <15066 13925> out 1 <15067>     # cond falseterm
add in 2 <15064 15067> out 1 <15068>     # cond result
mul in 2 <13753 13717> out 1 <15069>     # cond trueterm
const-mul-neg-1 in 1 <13753> out 1 <15070> # cond minuscond
add in 2 <100 15070> out 1 <15071>       # cond negcond
mul in 2 <15071 13714> out 1 <15072>     # cond falseterm
add in 2 <15069 15072> out 1 <15073>     # cond result
mul in 2 <13609 13573> out 1 <15074>     # cond trueterm
const-mul-neg-1 in 1 <13609> out 1 <15075> # cond minuscond
add in 2 <100 15075> out 1 <15076>       # cond negcond
mul in 2 <15076 13570> out 1 <15077>     # cond falseterm
add in 2 <15074 15077> out 1 <15078>     # cond result
const-mul-ffffffff in 1 <15078> out 1 <15079> # multiply-by-constant 4294967295
add in 2 <15078 15073> out 1 <15080>     # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
add in 2 <15080 15079> out 1 <15081>     # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <15081> out 1 <15082> # multiply-by-constant 4294967295
add in 2 <15080 15082> out 1 <15083>     # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <15078> out 1 <15084> # multiply-by-constant 4294967295
add in 2 <15073 15084> out 1 <15085>     # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <15085> out 200 <15086 15087 15088 15089 15090 15091 15092 15093 15094 15095 15096 15097 15098 15099 15100 15101 15102 15103 15104 15105 15106 15107 15108 15109 15110 15111 15112 15113 15114 15115 15116 15117 15118 15119 15120 15121 15122 15123 15124 15125 15126 15127 15128 15129 15130 15131 15132 15133 15134 15135 15136 15137 15138 15139 15140 15141 15142 15143 15144 15145 15146 15147 15148 15149 15150 15151 15152 15153 15154 15155 15156 15157 15158 15159 15160 15161 15162 15163 15164 15165 15166 15167 15168 15169 15170 15171 15172 15173 15174 15175 15176 15177 15178 15179 15180 15181 15182 15183 15184 15185 15186 15187 15188 15189 15190 15191 15192 15193 15194 15195 15196 15197 15198 15199 15200 15201 15202 15203 15204 15205 15206 15207 15208 15209 15210 15211 15212 15213 15214 15215 15216 15217 15218 15219 15220 15221 15222 15223 15224 15225 15226 15227 15228 15229 15230 15231 15232 15233 15234 15235 15236 15237 15238 15239 15240 15241 15242 15243 15244 15245 15246 15247 15248 15249 15250 15251 15252 15253 15254 15255 15256 15257 15258 15259 15260 15261 15262 15263 15264 15265 15266 15267 15268 15269 15270 15271 15272 15273 15274 15275 15276 15277 15278 15279 15280 15281 15282 15283 15284 15285> # SplitBus
mul in 2 <15117 15083> out 1 <15286>     # cond trueterm
const-mul-neg-1 in 1 <15117> out 1 <15287> # cond minuscond
add in 2 <100 15287> out 1 <15288>       # cond negcond
mul in 2 <15288 15073> out 1 <15289>     # cond falseterm
add in 2 <15286 15289> out 1 <15290>     # cond result
const-mul-ffffffff in 1 <15290> out 1 <15291> # multiply-by-constant 4294967295
add in 2 <15290 15068> out 1 <15292>     # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
split in 1 <15292> outplitBus
const-mul-2 in 1 <15324> out 1 <15528>   # join source bit 31
add in 2 <15323 15528> out 1 <15529>     # join source bit 30
const-mul-2 in 1 <15529> out 1 <15530>   # join
add in 2 <15322 15530> out 1 <15531>     # join source bit 29
const-mul-2 in 1 <15531> out 1 <15532>   # join
add in 2 <15321 15532> out 1 <15533>     # join source bit 28
const-mul-2 in 1 <15533> out 1 <15534>   # join
add in 2 <15320 15534> out 1 <15535>     # join source bit 27
const-mul-2 in 1 <15535> out 1 <15536>   # join
add in 2 <15319 15536> out 1 <15537>     # join source bit 26
const-mul-2 in 1 <15537> out 1 <15538>   # join
add in 2 <15318 15538> out 1 <15539>     # join source bit 25
const-mul-2 in 1 <15539> out 1 <15540>   # join
add in 2 <15317 15540> out 1 <15541>     # join source bit 24
const-mul-2 in 1 <15541> out 1 <15542>   # join
add in 2 <15316 15542> out 1 <15543>     # join source bit 23
const-mul-2 in 1 <15543> out 1 <15544>   # join
add in 2 <15315 15544> out 1 <15545>     # join source bit 22
const-mul-2 in 1 <15545> out 1 <15546>   # join
add in 2 <15314 15546> out 1 <15547>     # join source bit 21
const-mul-2 in 1 <15547> out 1 <15548>   # join
add in 2 <15313 15548> out 1 <15549>     # join source bit 20
const-mul-2 in 1 <15549> out 1 <15550>   # join
add in 2 <15312 15550> out 1 <15551>     # join source bit 19
const-mul-2 in 1 <15551> out 1 <15552>   # join
add in 2 <15311 15552> out 1 <15553>     # join source bit 18
const-mul-2 in 1 <15553> out 1 <15554>   # join
add in 2 <15310 15554> out 1 <15555>     # join source bit 17
const-mul-2 in 1 <15555> out 1 <15556>   # join
add in 2 <15309 15556> out 1 <15557>     # join source bit 16
const-mul-2 in 1 <15557> out 1 <15558>   # join
add in 2 <15308 15558> out 1 <15559>     # join source bit 15
const-mul-2 in 1 <15559> out 1 <15560>   # join
add in 2 <15307 15560> out 1 <15561>     # join source bit 14
const-mul-2 in 1 <15561> out 1 <15562>   # join
add in 2 <15306 15562> out 1 <15563>     # join source bit 13
const-mul-2 in 1 <15563> out 1 <15564>   # join
add in 2 <15305 15564> out 1 <15565>     # join source bit 12
const-mul-2 in 1 <15565> out 1 <15566>   # join
add in 2 <15304 15566> out 1 <15567>     # join source bit 11
const-mul-2 in 1 <15567> out 1 <15568>   # join
add in 2 <15303 15568> out 1 <15569>     # join source bit 10
const-mul-2 in 1 <15569> out 1 <15570>   # join
add in 2 <15302 15570> out 1 <15571>     # join source bit 9
const-mul-2 in 1 <15571> out 1 <15572>   # join
add in 2 <15301 15572> out 1 <15573>     # join source bit 8
const-mul-2 in 1 <15573> out 1 <15574>   # join
add in 2 <15300 15574> out 1 <15575>     # join source bit 7
const-mul-2 in 1 <15575> out 1 <15576>   # join
add in 2 <15299 15576> out 1 <15577>     # join source bit 6
const-mul-2 in 1 <15577> out 1 <15578>   # join
add in 2 <15298 15578> out 1 <15579>     # join source bit 5
const-mul-2 in 1 <15579> out 1 <15580>   # join
add in 2 <15297 15580> out 1 <15581>     # join source bit 4
const-mul-2 in 1 <15581> out 1 <15582>   # join
add in 2 <15296 15582> out 1 <15583>     # join source bit 3
const-mul-2 in 1 <15583> out 1 <15584>   # join
add in 2 <15295 15584> out 1 <15585>     # join source bit 2
const-mul-2 in 1 <15585> out 1 <15586>   # join
add in 2 <15294 15586> out 1 <15587>     # join source bit 1
const-mul-2 in 1 <15587> out 1 <15588>   # join
add in 2 <15293 15588> out 1 <15589>     # join source bit 0
add in 2 <15589 15589> out 1 <15590>     # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <15590> out 1 <15591> # multiply-by-constant 4294967295
add in 2 <15292 15591> out 1 <15592>     # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <15290> out 1 <15593> # multiply-by-constant 4294967295
add in 2 <15068 15593> out 1 <15594>     # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <15594> outplitBus
mul in 2 <15626 15592> out 1 <15862>     # cond trueterm
const-mul-neg-1 in 1 <15626> out 1 <15863> # cond minuscond
add in 2 <100 15863> out 1 <15864>       # cond negcond
mul in 2 <15864 15068> out 1 <15865>     # cond falseterm
add in 2 <15862 15865> out 1 <15866>     # cond result
add in 2 <15866 104> out 1 <15867>       # ArithBusReq.AddReq(DFG.Conditional,DFG.Constant)
const-mul-ffffffff in 1 <6> out 1 <15868> # multiply-by-constant 4294967295
add in 2 <15867 15868> out 1 <15869>     # 'CmpLT DFG.Add - DFG.Input'
split in 1 <15869> outplitBus
mul in 2 <15901 103> out 1 <16108>       # cond trueterm
const-mul-neg-1 in 1 <15901> out 1 <16109> # cond minuscond
add in 2 <100 16109> out 1 <16110>       # cond negcond
mul in 2 <16110 102> out 1 <16111>       # cond falseterm
add in 2 <16108 16111> out 1 <16112>     # cond result
add in 2 <15866 3084> out 1 <16113>      # ArithBusReq.AddReq(DFG.Conditional,DFG.Negate)
const-mul-ffffffff in 1 <16113> out 1 <16114> # multiply-by-constant 4294967295
add in 2 <6 16114> out 1 <16115>         # 'CmpLT DFG.Input - DFG.Subtract'
split in 1 <16115> out 270 <16116 16117 16118 16119 16120 16121 16122 16123 16124 16125 16126 16127 16128 16129 16130 16131 16132 16133 16134 16135 16136 16137 16138 16139 16140 16141 16142 16143 16144 16145 16146 16147 16148 16149 16150 16151 16152 16153 16154 16155 16156 16157 16158 16159 16160 16161 16162 16163 16164 16165 16166 16167 16168 16169 16170 16171 16172 16173 16174 16175 16176 16177 16178 16179 16180 16181 16182 16183 16184 16185 16186 16187 16188 16189 16190 16191 16192 16193 16194 16195 16196 16197 16198 16199 16200 16201 16202 16203 16204 16205 16206 16207 16208 16209 16210 16211 16212 16213 16214 16215 16216 16217 16218 16219 16220 16221 16222 16223 16224 16225 16226 16227 16228 16229 16230 16231 16232 16233 16234 16235 16236 16237 16238 16239 16240 16241 16242 16243 16244 16245 16246 16247 16248 16249 16250 16251 16252 16253 16254 16255 16256 16257 16258 16259 16260 16261 16262 16263 16264 16265 16266 16267 16268 16269 16270 16271 16272 16273 16274 16275 16276 16277 16278 16279 16280 16281 16282 16283 16284 16285 16286 16287 16288 16289 16290 16291 16292 16293 16294 16295 16296 16297 16298 16299 16300 16301 16302 16303 16304 16305 16306 16307 16308 16309 16310 16311 16312 16313 16314 16315 16316 16317 16318 16319 16320 16321 16322 16323 16324 16325 16326 16327 16328 16329 16330 16331 16332 16333 16334 16335 16336 16337 16338 16339 16340 16341 16342 16343 16344 16345 16346 16347 16348 16349 16350 16351 16352 16353 16354 16355 16356 16357 16358 16359 16360 16361 16362 16363 16364 16365 16366 16367 16368 16369 16370 16371 16372 16373 16374 16375 16376 16377 16378 16379 16380 16381 16382 16383 16384 16385> # SplitBus
mul in 2 <16147 103> out 1 <16386>       # cond trueterm
const-mul-neg-1 in 1 <16147> out 1 <16387> # cond minuscond
add in 2 <100 16387> out 1 <16388>       # cond negcond
mul in 2 <16388 16112> out 1 <16389>     # cond falseterm
add in 2 <16386 16389> out 1 <16390>     # cond result
const-mul-ffffffff in 1 <5> out 1 <16391> # multiply-by-constant 4294967295
add in 2 <5 6> out 1 <16392>             # ArithBusReq.AddReq(DFG.Input,DFG.Input)
add in 2 <16392 16391> out 1 <16393>     # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <16393> out 1 <16394> # multiply-by-constant 4294967295
add in 2 <16392 16394> out 1 <16395>     # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <5> out 1 <16396> # multiply-by-constant 4294967295
add in 2 <6 16396> out 1 <16397>         # 'CmpLT DFG.Input - DFG.Input'
split in 1 <16397> out 65 <16398 16399 16400 16401 16402 16403 16404 16405 16406 16407 16408 16409 16410 16411 16412 16413 16414 16415 16416 16417 16418 16419 16420 16421 16422 16423 16424 16425 16426 16427 16428 16429 16430 16431 16432 16433 16434 16435 16436 16437 16438 16439 16440 16441 16442 16443 16444 16445 16446 16447 16448 16449 16450 16451 16452 16453 16454 16455 16456 16457 16458 16459 16460 16461 16462> # SplitBus
mul in 2 <16429 16395> out 1 <16463>     # cond trueterm
const-mul-neg-1 in 1 <16429> out 1 <16464> # cond minuscond
add in 2 <100 16464> out 1 <16465>       # cond negcond
mul in 2 <16465 6> out 1 <16466>         # cond falseterm
add in 2 <16463 16466> out 1 <16467>     # cond result
const-mul-ffffffff in 1 <16467> out 1 <16468> # multiply-by-constant 4294967295
add in 2 <16467 7> out 1 <16469>         # ArithBusReq.AddReq(DFG.Conditional,DFG.Input)
add in 2 <16469 16468> out 1 <16470>     # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <16470> out 1 <16471> # multiply-by-constant 4294967295
add in 2 <16469 16471> out 1 <16472>     # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <16467> out 1 <16473> # multiply-by-constant 4294967295
add in 2 <7 16473> out 1 <16474>         # 'CmpLT DFG.Input - DFG.Conditional'
split in 1 <16474> out 131 <16475 16476 16477 16478 16479 16480 16481 16482 16483 16484 16485 16486 16487 16488 16489 16490 16491 16492 16493 16494 16495 16496 16497 16498 16499 16500 16501 16502 16503 16504 16505 16506 16507 16508 16509 16510 16511 16512 16513 16514 16515 16516 16517 16518 16519 16520 16521 16522 16523 16524 16525 16526 16527 16528 16529 16530 16531 16532 16533 16534 16535 16536 16537 16538 16539 16540 16541 16542 16543 16544 16545 16546 16547 16548 16549 16550 16551 16552 16553 16554 16555 16556 16557 16558 16559 16560 16561 16562 16563 16564 16565 16566 16567 16568 16569 16570 16571 16572 16573 16574 16575 16576 16577 16578 16579 16580 16581 16582 16583 16584 16585 16586 16587 16588 16589 16590 16591 16592 16593 16594 16595 16596 16597 16598 16599 16600 16601 16602 16603 16604 16605> # SplitBus
mul in 2 <16506 16472> out 1 <16606>     # cond trueterm
const-mul-neg-1 in 1 <16506> out 1 <16607> # cond minuscond
add in 2 <100 16607> out 1 <16608>       # cond negcond
mul in 2 <16608 7> out 1 <16609>         # cond falseterm
add in 2 <16606 16609> out 1 <16610>     # cond result
const-mul-ffffffff in 1 <16610> out 1 <16611> # multiply-by-constant 4294967295
add in 2 <16610 8> out 1 <16612>         # ArithBusReq.AddReq(DFG.Conditional,DFG.Input)
add in 2 <16612 16611> out 1 <16613>     # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <16610> out 1 <16614> # multiply-by-constant 4294967295
add in 2 <8 16614> out 1 <16615>         # 'CmpLT DFG.Input - DFG.Conditional'
split in 1 <16615> out 197 <16616 16617 16618 16619 16620 16621 16622 16623 16624 16625 16626 16627 16628 16629 16630 16631 16632 16633 16634 16635 16636 16637 16638 16639 16640 16641 16642 16643 16644 16645 16646 16647 16648 16649 16650 16651 16652 16653 16654 16655 16656 16657 16658 16659 16660 16661 16662 16663 16664 16665 16666 16667 16668 16669 16670 16671 16672 16673 16674 16675 16676 16677 16678 16679 16680 16681 16682 16683 16684 16685 16686 16687 16688 16689 16690 16691 16692 16693 16694 16695 16696 16697 16698 16699 16700 16701 16702 16703 16704 16705 16706 16707 16708 16709 16710 16711 16712 16713 16714 16715 16716 16717 16718 16719 16720 16721 16722 16723 16724 16725 16726 16727 16728 16729 16730 16731 16732 16733 16734 16735 16736 16737 16738 16739 16740 16741 16742 16743 16744 16745 16746 16747 16748 16749 16750 16751 16752 16753 16754 16755 16756 16757 16758 16759 16760 16761 16762 16763 16764 16765 16766 16767 16768 16769 16770 16771 16772 16773 16774 16775 16776 16777 16778 16779 16780 16781 16782 16783 16784 16785 16786 16787 16788 16789 16790 16791 16792 16793 16794 16795 16796 16797 16798 16799 16800 16801 16802 16803 16804 16805 16806 16807 16808 16809 16810 16811 16812> # SplitBus
mul in 2 <16647 16613> out 1 <16813>     # cond trueterm
const-mul-neg-1 in 1 <16647> out 1 <16814> # cond minuscond
add in 2 <100 16814> out 1 <16815>       # cond negcond
mul in 2 <16815 16610> out 1 <16816>     # cond falseterm
add in 2 <16813 16816> out 1 <16817>     # cond result
mul in 2 <16506 16470> out 1 <16818>     # cond trueterm
const-mul-neg-1 in 1 <16506> out 1 <16819> # cond minuscond
add in 2 <100 16819> out 1 <16820>       # cond negcond
mul in 2 <16820 16467> out 1 <16821>     # cond falseterm
add in 2 <16818 16821> out 1 <16822>     # cond result
mul in 2 <16429 16393> out 1 <16823>     # cond trueterm
const-mul-neg-1 in 1 <16429> out 1 <16824> # cond minuscond
add in 2 <100 16824> out 1 <16825>       # cond negcond
mul in 2 <16825 5> out 1 <16826>         # cond falseterm
add in 2 <16823 16826> out 1 <16827>     # cond result
const-mul-ffffffff in 1 <16827> out 1 <16828> # multiply-by-constant 4294967295
add in 2 <16827 16822> out 1 <16829>     # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
add in 2 <16829 16828> out 1 <16830>     # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <16830> out 1 <16831> # multiply-by-constant 4294967295
add in 2 <16829 16831> out 1 <16832>     # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <16827> out 1 <16833> # multiply-by-constant 4294967295
add in 2 <16822 16833> out 1 <16834>     # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <16834> outplitBus
mul in 2 <16866 16832> out 1 <16967>     # cond trueterm
const-mul-neg-1 in 1 <16866> out 1 <16968> # cond minuscond
add in 2 <100 16968> out 1 <16969>       # cond negcond
mul in 2 <16969 16822> out 1 <16970>     # cond falseterm
add in 2 <16967 16970> out 1 <16971>     # cond result
const-mul-ffffffff in 1 <16971> out 1 <16972> # multiply-by-constant 4294967295
add in 2 <16971 16817> out 1 <16973>     # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
add in 2 <16973 16972> out 1 <16974>     # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <16974> out 1 <16975> # multiply-by-constant 4294967295
add in 2 <16973 16975> out 1 <16976>     # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <16971> out 1 <16977> # multiply-by-constant 4294967295
add in 2 <16817 16977> out 1 <16978>     # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <16978> out 199 <16979 16980 16981 16982 16983 16984 16985 16986 16987 16988 16989 16990 16991 16992 16993 16994 16995 16996 16997 16998 16999 17000 17001 17002 17003 17004 17005 17006 17007 17008 17009 17010 17011 17012 17013 17014 17015 17016 17017 17018 17019 17020 17021 17022 17023 17024 17025 17026 17027 17028 17029 17030 17031 17032 17033 17034 17035 17036 17037 17038 17039 17040 17041 17042 17043 17044 17045 17046 17047 17048 17049 17050 17051 17052 17053 17054 17055 17056 17057 17058 17059 17060 17061 17062 17063 17064 17065 17066 17067 17068 17069 17070 17071 17072 17073 17074 17075 17076 17077 17078 17079 17080 17081 17082 17083 17084 17085 17086 17087 17088 17089 17090 17091 17092 17093 17094 17095 17096 17097 17098 17099 17100 17101 17102 17103 17104 17105 17106 17107 17108 17109 17110 17111 17112 17113 17114 17115 17116 17117 17118 17119 17120 17121 17122 17123 17124 17125 17126 17127 17128 17129 17130 17131 17132 17133 17134 17135 17136 17137 17138 17139 17140 17141 17142 17143 17144 17145 17146 17147 17148 17149 17150 17151 17152 17153 17154 17155 17156 17157 17158 17159 17160 17161 17162 17163 17164 17165 17166 17167 17168 17169 17170 17171 17172 17173 17174 17175 17176 17177> # SplitBus
mul in 2 <17010 16976> out 1 <17178>     # cond trueterm
const-mul-neg-1 in 1 <17010> out 1 <17179> # cond minuscond
add in 2 <100 17179> out 1 <17180>       # cond negcond
mul in 2 <17180 16817> out 1 <17181>     # cond falseterm
add in 2 <17178 17181> out 1 <17182>     # cond result
const-mul-ffffffff in 1 <17182> out 1 <17183> # multiply-by-constant 4294967295
const-mul-ffffffff in 1 <16613> out 1 <17184> # multiply-by-constant 4294967295
add in 2 <16612 17184> out 1 <17185>     # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
mul in 2 <16647 17185> out 1 <17186>     # cond trueterm
const-mul-neg-1 in 1 <16647> out 1 <17187> # cond minuscond
add in 2 <100 17187> out 1 <17188>       # cond negcond
mul in 2 <17188 8> out 1 <17189>         # cond falseterm
add in 2 <17186 17189> out 1 <17190>     # cond result
const-mul-ffffffff in 1 <17190> out 1 <17191> # multiply-by-constant 4294967295
add in 2 <17190 9> out 1 <17192>         # ArithBusReq.AddReq(DFG.Conditional,DFG.Input)
split in 1 <17192> outplitBus
const-mul-2 in 1 <17224> out 1 <17424>   # join source bit 31
add in 2 <17223 17424> out 1 <17425>     # join source bit 30
const-mul-2 in 1 <17425> out 1 <17426>   # join
add in 2 <17222 17426> out 1 <17427>     # join source bit 29
const-mul-2 in 1 <17427> out 1 <17428>   # join
add in 2 <17221 17428> out 1 <17429>     # join source bit 28
const-mul-2 in 1 <17429> out 1 <17430>   # join
add in 2 <17220 17430> out 1 <17431>     # join source bit 27
const-mul-2 in 1 <17431> out 1 <17432>   # join
add in 2 <17219 17432> out 1 <17433>     # join source bit 26
const-mul-2 in 1 <17433> out 1 <17434>   # join
add in 2 <17218 17434> out 1 <17435>     # join source bit 25
const-mul-2 in 1 <17435> out 1 <17436>   # join
add in 2 <17217 17436> out 1 <17437>     # join source bit 24
const-mul-2 in 1 <17437> out 1 <17438>   # join
add in 2 <17216 17438> out 1 <17439>     # join source bit 23
const-mul-2 in 1 <17439> out 1 <17440>   # join
add in 2 <17215 17440> out 1 <17441>     # join source bit 22
const-mul-2 in 1 <17441> out 1 <17442>   # join
add in 2 <17214 17442> out 1 <17443>     # join source bit 21
const-mul-2 in 1 <17443> out 1 <17444>   # join
add in 2 <17213 17444> out 1 <17445>     # join source bit 20
const-mul-2 in 1 <17445> out 1 <17446>   # join
add in 2 <17212 17446> out 1 <17447>     # join source bit 19
const-mul-2 in 1 <17447> out 1 <17448>   # join
add in 2 <17211 17448> out 1 <17449>     # join source bit 18
const-mul-2 in 1 <17449> out 1 <17450>   # join
add in 2 <17210 17450> out 1 <17451>     # join source bit 17
const-mul-2 in 1 <17451> out 1 <17452>   # join
add in 2 <17209 17452> out 1 <17453>     # join source bit 16
const-mul-2 in 1 <17453> out 1 <17454>   # join
add in 2 <17208 17454> out 1 <17455>     # join source bit 15
const-mul-2 in 1 <17455> out 1 <17456>   # join
add in 2 <17207 17456> out 1 <17457>     # join source bit 14
const-mul-2 in 1 <17457> out 1 <17458>   # join
add in 2 <17206 17458> out 1 <17459>     # join source bit 13
const-mul-2 in 1 <17459> out 1 <17460>   # join
add in 2 <17205 17460> out 1 <17461>     # join source bit 12
const-mul-2 in 1 <17461> out 1 <17462>   # join
add in 2 <17204 17462> out 1 <17463>     # join source bit 11
const-mul-2 in 1 <17463> out 1 <17464>   # join
add in 2 <17203 17464> out 1 <17465>     # join source bit 10
const-mul-2 in 1 <17465> out 1 <17466>   # join
add in 2 <17202 17466> out 1 <17467>     # join source bit 9
const-mul-2 in 1 <17467> out 1 <17468>   # join
add in 2 <17201 17468> out 1 <17469>     # join source bit 8
const-mul-2 in 1 <17469> out 1 <17470>   # join
add in 2 <17200 17470> out 1 <17471>     # join source bit 7
const-mul-2 in 1 <17471> out 1 <17472>   # join
add in 2 <17199 17472> out 1 <17473>     # join source bit 6
const-mul-2 in 1 <17473> out 1 <17474>   # join
add in 2 <17198 17474> out 1 <17475>     # join source bit 5
const-mul-2 in 1 <17475> out 1 <17476>   # join
add in 2 <17197 17476> out 1 <17477>     # join source bit 4
const-mul-2 in 1 <17477> out 1 <17478>   # join
add in 2 <17196 17478> out 1 <17479>     # join source bit 3
const-mul-2 in 1 <17479> out 1 <17480>   # join
add in 2 <17195 17480> out 1 <17481>     # join source bit 2
const-mul-2 in 1 <17481> out 1 <17482>   # join
add in 2 <17194 17482> out 1 <17483>     # join source bit 1
const-mul-2 in 1 <17483> out 1 <17484>   # join
add in 2 <17193 17484> out 1 <17485>     # join source bit 0
add in 2 <17485 17485> out 1 <17486>     # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <17190> out 1 <17487> # multiply-by-constant 4294967295
add in 2 <9 17487> out 1 <17488>         # 'CmpLT DFG.Input - DFG.Conditional'
split in 1 <17488> outplitBus
mul in 2 <17520 17486> out 1 <17752>     # cond trueterm
const-mul-neg-1 in 1 <17520> out 1 <17753> # cond minuscond
add in 2 <100 17753> out 1 <17754>       # cond negcond
mul in 2 <17754 17190> out 1 <17755>     # cond falseterm
add in 2 <17752 17755> out 1 <17756>     # cond result
add in 2 <17182 17756> out 1 <17757>     # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
split in 1 <17757> outplitBus
const-mul-2 in 1 <17789> out 1 <17991>   # join source bit 31
add in 2 <17788 17991> out 1 <17992>     # join source bit 30
const-mul-2 in 1 <17992> out 1 <17993>   # join
add in 2 <17787 17993> out 1 <17994>     # join source bit 29
const-mul-2 in 1 <17994> out 1 <17995>   # join
add in 2 <17786 17995> out 1 <17996>     # join source bit 28
const-mul-2 in 1 <17996> out 1 <17997>   # join
add in 2 <17785 17997> out 1 <17998>     # join source bit 27
const-mul-2 in 1 <17998> out 1 <17999>   # join
add in 2 <17784 17999> out 1 <18000>     # join source bit 26
const-mul-2 in 1 <18000> out 1 <18001>   # join
add in 2 <17783 18001> out 1 <18002>     # join source bit 25
const-mul-2 in 1 <18002> out 1 <18003>   # join
add in 2 <17782 18003> out 1 <18004>     # join source bit 24
const-mul-2 in 1 <18004> out 1 <18005>   # join
add in 2 <17781 18005> out 1 <18006>     # join source bit 23
const-mul-2 in 1 <18006> out 1 <18007>   # join
add in 2 <17780 18007> out 1 <18008>     # join source bit 22
const-mul-2 in 1 <18008> out 1 <18009>   # join
add in 2 <17779 18009> out 1 <18010>     # join source bit 21
const-mul-2 in 1 <18010> out 1 <18011>   # join
add in 2 <17778 18011> out 1 <18012>     # join source bit 20
const-mul-2 in 1 <18012> out 1 <18013>   # join
add in 2 <17777 18013> out 1 <18014>     # join source bit 19
const-mul-2 in 1 <18014> out 1 <18015>   # join
add in 2 <17776 18015> out 1 <18016>     # join source bit 18
const-mul-2 in 1 <18016> out 1 <18017>   # join
add in 2 <17775 18017> out 1 <18018>     # join source bit 17
const-mul-2 in 1 <18018> out 1 <18019>   # join
add in 2 <17774 18019> out 1 <18020>     # join source bit 16
const-mul-2 in 1 <18020> out 1 <18021>   # join
add in 2 <17773 18021> out 1 <18022>     # join source bit 15
const-mul-2 in 1 <18022> out 1 <18023>   # join
add in 2 <17772 18023> out 1 <18024>     # join source bit 14
const-mul-2 in 1 <18024> out 1 <18025>   # join
add in 2 <17771 18025> out 1 <18026>     # join source bit 13
const-mul-2 in 1 <18026> out 1 <18027>   # join
add in 2 <17770 18027> out 1 <18028>     # join source bit 12
const-mul-2 in 1 <18028> out 1 <18029>   # join
add in 2 <17769 18029> out 1 <18030>     # join source bit 11
const-mul-2 in 1 <18030> out 1 <18031>   # join
add in 2 <17768 18031> out 1 <18032>     # join source bit 10
const-mul-2 in 1 <18032> out 1 <18033>   # join
add in 2 <17767 18033> out 1 <18034>     # join source bit 9
const-mul-2 in 1 <18034> out 1 <18035>   # join
add in 2 <17766 18035> out 1 <18036>     # join source bit 8
const-mul-2 in 1 <18036> out 1 <18037>   # join
add in 2 <17765 18037> out 1 <18038>     # join source bit 7
const-mul-2 in 1 <18038> out 1 <18039>   # join
add in 2 <17764 18039> out 1 <18040>     # join source bit 6
const-mul-2 in 1 <18040> out 1 <18041>   # join
add in 2 <17763 18041> out 1 <18042>     # join source bit 5
const-mul-2 in 1 <18042> out 1 <18043>   # join
add in 2 <17762 18043> out 1 <18044>     # join source bit 4
const-mul-2 in 1 <18044> out 1 <18045>   # join
add in 2 <17761 18045> out 1 <18046>     # join source bit 3
const-mul-2 in 1 <18046> out 1 <18047>   # join
add in 2 <17760 18047> out 1 <18048>     # join source bit 2
const-mul-2 in 1 <18048> out 1 <18049>   # join
add in 2 <17759 18049> out 1 <18050>     # join source bit 1
const-mul-2 in 1 <18050> out 1 <18051>   # join
add in 2 <17758 18051> out 1 <18052>     # join source bit 0
add in 2 <18052 18052> out 1 <18053>     # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <17182> out 1 <18054> # multiply-by-constant 4294967295
add in 2 <17756 18054> out 1 <18055>     # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <18055> outplitBus
mul in 2 <18087 18053> out 1 <18321>     # cond trueterm
const-mul-neg-1 in 1 <18087> out 1 <18322> # cond minuscond
add in 2 <100 18322> out 1 <18323>       # cond negcond
mul in 2 <18323 17182> out 1 <18324>     # cond falseterm
add in 2 <18321 18324> out 1 <18325>     # cond result
mul in 2 <17010 16974> out 1 <18326>     # cond trueterm
const-mul-neg-1 in 1 <17010> out 1 <18327> # cond minuscond
add in 2 <100 18327> out 1 <18328>       # cond negcond
mul in 2 <18328 16971> out 1 <18329>     # cond falseterm
add in 2 <18326 18329> out 1 <18330>     # cond result
mul in 2 <16866 16830> out 1 <18331>     # cond trueterm
const-mul-neg-1 in 1 <16866> out 1 <18332> # cond minuscond
add in 2 <100 18332> out 1 <18333>       # cond negcond
mul in 2 <18333 16827> out 1 <18334>     # cond falseterm
add in 2 <18331 18334> out 1 <18335>     # cond result
const-mul-ffffffff in 1 <18335> out 1 <18336> # multiply-by-constant 4294967295
add in 2 <18335 18330> out 1 <18337>     # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
add in 2 <18337 18336> out 1 <18338>     # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <18338> out 1 <18339> # multiply-by-constant 4294967295
add in 2 <18337 18339> out 1 <18340>     # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <18335> out 1 <18341> # multiply-by-constant 4294967295
add in 2 <18330 18341> out 1 <18342>     # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <18342> out 200 <18343 18344 18345 18346 18347 18348 18349 18350 18351 18352 18353 18354 18355 18356 18357 18358 18359 18360 18361 18362 18363 18364 18365 18366 18367 18368 18369 18370 18371 18372 18373 18374 18375 18376 18377 18378 18379 18380 18381 18382 18383 18384 18385 18386 18387 18388 18389 18390 18391 18392 18393 18394 18395 18396 18397 18398 18399 18400 18401 18402 18403 18404 18405 18406 18407 18408 18409 18410 18411 18412 18413 18414 18415 18416 18417 18418 18419 18420 18421 18422 18423 18424 18425 18426 18427 18428 18429 18430 18431 18432 18433 18434 18435 18436 18437 18438 18439 18440 18441 18442 18443 18444 18445 18446 18447 18448 18449 18450 18451 18452 18453 18454 18455 18456 18457 18458 18459 18460 18461 18462 18463 18464 18465 18466 18467 18468 18469 18470 18471 18472 18473 18474 18475 18476 18477 18478 18479 18480 18481 18482 18483 18484 18485 18486 18487 18488 18489 18490 18491 18492 18493 18494 18495 18496 18497 18498 18499 18500 18501 18502 18503 18504 18505 18506 18507 18508 18509 18510 18511 18512 18513 18514 18515 18516 18517 18518 18519 18520 18521 18522 18523 18524 18525 18526 18527 18528 18529 18530 18531 18532 18533 18534 18535 18536 18537 18538 18539 18540 18541 18542> # SplitBus
mul in 2 <18374 18340> out 1 <18543>     # cond trueterm
const-mul-neg-1 in 1 <18374> out 1 <18544> # cond minuscond
add in 2 <100 18544> out 1 <18545>       # cond negcond
mul in 2 <18545 18330> out 1 <18546>     # cond falseterm
add in 2 <18543 18546> out 1 <18547>     # cond result
const-mul-ffffffff in 1 <18547> out 1 <18548> # multiply-by-constant 4294967295
add in 2 <18547 18325> out 1 <18549>     # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
split in 1 <18549> outplitBus
const-mul-2 in 1 <18581> out 1 <18785>   # join source bit 31
add in 2 <18580 18785> out 1 <18786>     # join source bit 30
const-mul-2 in 1 <18786> out 1 <18787>   # join
add in 2 <18579 18787> out 1 <18788>     # join source bit 29
const-mul-2 in 1 <18788> out 1 <18789>   # join
add in 2 <18578 18789> out 1 <18790>     # join source bit 28
const-mul-2 in 1 <18790> out 1 <18791>   # join
add in 2 <18577 18791> out 1 <18792>     # join source bit 27
const-mul-2 in 1 <18792> out 1 <18793>   # join
add in 2 <18576 18793> out 1 <18794>     # join source bit 26
const-mul-2 in 1 <18794> out 1 <18795>   # join
add in 2 <18575 18795> out 1 <18796>     # join source bit 25
const-mul-2 in 1 <18796> out 1 <18797>   # join
add in 2 <18574 18797> out 1 <18798>     # join source bit 24
const-mul-2 in 1 <18798> out 1 <18799>   # join
add in 2 <18573 18799> out 1 <18800>     # join source bit 23
const-mul-2 in 1 <18800> out 1 <18801>   # join
add in 2 <18572 18801> out 1 <18802>     # join source bit 22
const-mul-2 in 1 <18802> out 1 <18803>   # join
add in 2 <18571 18803> out 1 <18804>     # join source bit 21
const-mul-2 in 1 <18804> out 1 <18805>   # join
add in 2 <18570 18805> out 1 <18806>     # join source bit 20
const-mul-2 in 1 <18806> out 1 <18807>   # join
add in 2 <18569 18807> out 1 <18808>     # join source bit 19
const-mul-2 in 1 <18808> out 1 <18809>   # join
add in 2 <18568 18809> out 1 <18810>     # join source bit 18
const-mul-2 in 1 <18810> out 1 <18811>   # join
add in 2 <18567 18811> out 1 <18812>     # join source bit 17
const-mul-2 in 1 <18812> out 1 <18813>   # join
add in 2 <18566 18813> out 1 <18814>     # join source bit 16
const-mul-2 in 1 <18814> out 1 <18815>   # join
add in 2 <18565 18815> out 1 <18816>     # join source bit 15
const-mul-2 in 1 <18816> out 1 <18817>   # join
add in 2 <18564 18817> out 1 <18818>     # join source bit 14
const-mul-2 in 1 <18818> out 1 <18819>   # join
add in 2 <18563 18819> out 1 <18820>     # join source bit 13
const-mul-2 in 1 <18820> out 1 <18821>   # join
add in 2 <18562 18821> out 1 <18822>     # join source bit 12
const-mul-2 in 1 <18822> out 1 <18823>   # join
add in 2 <18561 18823> out 1 <18824>     # join source bit 11
const-mul-2 in 1 <18824> out 1 <18825>   # join
add in 2 <18560 18825> out 1 <18826>     # join source bit 10
const-mul-2 in 1 <18826> out 1 <18827>   # join
add in 2 <18559 18827> out 1 <18828>     # join source bit 9
const-mul-2 in 1 <18828> out 1 <18829>   # join
add in 2 <18558 18829> out 1 <18830>     # join source bit 8
const-mul-2 in 1 <18830> out 1 <18831>   # join
add in 2 <18557 18831> out 1 <18832>     # join source bit 7
const-mul-2 in 1 <18832> out 1 <18833>   # join
add in 2 <18556 18833> out 1 <18834>     # join source bit 6
const-mul-2 in 1 <18834> out 1 <18835>   # join
add in 2 <18555 18835> out 1 <18836>     # join source bit 5
const-mul-2 in 1 <18836> out 1 <18837>   # join
add in 2 <18554 18837> out 1 <18838>     # join source bit 4
const-mul-2 in 1 <18838> out 1 <18839>   # join
add in 2 <18553 18839> out 1 <18840>     # join source bit 3
const-mul-2 in 1 <18840> out 1 <18841>   # join
add in 2 <18552 18841> out 1 <18842>     # join source bit 2
const-mul-2 in 1 <18842> out 1 <18843>   # join
add in 2 <18551 18843> out 1 <18844>     # join source bit 1
const-mul-2 in 1 <18844> out 1 <18845>   # join
add in 2 <18550 18845> out 1 <18846>     # join source bit 0
add in 2 <18846 18846> out 1 <18847>     # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <18847> out 1 <18848> # multiply-by-constant 4294967295
add in 2 <18549 18848> out 1 <18849>     # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <18547> out 1 <18850> # multiply-by-constant 4294967295
add in 2 <18325 18850> out 1 <18851>     # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <18851> outplitBus
mul in 2 <18883 18849> out 1 <19119>     # cond trueterm
const-mul-neg-1 in 1 <18883> out 1 <19120> # cond minuscond
add in 2 <100 19120> out 1 <19121>       # cond negcond
mul in 2 <19121 18325> out 1 <19122>     # cond falseterm
add in 2 <19119 19122> out 1 <19123>     # cond result
add in 2 <19123 104> out 1 <19124>       # ArithBusReq.AddReq(DFG.Conditional,DFG.Constant)
const-mul-ffffffff in 1 <7> out 1 <19125> # multiply-by-constant 4294967295
add in 2 <19124 19125> out 1 <19126>     # 'CmpLT DFG.Add - DFG.Input'
split in 1 <19126> outplitBus
mul in 2 <19158 103> out 1 <19365>       # cond trueterm
const-mul-neg-1 in 1 <19158> out 1 <19366> # cond minuscond
add in 2 <100 19366> out 1 <19367>       # cond negcond
mul in 2 <19367 102> out 1 <19368>       # cond falseterm
add in 2 <19365 19368> out 1 <19369>     # cond result
add in 2 <19123 3084> out 1 <19370>      # ArithBusReq.AddReq(DFG.Conditional,DFG.Negate)
const-mul-ffffffff in 1 <19370> out 1 <19371> # multiply-by-constant 4294967295
add in 2 <7 19371> out 1 <19372>         # 'CmpLT DFG.Input - DFG.Subtract'
split in 1 <19372> outplitBus
mul in 2 <19404 103> out 1 <19643>       # cond trueterm
const-mul-neg-1 in 1 <19404> out 1 <19644> # cond minuscond
add in 2 <100 19644> out 1 <19645>       # cond negcond
mul in 2 <19645 19369> out 1 <19646>     # cond falseterm
add in 2 <19643 19646> out 1 <19647>     # cond result
const-mul-ffffffff in 1 <6> out 1 <19648> # multiply-by-constant 4294967295
add in 2 <6 7> out 1 <19649>             # ArithBusReq.AddReq(DFG.Input,DFG.Input)
add in 2 <19649 19648> out 1 <19650>     # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <19650> out 1 <19651> # multiply-by-constant 4294967295
add in 2 <19649 19651> out 1 <19652>     # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <6> out 1 <19653> # multiply-by-constant 4294967295
add in 2 <7 19653> out 1 <19654>         # 'CmpLT DFG.Input - DFG.Input'
split in 1 <19654> out 65 <19655 19656 19657 19658 19659 19660 19661 19662 19663 19664 19665 19666 19667 19668 19669 19670 19671 19672 19673 19674 19675 19676 19677 19678 19679 19680 19681 19682 19683 19684 19685 19686 19687 19688 19689 19690 19691 19692 19693 19694 19695 19696 19697 19698 19699 19700 19701 19702 19703 19704 19705 19706 19707 19708 19709 19710 19711 19712 19713 19714 19715 19716 19717 19718 19719> # SplitBus
mul in 2 <19686 19652> out 1 <19720>     # cond trueterm
const-mul-neg-1 in 1 <19686> out 1 <19721> # cond minuscond
add in 2 <100 19721> out 1 <19722>       # cond negcond
mul in 2 <19722 7> out 1 <19723>         # cond falseterm
add in 2 <19720 19723> out 1 <19724>     # cond result
const-mul-ffffffff in 1 <19724> out 1 <19725> # multiply-by-constant 4294967295
add in 2 <19724 8> out 1 <19726>         # ArithBusReq.AddReq(DFG.Conditional,DFG.Input)
add in 2 <19726 19725> out 1 <19727>     # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <19727> out 1 <19728> # multiply-by-constant 4294967295
add in 2 <19726 19728> out 1 <19729>     # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <19724> out 1 <19730> # multiply-by-constant 4294967295
add in 2 <8 19730> out 1 <19731>         # 'CmpLT DFG.Input - DFG.Conditional'
split in 1 <19731> outplitBus
mul in 2 <19763 19729> out 1 <19863>     # cond trueterm
const-mul-neg-1 in 1 <19763> out 1 <19864> # cond minuscond
add in 2 <100 19864> out 1 <19865>       # cond negcond
mul in 2 <19865 8> out 1 <19866>         # cond falseterm
add in 2 <19863 19866> out 1 <19867>     # cond result
const-mul-ffffffff in 1 <19867> out 1 <19868> # multiply-by-constant 4294967295
add in 2 <19867 9> out 1 <19869>         # ArithBusReq.AddReq(DFG.Conditional,DFG.Input)
add in 2 <19869 19868> out 1 <19870>     # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <19867> out 1 <19871> # multiply-by-constant 4294967295
add in 2 <9 19871> out 1 <19872>         # 'CmpLT DFG.Input - DFG.Conditional'
split in 1 <19872> out 197 <19873 19874 19875 19876 19877 19878 19879 19880 19881 19882 19883 19884 19885 19886 19887 19888 19889 19890 19891 19892 19893 19894 19895 19896 19897 19898 19899 19900 19901 19902 19903 19904 19905 19906 19907 19908 19909 19910 19911 19912 19913 19914 19915 19916 19917 19918 19919 19920 19921 19922 19923 19924 19925 19926 19927 19928 19929 19930 19931 19932 19933 19934 19935 19936 19937 19938 19939 19940 19941 19942 19943 19944 19945 19946 19947 19948 19949 19950 19951 19952 19953 19954 19955 19956 19957 19958 19959 19960 19961 19962 19963 19964 19965 19966 19967 19968 19969 19970 19971 19972 19973 19974 19975 19976 19977 19978 19979 19980 19981 19982 19983 19984 19985 19986 19987 19988 19989 19990 19991 19992 19993 19994 19995 19996 19997 19998 19999 20000 20001 20002 20003 20004 20005 20006 20007 20008 20009 20010 20011 20012 20013 20014 20015 20016 20017 20018 20019 20020 20021 20022 20023 20024 20025 20026 20027 20028 20029 20030 20031 20032 20033 20034 20035 20036 20037 20038 20039 20040 20041 20042 20043 20044 20045 20046 20047 20048 20049 20050 20051 20052 20053 20054 20055 20056 20057 20058 20059 20060 20061 20062 20063 20064 20065 20066 20067 20068 20069> # SplitBus
mul in 2 <19904 19870> out 1 <20070>     # cond trueterm
const-mul-neg-1 in 1 <19904> out 1 <20071> # cond minuscond
add in 2 <100 20071> out 1 <20072>       # cond negcond
mul in 2 <20072 19867> out 1 <20073>     # cond falseterm
add in 2 <20070 20073> out 1 <20074>     # cond result
mul in 2 <19763 19727> out 1 <20075>     # cond trueterm
const-mul-neg-1 in 1 <19763> out 1 <20076> # cond minuscond
add in 2 <100 20076> out 1 <20077>       # cond negcond
mul in 2 <20077 19724> out 1 <20078>     # cond falseterm
add in 2 <20075 20078> out 1 <20079>     # cond result
mul in 2 <19686 19650> out 1 <20080>     # cond trueterm
const-mul-neg-1 in 1 <19686> out 1 <20081> # cond minuscond
add in 2 <100 20081> out 1 <20082>       # cond negcond
mul in 2 <20082 6> out 1 <20083>         # cond falseterm
add in 2 <20080 20083> out 1 <20084>     # cond result
const-mul-ffffffff in 1 <20084> out 1 <20085> # multiply-by-constant 4294967295
add in 2 <20084 20079> out 1 <20086>     # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
add in 2 <20086 20085> out 1 <20087>     # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <20087> out 1 <20088> # multiply-by-constant 4294967295
add in 2 <20086 20088> out 1 <20089>     # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <20084> out 1 <20090> # multiply-by-constant 4294967295
add in 2 <20079 20090> out 1 <20091>     # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <20091> outplitBus
mul in 2 <20123 20089> out 1 <20224>     # cond trueterm
const-mul-neg-1 in 1 <20123> out 1 <20225> # cond minuscond
add in 2 <100 20225> out 1 <20226>       # cond negcond
mul in 2 <20226 20079> out 1 <20227>     # cond falseterm
add in 2 <20224 20227> out 1 <20228>     # cond result
const-mul-ffffffff in 1 <20228> out 1 <20229> # multiply-by-constant 4294967295
add in 2 <20228 20074> out 1 <20230>     # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
add in 2 <20230 20229> out 1 <20231>     # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <20231> out 1 <20232> # multiply-by-constant 4294967295
add in 2 <20230 20232> out 1 <20233>     # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <20228> out 1 <20234> # multiply-by-constant 4294967295
add in 2 <20074 20234> out 1 <20235>     # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <20235> out 199 <20236 20237 20238 20239 20240 20241 20242 20243 20244 20245 20246 20247 20248 20249 20250 20251 20252 20253 20254 20255 20256 20257 20258 20259 20260 20261 20262 20263 20264 20265 20266 20267 20268 20269 20270 20271 20272 20273 20274 20275 20276 20277 20278 20279 20280 20281 20282 20283 20284 20285 20286 20287 20288 20289 20290 20291 20292 20293 20294 20295 20296 20297 20298 20299 20300 20301 20302 20303 20304 20305 20306 20307 20308 20309 20310 20311 20312 20313 20314 20315 20316 20317 20318 20319 20320 20321 20322 20323 20324 20325 20326 20327 20328 20329 20330 20331 20332 20333 20334 20335 20336 20337 20338 20339 20340 20341 20342 20343 20344 20345 20346 20347 20348 20349 20350 20351 20352 20353 20354 20355 20356 20357 20358 20359 20360 20361 20362 20363 20364 20365 20366 20367 20368 20369 20370 20371 20372 20373 20374 20375 20376 20377 20378 20379 20380 20381 20382 20383 20384 20385 20386 20387 20388 20389 20390 20391 20392 20393 20394 20395 20396 20397 20398 20399 20400 20401 20402 20403 20404 20405 20406 20407 20408 20409 20410 20411 20412 20413 20414 20415 20416 20417 20418 20419 20420 20421 20422 20423 20424 20425 20426 20427 20428 20429 20430 20431 20432 20433 20434> # SplitBus
mul in 2 <20267 20233> out 1 <20435>     # cond trueterm
const-mul-neg-1 in 1 <20267> out 1 <20436> # cond minuscond
add in 2 <100 20436> out 1 <20437>       # cond negcond
mul in 2 <20437 20074> out 1 <20438>     # cond falseterm
add in 2 <20435 20438> out 1 <20439>     # cond result
const-mul-ffffffff in 1 <20439> out 1 <20440> # multiply-by-constant 4294967295
const-mul-ffffffff in 1 <19870> out 1 <20441> # multiply-by-constant 4294967295
add in 2 <19869 20441> out 1 <20442>     # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
mul in 2 <19904 20442> out 1 <20443>     # cond trueterm
const-mul-neg-1 in 1 <19904> out 1 <20444> # cond minuscond
add in 2 <100 20444> out 1 <20445>       # cond negcond
mul in 2 <20445 9> out 1 <20446>         # cond falseterm
add in 2 <20443 20446> out 1 <20447>     # cond result
const-mul-ffffffff in 1 <20447> out 1 <20448> # multiply-by-constant 4294967295
add in 2 <20447 10> out 1 <20449>        # ArithBusReq.AddReq(DFG.Conditional,DFG.Input)
split in 1 <20449> outplitBus
const-mul-2 in 1 <20481> out 1 <20681>   # join source bit 31
add in 2 <20480 20681> out 1 <20682>     # join source bit 30
const-mul-2 in 1 <20682> out 1 <20683>   # join
add in 2 <20479 20683> out 1 <20684>     # join source bit 29
const-mul-2 in 1 <20684> out 1 <20685>   # join
add in 2 <20478 20685> out 1 <20686>     # join source bit 28
const-mul-2 in 1 <20686> out 1 <20687>   # join
add in 2 <20477 20687> out 1 <20688>     # join source bit 27
const-mul-2 in 1 <20688> out 1 <20689>   # join
add in 2 <20476 20689> out 1 <20690>     # join source bit 26
const-mul-2 in 1 <20690> out 1 <20691>   # join
add in 2 <20475 20691> out 1 <20692>     # join source bit 25
const-mul-2 in 1 <20692> out 1 <20693>   # join
add in 2 <20474 20693> out 1 <20694>     # join source bit 24
const-mul-2 in 1 <20694> out 1 <20695>   # join
add in 2 <20473 20695> out 1 <20696>     # join source bit 23
const-mul-2 in 1 <20696> out 1 <20697>   # join
add in 2 <20472 20697> out 1 <20698>     # join source bit 22
const-mul-2 in 1 <20698> out 1 <20699>   # join
add in 2 <20471 20699> out 1 <20700>     # join source bit 21
const-mul-2 in 1 <20700> out 1 <20701>   # join
add in 2 <20470 20701> out 1 <20702>     # join source bit 20
const-mul-2 in 1 <20702> out 1 <20703>   # join
add in 2 <20469 20703> out 1 <20704>     # join source bit 19
const-mul-2 in 1 <20704> out 1 <20705>   # join
add in 2 <20468 20705> out 1 <20706>     # join source bit 18
const-mul-2 in 1 <20706> out 1 <20707>   # join
add in 2 <20467 20707> out 1 <20708>     # join source bit 17
const-mul-2 in 1 <20708> out 1 <20709>   # join
add in 2 <20466 20709> out 1 <20710>     # join source bit 16
const-mul-2 in 1 <20710> out 1 <20711>   # join
add in 2 <20465 20711> out 1 <20712>     # join source bit 15
const-mul-2 in 1 <20712> out 1 <20713>   # join
add in 2 <20464 20713> out 1 <20714>     # join source bit 14
const-mul-2 in 1 <20714> out 1 <20715>   # join
add in 2 <20463 20715> out 1 <20716>     # join source bit 13
const-mul-2 in 1 <20716> out 1 <20717>   # join
add in 2 <20462 20717> out 1 <20718>     # join source bit 12
const-mul-2 in 1 <20718> out 1 <20719>   # join
add in 2 <20461 20719> out 1 <20720>     # join source bit 11
const-mul-2 in 1 <20720> out 1 <20721>   # join
add in 2 <20460 20721> out 1 <20722>     # join source bit 10
const-mul-2 in 1 <20722> out 1 <20723>   # join
add in 2 <20459 20723> out 1 <20724>     # join source bit 9
const-mul-2 in 1 <20724> out 1 <20725>   # join
add in 2 <20458 20725> out 1 <20726>     # join source bit 8
const-mul-2 in 1 <20726> out 1 <20727>   # join
add in 2 <20457 20727> out 1 <20728>     # join source bit 7
const-mul-2 in 1 <20728> out 1 <20729>   # join
add in 2 <20456 20729> out 1 <20730>     # join source bit 6
const-mul-2 in 1 <20730> out 1 <20731>   # join
add in 2 <20455 20731> out 1 <20732>     # join source bit 5
const-mul-2 in 1 <20732> out 1 <20733>   # join
add in 2 <20454 20733> out 1 <20734>     # join source bit 4
const-mul-2 in 1 <20734> out 1 <20735>   # join
add in 2 <20453 20735> out 1 <20736>     # join source bit 3
const-mul-2 in 1 <20736> out 1 <20737>   # join
add in 2 <20452 20737> out 1 <20738>     # join source bit 2
const-mul-2 in 1 <20738> out 1 <20739>   # join
add in 2 <20451 20739> out 1 <20740>     # join source bit 1
const-mul-2 in 1 <20740> out 1 <20741>   # join
add in 2 <20450 20741> out 1 <20742>     # join source bit 0
add in 2 <20742 20742> out 1 <20743>     # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <20447> out 1 <20744> # multiply-by-constant 4294967295
add in 2 <10 20744> out 1 <20745>        # 'CmpLT DFG.Input - DFG.Conditional'
split in 1 <20745> out 263 <20746 20747 20748 20749 20750 20751 20752 20753 20754 20755 20756 20757 20758 20759 20760 20761 20762 20763 20764 20765 20766 20767 20768 20769 20770 20771 20772 20773 20774 20775 20776 20777 20778 20779 20780 20781 20782 20783 20784 20785 20786 20787 20788 20789 20790 20791 20792 20793 20794 20795 20796 20797 20798 20799 20800 20801 20802 20803 20804 20805 20806 20807 20808 20809 20810 20811 20812 20813 20814 20815 20816 20817 20818 20819 20820 20821 20822 20823 20824 20825 20826 20827 20828 20829 20830 20831 20832 20833 20834 20835 20836 20837 20838 20839 20840 20841 20842 20843 20844 20845 20846 20847 20848 20849 20850 20851 20852 20853 20854 20855 20856 20857 20858 20859 20860 20861 20862 20863 20864 20865 20866 20867 20868 20869 20870 20871 20872 20873 20874 20875 20876 20877 20878 20879 20880 20881 20882 20883 20884 20885 20886 20887 20888 20889 20890 20891 20892 20893 20894 20895 20896 20897 20898 20899 20900 20901 20902 20903 20904 20905 20906 20907 20908 20909 20910 20911 20912 20913 20914 20915 20916 20917 20918 20919 20920 20921 20922 20923 20924 20925 20926 20927 20928 20929 20930 20931 20932 20933 20934 20935 20936 20937 20938 20939 20940 20941 20942 20943 20944 20945 20946 20947 20948 20949 20950 20951 20952 20953 20954 20955 20956 20957 20958 20959 20960 20961 20962 20963 20964 20965 20966 20967 20968 20969 20970 20971 20972 20973 20974 20975 20976 20977 20978 20979 20980 20981 20982 20983 20984 20985 20986 20987 20988 20989 20990 20991 20992 20993 20994 20995 20996 20997 20998 20999 21000 21001 21002 21003 21004 21005 21006 21007 21008> # SplitBus
mul in 2 <20777 20743> out 1 <21009>     # cond trueterm
const-mul-neg-1 in 1 <20777> out 1 <21010> # cond minuscond
add in 2 <100 21010> out 1 <21011>       # cond negcond
mul in 2 <21011 20447> out 1 <21012>     # cond falseterm
add in 2 <21009 21012> out 1 <21013>     # cond result
add in 2 <20439 21013> out 1 <21014>     # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
split in 1 <21014> outplitBus
const-mul-2 in 1 <21046> out 1 <21248>   # join source bit 31
add in 2 <21045 21248> out 1 <21249>     # join source bit 30
const-mul-2 in 1 <21249> out 1 <21250>   # join
add in 2 <21044 21250> out 1 <21251>     # join source bit 29
const-mul-2 in 1 <21251> out 1 <21252>   # join
add in 2 <21043 21252> out 1 <21253>     # join source bit 28
const-mul-2 in 1 <21253> out 1 <21254>   # join
add in 2 <21042 21254> out 1 <21255>     # join source bit 27
const-mul-2 in 1 <21255> out 1 <21256>   # join
add in 2 <21041 21256> out 1 <21257>     # join source bit 26
const-mul-2 in 1 <21257> out 1 <21258>   # join
add in 2 <21040 21258> out 1 <21259>     # join source bit 25
const-mul-2 in 1 <21259> out 1 <21260>   # join
add in 2 <21039 21260> out 1 <21261>     # join source bit 24
const-mul-2 in 1 <21261> out 1 <21262>   # join
add in 2 <21038 21262> out 1 <21263>     # join source bit 23
const-mul-2 in 1 <21263> out 1 <21264>   # join
add in 2 <21037 21264> out 1 <21265>     # join source bit 22
const-mul-2 in 1 <21265> out 1 <21266>   # join
add in 2 <21036 21266> out 1 <21267>     # join source bit 21
const-mul-2 in 1 <21267> out 1 <21268>   # join
add in 2 <21035 21268> out 1 <21269>     # join source bit 20
const-mul-2 in 1 <21269> out 1 <21270>   # join
add in 2 <21034 21270> out 1 <21271>     # join source bit 19
const-mul-2 in 1 <21271> out 1 <21272>   # join
add in 2 <21033 21272> out 1 <21273>     # join source bit 18
const-mul-2 in 1 <21273> out 1 <21274>   # join
add in 2 <21032 21274> out 1 <21275>     # join source bit 17
const-mul-2 in 1 <21275> out 1 <21276>   # join
add in 2 <21031 21276> out 1 <21277>     # join source bit 16
const-mul-2 in 1 <21277> out 1 <21278>   # join
add in 2 <21030 21278> out 1 <21279>     # join source bit 15
const-mul-2 in 1 <21279> out 1 <21280>   # join
add in 2 <21029 21280> out 1 <21281>     # join source bit 14
const-mul-2 in 1 <21281> out 1 <21282>   # join
add in 2 <21028 21282> out 1 <21283>     # join source bit 13
const-mul-2 in 1 <21283> out 1 <21284>   # join
add in 2 <21027 21284> out 1 <21285>     # join source bit 12
const-mul-2 in 1 <21285> out 1 <21286>   # join
add in 2 <21026 21286> out 1 <21287>     # join source bit 11
const-mul-2 in 1 <21287> out 1 <21288>   # join
add in 2 <21025 21288> out 1 <21289>     # join source bit 10
const-mul-2 in 1 <21289> out 1 <21290>   # join
add in 2 <21024 21290> out 1 <21291>     # join source bit 9
const-mul-2 in 1 <21291> out 1 <21292>   # join
add in 2 <21023 21292> out 1 <21293>     # join source bit 8
const-mul-2 in 1 <21293> out 1 <21294>   # join
add in 2 <21022 21294> out 1 <21295>     # join source bit 7
const-mul-2 in 1 <21295> out 1 <21296>   # join
add in 2 <21021 21296> out 1 <21297>     # join source bit 6
const-mul-2 in 1 <21297> out 1 <21298>   # join
add in 2 <21020 21298> out 1 <21299>     # join source bit 5
const-mul-2 in 1 <21299> out 1 <21300>   # join
add in 2 <21019 21300> out 1 <21301>     # join source bit 4
const-mul-2 in 1 <21301> out 1 <21302>   # join
add in 2 <21018 21302> out 1 <21303>     # join source bit 3
const-mul-2 in 1 <21303> out 1 <21304>   # join
add in 2 <21017 21304> out 1 <21305>     # join source bit 2
const-mul-2 in 1 <21305> out 1 <21306>   # join
add in 2 <21016 21306> out 1 <21307>     # join source bit 1
const-mul-2 in 1 <21307> out 1 <21308>   # join
add in 2 <21015 21308> out 1 <21309>     # join source bit 0
add in 2 <21309 21309> out 1 <21310>     # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <20439> out 1 <21311> # multiply-by-constant 4294967295
add in 2 <21013 21311> out 1 <21312>     # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <21312> outplitBus
mul in 2 <21344 21310> out 1 <21578>     # cond trueterm
const-mul-neg-1 in 1 <21344> out 1 <21579> # cond minuscond
add in 2 <100 21579> out 1 <21580>       # cond negcond
mul in 2 <21580 20439> out 1 <21581>     # cond falseterm
add in 2 <21578 21581> out 1 <21582>     # cond result
mul in 2 <20267 20231> out 1 <21583>     # cond trueterm
const-mul-neg-1 in 1 <20267> out 1 <21584> # cond minuscond
add in 2 <100 21584> out 1 <21585>       # cond negcond
mul in 2 <21585 20228> out 1 <21586>     # cond falseterm
add in 2 <21583 21586> out 1 <21587>     # cond result
mul in 2 <20123 20087> out 1 <21588>     # cond trueterm
const-mul-neg-1 in 1 <20123> out 1 <21589> # cond minuscond
add in 2 <100 21589> out 1 <21590>       # cond negcond
mul in 2 <21590 20084> out 1 <21591>     # cond falseterm
add in 2 <21588 21591> out 1 <21592>     # cond result
const-mul-ffffffff in 1 <21592> out 1 <21593> # multiply-by-constant 4294967295
add in 2 <21592 21587> out 1 <21594>     # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
add in 2 <21594 21593> out 1 <21595>     # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <21595> out 1 <21596> # multiply-by-constant 4294967295
add in 2 <21594 21596> out 1 <21597>     # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <21592> out 1 <21598> # multiply-by-constant 4294967295
add in 2 <21587 21598> out 1 <21599>     # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <21599> out 200 <21600 21601 21602 21603 21604 21605 21606 21607 21608 21609 21610 21611 21612 21613 21614 21615 21616 21617 21618 21619 21620 21621 21622 21623 21624 21625 21626 21627 21628 21629 21630 21631 21632 21633 21634 21635 21636 21637 21638 21639 21640 21641 21642 21643 21644 21645 21646 21647 21648 21649 21650 21651 21652 21653 21654 21655 21656 21657 21658 21659 21660 21661 21662 21663 21664 21665 21666 21667 21668 21669 21670 21671 21672 21673 21674 21675 21676 21677 21678 21679 21680 21681 21682 21683 21684 21685 21686 21687 21688 21689 21690 21691 21692 21693 21694 21695 21696 21697 21698 21699 21700 21701 21702 21703 21704 21705 21706 21707 21708 21709 21710 21711 21712 21713 21714 21715 21716 21717 21718 21719 21720 21721 21722 21723 21724 21725 21726 21727 21728 21729 21730 21731 21732 21733 21734 21735 21736 21737 21738 21739 21740 21741 21742 21743 21744 21745 21746 21747 21748 21749 21750 21751 21752 21753 21754 21755 21756 21757 21758 21759 21760 21761 21762 21763 21764 21765 21766 21767 21768 21769 21770 21771 21772 21773 21774 21775 21776 21777 21778 21779 21780 21781 21782 21783 21784 21785 21786 21787 21788 21789 21790 21791 21792 21793 21794 21795 21796 21797 21798 21799> # SplitBus
mul in 2 <21631 21597> out 1 <21800>     # cond trueterm
const-mul-neg-1 in 1 <21631> out 1 <21801> # cond minuscond
add in 2 <100 21801> out 1 <21802>       # cond negcond
mul in 2 <21802 21587> out 1 <21803>     # cond falseterm
add in 2 <21800 21803> out 1 <21804>     # cond result
const-mul-ffffffff in 1 <21804> out 1 <21805> # multiply-by-constant 4294967295
add in 2 <21804 21582> out 1 <21806>     # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
split in 1 <21806> outplitBus
const-mul-2 in 1 <21838> out 1 <22042>   # join source bit 31
add in 2 <21837 22042> out 1 <22043>     # join source bit 30
const-mul-2 in 1 <22043> out 1 <22044>   # join
add in 2 <21836 22044> out 1 <22045>     # join source bit 29
const-mul-2 in 1 <22045> out 1 <22046>   # join
add in 2 <21835 22046> out 1 <22047>     # join source bit 28
const-mul-2 in 1 <22047> out 1 <22048>   # join
add in 2 <21834 22048> out 1 <22049>     # join source bit 27
const-mul-2 in 1 <22049> out 1 <22050>   # join
add in 2 <21833 22050> out 1 <22051>     # join source bit 26
const-mul-2 in 1 <22051> out 1 <22052>   # join
add in 2 <21832 22052> out 1 <22053>     # join source bit 25
const-mul-2 in 1 <22053> out 1 <22054>   # join
add in 2 <21831 22054> out 1 <22055>     # join source bit 24
const-mul-2 in 1 <22055> out 1 <22056>   # join
add in 2 <21830 22056> out 1 <22057>     # join source bit 23
const-mul-2 in 1 <22057> out 1 <22058>   # join
add in 2 <21829 22058> out 1 <22059>     # join source bit 22
const-mul-2 in 1 <22059> out 1 <22060>   # join
add in 2 <21828 22060> out 1 <22061>     # join source bit 21
const-mul-2 in 1 <22061> out 1 <22062>   # join
add in 2 <21827 22062> out 1 <22063>     # join source bit 20
const-mul-2 in 1 <22063> out 1 <22064>   # join
add in 2 <21826 22064> out 1 <22065>     # join source bit 19
const-mul-2 in 1 <22065> out 1 <22066>   # join
add in 2 <21825 22066> out 1 <22067>     # join source bit 18
const-mul-2 in 1 <22067> out 1 <22068>   # join
add in 2 <21824 22068> out 1 <22069>     # join source bit 17
const-mul-2 in 1 <22069> out 1 <22070>   # join
add in 2 <21823 22070> out 1 <22071>     # join source bit 16
const-mul-2 in 1 <22071> out 1 <22072>   # join
add in 2 <21822 22072> out 1 <22073>     # join source bit 15
const-mul-2 in 1 <22073> out 1 <22074>   # join
add in 2 <21821 22074> out 1 <22075>     # join source bit 14
const-mul-2 in 1 <22075> out 1 <22076>   # join
add in 2 <21820 22076> out 1 <22077>     # join source bit 13
const-mul-2 in 1 <22077> out 1 <22078>   # join
add in 2 <21819 22078> out 1 <22079>     # join source bit 12
const-mul-2 in 1 <22079> out 1 <22080>   # join
add in 2 <21818 22080> out 1 <22081>     # join source bit 11
const-mul-2 in 1 <22081> out 1 <22082>   # join
add in 2 <21817 22082> out 1 <22083>     # join source bit 10
const-mul-2 in 1 <22083> out 1 <22084>   # join
add in 2 <21816 22084> out 1 <22085>     # join source bit 9
const-mul-2 in 1 <22085> out 1 <22086>   # join
add in 2 <21815 22086> out 1 <22087>     # join source bit 8
const-mul-2 in 1 <22087> out 1 <22088>   # join
add in 2 <21814 22088> out 1 <22089>     # join source bit 7
const-mul-2 in 1 <22089> out 1 <22090>   # join
add in 2 <21813 22090> out 1 <22091>     # join source bit 6
const-mul-2 in 1 <22091> out 1 <22092>   # join
add in 2 <21812 22092> out 1 <22093>     # join source bit 5
const-mul-2 in 1 <22093> out 1 <22094>   # join
add in 2 <21811 22094> out 1 <22095>     # join source bit 4
const-mul-2 in 1 <22095> out 1 <22096>   # join
add in 2 <21810 22096> out 1 <22097>     # join source bit 3
const-mul-2 in 1 <22097> out 1 <22098>   # join
add in 2 <21809 22098> out 1 <22099>     # join source bit 2
const-mul-2 in 1 <22099> out 1 <22100>   # join
add in 2 <21808 22100> out 1 <22101>     # join source bit 1
const-mul-2 in 1 <22101> out 1 <22102>   # join
add in 2 <21807 22102> out 1 <22103>     # join source bit 0
add in 2 <22103 22103> out 1 <22104>     # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <22104> out 1 <22105> # multiply-by-constant 4294967295
add in 2 <21806 22105> out 1 <22106>     # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <21804> out 1 <22107> # multiply-by-constant 4294967295
add in 2 <21582 22107> out 1 <22108>     # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <22108> outplitBus
mul in 2 <22140 22106> out 1 <22376>     # cond trueterm
const-mul-neg-1 in 1 <22140> out 1 <22377> # cond minuscond
add in 2 <100 22377> out 1 <22378>       # cond negcond
mul in 2 <22378 21582> out 1 <22379>     # cond falseterm
add in 2 <22376 22379> out 1 <22380>     # cond result
add in 2 <22380 104> out 1 <22381>       # ArithBusReq.AddReq(DFG.Conditional,DFG.Constant)
const-mul-ffffffff in 1 <8> out 1 <22382> # multiply-by-constant 4294967295
add in 2 <22381 22382> out 1 <22383>     # 'CmpLT DFG.Add - DFG.Input'
split in 1 <22383> outplitBus
mul in 2 <22415 103> out 1 <22622>       # cond trueterm
const-mul-neg-1 in 1 <22415> out 1 <22623> # cond minuscond
add in 2 <100 22623> out 1 <22624>       # cond negcond
mul in 2 <22624 102> out 1 <22625>       # cond falseterm
add in 2 <22622 22625> out 1 <22626>     # cond result
add in 2 <22380 3084> out 1 <22627>      # ArithBusReq.AddReq(DFG.Conditional,DFG.Negate)
const-mul-ffffffff in 1 <22627> out 1 <22628> # multiply-by-constant 4294967295
add in 2 <8 22628> out 1 <22629>         # 'CmpLT DFG.Input - DFG.Subtract'
split in 1 <22629> outplitBus
mul in 2 <22661 103> out 1 <22900>       # cond trueterm
const-mul-neg-1 in 1 <22661> out 1 <22901> # cond minuscond
add in 2 <100 22901> out 1 <22902>       # cond negcond
mul in 2 <22902 22626> out 1 <22903>     # cond falseterm
add in 2 <22900 22903> out 1 <22904>     # cond result
const-mul-ffffffff in 1 <7> out 1 <22905> # multiply-by-constant 4294967295
add in 2 <7 8> out 1 <22906>             # ArithBusReq.AddReq(DFG.Input,DFG.Input)
add in 2 <22906 22905> out 1 <22907>     # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <22907> out 1 <22908> # multiply-by-constant 4294967295
add in 2 <22906 22908> out 1 <22909>     # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <7> out 1 <22910> # multiply-by-constant 4294967295
add in 2 <8 22910> out 1 <22911>         # 'CmpLT DFG.Input - DFG.Input'
split in 1 <22911> out 65 <22912 22913 22914 22915 22916 22917 22918 22919 22920 22921 22922 22923 22924 22925 22926 22927 22928 22929 22930 22931 22932 22933 22934 22935 22936 22937 22938 22939 22940 22941 22942 22943 22944 22945 22946 22947 22948 22949 22950 22951 22952 22953 22954 22955 22956 22957 22958 22959 22960 22961 22962 22963 22964 22965 22966 22967 22968 22969 22970 22971 22972 22973 22974 22975 22976> # SplitBus
mul in 2 <22943 22909> out 1 <22977>     # cond trueterm
const-mul-neg-1 in 1 <22943> out 1 <22978> # cond minuscond
add in 2 <100 22978> out 1 <22979>       # cond negcond
mul in 2 <22979 8> out 1 <22980>         # cond falseterm
add in 2 <22977 22980> out 1 <22981>     # cond result
const-mul-ffffffff in 1 <22981> out 1 <22982> # multiply-by-constant 4294967295
add in 2 <22981 9> out 1 <22983>         # ArithBusReq.AddReq(DFG.Conditional,DFG.Input)
add in 2 <22983 22982> out 1 <22984>     # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <22984> out 1 <22985> # multiply-by-constant 4294967295
add in 2 <22983 22985> out 1 <22986>     # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <22981> out 1 <22987> # multiply-by-constant 4294967295
add in 2 <9 22987> out 1 <22988>         # 'CmpLT DFG.Input - DFG.Conditional'
split in 1 <22988> out 131 <22989 22990 22991 22992 22993 22994 22995 22996 22997 22998 22999 23000 23001 23002 23003 23004 23005 23006 23007 23008 23009 23010 23011 23012 23013 23014 23015 23016 23017 23018 23019 23020 23021 23022 23023 23024 23025 23026 23027 23028 23029 23030 23031 23032 23033 23034 23035 23036 23037 23038 23039 23040 23041 23042 23043 23044 23045 23046 23047 23048 23049 23050 23051 23052 23053 23054 23055 23056 23057 23058 23059 23060 23061 23062 23063 23064 23065 23066 23067 23068 23069 23070 23071 23072 23073 23074 23075 23076 23077 23078 23079 23080 23081 23082 23083 23084 23085 23086 23087 23088 23089 23090 23091 23092 23093 23094 23095 23096 23097 23098 23099 23100 23101 23102 23103 23104 23105 23106 23107 23108 23109 23110 23111 23112 23113 23114 23115 23116 23117 23118 23119> # SplitBus
mul in 2 <23020 22986> out 1 <23120>     # cond trueterm
const-mul-neg-1 in 1 <23020> out 1 <23121> # cond minuscond
add in 2 <100 23121> out 1 <23122>       # cond negcond
mul in 2 <23122 9> out 1 <23123>         # cond falseterm
add in 2 <23120 23123> out 1 <23124>     # cond result
const-mul-ffffffff in 1 <23124> out 1 <23125> # multiply-by-constant 4294967295
add in 2 <23124 10> out 1 <23126>        # ArithBusReq.AddReq(DFG.Conditional,DFG.Input)
add in 2 <23126 23125> out 1 <23127>     # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <23124> out 1 <23128> # multiply-by-constant 4294967295
add in 2 <10 23128> out 1 <23129>        # 'CmpLT DFG.Input - DFG.Conditional'
split in 1 <23129> out 197 <23130 23131 23132 23133 23134 23135 23136 23137 23138 23139 23140 23141 23142 23143 23144 23145 23146 23147 23148 23149 23150 23151 23152 23153 23154 23155 23156 23157 23158 23159 23160 23161 23162 23163 23164 23165 23166 23167 23168 23169 23170 23171 23172 23173 23174 23175 23176 23177 23178 23179 23180 23181 23182 23183 23184 23185 23186 23187 23188 23189 23190 23191 23192 23193 23194 23195 23196 23197 23198 23199 23200 23201 23202 23203 23204 23205 23206 23207 23208 23209 23210 23211 23212 23213 23214 23215 23216 23217 23218 23219 23220 23221 23222 23223 23224 23225 23226 23227 23228 23229 23230 23231 23232 23233 23234 23235 23236 23237 23238 23239 23240 23241 23242 23243 23244 23245 23246 23247 23248 23249 23250 23251 23252 23253 23254 23255 23256 23257 23258 23259 23260 23261 23262 23263 23264 23265 23266 23267 23268 23269 23270 23271 23272 23273 23274 23275 23276 23277 23278 23279 23280 23281 23282 23283 23284 23285 23286 23287 23288 23289 23290 23291 23292 23293 23294 23295 23296 23297 23298 23299 23300 23301 23302 23303 23304 23305 23306 23307 23308 23309 23310 23311 23312 23313 23314 23315 23316 23317 23318 23319 23320 23321 23322 23323 23324 23325 23326> # SplitBus
mul in 2 <23161 23127> out 1 <23327>     # cond trueterm
const-mul-neg-1 in 1 <23161> out 1 <23328> # cond minuscond
add in 2 <100 23328> out 1 <23329>       # cond negcond
mul in 2 <23329 23124> out 1 <23330>     # cond falseterm
add in 2 <23327 23330> out 1 <23331>     # cond result
mul in 2 <23020 22984> out 1 <23332>     # cond trueterm
const-mul-neg-1 in 1 <23020> out 1 <23333> # cond minuscond
add in 2 <100 23333> out 1 <23334>       # cond negcond
mul in 2 <23334 22981> out 1 <23335>     # cond falseterm
add in 2 <23332 23335> out 1 <23336>     # cond result
mul in 2 <22943 22907> out 1 <23337>     # cond trueterm
const-mul-neg-1 in 1 <22943> out 1 <23338> # cond minuscond
add in 2 <100 23338> out 1 <23339>       # cond negcond
mul in 2 <23339 7> out 1 <23340>         # cond falseterm
add in 2 <23337 23340> out 1 <23341>     # cond result
const-mul-ffffffff in 1 <23341> out 1 <23342> # multiply-by-constant 4294967295
add in 2 <23341 23336> out 1 <23343>     # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
add in 2 <23343 23342> out 1 <23344>     # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <23344> out 1 <23345> # multiply-by-constant 4294967295
add in 2 <23343 23345> out 1 <23346>     # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <23341> out 1 <23347> # multiply-by-constant 4294967295
add in 2 <23336 23347> out 1 <23348>     # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <23348> outplitBus
mul in 2 <23380 23346> out 1 <23481>     # cond trueterm
const-mul-neg-1 in 1 <23380> out 1 <23482> # cond minuscond
add in 2 <100 23482> out 1 <23483>       # cond negcond
mul in 2 <23483 23336> out 1 <23484>     # cond falseterm
add in 2 <23481 23484> out 1 <23485>     # cond result
const-mul-ffffffff in 1 <23485> out 1 <23486> # multiply-by-constant 4294967295
add in 2 <23485 23331> out 1 <23487>     # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
add in 2 <23487 23486> out 1 <23488>     # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <23488> out 1 <23489> # multiply-by-constant 4294967295
add in 2 <23487 23489> out 1 <23490>     # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <23485> out 1 <23491> # multiply-by-constant 4294967295
add in 2 <23331 23491> out 1 <23492>     # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <23492> out 199 <23493 23494 23495 23496 23497 23498 23499 23500 23501 23502 23503 23504 23505 23506 23507 23508 23509 23510 23511 23512 23513 23514 23515 23516 23517 23518 23519 23520 23521 23522 23523 23524 23525 23526 23527 23528 23529 23530 23531 23532 23533 23534 23535 23536 23537 23538 23539 23540 23541 23542 23543 23544 23545 23546 23547 23548 23549 23550 23551 23552 23553 23554 23555 23556 23557 23558 23559 23560 23561 23562 23563 23564 23565 23566 23567 23568 23569 23570 23571 23572 23573 23574 23575 23576 23577 23578 23579 23580 23581 23582 23583 23584 23585 23586 23587 23588 23589 23590 23591 23592 23593 23594 23595 23596 23597 23598 23599 23600 23601 23602 23603 23604 23605 23606 23607 23608 23609 23610 23611 23612 23613 23614 23615 23616 23617 23618 23619 23620 23621 23622 23623 23624 23625 23626 23627 23628 23629 23630 23631 23632 23633 23634 23635 23636 23637 23638 23639 23640 23641 23642 23643 23644 23645 23646 23647 23648 23649 23650 23651 23652 23653 23654 23655 23656 23657 23658 23659 23660 23661 23662 23663 23664 23665 23666 23667 23668 23669 23670 23671 23672 23673 23674 23675 23676 23677 23678 23679 23680 23681 23682 23683 23684 23685 23686 23687 23688 23689 23690 23691> # SplitBus
mul in 2 <23524 23490> out 1 <23692>     # cond trueterm
const-mul-neg-1 in 1 <23524> out 1 <23693> # cond minuscond
add in 2 <100 23693> out 1 <23694>       # cond negcond
mul in 2 <23694 23331> out 1 <23695>     # cond falseterm
add in 2 <23692 23695> out 1 <23696>     # cond result
const-mul-ffffffff in 1 <23696> out 1 <23697> # multiply-by-constant 4294967295
const-mul-ffffffff in 1 <23127> out 1 <23698> # multiply-by-constant 4294967295
add in 2 <23126 23698> out 1 <23699>     # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
mul in 2 <23161 23699> out 1 <23700>     # cond trueterm
const-mul-neg-1 in 1 <23161> out 1 <23701> # cond minuscond
add in 2 <100 23701> out 1 <23702>       # cond negcond
mul in 2 <23702 10> out 1 <23703>        # cond falseterm
add in 2 <23700 23703> out 1 <23704>     # cond result
const-mul-ffffffff in 1 <23704> out 1 <23705> # multiply-by-constant 4294967295
add in 2 <23704 11> out 1 <23706>        # ArithBusReq.AddReq(DFG.Conditional,DFG.Input)
split in 1 <23706> outplitBus
const-mul-2 in 1 <23738> out 1 <23938>   # join source bit 31
add in 2 <23737 23938> out 1 <23939>     # join source bit 30
const-mul-2 in 1 <23939> out 1 <23940>   # join
add in 2 <23736 23940> out 1 <23941>     # join source bit 29
const-mul-2 in 1 <23941> out 1 <23942>   # join
add in 2 <23735 23942> out 1 <23943>     # join source bit 28
const-mul-2 in 1 <23943> out 1 <23944>   # join
add in 2 <23734 23944> out 1 <23945>     # join source bit 27
const-mul-2 in 1 <23945> out 1 <23946>   # join
add in 2 <23733 23946> out 1 <23947>     # join source bit 26
const-mul-2 in 1 <23947> out 1 <23948>   # join
add in 2 <23732 23948> out 1 <23949>     # join source bit 25
const-mul-2 in 1 <23949> out 1 <23950>   # join
add in 2 <23731 23950> out 1 <23951>     # join source bit 24
const-mul-2 in 1 <23951> out 1 <23952>   # join
add in 2 <23730 23952> out 1 <23953>     # join source bit 23
const-mul-2 in 1 <23953> out 1 <23954>   # join
add in 2 <23729 23954> out 1 <23955>     # join source bit 22
const-mul-2 in 1 <23955> out 1 <23956>   # join
add in 2 <23728 23956> out 1 <23957>     # join source bit 21
const-mul-2 in 1 <23957> out 1 <23958>   # join
add in 2 <23727 23958> out 1 <23959>     # join source bit 20
const-mul-2 in 1 <23959> out 1 <23960>   # join
add in 2 <23726 23960> out 1 <23961>     # join source bit 19
const-mul-2 in 1 <23961> out 1 <23962>   # join
add in 2 <23725 23962> out 1 <23963>     # join source bit 18
const-mul-2 in 1 <23963> out 1 <23964>   # join
add in 2 <23724 23964> out 1 <23965>     # join source bit 17
const-mul-2 in 1 <23965> out 1 <23966>   # join
add in 2 <23723 23966> out 1 <23967>     # join source bit 16
const-mul-2 in 1 <23967> out 1 <23968>   # join
add in 2 <23722 23968> out 1 <23969>     # join source bit 15
const-mul-2 in 1 <23969> out 1 <23970>   # join
add in 2 <23721 23970> out 1 <23971>     # join source bit 14
const-mul-2 in 1 <23971> out 1 <23972>   # join
add in 2 <23720 23972> out 1 <23973>     # join source bit 13
const-mul-2 in 1 <23973> out 1 <23974>   # join
add in 2 <23719 23974> out 1 <23975>     # join source bit 12
const-mul-2 in 1 <23975> out 1 <23976>   # join
add in 2 <23718 23976> out 1 <23977>     # join source bit 11
const-mul-2 in 1 <23977> out 1 <23978>   # join
add in 2 <23717 23978> out 1 <23979>     # join source bit 10
const-mul-2 in 1 <23979> out 1 <23980>   # join
add in 2 <23716 23980> out 1 <23981>     # join source bit 9
const-mul-2 in 1 <23981> out 1 <23982>   # join
add in 2 <23715 23982> out 1 <23983>     # join source bit 8
const-mul-2 in 1 <23983> out 1 <23984>   # join
add in 2 <23714 23984> out 1 <23985>     # join source bit 7
const-mul-2 in 1 <23985> out 1 <23986>   # join
add in 2 <23713 23986> out 1 <23987>     # join source bit 6
const-mul-2 in 1 <23987> out 1 <23988>   # join
add in 2 <23712 23988> out 1 <23989>     # join source bit 5
const-mul-2 in 1 <23989> out 1 <23990>   # join
add in 2 <23711 23990> out 1 <23991>     # join source bit 4
const-mul-2 in 1 <23991> out 1 <23992>   # join
add in 2 <23710 23992> out 1 <23993>     # join source bit 3
const-mul-2 in 1 <23993> out 1 <23994>   # join
add in 2 <23709 23994> out 1 <23995>     # join source bit 2
const-mul-2 in 1 <23995> out 1 <23996>   # join
add in 2 <23708 23996> out 1 <23997>     # join source bit 1
const-mul-2 in 1 <23997> out 1 <23998>   # join
add in 2 <23707 23998> out 1 <23999>     # join source bit 0
add in 2 <23999 23999> out 1 <24000>     # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <23704> out 1 <24001> # multiply-by-constant 4294967295
add in 2 <11 24001> out 1 <24002>        # 'CmpLT DFG.Input - DFG.Conditional'
split in 1 <24002> outplitBus
mul in 2 <24034 24000> out 1 <24266>     # cond trueterm
const-mul-neg-1 in 1 <24034> out 1 <24267> # cond minuscond
add in 2 <100 24267> out 1 <24268>       # cond negcond
mul in 2 <24268 23704> out 1 <24269>     # cond falseterm
add in 2 <24266 24269> out 1 <24270>     # cond result
add in 2 <23696 24270> out 1 <24271>     # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
split in 1 <24271> outplitBus
const-mul-2 in 1 <24303> out 1 <24505>   # join source bit 31
add in 2 <24302 24505> out 1 <24506>     # join source bit 30
const-mul-2 in 1 <24506> out 1 <24507>   # join
add in 2 <24301 24507> out 1 <24508>     # join source bit 29
const-mul-2 in 1 <24508> out 1 <24509>   # join
add in 2 <24300 24509> out 1 <24510>     # join source bit 28
const-mul-2 in 1 <24510> out 1 <24511>   # join
add in 2 <24299 24511> out 1 <24512>     # join source bit 27
const-mul-2 in 1 <24512> out 1 <24513>   # join
add in 2 <24298 24513> out 1 <24514>     # join source bit 26
const-mul-2 in 1 <24514> out 1 <24515>   # join
add in 2 <24297 24515> out 1 <24516>     # join source bit 25
const-mul-2 in 1 <24516> out 1 <24517>   # join
add in 2 <24296 24517> out 1 <24518>     # join source bit 24
const-mul-2 in 1 <24518> out 1 <24519>   # join
add in 2 <24295 24519> out 1 <24520>     # join source bit 23
const-mul-2 in 1 <24520> out 1 <24521>   # join
add in 2 <24294 24521> out 1 <24522>     # join source bit 22
const-mul-2 in 1 <24522> out 1 <24523>   # join
add in 2 <24293 24523> out 1 <24524>     # join source bit 21
const-mul-2 in 1 <24524> out 1 <24525>   # join
add in 2 <24292 24525> out 1 <24526>     # join source bit 20
const-mul-2 in 1 <24526> out 1 <24527>   # join
add in 2 <24291 24527> out 1 <24528>     # join source bit 19
const-mul-2 in 1 <24528> out 1 <24529>   # join
add in 2 <24290 24529> out 1 <24530>     # join source bit 18
const-mul-2 in 1 <24530> out 1 <24531>   # join
add in 2 <24289 24531> out 1 <24532>     # join source bit 17
const-mul-2 in 1 <24532> out 1 <24533>   # join
add in 2 <24288 24533> out 1 <24534>     # join source bit 16
const-mul-2 in 1 <24534> out 1 <24535>   # join
add in 2 <24287 24535> out 1 <24536>     # join source bit 15
const-mul-2 in 1 <24536> out 1 <24537>   # join
add in 2 <24286 24537> out 1 <24538>     # join source bit 14
const-mul-2 in 1 <24538> out 1 <24539>   # join
add in 2 <24285 24539> out 1 <24540>     # join source bit 13
const-mul-2 in 1 <24540> out 1 <24541>   # join
add in 2 <24284 24541> out 1 <24542>     # join source bit 12
const-mul-2 in 1 <24542> out 1 <24543>   # join
add in 2 <24283 24543> out 1 <24544>     # join source bit 11
const-mul-2 in 1 <24544> out 1 <24545>   # join
add in 2 <24282 24545> out 1 <24546>     # join source bit 10
const-mul-2 in 1 <24546> out 1 <24547>   # join
add in 2 <24281 24547> out 1 <24548>     # join source bit 9
const-mul-2 in 1 <24548> out 1 <24549>   # join
add in 2 <24280 24549> out 1 <24550>     # join source bit 8
const-mul-2 in 1 <24550> out 1 <24551>   # join
add in 2 <24279 24551> out 1 <24552>     # join source bit 7
const-mul-2 in 1 <24552> out 1 <24553>   # join
add in 2 <24278 24553> out 1 <24554>     # join source bit 6
const-mul-2 in 1 <24554> out 1 <24555>   # join
add in 2 <24277 24555> out 1 <24556>     # join source bit 5
const-mul-2 in 1 <24556> out 1 <24557>   # join
add in 2 <24276 24557> out 1 <24558>     # join source bit 4
const-mul-2 in 1 <24558> out 1 <24559>   # join
add in 2 <24275 24559> out 1 <24560>     # join source bit 3
const-mul-2 in 1 <24560> out 1 <24561>   # join
add in 2 <24274 24561> out 1 <24562>     # join source bit 2
const-mul-2 in 1 <24562> out 1 <24563>   # join
add in 2 <24273 24563> out 1 <24564>     # join source bit 1
const-mul-2 in 1 <24564> out 1 <24565>   # join
add in 2 <24272 24565> out 1 <24566>     # join source bit 0
add in 2 <24566 24566> out 1 <24567>     # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <23696> out 1 <24568> # multiply-by-constant 4294967295
add in 2 <24270 24568> out 1 <24569>     # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <24569> outplitBus
mul in 2 <24601 24567> out 1 <24835>     # cond trueterm
const-mul-neg-1 in 1 <24601> out 1 <24836> # cond minuscond
add in 2 <100 24836> out 1 <24837>       # cond negcond
mul in 2 <24837 23696> out 1 <24838>     # cond falseterm
add in 2 <24835 24838> out 1 <24839>     # cond result
mul in 2 <23524 23488> out 1 <24840>     # cond trueterm
const-mul-neg-1 in 1 <23524> out 1 <24841> # cond minuscond
add in 2 <100 24841> out 1 <24842>       # cond negcond
mul in 2 <24842 23485> out 1 <24843>     # cond falseterm
add in 2 <24840 24843> out 1 <24844>     # cond result
mul in 2 <23380 23344> out 1 <24845>     # cond trueterm
const-mul-neg-1 in 1 <23380> out 1 <24846> # cond minuscond
add in 2 <100 24846> out 1 <24847>       # cond negcond
mul in 2 <24847 23341> out 1 <24848>     # cond falseterm
add in 2 <24845 24848> out 1 <24849>     # cond result
const-mul-ffffffff in 1 <24849> out 1 <24850> # multiply-by-constant 4294967295
add in 2 <24849 24844> out 1 <24851>     # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
add in 2 <24851 24850> out 1 <24852>     # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <24852> out 1 <24853> # multiply-by-constant 4294967295
add in 2 <24851 24853> out 1 <24854>     # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <24849> out 1 <24855> # multiply-by-constant 4294967295
add in 2 <24844 24855> out 1 <24856>     # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <24856> out 200 <24857 24858 24859 24860 24861 24862 24863 24864 24865 24866 24867 24868 24869 24870 24871 24872 24873 24874 24875 24876 24877 24878 24879 24880 24881 24882 24883 24884 24885 24886 24887 24888 24889 24890 24891 24892 24893 24894 24895 24896 24897 24898 24899 24900 24901 24902 24903 24904 24905 24906 24907 24908 24909 24910 24911 24912 24913 24914 24915 24916 24917 24918 24919 24920 24921 24922 24923 24924 24925 24926 24927 24928 24929 24930 24931 24932 24933 24934 24935 24936 24937 24938 24939 24940 24941 24942 24943 24944 24945 24946 24947 24948 24949 24950 24951 24952 24953 24954 24955 24956 24957 24958 24959 24960 24961 24962 24963 24964 24965 24966 24967 24968 24969 24970 24971 24972 24973 24974 24975 24976 24977 24978 24979 24980 24981 24982 24983 24984 24985 24986 24987 24988 24989 24990 24991 24992 24993 24994 24995 24996 24997 24998 24999 25000 25001 25002 25003 25004 25005 25006 25007 25008 25009 25010 25011 25012 25013 25014 25015 25016 25017 25018 25019 25020 25021 25022 25023 25024 25025 25026 25027 25028 25029 25030 25031 25032 25033 25034 25035 25036 25037 25038 25039 25040 25041 25042 25043 25044 25045 25046 25047 25048 25049 25050 25051 25052 25053 25054 25055 25056> # SplitBus
mul in 2 <24888 24854> out 1 <25057>     # cond trueterm
const-mul-neg-1 in 1 <24888> out 1 <25058> # cond minuscond
add in 2 <100 25058> out 1 <25059>       # cond negcond
mul in 2 <25059 24844> out 1 <25060>     # cond falseterm
add in 2 <25057 25060> out 1 <25061>     # cond result
const-mul-ffffffff in 1 <25061> out 1 <25062> # multiply-by-constant 4294967295
add in 2 <25061 24839> out 1 <25063>     # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
split in 1 <25063> outplitBus
const-mul-2 in 1 <25095> out 1 <25299>   # join source bit 31
add in 2 <25094 25299> out 1 <25300>     # join source bit 30
const-mul-2 in 1 <25300> out 1 <25301>   # join
add in 2 <25093 25301> out 1 <25302>     # join source bit 29
const-mul-2 in 1 <25302> out 1 <25303>   # join
add in 2 <25092 25303> out 1 <25304>     # join source bit 28
const-mul-2 in 1 <25304> out 1 <25305>   # join
add in 2 <25091 25305> out 1 <25306>     # join source bit 27
const-mul-2 in 1 <25306> out 1 <25307>   # join
add in 2 <25090 25307> out 1 <25308>     # join source bit 26
const-mul-2 in 1 <25308> out 1 <25309>   # join
add in 2 <25089 25309> out 1 <25310>     # join source bit 25
const-mul-2 in 1 <25310> out 1 <25311>   # join
add in 2 <25088 25311> out 1 <25312>     # join source bit 24
const-mul-2 in 1 <25312> out 1 <25313>   # join
add in 2 <25087 25313> out 1 <25314>     # join source bit 23
const-mul-2 in 1 <25314> out 1 <25315>   # join
add in 2 <25086 25315> out 1 <25316>     # join source bit 22
const-mul-2 in 1 <25316> out 1 <25317>   # join
add in 2 <25085 25317> out 1 <25318>     # join source bit 21
const-mul-2 in 1 <25318> out 1 <25319>   # join
add in 2 <25084 25319> out 1 <25320>     # join source bit 20
const-mul-2 in 1 <25320> out 1 <25321>   # join
add in 2 <25083 25321> out 1 <25322>     # join source bit 19
const-mul-2 in 1 <25322> out 1 <25323>   # join
add in 2 <25082 25323> out 1 <25324>     # join source bit 18
const-mul-2 in 1 <25324> out 1 <25325>   # join
add in 2 <25081 25325> out 1 <25326>     # join source bit 17
const-mul-2 in 1 <25326> out 1 <25327>   # join
add in 2 <25080 25327> out 1 <25328>     # join source bit 16
const-mul-2 in 1 <25328> out 1 <25329>   # join
add in 2 <25079 25329> out 1 <25330>     # join source bit 15
const-mul-2 in 1 <25330> out 1 <25331>   # join
add in 2 <25078 25331> out 1 <25332>     # join source bit 14
const-mul-2 in 1 <25332> out 1 <25333>   # join
add in 2 <25077 25333> out 1 <25334>     # join source bit 13
const-mul-2 in 1 <25334> out 1 <25335>   # join
add in 2 <25076 25335> out 1 <25336>     # join source bit 12
const-mul-2 in 1 <25336> out 1 <25337>   # join
add in 2 <25075 25337> out 1 <25338>     # join source bit 11
const-mul-2 in 1 <25338> out 1 <25339>   # join
add in 2 <25074 25339> out 1 <25340>     # join source bit 10
const-mul-2 in 1 <25340> out 1 <25341>   # join
add in 2 <25073 25341> out 1 <25342>     # join source bit 9
const-mul-2 in 1 <25342> out 1 <25343>   # join
add in 2 <25072 25343> out 1 <25344>     # join source bit 8
const-mul-2 in 1 <25344> out 1 <25345>   # join
add in 2 <25071 25345> out 1 <25346>     # join source bit 7
const-mul-2 in 1 <25346> out 1 <25347>   # join
add in 2 <25070 25347> out 1 <25348>     # join source bit 6
const-mul-2 in 1 <25348> out 1 <25349>   # join
add in 2 <25069 25349> out 1 <25350>     # join source bit 5
const-mul-2 in 1 <25350> out 1 <25351>   # join
add in 2 <25068 25351> out 1 <25352>     # join source bit 4
const-mul-2 in 1 <25352> out 1 <25353>   # join
add in 2 <25067 25353> out 1 <25354>     # join source bit 3
const-mul-2 in 1 <25354> out 1 <25355>   # join
add in 2 <25066 25355> out 1 <25356>     # join source bit 2
const-mul-2 in 1 <25356> out 1 <25357>   # join
add in 2 <25065 25357> out 1 <25358>     # join source bit 1
const-mul-2 in 1 <25358> out 1 <25359>   # join
add in 2 <25064 25359> out 1 <25360>     # join source bit 0
add in 2 <25360 25360> out 1 <25361>     # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <25361> out 1 <25362> # multiply-by-constant 4294967295
add in 2 <25063 25362> out 1 <25363>     # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <25061> out 1 <25364> # multiply-by-constant 4294967295
add in 2 <24839 25364> out 1 <25365>     # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <25365> outplitBus
mul in 2 <25397 25363> out 1 <25633>     # cond trueterm
const-mul-neg-1 in 1 <25397> out 1 <25634> # cond minuscond
add in 2 <100 25634> out 1 <25635>       # cond negcond
mul in 2 <25635 24839> out 1 <25636>     # cond falseterm
add in 2 <25633 25636> out 1 <25637>     # cond result
add in 2 <25637 104> out 1 <25638>       # ArithBusReq.AddReq(DFG.Conditional,DFG.Constant)
const-mul-ffffffff in 1 <9> out 1 <25639> # multiply-by-constant 4294967295
add in 2 <25638 25639> out 1 <25640>     # 'CmpLT DFG.Add - DFG.Input'
split in 1 <25640> outplitBus
mul in 2 <25672 103> out 1 <25879>       # cond trueterm
const-mul-neg-1 in 1 <25672> out 1 <25880> # cond minuscond
add in 2 <100 25880> out 1 <25881>       # cond negcond
mul in 2 <25881 102> out 1 <25882>       # cond falseterm
add in 2 <25879 25882> out 1 <25883>     # cond result
add in 2 <25637 3084> out 1 <25884>      # ArithBusReq.AddReq(DFG.Conditional,DFG.Negate)
const-mul-ffffffff in 1 <25884> out 1 <25885> # multiply-by-constant 4294967295
add in 2 <9 25885> out 1 <25886>         # 'CmpLT DFG.Input - DFG.Subtract'
split in 1 <25886> outplitBus
mul in 2 <25918 103> out 1 <26157>       # cond trueterm
const-mul-neg-1 in 1 <25918> out 1 <26158> # cond minuscond
add in 2 <100 26158> out 1 <26159>       # cond negcond
mul in 2 <26159 25883> out 1 <26160>     # cond falseterm
add in 2 <26157 26160> out 1 <26161>     # cond result
const-mul-ffffffff in 1 <8> out 1 <26162> # multiply-by-constant 4294967295
add in 2 <8 9> out 1 <26163>             # ArithBusReq.AddReq(DFG.Input,DFG.Input)
add in 2 <26163 26162> out 1 <26164>     # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <26164> out 1 <26165> # multiply-by-constant 4294967295
add in 2 <26163 26165> out 1 <26166>     # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <8> out 1 <26167> # multiply-by-constant 4294967295
add in 2 <9 26167> out 1 <26168>         # 'CmpLT DFG.Input - DFG.Input'
split in 1 <26168> out 65 <26169 26170 26171 26172 26173 26174 26175 26176 26177 26178 26179 26180 26181 26182 26183 26184 26185 26186 26187 26188 26189 26190 26191 26192 26193 26194 26195 26196 26197 26198 26199 26200 26201 26202 26203 26204 26205 26206 26207 26208 26209 26210 26211 26212 26213 26214 26215 26216 26217 26218 26219 26220 26221 26222 26223 26224 26225 26226 26227 26228 26229 26230 26231 26232 26233> # SplitBus
mul in 2 <26200 26166> out 1 <26234>     # cond trueterm
const-mul-neg-1 in 1 <26200> out 1 <26235> # cond minuscond
add in 2 <100 26235> out 1 <26236>       # cond negcond
mul in 2 <26236 9> out 1 <26237>         # cond falseterm
add in 2 <26234 26237> out 1 <26238>     # cond result
const-mul-ffffffff in 1 <26238> out 1 <26239> # multiply-by-constant 4294967295
add in 2 <26238 10> out 1 <26240>        # ArithBusReq.AddReq(DFG.Conditional,DFG.Input)
add in 2 <26240 26239> out 1 <26241>     # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <26241> out 1 <26242> # multiply-by-constant 4294967295
add in 2 <26240 26242> out 1 <26243>     # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <26238> out 1 <26244> # multiply-by-constant 4294967295
add in 2 <10 26244> out 1 <26245>        # 'CmpLT DFG.Input - DFG.Conditional'
split in 1 <26245> outplitBus
mul in 2 <26277 26243> out 1 <26377>     # cond trueterm
const-mul-neg-1 in 1 <26277> out 1 <26378> # cond minuscond
add in 2 <100 26378> out 1 <26379>       # cond negcond
mul in 2 <26379 10> out 1 <26380>        # cond falseterm
add in 2 <26377 26380> out 1 <26381>     # cond result
const-mul-ffffffff in 1 <26381> out 1 <26382> # multiply-by-constant 4294967295
add in 2 <26381 11> out 1 <26383>        # ArithBusReq.AddReq(DFG.Conditional,DFG.Input)
add in 2 <26383 26382> out 1 <26384>     # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <26381> out 1 <26385> # multiply-by-constant 4294967295
add in 2 <11 26385> out 1 <26386>        # 'CmpLT DFG.Input - DFG.Conditional'
split in 1 <26386> out 197 <26387 26388 26389 26390 26391 26392 26393 26394 26395 26396 26397 26398 26399 26400 26401 26402 26403 26404 26405 26406 26407 26408 26409 26410 26411 26412 26413 26414 26415 26416 26417 26418 26419 26420 26421 26422 26423 26424 26425 26426 26427 26428 26429 26430 26431 26432 26433 26434 26435 26436 26437 26438 26439 26440 26441 26442 26443 26444 26445 26446 26447 26448 26449 26450 26451 26452 26453 26454 26455 26456 26457 26458 26459 26460 26461 26462 26463 26464 26465 26466 26467 26468 26469 26470 26471 26472 26473 26474 26475 26476 26477 26478 26479 26480 26481 26482 26483 26484 26485 26486 26487 26488 26489 26490 26491 26492 26493 26494 26495 26496 26497 26498 26499 26500 26501 26502 26503 26504 26505 26506 26507 26508 26509 26510 26511 26512 26513 26514 26515 26516 26517 26518 26519 26520 26521 26522 26523 26524 26525 26526 26527 26528 26529 26530 26531 26532 26533 26534 26535 26536 26537 26538 26539 26540 26541 26542 26543 26544 26545 26546 26547 26548 26549 26550 26551 26552 26553 26554 26555 26556 26557 26558 26559 26560 26561 26562 26563 26564 26565 26566 26567 26568 26569 26570 26571 26572 26573 26574 26575 26576 26577 26578 26579 26580 26581 26582 26583> # SplitBus
mul in 2 <26418 26384> out 1 <26584>     # cond trueterm
const-mul-neg-1 in 1 <26418> out 1 <26585> # cond minuscond
add in 2 <100 26585> out 1 <26586>       # cond negcond
mul in 2 <26586 26381> out 1 <26587>     # cond falseterm
add in 2 <26584 26587> out 1 <26588>     # cond result
mul in 2 <26277 26241> out 1 <26589>     # cond trueterm
const-mul-neg-1 in 1 <26277> out 1 <26590> # cond minuscond
add in 2 <100 26590> out 1 <26591>       # cond negcond
mul in 2 <26591 26238> out 1 <26592>     # cond falseterm
add in 2 <26589 26592> out 1 <26593>     # cond result
mul in 2 <26200 26164> out 1 <26594>     # cond trueterm
const-mul-neg-1 in 1 <26200> out 1 <26595> # cond minuscond
add in 2 <100 26595> out 1 <26596>       # cond negcond
mul in 2 <26596 8> out 1 <26597>         # cond falseterm
add in 2 <26594 26597> out 1 <26598>     # cond result
const-mul-ffffffff in 1 <26598> out 1 <26599> # multiply-by-constant 4294967295
add in 2 <26598 26593> out 1 <26600>     # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
add in 2 <26600 26599> out 1 <26601>     # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <26601> out 1 <26602> # multiply-by-constant 4294967295
add in 2 <26600 26602> out 1 <26603>     # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <26598> out 1 <26604> # multiply-by-constant 4294967295
add in 2 <26593 26604> out 1 <26605>     # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <26605> outplitBus
mul in 2 <26637 26603> out 1 <26738>     # cond trueterm
const-mul-neg-1 in 1 <26637> out 1 <26739> # cond minuscond
add in 2 <100 26739> out 1 <26740>       # cond negcond
mul in 2 <26740 26593> out 1 <26741>     # cond falseterm
add in 2 <26738 26741> out 1 <26742>     # cond result
const-mul-ffffffff in 1 <26742> out 1 <26743> # multiply-by-constant 4294967295
add in 2 <26742 26588> out 1 <26744>     # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
add in 2 <26744 26743> out 1 <26745>     # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <26745> out 1 <26746> # multiply-by-constant 4294967295
add in 2 <26744 26746> out 1 <26747>     # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <26742> out 1 <26748> # multiply-by-constant 4294967295
add in 2 <26588 26748> out 1 <26749>     # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <26749> out 199 <26750 26751 26752 26753 26754 26755 26756 26757 26758 26759 26760 26761 26762 26763 26764 26765 26766 26767 26768 26769 26770 26771 26772 26773 26774 26775 26776 26777 26778 26779 26780 26781 26782 26783 26784 26785 26786 26787 26788 26789 26790 26791 26792 26793 26794 26795 26796 26797 26798 26799 26800 26801 26802 26803 26804 26805 26806 26807 26808 26809 26810 26811 26812 26813 26814 26815 26816 26817 26818 26819 26820 26821 26822 26823 26824 26825 26826 26827 26828 26829 26830 26831 26832 26833 26834 26835 26836 26837 26838 26839 26840 26841 26842 26843 26844 26845 26846 26847 26848 26849 26850 26851 26852 26853 26854 26855 26856 26857 26858 26859 26860 26861 26862 26863 26864 26865 26866 26867 26868 26869 26870 26871 26872 26873 26874 26875 26876 26877 26878 26879 26880 26881 26882 26883 26884 26885 26886 26887 26888 26889 26890 26891 26892 26893 26894 26895 26896 26897 26898 26899 26900 26901 26902 26903 26904 26905 26906 26907 26908 26909 26910 26911 26912 26913 26914 26915 26916 26917 26918 26919 26920 26921 26922 26923 26924 26925 26926 26927 26928 26929 26930 26931 26932 26933 26934 26935 26936 26937 26938 26939 26940 26941 26942 26943 26944 26945 26946 26947 26948> # SplitBus
mul in 2 <26781 26747> out 1 <26949>     # cond trueterm
const-mul-neg-1 in 1 <26781> out 1 <26950> # cond minuscond
add in 2 <100 26950> out 1 <26951>       # cond negcond
mul in 2 <26951 26588> out 1 <26952>     # cond falseterm
add in 2 <26949 26952> out 1 <26953>     # cond result
const-mul-ffffffff in 1 <26953> out 1 <26954> # multiply-by-constant 4294967295
const-mul-ffffffff in 1 <26384> out 1 <26955> # multiply-by-constant 4294967295
add in 2 <26383 26955> out 1 <26956>     # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
mul in 2 <26418 26956> out 1 <26957>     # cond trueterm
const-mul-neg-1 in 1 <26418> out 1 <26958> # cond minuscond
add in 2 <100 26958> out 1 <26959>       # cond negcond
mul in 2 <26959 11> out 1 <26960>        # cond falseterm
add in 2 <26957 26960> out 1 <26961>     # cond result
const-mul-ffffffff in 1 <26961> out 1 <26962> # multiply-by-constant 4294967295
add in 2 <26961 12> out 1 <26963>        # ArithBusReq.AddReq(DFG.Conditional,DFG.Input)
split in 1 <26963> outplitBus
const-mul-2 in 1 <26995> out 1 <27195>   # join source bit 31
add in 2 <26994 27195> out 1 <27196>     # join source bit 30
const-mul-2 in 1 <27196> out 1 <27197>   # join
add in 2 <26993 27197> out 1 <27198>     # join source bit 29
const-mul-2 in 1 <27198> out 1 <27199>   # join
add in 2 <26992 27199> out 1 <27200>     # join source bit 28
const-mul-2 in 1 <27200> out 1 <27201>   # join
add in 2 <26991 27201> out 1 <27202>     # join source bit 27
const-mul-2 in 1 <27202> out 1 <27203>   # join
add in 2 <26990 27203> out 1 <27204>     # join source bit 26
const-mul-2 in 1 <27204> out 1 <27205>   # join
add in 2 <26989 27205> out 1 <27206>     # join source bit 25
const-mul-2 in 1 <27206> out 1 <27207>   # join
add in 2 <26988 27207> out 1 <27208>     # join source bit 24
const-mul-2 in 1 <27208> out 1 <27209>   # join
add in 2 <26987 27209> out 1 <27210>     # join source bit 23
const-mul-2 in 1 <27210> out 1 <27211>   # join
add in 2 <26986 27211> out 1 <27212>     # join source bit 22
const-mul-2 in 1 <27212> out 1 <27213>   # join
add in 2 <26985 27213> out 1 <27214>     # join source bit 21
const-mul-2 in 1 <27214> out 1 <27215>   # join
add in 2 <26984 27215> out 1 <27216>     # join source bit 20
const-mul-2 in 1 <27216> out 1 <27217>   # join
add in 2 <26983 27217> out 1 <27218>     # join source bit 19
const-mul-2 in 1 <27218> out 1 <27219>   # join
add in 2 <26982 27219> out 1 <27220>     # join source bit 18
const-mul-2 in 1 <27220> out 1 <27221>   # join
add in 2 <26981 27221> out 1 <27222>     # join source bit 17
const-mul-2 in 1 <27222> out 1 <27223>   # join
add in 2 <26980 27223> out 1 <27224>     # join source bit 16
const-mul-2 in 1 <27224> out 1 <27225>   # join
add in 2 <26979 27225> out 1 <27226>     # join source bit 15
const-mul-2 in 1 <27226> out 1 <27227>   # join
add in 2 <26978 27227> out 1 <27228>     # join source bit 14
const-mul-2 in 1 <27228> out 1 <27229>   # join
add in 2 <26977 27229> out 1 <27230>     # join source bit 13
const-mul-2 in 1 <27230> out 1 <27231>   # join
add in 2 <26976 27231> out 1 <27232>     # join source bit 12
const-mul-2 in 1 <27232> out 1 <27233>   # join
add in 2 <26975 27233> out 1 <27234>     # join source bit 11
const-mul-2 in 1 <27234> out 1 <27235>   # join
add in 2 <26974 27235> out 1 <27236>     # join source bit 10
const-mul-2 in 1 <27236> out 1 <27237>   # join
add in 2 <26973 27237> out 1 <27238>     # join source bit 9
const-mul-2 in 1 <27238> out 1 <27239>   # join
add in 2 <26972 27239> out 1 <27240>     # join source bit 8
const-mul-2 in 1 <27240> out 1 <27241>   # join
add in 2 <26971 27241> out 1 <27242>     # join source bit 7
const-mul-2 in 1 <27242> out 1 <27243>   # join
add in 2 <26970 27243> out 1 <27244>     # join source bit 6
const-mul-2 in 1 <27244> out 1 <27245>   # join
add in 2 <26969 27245> out 1 <27246>     # join source bit 5
const-mul-2 in 1 <27246> out 1 <27247>   # join
add in 2 <26968 27247> out 1 <27248>     # join source bit 4
const-mul-2 in 1 <27248> out 1 <27249>   # join
add in 2 <26967 27249> out 1 <27250>     # join source bit 3
const-mul-2 in 1 <27250> out 1 <27251>   # join
add in 2 <26966 27251> out 1 <27252>     # join source bit 2
const-mul-2 in 1 <27252> out 1 <27253>   # join
add in 2 <26965 27253> out 1 <27254>     # join source bit 1
const-mul-2 in 1 <27254> out 1 <27255>   # join
add in 2 <26964 27255> out 1 <27256>     # join source bit 0
add in 2 <27256 27256> out 1 <27257>     # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <26961> out 1 <27258> # multiply-by-constant 4294967295
add in 2 <12 27258> out 1 <27259>        # 'CmpLT DFG.Input - DFG.Conditional'
split in 1 <27259> outplitBus
mul in 2 <27291 27257> out 1 <27523>     # cond trueterm
const-mul-neg-1 in 1 <27291> out 1 <27524> # cond minuscond
add in 2 <100 27524> out 1 <27525>       # cond negcond
mul in 2 <27525 26961> out 1 <27526>     # cond falseterm
add in 2 <27523 27526> out 1 <27527>     # cond result
add in 2 <26953 27527> out 1 <27528>     # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
split in 1 <27528> outplitBus
const-mul-2 in 1 <27560> out 1 <27762>   # join source bit 31
add in 2 <27559 27762> out 1 <27763>     # join source bit 30
const-mul-2 in 1 <27763> out 1 <27764>   # join
add in 2 <27558 27764> out 1 <27765>     # join source bit 29
const-mul-2 in 1 <27765> out 1 <27766>   # join
add in 2 <27557 27766> out 1 <27767>     # join source bit 28
const-mul-2 in 1 <27767> out 1 <27768>   # join
add in 2 <27556 27768> out 1 <27769>     # join source bit 27
const-mul-2 in 1 <27769> out 1 <27770>   # join
add in 2 <27555 27770> out 1 <27771>     # join source bit 26
const-mul-2 in 1 <27771> out 1 <27772>   # join
add in 2 <27554 27772> out 1 <27773>     # join source bit 25
const-mul-2 in 1 <27773> out 1 <27774>   # join
add in 2 <27553 27774> out 1 <27775>     # join source bit 24
const-mul-2 in 1 <27775> out 1 <27776>   # join
add in 2 <27552 27776> out 1 <27777>     # join source bit 23
const-mul-2 in 1 <27777> out 1 <27778>   # join
add in 2 <27551 27778> out 1 <27779>     # join source bit 22
const-mul-2 in 1 <27779> out 1 <27780>   # join
add in 2 <27550 27780> out 1 <27781>     # join source bit 21
const-mul-2 in 1 <27781> out 1 <27782>   # join
add in 2 <27549 27782> out 1 <27783>     # join source bit 20
const-mul-2 in 1 <27783> out 1 <27784>   # join
add in 2 <27548 27784> out 1 <27785>     # join source bit 19
const-mul-2 in 1 <27785> out 1 <27786>   # join
add in 2 <27547 27786> out 1 <27787>     # join source bit 18
const-mul-2 in 1 <27787> out 1 <27788>   # join
add in 2 <27546 27788> out 1 <27789>     # join source bit 17
const-mul-2 in 1 <27789> out 1 <27790>   # join
add in 2 <27545 27790> out 1 <27791>     # join source bit 16
const-mul-2 in 1 <27791> out 1 <27792>   # join
add in 2 <27544 27792> out 1 <27793>     # join source bit 15
const-mul-2 in 1 <27793> out 1 <27794>   # join
add in 2 <27543 27794> out 1 <27795>     # join source bit 14
const-mul-2 in 1 <27795> out 1 <27796>   # join
add in 2 <27542 27796> out 1 <27797>     # join source bit 13
const-mul-2 in 1 <27797> out 1 <27798>   # join
add in 2 <27541 27798> out 1 <27799>     # join source bit 12
const-mul-2 in 1 <27799> out 1 <27800>   # join
add in 2 <27540 27800> out 1 <27801>     # join source bit 11
const-mul-2 in 1 <27801> out 1 <27802>   # join
add in 2 <27539 27802> out 1 <27803>     # join source bit 10
const-mul-2 in 1 <27803> out 1 <27804>   # join
add in 2 <27538 27804> out 1 <27805>     # join source bit 9
const-mul-2 in 1 <27805> out 1 <27806>   # join
add in 2 <27537 27806> out 1 <27807>     # join source bit 8
const-mul-2 in 1 <27807> out 1 <27808>   # join
add in 2 <27536 27808> out 1 <27809>     # join source bit 7
const-mul-2 in 1 <27809> out 1 <27810>   # join
add in 2 <27535 27810> out 1 <27811>     # join source bit 6
const-mul-2 in 1 <27811> out 1 <27812>   # join
add in 2 <27534 27812> out 1 <27813>     # join source bit 5
const-mul-2 in 1 <27813> out 1 <27814>   # join
add in 2 <27533 27814> out 1 <27815>     # join source bit 4
const-mul-2 in 1 <27815> out 1 <27816>   # join
add in 2 <27532 27816> out 1 <27817>     # join source bit 3
const-mul-2 in 1 <27817> out 1 <27818>   # join
add in 2 <27531 27818> out 1 <27819>     # join source bit 2
const-mul-2 in 1 <27819> out 1 <27820>   # join
add in 2 <27530 27820> out 1 <27821>     # join source bit 1
const-mul-2 in 1 <27821> out 1 <27822>   # join
add in 2 <27529 27822> out 1 <27823>     # join source bit 0
add in 2 <27823 27823> out 1 <27824>     # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <26953> out 1 <27825> # multiply-by-constant 4294967295
add in 2 <27527 27825> out 1 <27826>     # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <27826> outplitBus
mul in 2 <27858 27824> out 1 <28092>     # cond trueterm
const-mul-neg-1 in 1 <27858> out 1 <28093> # cond minuscond
add in 2 <100 28093> out 1 <28094>       # cond negcond
mul in 2 <28094 26953> out 1 <28095>     # cond falseterm
add in 2 <28092 28095> out 1 <28096>     # cond result
mul in 2 <26781 26745> out 1 <28097>     # cond trueterm
const-mul-neg-1 in 1 <26781> out 1 <28098> # cond minuscond
add in 2 <100 28098> out 1 <28099>       # cond negcond
mul in 2 <28099 26742> out 1 <28100>     # cond falseterm
add in 2 <28097 28100> out 1 <28101>     # cond result
mul in 2 <26637 26601> out 1 <28102>     # cond trueterm
const-mul-neg-1 in 1 <26637> out 1 <28103> # cond minuscond
add in 2 <100 28103> out 1 <28104>       # cond negcond
mul in 2 <28104 26598> out 1 <28105>     # cond falseterm
add in 2 <28102 28105> out 1 <28106>     # cond result
const-mul-ffffffff in 1 <28106> out 1 <28107> # multiply-by-constant 4294967295
add in 2 <28106 28101> out 1 <28108>     # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
add in 2 <28108 28107> out 1 <28109>     # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <28109> out 1 <28110> # multiply-by-constant 4294967295
add in 2 <28108 28110> out 1 <28111>     # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <28106> out 1 <28112> # multiply-by-constant 4294967295
add in 2 <28101 28112> out 1 <28113>     # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <28113> out 200 <28114 28115 28116 28117 28118 28119 28120 28121 28122 28123 28124 28125 28126 28127 28128 28129 28130 28131 28132 28133 28134 28135 28136 28137 28138 28139 28140 28141 28142 28143 28144 28145 28146 28147 28148 28149 28150 28151 28152 28153 28154 28155 28156 28157 28158 28159 28160 28161 28162 28163 28164 28165 28166 28167 28168 28169 28170 28171 28172 28173 28174 28175 28176 28177 28178 28179 28180 28181 28182 28183 28184 28185 28186 28187 28188 28189 28190 28191 28192 28193 28194 28195 28196 28197 28198 28199 28200 28201 28202 28203 28204 28205 28206 28207 28208 28209 28210 28211 28212 28213 28214 28215 28216 28217 28218 28219 28220 28221 28222 28223 28224 28225 28226 28227 28228 28229 28230 28231 28232 28233 28234 28235 28236 28237 28238 28239 28240 28241 28242 28243 28244 28245 28246 28247 28248 28249 28250 28251 28252 28253 28254 28255 28256 28257 28258 28259 28260 28261 28262 28263 28264 28265 28266 28267 28268 28269 28270 28271 28272 28273 28274 28275 28276 28277 28278 28279 28280 28281 28282 28283 28284 28285 28286 28287 28288 28289 28290 28291 28292 28293 28294 28295 28296 28297 28298 28299 28300 28301 28302 28303 28304 28305 28306 28307 28308 28309 28310 28311 28312 28313> # SplitBus
mul in 2 <28145 28111> out 1 <28314>     # cond trueterm
const-mul-neg-1 in 1 <28145> out 1 <28315> # cond minuscond
add in 2 <100 28315> out 1 <28316>       # cond negcond
mul in 2 <28316 28101> out 1 <28317>     # cond falseterm
add in 2 <28314 28317> out 1 <28318>     # cond result
const-mul-ffffffff in 1 <28318> out 1 <28319> # multiply-by-constant 4294967295
add in 2 <28318 28096> out 1 <28320>     # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
split in 1 <28320> outplitBus
const-mul-2 in 1 <28352> out 1 <28556>   # join source bit 31
add in 2 <28351 28556> out 1 <28557>     # join source bit 30
const-mul-2 in 1 <28557> out 1 <28558>   # join
add in 2 <28350 28558> out 1 <28559>     # join source bit 29
const-mul-2 in 1 <28559> out 1 <28560>   # join
add in 2 <28349 28560> out 1 <28561>     # join source bit 28
const-mul-2 in 1 <28561> out 1 <28562>   # join
add in 2 <28348 28562> out 1 <28563>     # join source bit 27
const-mul-2 in 1 <28563> out 1 <28564>   # join
add in 2 <28347 28564> out 1 <28565>     # join source bit 26
const-mul-2 in 1 <28565> out 1 <28566>   # join
add in 2 <28346 28566> out 1 <28567>     # join source bit 25
const-mul-2 in 1 <28567> out 1 <28568>   # join
add in 2 <28345 28568> out 1 <28569>     # join source bit 24
const-mul-2 in 1 <28569> out 1 <28570>   # join
add in 2 <28344 28570> out 1 <28571>     # join source bit 23
const-mul-2 in 1 <28571> out 1 <28572>   # join
add in 2 <28343 28572> out 1 <28573>     # join source bit 22
const-mul-2 in 1 <28573> out 1 <28574>   # join
add in 2 <28342 28574> out 1 <28575>     # join source bit 21
const-mul-2 in 1 <28575> out 1 <28576>   # join
add in 2 <28341 28576> out 1 <28577>     # join source bit 20
const-mul-2 in 1 <28577> out 1 <28578>   # join
add in 2 <28340 28578> out 1 <28579>     # join source bit 19
const-mul-2 in 1 <28579> out 1 <28580>   # join
add in 2 <28339 28580> out 1 <28581>     # join source bit 18
const-mul-2 in 1 <28581> out 1 <28582>   # join
add in 2 <28338 28582> out 1 <28583>     # join source bit 17
const-mul-2 in 1 <28583> out 1 <28584>   # join
add in 2 <28337 28584> out 1 <28585>     # join source bit 16
const-mul-2 in 1 <28585> out 1 <28586>   # join
add in 2 <28336 28586> out 1 <28587>     # join source bit 15
const-mul-2 in 1 <28587> out 1 <28588>   # join
add in 2 <28335 28588> out 1 <28589>     # join source bit 14
const-mul-2 in 1 <28589> out 1 <28590>   # join
add in 2 <28334 28590> out 1 <28591>     # join source bit 13
const-mul-2 in 1 <28591> out 1 <28592>   # join
add in 2 <28333 28592> out 1 <28593>     # join source bit 12
const-mul-2 in 1 <28593> out 1 <28594>   # join
add in 2 <28332 28594> out 1 <28595>     # join source bit 11
const-mul-2 in 1 <28595> out 1 <28596>   # join
add in 2 <28331 28596> out 1 <28597>     # join source bit 10
const-mul-2 in 1 <28597> out 1 <28598>   # join
add in 2 <28330 28598> out 1 <28599>     # join source bit 9
const-mul-2 in 1 <28599> out 1 <28600>   # join
add in 2 <28329 28600> out 1 <28601>     # join source bit 8
const-mul-2 in 1 <28601> out 1 <28602>   # join
add in 2 <28328 28602> out 1 <28603>     # join source bit 7
const-mul-2 in 1 <28603> out 1 <28604>   # join
add in 2 <28327 28604> out 1 <28605>     # join source bit 6
const-mul-2 in 1 <28605> out 1 <28606>   # join
add in 2 <28326 28606> out 1 <28607>     # join source bit 5
const-mul-2 in 1 <28607> out 1 <28608>   # join
add in 2 <28325 28608> out 1 <28609>     # join source bit 4
const-mul-2 in 1 <28609> out 1 <28610>   # join
add in 2 <28324 28610> out 1 <28611>     # join source bit 3
const-mul-2 in 1 <28611> out 1 <28612>   # join
add in 2 <28323 28612> out 1 <28613>     # join source bit 2
const-mul-2 in 1 <28613> out 1 <28614>   # join
add in 2 <28322 28614> out 1 <28615>     # join source bit 1
const-mul-2 in 1 <28615> out 1 <28616>   # join
add in 2 <28321 28616> out 1 <28617>     # join source bit 0
add in 2 <28617 28617> out 1 <28618>     # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <28618> out 1 <28619> # multiply-by-constant 4294967295
add in 2 <28320 28619> out 1 <28620>     # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <28318> out 1 <28621> # multiply-by-constant 4294967295
add in 2 <28096 28621> out 1 <28622>     # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <28622> outplitBus
mul in 2 <28654 28620> out 1 <28890>     # cond trueterm
const-mul-neg-1 in 1 <28654> out 1 <28891> # cond minuscond
add in 2 <100 28891> out 1 <28892>       # cond negcond
mul in 2 <28892 28096> out 1 <28893>     # cond falseterm
add in 2 <28890 28893> out 1 <28894>     # cond result
add in 2 <28894 104> out 1 <28895>       # ArithBusReq.AddReq(DFG.Conditional,DFG.Constant)
const-mul-ffffffff in 1 <10> out 1 <28896> # multiply-by-constant 4294967295
add in 2 <28895 28896> out 1 <28897>     # 'CmpLT DFG.Add - DFG.Input'
split in 1 <28897> out 238 <28898 28899 28900 28901 28902 28903 28904 28905 28906 28907 28908 28909 28910 28911 28912 28913 28914 28915 28916 28917 28918 28919 28920 28921 28922 28923 28924 28925 28926 28927 28928 28929 28930 28931 28932 28933 28934 28935 28936 28937 28938 28939 28940 28941 28942 28943 28944 28945 28946 28947 28948 28949 28950 28951 28952 28953 28954 28955 28956 28957 28958 28959 28960 28961 28962 28963 28964 28965 28966 28967 28968 28969 28970 28971 28972 28973 28974 28975 28976 28977 28978 28979 28980 28981 28982 28983 28984 28985 28986 28987 28988 28989 28990 28991 28992 28993 28994 28995 28996 28997 28998 28999 29000 29001 29002 29003 29004 29005 29006 29007 29008 29009 29010 29011 29012 29013 29014 29015 29016 29017 29018 29019 29020 29021 29022 29023 29024 29025 29026 29027 29028 29029 29030 29031 29032 29033 29034 29035 29036 29037 29038 29039 29040 29041 29042 29043 29044 29045 29046 29047 29048 29049 29050 29051 29052 29053 29054 29055 29056 29057 29058 29059 29060 29061 29062 29063 29064 29065 29066 29067 29068 29069 29070 29071 29072 29073 29074 29075 29076 29077 29078 29079 29080 29081 29082 29083 29084 29085 29086 29087 29088 29089 29090 29091 29092 29093 29094 29095 29096 29097 29098 29099 29100 29101 29102 29103 29104 29105 29106 29107 29108 29109 29110 29111 29112 29113 29114 29115 29116 29117 29118 29119 29120 29121 29122 29123 29124 29125 29126 29127 29128 29129 29130 29131 29132 29133 29134 29135> # SplitBus
mul in 2 <28929 103> out 1 <29136>       # cond trueterm
const-mul-neg-1 in 1 <28929> out 1 <29137> # cond minuscond
add in 2 <100 29137> out 1 <29138>       # cond negcond
mul in 2 <29138 102> out 1 <29139>       # cond falseterm
add in 2 <29136 29139> out 1 <29140>     # cond result
add in 2 <28894 3084> out 1 <29141>      # ArithBusReq.AddReq(DFG.Conditional,DFG.Negate)
const-mul-ffffffff in 1 <29141> out 1 <29142> # multiply-by-constant 4294967295
add in 2 <10 29142> out 1 <29143>        # 'CmpLT DFG.Input - DFG.Subtract'
split in 1 <29143> outplitBus
mul in 2 <29175 103> out 1 <29414>       # cond trueterm
const-mul-neg-1 in 1 <29175> out 1 <29415> # cond minuscond
add in 2 <100 29415> out 1 <29416>       # cond negcond
mul in 2 <29416 29140> out 1 <29417>     # cond falseterm
add in 2 <29414 29417> out 1 <29418>     # cond result
const-mul-ffffffff in 1 <9> out 1 <29419> # multiply-by-constant 4294967295
add in 2 <9 10> out 1 <29420>            # ArithBusReq.AddReq(DFG.Input,DFG.Input)
add in 2 <29420 29419> out 1 <29421>     # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <29421> out 1 <29422> # multiply-by-constant 4294967295
add in 2 <29420 29422> out 1 <29423>     # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <9> out 1 <29424> # multiply-by-constant 4294967295
add in 2 <10 29424> out 1 <29425>        # 'CmpLT DFG.Input - DFG.Input'
split in 1 <29425> out 65 <29426 29427 29428 29429 29430 29431 29432 29433 29434 29435 29436 29437 29438 29439 29440 29441 29442 29443 29444 29445 29446 29447 29448 29449 29450 29451 29452 29453 29454 29455 29456 29457 29458 29459 29460 29461 29462 29463 29464 29465 29466 29467 29468 29469 29470 29471 29472 29473 29474 29475 29476 29477 29478 29479 29480 29481 29482 29483 29484 29485 29486 29487 29488 29489 29490> # SplitBus
mul in 2 <29457 29423> out 1 <29491>     # cond trueterm
const-mul-neg-1 in 1 <29457> out 1 <29492> # cond minuscond
add in 2 <100 29492> out 1 <29493>       # cond negcond
mul in 2 <29493 10> out 1 <29494>        # cond falseterm
add in 2 <29491 29494> out 1 <29495>     # cond result
const-mul-ffffffff in 1 <29495> out 1 <29496> # multiply-by-constant 4294967295
add in 2 <29495 11> out 1 <29497>        # ArithBusReq.AddReq(DFG.Conditional,DFG.Input)
add in 2 <29497 29496> out 1 <29498>     # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <29498> out 1 <29499> # multiply-by-constant 4294967295
add in 2 <29497 29499> out 1 <29500>     # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <29495> out 1 <29501> # multiply-by-constant 4294967295
add in 2 <11 29501> out 1 <29502>        # 'CmpLT DFG.Input - DFG.Conditional'
split in 1 <29502> outplitBus
mul in 2 <29534 29500> out 1 <29634>     # cond trueterm
const-mul-neg-1 in 1 <29534> out 1 <29635> # cond minuscond
add in 2 <100 29635> out 1 <29636>       # cond negcond
mul in 2 <29636 11> out 1 <29637>        # cond falseterm
add in 2 <29634 29637> out 1 <29638>     # cond result
const-mul-ffffffff in 1 <29638> out 1 <29639> # multiply-by-constant 4294967295
add in 2 <29638 12> out 1 <29640>        # ArithBusReq.AddReq(DFG.Conditional,DFG.Input)
add in 2 <29640 29639> out 1 <29641>     # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <29638> out 1 <29642> # multiply-by-constant 4294967295
add in 2 <12 29642> out 1 <29643>        # 'CmpLT DFG.Input - DFG.Conditional'
split in 1 <29643> out 197 <29644 29645 29646 29647 29648 29649 29650 29651 29652 29653 29654 29655 29656 29657 29658 29659 29660 29661 29662 29663 29664 29665 29666 29667 29668 29669 29670 29671 29672 29673 29674 29675 29676 29677 29678 29679 29680 29681 29682 29683 29684 29685 29686 29687 29688 29689 29690 29691 29692 29693 29694 29695 29696 29697 29698 29699 29700 29701 29702 29703 29704 29705 29706 29707 29708 29709 29710 29711 29712 29713 29714 29715 29716 29717 29718 29719 29720 29721 29722 29723 29724 29725 29726 29727 29728 29729 29730 29731 29732 29733 29734 29735 29736 29737 29738 29739 29740 29741 29742 29743 29744 29745 29746 29747 29748 29749 29750 29751 29752 29753 29754 29755 29756 29757 29758 29759 29760 29761 29762 29763 29764 29765 29766 29767 29768 29769 29770 29771 29772 29773 29774 29775 29776 29777 29778 29779 29780 29781 29782 29783 29784 29785 29786 29787 29788 29789 29790 29791 29792 29793 29794 29795 29796 29797 29798 29799 29800 29801 29802 29803 29804 29805 29806 29807 29808 29809 29810 29811 29812 29813 29814 29815 29816 29817 29818 29819 29820 29821 29822 29823 29824 29825 29826 29827 29828 29829 29830 29831 29832 29833 29834 29835 29836 29837 29838 29839 29840> # SplitBus
mul in 2 <29675 29641> out 1 <29841>     # cond trueterm
const-mul-neg-1 in 1 <29675> out 1 <29842> # cond minuscond
add in 2 <100 29842> out 1 <29843>       # cond negcond
mul in 2 <29843 29638> out 1 <29844>     # cond falseterm
add in 2 <29841 29844> out 1 <29845>     # cond result
mul in 2 <29534 29498> out 1 <29846>     # cond trueterm
const-mul-neg-1 in 1 <29534> out 1 <29847> # cond minuscond
add in 2 <100 29847> out 1 <29848>       # cond negcond
mul in 2 <29848 29495> out 1 <29849>     # cond falseterm
add in 2 <29846 29849> out 1 <29850>     # cond result
mul in 2 <29457 29421> out 1 <29851>     # cond trueterm
const-mul-neg-1 in 1 <29457> out 1 <29852> # cond minuscond
add in 2 <100 29852> out 1 <29853>       # cond negcond
mul in 2 <29853 9> out 1 <29854>         # cond falseterm
add in 2 <29851 29854> out 1 <29855>     # cond result
const-mul-ffffffff in 1 <29855> out 1 <29856> # multiply-by-constant 4294967295
add in 2 <29855 29850> out 1 <29857>     # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
add in 2 <29857 29856> out 1 <29858>     # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <29858> out 1 <29859> # multiply-by-constant 4294967295
add in 2 <29857 29859> out 1 <29860>     # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <29855> out 1 <29861> # multiply-by-constant 4294967295
add in 2 <29850 29861> out 1 <29862>     # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <29862> outplitBus
mul in 2 <29894 29860> out 1 <29995>     # cond trueterm
const-mul-neg-1 in 1 <29894> out 1 <29996> # cond minuscond
add in 2 <100 29996> out 1 <29997>       # cond negcond
mul in 2 <29997 29850> out 1 <29998>     # cond falseterm
add in 2 <29995 29998> out 1 <29999>     # cond result
const-mul-ffffffff in 1 <29999> out 1 <30000> # multiply-by-constant 4294967295
add in 2 <29999 29845> out 1 <30001>     # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
add in 2 <30001 30000> out 1 <30002>     # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <30002> out 1 <30003> # multiply-by-constant 4294967295
add in 2 <30001 30003> out 1 <30004>     # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <29999> out 1 <30005> # multiply-by-constant 4294967295
add in 2 <29845 30005> out 1 <30006>     # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <30006> out 199 <30007 30008 30009 30010 30011 30012 30013 30014 30015 30016 30017 30018 30019 30020 30021 30022 30023 30024 30025 30026 30027 30028 30029 30030 30031 30032 30033 30034 30035 30036 30037 30038 30039 30040 30041 30042 30043 30044 30045 30046 30047 30048 30049 30050 30051 30052 30053 30054 30055 30056 30057 30058 30059 30060 30061 30062 30063 30064 30065 30066 30067 30068 30069 30070 30071 30072 30073 30074 30075 30076 30077 30078 30079 30080 30081 30082 30083 30084 30085 30086 30087 30088 30089 30090 30091 30092 30093 30094 30095 30096 30097 30098 30099 30100 30101 30102 30103 30104 30105 30106 30107 30108 30109 30110 30111 30112 30113 30114 30115 30116 30117 30118 30119 30120 30121 30122 30123 30124 30125 30126 30127 30128 30129 30130 30131 30132 30133 30134 30135 30136 30137 30138 30139 30140 30141 30142 30143 30144 30145 30146 30147 30148 30149 30150 30151 30152 30153 30154 30155 30156 30157 30158 30159 30160 30161 30162 30163 30164 30165 30166 30167 30168 30169 30170 30171 30172 30173 30174 30175 30176 30177 30178 30179 30180 30181 30182 30183 30184 30185 30186 30187 30188 30189 30190 30191 30192 30193 30194 30195 30196 30197 30198 30199 30200 30201 30202 30203 30204 30205> # SplitBus
mul in 2 <30038 30004> out 1 <30206>     # cond trueterm
const-mul-neg-1 in 1 <30038> out 1 <30207> # cond minuscond
add in 2 <100 30207> out 1 <30208>       # cond negcond
mul in 2 <30208 29845> out 1 <30209>     # cond falseterm
add in 2 <30206 30209> out 1 <30210>     # cond result
const-mul-ffffffff in 1 <30210> out 1 <30211> # multiply-by-constant 4294967295
const-mul-ffffffff in 1 <29641> out 1 <30212> # multiply-by-constant 4294967295
add in 2 <29640 30212> out 1 <30213>     # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
mul in 2 <29675 30213> out 1 <30214>     # cond trueterm
const-mul-neg-1 in 1 <29675> out 1 <30215> # cond minuscond
add in 2 <100 30215> out 1 <30216>       # cond negcond
mul in 2 <30216 12> out 1 <30217>        # cond falseterm
add in 2 <30214 30217> out 1 <30218>     # cond result
const-mul-ffffffff in 1 <30218> out 1 <30219> # multiply-by-constant 4294967295
add in 2 <30218 13> out 1 <30220>        # ArithBusReq.AddReq(DFG.Conditional,DFG.Input)
split in 1 <30220> outplitBus
const-mul-2 in 1 <30252> out 1 <30452>   # join source bit 31
add in 2 <30251 30452> out 1 <30453>     # join source bit 30
const-mul-2 in 1 <30453> out 1 <30454>   # join
add in 2 <30250 30454> out 1 <30455>     # join source bit 29
const-mul-2 in 1 <30455> out 1 <30456>   # join
add in 2 <30249 30456> out 1 <30457>     # join source bit 28
const-mul-2 in 1 <30457> out 1 <30458>   # join
add in 2 <30248 30458> out 1 <30459>     # join source bit 27
const-mul-2 in 1 <30459> out 1 <30460>   # join
add in 2 <30247 30460> out 1 <30461>     # join source bit 26
const-mul-2 in 1 <30461> out 1 <30462>   # join
add in 2 <30246 30462> out 1 <30463>     # join source bit 25
const-mul-2 in 1 <30463> out 1 <30464>   # join
add in 2 <30245 30464> out 1 <30465>     # join source bit 24
const-mul-2 in 1 <30465> out 1 <30466>   # join
add in 2 <30244 30466> out 1 <30467>     # join source bit 23
const-mul-2 in 1 <30467> out 1 <30468>   # join
add in 2 <30243 30468> out 1 <30469>     # join source bit 22
const-mul-2 in 1 <30469> out 1 <30470>   # join
add in 2 <30242 30470> out 1 <30471>     # join source bit 21
const-mul-2 in 1 <30471> out 1 <30472>   # join
add in 2 <30241 30472> out 1 <30473>     # join source bit 20
const-mul-2 in 1 <30473> out 1 <30474>   # join
add in 2 <30240 30474> out 1 <30475>     # join source bit 19
const-mul-2 in 1 <30475> out 1 <30476>   # join
add in 2 <30239 30476> out 1 <30477>     # join source bit 18
const-mul-2 in 1 <30477> out 1 <30478>   # join
add in 2 <30238 30478> out 1 <30479>     # join source bit 17
const-mul-2 in 1 <30479> out 1 <30480>   # join
add in 2 <30237 30480> out 1 <30481>     # join source bit 16
const-mul-2 in 1 <30481> out 1 <30482>   # join
add in 2 <30236 30482> out 1 <30483>     # join source bit 15
const-mul-2 in 1 <30483> out 1 <30484>   # join
add in 2 <30235 30484> out 1 <30485>     # join source bit 14
const-mul-2 in 1 <30485> out 1 <30486>   # join
add in 2 <30234 30486> out 1 <30487>     # join source bit 13
const-mul-2 in 1 <30487> out 1 <30488>   # join
add in 2 <30233 30488> out 1 <30489>     # join source bit 12
const-mul-2 in 1 <30489> out 1 <30490>   # join
add in 2 <30232 30490> out 1 <30491>     # join source bit 11
const-mul-2 in 1 <30491> out 1 <30492>   # join
add in 2 <30231 30492> out 1 <30493>     # join source bit 10
const-mul-2 in 1 <30493> out 1 <30494>   # join
add in 2 <30230 30494> out 1 <30495>     # join source bit 9
const-mul-2 in 1 <30495> out 1 <30496>   # join
add in 2 <30229 30496> out 1 <30497>     # join source bit 8
const-mul-2 in 1 <30497> out 1 <30498>   # join
add in 2 <30228 30498> out 1 <30499>     # join source bit 7
const-mul-2 in 1 <30499> out 1 <30500>   # join
add in 2 <30227 30500> out 1 <30501>     # join source bit 6
const-mul-2 in 1 <30501> out 1 <30502>   # join
add in 2 <30226 30502> out 1 <30503>     # join source bit 5
const-mul-2 in 1 <30503> out 1 <30504>   # join
add in 2 <30225 30504> out 1 <30505>     # join source bit 4
const-mul-2 in 1 <30505> out 1 <30506>   # join
add in 2 <30224 30506> out 1 <30507>     # join source bit 3
const-mul-2 in 1 <30507> out 1 <30508>   # join
add in 2 <30223 30508> out 1 <30509>     # join source bit 2
const-mul-2 in 1 <30509> out 1 <30510>   # join
add in 2 <30222 30510> out 1 <30511>     # join source bit 1
const-mul-2 in 1 <30511> out 1 <30512>   # join
add in 2 <30221 30512> out 1 <30513>     # join source bit 0
add in 2 <30513 30513> out 1 <30514>     # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <30218> out 1 <30515> # multiply-by-constant 4294967295
add in 2 <13 30515> out 1 <30516>        # 'CmpLT DFG.Input - DFG.Conditional'
split in 1 <30516> outplitBus
mul in 2 <30548 30514> out 1 <30780>     # cond trueterm
const-mul-neg-1 in 1 <30548> out 1 <30781> # cond minuscond
add in 2 <100 30781> out 1 <30782>       # cond negcond
mul in 2 <30782 30218> out 1 <30783>     # cond falseterm
add in 2 <30780 30783> out 1 <30784>     # cond result
add in 2 <30210 30784> out 1 <30785>     # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
split in 1 <30785> outplitBus
const-mul-2 in 1 <30817> out 1 <31019>   # join source bit 31
add in 2 <30816 31019> out 1 <31020>     # join source bit 30
const-mul-2 in 1 <31020> out 1 <31021>   # join
add in 2 <30815 31021> out 1 <31022>     # join source bit 29
const-mul-2 in 1 <31022> out 1 <31023>   # join
add in 2 <30814 31023> out 1 <31024>     # join source bit 28
const-mul-2 in 1 <31024> out 1 <31025>   # join
add in 2 <30813 31025> out 1 <31026>     # join source bit 27
const-mul-2 in 1 <31026> out 1 <31027>   # join
add in 2 <30812 31027> out 1 <31028>     # join source bit 26
const-mul-2 in 1 <31028> out 1 <31029>   # join
add in 2 <30811 31029> out 1 <31030>     # join source bit 25
const-mul-2 in 1 <31030> out 1 <31031>   # join
add in 2 <30810 31031> out 1 <31032>     # join source bit 24
const-mul-2 in 1 <31032> out 1 <31033>   # join
add in 2 <30809 31033> out 1 <31034>     # join source bit 23
const-mul-2 in 1 <31034> out 1 <31035>   # join
add in 2 <30808 31035> out 1 <31036>     # join source bit 22
const-mul-2 in 1 <31036> out 1 <31037>   # join
add in 2 <30807 31037> out 1 <31038>     # join source bit 21
const-mul-2 in 1 <31038> out 1 <31039>   # join
add in 2 <30806 31039> out 1 <31040>     # join source bit 20
const-mul-2 in 1 <31040> out 1 <31041>   # join
add in 2 <30805 31041> out 1 <31042>     # join source bit 19
const-mul-2 in 1 <31042> out 1 <31043>   # join
add in 2 <30804 31043> out 1 <31044>     # join source bit 18
const-mul-2 in 1 <31044> out 1 <31045>   # join
add in 2 <30803 31045> out 1 <31046>     # join source bit 17
const-mul-2 in 1 <31046> out 1 <31047>   # join
add in 2 <30802 31047> out 1 <31048>     # join source bit 16
const-mul-2 in 1 <31048> out 1 <31049>   # join
add in 2 <30801 31049> out 1 <31050>     # join source bit 15
const-mul-2 in 1 <31050> out 1 <31051>   # join
add in 2 <30800 31051> out 1 <31052>     # join source bit 14
const-mul-2 in 1 <31052> out 1 <31053>   # join
add in 2 <30799 31053> out 1 <31054>     # join source bit 13
const-mul-2 in 1 <31054> out 1 <31055>   # join
add in 2 <30798 31055> out 1 <31056>     # join source bit 12
const-mul-2 in 1 <31056> out 1 <31057>   # join
add in 2 <30797 31057> out 1 <31058>     # join source bit 11
const-mul-2 in 1 <31058> out 1 <31059>   # join
add in 2 <30796 31059> out 1 <31060>     # join source bit 10
const-mul-2 in 1 <31060> out 1 <31061>   # join
add in 2 <30795 31061> out 1 <31062>     # join source bit 9
const-mul-2 in 1 <31062> out 1 <31063>   # join
add in 2 <30794 31063> out 1 <31064>     # join source bit 8
const-mul-2 in 1 <31064> out 1 <31065>   # join
add in 2 <30793 31065> out 1 <31066>     # join source bit 7
const-mul-2 in 1 <31066> out 1 <31067>   # join
add in 2 <30792 31067> out 1 <31068>     # join source bit 6
const-mul-2 in 1 <31068> out 1 <31069>   # join
add in 2 <30791 31069> out 1 <31070>     # join source bit 5
const-mul-2 in 1 <31070> out 1 <31071>   # join
add in 2 <30790 31071> out 1 <31072>     # join source bit 4
const-mul-2 in 1 <31072> out 1 <31073>   # join
add in 2 <30789 31073> out 1 <31074>     # join source bit 3
const-mul-2 in 1 <31074> out 1 <31075>   # join
add in 2 <30788 31075> out 1 <31076>     # join source bit 2
const-mul-2 in 1 <31076> out 1 <31077>   # join
add in 2 <30787 31077> out 1 <31078>     # join source bit 1
const-mul-2 in 1 <31078> out 1 <31079>   # join
add in 2 <30786 31079> out 1 <31080>     # join source bit 0
add in 2 <31080 31080> out 1 <31081>     # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <30210> out 1 <31082> # multiply-by-constant 4294967295
add in 2 <30784 31082> out 1 <31083>     # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <31083> outplitBus
mul in 2 <31115 31081> out 1 <31349>     # cond trueterm
const-mul-neg-1 in 1 <31115> out 1 <31350> # cond minuscond
add in 2 <100 31350> out 1 <31351>       # cond negcond
mul in 2 <31351 30210> out 1 <31352>     # cond falseterm
add in 2 <31349 31352> out 1 <31353>     # cond result
mul in 2 <30038 30002> out 1 <31354>     # cond trueterm
const-mul-neg-1 in 1 <30038> out 1 <31355> # cond minuscond
add in 2 <100 31355> out 1 <31356>       # cond negcond
mul in 2 <31356 29999> out 1 <31357>     # cond falseterm
add in 2 <31354 31357> out 1 <31358>     # cond result
mul in 2 <29894 29858> out 1 <31359>     # cond trueterm
const-mul-neg-1 in 1 <29894> out 1 <31360> # cond minuscond
add in 2 <100 31360> out 1 <31361>       # cond negcond
mul in 2 <31361 29855> out 1 <31362>     # cond falseterm
add in 2 <31359 31362> out 1 <31363>     # cond result
const-mul-ffffffff in 1 <31363> out 1 <31364> # multiply-by-constant 4294967295
add in 2 <31363 31358> out 1 <31365>     # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
add in 2 <31365 31364> out 1 <31366>     # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <31366> out 1 <31367> # multiply-by-constant 4294967295
add in 2 <31365 31367> out 1 <31368>     # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <31363> out 1 <31369> # multiply-by-constant 4294967295
add in 2 <31358 31369> out 1 <31370>     # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <31370> out 200 <31371 31372 31373 31374 31375 31376 31377 31378 31379 31380 31381 31382 31383 31384 31385 31386 31387 31388 31389 31390 31391 31392 31393 31394 31395 31396 31397 31398 31399 31400 31401 31402 31403 31404 31405 31406 31407 31408 31409 31410 31411 31412 31413 31414 31415 31416 31417 31418 31419 31420 31421 31422 31423 31424 31425 31426 31427 31428 31429 31430 31431 31432 31433 31434 31435 31436 31437 31438 31439 31440 31441 31442 31443 31444 31445 31446 31447 31448 31449 31450 31451 31452 31453 31454 31455 31456 31457 31458 31459 31460 31461 31462 31463 31464 31465 31466 31467 31468 31469 31470 31471 31472 31473 31474 31475 31476 31477 31478 31479 31480 31481 31482 31483 31484 31485 31486 31487 31488 31489 31490 31491 31492 31493 31494 31495 31496 31497 31498 31499 31500 31501 31502 31503 31504 31505 31506 31507 31508 31509 31510 31511 31512 31513 31514 31515 31516 31517 31518 31519 31520 31521 31522 31523 31524 31525 31526 31527 31528 31529 31530 31531 31532 31533 31534 31535 31536 31537 31538 31539 31540 31541 31542 31543 31544 31545 31546 31547 31548 31549 31550 31551 31552 31553 31554 31555 31556 31557 31558 31559 31560 31561 31562 31563 31564 31565 31566 31567 31568 31569 31570> # SplitBus
mul in 2 <31402 31368> out 1 <31571>     # cond trueterm
const-mul-neg-1 in 1 <31402> out 1 <31572> # cond minuscond
add in 2 <100 31572> out 1 <31573>       # cond negcond
mul in 2 <31573 31358> out 1 <31574>     # cond falseterm
add in 2 <31571 31574> out 1 <31575>     # cond result
const-mul-ffffffff in 1 <31575> out 1 <31576> # multiply-by-constant 4294967295
add in 2 <31575 31353> out 1 <31577>     # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
split in 1 <31577> outplitBus
const-mul-2 in 1 <31609> out 1 <31813>   # join source bit 31
add in 2 <31608 31813> out 1 <31814>     # join source bit 30
const-mul-2 in 1 <31814> out 1 <31815>   # join
add in 2 <31607 31815> out 1 <31816>     # join source bit 29
const-mul-2 in 1 <31816> out 1 <31817>   # join
add in 2 <31606 31817> out 1 <31818>     # join source bit 28
const-mul-2 in 1 <31818> out 1 <31819>   # join
add in 2 <31605 31819> out 1 <31820>     # join source bit 27
const-mul-2 in 1 <31820> out 1 <31821>   # join
add in 2 <31604 31821> out 1 <31822>     # join source bit 26
const-mul-2 in 1 <31822> out 1 <31823>   # join
add in 2 <31603 31823> out 1 <31824>     # join source bit 25
const-mul-2 in 1 <31824> out 1 <31825>   # join
add in 2 <31602 31825> out 1 <31826>     # join source bit 24
const-mul-2 in 1 <31826> out 1 <31827>   # join
add in 2 <31601 31827> out 1 <31828>     # join source bit 23
const-mul-2 in 1 <31828> out 1 <31829>   # join
add in 2 <31600 31829> out 1 <31830>     # join source bit 22
const-mul-2 in 1 <31830> out 1 <31831>   # join
add in 2 <31599 31831> out 1 <31832>     # join source bit 21
const-mul-2 in 1 <31832> out 1 <31833>   # join
add in 2 <31598 31833> out 1 <31834>     # join source bit 20
const-mul-2 in 1 <31834> out 1 <31835>   # join
add in 2 <31597 31835> out 1 <31836>     # join source bit 19
const-mul-2 in 1 <31836> out 1 <31837>   # join
add in 2 <31596 31837> out 1 <31838>     # join source bit 18
const-mul-2 in 1 <31838> out 1 <31839>   # join
add in 2 <31595 31839> out 1 <31840>     # join source bit 17
const-mul-2 in 1 <31840> out 1 <31841>   # join
add in 2 <31594 31841> out 1 <31842>     # join source bit 16
const-mul-2 in 1 <31842> out 1 <31843>   # join
add in 2 <31593 31843> out 1 <31844>     # join source bit 15
const-mul-2 in 1 <31844> out 1 <31845>   # join
add in 2 <31592 31845> out 1 <31846>     # join source bit 14
const-mul-2 in 1 <31846> out 1 <31847>   # join
add in 2 <31591 31847> out 1 <31848>     # join source bit 13
const-mul-2 in 1 <31848> out 1 <31849>   # join
add in 2 <31590 31849> out 1 <31850>     # join source bit 12
const-mul-2 in 1 <31850> out 1 <31851>   # join
add in 2 <31589 31851> out 1 <31852>     # join source bit 11
const-mul-2 in 1 <31852> out 1 <31853>   # join
add in 2 <31588 31853> out 1 <31854>     # join source bit 10
const-mul-2 in 1 <31854> out 1 <31855>   # join
add in 2 <31587 31855> out 1 <31856>     # join source bit 9
const-mul-2 in 1 <31856> out 1 <31857>   # join
add in 2 <31586 31857> out 1 <31858>     # join source bit 8
const-mul-2 in 1 <31858> out 1 <31859>   # join
add in 2 <31585 31859> out 1 <31860>     # join source bit 7
const-mul-2 in 1 <31860> out 1 <31861>   # join
add in 2 <31584 31861> out 1 <31862>     # join source bit 6
const-mul-2 in 1 <31862> out 1 <31863>   # join
add in 2 <31583 31863> out 1 <31864>     # join source bit 5
const-mul-2 in 1 <31864> out 1 <31865>   # join
add in 2 <31582 31865> out 1 <31866>     # join source bit 4
const-mul-2 in 1 <31866> out 1 <31867>   # join
add in 2 <31581 31867> out 1 <31868>     # join source bit 3
const-mul-2 in 1 <31868> out 1 <31869>   # join
add in 2 <31580 31869> out 1 <31870>     # join source bit 2
const-mul-2 in 1 <31870> out 1 <31871>   # join
add in 2 <31579 31871> out 1 <31872>     # join source bit 1
const-mul-2 in 1 <31872> out 1 <31873>   # join
add in 2 <31578 31873> out 1 <31874>     # join source bit 0
add in 2 <31874 31874> out 1 <31875>     # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <31875> out 1 <31876> # multiply-by-constant 4294967295
add in 2 <31577 31876> out 1 <31877>     # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <31575> out 1 <31878> # multiply-by-constant 4294967295
add in 2 <31353 31878> out 1 <31879>     # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <31879> outplitBus
mul in 2 <31911 31877> out 1 <32147>     # cond trueterm
const-mul-neg-1 in 1 <31911> out 1 <32148> # cond minuscond
add in 2 <100 32148> out 1 <32149>       # cond negcond
mul in 2 <32149 31353> out 1 <32150>     # cond falseterm
add in 2 <32147 32150> out 1 <32151>     # cond result
add in 2 <32151 104> out 1 <32152>       # ArithBusReq.AddReq(DFG.Conditional,DFG.Constant)
const-mul-ffffffff in 1 <11> out 1 <32153> # multiply-by-constant 4294967295
add in 2 <32152 32153> out 1 <32154>     # 'CmpLT DFG.Add - DFG.Input'
split in 1 <32154> outplitBus
mul in 2 <32186 103> out 1 <32393>       # cond trueterm
const-mul-neg-1 in 1 <32186> out 1 <32394> # cond minuscond
add in 2 <100 32394> out 1 <32395>       # cond negcond
mul in 2 <32395 102> out 1 <32396>       # cond falseterm
add in 2 <32393 32396> out 1 <32397>     # cond result
add in 2 <32151 3084> out 1 <32398>      # ArithBusReq.AddReq(DFG.Conditional,DFG.Negate)
const-mul-ffffffff in 1 <32398> out 1 <32399> # multiply-by-constant 4294967295
add in 2 <11 32399> out 1 <32400>        # 'CmpLT DFG.Input - DFG.Subtract'
split in 1 <32400> outplitBus
mul in 2 <32432 103> out 1 <32671>       # cond trueterm
const-mul-neg-1 in 1 <32432> out 1 <32672> # cond minuscond
add in 2 <100 32672> out 1 <32673>       # cond negcond
mul in 2 <32673 32397> out 1 <32674>     # cond falseterm
add in 2 <32671 32674> out 1 <32675>     # cond result
const-mul-ffffffff in 1 <10> out 1 <32676> # multiply-by-constant 4294967295
add in 2 <10 11> out 1 <32677>           # ArithBusReq.AddReq(DFG.Input,DFG.Input)
add in 2 <32677 32676> out 1 <32678>     # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <32678> out 1 <32679> # multiply-by-constant 4294967295
add in 2 <32677 32679> out 1 <32680>     # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <10> out 1 <32681> # multiply-by-constant 4294967295
add in 2 <11 32681> out 1 <32682>        # 'CmpLT DFG.Input - DFG.Input'
split in 1 <32682> out 65 <32683 32684 32685 32686 32687 32688 32689 32690 32691 32692 32693 32694 32695 32696 32697 32698 32699 32700 32701 32702 32703 32704 32705 32706 32707 32708 32709 32710 32711 32712 32713 32714 32715 32716 32717 32718 32719 32720 32721 32722 32723 32724 32725 32726 32727 32728 32729 32730 32731 32732 32733 32734 32735 32736 32737 32738 32739 32740 32741 32742 32743 32744 32745 32746 32747> # SplitBus
mul in 2 <32714 32680> out 1 <32748>     # cond trueterm
const-mul-neg-1 in 1 <32714> out 1 <32749> # cond minuscond
add in 2 <100 32749> out 1 <32750>       # cond negcond
mul in 2 <32750 11> out 1 <32751>        # cond falseterm
add in 2 <32748 32751> out 1 <32752>     # cond result
const-mul-ffffffff in 1 <32752> out 1 <32753> # multiply-by-constant 4294967295
add in 2 <32752 12> out 1 <32754>        # ArithBusReq.AddReq(DFG.Conditional,DFG.Input)
add in 2 <32754 32753> out 1 <32755>     # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <32755> out 1 <32756> # multiply-by-constant 4294967295
add in 2 <32754 32756> out 1 <32757>     # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <32752> out 1 <32758> # multiply-by-constant 4294967295
add in 2 <12 32758> out 1 <32759>        # 'CmpLT DFG.Input - DFG.Conditional'
split in 1 <32759> outplitBus
mul in 2 <32791 32757> out 1 <32891>     # cond trueterm
const-mul-neg-1 in 1 <32791> out 1 <32892> # cond minuscond
add in 2 <100 32892> out 1 <32893>       # cond negcond
mul in 2 <32893 12> out 1 <32894>        # cond falseterm
add in 2 <32891 32894> out 1 <32895>     # cond result
const-mul-ffffffff in 1 <32895> out 1 <32896> # multiply-by-constant 4294967295
add in 2 <32895 13> out 1 <32897>        # ArithBusReq.AddReq(DFG.Conditional,DFG.Input)
add in 2 <32897 32896> out 1 <32898>     # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <32895> out 1 <32899> # multiply-by-constant 4294967295
add in 2 <13 32899> out 1 <32900>        # 'CmpLT DFG.Input - DFG.Conditional'
split in 1 <32900> out 197 <32901 32902 32903 32904 32905 32906 32907 32908 32909 32910 32911 32912 32913 32914 32915 32916 32917 32918 32919 32920 32921 32922 32923 32924 32925 32926 32927 32928 32929 32930 32931 32932 32933 32934 32935 32936 32937 32938 32939 32940 32941 32942 32943 32944 32945 32946 32947 32948 32949 32950 32951 32952 32953 32954 32955 32956 32957 32958 32959 32960 32961 32962 32963 32964 32965 32966 32967 32968 32969 32970 32971 32972 32973 32974 32975 32976 32977 32978 32979 32980 32981 32982 32983 32984 32985 32986 32987 32988 32989 32990 32991 32992 32993 32994 32995 32996 32997 32998 32999 33000 33001 33002 33003 33004 33005 33006 33007 33008 33009 33010 33011 33012 33013 33014 33015 33016 33017 33018 33019 33020 33021 33022 33023 33024 33025 33026 33027 33028 33029 33030 33031 33032 33033 33034 33035 33036 33037 33038 33039 33040 33041 33042 33043 33044 33045 33046 33047 33048 33049 33050 33051 33052 33053 33054 33055 33056 33057 33058 33059 33060 33061 33062 33063 33064 33065 33066 33067 33068 33069 33070 33071 33072 33073 33074 33075 33076 33077 33078 33079 33080 33081 33082 33083 33084 33085 33086 33087 33088 33089 33090 33091 33092 33093 33094 33095 33096 33097> # SplitBus
mul in 2 <32932 32898> out 1 <33098>     # cond trueterm
const-mul-neg-1 in 1 <32932> out 1 <33099> # cond minuscond
add in 2 <100 33099> out 1 <33100>       # cond negcond
mul in 2 <33100 32895> out 1 <33101>     # cond falseterm
add in 2 <33098 33101> out 1 <33102>     # cond result
mul in 2 <32791 32755> out 1 <33103>     # cond trueterm
const-mul-neg-1 in 1 <32791> out 1 <33104> # cond minuscond
add in 2 <100 33104> out 1 <33105>       # cond negcond
mul in 2 <33105 32752> out 1 <33106>     # cond falseterm
add in 2 <33103 33106> out 1 <33107>     # cond result
mul in 2 <32714 32678> out 1 <33108>     # cond trueterm
const-mul-neg-1 in 1 <32714> out 1 <33109> # cond minuscond
add in 2 <100 33109> out 1 <33110>       # cond negcond
mul in 2 <33110 10> out 1 <33111>        # cond falseterm
add in 2 <33108 33111> out 1 <33112>     # cond result
const-mul-ffffffff in 1 <33112> out 1 <33113> # multiply-by-constant 4294967295
add in 2 <33112 33107> out 1 <33114>     # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
add in 2 <33114 33113> out 1 <33115>     # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <33115> out 1 <33116> # multiply-by-constant 4294967295
add in 2 <33114 33116> out 1 <33117>     # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <33112> out 1 <33118> # multiply-by-constant 4294967295
add in 2 <33107 33118> out 1 <33119>     # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <33119> outplitBus
mul in 2 <33151 33117> out 1 <33252>     # cond trueterm
const-mul-neg-1 in 1 <33151> out 1 <33253> # cond minuscond
add in 2 <100 33253> out 1 <33254>       # cond negcond
mul in 2 <33254 33107> out 1 <33255>     # cond falseterm
add in 2 <33252 33255> out 1 <33256>     # cond result
const-mul-ffffffff in 1 <33256> out 1 <33257> # multiply-by-constant 4294967295
add in 2 <33256 33102> out 1 <33258>     # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
add in 2 <33258 33257> out 1 <33259>     # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <33259> out 1 <33260> # multiply-by-constant 4294967295
add in 2 <33258 33260> out 1 <33261>     # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <33256> out 1 <33262> # multiply-by-constant 4294967295
add in 2 <33102 33262> out 1 <33263>     # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <33263> out 199 <33264 33265 33266 33267 33268 33269 33270 33271 33272 33273 33274 33275 33276 33277 33278 33279 33280 33281 33282 33283 33284 33285 33286 33287 33288 33289 33290 33291 33292 33293 33294 33295 33296 33297 33298 33299 33300 33301 33302 33303 33304 33305 33306 33307 33308 33309 33310 33311 33312 33313 33314 33315 33316 33317 33318 33319 33320 33321 33322 33323 33324 33325 33326 33327 33328 33329 33330 33331 33332 33333 33334 33335 33336 33337 33338 33339 33340 33341 33342 33343 33344 33345 33346 33347 33348 33349 33350 33351 33352 33353 33354 33355 33356 33357 33358 33359 33360 33361 33362 33363 33364 33365 33366 33367 33368 33369 33370 33371 33372 33373 33374 33375 33376 33377 33378 33379 33380 33381 33382 33383 33384 33385 33386 33387 33388 33389 33390 33391 33392 33393 33394 33395 33396 33397 33398 33399 33400 33401 33402 33403 33404 33405 33406 33407 33408 33409 33410 33411 33412 33413 33414 33415 33416 33417 33418 33419 33420 33421 33422 33423 33424 33425 33426 33427 33428 33429 33430 33431 33432 33433 33434 33435 33436 33437 33438 33439 33440 33441 33442 33443 33444 33445 33446 33447 33448 33449 33450 33451 33452 33453 33454 33455 33456 33457 33458 33459 33460 33461 33462> # SplitBus
mul in 2 <33295 33261> out 1 <33463>     # cond trueterm
const-mul-neg-1 in 1 <33295> out 1 <33464> # cond minuscond
add in 2 <100 33464> out 1 <33465>       # cond negcond
mul in 2 <33465 33102> out 1 <33466>     # cond falseterm
add in 2 <33463 33466> out 1 <33467>     # cond result
const-mul-ffffffff in 1 <33467> out 1 <33468> # multiply-by-constant 4294967295
const-mul-ffffffff in 1 <32898> out 1 <33469> # multiply-by-constant 4294967295
add in 2 <32897 33469> out 1 <33470>     # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
mul in 2 <32932 33470> out 1 <33471>     # cond trueterm
const-mul-neg-1 in 1 <32932> out 1 <33472> # cond minuscond
add in 2 <100 33472> out 1 <33473>       # cond negcond
mul in 2 <33473 13> out 1 <33474>        # cond falseterm
add in 2 <33471 33474> out 1 <33475>     # cond result
const-mul-ffffffff in 1 <33475> out 1 <33476> # multiply-by-constant 4294967295
add in 2 <33475 14> out 1 <33477>        # ArithBusReq.AddReq(DFG.Conditional,DFG.Input)
split in 1 <33477> outplitBus
const-mul-2 in 1 <33509> out 1 <33709>   # join source bit 31
add in 2 <33508 33709> out 1 <33710>     # join source bit 30
const-mul-2 in 1 <33710> out 1 <33711>   # join
add in 2 <33507 33711> out 1 <33712>     # join source bit 29
const-mul-2 in 1 <33712> out 1 <33713>   # join
add in 2 <33506 33713> out 1 <33714>     # join source bit 28
const-mul-2 in 1 <33714> out 1 <33715>   # join
add in 2 <33505 33715> out 1 <33716>     # join source bit 27
const-mul-2 in 1 <33716> out 1 <33717>   # join
add in 2 <33504 33717> out 1 <33718>     # join source bit 26
const-mul-2 in 1 <33718> out 1 <33719>   # join
add in 2 <33503 33719> out 1 <33720>     # join source bit 25
const-mul-2 in 1 <33720> out 1 <33721>   # join
add in 2 <33502 33721> out 1 <33722>     # join source bit 24
const-mul-2 in 1 <33722> out 1 <33723>   # join
add in 2 <33501 33723> out 1 <33724>     # join source bit 23
const-mul-2 in 1 <33724> out 1 <33725>   # join
add in 2 <33500 33725> out 1 <33726>     # join source bit 22
const-mul-2 in 1 <33726> out 1 <33727>   # join
add in 2 <33499 33727> out 1 <33728>     # join source bit 21
const-mul-2 in 1 <33728> out 1 <33729>   # join
add in 2 <33498 33729> out 1 <33730>     # join source bit 20
const-mul-2 in 1 <33730> out 1 <33731>   # join
add in 2 <33497 33731> out 1 <33732>     # join source bit 19
const-mul-2 in 1 <33732> out 1 <33733>   # join
add in 2 <33496 33733> out 1 <33734>     # join source bit 18
const-mul-2 in 1 <33734> out 1 <33735>   # join
add in 2 <33495 33735> out 1 <33736>     # join source bit 17
const-mul-2 in 1 <33736> out 1 <33737>   # join
add in 2 <33494 33737> out 1 <33738>     # join source bit 16
const-mul-2 in 1 <33738> out 1 <33739>   # join
add in 2 <33493 33739> out 1 <33740>     # join source bit 15
const-mul-2 in 1 <33740> out 1 <33741>   # join
add in 2 <33492 33741> out 1 <33742>     # join source bit 14
const-mul-2 in 1 <33742> out 1 <33743>   # join
add in 2 <33491 33743> out 1 <33744>     # join source bit 13
const-mul-2 in 1 <33744> out 1 <33745>   # join
add in 2 <33490 33745> out 1 <33746>     # join source bit 12
const-mul-2 in 1 <33746> out 1 <33747>   # join
add in 2 <33489 33747> out 1 <33748>     # join source bit 11
const-mul-2 in 1 <33748> out 1 <33749>   # join
add in 2 <33488 33749> out 1 <33750>     # join source bit 10
const-mul-2 in 1 <33750> out 1 <33751>   # join
add in 2 <33487 33751> out 1 <33752>     # join source bit 9
const-mul-2 in 1 <33752> out 1 <33753>   # join
add in 2 <33486 33753> out 1 <33754>     # join source bit 8
const-mul-2 in 1 <33754> out 1 <33755>   # join
add in 2 <33485 33755> out 1 <33756>     # join source bit 7
const-mul-2 in 1 <33756> out 1 <33757>   # join
add in 2 <33484 33757> out 1 <33758>     # join source bit 6
const-mul-2 in 1 <33758> out 1 <33759>   # join
add in 2 <33483 33759> out 1 <33760>     # join source bit 5
const-mul-2 in 1 <33760> out 1 <33761>   # join
add in 2 <33482 33761> out 1 <33762>     # join source bit 4
const-mul-2 in 1 <33762> out 1 <33763>   # join
add in 2 <33481 33763> out 1 <33764>     # join source bit 3
const-mul-2 in 1 <33764> out 1 <33765>   # join
add in 2 <33480 33765> out 1 <33766>     # join source bit 2
const-mul-2 in 1 <33766> out 1 <33767>   # join
add in 2 <33479 33767> out 1 <33768>     # join source bit 1
const-mul-2 in 1 <33768> out 1 <33769>   # join
add in 2 <33478 33769> out 1 <33770>     # join source bit 0
add in 2 <33770 33770> out 1 <33771>     # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <33475> out 1 <33772> # multiply-by-constant 4294967295
add in 2 <14 33772> out 1 <33773>        # 'CmpLT DFG.Input - DFG.Conditional'
split in 1 <33773> outplitBus
mul in 2 <33805 33771> out 1 <34037>     # cond trueterm
const-mul-neg-1 in 1 <33805> out 1 <34038> # cond minuscond
add in 2 <100 34038> out 1 <34039>       # cond negcond
mul in 2 <34039 33475> out 1 <34040>     # cond falseterm
add in 2 <34037 34040> out 1 <34041>     # cond result
add in 2 <33467 34041> out 1 <34042>     # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
split in 1 <34042> outplitBus
const-mul-2 in 1 <34074> out 1 <34276>   # join source bit 31
add in 2 <34073 34276> out 1 <34277>     # join source bit 30
const-mul-2 in 1 <34277> out 1 <34278>   # join
add in 2 <34072 34278> out 1 <34279>     # join source bit 29
const-mul-2 in 1 <34279> out 1 <34280>   # join
add in 2 <34071 34280> out 1 <34281>     # join source bit 28
const-mul-2 in 1 <34281> out 1 <34282>   # join
add in 2 <34070 34282> out 1 <34283>     # join source bit 27
const-mul-2 in 1 <34283> out 1 <34284>   # join
add in 2 <34069 34284> out 1 <34285>     # join source bit 26
const-mul-2 in 1 <34285> out 1 <34286>   # join
add in 2 <34068 34286> out 1 <34287>     # join source bit 25
const-mul-2 in 1 <34287> out 1 <34288>   # join
add in 2 <34067 34288> out 1 <34289>     # join source bit 24
const-mul-2 in 1 <34289> out 1 <34290>   # join
add in 2 <34066 34290> out 1 <34291>     # join source bit 23
const-mul-2 in 1 <34291> out 1 <34292>   # join
add in 2 <34065 34292> out 1 <34293>     # join source bit 22
const-mul-2 in 1 <34293> out 1 <34294>   # join
add in 2 <34064 34294> out 1 <34295>     # join source bit 21
const-mul-2 in 1 <34295> out 1 <34296>   # join
add in 2 <34063 34296> out 1 <34297>     # join source bit 20
const-mul-2 in 1 <34297> out 1 <34298>   # join
add in 2 <34062 34298> out 1 <34299>     # join source bit 19
const-mul-2 in 1 <34299> out 1 <34300>   # join
add in 2 <34061 34300> out 1 <34301>     # join source bit 18
const-mul-2 in 1 <34301> out 1 <34302>   # join
add in 2 <34060 34302> out 1 <34303>     # join source bit 17
const-mul-2 in 1 <34303> out 1 <34304>   # join
add in 2 <34059 34304> out 1 <34305>     # join source bit 16
const-mul-2 in 1 <34305> out 1 <34306>   # join
add in 2 <34058 34306> out 1 <34307>     # join source bit 15
const-mul-2 in 1 <34307> out 1 <34308>   # join
add in 2 <34057 34308> out 1 <34309>     # join source bit 14
const-mul-2 in 1 <34309> out 1 <34310>   # join
add in 2 <34056 34310> out 1 <34311>     # join source bit 13
const-mul-2 in 1 <34311> out 1 <34312>   # join
add in 2 <34055 34312> out 1 <34313>     # join source bit 12
const-mul-2 in 1 <34313> out 1 <34314>   # join
add in 2 <34054 34314> out 1 <34315>     # join source bit 11
const-mul-2 in 1 <34315> out 1 <34316>   # join
add in 2 <34053 34316> out 1 <34317>     # join source bit 10
const-mul-2 in 1 <34317> out 1 <34318>   # join
add in 2 <34052 34318> out 1 <34319>     # join source bit 9
const-mul-2 in 1 <34319> out 1 <34320>   # join
add in 2 <34051 34320> out 1 <34321>     # join source bit 8
const-mul-2 in 1 <34321> out 1 <34322>   # join
add in 2 <34050 34322> out 1 <34323>     # join source bit 7
const-mul-2 in 1 <34323> out 1 <34324>   # join
add in 2 <34049 34324> out 1 <34325>     # join source bit 6
const-mul-2 in 1 <34325> out 1 <34326>   # join
add in 2 <34048 34326> out 1 <34327>     # join source bit 5
const-mul-2 in 1 <34327> out 1 <34328>   # join
add in 2 <34047 34328> out 1 <34329>     # join source bit 4
const-mul-2 in 1 <34329> out 1 <34330>   # join
add in 2 <34046 34330> out 1 <34331>     # join source bit 3
const-mul-2 in 1 <34331> out 1 <34332>   # join
add in 2 <34045 34332> out 1 <34333>     # join source bit 2
const-mul-2 in 1 <34333> out 1 <34334>   # join
add in 2 <34044 34334> out 1 <34335>     # join source bit 1
const-mul-2 in 1 <34335> out 1 <34336>   # join
add in 2 <34043 34336> out 1 <34337>     # join source bit 0
add in 2 <34337 34337> out 1 <34338>     # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <33467> out 1 <34339> # multiply-by-constant 4294967295
add in 2 <34041 34339> out 1 <34340>     # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <34340> outplitBus
mul in 2 <34372 34338> out 1 <34606>     # cond trueterm
const-mul-neg-1 in 1 <34372> out 1 <34607> # cond minuscond
add in 2 <100 34607> out 1 <34608>       # cond negcond
mul in 2 <34608 33467> out 1 <34609>     # cond falseterm
add in 2 <34606 34609> out 1 <34610>     # cond result
mul in 2 <33295 33259> out 1 <34611>     # cond trueterm
const-mul-neg-1 in 1 <33295> out 1 <34612> # cond minuscond
add in 2 <100 34612> out 1 <34613>       # cond negcond
mul in 2 <34613 33256> out 1 <34614>     # cond falseterm
add in 2 <34611 34614> out 1 <34615>     # cond result
mul in 2 <33151 33115> out 1 <34616>     # cond trueterm
const-mul-neg-1 in 1 <33151> out 1 <34617> # cond minuscond
add in 2 <100 34617> out 1 <34618>       # cond negcond
mul in 2 <34618 33112> out 1 <34619>     # cond falseterm
add in 2 <34616 34619> out 1 <34620>     # cond result
const-mul-ffffffff in 1 <34620> out 1 <34621> # multiply-by-constant 4294967295
add in 2 <34620 34615> out 1 <34622>     # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
add in 2 <34622 34621> out 1 <34623>     # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <34623> out 1 <34624> # multiply-by-constant 4294967295
add in 2 <34622 34624> out 1 <34625>     # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <34620> out 1 <34626> # multiply-by-constant 4294967295
add in 2 <34615 34626> out 1 <34627>     # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <34627> out 200 <34628 34629 34630 34631 34632 34633 34634 34635 34636 34637 34638 34639 34640 34641 34642 34643 34644 34645 34646 34647 34648 34649 34650 34651 34652 34653 34654 34655 34656 34657 34658 34659 34660 34661 34662 34663 34664 34665 34666 34667 34668 34669 34670 34671 34672 34673 34674 34675 34676 34677 34678 34679 34680 34681 34682 34683 34684 34685 34686 34687 34688 34689 34690 34691 34692 34693 34694 34695 34696 34697 34698 34699 34700 34701 34702 34703 34704 34705 34706 34707 34708 34709 34710 34711 34712 34713 34714 34715 34716 34717 34718 34719 34720 34721 34722 34723 34724 34725 34726 34727 34728 34729 34730 34731 34732 34733 34734 34735 34736 34737 34738 34739 34740 34741 34742 34743 34744 34745 34746 34747 34748 34749 34750 34751 34752 34753 34754 34755 34756 34757 34758 34759 34760 34761 34762 34763 34764 34765 34766 34767 34768 34769 34770 34771 34772 34773 34774 34775 34776 34777 34778 34779 34780 34781 34782 34783 34784 34785 34786 34787 34788 34789 34790 34791 34792 34793 34794 34795 34796 34797 34798 34799 34800 34801 34802 34803 34804 34805 34806 34807 34808 34809 34810 34811 34812 34813 34814 34815 34816 34817 34818 34819 34820 34821 34822 34823 34824 34825 34826 34827> # SplitBus
mul in 2 <34659 34625> out 1 <34828>     # cond trueterm
const-mul-neg-1 in 1 <34659> out 1 <34829> # cond minuscond
add in 2 <100 34829> out 1 <34830>       # cond negcond
mul in 2 <34830 34615> out 1 <34831>     # cond falseterm
add in 2 <34828 34831> out 1 <34832>     # cond result
const-mul-ffffffff in 1 <34832> out 1 <34833> # multiply-by-constant 4294967295
add in 2 <34832 34610> out 1 <34834>     # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
split in 1 <34834> outplitBus
const-mul-2 in 1 <34866> out 1 <35070>   # join source bit 31
add in 2 <34865 35070> out 1 <35071>     # join source bit 30
const-mul-2 in 1 <35071> out 1 <35072>   # join
add in 2 <34864 35072> out 1 <35073>     # join source bit 29
const-mul-2 in 1 <35073> out 1 <35074>   # join
add in 2 <34863 35074> out 1 <35075>     # join source bit 28
const-mul-2 in 1 <35075> out 1 <35076>   # join
add in 2 <34862 35076> out 1 <35077>     # join source bit 27
const-mul-2 in 1 <35077> out 1 <35078>   # join
add in 2 <34861 35078> out 1 <35079>     # join source bit 26
const-mul-2 in 1 <35079> out 1 <35080>   # join
add in 2 <34860 35080> out 1 <35081>     # join source bit 25
const-mul-2 in 1 <35081> out 1 <35082>   # join
add in 2 <34859 35082> out 1 <35083>     # join source bit 24
const-mul-2 in 1 <35083> out 1 <35084>   # join
add in 2 <34858 35084> out 1 <35085>     # join source bit 23
const-mul-2 in 1 <35085> out 1 <35086>   # join
add in 2 <34857 35086> out 1 <35087>     # join source bit 22
const-mul-2 in 1 <35087> out 1 <35088>   # join
add in 2 <34856 35088> out 1 <35089>     # join source bit 21
const-mul-2 in 1 <35089> out 1 <35090>   # join
add in 2 <34855 35090> out 1 <35091>     # join source bit 20
const-mul-2 in 1 <35091> out 1 <35092>   # join
add in 2 <34854 35092> out 1 <35093>     # join source bit 19
const-mul-2 in 1 <35093> out 1 <35094>   # join
add in 2 <34853 35094> out 1 <35095>     # join source bit 18
const-mul-2 in 1 <35095> out 1 <35096>   # join
add in 2 <34852 35096> out 1 <35097>     # join source bit 17
const-mul-2 in 1 <35097> out 1 <35098>   # join
add in 2 <34851 35098> out 1 <35099>     # join source bit 16
const-mul-2 in 1 <35099> out 1 <35100>   # join
add in 2 <34850 35100> out 1 <35101>     # join source bit 15
const-mul-2 in 1 <35101> out 1 <35102>   # join
add in 2 <34849 35102> out 1 <35103>     # join source bit 14
const-mul-2 in 1 <35103> out 1 <35104>   # join
add in 2 <34848 35104> out 1 <35105>     # join source bit 13
const-mul-2 in 1 <35105> out 1 <35106>   # join
add in 2 <34847 35106> out 1 <35107>     # join source bit 12
const-mul-2 in 1 <35107> out 1 <35108>   # join
add in 2 <34846 35108> out 1 <35109>     # join source bit 11
const-mul-2 in 1 <35109> out 1 <35110>   # join
add in 2 <34845 35110> out 1 <35111>     # join source bit 10
const-mul-2 in 1 <35111> out 1 <35112>   # join
add in 2 <34844 35112> out 1 <35113>     # join source bit 9
const-mul-2 in 1 <35113> out 1 <35114>   # join
add in 2 <34843 35114> out 1 <35115>     # join source bit 8
const-mul-2 in 1 <35115> out 1 <35116>   # join
add in 2 <34842 35116> out 1 <35117>     # join source bit 7
const-mul-2 in 1 <35117> out 1 <35118>   # join
add in 2 <34841 35118> out 1 <35119>     # join source bit 6
const-mul-2 in 1 <35119> out 1 <35120>   # join
add in 2 <34840 35120> out 1 <35121>     # join source bit 5
const-mul-2 in 1 <35121> out 1 <35122>   # join
add in 2 <34839 35122> out 1 <35123>     # join source bit 4
const-mul-2 in 1 <35123> out 1 <35124>   # join
add in 2 <34838 35124> out 1 <35125>     # join source bit 3
const-mul-2 in 1 <35125> out 1 <35126>   # join
add in 2 <34837 35126> out 1 <35127>     # join source bit 2
const-mul-2 in 1 <35127> out 1 <35128>   # join
add in 2 <34836 35128> out 1 <35129>     # join source bit 1
const-mul-2 in 1 <35129> out 1 <35130>   # join
add in 2 <34835 35130> out 1 <35131>     # join source bit 0
add in 2 <35131 35131> out 1 <35132>     # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <35132> out 1 <35133> # multiply-by-constant 4294967295
add in 2 <34834 35133> out 1 <35134>     # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <34832> out 1 <35135> # multiply-by-constant 4294967295
add in 2 <34610 35135> out 1 <35136>     # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <35136> outplitBus
mul in 2 <35168 35134> out 1 <35404>     # cond trueterm
const-mul-neg-1 in 1 <35168> out 1 <35405> # cond minuscond
add in 2 <100 35405> out 1 <35406>       # cond negcond
mul in 2 <35406 34610> out 1 <35407>     # cond falseterm
add in 2 <35404 35407> out 1 <35408>     # cond result
add in 2 <35408 104> out 1 <35409>       # ArithBusReq.AddReq(DFG.Conditional,DFG.Constant)
const-mul-ffffffff in 1 <12> out 1 <35410> # multiply-by-constant 4294967295
add in 2 <35409 35410> out 1 <35411>     # 'CmpLT DFG.Add - DFG.Input'
split in 1 <35411> out 238 <35412 35413 35414 35415 35416 35417 35418 35419 35420 35421 35422 35423 35424 35425 35426 35427 35428 35429 35430 35431 35432 35433 35434 35435 35436 35437 35438 35439 35440 35441 35442 35443 35444 35445 35446 35447 35448 35449 35450 35451 35452 35453 35454 35455 35456 35457 35458 35459 35460 35461 35462 35463 35464 35465 35466 35467 35468 35469 35470 35471 35472 35473 35474 35475 35476 35477 35478 35479 35480 35481 35482 35483 35484 35485 35486 35487 35488 35489 35490 35491 35492 35493 35494 35495 35496 35497 35498 35499 35500 35501 35502 35503 35504 35505 35506 35507 35508 35509 35510 35511 35512 35513 35514 35515 35516 35517 35518 35519 35520 35521 35522 35523 35524 35525 35526 35527 35528 35529 35530 35531 35532 35533 35534 35535 35536 35537 35538 35539 35540 35541 35542 35543 35544 35545 35546 35547 35548 35549 35550 35551 35552 35553 35554 35555 35556 35557 35558 35559 35560 35561 35562 35563 35564 35565 35566 35567 35568 35569 35570 35571 35572 35573 35574 35575 35576 35577 35578 35579 35580 35581 35582 35583 35584 35585 35586 35587 35588 35589 35590 35591 35592 35593 35594 35595 35596 35597 35598 35599 35600 35601 35602 35603 35604 35605 35606 35607 35608 35609 35610 35611 35612 35613 35614 35615 35616 35617 35618 35619 35620 35621 35622 35623 35624 35625 35626 35627 35628 35629 35630 35631 35632 35633 35634 35635 35636 35637 35638 35639 35640 35641 35642 35643 35644 35645 35646 35647 35648 35649> # SplitBus
mul in 2 <35443 103> out 1 <35650>       # cond trueterm
const-mul-neg-1 in 1 <35443> out 1 <35651> # cond minuscond
add in 2 <100 35651> out 1 <35652>       # cond negcond
mul in 2 <35652 102> out 1 <35653>       # cond falseterm
add in 2 <35650 35653> out 1 <35654>     # cond result
add in 2 <35408 3084> out 1 <35655>      # ArithBusReq.AddReq(DFG.Conditional,DFG.Negate)
const-mul-ffffffff in 1 <35655> out 1 <35656> # multiply-by-constant 4294967295
add in 2 <12 35656> out 1 <35657>        # 'CmpLT DFG.Input - DFG.Subtract'
split in 1 <35657> outplitBus
mul in 2 <35689 103> out 1 <35928>       # cond trueterm
const-mul-neg-1 in 1 <35689> out 1 <35929> # cond minuscond
add in 2 <100 35929> out 1 <35930>       # cond negcond
mul in 2 <35930 35654> out 1 <35931>     # cond falseterm
add in 2 <35928 35931> out 1 <35932>     # cond result
const-mul-ffffffff in 1 <11> out 1 <35933> # multiply-by-constant 4294967295
add in 2 <11 12> out 1 <35934>           # ArithBusReq.AddReq(DFG.Input,DFG.Input)
add in 2 <35934 35933> out 1 <35935>     # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <35935> out 1 <35936> # multiply-by-constant 4294967295
add in 2 <35934 35936> out 1 <35937>     # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <11> out 1 <35938> # multiply-by-constant 4294967295
add in 2 <12 35938> out 1 <35939>        # 'CmpLT DFG.Input - DFG.Input'
split in 1 <35939> out 65 <35940 35941 35942 35943 35944 35945 35946 35947 35948 35949 35950 35951 35952 35953 35954 35955 35956 35957 35958 35959 35960 35961 35962 35963 35964 35965 35966 35967 35968 35969 35970 35971 35972 35973 35974 35975 35976 35977 35978 35979 35980 35981 35982 35983 35984 35985 35986 35987 35988 35989 35990 35991 35992 35993 35994 35995 35996 35997 35998 35999 36000 36001 36002 36003 36004> # SplitBus
mul in 2 <35971 35937> out 1 <36005>     # cond trueterm
const-mul-neg-1 in 1 <35971> out 1 <36006> # cond minuscond
add in 2 <100 36006> out 1 <36007>       # cond negcond
mul in 2 <36007 12> out 1 <36008>        # cond falseterm
add in 2 <36005 36008> out 1 <36009>     # cond result
const-mul-ffffffff in 1 <36009> out 1 <36010> # multiply-by-constant 4294967295
add in 2 <36009 13> out 1 <36011>        # ArithBusReq.AddReq(DFG.Conditional,DFG.Input)
add in 2 <36011 36010> out 1 <36012>     # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <36012> out 1 <36013> # multiply-by-constant 4294967295
add in 2 <36011 36013> out 1 <36014>     # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <36009> out 1 <36015> # multiply-by-constant 4294967295
add in 2 <13 36015> out 1 <36016>        # 'CmpLT DFG.Input - DFG.Conditional'
split in 1 <36016> outplitBus
mul in 2 <36048 36014> out 1 <36148>     # cond trueterm
const-mul-neg-1 in 1 <36048> out 1 <36149> # cond minuscond
add in 2 <100 36149> out 1 <36150>       # cond negcond
mul in 2 <36150 13> out 1 <36151>        # cond falseterm
add in 2 <36148 36151> out 1 <36152>     # cond result
const-mul-ffffffff in 1 <36152> out 1 <36153> # multiply-by-constant 4294967295
add in 2 <36152 14> out 1 <36154>        # ArithBusReq.AddReq(DFG.Conditional,DFG.Input)
add in 2 <36154 36153> out 1 <36155>     # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <36152> out 1 <36156> # multiply-by-constant 4294967295
add in 2 <14 36156> out 1 <36157>        # 'CmpLT DFG.Input - DFG.Conditional'
split in 1 <36157> out 197 <36158 36159 36160 36161 36162 36163 36164 36165 36166 36167 36168 36169 36170 36171 36172 36173 36174 36175 36176 36177 36178 36179 36180 36181 36182 36183 36184 36185 36186 36187 36188 36189 36190 36191 36192 36193 36194 36195 36196 36197 36198 36199 36200 36201 36202 36203 36204 36205 36206 36207 36208 36209 36210 36211 36212 36213 36214 36215 36216 36217 36218 36219 36220 36221 36222 36223 36224 36225 36226 36227 36228 36229 36230 36231 36232 36233 36234 36235 36236 36237 36238 36239 36240 36241 36242 36243 36244 36245 36246 36247 36248 36249 36250 36251 36252 36253 36254 36255 36256 36257 36258 36259 36260 36261 36262 36263 36264 36265 36266 36267 36268 36269 36270 36271 36272 36273 36274 36275 36276 36277 36278 36279 36280 36281 36282 36283 36284 36285 36286 36287 36288 36289 36290 36291 36292 36293 36294 36295 36296 36297 36298 36299 36300 36301 36302 36303 36304 36305 36306 36307 36308 36309 36310 36311 36312 36313 36314 36315 36316 36317 36318 36319 36320 36321 36322 36323 36324 36325 36326 36327 36328 36329 36330 36331 36332 36333 36334 36335 36336 36337 36338 36339 36340 36341 36342 36343 36344 36345 36346 36347 36348 36349 36350 36351 36352 36353 36354> # SplitBus
mul in 2 <36189 36155> out 1 <36355>     # cond trueterm
const-mul-neg-1 in 1 <36189> out 1 <36356> # cond minuscond
add in 2 <100 36356> out 1 <36357>       # cond negcond
mul in 2 <36357 36152> out 1 <36358>     # cond falseterm
add in 2 <36355 36358> out 1 <36359>     # cond result
mul in 2 <36048 36012> out 1 <36360>     # cond trueterm
const-mul-neg-1 in 1 <36048> out 1 <36361> # cond minuscond
add in 2 <100 36361> out 1 <36362>       # cond negcond
mul in 2 <36362 36009> out 1 <36363>     # cond falseterm
add in 2 <36360 36363> out 1 <36364>     # cond result
mul in 2 <35971 35935> out 1 <36365>     # cond trueterm
const-mul-neg-1 in 1 <35971> out 1 <36366> # cond minuscond
add in 2 <100 36366> out 1 <36367>       # cond negcond
mul in 2 <36367 11> out 1 <36368>        # cond falseterm
add in 2 <36365 36368> out 1 <36369>     # cond result
const-mul-ffffffff in 1 <36369> out 1 <36370> # multiply-by-constant 4294967295
add in 2 <36369 36364> out 1 <36371>     # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
add in 2 <36371 36370> out 1 <36372>     # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <36372> out 1 <36373> # multiply-by-constant 4294967295
add in 2 <36371 36373> out 1 <36374>     # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <36369> out 1 <36375> # multiply-by-constant 4294967295
add in 2 <36364 36375> out 1 <36376>     # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <36376> outplitBus
mul in 2 <36408 36374> out 1 <36509>     # cond trueterm
const-mul-neg-1 in 1 <36408> out 1 <36510> # cond minuscond
add in 2 <100 36510> out 1 <36511>       # cond negcond
mul in 2 <36511 36364> out 1 <36512>     # cond falseterm
add in 2 <36509 36512> out 1 <36513>     # cond result
const-mul-ffffffff in 1 <36513> out 1 <36514> # multiply-by-constant 4294967295
add in 2 <36513 36359> out 1 <36515>     # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
add in 2 <36515 36514> out 1 <36516>     # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <36516> out 1 <36517> # multiply-by-constant 4294967295
add in 2 <36515 36517> out 1 <36518>     # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <36513> out 1 <36519> # multiply-by-constant 4294967295
add in 2 <36359 36519> out 1 <36520>     # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <36520> out 199 <36521 36522 36523 36524 36525 36526 36527 36528 36529 36530 36531 36532 36533 36534 36535 36536 36537 36538 36539 36540 36541 36542 36543 36544 36545 36546 36547 36548 36549 36550 36551 36552 36553 36554 36555 36556 36557 36558 36559 36560 36561 36562 36563 36564 36565 36566 36567 36568 36569 36570 36571 36572 36573 36574 36575 36576 36577 36578 36579 36580 36581 36582 36583 36584 36585 36586 36587 36588 36589 36590 36591 36592 36593 36594 36595 36596 36597 36598 36599 36600 36601 36602 36603 36604 36605 36606 36607 36608 36609 36610 36611 36612 36613 36614 36615 36616 36617 36618 36619 36620 36621 36622 36623 36624 36625 36626 36627 36628 36629 36630 36631 36632 36633 36634 36635 36636 36637 36638 36639 36640 36641 36642 36643 36644 36645 36646 36647 36648 36649 36650 36651 36652 36653 36654 36655 36656 36657 36658 36659 36660 36661 36662 36663 36664 36665 36666 36667 36668 36669 36670 36671 36672 36673 36674 36675 36676 36677 36678 36679 36680 36681 36682 36683 36684 36685 36686 36687 36688 36689 36690 36691 36692 36693 36694 36695 36696 36697 36698 36699 36700 36701 36702 36703 36704 36705 36706 36707 36708 36709 36710 36711 36712 36713 36714 36715 36716 36717 36718 36719> # SplitBus
mul in 2 <36552 36518> out 1 <36720>     # cond trueterm
const-mul-neg-1 in 1 <36552> out 1 <36721> # cond minuscond
add in 2 <100 36721> out 1 <36722>       # cond negcond
mul in 2 <36722 36359> out 1 <36723>     # cond falseterm
add in 2 <36720 36723> out 1 <36724>     # cond result
const-mul-ffffffff in 1 <36724> out 1 <36725> # multiply-by-constant 4294967295
const-mul-ffffffff in 1 <36155> out 1 <36726> # multiply-by-constant 4294967295
add in 2 <36154 36726> out 1 <36727>     # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
mul in 2 <36189 36727> out 1 <36728>     # cond trueterm
const-mul-neg-1 in 1 <36189> out 1 <36729> # cond minuscond
add in 2 <100 36729> out 1 <36730>       # cond negcond
mul in 2 <36730 14> out 1 <36731>        # cond falseterm
add in 2 <36728 36731> out 1 <36732>     # cond result
const-mul-ffffffff in 1 <36732> out 1 <36733> # multiply-by-constant 4294967295
add in 2 <36732 15> out 1 <36734>        # ArithBusReq.AddReq(DFG.Conditional,DFG.Input)
split in 1 <36734> outplitBus
const-mul-2 in 1 <36766> out 1 <36966>   # join source bit 31
add in 2 <36765 36966> out 1 <36967>     # join source bit 30
const-mul-2 in 1 <36967> out 1 <36968>   # join
add in 2 <36764 36968> out 1 <36969>     # join source bit 29
const-mul-2 in 1 <36969> out 1 <36970>   # join
add in 2 <36763 36970> out 1 <36971>     # join source bit 28
const-mul-2 in 1 <36971> out 1 <36972>   # join
add in 2 <36762 36972> out 1 <36973>     # join source bit 27
const-mul-2 in 1 <36973> out 1 <36974>   # join
add in 2 <36761 36974> out 1 <36975>     # join source bit 26
const-mul-2 in 1 <36975> out 1 <36976>   # join
add in 2 <36760 36976> out 1 <36977>     # join source bit 25
const-mul-2 in 1 <36977> out 1 <36978>   # join
add in 2 <36759 36978> out 1 <36979>     # join source bit 24
const-mul-2 in 1 <36979> out 1 <36980>   # join
add in 2 <36758 36980> out 1 <36981>     # join source bit 23
const-mul-2 in 1 <36981> out 1 <36982>   # join
add in 2 <36757 36982> out 1 <36983>     # join source bit 22
const-mul-2 in 1 <36983> out 1 <36984>   # join
add in 2 <36756 36984> out 1 <36985>     # join source bit 21
const-mul-2 in 1 <36985> out 1 <36986>   # join
add in 2 <36755 36986> out 1 <36987>     # join source bit 20
const-mul-2 in 1 <36987> out 1 <36988>   # join
add in 2 <36754 36988> out 1 <36989>     # join source bit 19
const-mul-2 in 1 <36989> out 1 <36990>   # join
add in 2 <36753 36990> out 1 <36991>     # join source bit 18
const-mul-2 in 1 <36991> out 1 <36992>   # join
add in 2 <36752 36992> out 1 <36993>     # join source bit 17
const-mul-2 in 1 <36993> out 1 <36994>   # join
add in 2 <36751 36994> out 1 <36995>     # join source bit 16
const-mul-2 in 1 <36995> out 1 <36996>   # join
add in 2 <36750 36996> out 1 <36997>     # join source bit 15
const-mul-2 in 1 <36997> out 1 <36998>   # join
add in 2 <36749 36998> out 1 <36999>     # join source bit 14
const-mul-2 in 1 <36999> out 1 <37000>   # join
add in 2 <36748 37000> out 1 <37001>     # join source bit 13
const-mul-2 in 1 <37001> out 1 <37002>   # join
add in 2 <36747 37002> out 1 <37003>     # join source bit 12
const-mul-2 in 1 <37003> out 1 <37004>   # join
add in 2 <36746 37004> out 1 <37005>     # join source bit 11
const-mul-2 in 1 <37005> out 1 <37006>   # join
add in 2 <36745 37006> out 1 <37007>     # join source bit 10
const-mul-2 in 1 <37007> out 1 <37008>   # join
add in 2 <36744 37008> out 1 <37009>     # join source bit 9
const-mul-2 in 1 <37009> out 1 <37010>   # join
add in 2 <36743 37010> out 1 <37011>     # join source bit 8
const-mul-2 in 1 <37011> out 1 <37012>   # join
add in 2 <36742 37012> out 1 <37013>     # join source bit 7
const-mul-2 in 1 <37013> out 1 <37014>   # join
add in 2 <36741 37014> out 1 <37015>     # join source bit 6
const-mul-2 in 1 <37015> out 1 <37016>   # join
add in 2 <36740 37016> out 1 <37017>     # join source bit 5
const-mul-2 in 1 <37017> out 1 <37018>   # join
add in 2 <36739 37018> out 1 <37019>     # join source bit 4
const-mul-2 in 1 <37019> out 1 <37020>   # join
add in 2 <36738 37020> out 1 <37021>     # join source bit 3
const-mul-2 in 1 <37021> out 1 <37022>   # join
add in 2 <36737 37022> out 1 <37023>     # join source bit 2
const-mul-2 in 1 <37023> out 1 <37024>   # join
add in 2 <36736 37024> out 1 <37025>     # join source bit 1
const-mul-2 in 1 <37025> out 1 <37026>   # join
add in 2 <36735 37026> out 1 <37027>     # join source bit 0
add in 2 <37027 37027> out 1 <37028>     # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <36732> out 1 <37029> # multiply-by-constant 4294967295
add in 2 <15 37029> out 1 <37030>        # 'CmpLT DFG.Input - DFG.Conditional'
split in 1 <37030> outplitBus
mul in 2 <37062 37028> out 1 <37294>     # cond trueterm
const-mul-neg-1 in 1 <37062> out 1 <37295> # cond minuscond
add in 2 <100 37295> out 1 <37296>       # cond negcond
mul in 2 <37296 36732> out 1 <37297>     # cond falseterm
add in 2 <37294 37297> out 1 <37298>     # cond result
add in 2 <36724 37298> out 1 <37299>     # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
split in 1 <37299> outplitBus
const-mul-2 in 1 <37331> out 1 <37533>   # join source bit 31
add in 2 <37330 37533> out 1 <37534>     # join source bit 30
const-mul-2 in 1 <37534> out 1 <37535>   # join
add in 2 <37329 37535> out 1 <37536>     # join source bit 29
const-mul-2 in 1 <37536> out 1 <37537>   # join
add in 2 <37328 37537> out 1 <37538>     # join source bit 28
const-mul-2 in 1 <37538> out 1 <37539>   # join
add in 2 <37327 37539> out 1 <37540>     # join source bit 27
const-mul-2 in 1 <37540> out 1 <37541>   # join
add in 2 <37326 37541> out 1 <37542>     # join source bit 26
const-mul-2 in 1 <37542> out 1 <37543>   # join
add in 2 <37325 37543> out 1 <37544>     # join source bit 25
const-mul-2 in 1 <37544> out 1 <37545>   # join
add in 2 <37324 37545> out 1 <37546>     # join source bit 24
const-mul-2 in 1 <37546> out 1 <37547>   # join
add in 2 <37323 37547> out 1 <37548>     # join source bit 23
const-mul-2 in 1 <37548> out 1 <37549>   # join
add in 2 <37322 37549> out 1 <37550>     # join source bit 22
const-mul-2 in 1 <37550> out 1 <37551>   # join
add in 2 <37321 37551> out 1 <37552>     # join source bit 21
const-mul-2 in 1 <37552> out 1 <37553>   # join
add in 2 <37320 37553> out 1 <37554>     # join source bit 20
const-mul-2 in 1 <37554> out 1 <37555>   # join
add in 2 <37319 37555> out 1 <37556>     # join source bit 19
const-mul-2 in 1 <37556> out 1 <37557>   # join
add in 2 <37318 37557> out 1 <37558>     # join source bit 18
const-mul-2 in 1 <37558> out 1 <37559>   # join
add in 2 <37317 37559> out 1 <37560>     # join source bit 17
const-mul-2 in 1 <37560> out 1 <37561>   # join
add in 2 <37316 37561> out 1 <37562>     # join source bit 16
const-mul-2 in 1 <37562> out 1 <37563>   # join
add in 2 <37315 37563> out 1 <37564>     # join source bit 15
const-mul-2 in 1 <37564> out 1 <37565>   # join
add in 2 <37314 37565> out 1 <37566>     # join source bit 14
const-mul-2 in 1 <37566> out 1 <37567>   # join
add in 2 <37313 37567> out 1 <37568>     # join source bit 13
const-mul-2 in 1 <37568> out 1 <37569>   # join
add in 2 <37312 37569> out 1 <37570>     # join source bit 12
const-mul-2 in 1 <37570> out 1 <37571>   # join
add in 2 <37311 37571> out 1 <37572>     # join source bit 11
const-mul-2 in 1 <37572> out 1 <37573>   # join
add in 2 <37310 37573> out 1 <37574>     # join source bit 10
const-mul-2 in 1 <37574> out 1 <37575>   # join
add in 2 <37309 37575> out 1 <37576>     # join source bit 9
const-mul-2 in 1 <37576> out 1 <37577>   # join
add in 2 <37308 37577> out 1 <37578>     # join source bit 8
const-mul-2 in 1 <37578> out 1 <37579>   # join
add in 2 <37307 37579> out 1 <37580>     # join source bit 7
const-mul-2 in 1 <37580> out 1 <37581>   # join
add in 2 <37306 37581> out 1 <37582>     # join source bit 6
const-mul-2 in 1 <37582> out 1 <37583>   # join
add in 2 <37305 37583> out 1 <37584>     # join source bit 5
const-mul-2 in 1 <37584> out 1 <37585>   # join
add in 2 <37304 37585> out 1 <37586>     # join source bit 4
const-mul-2 in 1 <37586> out 1 <37587>   # join
add in 2 <37303 37587> out 1 <37588>     # join source bit 3
const-mul-2 in 1 <37588> out 1 <37589>   # join
add in 2 <37302 37589> out 1 <37590>     # join source bit 2
const-mul-2 in 1 <37590> out 1 <37591>   # join
add in 2 <37301 37591> out 1 <37592>     # join source bit 1
const-mul-2 in 1 <37592> out 1 <37593>   # join
add in 2 <37300 37593> out 1 <37594>     # join source bit 0
add in 2 <37594 37594> out 1 <37595>     # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <36724> out 1 <37596> # multiply-by-constant 4294967295
add in 2 <37298 37596> out 1 <37597>     # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <37597> outplitBus
mul in 2 <37629 37595> out 1 <37863>     # cond trueterm
const-mul-neg-1 in 1 <37629> out 1 <37864> # cond minuscond
add in 2 <100 37864> out 1 <37865>       # cond negcond
mul in 2 <37865 36724> out 1 <37866>     # cond falseterm
add in 2 <37863 37866> out 1 <37867>     # cond result
mul in 2 <36552 36516> out 1 <37868>     # cond trueterm
const-mul-neg-1 in 1 <36552> out 1 <37869> # cond minuscond
add in 2 <100 37869> out 1 <37870>       # cond negcond
mul in 2 <37870 36513> out 1 <37871>     # cond falseterm
add in 2 <37868 37871> out 1 <37872>     # cond result
mul in 2 <36408 36372> out 1 <37873>     # cond trueterm
const-mul-neg-1 in 1 <36408> out 1 <37874> # cond minuscond
add in 2 <100 37874> out 1 <37875>       # cond negcond
mul in 2 <37875 36369> out 1 <37876>     # cond falseterm
add in 2 <37873 37876> out 1 <37877>     # cond result
const-mul-ffffffff in 1 <37877> out 1 <37878> # multiply-by-constant 4294967295
add in 2 <37877 37872> out 1 <37879>     # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
add in 2 <37879 37878> out 1 <37880>     # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <37880> out 1 <37881> # multiply-by-constant 4294967295
add in 2 <37879 37881> out 1 <37882>     # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <37877> out 1 <37883> # multiply-by-constant 4294967295
add in 2 <37872 37883> out 1 <37884>     # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <37884> out 200 <37885 37886 37887 37888 37889 37890 37891 37892 37893 37894 37895 37896 37897 37898 37899 37900 37901 37902 37903 37904 37905 37906 37907 37908 37909 37910 37911 37912 37913 37914 37915 37916 37917 37918 37919 37920 37921 37922 37923 37924 37925 37926 37927 37928 37929 37930 37931 37932 37933 37934 37935 37936 37937 37938 37939 37940 37941 37942 37943 37944 37945 37946 37947 37948 37949 37950 37951 37952 37953 37954 37955 37956 37957 37958 37959 37960 37961 37962 37963 37964 37965 37966 37967 37968 37969 37970 37971 37972 37973 37974 37975 37976 37977 37978 37979 37980 37981 37982 37983 37984 37985 37986 37987 37988 37989 37990 37991 37992 37993 37994 37995 37996 37997 37998 37999 38000 38001 38002 38003 38004 38005 38006 38007 38008 38009 38010 38011 38012 38013 38014 38015 38016 38017 38018 38019 38020 38021 38022 38023 38024 38025 38026 38027 38028 38029 38030 38031 38032 38033 38034 38035 38036 38037 38038 38039 38040 38041 38042 38043 38044 38045 38046 38047 38048 38049 38050 38051 38052 38053 38054 38055 38056 38057 38058 38059 38060 38061 38062 38063 38064 38065 38066 38067 38068 38069 38070 38071 38072 38073 38074 38075 38076 38077 38078 38079 38080 38081 38082 38083 38084> # SplitBus
mul in 2 <37916 37882> out 1 <38085>     # cond trueterm
const-mul-neg-1 in 1 <37916> out 1 <38086> # cond minuscond
add in 2 <100 38086> out 1 <38087>       # cond negcond
mul in 2 <38087 37872> out 1 <38088>     # cond falseterm
add in 2 <38085 38088> out 1 <38089>     # cond result
const-mul-ffffffff in 1 <38089> out 1 <38090> # multiply-by-constant 4294967295
add in 2 <38089 37867> out 1 <38091>     # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
split in 1 <38091> outplitBus
const-mul-2 in 1 <38123> out 1 <38327>   # join source bit 31
add in 2 <38122 38327> out 1 <38328>     # join source bit 30
const-mul-2 in 1 <38328> out 1 <38329>   # join
add in 2 <38121 38329> out 1 <38330>     # join source bit 29
const-mul-2 in 1 <38330> out 1 <38331>   # join
add in 2 <38120 38331> out 1 <38332>     # join source bit 28
const-mul-2 in 1 <38332> out 1 <38333>   # join
add in 2 <38119 38333> out 1 <38334>     # join source bit 27
const-mul-2 in 1 <38334> out 1 <38335>   # join
add in 2 <38118 38335> out 1 <38336>     # join source bit 26
const-mul-2 in 1 <38336> out 1 <38337>   # join
add in 2 <38117 38337> out 1 <38338>     # join source bit 25
const-mul-2 in 1 <38338> out 1 <38339>   # join
add in 2 <38116 38339> out 1 <38340>     # join source bit 24
const-mul-2 in 1 <38340> out 1 <38341>   # join
add in 2 <38115 38341> out 1 <38342>     # join source bit 23
const-mul-2 in 1 <38342> out 1 <38343>   # join
add in 2 <38114 38343> out 1 <38344>     # join source bit 22
const-mul-2 in 1 <38344> out 1 <38345>   # join
add in 2 <38113 38345> out 1 <38346>     # join source bit 21
const-mul-2 in 1 <38346> out 1 <38347>   # join
add in 2 <38112 38347> out 1 <38348>     # join source bit 20
const-mul-2 in 1 <38348> out 1 <38349>   # join
add in 2 <38111 38349> out 1 <38350>     # join source bit 19
const-mul-2 in 1 <38350> out 1 <38351>   # join
add in 2 <38110 38351> out 1 <38352>     # join source bit 18
const-mul-2 in 1 <38352> out 1 <38353>   # join
add in 2 <38109 38353> out 1 <38354>     # join source bit 17
const-mul-2 in 1 <38354> out 1 <38355>   # join
add in 2 <38108 38355> out 1 <38356>     # join source bit 16
const-mul-2 in 1 <38356> out 1 <38357>   # join
add in 2 <38107 38357> out 1 <38358>     # join source bit 15
const-mul-2 in 1 <38358> out 1 <38359>   # join
add in 2 <38106 38359> out 1 <38360>     # join source bit 14
const-mul-2 in 1 <38360> out 1 <38361>   # join
add in 2 <38105 38361> out 1 <38362>     # join source bit 13
const-mul-2 in 1 <38362> out 1 <38363>   # join
add in 2 <38104 38363> out 1 <38364>     # join source bit 12
const-mul-2 in 1 <38364> out 1 <38365>   # join
add in 2 <38103 38365> out 1 <38366>     # join source bit 11
const-mul-2 in 1 <38366> out 1 <38367>   # join
add in 2 <38102 38367> out 1 <38368>     # join source bit 10
const-mul-2 in 1 <38368> out 1 <38369>   # join
add in 2 <38101 38369> out 1 <38370>     # join source bit 9
const-mul-2 in 1 <38370> out 1 <38371>   # join
add in 2 <38100 38371> out 1 <38372>     # join source bit 8
const-mul-2 in 1 <38372> out 1 <38373>   # join
add in 2 <38099 38373> out 1 <38374>     # join source bit 7
const-mul-2 in 1 <38374> out 1 <38375>   # join
add in 2 <38098 38375> out 1 <38376>     # join source bit 6
const-mul-2 in 1 <38376> out 1 <38377>   # join
add in 2 <38097 38377> out 1 <38378>     # join source bit 5
const-mul-2 in 1 <38378> out 1 <38379>   # join
add in 2 <38096 38379> out 1 <38380>     # join source bit 4
const-mul-2 in 1 <38380> out 1 <38381>   # join
add in 2 <38095 38381> out 1 <38382>     # join source bit 3
const-mul-2 in 1 <38382> out 1 <38383>   # join
add in 2 <38094 38383> out 1 <38384>     # join source bit 2
const-mul-2 in 1 <38384> out 1 <38385>   # join
add in 2 <38093 38385> out 1 <38386>     # join source bit 1
const-mul-2 in 1 <38386> out 1 <38387>   # join
add in 2 <38092 38387> out 1 <38388>     # join source bit 0
add in 2 <38388 38388> out 1 <38389>     # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <38389> out 1 <38390> # multiply-by-constant 4294967295
add in 2 <38091 38390> out 1 <38391>     # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <38089> out 1 <38392> # multiply-by-constant 4294967295
add in 2 <37867 38392> out 1 <38393>     # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <38393> outplitBus
mul in 2 <38425 38391> out 1 <38661>     # cond trueterm
const-mul-neg-1 in 1 <38425> out 1 <38662> # cond minuscond
add in 2 <100 38662> out 1 <38663>       # cond negcond
mul in 2 <38663 37867> out 1 <38664>     # cond falseterm
add in 2 <38661 38664> out 1 <38665>     # cond result
add in 2 <38665 104> out 1 <38666>       # ArithBusReq.AddReq(DFG.Conditional,DFG.Constant)
const-mul-ffffffff in 1 <13> out 1 <38667> # multiply-by-constant 4294967295
add in 2 <38666 38667> out 1 <38668>     # 'CmpLT DFG.Add - DFG.Input'
split in 1 <38668> outplitBus
mul in 2 <38700 103> out 1 <38907>       # cond trueterm
const-mul-neg-1 in 1 <38700> out 1 <38908> # cond minuscond
add in 2 <100 38908> out 1 <38909>       # cond negcond
mul in 2 <38909 102> out 1 <38910>       # cond falseterm
add in 2 <38907 38910> out 1 <38911>     # cond result
add in 2 <38665 3084> out 1 <38912>      # ArithBusReq.AddReq(DFG.Conditional,DFG.Negate)
const-mul-ffffffff in 1 <38912> out 1 <38913> # multiply-by-constant 4294967295
add in 2 <13 38913> out 1 <38914>        # 'CmpLT DFG.Input - DFG.Subtract'
split in 1 <38914> outplitBus
mul in 2 <38946 103> out 1 <39185>       # cond trueterm
const-mul-neg-1 in 1 <38946> out 1 <39186> # cond minuscond
add in 2 <100 39186> out 1 <39187>       # cond negcond
mul in 2 <39187 38911> out 1 <39188>     # cond falseterm
add in 2 <39185 39188> out 1 <39189>     # cond result
const-mul-ffffffff in 1 <12> out 1 <39190> # multiply-by-constant 4294967295
add in 2 <12 13> out 1 <39191>           # ArithBusReq.AddReq(DFG.Input,DFG.Input)
add in 2 <39191 39190> out 1 <39192>     # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <39192> out 1 <39193> # multiply-by-constant 4294967295
add in 2 <39191 39193> out 1 <39194>     # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <12> out 1 <39195> # multiply-by-constant 4294967295
add in 2 <13 39195> out 1 <39196>        # 'CmpLT DFG.Input - DFG.Input'
split in 1 <39196> out 65 <39197 39198 39199 39200 39201 39202 39203 39204 39205 39206 39207 39208 39209 39210 39211 39212 39213 39214 39215 39216 39217 39218 39219 39220 39221 39222 39223 39224 39225 39226 39227 39228 39229 39230 39231 39232 39233 39234 39235 39236 39237 39238 39239 39240 39241 39242 39243 39244 39245 39246 39247 39248 39249 39250 39251 39252 39253 39254 39255 39256 39257 39258 39259 39260 39261> # SplitBus
mul in 2 <39228 39194> out 1 <39262>     # cond trueterm
const-mul-neg-1 in 1 <39228> out 1 <39263> # cond minuscond
add in 2 <100 39263> out 1 <39264>       # cond negcond
mul in 2 <39264 13> out 1 <39265>        # cond falseterm
add in 2 <39262 39265> out 1 <39266>     # cond result
const-mul-ffffffff in 1 <39266> out 1 <39267> # multiply-by-constant 4294967295
add in 2 <39266 14> out 1 <39268>        # ArithBusReq.AddReq(DFG.Conditional,DFG.Input)
add in 2 <39268 39267> out 1 <39269>     # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <39269> out 1 <39270> # multiply-by-constant 4294967295
add in 2 <39268 39270> out 1 <39271>     # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <39266> out 1 <39272> # multiply-by-constant 4294967295
add in 2 <14 39272> out 1 <39273>        # 'CmpLT DFG.Input - DFG.Conditional'
split in 1 <39273> outplitBus
mul in 2 <39305 39271> out 1 <39405>     # cond trueterm
const-mul-neg-1 in 1 <39305> out 1 <39406> # cond minuscond
add in 2 <100 39406> out 1 <39407>       # cond negcond
mul in 2 <39407 14> out 1 <39408>        # cond falseterm
add in 2 <39405 39408> out 1 <39409>     # cond result
const-mul-ffffffff in 1 <39409> out 1 <39410> # multiply-by-constant 4294967295
add in 2 <39409 15> out 1 <39411>        # ArithBusReq.AddReq(DFG.Conditional,DFG.Input)
add in 2 <39411 39410> out 1 <39412>     # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <39409> out 1 <39413> # multiply-by-constant 4294967295
add in 2 <15 39413> out 1 <39414>        # 'CmpLT DFG.Input - DFG.Conditional'
split in 1 <39414> out 197 <39415 39416 39417 39418 39419 39420 39421 39422 39423 39424 39425 39426 39427 39428 39429 39430 39431 39432 39433 39434 39435 39436 39437 39438 39439 39440 39441 39442 39443 39444 39445 39446 39447 39448 39449 39450 39451 39452 39453 39454 39455 39456 39457 39458 39459 39460 39461 39462 39463 39464 39465 39466 39467 39468 39469 39470 39471 39472 39473 39474 39475 39476 39477 39478 39479 39480 39481 39482 39483 39484 39485 39486 39487 39488 39489 39490 39491 39492 39493 39494 39495 39496 39497 39498 39499 39500 39501 39502 39503 39504 39505 39506 39507 39508 39509 39510 39511 39512 39513 39514 39515 39516 39517 39518 39519 39520 39521 39522 39523 39524 39525 39526 39527 39528 39529 39530 39531 39532 39533 39534 39535 39536 39537 39538 39539 39540 39541 39542 39543 39544 39545 39546 39547 39548 39549 39550 39551 39552 39553 39554 39555 39556 39557 39558 39559 39560 39561 39562 39563 39564 39565 39566 39567 39568 39569 39570 39571 39572 39573 39574 39575 39576 39577 39578 39579 39580 39581 39582 39583 39584 39585 39586 39587 39588 39589 39590 39591 39592 39593 39594 39595 39596 39597 39598 39599 39600 39601 39602 39603 39604 39605 39606 39607 39608 39609 39610 39611> # SplitBus
mul in 2 <39446 39412> out 1 <39612>     # cond trueterm
const-mul-neg-1 in 1 <39446> out 1 <39613> # cond minuscond
add in 2 <100 39613> out 1 <39614>       # cond negcond
mul in 2 <39614 39409> out 1 <39615>     # cond falseterm
add in 2 <39612 39615> out 1 <39616>     # cond result
mul in 2 <39305 39269> out 1 <39617>     # cond trueterm
const-mul-neg-1 in 1 <39305> out 1 <39618> # cond minuscond
add in 2 <100 39618> out 1 <39619>       # cond negcond
mul in 2 <39619 39266> out 1 <39620>     # cond falseterm
add in 2 <39617 39620> out 1 <39621>     # cond result
mul in 2 <39228 39192> out 1 <39622>     # cond trueterm
const-mul-neg-1 in 1 <39228> out 1 <39623> # cond minuscond
add in 2 <100 39623> out 1 <39624>       # cond negcond
mul in 2 <39624 12> out 1 <39625>        # cond falseterm
add in 2 <39622 39625> out 1 <39626>     # cond result
const-mul-ffffffff in 1 <39626> out 1 <39627> # multiply-by-constant 4294967295
add in 2 <39626 39621> out 1 <39628>     # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
add in 2 <39628 39627> out 1 <39629>     # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <39629> out 1 <39630> # multiply-by-constant 4294967295
add in 2 <39628 39630> out 1 <39631>     # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <39626> out 1 <39632> # multiply-by-constant 4294967295
add in 2 <39621 39632> out 1 <39633>     # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <39633> outplitBus
mul in 2 <39665 39631> out 1 <39766>     # cond trueterm
const-mul-neg-1 in 1 <39665> out 1 <39767> # cond minuscond
add in 2 <100 39767> out 1 <39768>       # cond negcond
mul in 2 <39768 39621> out 1 <39769>     # cond falseterm
add in 2 <39766 39769> out 1 <39770>     # cond result
const-mul-ffffffff in 1 <39770> out 1 <39771> # multiply-by-constant 4294967295
add in 2 <39770 39616> out 1 <39772>     # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
add in 2 <39772 39771> out 1 <39773>     # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <39773> out 1 <39774> # multiply-by-constant 4294967295
add in 2 <39772 39774> out 1 <39775>     # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <39770> out 1 <39776> # multiply-by-constant 4294967295
add in 2 <39616 39776> out 1 <39777>     # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <39777> out 199 <39778 39779 39780 39781 39782 39783 39784 39785 39786 39787 39788 39789 39790 39791 39792 39793 39794 39795 39796 39797 39798 39799 39800 39801 39802 39803 39804 39805 39806 39807 39808 39809 39810 39811 39812 39813 39814 39815 39816 39817 39818 39819 39820 39821 39822 39823 39824 39825 39826 39827 39828 39829 39830 39831 39832 39833 39834 39835 39836 39837 39838 39839 39840 39841 39842 39843 39844 39845 39846 39847 39848 39849 39850 39851 39852 39853 39854 39855 39856 39857 39858 39859 39860 39861 39862 39863 39864 39865 39866 39867 39868 39869 39870 39871 39872 39873 39874 39875 39876 39877 39878 39879 39880 39881 39882 39883 39884 39885 39886 39887 39888 39889 39890 39891 39892 39893 39894 39895 39896 39897 39898 39899 39900 39901 39902 39903 39904 39905 39906 39907 39908 39909 39910 39911 39912 39913 39914 39915 39916 39917 39918 39919 39920 39921 39922 39923 39924 39925 39926 39927 39928 39929 39930 39931 39932 39933 39934 39935 39936 39937 39938 39939 39940 39941 39942 39943 39944 39945 39946 39947 39948 39949 39950 39951 39952 39953 39954 39955 39956 39957 39958 39959 39960 39961 39962 39963 39964 39965 39966 39967 39968 39969 39970 39971 39972 39973 39974 39975 39976> # SplitBus
mul in 2 <39809 39775> out 1 <39977>     # cond trueterm
const-mul-neg-1 in 1 <39809> out 1 <39978> # cond minuscond
add in 2 <100 39978> out 1 <39979>       # cond negcond
mul in 2 <39979 39616> out 1 <39980>     # cond falseterm
add in 2 <39977 39980> out 1 <39981>     # cond result
const-mul-ffffffff in 1 <39981> out 1 <39982> # multiply-by-constant 4294967295
const-mul-ffffffff in 1 <39412> out 1 <39983> # multiply-by-constant 4294967295
add in 2 <39411 39983> out 1 <39984>     # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
mul in 2 <39446 39984> out 1 <39985>     # cond trueterm
const-mul-neg-1 in 1 <39446> out 1 <39986> # cond minuscond
add in 2 <100 39986> out 1 <39987>       # cond negcond
mul in 2 <39987 15> out 1 <39988>        # cond falseterm
add in 2 <39985 39988> out 1 <39989>     # cond result
const-mul-ffffffff in 1 <39989> out 1 <39990> # multiply-by-constant 4294967295
add in 2 <39989 16> out 1 <39991>        # ArithBusReq.AddReq(DFG.Conditional,DFG.Input)
split in 1 <39991> outplitBus
const-mul-2 in 1 <40023> out 1 <40223>   # join source bit 31
add in 2 <40022 40223> out 1 <40224>     # join source bit 30
const-mul-2 in 1 <40224> out 1 <40225>   # join
add in 2 <40021 40225> out 1 <40226>     # join source bit 29
const-mul-2 in 1 <40226> out 1 <40227>   # join
add in 2 <40020 40227> out 1 <40228>     # join source bit 28
const-mul-2 in 1 <40228> out 1 <40229>   # join
add in 2 <40019 40229> out 1 <40230>     # join source bit 27
const-mul-2 in 1 <40230> out 1 <40231>   # join
add in 2 <40018 40231> out 1 <40232>     # join source bit 26
const-mul-2 in 1 <40232> out 1 <40233>   # join
add in 2 <40017 40233> out 1 <40234>     # join source bit 25
const-mul-2 in 1 <40234> out 1 <40235>   # join
add in 2 <40016 40235> out 1 <40236>     # join source bit 24
const-mul-2 in 1 <40236> out 1 <40237>   # join
add in 2 <40015 40237> out 1 <40238>     # join source bit 23
const-mul-2 in 1 <40238> out 1 <40239>   # join
add in 2 <40014 40239> out 1 <40240>     # join source bit 22
const-mul-2 in 1 <40240> out 1 <40241>   # join
add in 2 <40013 40241> out 1 <40242>     # join source bit 21
const-mul-2 in 1 <40242> out 1 <40243>   # join
add in 2 <40012 40243> out 1 <40244>     # join source bit 20
const-mul-2 in 1 <40244> out 1 <40245>   # join
add in 2 <40011 40245> out 1 <40246>     # join source bit 19
const-mul-2 in 1 <40246> out 1 <40247>   # join
add in 2 <40010 40247> out 1 <40248>     # join source bit 18
const-mul-2 in 1 <40248> out 1 <40249>   # join
add in 2 <40009 40249> out 1 <40250>     # join source bit 17
const-mul-2 in 1 <40250> out 1 <40251>   # join
add in 2 <40008 40251> out 1 <40252>     # join source bit 16
const-mul-2 in 1 <40252> out 1 <40253>   # join
add in 2 <40007 40253> out 1 <40254>     # join source bit 15
const-mul-2 in 1 <40254> out 1 <40255>   # join
add in 2 <40006 40255> out 1 <40256>     # join source bit 14
const-mul-2 in 1 <40256> out 1 <40257>   # join
add in 2 <40005 40257> out 1 <40258>     # join source bit 13
const-mul-2 in 1 <40258> out 1 <40259>   # join
add in 2 <40004 40259> out 1 <40260>     # join source bit 12
const-mul-2 in 1 <40260> out 1 <40261>   # join
add in 2 <40003 40261> out 1 <40262>     # join source bit 11
const-mul-2 in 1 <40262> out 1 <40263>   # join
add in 2 <40002 40263> out 1 <40264>     # join source bit 10
const-mul-2 in 1 <40264> out 1 <40265>   # join
add in 2 <40001 40265> out 1 <40266>     # join source bit 9
const-mul-2 in 1 <40266> out 1 <40267>   # join
add in 2 <40000 40267> out 1 <40268>     # join source bit 8
const-mul-2 in 1 <40268> out 1 <40269>   # join
add in 2 <39999 40269> out 1 <40270>     # join source bit 7
const-mul-2 in 1 <40270> out 1 <40271>   # join
add in 2 <39998 40271> out 1 <40272>     # join source bit 6
const-mul-2 in 1 <40272> out 1 <40273>   # join
add in 2 <39997 40273> out 1 <40274>     # join source bit 5
const-mul-2 in 1 <40274> out 1 <40275>   # join
add in 2 <39996 40275> out 1 <40276>     # join source bit 4
const-mul-2 in 1 <40276> out 1 <40277>   # join
add in 2 <39995 40277> out 1 <40278>     # join source bit 3
const-mul-2 in 1 <40278> out 1 <40279>   # join
add in 2 <39994 40279> out 1 <40280>     # join source bit 2
const-mul-2 in 1 <40280> out 1 <40281>   # join
add in 2 <39993 40281> out 1 <40282>     # join source bit 1
const-mul-2 in 1 <40282> out 1 <40283>   # join
add in 2 <39992 40283> out 1 <40284>     # join source bit 0
add in 2 <40284 40284> out 1 <40285>     # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <39989> out 1 <40286> # multiply-by-constant 4294967295
add in 2 <16 40286> out 1 <40287>        # 'CmpLT DFG.Input - DFG.Conditional'
split in 1 <40287> outplitBus
mul in 2 <40319 40285> out 1 <40551>     # cond trueterm
const-mul-neg-1 in 1 <40319> out 1 <40552> # cond minuscond
add in 2 <100 40552> out 1 <40553>       # cond negcond
mul in 2 <40553 39989> out 1 <40554>     # cond falseterm
add in 2 <40551 40554> out 1 <40555>     # cond result
add in 2 <39981 40555> out 1 <40556>     # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
split in 1 <40556> outplitBus
const-mul-2 in 1 <40588> out 1 <40790>   # join source bit 31
add in 2 <40587 40790> out 1 <40791>     # join source bit 30
const-mul-2 in 1 <40791> out 1 <40792>   # join
add in 2 <40586 40792> out 1 <40793>     # join source bit 29
const-mul-2 in 1 <40793> out 1 <40794>   # join
add in 2 <40585 40794> out 1 <40795>     # join source bit 28
const-mul-2 in 1 <40795> out 1 <40796>   # join
add in 2 <40584 40796> out 1 <40797>     # join source bit 27
const-mul-2 in 1 <40797> out 1 <40798>   # join
add in 2 <40583 40798> out 1 <40799>     # join source bit 26
const-mul-2 in 1 <40799> out 1 <40800>   # join
add in 2 <40582 40800> out 1 <40801>     # join source bit 25
const-mul-2 in 1 <40801> out 1 <40802>   # join
add in 2 <40581 40802> out 1 <40803>     # join source bit 24
const-mul-2 in 1 <40803> out 1 <40804>   # join
add in 2 <40580 40804> out 1 <40805>     # join source bit 23
const-mul-2 in 1 <40805> out 1 <40806>   # join
add in 2 <40579 40806> out 1 <40807>     # join source bit 22
const-mul-2 in 1 <40807> out 1 <40808>   # join
add in 2 <40578 40808> out 1 <40809>     # join source bit 21
const-mul-2 in 1 <40809> out 1 <40810>   # join
add in 2 <40577 40810> out 1 <40811>     # join source bit 20
const-mul-2 in 1 <40811> out 1 <40812>   # join
add in 2 <40576 40812> out 1 <40813>     # join source bit 19
const-mul-2 in 1 <40813> out 1 <40814>   # join
add in 2 <40575 40814> out 1 <40815>     # join source bit 18
const-mul-2 in 1 <40815> out 1 <40816>   # join
add in 2 <40574 40816> out 1 <40817>     # join source bit 17
const-mul-2 in 1 <40817> out 1 <40818>   # join
add in 2 <40573 40818> out 1 <40819>     # join source bit 16
const-mul-2 in 1 <40819> out 1 <40820>   # join
add in 2 <40572 40820> out 1 <40821>     # join source bit 15
const-mul-2 in 1 <40821> out 1 <40822>   # join
add in 2 <40571 40822> out 1 <40823>     # join source bit 14
const-mul-2 in 1 <40823> out 1 <40824>   # join
add in 2 <40570 40824> out 1 <40825>     # join source bit 13
const-mul-2 in 1 <40825> out 1 <40826>   # join
add in 2 <40569 40826> out 1 <40827>     # join source bit 12
const-mul-2 in 1 <40827> out 1 <40828>   # join
add in 2 <40568 40828> out 1 <40829>     # join source bit 11
const-mul-2 in 1 <40829> out 1 <40830>   # join
add in 2 <40567 40830> out 1 <40831>     # join source bit 10
const-mul-2 in 1 <40831> out 1 <40832>   # join
add in 2 <40566 40832> out 1 <40833>     # join source bit 9
const-mul-2 in 1 <40833> out 1 <40834>   # join
add in 2 <40565 40834> out 1 <40835>     # join source bit 8
const-mul-2 in 1 <40835> out 1 <40836>   # join
add in 2 <40564 40836> out 1 <40837>     # join source bit 7
const-mul-2 in 1 <40837> out 1 <40838>   # join
add in 2 <40563 40838> out 1 <40839>     # join source bit 6
const-mul-2 in 1 <40839> out 1 <40840>   # join
add in 2 <40562 40840> out 1 <40841>     # join source bit 5
const-mul-2 in 1 <40841> out 1 <40842>   # join
add in 2 <40561 40842> out 1 <40843>     # join source bit 4
const-mul-2 in 1 <40843> out 1 <40844>   # join
add in 2 <40560 40844> out 1 <40845>     # join source bit 3
const-mul-2 in 1 <40845> out 1 <40846>   # join
add in 2 <40559 40846> out 1 <40847>     # join source bit 2
const-mul-2 in 1 <40847> out 1 <40848>   # join
add in 2 <40558 40848> out 1 <40849>     # join source bit 1
const-mul-2 in 1 <40849> out 1 <40850>   # join
add in 2 <40557 40850> out 1 <40851>     # join source bit 0
add in 2 <40851 40851> out 1 <40852>     # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <39981> out 1 <40853> # multiply-by-constant 4294967295
add in 2 <40555 40853> out 1 <40854>     # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <40854> out 265 <40855 40856 40857 40858 40859 40860 40861 40862 40863 40864 40865 40866 40867 40868 40869 40870 40871 40872 40873 40874 40875 40876 40877 40878 40879 40880 40881 40882 40883 40884 40885 40886 40887 40888 40889 40890 40891 40892 40893 40894 40895 40896 40897 40898 40899 40900 40901 40902 40903 40904 40905 40906 40907 40908 40909 40910 40911 40912 40913 40914 40915 40916 40917 40918 40919 40920 40921 40922 40923 40924 40925 40926 40927 40928 40929 40930 40931 40932 40933 40934 40935 40936 40937 40938 40939 40940 40941 40942 40943 40944 40945 40946 40947 40948 40949 40950 40951 40952 40953 40954 40955 40956 40957 40958 40959 40960 40961 40962 40963 40964 40965 40966 40967 40968 40969 40970 40971 40972 40973 40974 40975 40976 40977 40978 40979 40980 40981 40982 40983 40984 40985 40986 40987 40988 40989 40990 40991 40992 40993 40994 40995 40996 40997 40998 40999 41000 41001 41002 41003 41004 41005 41006 41007 41008 41009 41010 41011 41012 41013 41014 41015 41016 41017 41018 41019 41020 41021 41022 41023 41024 41025 41026 41027 41028 41029 41030 41031 41032 41033 41034 41035 41036 41037 41038 41039 41040 41041 41042 41043 41044 41045 41046 41047 41048 41049 41050 41051 41052 41053 41054 41055 41056 41057 41058 41059 41060 41061 41062 41063 41064 41065 41066 41067 41068 41069 41070 41071 41072 41073 41074 41075 41076 41077 41078 41079 41080 41081 41082 41083 41084 41085 41086 41087 41088 41089 41090 41091 41092 41093 41094 41095 41096 41097 41098 41099 41100 41101 41102 41103 41104 41105 41106 41107 41108 41109 41110 41111 41112 41113 41114 41115 41116 41117 41118 41119> # SplitBus
mul in 2 <40886 40852> out 1 <41120>     # cond trueterm
const-mul-neg-1 in 1 <40886> out 1 <41121> # cond minuscond
add in 2 <100 41121> out 1 <41122>       # cond negcond
mul in 2 <41122 39981> out 1 <41123>     # cond falseterm
add in 2 <41120 41123> out 1 <41124>     # cond result
mul in 2 <39809 39773> out 1 <41125>     # cond trueterm
const-mul-neg-1 in 1 <39809> out 1 <41126> # cond minuscond
add in 2 <100 41126> out 1 <41127>       # cond negcond
mul in 2 <41127 39770> out 1 <41128>     # cond falseterm
add in 2 <41125 41128> out 1 <41129>     # cond result
mul in 2 <39665 39629> out 1 <41130>     # cond trueterm
const-mul-neg-1 in 1 <39665> out 1 <41131> # cond minuscond
add in 2 <100 41131> out 1 <41132>       # cond negcond
mul in 2 <41132 39626> out 1 <41133>     # cond falseterm
add in 2 <41130 41133> out 1 <41134>     # cond result
const-mul-ffffffff in 1 <41134> out 1 <41135> # multiply-by-constant 4294967295
add in 2 <41134 41129> out 1 <41136>     # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
add in 2 <41136 41135> out 1 <41137>     # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <41137> out 1 <41138> # multiply-by-constant 4294967295
add in 2 <41136 41138> out 1 <41139>     # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <41134> out 1 <41140> # multiply-by-constant 4294967295
add in 2 <41129 41140> out 1 <41141>     # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <41141> out 200 <41142 41143 41144 41145 41146 41147 41148 41149 41150 41151 41152 41153 41154 41155 41156 41157 41158 41159 41160 41161 41162 41163 41164 41165 41166 41167 41168 41169 41170 41171 41172 41173 41174 41175 41176 41177 41178 41179 41180 41181 41182 41183 41184 41185 41186 41187 41188 41189 41190 41191 41192 41193 41194 41195 41196 41197 41198 41199 41200 41201 41202 41203 41204 41205 41206 41207 41208 41209 41210 41211 41212 41213 41214 41215 41216 41217 41218 41219 41220 41221 41222 41223 41224 41225 41226 41227 41228 41229 41230 41231 41232 41233 41234 41235 41236 41237 41238 41239 41240 41241 41242 41243 41244 41245 41246 41247 41248 41249 41250 41251 41252 41253 41254 41255 41256 41257 41258 41259 41260 41261 41262 41263 41264 41265 41266 41267 41268 41269 41270 41271 41272 41273 41274 41275 41276 41277 41278 41279 41280 41281 41282 41283 41284 41285 41286 41287 41288 41289 41290 41291 41292 41293 41294 41295 41296 41297 41298 41299 41300 41301 41302 41303 41304 41305 41306 41307 41308 41309 41310 41311 41312 41313 41314 41315 41316 41317 41318 41319 41320 41321 41322 41323 41324 41325 41326 41327 41328 41329 41330 41331 41332 41333 41334 41335 41336 41337 41338 41339 41340 41341> # SplitBus
mul in 2 <41173 41139> out 1 <41342>     # cond trueterm
const-mul-neg-1 in 1 <41173> out 1 <41343> # cond minuscond
add in 2 <100 41343> out 1 <41344>       # cond negcond
mul in 2 <41344 41129> out 1 <41345>     # cond falseterm
add in 2 <41342 41345> out 1 <41346>     # cond result
const-mul-ffffffff in 1 <41346> out 1 <41347> # multiply-by-constant 4294967295
add in 2 <41346 41124> out 1 <41348>     # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
split in 1 <41348> outplitBus
const-mul-2 in 1 <41380> out 1 <41584>   # join source bit 31
add in 2 <41379 41584> out 1 <41585>     # join source bit 30
const-mul-2 in 1 <41585> out 1 <41586>   # join
add in 2 <41378 41586> out 1 <41587>     # join source bit 29
const-mul-2 in 1 <41587> out 1 <41588>   # join
add in 2 <41377 41588> out 1 <41589>     # join source bit 28
const-mul-2 in 1 <41589> out 1 <41590>   # join
add in 2 <41376 41590> out 1 <41591>     # join source bit 27
const-mul-2 in 1 <41591> out 1 <41592>   # join
add in 2 <41375 41592> out 1 <41593>     # join source bit 26
const-mul-2 in 1 <41593> out 1 <41594>   # join
add in 2 <41374 41594> out 1 <41595>     # join source bit 25
const-mul-2 in 1 <41595> out 1 <41596>   # join
add in 2 <41373 41596> out 1 <41597>     # join source bit 24
const-mul-2 in 1 <41597> out 1 <41598>   # join
add in 2 <41372 41598> out 1 <41599>     # join source bit 23
const-mul-2 in 1 <41599> out 1 <41600>   # join
add in 2 <41371 41600> out 1 <41601>     # join source bit 22
const-mul-2 in 1 <41601> out 1 <41602>   # join
add in 2 <41370 41602> out 1 <41603>     # join source bit 21
const-mul-2 in 1 <41603> out 1 <41604>   # join
add in 2 <41369 41604> out 1 <41605>     # join source bit 20
const-mul-2 in 1 <41605> out 1 <41606>   # join
add in 2 <41368 41606> out 1 <41607>     # join source bit 19
const-mul-2 in 1 <41607> out 1 <41608>   # join
add in 2 <41367 41608> out 1 <41609>     # join source bit 18
const-mul-2 in 1 <41609> out 1 <41610>   # join
add in 2 <41366 41610> out 1 <41611>     # join source bit 17
const-mul-2 in 1 <41611> out 1 <41612>   # join
add in 2 <41365 41612> out 1 <41613>     # join source bit 16
const-mul-2 in 1 <41613> out 1 <41614>   # join
add in 2 <41364 41614> out 1 <41615>     # join source bit 15
const-mul-2 in 1 <41615> out 1 <41616>   # join
add in 2 <41363 41616> out 1 <41617>     # join source bit 14
const-mul-2 in 1 <41617> out 1 <41618>   # join
add in 2 <41362 41618> out 1 <41619>     # join source bit 13
const-mul-2 in 1 <41619> out 1 <41620>   # join
add in 2 <41361 41620> out 1 <41621>     # join source bit 12
const-mul-2 in 1 <41621> out 1 <41622>   # join
add in 2 <41360 41622> out 1 <41623>     # join source bit 11
const-mul-2 in 1 <41623> out 1 <41624>   # join
add in 2 <41359 41624> out 1 <41625>     # join source bit 10
const-mul-2 in 1 <41625> out 1 <41626>   # join
add in 2 <41358 41626> out 1 <41627>     # join source bit 9
const-mul-2 in 1 <41627> out 1 <41628>   # join
add in 2 <41357 41628> out 1 <41629>     # join source bit 8
const-mul-2 in 1 <41629> out 1 <41630>   # join
add in 2 <41356 41630> out 1 <41631>     # join source bit 7
const-mul-2 in 1 <41631> out 1 <41632>   # join
add in 2 <41355 41632> out 1 <41633>     # join source bit 6
const-mul-2 in 1 <41633> out 1 <41634>   # join
add in 2 <41354 41634> out 1 <41635>     # join source bit 5
const-mul-2 in 1 <41635> out 1 <41636>   # join
add in 2 <41353 41636> out 1 <41637>     # join source bit 4
const-mul-2 in 1 <41637> out 1 <41638>   # join
add in 2 <41352 41638> out 1 <41639>     # join source bit 3
const-mul-2 in 1 <41639> out 1 <41640>   # join
add in 2 <41351 41640> out 1 <41641>     # join source bit 2
const-mul-2 in 1 <41641> out 1 <41642>   # join
add in 2 <41350 41642> out 1 <41643>     # join source bit 1
const-mul-2 in 1 <41643> out 1 <41644>   # join
add in 2 <41349 41644> out 1 <41645>     # join source bit 0
add in 2 <41645 41645> out 1 <41646>     # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <41646> out 1 <41647> # multiply-by-constant 4294967295
add in 2 <41348 41647> out 1 <41648>     # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <41346> out 1 <41649> # multiply-by-constant 4294967295
add in 2 <41124 41649> out 1 <41650>     # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <41650> outplitBus
mul in 2 <41682 41648> out 1 <41918>     # cond trueterm
const-mul-neg-1 in 1 <41682> out 1 <41919> # cond minuscond
add in 2 <100 41919> out 1 <41920>       # cond negcond
mul in 2 <41920 41124> out 1 <41921>     # cond falseterm
add in 2 <41918 41921> out 1 <41922>     # cond result
add in 2 <41922 104> out 1 <41923>       # ArithBusReq.AddReq(DFG.Conditional,DFG.Constant)
const-mul-ffffffff in 1 <14> out 1 <41924> # multiply-by-constant 4294967295
add in 2 <41923 41924> out 1 <41925>     # 'CmpLT DFG.Add - DFG.Input'
split in 1 <41925> out 238 <41926 41927 41928 41929 41930 41931 41932 41933 41934 41935 41936 41937 41938 41939 41940 41941 41942 41943 41944 41945 41946 41947 41948 41949 41950 41951 41952 41953 41954 41955 41956 41957 41958 41959 41960 41961 41962 41963 41964 41965 41966 41967 41968 41969 41970 41971 41972 41973 41974 41975 41976 41977 41978 41979 41980 41981 41982 41983 41984 41985 41986 41987 41988 41989 41990 41991 41992 41993 41994 41995 41996 41997 41998 41999 42000 42001 42002 42003 42004 42005 42006 42007 42008 42009 42010 42011 42012 42013 42014 42015 42016 42017 42018 42019 42020 42021 42022 42023 42024 42025 42026 42027 42028 42029 42030 42031 42032 42033 42034 42035 42036 42037 42038 42039 42040 42041 42042 42043 42044 42045 42046 42047 42048 42049 42050 42051 42052 42053 42054 42055 42056 42057 42058 42059 42060 42061 42062 42063 42064 42065 42066 42067 42068 42069 42070 42071 42072 42073 42074 42075 42076 42077 42078 42079 42080 42081 42082 42083 42084 42085 42086 42087 42088 42089 42090 42091 42092 42093 42094 42095 42096 42097 42098 42099 42100 42101 42102 42103 42104 42105 42106 42107 42108 42109 42110 42111 42112 42113 42114 42115 42116 42117 42118 42119 42120 42121 42122 42123 42124 42125 42126 42127 42128 42129 42130 42131 42132 42133 42134 42135 42136 42137 42138 42139 42140 42141 42142 42143 42144 42145 42146 42147 42148 42149 42150 42151 42152 42153 42154 42155 42156 42157 42158 42159 42160 42161 42162 42163> # SplitBus
mul in 2 <41957 103> out 1 <42164>       # cond trueterm
const-mul-neg-1 in 1 <41957> out 1 <42165> # cond minuscond
add in 2 <100 42165> out 1 <42166>       # cond negcond
mul in 2 <42166 102> out 1 <42167>       # cond falseterm
add in 2 <42164 42167> out 1 <42168>     # cond result
add in 2 <41922 3084> out 1 <42169>      # ArithBusReq.AddReq(DFG.Conditional,DFG.Negate)
const-mul-ffffffff in 1 <42169> out 1 <42170> # multiply-by-constant 4294967295
add in 2 <14 42170> out 1 <42171>        # 'CmpLT DFG.Input - DFG.Subtract'
split in 1 <42171> outplitBus
mul in 2 <42203 103> out 1 <42442>       # cond trueterm
const-mul-neg-1 in 1 <42203> out 1 <42443> # cond minuscond
add in 2 <100 42443> out 1 <42444>       # cond negcond
mul in 2 <42444 42168> out 1 <42445>     # cond falseterm
add in 2 <42442 42445> out 1 <42446>     # cond result
const-mul-ffffffff in 1 <13> out 1 <42447> # multiply-by-constant 4294967295
add in 2 <13 14> out 1 <42448>           # ArithBusReq.AddReq(DFG.Input,DFG.Input)
add in 2 <42448 42447> out 1 <42449>     # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <42449> out 1 <42450> # multiply-by-constant 4294967295
add in 2 <42448 42450> out 1 <42451>     # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <13> out 1 <42452> # multiply-by-constant 4294967295
add in 2 <14 42452> out 1 <42453>        # 'CmpLT DFG.Input - DFG.Input'
split in 1 <42453> out 65 <42454 42455 42456 42457 42458 42459 42460 42461 42462 42463 42464 42465 42466 42467 42468 42469 42470 42471 42472 42473 42474 42475 42476 42477 42478 42479 42480 42481 42482 42483 42484 42485 42486 42487 42488 42489 42490 42491 42492 42493 42494 42495 42496 42497 42498 42499 42500 42501 42502 42503 42504 42505 42506 42507 42508 42509 42510 42511 42512 42513 42514 42515 42516 42517 42518> # SplitBus
mul in 2 <42485 42451> out 1 <42519>     # cond trueterm
const-mul-neg-1 in 1 <42485> out 1 <42520> # cond minuscond
add in 2 <100 42520> out 1 <42521>       # cond negcond
mul in 2 <42521 14> out 1 <42522>        # cond falseterm
add in 2 <42519 42522> out 1 <42523>     # cond result
const-mul-ffffffff in 1 <42523> out 1 <42524> # multiply-by-constant 4294967295
add in 2 <42523 15> out 1 <42525>        # ArithBusReq.AddReq(DFG.Conditional,DFG.Input)
add in 2 <42525 42524> out 1 <42526>     # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <42526> out 1 <42527> # multiply-by-constant 4294967295
add in 2 <42525 42527> out 1 <42528>     # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <42523> out 1 <42529> # multiply-by-constant 4294967295
add in 2 <15 42529> out 1 <42530>        # 'CmpLT DFG.Input - DFG.Conditional'
split in 1 <42530> outplitBus
mul in 2 <42562 42528> out 1 <42662>     # cond trueterm
const-mul-neg-1 in 1 <42562> out 1 <42663> # cond minuscond
add in 2 <100 42663> out 1 <42664>       # cond negcond
mul in 2 <42664 15> out 1 <42665>        # cond falseterm
add in 2 <42662 42665> out 1 <42666>     # cond result
const-mul-ffffffff in 1 <42666> out 1 <42667> # multiply-by-constant 4294967295
add in 2 <42666 16> out 1 <42668>        # ArithBusReq.AddReq(DFG.Conditional,DFG.Input)
add in 2 <42668 42667> out 1 <42669>     # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <42666> out 1 <42670> # multiply-by-constant 4294967295
add in 2 <16 42670> out 1 <42671>        # 'CmpLT DFG.Input - DFG.Conditional'
split in 1 <42671> out 197 <42672 42673 42674 42675 42676 42677 42678 42679 42680 42681 42682 42683 42684 42685 42686 42687 42688 42689 42690 42691 42692 42693 42694 42695 42696 42697 42698 42699 42700 42701 42702 42703 42704 42705 42706 42707 42708 42709 42710 42711 42712 42713 42714 42715 42716 42717 42718 42719 42720 42721 42722 42723 42724 42725 42726 42727 42728 42729 42730 42731 42732 42733 42734 42735 42736 42737 42738 42739 42740 42741 42742 42743 42744 42745 42746 42747 42748 42749 42750 42751 42752 42753 42754 42755 42756 42757 42758 42759 42760 42761 42762 42763 42764 42765 42766 42767 42768 42769 42770 42771 42772 42773 42774 42775 42776 42777 42778 42779 42780 42781 42782 42783 42784 42785 42786 42787 42788 42789 42790 42791 42792 42793 42794 42795 42796 42797 42798 42799 42800 42801 42802 42803 42804 42805 42806 42807 42808 42809 42810 42811 42812 42813 42814 42815 42816 42817 42818 42819 42820 42821 42822 42823 42824 42825 42826 42827 42828 42829 42830 42831 42832 42833 42834 42835 42836 42837 42838 42839 42840 42841 42842 42843 42844 42845 42846 42847 42848 42849 42850 42851 42852 42853 42854 42855 42856 42857 42858 42859 42860 42861 42862 42863 42864 42865 42866 42867 42868> # SplitBus
mul in 2 <42703 42669> out 1 <42869>     # cond trueterm
const-mul-neg-1 in 1 <42703> out 1 <42870> # cond minuscond
add in 2 <100 42870> out 1 <42871>       # cond negcond
mul in 2 <42871 42666> out 1 <42872>     # cond falseterm
add in 2 <42869 42872> out 1 <42873>     # cond result
mul in 2 <42562 42526> out 1 <42874>     # cond trueterm
const-mul-neg-1 in 1 <42562> out 1 <42875> # cond minuscond
add in 2 <100 42875> out 1 <42876>       # cond negcond
mul in 2 <42876 42523> out 1 <42877>     # cond falseterm
add in 2 <42874 42877> out 1 <42878>     # cond result
mul in 2 <42485 42449> out 1 <42879>     # cond trueterm
const-mul-neg-1 in 1 <42485> out 1 <42880> # cond minuscond
add in 2 <100 42880> out 1 <42881>       # cond negcond
mul in 2 <42881 13> out 1 <42882>        # cond falseterm
add in 2 <42879 42882> out 1 <42883>     # cond result
const-mul-ffffffff in 1 <42883> out 1 <42884> # multiply-by-constant 4294967295
add in 2 <42883 42878> out 1 <42885>     # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
add in 2 <42885 42884> out 1 <42886>     # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <42886> out 1 <42887> # multiply-by-constant 4294967295
add in 2 <42885 42887> out 1 <42888>     # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <42883> out 1 <42889> # multiply-by-constant 4294967295
add in 2 <42878 42889> out 1 <42890>     # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <42890> outplitBus
mul in 2 <42922 42888> out 1 <43023>     # cond trueterm
const-mul-neg-1 in 1 <42922> out 1 <43024> # cond minuscond
add in 2 <100 43024> out 1 <43025>       # cond negcond
mul in 2 <43025 42878> out 1 <43026>     # cond falseterm
add in 2 <43023 43026> out 1 <43027>     # cond result
const-mul-ffffffff in 1 <43027> out 1 <43028> # multiply-by-constant 4294967295
add in 2 <43027 42873> out 1 <43029>     # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
add in 2 <43029 43028> out 1 <43030>     # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <43030> out 1 <43031> # multiply-by-constant 4294967295
add in 2 <43029 43031> out 1 <43032>     # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <43027> out 1 <43033> # multiply-by-constant 4294967295
add in 2 <42873 43033> out 1 <43034>     # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <43034> out 199 <43035 43036 43037 43038 43039 43040 43041 43042 43043 43044 43045 43046 43047 43048 43049 43050 43051 43052 43053 43054 43055 43056 43057 43058 43059 43060 43061 43062 43063 43064 43065 43066 43067 43068 43069 43070 43071 43072 43073 43074 43075 43076 43077 43078 43079 43080 43081 43082 43083 43084 43085 43086 43087 43088 43089 43090 43091 43092 43093 43094 43095 43096 43097 43098 43099 43100 43101 43102 43103 43104 43105 43106 43107 43108 43109 43110 43111 43112 43113 43114 43115 43116 43117 43118 43119 43120 43121 43122 43123 43124 43125 43126 43127 43128 43129 43130 43131 43132 43133 43134 43135 43136 43137 43138 43139 43140 43141 43142 43143 43144 43145 43146 43147 43148 43149 43150 43151 43152 43153 43154 43155 43156 43157 43158 43159 43160 43161 43162 43163 43164 43165 43166 43167 43168 43169 43170 43171 43172 43173 43174 43175 43176 43177 43178 43179 43180 43181 43182 43183 43184 43185 43186 43187 43188 43189 43190 43191 43192 43193 43194 43195 43196 43197 43198 43199 43200 43201 43202 43203 43204 43205 43206 43207 43208 43209 43210 43211 43212 43213 43214 43215 43216 43217 43218 43219 43220 43221 43222 43223 43224 43225 43226 43227 43228 43229 43230 43231 43232 43233> # SplitBus
mul in 2 <43066 43032> out 1 <43234>     # cond trueterm
const-mul-neg-1 in 1 <43066> out 1 <43235> # cond minuscond
add in 2 <100 43235> out 1 <43236>       # cond negcond
mul in 2 <43236 42873> out 1 <43237>     # cond falseterm
add in 2 <43234 43237> out 1 <43238>     # cond result
const-mul-ffffffff in 1 <43238> out 1 <43239> # multiply-by-constant 4294967295
const-mul-ffffffff in 1 <42669> out 1 <43240> # multiply-by-constant 4294967295
add in 2 <42668 43240> out 1 <43241>     # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
mul in 2 <42703 43241> out 1 <43242>     # cond trueterm
const-mul-neg-1 in 1 <42703> out 1 <43243> # cond minuscond
add in 2 <100 43243> out 1 <43244>       # cond negcond
mul in 2 <43244 16> out 1 <43245>        # cond falseterm
add in 2 <43242 43245> out 1 <43246>     # cond result
const-mul-ffffffff in 1 <43246> out 1 <43247> # multiply-by-constant 4294967295
add in 2 <43246 17> out 1 <43248>        # ArithBusReq.AddReq(DFG.Conditional,DFG.Input)
split in 1 <43248> outplitBus
const-mul-2 in 1 <43280> out 1 <43480>   # join source bit 31
add in 2 <43279 43480> out 1 <43481>     # join source bit 30
const-mul-2 in 1 <43481> out 1 <43482>   # join
add in 2 <43278 43482> out 1 <43483>     # join source bit 29
const-mul-2 in 1 <43483> out 1 <43484>   # join
add in 2 <43277 43484> out 1 <43485>     # join source bit 28
const-mul-2 in 1 <43485> out 1 <43486>   # join
add in 2 <43276 43486> out 1 <43487>     # join source bit 27
const-mul-2 in 1 <43487> out 1 <43488>   # join
add in 2 <43275 43488> out 1 <43489>     # join source bit 26
const-mul-2 in 1 <43489> out 1 <43490>   # join
add in 2 <43274 43490> out 1 <43491>     # join source bit 25
const-mul-2 in 1 <43491> out 1 <43492>   # join
add in 2 <43273 43492> out 1 <43493>     # join source bit 24
const-mul-2 in 1 <43493> out 1 <43494>   # join
add in 2 <43272 43494> out 1 <43495>     # join source bit 23
const-mul-2 in 1 <43495> out 1 <43496>   # join
add in 2 <43271 43496> out 1 <43497>     # join source bit 22
const-mul-2 in 1 <43497> out 1 <43498>   # join
add in 2 <43270 43498> out 1 <43499>     # join source bit 21
const-mul-2 in 1 <43499> out 1 <43500>   # join
add in 2 <43269 43500> out 1 <43501>     # join source bit 20
const-mul-2 in 1 <43501> out 1 <43502>   # join
add in 2 <43268 43502> out 1 <43503>     # join source bit 19
const-mul-2 in 1 <43503> out 1 <43504>   # join
add in 2 <43267 43504> out 1 <43505>     # join source bit 18
const-mul-2 in 1 <43505> out 1 <43506>   # join
add in 2 <43266 43506> out 1 <43507>     # join source bit 17
const-mul-2 in 1 <43507> out 1 <43508>   # join
add in 2 <43265 43508> out 1 <43509>     # join source bit 16
const-mul-2 in 1 <43509> out 1 <43510>   # join
add in 2 <43264 43510> out 1 <43511>     # join source bit 15
const-mul-2 in 1 <43511> out 1 <43512>   # join
add in 2 <43263 43512> out 1 <43513>     # join source bit 14
const-mul-2 in 1 <43513> out 1 <43514>   # join
add in 2 <43262 43514> out 1 <43515>     # join source bit 13
const-mul-2 in 1 <43515> out 1 <43516>   # join
add in 2 <43261 43516> out 1 <43517>     # join source bit 12
const-mul-2 in 1 <43517> out 1 <43518>   # join
add in 2 <43260 43518> out 1 <43519>     # join source bit 11
const-mul-2 in 1 <43519> out 1 <43520>   # join
add in 2 <43259 43520> out 1 <43521>     # join source bit 10
const-mul-2 in 1 <43521> out 1 <43522>   # join
add in 2 <43258 43522> out 1 <43523>     # join source bit 9
const-mul-2 in 1 <43523> out 1 <43524>   # join
add in 2 <43257 43524> out 1 <43525>     # join source bit 8
const-mul-2 in 1 <43525> out 1 <43526>   # join
add in 2 <43256 43526> out 1 <43527>     # join source bit 7
const-mul-2 in 1 <43527> out 1 <43528>   # join
add in 2 <43255 43528> out 1 <43529>     # join source bit 6
const-mul-2 in 1 <43529> out 1 <43530>   # join
add in 2 <43254 43530> out 1 <43531>     # join source bit 5
const-mul-2 in 1 <43531> out 1 <43532>   # join
add in 2 <43253 43532> out 1 <43533>     # join source bit 4
const-mul-2 in 1 <43533> out 1 <43534>   # join
add in 2 <43252 43534> out 1 <43535>     # join source bit 3
const-mul-2 in 1 <43535> out 1 <43536>   # join
add in 2 <43251 43536> out 1 <43537>     # join source bit 2
const-mul-2 in 1 <43537> out 1 <43538>   # join
add in 2 <43250 43538> out 1 <43539>     # join source bit 1
const-mul-2 in 1 <43539> out 1 <43540>   # join
add in 2 <43249 43540> out 1 <43541>     # join source bit 0
add in 2 <43541 43541> out 1 <43542>     # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <43246> out 1 <43543> # multiply-by-constant 4294967295
add in 2 <17 43543> out 1 <43544>        # 'CmpLT DFG.Input - DFG.Conditional'
split in 1 <43544> outplitBus
mul in 2 <43576 43542> out 1 <43808>     # cond trueterm
const-mul-neg-1 in 1 <43576> out 1 <43809> # cond minuscond
add in 2 <100 43809> out 1 <43810>       # cond negcond
mul in 2 <43810 43246> out 1 <43811>     # cond falseterm
add in 2 <43808 43811> out 1 <43812>     # cond result
add in 2 <43238 43812> out 1 <43813>     # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
split in 1 <43813> out 233 <43814 43815 43816 43817 43818 43819 43820 43821 43822 43823 43824 43825 43826 43827 43828 43829 43830 43831 43832 43833 43834 43835 43836 43837 43838 43839 43840 43841 43842 43843 43844 43845 43846 43847 43848 43849 43850 43851 43852 43853 43854 43855 43856 43857 43858 43859 43860 43861 43862 43863 43864 43865 43866 43867 43868 43869 43870 43871 43872 43873 43874 43875 43876 43877 43878 43879 43880 43881 43882 43883 43884 43885 43886 43887 43888 43889 43890 43891 43892 43893 43894 43895 43896 43897 43898 43899 43900 43901 43902 43903 43904 43905 43906 43907 43908 43909 43910 43911 43912 43913 43914 43915 43916 43917 43918 43919 43920 43921 43922 43923 43924 43925 43926 43927 43928 43929 43930 43931 43932 43933 43934 43935 43936 43937 43938 43939 43940 43941 43942 43943 43944 43945 43946 43947 43948 43949 43950 43951 43952 43953 43954 43955 43956 43957 43958 43959 43960 43961 43962 43963 43964 43965 43966 43967 43968 43969 43970 43971 43972 43973 43974 43975 43976 43977 43978 43979 43980 43981 43982 43983 43984 43985 43986 43987 43988 43989 43990 43991 43992 43993 43994 43995 43996 43997 43998 43999 44000 44001 44002 44003 44004 44005 44006 44007 44008 44009 44010 44011 44012 44013 44014 44015 44016 44017 44018 44019 44020 44021 44022 44023 44024 44025 44026 44027 44028 44029 44030 44031 44032 44033 44034 44035 44036 44037 44038 44039 44040 44041 44042 44043 44044 44045 44046> # SplitBus
const-mul-2 in 1 <43845> out 1 <44047>   # join source bit 31
add in 2 <43844 44047> out 1 <44048>     # join source bit 30
const-mul-2 in 1 <44048> out 1 <44049>   # join
add in 2 <43843 44049> out 1 <44050>     # join source bit 29
const-mul-2 in 1 <44050> out 1 <44051>   # join
add in 2 <43842 44051> out 1 <44052>     # join source bit 28
const-mul-2 in 1 <44052> out 1 <44053>   # join
add in 2 <43841 44053> out 1 <44054>     # join source bit 27
const-mul-2 in 1 <44054> out 1 <44055>   # join
add in 2 <43840 44055> out 1 <44056>     # join source bit 26
const-mul-2 in 1 <44056> out 1 <44057>   # join
add in 2 <43839 44057> out 1 <44058>     # join source bit 25
const-mul-2 in 1 <44058> out 1 <44059>   # join
add in 2 <43838 44059> out 1 <44060>     # join source bit 24
const-mul-2 in 1 <44060> out 1 <44061>   # join
add in 2 <43837 44061> out 1 <44062>     # join source bit 23
const-mul-2 in 1 <44062> out 1 <44063>   # join
add in 2 <43836 44063> out 1 <44064>     # join source bit 22
const-mul-2 in 1 <44064> out 1 <44065>   # join
add in 2 <43835 44065> out 1 <44066>     # join source bit 21
const-mul-2 in 1 <44066> out 1 <44067>   # join
add in 2 <43834 44067> out 1 <44068>     # join source bit 20
const-mul-2 in 1 <44068> out 1 <44069>   # join
add in 2 <43833 44069> out 1 <44070>     # join source bit 19
const-mul-2 in 1 <44070> out 1 <44071>   # join
add in 2 <43832 44071> out 1 <44072>     # join source bit 18
const-mul-2 in 1 <44072> out 1 <44073>   # join
add in 2 <43831 44073> out 1 <44074>     # join source bit 17
const-mul-2 in 1 <44074> out 1 <44075>   # join
add in 2 <43830 44075> out 1 <44076>     # join source bit 16
const-mul-2 in 1 <44076> out 1 <44077>   # join
add in 2 <43829 44077> out 1 <44078>     # join source bit 15
const-mul-2 in 1 <44078> out 1 <44079>   # join
add in 2 <43828 44079> out 1 <44080>     # join source bit 14
const-mul-2 in 1 <44080> out 1 <44081>   # join
add in 2 <43827 44081> out 1 <44082>     # join source bit 13
const-mul-2 in 1 <44082> out 1 <44083>   # join
add in 2 <43826 44083> out 1 <44084>     # join source bit 12
const-mul-2 in 1 <44084> out 1 <44085>   # join
add in 2 <43825 44085> out 1 <44086>     # join source bit 11
const-mul-2 in 1 <44086> out 1 <44087>   # join
add in 2 <43824 44087> out 1 <44088>     # join source bit 10
const-mul-2 in 1 <44088> out 1 <44089>   # join
add in 2 <43823 44089> out 1 <44090>     # join source bit 9
const-mul-2 in 1 <44090> out 1 <44091>   # join
add in 2 <43822 44091> out 1 <44092>     # join source bit 8
const-mul-2 in 1 <44092> out 1 <44093>   # join
add in 2 <43821 44093> out 1 <44094>     # join source bit 7
const-mul-2 in 1 <44094> out 1 <44095>   # join
add in 2 <43820 44095> out 1 <44096>     # join source bit 6
const-mul-2 in 1 <44096> out 1 <44097>   # join
add in 2 <43819 44097> out 1 <44098>     # join source bit 5
const-mul-2 in 1 <44098> out 1 <44099>   # join
add in 2 <43818 44099> out 1 <44100>     # join source bit 4
const-mul-2 in 1 <44100> out 1 <44101>   # join
add in 2 <43817 44101> out 1 <44102>     # join source bit 3
const-mul-2 in 1 <44102> out 1 <44103>   # join
add in 2 <43816 44103> out 1 <44104>     # join source bit 2
const-mul-2 in 1 <44104> out 1 <44105>   # join
add in 2 <43815 44105> out 1 <44106>     # join source bit 1
const-mul-2 in 1 <44106> out 1 <44107>   # join
add in 2 <43814 44107> out 1 <44108>     # join source bit 0
add in 2 <44108 44108> out 1 <44109>     # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <43238> out 1 <44110> # multiply-by-constant 4294967295
add in 2 <43812 44110> out 1 <44111>     # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <44111> out 265 <44112 44113 44114 44115 44116 44117 44118 44119 44120 44121 44122 44123 44124 44125 44126 44127 44128 44129 44130 44131 44132 44133 44134 44135 44136 44137 44138 44139 44140 44141 44142 44143 44144 44145 44146 44147 44148 44149 44150 44151 44152 44153 44154 44155 44156 44157 44158 44159 44160 44161 44162 44163 44164 44165 44166 44167 44168 44169 44170 44171 44172 44173 44174 44175 44176 44177 44178 44179 44180 44181 44182 44183 44184 44185 44186 44187 44188 44189 44190 44191 44192 44193 44194 44195 44196 44197 44198 44199 44200 44201 44202 44203 44204 44205 44206 44207 44208 44209 44210 44211 44212 44213 44214 44215 44216 44217 44218 44219 44220 44221 44222 44223 44224 44225 44226 44227 44228 44229 44230 44231 44232 44233 44234 44235 44236 44237 44238 44239 44240 44241 44242 44243 44244 44245 44246 44247 44248 44249 44250 44251 44252 44253 44254 44255 44256 44257 44258 44259 44260 44261 44262 44263 44264 44265 44266 44267 44268 44269 44270 44271 44272 44273 44274 44275 44276 44277 44278 44279 44280 44281 44282 44283 44284 44285 44286 44287 44288 44289 44290 44291 44292 44293 44294 44295 44296 44297 44298 44299 44300 44301 44302 44303 44304 44305 44306 44307 44308 44309 44310 44311 44312 44313 44314 44315 44316 44317 44318 44319 44320 44321 44322 44323 44324 44325 44326 44327 44328 44329 44330 44331 44332 44333 44334 44335 44336 44337 44338 44339 44340 44341 44342 44343 44344 44345 44346 44347 44348 44349 44350 44351 44352 44353 44354 44355 44356 44357 44358 44359 44360 44361 44362 44363 44364 44365 44366 44367 44368 44369 44370 44371 44372 44373 44374 44375 44376> # SplitBus
mul in 2 <44143 44109> out 1 <44377>     # cond trueterm
const-mul-neg-1 in 1 <44143> out 1 <44378> # cond minuscond
add in 2 <100 44378> out 1 <44379>       # cond negcond
mul in 2 <44379 43238> out 1 <44380>     # cond falseterm
add in 2 <44377 44380> out 1 <44381>     # cond result
mul in 2 <43066 43030> out 1 <44382>     # cond trueterm
const-mul-neg-1 in 1 <43066> out 1 <44383> # cond minuscond
add in 2 <100 44383> out 1 <44384>       # cond negcond
mul in 2 <44384 43027> out 1 <44385>     # cond falseterm
add in 2 <44382 44385> out 1 <44386>     # cond result
mul in 2 <42922 42886> out 1 <44387>     # cond trueterm
const-mul-neg-1 in 1 <42922> out 1 <44388> # cond minuscond
add in 2 <100 44388> out 1 <44389>       # cond negcond
mul in 2 <44389 42883> out 1 <44390>     # cond falseterm
add in 2 <44387 44390> out 1 <44391>     # cond result
const-mul-ffffffff in 1 <44391> out 1 <44392> # multiply-by-constant 4294967295
add in 2 <44391 44386> out 1 <44393>     # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
add in 2 <44393 44392> out 1 <44394>     # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <44394> out 1 <44395> # multiply-by-constant 4294967295
add in 2 <44393 44395> out 1 <44396>     # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <44391> out 1 <44397> # multiply-by-constant 4294967295
add in 2 <44386 44397> out 1 <44398>     # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <44398> out 200 <44399 44400 44401 44402 44403 44404 44405 44406 44407 44408 44409 44410 44411 44412 44413 44414 44415 44416 44417 44418 44419 44420 44421 44422 44423 44424 44425 44426 44427 44428 44429 44430 44431 44432 44433 44434 44435 44436 44437 44438 44439 44440 44441 44442 44443 44444 44445 44446 44447 44448 44449 44450 44451 44452 44453 44454 44455 44456 44457 44458 44459 44460 44461 44462 44463 44464 44465 44466 44467 44468 44469 44470 44471 44472 44473 44474 44475 44476 44477 44478 44479 44480 44481 44482 44483 44484 44485 44486 44487 44488 44489 44490 44491 44492 44493 44494 44495 44496 44497 44498 44499 44500 44501 44502 44503 44504 44505 44506 44507 44508 44509 44510 44511 44512 44513 44514 44515 44516 44517 44518 44519 44520 44521 44522 44523 44524 44525 44526 44527 44528 44529 44530 44531 44532 44533 44534 44535 44536 44537 44538 44539 44540 44541 44542 44543 44544 44545 44546 44547 44548 44549 44550 44551 44552 44553 44554 44555 44556 44557 44558 44559 44560 44561 44562 44563 44564 44565 44566 44567 44568 44569 44570 44571 44572 44573 44574 44575 44576 44577 44578 44579 44580 44581 44582 44583 44584 44585 44586 44587 44588 44589 44590 44591 44592 44593 44594 44595 44596 44597 44598> # SplitBus
mul in 2 <44430 44396> out 1 <44599>     # cond trueterm
const-mul-neg-1 in 1 <44430> out 1 <44600> # cond minuscond
add in 2 <100 44600> out 1 <44601>       # cond negcond
mul in 2 <44601 44386> out 1 <44602>     # cond falseterm
add in 2 <44599 44602> out 1 <44603>     # cond result
const-mul-ffffffff in 1 <44603> out 1 <44604> # multiply-by-constant 4294967295
add in 2 <44603 44381> out 1 <44605>     # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
split in 1 <44605> outplitBus
const-mul-2 in 1 <44637> out 1 <44841>   # join source bit 31
add in 2 <44636 44841> out 1 <44842>     # join source bit 30
const-mul-2 in 1 <44842> out 1 <44843>   # join
add in 2 <44635 44843> out 1 <44844>     # join source bit 29
const-mul-2 in 1 <44844> out 1 <44845>   # join
add in 2 <44634 44845> out 1 <44846>     # join source bit 28
const-mul-2 in 1 <44846> out 1 <44847>   # join
add in 2 <44633 44847> out 1 <44848>     # join source bit 27
const-mul-2 in 1 <44848> out 1 <44849>   # join
add in 2 <44632 44849> out 1 <44850>     # join source bit 26
const-mul-2 in 1 <44850> out 1 <44851>   # join
add in 2 <44631 44851> out 1 <44852>     # join source bit 25
const-mul-2 in 1 <44852> out 1 <44853>   # join
add in 2 <44630 44853> out 1 <44854>     # join source bit 24
const-mul-2 in 1 <44854> out 1 <44855>   # join
add in 2 <44629 44855> out 1 <44856>     # join source bit 23
const-mul-2 in 1 <44856> out 1 <44857>   # join
add in 2 <44628 44857> out 1 <44858>     # join source bit 22
const-mul-2 in 1 <44858> out 1 <44859>   # join
add in 2 <44627 44859> out 1 <44860>     # join source bit 21
const-mul-2 in 1 <44860> out 1 <44861>   # join
add in 2 <44626 44861> out 1 <44862>     # join source bit 20
const-mul-2 in 1 <44862> out 1 <44863>   # join
add in 2 <44625 44863> out 1 <44864>     # join source bit 19
const-mul-2 in 1 <44864> out 1 <44865>   # join
add in 2 <44624 44865> out 1 <44866>     # join source bit 18
const-mul-2 in 1 <44866> out 1 <44867>   # join
add in 2 <44623 44867> out 1 <44868>     # join source bit 17
const-mul-2 in 1 <44868> out 1 <44869>   # join
add in 2 <44622 44869> out 1 <44870>     # join source bit 16
const-mul-2 in 1 <44870> out 1 <44871>   # join
add in 2 <44621 44871> out 1 <44872>     # join source bit 15
const-mul-2 in 1 <44872> out 1 <44873>   # join
add in 2 <44620 44873> out 1 <44874>     # join source bit 14
const-mul-2 in 1 <44874> out 1 <44875>   # join
add in 2 <44619 44875> out 1 <44876>     # join source bit 13
const-mul-2 in 1 <44876> out 1 <44877>   # join
add in 2 <44618 44877> out 1 <44878>     # join source bit 12
const-mul-2 in 1 <44878> out 1 <44879>   # join
add in 2 <44617 44879> out 1 <44880>     # join source bit 11
const-mul-2 in 1 <44880> out 1 <44881>   # join
add in 2 <44616 44881> out 1 <44882>     # join source bit 10
const-mul-2 in 1 <44882> out 1 <44883>   # join
add in 2 <44615 44883> out 1 <44884>     # join source bit 9
const-mul-2 in 1 <44884> out 1 <44885>   # join
add in 2 <44614 44885> out 1 <44886>     # join source bit 8
const-mul-2 in 1 <44886> out 1 <44887>   # join
add in 2 <44613 44887> out 1 <44888>     # join source bit 7
const-mul-2 in 1 <44888> out 1 <44889>   # join
add in 2 <44612 44889> out 1 <44890>     # join source bit 6
const-mul-2 in 1 <44890> out 1 <44891>   # join
add in 2 <44611 44891> out 1 <44892>     # join source bit 5
const-mul-2 in 1 <44892> out 1 <44893>   # join
add in 2 <44610 44893> out 1 <44894>     # join source bit 4
const-mul-2 in 1 <44894> out 1 <44895>   # join
add in 2 <44609 44895> out 1 <44896>     # join source bit 3
const-mul-2 in 1 <44896> out 1 <44897>   # join
add in 2 <44608 44897> out 1 <44898>     # join source bit 2
const-mul-2 in 1 <44898> out 1 <44899>   # join
add in 2 <44607 44899> out 1 <44900>     # join source bit 1
const-mul-2 in 1 <44900> out 1 <44901>   # join
add in 2 <44606 44901> out 1 <44902>     # join source bit 0
add in 2 <44902 44902> out 1 <44903>     # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <44903> out 1 <44904> # multiply-by-constant 4294967295
add in 2 <44605 44904> out 1 <44905>     # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <44603> out 1 <44906> # multiply-by-constant 4294967295
add in 2 <44381 44906> out 1 <44907>     # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <44907> outplitBus
mul in 2 <44939 44905> out 1 <45175>     # cond trueterm
const-mul-neg-1 in 1 <44939> out 1 <45176> # cond minuscond
add in 2 <100 45176> out 1 <45177>       # cond negcond
mul in 2 <45177 44381> out 1 <45178>     # cond falseterm
add in 2 <45175 45178> out 1 <45179>     # cond result
add in 2 <45179 104> out 1 <45180>       # ArithBusReq.AddReq(DFG.Conditional,DFG.Constant)
const-mul-ffffffff in 1 <15> out 1 <45181> # multiply-by-constant 4294967295
add in 2 <45180 45181> out 1 <45182>     # 'CmpLT DFG.Add - DFG.Input'
split in 1 <45182> outplitBus
mul in 2 <45214 103> out 1 <45421>       # cond trueterm
const-mul-neg-1 in 1 <45214> out 1 <45422> # cond minuscond
add in 2 <100 45422> out 1 <45423>       # cond negcond
mul in 2 <45423 102> out 1 <45424>       # cond falseterm
add in 2 <45421 45424> out 1 <45425>     # cond result
add in 2 <45179 3084> out 1 <45426>      # ArithBusReq.AddReq(DFG.Conditional,DFG.Negate)
const-mul-ffffffff in 1 <45426> out 1 <45427> # multiply-by-constant 4294967295
add in 2 <15 45427> out 1 <45428>        # 'CmpLT DFG.Input - DFG.Subtract'
split in 1 <45428> outplitBus
mul in 2 <45460 103> out 1 <45699>       # cond trueterm
const-mul-neg-1 in 1 <45460> out 1 <45700> # cond minuscond
add in 2 <100 45700> out 1 <45701>       # cond negcond
mul in 2 <45701 45425> out 1 <45702>     # cond falseterm
add in 2 <45699 45702> out 1 <45703>     # cond result
const-mul-ffffffff in 1 <14> out 1 <45704> # multiply-by-constant 4294967295
add in 2 <14 15> out 1 <45705>           # ArithBusReq.AddReq(DFG.Input,DFG.Input)
add in 2 <45705 45704> out 1 <45706>     # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <45706> out 1 <45707> # multiply-by-constant 4294967295
add in 2 <45705 45707> out 1 <45708>     # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <14> out 1 <45709> # multiply-by-constant 4294967295
add in 2 <15 45709> out 1 <45710>        # 'CmpLT DFG.Input - DFG.Input'
split in 1 <45710> out 65 <45711 45712 45713 45714 45715 45716 45717 45718 45719 45720 45721 45722 45723 45724 45725 45726 45727 45728 45729 45730 45731 45732 45733 45734 45735 45736 45737 45738 45739 45740 45741 45742 45743 45744 45745 45746 45747 45748 45749 45750 45751 45752 45753 45754 45755 45756 45757 45758 45759 45760 45761 45762 45763 45764 45765 45766 45767 45768 45769 45770 45771 45772 45773 45774 45775> # SplitBus
mul in 2 <45742 45708> out 1 <45776>     # cond trueterm
const-mul-neg-1 in 1 <45742> out 1 <45777> # cond minuscond
add in 2 <100 45777> out 1 <45778>       # cond negcond
mul in 2 <45778 15> out 1 <45779>        # cond falseterm
add in 2 <45776 45779> out 1 <45780>     # cond result
const-mul-ffffffff in 1 <45780> out 1 <45781> # multiply-by-constant 4294967295
add in 2 <45780 16> out 1 <45782>        # ArithBusReq.AddReq(DFG.Conditional,DFG.Input)
add in 2 <45782 45781> out 1 <45783>     # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <45783> out 1 <45784> # multiply-by-constant 4294967295
add in 2 <45782 45784> out 1 <45785>     # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <45780> out 1 <45786> # multiply-by-constant 4294967295
add in 2 <16 45786> out 1 <45787>        # 'CmpLT DFG.Input - DFG.Conditional'
split in 1 <45787> out 131 <45788 45789 45790 45791 45792 45793 45794 45795 45796 45797 45798 45799 45800 45801 45802 45803 45804 45805 45806 45807 45808 45809 45810 45811 45812 45813 45814 45815 45816 45817 45818 45819 45820 45821 45822 45823 45824 45825 45826 45827 45828 45829 45830 45831 45832 45833 45834 45835 45836 45837 45838 45839 45840 45841 45842 45843 45844 45845 45846 45847 45848 45849 45850 45851 45852 45853 45854 45855 45856 45857 45858 45859 45860 45861 45862 45863 45864 45865 45866 45867 45868 45869 45870 45871 45872 45873 45874 45875 45876 45877 45878 45879 45880 45881 45882 45883 45884 45885 45886 45887 45888 45889 45890 45891 45892 45893 45894 45895 45896 45897 45898 45899 45900 45901 45902 45903 45904 45905 45906 45907 45908 45909 45910 45911 45912 45913 45914 45915 45916 45917 45918> # SplitBus
mul in 2 <45819 45785> out 1 <45919>     # cond trueterm
const-mul-neg-1 in 1 <45819> out 1 <45920> # cond minuscond
add in 2 <100 45920> out 1 <45921>       # cond negcond
mul in 2 <45921 16> out 1 <45922>        # cond falseterm
add in 2 <45919 45922> out 1 <45923>     # cond result
const-mul-ffffffff in 1 <45923> out 1 <45924> # multiply-by-constant 4294967295
add in 2 <45923 17> out 1 <45925>        # ArithBusReq.AddReq(DFG.Conditional,DFG.Input)
add in 2 <45925 45924> out 1 <45926>     # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <45923> out 1 <45927> # multiply-by-constant 4294967295
add in 2 <17 45927> out 1 <45928>        # 'CmpLT DFG.Input - DFG.Conditional'
split in 1 <45928> out 197 <45929 45930 45931 45932 45933 45934 45935 45936 45937 45938 45939 45940 45941 45942 45943 45944 45945 45946 45947 45948 45949 45950 45951 45952 45953 45954 45955 45956 45957 45958 45959 45960 45961 45962 45963 45964 45965 45966 45967 45968 45969 45970 45971 45972 45973 45974 45975 45976 45977 45978 45979 45980 45981 45982 45983 45984 45985 45986 45987 45988 45989 45990 45991 45992 45993 45994 45995 45996 45997 45998 45999 46000 46001 46002 46003 46004 46005 46006 46007 46008 46009 46010 46011 46012 46013 46014 46015 46016 46017 46018 46019 46020 46021 46022 46023 46024 46025 46026 46027 46028 46029 46030 46031 46032 46033 46034 46035 46036 46037 46038 46039 46040 46041 46042 46043 46044 46045 46046 46047 46048 46049 46050 46051 46052 46053 46054 46055 46056 46057 46058 46059 46060 46061 46062 46063 46064 46065 46066 46067 46068 46069 46070 46071 46072 46073 46074 46075 46076 46077 46078 46079 46080 46081 46082 46083 46084 46085 46086 46087 46088 46089 46090 46091 46092 46093 46094 46095 46096 46097 46098 46099 46100 46101 46102 46103 46104 46105 46106 46107 46108 46109 46110 46111 46112 46113 46114 46115 46116 46117 46118 46119 46120 46121 46122 46123 46124 46125> # SplitBus
mul in 2 <45960 45926> out 1 <46126>     # cond trueterm
const-mul-neg-1 in 1 <45960> out 1 <46127> # cond minuscond
add in 2 <100 46127> out 1 <46128>       # cond negcond
mul in 2 <46128 45923> out 1 <46129>     # cond falseterm
add in 2 <46126 46129> out 1 <46130>     # cond result
mul in 2 <45819 45783> out 1 <46131>     # cond trueterm
const-mul-neg-1 in 1 <45819> out 1 <46132> # cond minuscond
add in 2 <100 46132> out 1 <46133>       # cond negcond
mul in 2 <46133 45780> out 1 <46134>     # cond falseterm
add in 2 <46131 46134> out 1 <46135>     # cond result
mul in 2 <45742 45706> out 1 <46136>     # cond trueterm
const-mul-neg-1 in 1 <45742> out 1 <46137> # cond minuscond
add in 2 <100 46137> out 1 <46138>       # cond negcond
mul in 2 <46138 14> out 1 <46139>        # cond falseterm
add in 2 <46136 46139> out 1 <46140>     # cond result
const-mul-ffffffff in 1 <46140> out 1 <46141> # multiply-by-constant 4294967295
add in 2 <46140 46135> out 1 <46142>     # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
add in 2 <46142 46141> out 1 <46143>     # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <46143> out 1 <46144> # multiply-by-constant 4294967295
add in 2 <46142 46144> out 1 <46145>     # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <46140> out 1 <46146> # multiply-by-constant 4294967295
add in 2 <46135 46146> out 1 <46147>     # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <46147> outplitBus
mul in 2 <46179 46145> out 1 <46280>     # cond trueterm
const-mul-neg-1 in 1 <46179> out 1 <46281> # cond minuscond
add in 2 <100 46281> out 1 <46282>       # cond negcond
mul in 2 <46282 46135> out 1 <46283>     # cond falseterm
add in 2 <46280 46283> out 1 <46284>     # cond result
const-mul-ffffffff in 1 <46284> out 1 <46285> # multiply-by-constant 4294967295
add in 2 <46284 46130> out 1 <46286>     # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
add in 2 <46286 46285> out 1 <46287>     # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <46287> out 1 <46288> # multiply-by-constant 4294967295
add in 2 <46286 46288> out 1 <46289>     # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <46284> out 1 <46290> # multiply-by-constant 4294967295
add in 2 <46130 46290> out 1 <46291>     # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <46291> out 199 <46292 46293 46294 46295 46296 46297 46298 46299 46300 46301 46302 46303 46304 46305 46306 46307 46308 46309 46310 46311 46312 46313 46314 46315 46316 46317 46318 46319 46320 46321 46322 46323 46324 46325 46326 46327 46328 46329 46330 46331 46332 46333 46334 46335 46336 46337 46338 46339 46340 46341 46342 46343 46344 46345 46346 46347 46348 46349 46350 46351 46352 46353 46354 46355 46356 46357 46358 46359 46360 46361 46362 46363 46364 46365 46366 46367 46368 46369 46370 46371 46372 46373 46374 46375 46376 46377 46378 46379 46380 46381 46382 46383 46384 46385 46386 46387 46388 46389 46390 46391 46392 46393 46394 46395 46396 46397 46398 46399 46400 46401 46402 46403 46404 46405 46406 46407 46408 46409 46410 46411 46412 46413 46414 46415 46416 46417 46418 46419 46420 46421 46422 46423 46424 46425 46426 46427 46428 46429 46430 46431 46432 46433 46434 46435 46436 46437 46438 46439 46440 46441 46442 46443 46444 46445 46446 46447 46448 46449 46450 46451 46452 46453 46454 46455 46456 46457 46458 46459 46460 46461 46462 46463 46464 46465 46466 46467 46468 46469 46470 46471 46472 46473 46474 46475 46476 46477 46478 46479 46480 46481 46482 46483 46484 46485 46486 46487 46488 46489 46490> # SplitBus
mul in 2 <46323 46289> out 1 <46491>     # cond trueterm
const-mul-neg-1 in 1 <46323> out 1 <46492> # cond minuscond
add in 2 <100 46492> out 1 <46493>       # cond negcond
mul in 2 <46493 46130> out 1 <46494>     # cond falseterm
add in 2 <46491 46494> out 1 <46495>     # cond result
const-mul-ffffffff in 1 <46495> out 1 <46496> # multiply-by-constant 4294967295
const-mul-ffffffff in 1 <45926> out 1 <46497> # multiply-by-constant 4294967295
add in 2 <45925 46497> out 1 <46498>     # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
mul in 2 <45960 46498> out 1 <46499>     # cond trueterm
const-mul-neg-1 in 1 <45960> out 1 <46500> # cond minuscond
add in 2 <100 46500> out 1 <46501>       # cond negcond
mul in 2 <46501 17> out 1 <46502>        # cond falseterm
add in 2 <46499 46502> out 1 <46503>     # cond result
const-mul-ffffffff in 1 <46503> out 1 <46504> # multiply-by-constant 4294967295
add in 2 <46503 18> out 1 <46505>        # ArithBusReq.AddReq(DFG.Conditional,DFG.Input)
split in 1 <46505> outplitBus
const-mul-2 in 1 <46537> out 1 <46737>   # join source bit 31
add in 2 <46536 46737> out 1 <46738>     # join source bit 30
const-mul-2 in 1 <46738> out 1 <46739>   # join
add in 2 <46535 46739> out 1 <46740>     # join source bit 29
const-mul-2 in 1 <46740> out 1 <46741>   # join
add in 2 <46534 46741> out 1 <46742>     # join source bit 28
const-mul-2 in 1 <46742> out 1 <46743>   # join
add in 2 <46533 46743> out 1 <46744>     # join source bit 27
const-mul-2 in 1 <46744> out 1 <46745>   # join
add in 2 <46532 46745> out 1 <46746>     # join source bit 26
const-mul-2 in 1 <46746> out 1 <46747>   # join
add in 2 <46531 46747> out 1 <46748>     # join source bit 25
const-mul-2 in 1 <46748> out 1 <46749>   # join
add in 2 <46530 46749> out 1 <46750>     # join source bit 24
const-mul-2 in 1 <46750> out 1 <46751>   # join
add in 2 <46529 46751> out 1 <46752>     # join source bit 23
const-mul-2 in 1 <46752> out 1 <46753>   # join
add in 2 <46528 46753> out 1 <46754>     # join source bit 22
const-mul-2 in 1 <46754> out 1 <46755>   # join
add in 2 <46527 46755> out 1 <46756>     # join source bit 21
const-mul-2 in 1 <46756> out 1 <46757>   # join
add in 2 <46526 46757> out 1 <46758>     # join source bit 20
const-mul-2 in 1 <46758> out 1 <46759>   # join
add in 2 <46525 46759> out 1 <46760>     # join source bit 19
const-mul-2 in 1 <46760> out 1 <46761>   # join
add in 2 <46524 46761> out 1 <46762>     # join source bit 18
const-mul-2 in 1 <46762> out 1 <46763>   # join
add in 2 <46523 46763> out 1 <46764>     # join source bit 17
const-mul-2 in 1 <46764> out 1 <46765>   # join
add in 2 <46522 46765> out 1 <46766>     # join source bit 16
const-mul-2 in 1 <46766> out 1 <46767>   # join
add in 2 <46521 46767> out 1 <46768>     # join source bit 15
const-mul-2 in 1 <46768> out 1 <46769>   # join
add in 2 <46520 46769> out 1 <46770>     # join source bit 14
const-mul-2 in 1 <46770> out 1 <46771>   # join
add in 2 <46519 46771> out 1 <46772>     # join source bit 13
const-mul-2 in 1 <46772> out 1 <46773>   # join
add in 2 <46518 46773> out 1 <46774>     # join source bit 12
const-mul-2 in 1 <46774> out 1 <46775>   # join
add in 2 <46517 46775> out 1 <46776>     # join source bit 11
const-mul-2 in 1 <46776> out 1 <46777>   # join
add in 2 <46516 46777> out 1 <46778>     # join source bit 10
const-mul-2 in 1 <46778> out 1 <46779>   # join
add in 2 <46515 46779> out 1 <46780>     # join source bit 9
const-mul-2 in 1 <46780> out 1 <46781>   # join
add in 2 <46514 46781> out 1 <46782>     # join source bit 8
const-mul-2 in 1 <46782> out 1 <46783>   # join
add in 2 <46513 46783> out 1 <46784>     # join source bit 7
const-mul-2 in 1 <46784> out 1 <46785>   # join
add in 2 <46512 46785> out 1 <46786>     # join source bit 6
const-mul-2 in 1 <46786> out 1 <46787>   # join
add in 2 <46511 46787> out 1 <46788>     # join source bit 5
const-mul-2 in 1 <46788> out 1 <46789>   # join
add in 2 <46510 46789> out 1 <46790>     # join source bit 4
const-mul-2 in 1 <46790> out 1 <46791>   # join
add in 2 <46509 46791> out 1 <46792>     # join source bit 3
const-mul-2 in 1 <46792> out 1 <46793>   # join
add in 2 <46508 46793> out 1 <46794>     # join source bit 2
const-mul-2 in 1 <46794> out 1 <46795>   # join
add in 2 <46507 46795> out 1 <46796>     # join source bit 1
const-mul-2 in 1 <46796> out 1 <46797>   # join
add in 2 <46506 46797> out 1 <46798>     # join source bit 0
add in 2 <46798 46798> out 1 <46799>     # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <46503> out 1 <46800> # multiply-by-constant 4294967295
add in 2 <18 46800> out 1 <46801>        # 'CmpLT DFG.Input - DFG.Conditional'
split in 1 <46801> outplitBus
mul in 2 <46833 46799> out 1 <47065>     # cond trueterm
const-mul-neg-1 in 1 <46833> out 1 <47066> # cond minuscond
add in 2 <100 47066> out 1 <47067>       # cond negcond
mul in 2 <47067 46503> out 1 <47068>     # cond falseterm
add in 2 <47065 47068> out 1 <47069>     # cond result
add in 2 <46495 47069> out 1 <47070>     # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
split in 1 <47070> out 233 <47071 47072 47073 47074 47075 47076 47077 47078 47079 47080 47081 47082 47083 47084 47085 47086 47087 47088 47089 47090 47091 47092 47093 47094 47095 47096 47097 47098 47099 47100 47101 47102 47103 47104 47105 47106 47107 47108 47109 47110 47111 47112 47113 47114 47115 47116 47117 47118 47119 47120 47121 47122 47123 47124 47125 47126 47127 47128 47129 47130 47131 47132 47133 47134 47135 47136 47137 47138 47139 47140 47141 47142 47143 47144 47145 47146 47147 47148 47149 47150 47151 47152 47153 47154 47155 47156 47157 47158 47159 47160 47161 47162 47163 47164 47165 47166 47167 47168 47169 47170 47171 47172 47173 47174 47175 47176 47177 47178 47179 47180 47181 47182 47183 47184 47185 47186 47187 47188 47189 47190 47191 47192 47193 47194 47195 47196 47197 47198 47199 47200 47201 47202 47203 47204 47205 47206 47207 47208 47209 47210 47211 47212 47213 47214 47215 47216 47217 47218 47219 47220 47221 47222 47223 47224 47225 47226 47227 47228 47229 47230 47231 47232 47233 47234 47235 47236 47237 47238 47239 47240 47241 47242 47243 47244 47245 47246 47247 47248 47249 47250 47251 47252 47253 47254 47255 47256 47257 47258 47259 47260 47261 47262 47263 47264 47265 47266 47267 47268 47269 47270 47271 47272 47273 47274 47275 47276 47277 47278 47279 47280 47281 47282 47283 47284 47285 47286 47287 47288 47289 47290 47291 47292 47293 47294 47295 47296 47297 47298 47299 47300 47301 47302 47303> # SplitBus
const-mul-2 in 1 <47102> out 1 <47304>   # join source bit 31
add in 2 <47101 47304> out 1 <47305>     # join source bit 30
const-mul-2 in 1 <47305> out 1 <47306>   # join
add in 2 <47100 47306> out 1 <47307>     # join source bit 29
const-mul-2 in 1 <47307> out 1 <47308>   # join
add in 2 <47099 47308> out 1 <47309>     # join source bit 28
const-mul-2 in 1 <47309> out 1 <47310>   # join
add in 2 <47098 47310> out 1 <47311>     # join source bit 27
const-mul-2 in 1 <47311> out 1 <47312>   # join
add in 2 <47097 47312> out 1 <47313>     # join source bit 26
const-mul-2 in 1 <47313> out 1 <47314>   # join
add in 2 <47096 47314> out 1 <47315>     # join source bit 25
const-mul-2 in 1 <47315> out 1 <47316>   # join
add in 2 <47095 47316> out 1 <47317>     # join source bit 24
const-mul-2 in 1 <47317> out 1 <47318>   # join
add in 2 <47094 47318> out 1 <47319>     # join source bit 23
const-mul-2 in 1 <47319> out 1 <47320>   # join
add in 2 <47093 47320> out 1 <47321>     # join source bit 22
const-mul-2 in 1 <47321> out 1 <47322>   # join
add in 2 <47092 47322> out 1 <47323>     # join source bit 21
const-mul-2 in 1 <47323> out 1 <47324>   # join
add in 2 <47091 47324> out 1 <47325>     # join source bit 20
const-mul-2 in 1 <47325> out 1 <47326>   # join
add in 2 <47090 47326> out 1 <47327>     # join source bit 19
const-mul-2 in 1 <47327> out 1 <47328>   # join
add in 2 <47089 47328> out 1 <47329>     # join source bit 18
const-mul-2 in 1 <47329> out 1 <47330>   # join
add in 2 <47088 47330> out 1 <47331>     # join source bit 17
const-mul-2 in 1 <47331> out 1 <47332>   # join
add in 2 <47087 47332> out 1 <47333>     # join source bit 16
const-mul-2 in 1 <47333> out 1 <47334>   # join
add in 2 <47086 47334> out 1 <47335>     # join source bit 15
const-mul-2 in 1 <47335> out 1 <47336>   # join
add in 2 <47085 47336> out 1 <47337>     # join source bit 14
const-mul-2 in 1 <47337> out 1 <47338>   # join
add in 2 <47084 47338> out 1 <47339>     # join source bit 13
const-mul-2 in 1 <47339> out 1 <47340>   # join
add in 2 <47083 47340> out 1 <47341>     # join source bit 12
const-mul-2 in 1 <47341> out 1 <47342>   # join
add in 2 <47082 47342> out 1 <47343>     # join source bit 11
const-mul-2 in 1 <47343> out 1 <47344>   # join
add in 2 <47081 47344> out 1 <47345>     # join source bit 10
const-mul-2 in 1 <47345> out 1 <47346>   # join
add in 2 <47080 47346> out 1 <47347>     # join source bit 9
const-mul-2 in 1 <47347> out 1 <47348>   # join
add in 2 <47079 47348> out 1 <47349>     # join source bit 8
const-mul-2 in 1 <47349> out 1 <47350>   # join
add in 2 <47078 47350> out 1 <47351>     # join source bit 7
const-mul-2 in 1 <47351> out 1 <47352>   # join
add in 2 <47077 47352> out 1 <47353>     # join source bit 6
const-mul-2 in 1 <47353> out 1 <47354>   # join
add in 2 <47076 47354> out 1 <47355>     # join source bit 5
const-mul-2 in 1 <47355> out 1 <47356>   # join
add in 2 <47075 47356> out 1 <47357>     # join source bit 4
const-mul-2 in 1 <47357> out 1 <47358>   # join
add in 2 <47074 47358> out 1 <47359>     # join source bit 3
const-mul-2 in 1 <47359> out 1 <47360>   # join
add in 2 <47073 47360> out 1 <47361>     # join source bit 2
const-mul-2 in 1 <47361> out 1 <47362>   # join
add in 2 <47072 47362> out 1 <47363>     # join source bit 1
const-mul-2 in 1 <47363> out 1 <47364>   # join
add in 2 <47071 47364> out 1 <47365>     # join source bit 0
add in 2 <47365 47365> out 1 <47366>     # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <46495> out 1 <47367> # multiply-by-constant 4294967295
add in 2 <47069 47367> out 1 <47368>     # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <47368> out 265 <47369 47370 47371 47372 47373 47374 47375 47376 47377 47378 47379 47380 47381 47382 47383 47384 47385 47386 47387 47388 47389 47390 47391 47392 47393 47394 47395 47396 47397 47398 47399 47400 47401 47402 47403 47404 47405 47406 47407 47408 47409 47410 47411 47412 47413 47414 47415 47416 47417 47418 47419 47420 47421 47422 47423 47424 47425 47426 47427 47428 47429 47430 47431 47432 47433 47434 47435 47436 47437 47438 47439 47440 47441 47442 47443 47444 47445 47446 47447 47448 47449 47450 47451 47452 47453 47454 47455 47456 47457 47458 47459 47460 47461 47462 47463 47464 47465 47466 47467 47468 47469 47470 47471 47472 47473 47474 47475 47476 47477 47478 47479 47480 47481 47482 47483 47484 47485 47486 47487 47488 47489 47490 47491 47492 47493 47494 47495 47496 47497 47498 47499 47500 47501 47502 47503 47504 47505 47506 47507 47508 47509 47510 47511 47512 47513 47514 47515 47516 47517 47518 47519 47520 47521 47522 47523 47524 47525 47526 47527 47528 47529 47530 47531 47532 47533 47534 47535 47536 47537 47538 47539 47540 47541 47542 47543 47544 47545 47546 47547 47548 47549 47550 47551 47552 47553 47554 47555 47556 47557 47558 47559 47560 47561 47562 47563 47564 47565 47566 47567 47568 47569 47570 47571 47572 47573 47574 47575 47576 47577 47578 47579 47580 47581 47582 47583 47584 47585 47586 47587 47588 47589 47590 47591 47592 47593 47594 47595 47596 47597 47598 47599 47600 47601 47602 47603 47604 47605 47606 47607 47608 47609 47610 47611 47612 47613 47614 47615 47616 47617 47618 47619 47620 47621 47622 47623 47624 47625 47626 47627 47628 47629 47630 47631 47632 47633> # SplitBus
mul in 2 <47400 47366> out 1 <47634>     # cond trueterm
const-mul-neg-1 in 1 <47400> out 1 <47635> # cond minuscond
add in 2 <100 47635> out 1 <47636>       # cond negcond
mul in 2 <47636 46495> out 1 <47637>     # cond falseterm
add in 2 <47634 47637> out 1 <47638>     # cond result
mul in 2 <46323 46287> out 1 <47639>     # cond trueterm
const-mul-neg-1 in 1 <46323> out 1 <47640> # cond minuscond
add in 2 <100 47640> out 1 <47641>       # cond negcond
mul in 2 <47641 46284> out 1 <47642>     # cond falseterm
add in 2 <47639 47642> out 1 <47643>     # cond result
mul in 2 <46179 46143> out 1 <47644>     # cond trueterm
const-mul-neg-1 in 1 <46179> out 1 <47645> # cond minuscond
add in 2 <100 47645> out 1 <47646>       # cond negcond
mul in 2 <47646 46140> out 1 <47647>     # cond falseterm
add in 2 <47644 47647> out 1 <47648>     # cond result
const-mul-ffffffff in 1 <47648> out 1 <47649> # multiply-by-constant 4294967295
add in 2 <47648 47643> out 1 <47650>     # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
add in 2 <47650 47649> out 1 <47651>     # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <47651> out 1 <47652> # multiply-by-constant 4294967295
add in 2 <47650 47652> out 1 <47653>     # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <47648> out 1 <47654> # multiply-by-constant 4294967295
add in 2 <47643 47654> out 1 <47655>     # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <47655> out 200 <47656 47657 47658 47659 47660 47661 47662 47663 47664 47665 47666 47667 47668 47669 47670 47671 47672 47673 47674 47675 47676 47677 47678 47679 47680 47681 47682 47683 47684 47685 47686 47687 47688 47689 47690 47691 47692 47693 47694 47695 47696 47697 47698 47699 47700 47701 47702 47703 47704 47705 47706 47707 47708 47709 47710 47711 47712 47713 47714 47715 47716 47717 47718 47719 47720 47721 47722 47723 47724 47725 47726 47727 47728 47729 47730 47731 47732 47733 47734 47735 47736 47737 47738 47739 47740 47741 47742 47743 47744 47745 47746 47747 47748 47749 47750 47751 47752 47753 47754 47755 47756 47757 47758 47759 47760 47761 47762 47763 47764 47765 47766 47767 47768 47769 47770 47771 47772 47773 47774 47775 47776 47777 47778 47779 47780 47781 47782 47783 47784 47785 47786 47787 47788 47789 47790 47791 47792 47793 47794 47795 47796 47797 47798 47799 47800 47801 47802 47803 47804 47805 47806 47807 47808 47809 47810 47811 47812 47813 47814 47815 47816 47817 47818 47819 47820 47821 47822 47823 47824 47825 47826 47827 47828 47829 47830 47831 47832 47833 47834 47835 47836 47837 47838 47839 47840 47841 47842 47843 47844 47845 47846 47847 47848 47849 47850 47851 47852 47853 47854 47855> # SplitBus
mul in 2 <47687 47653> out 1 <47856>     # cond trueterm
const-mul-neg-1 in 1 <47687> out 1 <47857> # cond minuscond
add in 2 <100 47857> out 1 <47858>       # cond negcond
mul in 2 <47858 47643> out 1 <47859>     # cond falseterm
add in 2 <47856 47859> out 1 <47860>     # cond result
const-mul-ffffffff in 1 <47860> out 1 <47861> # multiply-by-constant 4294967295
add in 2 <47860 47638> out 1 <47862>     # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
split in 1 <47862> outplitBus
const-mul-2 in 1 <47894> out 1 <48098>   # join source bit 31
add in 2 <47893 48098> out 1 <48099>     # join source bit 30
const-mul-2 in 1 <48099> out 1 <48100>   # join
add in 2 <47892 48100> out 1 <48101>     # join source bit 29
const-mul-2 in 1 <48101> out 1 <48102>   # join
add in 2 <47891 48102> out 1 <48103>     # join source bit 28
const-mul-2 in 1 <48103> out 1 <48104>   # join
add in 2 <47890 48104> out 1 <48105>     # join source bit 27
const-mul-2 in 1 <48105> out 1 <48106>   # join
add in 2 <47889 48106> out 1 <48107>     # join source bit 26
const-mul-2 in 1 <48107> out 1 <48108>   # join
add in 2 <47888 48108> out 1 <48109>     # join source bit 25
const-mul-2 in 1 <48109> out 1 <48110>   # join
add in 2 <47887 48110> out 1 <48111>     # join source bit 24
const-mul-2 in 1 <48111> out 1 <48112>   # join
add in 2 <47886 48112> out 1 <48113>     # join source bit 23
const-mul-2 in 1 <48113> out 1 <48114>   # join
add in 2 <47885 48114> out 1 <48115>     # join source bit 22
const-mul-2 in 1 <48115> out 1 <48116>   # join
add in 2 <47884 48116> out 1 <48117>     # join source bit 21
const-mul-2 in 1 <48117> out 1 <48118>   # join
add in 2 <47883 48118> out 1 <48119>     # join source bit 20
const-mul-2 in 1 <48119> out 1 <48120>   # join
add in 2 <47882 48120> out 1 <48121>     # join source bit 19
const-mul-2 in 1 <48121> out 1 <48122>   # join
add in 2 <47881 48122> out 1 <48123>     # join source bit 18
const-mul-2 in 1 <48123> out 1 <48124>   # join
add in 2 <47880 48124> out 1 <48125>     # join source bit 17
const-mul-2 in 1 <48125> out 1 <48126>   # join
add in 2 <47879 48126> out 1 <48127>     # join source bit 16
const-mul-2 in 1 <48127> out 1 <48128>   # join
add in 2 <47878 48128> out 1 <48129>     # join source bit 15
const-mul-2 in 1 <48129> out 1 <48130>   # join
add in 2 <47877 48130> out 1 <48131>     # join source bit 14
const-mul-2 in 1 <48131> out 1 <48132>   # join
add in 2 <47876 48132> out 1 <48133>     # join source bit 13
const-mul-2 in 1 <48133> out 1 <48134>   # join
add in 2 <47875 48134> out 1 <48135>     # join source bit 12
const-mul-2 in 1 <48135> out 1 <48136>   # join
add in 2 <47874 48136> out 1 <48137>     # join source bit 11
const-mul-2 in 1 <48137> out 1 <48138>   # join
add in 2 <47873 48138> out 1 <48139>     # join source bit 10
const-mul-2 in 1 <48139> out 1 <48140>   # join
add in 2 <47872 48140> out 1 <48141>     # join source bit 9
const-mul-2 in 1 <48141> out 1 <48142>   # join
add in 2 <47871 48142> out 1 <48143>     # join source bit 8
const-mul-2 in 1 <48143> out 1 <48144>   # join
add in 2 <47870 48144> out 1 <48145>     # join source bit 7
const-mul-2 in 1 <48145> out 1 <48146>   # join
add in 2 <47869 48146> out 1 <48147>     # join source bit 6
const-mul-2 in 1 <48147> out 1 <48148>   # join
add in 2 <47868 48148> out 1 <48149>     # join source bit 5
const-mul-2 in 1 <48149> out 1 <48150>   # join
add in 2 <47867 48150> out 1 <48151>     # join source bit 4
const-mul-2 in 1 <48151> out 1 <48152>   # join
add in 2 <47866 48152> out 1 <48153>     # join source bit 3
const-mul-2 in 1 <48153> out 1 <48154>   # join
add in 2 <47865 48154> out 1 <48155>     # join source bit 2
const-mul-2 in 1 <48155> out 1 <48156>   # join
add in 2 <47864 48156> out 1 <48157>     # join source bit 1
const-mul-2 in 1 <48157> out 1 <48158>   # join
add in 2 <47863 48158> out 1 <48159>     # join source bit 0
add in 2 <48159 48159> out 1 <48160>     # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <48160> out 1 <48161> # multiply-by-constant 4294967295
add in 2 <47862 48161> out 1 <48162>     # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <47860> out 1 <48163> # multiply-by-constant 4294967295
add in 2 <47638 48163> out 1 <48164>     # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <48164> outplitBus
mul in 2 <48196 48162> out 1 <48432>     # cond trueterm
const-mul-neg-1 in 1 <48196> out 1 <48433> # cond minuscond
add in 2 <100 48433> out 1 <48434>       # cond negcond
mul in 2 <48434 47638> out 1 <48435>     # cond falseterm
add in 2 <48432 48435> out 1 <48436>     # cond result
add in 2 <48436 104> out 1 <48437>       # ArithBusReq.AddReq(DFG.Conditional,DFG.Constant)
const-mul-ffffffff in 1 <16> out 1 <48438> # multiply-by-constant 4294967295
add in 2 <48437 48438> out 1 <48439>     # 'CmpLT DFG.Add - DFG.Input'
split in 1 <48439> outplitBus
mul in 2 <48471 103> out 1 <48678>       # cond trueterm
const-mul-neg-1 in 1 <48471> out 1 <48679> # cond minuscond
add in 2 <100 48679> out 1 <48680>       # cond negcond
mul in 2 <48680 102> out 1 <48681>       # cond falseterm
add in 2 <48678 48681> out 1 <48682>     # cond result
add in 2 <48436 3084> out 1 <48683>      # ArithBusReq.AddReq(DFG.Conditional,DFG.Negate)
const-mul-ffffffff in 1 <48683> out 1 <48684> # multiply-by-constant 4294967295
add in 2 <16 48684> out 1 <48685>        # 'CmpLT DFG.Input - DFG.Subtract'
split in 1 <48685> outplitBus
mul in 2 <48717 103> out 1 <48956>       # cond trueterm
const-mul-neg-1 in 1 <48717> out 1 <48957> # cond minuscond
add in 2 <100 48957> out 1 <48958>       # cond negcond
mul in 2 <48958 48682> out 1 <48959>     # cond falseterm
add in 2 <48956 48959> out 1 <48960>     # cond result
const-mul-ffffffff in 1 <15> out 1 <48961> # multiply-by-constant 4294967295
add in 2 <15 16> out 1 <48962>           # ArithBusReq.AddReq(DFG.Input,DFG.Input)
add in 2 <48962 48961> out 1 <48963>     # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <48963> out 1 <48964> # multiply-by-constant 4294967295
add in 2 <48962 48964> out 1 <48965>     # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <15> out 1 <48966> # multiply-by-constant 4294967295
add in 2 <16 48966> out 1 <48967>        # 'CmpLT DFG.Input - DFG.Input'
split in 1 <48967> out 65 <48968 48969 48970 48971 48972 48973 48974 48975 48976 48977 48978 48979 48980 48981 48982 48983 48984 48985 48986 48987 48988 48989 48990 48991 48992 48993 48994 48995 48996 48997 48998 48999 49000 49001 49002 49003 49004 49005 49006 49007 49008 49009 49010 49011 49012 49013 49014 49015 49016 49017 49018 49019 49020 49021 49022 49023 49024 49025 49026 49027 49028 49029 49030 49031 49032> # SplitBus
mul in 2 <48999 48965> out 1 <49033>     # cond trueterm
const-mul-neg-1 in 1 <48999> out 1 <49034> # cond minuscond
add in 2 <100 49034> out 1 <49035>       # cond negcond
mul in 2 <49035 16> out 1 <49036>        # cond falseterm
add in 2 <49033 49036> out 1 <49037>     # cond result
const-mul-ffffffff in 1 <49037> out 1 <49038> # multiply-by-constant 4294967295
add in 2 <49037 17> out 1 <49039>        # ArithBusReq.AddReq(DFG.Conditional,DFG.Input)
add in 2 <49039 49038> out 1 <49040>     # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <49040> out 1 <49041> # multiply-by-constant 4294967295
add in 2 <49039 49041> out 1 <49042>     # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <49037> out 1 <49043> # multiply-by-constant 4294967295
add in 2 <17 49043> out 1 <49044>        # 'CmpLT DFG.Input - DFG.Conditional'
split in 1 <49044> outplitBus
mul in 2 <49076 49042> out 1 <49176>     # cond trueterm
const-mul-neg-1 in 1 <49076> out 1 <49177> # cond minuscond
add in 2 <100 49177> out 1 <49178>       # cond negcond
mul in 2 <49178 17> out 1 <49179>        # cond falseterm
add in 2 <49176 49179> out 1 <49180>     # cond result
const-mul-ffffffff in 1 <49180> out 1 <49181> # multiply-by-constant 4294967295
add in 2 <49180 18> out 1 <49182>        # ArithBusReq.AddReq(DFG.Conditional,DFG.Input)
add in 2 <49182 49181> out 1 <49183>     # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <49180> out 1 <49184> # multiply-by-constant 4294967295
add in 2 <18 49184> out 1 <49185>        # 'CmpLT DFG.Input - DFG.Conditional'
split in 1 <49185> out 197 <49186 49187 49188 49189 49190 49191 49192 49193 49194 49195 49196 49197 49198 49199 49200 49201 49202 49203 49204 49205 49206 49207 49208 49209 49210 49211 49212 49213 49214 49215 49216 49217 49218 49219 49220 49221 49222 49223 49224 49225 49226 49227 49228 49229 49230 49231 49232 49233 49234 49235 49236 49237 49238 49239 49240 49241 49242 49243 49244 49245 49246 49247 49248 49249 49250 49251 49252 49253 49254 49255 49256 49257 49258 49259 49260 49261 49262 49263 49264 49265 49266 49267 49268 49269 49270 49271 49272 49273 49274 49275 49276 49277 49278 49279 49280 49281 49282 49283 49284 49285 49286 49287 49288 49289 49290 49291 49292 49293 49294 49295 49296 49297 49298 49299 49300 49301 49302 49303 49304 49305 49306 49307 49308 49309 49310 49311 49312 49313 49314 49315 49316 49317 49318 49319 49320 49321 49322 49323 49324 49325 49326 49327 49328 49329 49330 49331 49332 49333 49334 49335 49336 49337 49338 49339 49340 49341 49342 49343 49344 49345 49346 49347 49348 49349 49350 49351 49352 49353 49354 49355 49356 49357 49358 49359 49360 49361 49362 49363 49364 49365 49366 49367 49368 49369 49370 49371 49372 49373 49374 49375 49376 49377 49378 49379 49380 49381 49382> # SplitBus
mul in 2 <49217 49183> out 1 <49383>     # cond trueterm
const-mul-neg-1 in 1 <49217> out 1 <49384> # cond minuscond
add in 2 <100 49384> out 1 <49385>       # cond negcond
mul in 2 <49385 49180> out 1 <49386>     # cond falseterm
add in 2 <49383 49386> out 1 <49387>     # cond result
mul in 2 <49076 49040> out 1 <49388>     # cond trueterm
const-mul-neg-1 in 1 <49076> out 1 <49389> # cond minuscond
add in 2 <100 49389> out 1 <49390>       # cond negcond
mul in 2 <49390 49037> out 1 <49391>     # cond falseterm
add in 2 <49388 49391> out 1 <49392>     # cond result
mul in 2 <48999 48963> out 1 <49393>     # cond trueterm
const-mul-neg-1 in 1 <48999> out 1 <49394> # cond minuscond
add in 2 <100 49394> out 1 <49395>       # cond negcond
mul in 2 <49395 15> out 1 <49396>        # cond falseterm
add in 2 <49393 49396> out 1 <49397>     # cond result
const-mul-ffffffff in 1 <49397> out 1 <49398> # multiply-by-constant 4294967295
add in 2 <49397 49392> out 1 <49399>     # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
add in 2 <49399 49398> out 1 <49400>     # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <49400> out 1 <49401> # multiply-by-constant 4294967295
add in 2 <49399 49401> out 1 <49402>     # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <49397> out 1 <49403> # multiply-by-constant 4294967295
add in 2 <49392 49403> out 1 <49404>     # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <49404> outplitBus
mul in 2 <49436 49402> out 1 <49537>     # cond trueterm
const-mul-neg-1 in 1 <49436> out 1 <49538> # cond minuscond
add in 2 <100 49538> out 1 <49539>       # cond negcond
mul in 2 <49539 49392> out 1 <49540>     # cond falseterm
add in 2 <49537 49540> out 1 <49541>     # cond result
const-mul-ffffffff in 1 <49541> out 1 <49542> # multiply-by-constant 4294967295
add in 2 <49541 49387> out 1 <49543>     # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
add in 2 <49543 49542> out 1 <49544>     # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <49544> out 1 <49545> # multiply-by-constant 4294967295
add in 2 <49543 49545> out 1 <49546>     # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <49541> out 1 <49547> # multiply-by-constant 4294967295
add in 2 <49387 49547> out 1 <49548>     # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <49548> out 199 <49549 49550 49551 49552 49553 49554 49555 49556 49557 49558 49559 49560 49561 49562 49563 49564 49565 49566 49567 49568 49569 49570 49571 49572 49573 49574 49575 49576 49577 49578 49579 49580 49581 49582 49583 49584 49585 49586 49587 49588 49589 49590 49591 49592 49593 49594 49595 49596 49597 49598 49599 49600 49601 49602 49603 49604 49605 49606 49607 49608 49609 49610 49611 49612 49613 49614 49615 49616 49617 49618 49619 49620 49621 49622 49623 49624 49625 49626 49627 49628 49629 49630 49631 49632 49633 49634 49635 49636 49637 49638 49639 49640 49641 49642 49643 49644 49645 49646 49647 49648 49649 49650 49651 49652 49653 49654 49655 49656 49657 49658 49659 49660 49661 49662 49663 49664 49665 49666 49667 49668 49669 49670 49671 49672 49673 49674 49675 49676 49677 49678 49679 49680 49681 49682 49683 49684 49685 49686 49687 49688 49689 49690 49691 49692 49693 49694 49695 49696 49697 49698 49699 49700 49701 49702 49703 49704 49705 49706 49707 49708 49709 49710 49711 49712 49713 49714 49715 49716 49717 49718 49719 49720 49721 49722 49723 49724 49725 49726 49727 49728 49729 49730 49731 49732 49733 49734 49735 49736 49737 49738 49739 49740 49741 49742 49743 49744 49745 49746 49747> # SplitBus
mul in 2 <49580 49546> out 1 <49748>     # cond trueterm
const-mul-neg-1 in 1 <49580> out 1 <49749> # cond minuscond
add in 2 <100 49749> out 1 <49750>       # cond negcond
mul in 2 <49750 49387> out 1 <49751>     # cond falseterm
add in 2 <49748 49751> out 1 <49752>     # cond result
const-mul-ffffffff in 1 <49752> out 1 <49753> # multiply-by-constant 4294967295
const-mul-ffffffff in 1 <49183> out 1 <49754> # multiply-by-constant 4294967295
add in 2 <49182 49754> out 1 <49755>     # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
mul in 2 <49217 49755> out 1 <49756>     # cond trueterm
const-mul-neg-1 in 1 <49217> out 1 <49757> # cond minuscond
add in 2 <100 49757> out 1 <49758>       # cond negcond
mul in 2 <49758 18> out 1 <49759>        # cond falseterm
add in 2 <49756 49759> out 1 <49760>     # cond result
const-mul-ffffffff in 1 <49760> out 1 <49761> # multiply-by-constant 4294967295
add in 2 <49760 19> out 1 <49762>        # ArithBusReq.AddReq(DFG.Conditional,DFG.Input)
split in 1 <49762> outplitBus
const-mul-2 in 1 <49794> out 1 <49994>   # join source bit 31
add in 2 <49793 49994> out 1 <49995>     # join source bit 30
const-mul-2 in 1 <49995> out 1 <49996>   # join
add in 2 <49792 49996> out 1 <49997>     # join source bit 29
const-mul-2 in 1 <49997> out 1 <49998>   # join
add in 2 <49791 49998> out 1 <49999>     # join source bit 28
const-mul-2 in 1 <49999> out 1 <50000>   # join
add in 2 <49790 50000> out 1 <50001>     # join source bit 27
const-mul-2 in 1 <50001> out 1 <50002>   # join
add in 2 <49789 50002> out 1 <50003>     # join source bit 26
const-mul-2 in 1 <50003> out 1 <50004>   # join
add in 2 <49788 50004> out 1 <50005>     # join source bit 25
const-mul-2 in 1 <50005> out 1 <50006>   # join
add in 2 <49787 50006> out 1 <50007>     # join source bit 24
const-mul-2 in 1 <50007> out 1 <50008>   # join
add in 2 <49786 50008> out 1 <50009>     # join source bit 23
const-mul-2 in 1 <50009> out 1 <50010>   # join
add in 2 <49785 50010> out 1 <50011>     # join source bit 22
const-mul-2 in 1 <50011> out 1 <50012>   # join
add in 2 <49784 50012> out 1 <50013>     # join source bit 21
const-mul-2 in 1 <50013> out 1 <50014>   # join
add in 2 <49783 50014> out 1 <50015>     # join source bit 20
const-mul-2 in 1 <50015> out 1 <50016>   # join
add in 2 <49782 50016> out 1 <50017>     # join source bit 19
const-mul-2 in 1 <50017> out 1 <50018>   # join
add in 2 <49781 50018> out 1 <50019>     # join source bit 18
const-mul-2 in 1 <50019> out 1 <50020>   # join
add in 2 <49780 50020> out 1 <50021>     # join source bit 17
const-mul-2 in 1 <50021> out 1 <50022>   # join
add in 2 <49779 50022> out 1 <50023>     # join source bit 16
const-mul-2 in 1 <50023> out 1 <50024>   # join
add in 2 <49778 50024> out 1 <50025>     # join source bit 15
const-mul-2 in 1 <50025> out 1 <50026>   # join
add in 2 <49777 50026> out 1 <50027>     # join source bit 14
const-mul-2 in 1 <50027> out 1 <50028>   # join
add in 2 <49776 50028> out 1 <50029>     # join source bit 13
const-mul-2 in 1 <50029> out 1 <50030>   # join
add in 2 <49775 50030> out 1 <50031>     # join source bit 12
const-mul-2 in 1 <50031> out 1 <50032>   # join
add in 2 <49774 50032> out 1 <50033>     # join source bit 11
const-mul-2 in 1 <50033> out 1 <50034>   # join
add in 2 <49773 50034> out 1 <50035>     # join source bit 10
const-mul-2 in 1 <50035> out 1 <50036>   # join
add in 2 <49772 50036> out 1 <50037>     # join source bit 9
const-mul-2 in 1 <50037> out 1 <50038>   # join
add in 2 <49771 50038> out 1 <50039>     # join source bit 8
const-mul-2 in 1 <50039> out 1 <50040>   # join
add in 2 <49770 50040> out 1 <50041>     # join source bit 7
const-mul-2 in 1 <50041> out 1 <50042>   # join
add in 2 <49769 50042> out 1 <50043>     # join source bit 6
const-mul-2 in 1 <50043> out 1 <50044>   # join
add in 2 <49768 50044> out 1 <50045>     # join source bit 5
const-mul-2 in 1 <50045> out 1 <50046>   # join
add in 2 <49767 50046> out 1 <50047>     # join source bit 4
const-mul-2 in 1 <50047> out 1 <50048>   # join
add in 2 <49766 50048> out 1 <50049>     # join source bit 3
const-mul-2 in 1 <50049> out 1 <50050>   # join
add in 2 <49765 50050> out 1 <50051>     # join source bit 2
const-mul-2 in 1 <50051> out 1 <50052>   # join
add in 2 <49764 50052> out 1 <50053>     # join source bit 1
const-mul-2 in 1 <50053> out 1 <50054>   # join
add in 2 <49763 50054> out 1 <50055>     # join source bit 0
add in 2 <50055 50055> out 1 <50056>     # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <49760> out 1 <50057> # multiply-by-constant 4294967295
add in 2 <19 50057> out 1 <50058>        # 'CmpLT DFG.Input - DFG.Conditional'
split in 1 <50058> outplitBus
mul in 2 <50090 50056> out 1 <50322>     # cond trueterm
const-mul-neg-1 in 1 <50090> out 1 <50323> # cond minuscond
add in 2 <100 50323> out 1 <50324>       # cond negcond
mul in 2 <50324 49760> out 1 <50325>     # cond falseterm
add in 2 <50322 50325> out 1 <50326>     # cond result
add in 2 <49752 50326> out 1 <50327>     # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
split in 1 <50327> outplitBus
const-mul-2 in 1 <50359> out 1 <50561>   # join source bit 31
add in 2 <50358 50561> out 1 <50562>     # join source bit 30
const-mul-2 in 1 <50562> out 1 <50563>   # join
add in 2 <50357 50563> out 1 <50564>     # join source bit 29
const-mul-2 in 1 <50564> out 1 <50565>   # join
add in 2 <50356 50565> out 1 <50566>     # join source bit 28
const-mul-2 in 1 <50566> out 1 <50567>   # join
add in 2 <50355 50567> out 1 <50568>     # join source bit 27
const-mul-2 in 1 <50568> out 1 <50569>   # join
add in 2 <50354 50569> out 1 <50570>     # join source bit 26
const-mul-2 in 1 <50570> out 1 <50571>   # join
add in 2 <50353 50571> out 1 <50572>     # join source bit 25
const-mul-2 in 1 <50572> out 1 <50573>   # join
add in 2 <50352 50573> out 1 <50574>     # join source bit 24
const-mul-2 in 1 <50574> out 1 <50575>   # join
add in 2 <50351 50575> out 1 <50576>     # join source bit 23
const-mul-2 in 1 <50576> out 1 <50577>   # join
add in 2 <50350 50577> out 1 <50578>     # join source bit 22
const-mul-2 in 1 <50578> out 1 <50579>   # join
add in 2 <50349 50579> out 1 <50580>     # join source bit 21
const-mul-2 in 1 <50580> out 1 <50581>   # join
add in 2 <50348 50581> out 1 <50582>     # join source bit 20
const-mul-2 in 1 <50582> out 1 <50583>   # join
add in 2 <50347 50583> out 1 <50584>     # join source bit 19
const-mul-2 in 1 <50584> out 1 <50585>   # join
add in 2 <50346 50585> out 1 <50586>     # join source bit 18
const-mul-2 in 1 <50586> out 1 <50587>   # join
add in 2 <50345 50587> out 1 <50588>     # join source bit 17
const-mul-2 in 1 <50588> out 1 <50589>   # join
add in 2 <50344 50589> out 1 <50590>     # join source bit 16
const-mul-2 in 1 <50590> out 1 <50591>   # join
add in 2 <50343 50591> out 1 <50592>     # join source bit 15
const-mul-2 in 1 <50592> out 1 <50593>   # join
add in 2 <50342 50593> out 1 <50594>     # join source bit 14
const-mul-2 in 1 <50594> out 1 <50595>   # join
add in 2 <50341 50595> out 1 <50596>     # join source bit 13
const-mul-2 in 1 <50596> out 1 <50597>   # join
add in 2 <50340 50597> out 1 <50598>     # join source bit 12
const-mul-2 in 1 <50598> out 1 <50599>   # join
add in 2 <50339 50599> out 1 <50600>     # join source bit 11
const-mul-2 in 1 <50600> out 1 <50601>   # join
add in 2 <50338 50601> out 1 <50602>     # join source bit 10
const-mul-2 in 1 <50602> out 1 <50603>   # join
add in 2 <50337 50603> out 1 <50604>     # join source bit 9
const-mul-2 in 1 <50604> out 1 <50605>   # join
add in 2 <50336 50605> out 1 <50606>     # join source bit 8
const-mul-2 in 1 <50606> out 1 <50607>   # join
add in 2 <50335 50607> out 1 <50608>     # join source bit 7
const-mul-2 in 1 <50608> out 1 <50609>   # join
add in 2 <50334 50609> out 1 <50610>     # join source bit 6
const-mul-2 in 1 <50610> out 1 <50611>   # join
add in 2 <50333 50611> out 1 <50612>     # join source bit 5
const-mul-2 in 1 <50612> out 1 <50613>   # join
add in 2 <50332 50613> out 1 <50614>     # join source bit 4
const-mul-2 in 1 <50614> out 1 <50615>   # join
add in 2 <50331 50615> out 1 <50616>     # join source bit 3
const-mul-2 in 1 <50616> out 1 <50617>   # join
add in 2 <50330 50617> out 1 <50618>     # join source bit 2
const-mul-2 in 1 <50618> out 1 <50619>   # join
add in 2 <50329 50619> out 1 <50620>     # join source bit 1
const-mul-2 in 1 <50620> out 1 <50621>   # join
add in 2 <50328 50621> out 1 <50622>     # join source bit 0
add in 2 <50622 50622> out 1 <50623>     # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <49752> out 1 <50624> # multiply-by-constant 4294967295
add in 2 <50326 50624> out 1 <50625>     # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <50625> outplitBus
mul in 2 <50657 50623> out 1 <50891>     # cond trueterm
const-mul-neg-1 in 1 <50657> out 1 <50892> # cond minuscond
add in 2 <100 50892> out 1 <50893>       # cond negcond
mul in 2 <50893 49752> out 1 <50894>     # cond falseterm
add in 2 <50891 50894> out 1 <50895>     # cond result
mul in 2 <49580 49544> out 1 <50896>     # cond trueterm
const-mul-neg-1 in 1 <49580> out 1 <50897> # cond minuscond
add in 2 <100 50897> out 1 <50898>       # cond negcond
mul in 2 <50898 49541> out 1 <50899>     # cond falseterm
add in 2 <50896 50899> out 1 <50900>     # cond result
mul in 2 <49436 49400> out 1 <50901>     # cond trueterm
const-mul-neg-1 in 1 <49436> out 1 <50902> # cond minuscond
add in 2 <100 50902> out 1 <50903>       # cond negcond
mul in 2 <50903 49397> out 1 <50904>     # cond falseterm
add in 2 <50901 50904> out 1 <50905>     # cond result
const-mul-ffffffff in 1 <50905> out 1 <50906> # multiply-by-constant 4294967295
add in 2 <50905 50900> out 1 <50907>     # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
add in 2 <50907 50906> out 1 <50908>     # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <50908> out 1 <50909> # multiply-by-constant 4294967295
add in 2 <50907 50909> out 1 <50910>     # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <50905> out 1 <50911> # multiply-by-constant 4294967295
add in 2 <50900 50911> out 1 <50912>     # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <50912> out 200 <50913 50914 50915 50916 50917 50918 50919 50920 50921 50922 50923 50924 50925 50926 50927 50928 50929 50930 50931 50932 50933 50934 50935 50936 50937 50938 50939 50940 50941 50942 50943 50944 50945 50946 50947 50948 50949 50950 50951 50952 50953 50954 50955 50956 50957 50958 50959 50960 50961 50962 50963 50964 50965 50966 50967 50968 50969 50970 50971 50972 50973 50974 50975 50976 50977 50978 50979 50980 50981 50982 50983 50984 50985 50986 50987 50988 50989 50990 50991 50992 50993 50994 50995 50996 50997 50998 50999 51000 51001 51002 51003 51004 51005 51006 51007 51008 51009 51010 51011 51012 51013 51014 51015 51016 51017 51018 51019 51020 51021 51022 51023 51024 51025 51026 51027 51028 51029 51030 51031 51032 51033 51034 51035 51036 51037 51038 51039 51040 51041 51042 51043 51044 51045 51046 51047 51048 51049 51050 51051 51052 51053 51054 51055 51056 51057 51058 51059 51060 51061 51062 51063 51064 51065 51066 51067 51068 51069 51070 51071 51072 51073 51074 51075 51076 51077 51078 51079 51080 51081 51082 51083 51084 51085 51086 51087 51088 51089 51090 51091 51092 51093 51094 51095 51096 51097 51098 51099 51100 51101 51102 51103 51104 51105 51106 51107 51108 51109 51110 51111 51112> # SplitBus
mul in 2 <50944 50910> out 1 <51113>     # cond trueterm
const-mul-neg-1 in 1 <50944> out 1 <51114> # cond minuscond
add in 2 <100 51114> out 1 <51115>       # cond negcond
mul in 2 <51115 50900> out 1 <51116>     # cond falseterm
add in 2 <51113 51116> out 1 <51117>     # cond result
const-mul-ffffffff in 1 <51117> out 1 <51118> # multiply-by-constant 4294967295
add in 2 <51117 50895> out 1 <51119>     # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
split in 1 <51119> outplitBus
const-mul-2 in 1 <51151> out 1 <51355>   # join source bit 31
add in 2 <51150 51355> out 1 <51356>     # join source bit 30
const-mul-2 in 1 <51356> out 1 <51357>   # join
add in 2 <51149 51357> out 1 <51358>     # join source bit 29
const-mul-2 in 1 <51358> out 1 <51359>   # join
add in 2 <51148 51359> out 1 <51360>     # join source bit 28
const-mul-2 in 1 <51360> out 1 <51361>   # join
add in 2 <51147 51361> out 1 <51362>     # join source bit 27
const-mul-2 in 1 <51362> out 1 <51363>   # join
add in 2 <51146 51363> out 1 <51364>     # join source bit 26
const-mul-2 in 1 <51364> out 1 <51365>   # join
add in 2 <51145 51365> out 1 <51366>     # join source bit 25
const-mul-2 in 1 <51366> out 1 <51367>   # join
add in 2 <51144 51367> out 1 <51368>     # join source bit 24
const-mul-2 in 1 <51368> out 1 <51369>   # join
add in 2 <51143 51369> out 1 <51370>     # join source bit 23
const-mul-2 in 1 <51370> out 1 <51371>   # join
add in 2 <51142 51371> out 1 <51372>     # join source bit 22
const-mul-2 in 1 <51372> out 1 <51373>   # join
add in 2 <51141 51373> out 1 <51374>     # join source bit 21
const-mul-2 in 1 <51374> out 1 <51375>   # join
add in 2 <51140 51375> out 1 <51376>     # join source bit 20
const-mul-2 in 1 <51376> out 1 <51377>   # join
add in 2 <51139 51377> out 1 <51378>     # join source bit 19
const-mul-2 in 1 <51378> out 1 <51379>   # join
add in 2 <51138 51379> out 1 <51380>     # join source bit 18
const-mul-2 in 1 <51380> out 1 <51381>   # join
add in 2 <51137 51381> out 1 <51382>     # join source bit 17
const-mul-2 in 1 <51382> out 1 <51383>   # join
add in 2 <51136 51383> out 1 <51384>     # join source bit 16
const-mul-2 in 1 <51384> out 1 <51385>   # join
add in 2 <51135 51385> out 1 <51386>     # join source bit 15
const-mul-2 in 1 <51386> out 1 <51387>   # join
add in 2 <51134 51387> out 1 <51388>     # join source bit 14
const-mul-2 in 1 <51388> out 1 <51389>   # join
add in 2 <51133 51389> out 1 <51390>     # join source bit 13
const-mul-2 in 1 <51390> out 1 <51391>   # join
add in 2 <51132 51391> out 1 <51392>     # join source bit 12
const-mul-2 in 1 <51392> out 1 <51393>   # join
add in 2 <51131 51393> out 1 <51394>     # join source bit 11
const-mul-2 in 1 <51394> out 1 <51395>   # join
add in 2 <51130 51395> out 1 <51396>     # join source bit 10
const-mul-2 in 1 <51396> out 1 <51397>   # join
add in 2 <51129 51397> out 1 <51398>     # join source bit 9
const-mul-2 in 1 <51398> out 1 <51399>   # join
add in 2 <51128 51399> out 1 <51400>     # join source bit 8
const-mul-2 in 1 <51400> out 1 <51401>   # join
add in 2 <51127 51401> out 1 <51402>     # join source bit 7
const-mul-2 in 1 <51402> out 1 <51403>   # join
add in 2 <51126 51403> out 1 <51404>     # join source bit 6
const-mul-2 in 1 <51404> out 1 <51405>   # join
add in 2 <51125 51405> out 1 <51406>     # join source bit 5
const-mul-2 in 1 <51406> out 1 <51407>   # join
add in 2 <51124 51407> out 1 <51408>     # join source bit 4
const-mul-2 in 1 <51408> out 1 <51409>   # join
add in 2 <51123 51409> out 1 <51410>     # join source bit 3
const-mul-2 in 1 <51410> out 1 <51411>   # join
add in 2 <51122 51411> out 1 <51412>     # join source bit 2
const-mul-2 in 1 <51412> out 1 <51413>   # join
add in 2 <51121 51413> out 1 <51414>     # join source bit 1
const-mul-2 in 1 <51414> out 1 <51415>   # join
add in 2 <51120 51415> out 1 <51416>     # join source bit 0
add in 2 <51416 51416> out 1 <51417>     # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <51417> out 1 <51418> # multiply-by-constant 4294967295
add in 2 <51119 51418> out 1 <51419>     # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <51117> out 1 <51420> # multiply-by-constant 4294967295
add in 2 <50895 51420> out 1 <51421>     # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <51421> outplitBus
mul in 2 <51453 51419> out 1 <51689>     # cond trueterm
const-mul-neg-1 in 1 <51453> out 1 <51690> # cond minuscond
add in 2 <100 51690> out 1 <51691>       # cond negcond
mul in 2 <51691 50895> out 1 <51692>     # cond falseterm
add in 2 <51689 51692> out 1 <51693>     # cond result
add in 2 <51693 104> out 1 <51694>       # ArithBusReq.AddReq(DFG.Conditional,DFG.Constant)
const-mul-ffffffff in 1 <17> out 1 <51695> # multiply-by-constant 4294967295
add in 2 <51694 51695> out 1 <51696>     # 'CmpLT DFG.Add - DFG.Input'
split in 1 <51696> outplitBus
mul in 2 <51728 103> out 1 <51935>       # cond trueterm
const-mul-neg-1 in 1 <51728> out 1 <51936> # cond minuscond
add in 2 <100 51936> out 1 <51937>       # cond negcond
mul in 2 <51937 102> out 1 <51938>       # cond falseterm
add in 2 <51935 51938> out 1 <51939>     # cond result
add in 2 <51693 3084> out 1 <51940>      # ArithBusReq.AddReq(DFG.Conditional,DFG.Negate)
const-mul-ffffffff in 1 <51940> out 1 <51941> # multiply-by-constant 4294967295
add in 2 <17 51941> out 1 <51942>        # 'CmpLT DFG.Input - DFG.Subtract'
split in 1 <51942> out 270 <51943 51944 51945 51946 51947 51948 51949 51950 51951 51952 51953 51954 51955 51956 51957 51958 51959 51960 51961 51962 51963 51964 51965 51966 51967 51968 51969 51970 51971 51972 51973 51974 51975 51976 51977 51978 51979 51980 51981 51982 51983 51984 51985 51986 51987 51988 51989 51990 51991 51992 51993 51994 51995 51996 51997 51998 51999 52000 52001 52002 52003 52004 52005 52006 52007 52008 52009 52010 52011 52012 52013 52014 52015 52016 52017 52018 52019 52020 52021 52022 52023 52024 52025 52026 52027 52028 52029 52030 52031 52032 52033 52034 52035 52036 52037 52038 52039 52040 52041 52042 52043 52044 52045 52046 52047 52048 52049 52050 52051 52052 52053 52054 52055 52056 52057 52058 52059 52060 52061 52062 52063 52064 52065 52066 52067 52068 52069 52070 52071 52072 52073 52074 52075 52076 52077 52078 52079 52080 52081 52082 52083 52084 52085 52086 52087 52088 52089 52090 52091 52092 52093 52094 52095 52096 52097 52098 52099 52100 52101 52102 52103 52104 52105 52106 52107 52108 52109 52110 52111 52112 52113 52114 52115 52116 52117 52118 52119 52120 52121 52122 52123 52124 52125 52126 52127 52128 52129 52130 52131 52132 52133 52134 52135 52136 52137 52138 52139 52140 52141 52142 52143 52144 52145 52146 52147 52148 52149 52150 52151 52152 52153 52154 52155 52156 52157 52158 52159 52160 52161 52162 52163 52164 52165 52166 52167 52168 52169 52170 52171 52172 52173 52174 52175 52176 52177 52178 52179 52180 52181 52182 52183 52184 52185 52186 52187 52188 52189 52190 52191 52192 52193 52194 52195 52196 52197 52198 52199 52200 52201 52202 52203 52204 52205 52206 52207 52208 52209 52210 52211 52212> # SplitBus
mul in 2 <51974 103> out 1 <52213>       # cond trueterm
const-mul-neg-1 in 1 <51974> out 1 <52214> # cond minuscond
add in 2 <100 52214> out 1 <52215>       # cond negcond
mul in 2 <52215 51939> out 1 <52216>     # cond falseterm
add in 2 <52213 52216> out 1 <52217>     # cond result
const-mul-ffffffff in 1 <16> out 1 <52218> # multiply-by-constant 4294967295
add in 2 <16 17> out 1 <52219>           # ArithBusReq.AddReq(DFG.Input,DFG.Input)
add in 2 <52219 52218> out 1 <52220>     # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <52220> out 1 <52221> # multiply-by-constant 4294967295
add in 2 <52219 52221> out 1 <52222>     # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <16> out 1 <52223> # multiply-by-constant 4294967295
add in 2 <17 52223> out 1 <52224>        # 'CmpLT DFG.Input - DFG.Input'
split in 1 <52224> out 65 <52225 52226 52227 52228 52229 52230 52231 52232 52233 52234 52235 52236 52237 52238 52239 52240 52241 52242 52243 52244 52245 52246 52247 52248 52249 52250 52251 52252 52253 52254 52255 52256 52257 52258 52259 52260 52261 52262 52263 52264 52265 52266 52267 52268 52269 52270 52271 52272 52273 52274 52275 52276 52277 52278 52279 52280 52281 52282 52283 52284 52285 52286 52287 52288 52289> # SplitBus
mul in 2 <52256 52222> out 1 <52290>     # cond trueterm
const-mul-neg-1 in 1 <52256> out 1 <52291> # cond minuscond
add in 2 <100 52291> out 1 <52292>       # cond negcond
mul in 2 <52292 17> out 1 <52293>        # cond falseterm
add in 2 <52290 52293> out 1 <52294>     # cond result
const-mul-ffffffff in 1 <52294> out 1 <52295> # multiply-by-constant 4294967295
add in 2 <52294 18> out 1 <52296>        # ArithBusReq.AddReq(DFG.Conditional,DFG.Input)
add in 2 <52296 52295> out 1 <52297>     # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <52297> out 1 <52298> # multiply-by-constant 4294967295
add in 2 <52296 52298> out 1 <52299>     # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <52294> out 1 <52300> # multiply-by-constant 4294967295
add in 2 <18 52300> out 1 <52301>        # 'CmpLT DFG.Input - DFG.Conditional'
split in 1 <52301> outplitBus
mul in 2 <52333 52299> out 1 <52433>     # cond trueterm
const-mul-neg-1 in 1 <52333> out 1 <52434> # cond minuscond
add in 2 <100 52434> out 1 <52435>       # cond negcond
mul in 2 <52435 18> out 1 <52436>        # cond falseterm
add in 2 <52433 52436> out 1 <52437>     # cond result
const-mul-ffffffff in 1 <52437> out 1 <52438> # multiply-by-constant 4294967295
add in 2 <52437 19> out 1 <52439>        # ArithBusReq.AddReq(DFG.Conditional,DFG.Input)
add in 2 <52439 52438> out 1 <52440>     # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <52437> out 1 <52441> # multiply-by-constant 4294967295
add in 2 <19 52441> out 1 <52442>        # 'CmpLT DFG.Input - DFG.Conditional'
split in 1 <52442> out 197 <52443 52444 52445 52446 52447 52448 52449 52450 52451 52452 52453 52454 52455 52456 52457 52458 52459 52460 52461 52462 52463 52464 52465 52466 52467 52468 52469 52470 52471 52472 52473 52474 52475 52476 52477 52478 52479 52480 52481 52482 52483 52484 52485 52486 52487 52488 52489 52490 52491 52492 52493 52494 52495 52496 52497 52498 52499 52500 52501 52502 52503 52504 52505 52506 52507 52508 52509 52510 52511 52512 52513 52514 52515 52516 52517 52518 52519 52520 52521 52522 52523 52524 52525 52526 52527 52528 52529 52530 52531 52532 52533 52534 52535 52536 52537 52538 52539 52540 52541 52542 52543 52544 52545 52546 52547 52548 52549 52550 52551 52552 52553 52554 52555 52556 52557 52558 52559 52560 52561 52562 52563 52564 52565 52566 52567 52568 52569 52570 52571 52572 52573 52574 52575 52576 52577 52578 52579 52580 52581 52582 52583 52584 52585 52586 52587 52588 52589 52590 52591 52592 52593 52594 52595 52596 52597 52598 52599 52600 52601 52602 52603 52604 52605 52606 52607 52608 52609 52610 52611 52612 52613 52614 52615 52616 52617 52618 52619 52620 52621 52622 52623 52624 52625 52626 52627 52628 52629 52630 52631 52632 52633 52634 52635 52636 52637 52638 52639> # SplitBus
mul in 2 <52474 52440> out 1 <52640>     # cond trueterm
const-mul-neg-1 in 1 <52474> out 1 <52641> # cond minuscond
add in 2 <100 52641> out 1 <52642>       # cond negcond
mul in 2 <52642 52437> out 1 <52643>     # cond falseterm
add in 2 <52640 52643> out 1 <52644>     # cond result
mul in 2 <52333 52297> out 1 <52645>     # cond trueterm
const-mul-neg-1 in 1 <52333> out 1 <52646> # cond minuscond
add in 2 <100 52646> out 1 <52647>       # cond negcond
mul in 2 <52647 52294> out 1 <52648>     # cond falseterm
add in 2 <52645 52648> out 1 <52649>     # cond result
mul in 2 <52256 52220> out 1 <52650>     # cond trueterm
const-mul-neg-1 in 1 <52256> out 1 <52651> # cond minuscond
add in 2 <100 52651> out 1 <52652>       # cond negcond
mul in 2 <52652 16> out 1 <52653>        # cond falseterm
add in 2 <52650 52653> out 1 <52654>     # cond result
const-mul-ffffffff in 1 <52654> out 1 <52655> # multiply-by-constant 4294967295
add in 2 <52654 52649> out 1 <52656>     # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
add in 2 <52656 52655> out 1 <52657>     # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <52657> out 1 <52658> # multiply-by-constant 4294967295
add in 2 <52656 52658> out 1 <52659>     # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <52654> out 1 <52660> # multiply-by-constant 4294967295
add in 2 <52649 52660> out 1 <52661>     # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <52661> outplitBus
mul in 2 <52693 52659> out 1 <52794>     # cond trueterm
const-mul-neg-1 in 1 <52693> out 1 <52795> # cond minuscond
add in 2 <100 52795> out 1 <52796>       # cond negcond
mul in 2 <52796 52649> out 1 <52797>     # cond falseterm
add in 2 <52794 52797> out 1 <52798>     # cond result
const-mul-ffffffff in 1 <52798> out 1 <52799> # multiply-by-constant 4294967295
add in 2 <52798 52644> out 1 <52800>     # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
add in 2 <52800 52799> out 1 <52801>     # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <52801> out 1 <52802> # multiply-by-constant 4294967295
add in 2 <52800 52802> out 1 <52803>     # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <52798> out 1 <52804> # multiply-by-constant 4294967295
add in 2 <52644 52804> out 1 <52805>     # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <52805> out 199 <52806 52807 52808 52809 52810 52811 52812 52813 52814 52815 52816 52817 52818 52819 52820 52821 52822 52823 52824 52825 52826 52827 52828 52829 52830 52831 52832 52833 52834 52835 52836 52837 52838 52839 52840 52841 52842 52843 52844 52845 52846 52847 52848 52849 52850 52851 52852 52853 52854 52855 52856 52857 52858 52859 52860 52861 52862 52863 52864 52865 52866 52867 52868 52869 52870 52871 52872 52873 52874 52875 52876 52877 52878 52879 52880 52881 52882 52883 52884 52885 52886 52887 52888 52889 52890 52891 52892 52893 52894 52895 52896 52897 52898 52899 52900 52901 52902 52903 52904 52905 52906 52907 52908 52909 52910 52911 52912 52913 52914 52915 52916 52917 52918 52919 52920 52921 52922 52923 52924 52925 52926 52927 52928 52929 52930 52931 52932 52933 52934 52935 52936 52937 52938 52939 52940 52941 52942 52943 52944 52945 52946 52947 52948 52949 52950 52951 52952 52953 52954 52955 52956 52957 52958 52959 52960 52961 52962 52963 52964 52965 52966 52967 52968 52969 52970 52971 52972 52973 52974 52975 52976 52977 52978 52979 52980 52981 52982 52983 52984 52985 52986 52987 52988 52989 52990 52991 52992 52993 52994 52995 52996 52997 52998 52999 53000 53001 53002 53003 53004> # SplitBus
mul in 2 <52837 52803> out 1 <53005>     # cond trueterm
const-mul-neg-1 in 1 <52837> out 1 <53006> # cond minuscond
add in 2 <100 53006> out 1 <53007>       # cond negcond
mul in 2 <53007 52644> out 1 <53008>     # cond falseterm
add in 2 <53005 53008> out 1 <53009>     # cond result
const-mul-ffffffff in 1 <53009> out 1 <53010> # multiply-by-constant 4294967295
const-mul-ffffffff in 1 <52440> out 1 <53011> # multiply-by-constant 4294967295
add in 2 <52439 53011> out 1 <53012>     # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
mul in 2 <52474 53012> out 1 <53013>     # cond trueterm
const-mul-neg-1 in 1 <52474> out 1 <53014> # cond minuscond
add in 2 <100 53014> out 1 <53015>       # cond negcond
mul in 2 <53015 19> out 1 <53016>        # cond falseterm
add in 2 <53013 53016> out 1 <53017>     # cond result
const-mul-ffffffff in 1 <53017> out 1 <53018> # multiply-by-constant 4294967295
add in 2 <53017 20> out 1 <53019>        # ArithBusReq.AddReq(DFG.Conditional,DFG.Input)
split in 1 <53019> outplitBus
const-mul-2 in 1 <53051> out 1 <53251>   # join source bit 31
add in 2 <53050 53251> out 1 <53252>     # join source bit 30
const-mul-2 in 1 <53252> out 1 <53253>   # join
add in 2 <53049 53253> out 1 <53254>     # join source bit 29
const-mul-2 in 1 <53254> out 1 <53255>   # join
add in 2 <53048 53255> out 1 <53256>     # join source bit 28
const-mul-2 in 1 <53256> out 1 <53257>   # join
add in 2 <53047 53257> out 1 <53258>     # join source bit 27
const-mul-2 in 1 <53258> out 1 <53259>   # join
add in 2 <53046 53259> out 1 <53260>     # join source bit 26
const-mul-2 in 1 <53260> out 1 <53261>   # join
add in 2 <53045 53261> out 1 <53262>     # join source bit 25
const-mul-2 in 1 <53262> out 1 <53263>   # join
add in 2 <53044 53263> out 1 <53264>     # join source bit 24
const-mul-2 in 1 <53264> out 1 <53265>   # join
add in 2 <53043 53265> out 1 <53266>     # join source bit 23
const-mul-2 in 1 <53266> out 1 <53267>   # join
add in 2 <53042 53267> out 1 <53268>     # join source bit 22
const-mul-2 in 1 <53268> out 1 <53269>   # join
add in 2 <53041 53269> out 1 <53270>     # join source bit 21
const-mul-2 in 1 <53270> out 1 <53271>   # join
add in 2 <53040 53271> out 1 <53272>     # join source bit 20
const-mul-2 in 1 <53272> out 1 <53273>   # join
add in 2 <53039 53273> out 1 <53274>     # join source bit 19
const-mul-2 in 1 <53274> out 1 <53275>   # join
add in 2 <53038 53275> out 1 <53276>     # join source bit 18
const-mul-2 in 1 <53276> out 1 <53277>   # join
add in 2 <53037 53277> out 1 <53278>     # join source bit 17
const-mul-2 in 1 <53278> out 1 <53279>   # join
add in 2 <53036 53279> out 1 <53280>     # join source bit 16
const-mul-2 in 1 <53280> out 1 <53281>   # join
add in 2 <53035 53281> out 1 <53282>     # join source bit 15
const-mul-2 in 1 <53282> out 1 <53283>   # join
add in 2 <53034 53283> out 1 <53284>     # join source bit 14
const-mul-2 in 1 <53284> out 1 <53285>   # join
add in 2 <53033 53285> out 1 <53286>     # join source bit 13
const-mul-2 in 1 <53286> out 1 <53287>   # join
add in 2 <53032 53287> out 1 <53288>     # join source bit 12
const-mul-2 in 1 <53288> out 1 <53289>   # join
add in 2 <53031 53289> out 1 <53290>     # join source bit 11
const-mul-2 in 1 <53290> out 1 <53291>   # join
add in 2 <53030 53291> out 1 <53292>     # join source bit 10
const-mul-2 in 1 <53292> out 1 <53293>   # join
add in 2 <53029 53293> out 1 <53294>     # join source bit 9
const-mul-2 in 1 <53294> out 1 <53295>   # join
add in 2 <53028 53295> out 1 <53296>     # join source bit 8
const-mul-2 in 1 <53296> out 1 <53297>   # join
add in 2 <53027 53297> out 1 <53298>     # join source bit 7
const-mul-2 in 1 <53298> out 1 <53299>   # join
add in 2 <53026 53299> out 1 <53300>     # join source bit 6
const-mul-2 in 1 <53300> out 1 <53301>   # join
add in 2 <53025 53301> out 1 <53302>     # join source bit 5
const-mul-2 in 1 <53302> out 1 <53303>   # join
add in 2 <53024 53303> out 1 <53304>     # join source bit 4
const-mul-2 in 1 <53304> out 1 <53305>   # join
add in 2 <53023 53305> out 1 <53306>     # join source bit 3
const-mul-2 in 1 <53306> out 1 <53307>   # join
add in 2 <53022 53307> out 1 <53308>     # join source bit 2
const-mul-2 in 1 <53308> out 1 <53309>   # join
add in 2 <53021 53309> out 1 <53310>     # join source bit 1
const-mul-2 in 1 <53310> out 1 <53311>   # join
add in 2 <53020 53311> out 1 <53312>     # join source bit 0
add in 2 <53312 53312> out 1 <53313>     # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <53017> out 1 <53314> # multiply-by-constant 4294967295
add in 2 <20 53314> out 1 <53315>        # 'CmpLT DFG.Input - DFG.Conditional'
split in 1 <53315> outplitBus
mul in 2 <53347 53313> out 1 <53579>     # cond trueterm
const-mul-neg-1 in 1 <53347> out 1 <53580> # cond minuscond
add in 2 <100 53580> out 1 <53581>       # cond negcond
mul in 2 <53581 53017> out 1 <53582>     # cond falseterm
add in 2 <53579 53582> out 1 <53583>     # cond result
add in 2 <53009 53583> out 1 <53584>     # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
split in 1 <53584> outplitBus
const-mul-2 in 1 <53616> out 1 <53818>   # join source bit 31
add in 2 <53615 53818> out 1 <53819>     # join source bit 30
const-mul-2 in 1 <53819> out 1 <53820>   # join
add in 2 <53614 53820> out 1 <53821>     # join source bit 29
const-mul-2 in 1 <53821> out 1 <53822>   # join
add in 2 <53613 53822> out 1 <53823>     # join source bit 28
const-mul-2 in 1 <53823> out 1 <53824>   # join
add in 2 <53612 53824> out 1 <53825>     # join source bit 27
const-mul-2 in 1 <53825> out 1 <53826>   # join
add in 2 <53611 53826> out 1 <53827>     # join source bit 26
const-mul-2 in 1 <53827> out 1 <53828>   # join
add in 2 <53610 53828> out 1 <53829>     # join source bit 25
const-mul-2 in 1 <53829> out 1 <53830>   # join
add in 2 <53609 53830> out 1 <53831>     # join source bit 24
const-mul-2 in 1 <53831> out 1 <53832>   # join
add in 2 <53608 53832> out 1 <53833>     # join source bit 23
const-mul-2 in 1 <53833> out 1 <53834>   # join
add in 2 <53607 53834> out 1 <53835>     # join source bit 22
const-mul-2 in 1 <53835> out 1 <53836>   # join
add in 2 <53606 53836> out 1 <53837>     # join source bit 21
const-mul-2 in 1 <53837> out 1 <53838>   # join
add in 2 <53605 53838> out 1 <53839>     # join source bit 20
const-mul-2 in 1 <53839> out 1 <53840>   # join
add in 2 <53604 53840> out 1 <53841>     # join source bit 19
const-mul-2 in 1 <53841> out 1 <53842>   # join
add in 2 <53603 53842> out 1 <53843>     # join source bit 18
const-mul-2 in 1 <53843> out 1 <53844>   # join
add in 2 <53602 53844> out 1 <53845>     # join source bit 17
const-mul-2 in 1 <53845> out 1 <53846>   # join
add in 2 <53601 53846> out 1 <53847>     # join source bit 16
const-mul-2 in 1 <53847> out 1 <53848>   # join
add in 2 <53600 53848> out 1 <53849>     # join source bit 15
const-mul-2 in 1 <53849> out 1 <53850>   # join
add in 2 <53599 53850> out 1 <53851>     # join source bit 14
const-mul-2 in 1 <53851> out 1 <53852>   # join
add in 2 <53598 53852> out 1 <53853>     # join source bit 13
const-mul-2 in 1 <53853> out 1 <53854>   # join
add in 2 <53597 53854> out 1 <53855>     # join source bit 12
const-mul-2 in 1 <53855> out 1 <53856>   # join
add in 2 <53596 53856> out 1 <53857>     # join source bit 11
const-mul-2 in 1 <53857> out 1 <53858>   # join
add in 2 <53595 53858> out 1 <53859>     # join source bit 10
const-mul-2 in 1 <53859> out 1 <53860>   # join
add in 2 <53594 53860> out 1 <53861>     # join source bit 9
const-mul-2 in 1 <53861> out 1 <53862>   # join
add in 2 <53593 53862> out 1 <53863>     # join source bit 8
const-mul-2 in 1 <53863> out 1 <53864>   # join
add in 2 <53592 53864> out 1 <53865>     # join source bit 7
const-mul-2 in 1 <53865> out 1 <53866>   # join
add in 2 <53591 53866> out 1 <53867>     # join source bit 6
const-mul-2 in 1 <53867> out 1 <53868>   # join
add in 2 <53590 53868> out 1 <53869>     # join source bit 5
const-mul-2 in 1 <53869> out 1 <53870>   # join
add in 2 <53589 53870> out 1 <53871>     # join source bit 4
const-mul-2 in 1 <53871> out 1 <53872>   # join
add in 2 <53588 53872> out 1 <53873>     # join source bit 3
const-mul-2 in 1 <53873> out 1 <53874>   # join
add in 2 <53587 53874> out 1 <53875>     # join source bit 2
const-mul-2 in 1 <53875> out 1 <53876>   # join
add in 2 <53586 53876> out 1 <53877>     # join source bit 1
const-mul-2 in 1 <53877> out 1 <53878>   # join
add in 2 <53585 53878> out 1 <53879>     # join source bit 0
add in 2 <53879 53879> out 1 <53880>     # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <53009> out 1 <53881> # multiply-by-constant 4294967295
add in 2 <53583 53881> out 1 <53882>     # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <53882> out 265 <53883 53884 53885 53886 53887 53888 53889 53890 53891 53892 53893 53894 53895 53896 53897 53898 53899 53900 53901 53902 53903 53904 53905 53906 53907 53908 53909 53910 53911 53912 53913 53914 53915 53916 53917 53918 53919 53920 53921 53922 53923 53924 53925 53926 53927 53928 53929 53930 53931 53932 53933 53934 53935 53936 53937 53938 53939 53940 53941 53942 53943 53944 53945 53946 53947 53948 53949 53950 53951 53952 53953 53954 53955 53956 53957 53958 53959 53960 53961 53962 53963 53964 53965 53966 53967 53968 53969 53970 53971 53972 53973 53974 53975 53976 53977 53978 53979 53980 53981 53982 53983 53984 53985 53986 53987 53988 53989 53990 53991 53992 53993 53994 53995 53996 53997 53998 53999 54000 54001 54002 54003 54004 54005 54006 54007 54008 54009 54010 54011 54012 54013 54014 54015 54016 54017 54018 54019 54020 54021 54022 54023 54024 54025 54026 54027 54028 54029 54030 54031 54032 54033 54034 54035 54036 54037 54038 54039 54040 54041 54042 54043 54044 54045 54046 54047 54048 54049 54050 54051 54052 54053 54054 54055 54056 54057 54058 54059 54060 54061 54062 54063 54064 54065 54066 54067 54068 54069 54070 54071 54072 54073 54074 54075 54076 54077 54078 54079 54080 54081 54082 54083 54084 54085 54086 54087 54088 54089 54090 54091 54092 54093 54094 54095 54096 54097 54098 54099 54100 54101 54102 54103 54104 54105 54106 54107 54108 54109 54110 54111 54112 54113 54114 54115 54116 54117 54118 54119 54120 54121 54122 54123 54124 54125 54126 54127 54128 54129 54130 54131 54132 54133 54134 54135 54136 54137 54138 54139 54140 54141 54142 54143 54144 54145 54146 54147> # SplitBus
mul in 2 <53914 53880> out 1 <54148>     # cond trueterm
const-mul-neg-1 in 1 <53914> out 1 <54149> # cond minuscond
add in 2 <100 54149> out 1 <54150>       # cond negcond
mul in 2 <54150 53009> out 1 <54151>     # cond falseterm
add in 2 <54148 54151> out 1 <54152>     # cond result
mul in 2 <52837 52801> out 1 <54153>     # cond trueterm
const-mul-neg-1 in 1 <52837> out 1 <54154> # cond minuscond
add in 2 <100 54154> out 1 <54155>       # cond negcond
mul in 2 <54155 52798> out 1 <54156>     # cond falseterm
add in 2 <54153 54156> out 1 <54157>     # cond result
mul in 2 <52693 52657> out 1 <54158>     # cond trueterm
const-mul-neg-1 in 1 <52693> out 1 <54159> # cond minuscond
add in 2 <100 54159> out 1 <54160>       # cond negcond
mul in 2 <54160 52654> out 1 <54161>     # cond falseterm
add in 2 <54158 54161> out 1 <54162>     # cond result
const-mul-ffffffff in 1 <54162> out 1 <54163> # multiply-by-constant 4294967295
add in 2 <54162 54157> out 1 <54164>     # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
add in 2 <54164 54163> out 1 <54165>     # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <54165> out 1 <54166> # multiply-by-constant 4294967295
add in 2 <54164 54166> out 1 <54167>     # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <54162> out 1 <54168> # multiply-by-constant 4294967295
add in 2 <54157 54168> out 1 <54169>     # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <54169> out 200 <54170 54171 54172 54173 54174 54175 54176 54177 54178 54179 54180 54181 54182 54183 54184 54185 54186 54187 54188 54189 54190 54191 54192 54193 54194 54195 54196 54197 54198 54199 54200 54201 54202 54203 54204 54205 54206 54207 54208 54209 54210 54211 54212 54213 54214 54215 54216 54217 54218 54219 54220 54221 54222 54223 54224 54225 54226 54227 54228 54229 54230 54231 54232 54233 54234 54235 54236 54237 54238 54239 54240 54241 54242 54243 54244 54245 54246 54247 54248 54249 54250 54251 54252 54253 54254 54255 54256 54257 54258 54259 54260 54261 54262 54263 54264 54265 54266 54267 54268 54269 54270 54271 54272 54273 54274 54275 54276 54277 54278 54279 54280 54281 54282 54283 54284 54285 54286 54287 54288 54289 54290 54291 54292 54293 54294 54295 54296 54297 54298 54299 54300 54301 54302 54303 54304 54305 54306 54307 54308 54309 54310 54311 54312 54313 54314 54315 54316 54317 54318 54319 54320 54321 54322 54323 54324 54325 54326 54327 54328 54329 54330 54331 54332 54333 54334 54335 54336 54337 54338 54339 54340 54341 54342 54343 54344 54345 54346 54347 54348 54349 54350 54351 54352 54353 54354 54355 54356 54357 54358 54359 54360 54361 54362 54363 54364 54365 54366 54367 54368 54369> # SplitBus
mul in 2 <54201 54167> out 1 <54370>     # cond trueterm
const-mul-neg-1 in 1 <54201> out 1 <54371> # cond minuscond
add in 2 <100 54371> out 1 <54372>       # cond negcond
mul in 2 <54372 54157> out 1 <54373>     # cond falseterm
add in 2 <54370 54373> out 1 <54374>     # cond result
const-mul-ffffffff in 1 <54374> out 1 <54375> # multiply-by-constant 4294967295
add in 2 <54374 54152> out 1 <54376>     # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
split in 1 <54376> outplitBus
const-mul-2 in 1 <54408> out 1 <54612>   # join source bit 31
add in 2 <54407 54612> out 1 <54613>     # join source bit 30
const-mul-2 in 1 <54613> out 1 <54614>   # join
add in 2 <54406 54614> out 1 <54615>     # join source bit 29
const-mul-2 in 1 <54615> out 1 <54616>   # join
add in 2 <54405 54616> out 1 <54617>     # join source bit 28
const-mul-2 in 1 <54617> out 1 <54618>   # join
add in 2 <54404 54618> out 1 <54619>     # join source bit 27
const-mul-2 in 1 <54619> out 1 <54620>   # join
add in 2 <54403 54620> out 1 <54621>     # join source bit 26
const-mul-2 in 1 <54621> out 1 <54622>   # join
add in 2 <54402 54622> out 1 <54623>     # join source bit 25
const-mul-2 in 1 <54623> out 1 <54624>   # join
add in 2 <54401 54624> out 1 <54625>     # join source bit 24
const-mul-2 in 1 <54625> out 1 <54626>   # join
add in 2 <54400 54626> out 1 <54627>     # join source bit 23
const-mul-2 in 1 <54627> out 1 <54628>   # join
add in 2 <54399 54628> out 1 <54629>     # join source bit 22
const-mul-2 in 1 <54629> out 1 <54630>   # join
add in 2 <54398 54630> out 1 <54631>     # join source bit 21
const-mul-2 in 1 <54631> out 1 <54632>   # join
add in 2 <54397 54632> out 1 <54633>     # join source bit 20
const-mul-2 in 1 <54633> out 1 <54634>   # join
add in 2 <54396 54634> out 1 <54635>     # join source bit 19
const-mul-2 in 1 <54635> out 1 <54636>   # join
add in 2 <54395 54636> out 1 <54637>     # join source bit 18
const-mul-2 in 1 <54637> out 1 <54638>   # join
add in 2 <54394 54638> out 1 <54639>     # join source bit 17
const-mul-2 in 1 <54639> out 1 <54640>   # join
add in 2 <54393 54640> out 1 <54641>     # join source bit 16
const-mul-2 in 1 <54641> out 1 <54642>   # join
add in 2 <54392 54642> out 1 <54643>     # join source bit 15
const-mul-2 in 1 <54643> out 1 <54644>   # join
add in 2 <54391 54644> out 1 <54645>     # join source bit 14
const-mul-2 in 1 <54645> out 1 <54646>   # join
add in 2 <54390 54646> out 1 <54647>     # join source bit 13
const-mul-2 in 1 <54647> out 1 <54648>   # join
add in 2 <54389 54648> out 1 <54649>     # join source bit 12
const-mul-2 in 1 <54649> out 1 <54650>   # join
add in 2 <54388 54650> out 1 <54651>     # join source bit 11
const-mul-2 in 1 <54651> out 1 <54652>   # join
add in 2 <54387 54652> out 1 <54653>     # join source bit 10
const-mul-2 in 1 <54653> out 1 <54654>   # join
add in 2 <54386 54654> out 1 <54655>     # join source bit 9
const-mul-2 in 1 <54655> out 1 <54656>   # join
add in 2 <54385 54656> out 1 <54657>     # join source bit 8
const-mul-2 in 1 <54657> out 1 <54658>   # join
add in 2 <54384 54658> out 1 <54659>     # join source bit 7
const-mul-2 in 1 <54659> out 1 <54660>   # join
add in 2 <54383 54660> out 1 <54661>     # join source bit 6
const-mul-2 in 1 <54661> out 1 <54662>   # join
add in 2 <54382 54662> out 1 <54663>     # join source bit 5
const-mul-2 in 1 <54663> out 1 <54664>   # join
add in 2 <54381 54664> out 1 <54665>     # join source bit 4
const-mul-2 in 1 <54665> out 1 <54666>   # join
add in 2 <54380 54666> out 1 <54667>     # join source bit 3
const-mul-2 in 1 <54667> out 1 <54668>   # join
add in 2 <54379 54668> out 1 <54669>     # join source bit 2
const-mul-2 in 1 <54669> out 1 <54670>   # join
add in 2 <54378 54670> out 1 <54671>     # join source bit 1
const-mul-2 in 1 <54671> out 1 <54672>   # join
add in 2 <54377 54672> out 1 <54673>     # join source bit 0
add in 2 <54673 54673> out 1 <54674>     # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <54674> out 1 <54675> # multiply-by-constant 4294967295
add in 2 <54376 54675> out 1 <54676>     # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <54374> out 1 <54677> # multiply-by-constant 4294967295
add in 2 <54152 54677> out 1 <54678>     # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <54678> outplitBus
mul in 2 <54710 54676> out 1 <54946>     # cond trueterm
const-mul-neg-1 in 1 <54710> out 1 <54947> # cond minuscond
add in 2 <100 54947> out 1 <54948>       # cond negcond
mul in 2 <54948 54152> out 1 <54949>     # cond falseterm
add in 2 <54946 54949> out 1 <54950>     # cond result
add in 2 <54950 104> out 1 <54951>       # ArithBusReq.AddReq(DFG.Conditional,DFG.Constant)
const-mul-ffffffff in 1 <18> out 1 <54952> # multiply-by-constant 4294967295
add in 2 <54951 54952> out 1 <54953>     # 'CmpLT DFG.Add - DFG.Input'
split in 1 <54953> out 238 <54954 54955 54956 54957 54958 54959 54960 54961 54962 54963 54964 54965 54966 54967 54968 54969 54970 54971 54972 54973 54974 54975 54976 54977 54978 54979 54980 54981 54982 54983 54984 54985 54986 54987 54988 54989 54990 54991 54992 54993 54994 54995 54996 54997 54998 54999 55000 55001 55002 55003 55004 55005 55006 55007 55008 55009 55010 55011 55012 55013 55014 55015 55016 55017 55018 55019 55020 55021 55022 55023 55024 55025 55026 55027 55028 55029 55030 55031 55032 55033 55034 55035 55036 55037 55038 55039 55040 55041 55042 55043 55044 55045 55046 55047 55048 55049 55050 55051 55052 55053 55054 55055 55056 55057 55058 55059 55060 55061 55062 55063 55064 55065 55066 55067 55068 55069 55070 55071 55072 55073 55074 55075 55076 55077 55078 55079 55080 55081 55082 55083 55084 55085 55086 55087 55088 55089 55090 55091 55092 55093 55094 55095 55096 55097 55098 55099 55100 55101 55102 55103 55104 55105 55106 55107 55108 55109 55110 55111 55112 55113 55114 55115 55116 55117 55118 55119 55120 55121 55122 55123 55124 55125 55126 55127 55128 55129 55130 55131 55132 55133 55134 55135 55136 55137 55138 55139 55140 55141 55142 55143 55144 55145 55146 55147 55148 55149 55150 55151 55152 55153 55154 55155 55156 55157 55158 55159 55160 55161 55162 55163 55164 55165 55166 55167 55168 55169 55170 55171 55172 55173 55174 55175 55176 55177 55178 55179 55180 55181 55182 55183 55184 55185 55186 55187 55188 55189 55190 55191> # SplitBus
mul in 2 <54985 103> out 1 <55192>       # cond trueterm
const-mul-neg-1 in 1 <54985> out 1 <55193> # cond minuscond
add in 2 <100 55193> out 1 <55194>       # cond negcond
mul in 2 <55194 102> out 1 <55195>       # cond falseterm
add in 2 <55192 55195> out 1 <55196>     # cond result
add in 2 <54950 3084> out 1 <55197>      # ArithBusReq.AddReq(DFG.Conditional,DFG.Negate)
const-mul-ffffffff in 1 <55197> out 1 <55198> # multiply-by-constant 4294967295
add in 2 <18 55198> out 1 <55199>        # 'CmpLT DFG.Input - DFG.Subtract'
split in 1 <55199> outplitBus
mul in 2 <55231 103> out 1 <55470>       # cond trueterm
const-mul-neg-1 in 1 <55231> out 1 <55471> # cond minuscond
add in 2 <100 55471> out 1 <55472>       # cond negcond
mul in 2 <55472 55196> out 1 <55473>     # cond falseterm
add in 2 <55470 55473> out 1 <55474>     # cond result
const-mul-ffffffff in 1 <17> out 1 <55475> # multiply-by-constant 4294967295
add in 2 <17 18> out 1 <55476>           # ArithBusReq.AddReq(DFG.Input,DFG.Input)
add in 2 <55476 55475> out 1 <55477>     # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <55477> out 1 <55478> # multiply-by-constant 4294967295
add in 2 <55476 55478> out 1 <55479>     # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <17> out 1 <55480> # multiply-by-constant 4294967295
add in 2 <18 55480> out 1 <55481>        # 'CmpLT DFG.Input - DFG.Input'
split in 1 <55481> out 65 <55482 55483 55484 55485 55486 55487 55488 55489 55490 55491 55492 55493 55494 55495 55496 55497 55498 55499 55500 55501 55502 55503 55504 55505 55506 55507 55508 55509 55510 55511 55512 55513 55514 55515 55516 55517 55518 55519 55520 55521 55522 55523 55524 55525 55526 55527 55528 55529 55530 55531 55532 55533 55534 55535 55536 55537 55538 55539 55540 55541 55542 55543 55544 55545 55546> # SplitBus
mul in 2 <55513 55479> out 1 <55547>     # cond trueterm
const-mul-neg-1 in 1 <55513> out 1 <55548> # cond minuscond
add in 2 <100 55548> out 1 <55549>       # cond negcond
mul in 2 <55549 18> out 1 <55550>        # cond falseterm
add in 2 <55547 55550> out 1 <55551>     # cond result
const-mul-ffffffff in 1 <55551> out 1 <55552> # multiply-by-constant 4294967295
add in 2 <55551 19> out 1 <55553>        # ArithBusReq.AddReq(DFG.Conditional,DFG.Input)
add in 2 <55553 55552> out 1 <55554>     # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <55554> out 1 <55555> # multiply-by-constant 4294967295
add in 2 <55553 55555> out 1 <55556>     # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <55551> out 1 <55557> # multiply-by-constant 4294967295
add in 2 <19 55557> out 1 <55558>        # 'CmpLT DFG.Input - DFG.Conditional'
split in 1 <55558> outplitBus
mul in 2 <55590 55556> out 1 <55690>     # cond trueterm
const-mul-neg-1 in 1 <55590> out 1 <55691> # cond minuscond
add in 2 <100 55691> out 1 <55692>       # cond negcond
mul in 2 <55692 19> out 1 <55693>        # cond falseterm
add in 2 <55690 55693> out 1 <55694>     # cond result
const-mul-ffffffff in 1 <55694> out 1 <55695> # multiply-by-constant 4294967295
add in 2 <55694 20> out 1 <55696>        # ArithBusReq.AddReq(DFG.Conditional,DFG.Input)
add in 2 <55696 55695> out 1 <55697>     # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <55694> out 1 <55698> # multiply-by-constant 4294967295
add in 2 <20 55698> out 1 <55699>        # 'CmpLT DFG.Input - DFG.Conditional'
split in 1 <55699> out 197 <55700 55701 55702 55703 55704 55705 55706 55707 55708 55709 55710 55711 55712 55713 55714 55715 55716 55717 55718 55719 55720 55721 55722 55723 55724 55725 55726 55727 55728 55729 55730 55731 55732 55733 55734 55735 55736 55737 55738 55739 55740 55741 55742 55743 55744 55745 55746 55747 55748 55749 55750 55751 55752 55753 55754 55755 55756 55757 55758 55759 55760 55761 55762 55763 55764 55765 55766 55767 55768 55769 55770 55771 55772 55773 55774 55775 55776 55777 55778 55779 55780 55781 55782 55783 55784 55785 55786 55787 55788 55789 55790 55791 55792 55793 55794 55795 55796 55797 55798 55799 55800 55801 55802 55803 55804 55805 55806 55807 55808 55809 55810 55811 55812 55813 55814 55815 55816 55817 55818 55819 55820 55821 55822 55823 55824 55825 55826 55827 55828 55829 55830 55831 55832 55833 55834 55835 55836 55837 55838 55839 55840 55841 55842 55843 55844 55845 55846 55847 55848 55849 55850 55851 55852 55853 55854 55855 55856 55857 55858 55859 55860 55861 55862 55863 55864 55865 55866 55867 55868 55869 55870 55871 55872 55873 55874 55875 55876 55877 55878 55879 55880 55881 55882 55883 55884 55885 55886 55887 55888 55889 55890 55891 55892 55893 55894 55895 55896> # SplitBus
mul in 2 <55731 55697> out 1 <55897>     # cond trueterm
const-mul-neg-1 in 1 <55731> out 1 <55898> # cond minuscond
add in 2 <100 55898> out 1 <55899>       # cond negcond
mul in 2 <55899 55694> out 1 <55900>     # cond falseterm
add in 2 <55897 55900> out 1 <55901>     # cond result
mul in 2 <55590 55554> out 1 <55902>     # cond trueterm
const-mul-neg-1 in 1 <55590> out 1 <55903> # cond minuscond
add in 2 <100 55903> out 1 <55904>       # cond negcond
mul in 2 <55904 55551> out 1 <55905>     # cond falseterm
add in 2 <55902 55905> out 1 <55906>     # cond result
mul in 2 <55513 55477> out 1 <55907>     # cond trueterm
const-mul-neg-1 in 1 <55513> out 1 <55908> # cond minuscond
add in 2 <100 55908> out 1 <55909>       # cond negcond
mul in 2 <55909 17> out 1 <55910>        # cond falseterm
add in 2 <55907 55910> out 1 <55911>     # cond result
const-mul-ffffffff in 1 <55911> out 1 <55912> # multiply-by-constant 4294967295
add in 2 <55911 55906> out 1 <55913>     # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
add in 2 <55913 55912> out 1 <55914>     # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <55914> out 1 <55915> # multiply-by-constant 4294967295
add in 2 <55913 55915> out 1 <55916>     # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <55911> out 1 <55917> # multiply-by-constant 4294967295
add in 2 <55906 55917> out 1 <55918>     # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <55918> outplitBus
mul in 2 <55950 55916> out 1 <56051>     # cond trueterm
const-mul-neg-1 in 1 <55950> out 1 <56052> # cond minuscond
add in 2 <100 56052> out 1 <56053>       # cond negcond
mul in 2 <56053 55906> out 1 <56054>     # cond falseterm
add in 2 <56051 56054> out 1 <56055>     # cond result
const-mul-ffffffff in 1 <56055> out 1 <56056> # multiply-by-constant 4294967295
add in 2 <56055 55901> out 1 <56057>     # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
add in 2 <56057 56056> out 1 <56058>     # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <56058> out 1 <56059> # multiply-by-constant 4294967295
add in 2 <56057 56059> out 1 <56060>     # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <56055> out 1 <56061> # multiply-by-constant 4294967295
add in 2 <55901 56061> out 1 <56062>     # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <56062> out 199 <56063 56064 56065 56066 56067 56068 56069 56070 56071 56072 56073 56074 56075 56076 56077 56078 56079 56080 56081 56082 56083 56084 56085 56086 56087 56088 56089 56090 56091 56092 56093 56094 56095 56096 56097 56098 56099 56100 56101 56102 56103 56104 56105 56106 56107 56108 56109 56110 56111 56112 56113 56114 56115 56116 56117 56118 56119 56120 56121 56122 56123 56124 56125 56126 56127 56128 56129 56130 56131 56132 56133 56134 56135 56136 56137 56138 56139 56140 56141 56142 56143 56144 56145 56146 56147 56148 56149 56150 56151 56152 56153 56154 56155 56156 56157 56158 56159 56160 56161 56162 56163 56164 56165 56166 56167 56168 56169 56170 56171 56172 56173 56174 56175 56176 56177 56178 56179 56180 56181 56182 56183 56184 56185 56186 56187 56188 56189 56190 56191 56192 56193 56194 56195 56196 56197 56198 56199 56200 56201 56202 56203 56204 56205 56206 56207 56208 56209 56210 56211 56212 56213 56214 56215 56216 56217 56218 56219 56220 56221 56222 56223 56224 56225 56226 56227 56228 56229 56230 56231 56232 56233 56234 56235 56236 56237 56238 56239 56240 56241 56242 56243 56244 56245 56246 56247 56248 56249 56250 56251 56252 56253 56254 56255 56256 56257 56258 56259 56260 56261> # SplitBus
mul in 2 <56094 56060> out 1 <56262>     # cond trueterm
const-mul-neg-1 in 1 <56094> out 1 <56263> # cond minuscond
add in 2 <100 56263> out 1 <56264>       # cond negcond
mul in 2 <56264 55901> out 1 <56265>     # cond falseterm
add in 2 <56262 56265> out 1 <56266>     # cond result
const-mul-ffffffff in 1 <56266> out 1 <56267> # multiply-by-constant 4294967295
const-mul-ffffffff in 1 <55697> out 1 <56268> # multiply-by-constant 4294967295
add in 2 <55696 56268> out 1 <56269>     # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
mul in 2 <55731 56269> out 1 <56270>     # cond trueterm
const-mul-neg-1 in 1 <55731> out 1 <56271> # cond minuscond
add in 2 <100 56271> out 1 <56272>       # cond negcond
mul in 2 <56272 20> out 1 <56273>        # cond falseterm
add in 2 <56270 56273> out 1 <56274>     # cond result
const-mul-ffffffff in 1 <56274> out 1 <56275> # multiply-by-constant 4294967295
add in 2 <56274 21> out 1 <56276>        # ArithBusReq.AddReq(DFG.Conditional,DFG.Input)
split in 1 <56276> outplitBus
const-mul-2 in 1 <56308> out 1 <56508>   # join source bit 31
add in 2 <56307 56508> out 1 <56509>     # join source bit 30
const-mul-2 in 1 <56509> out 1 <56510>   # join
add in 2 <56306 56510> out 1 <56511>     # join source bit 29
const-mul-2 in 1 <56511> out 1 <56512>   # join
add in 2 <56305 56512> out 1 <56513>     # join source bit 28
const-mul-2 in 1 <56513> out 1 <56514>   # join
add in 2 <56304 56514> out 1 <56515>     # join source bit 27
const-mul-2 in 1 <56515> out 1 <56516>   # join
add in 2 <56303 56516> out 1 <56517>     # join source bit 26
const-mul-2 in 1 <56517> out 1 <56518>   # join
add in 2 <56302 56518> out 1 <56519>     # join source bit 25
const-mul-2 in 1 <56519> out 1 <56520>   # join
add in 2 <56301 56520> out 1 <56521>     # join source bit 24
const-mul-2 in 1 <56521> out 1 <56522>   # join
add in 2 <56300 56522> out 1 <56523>     # join source bit 23
const-mul-2 in 1 <56523> out 1 <56524>   # join
add in 2 <56299 56524> out 1 <56525>     # join source bit 22
const-mul-2 in 1 <56525> out 1 <56526>   # join
add in 2 <56298 56526> out 1 <56527>     # join source bit 21
const-mul-2 in 1 <56527> out 1 <56528>   # join
add in 2 <56297 56528> out 1 <56529>     # join source bit 20
const-mul-2 in 1 <56529> out 1 <56530>   # join
add in 2 <56296 56530> out 1 <56531>     # join source bit 19
const-mul-2 in 1 <56531> out 1 <56532>   # join
add in 2 <56295 56532> out 1 <56533>     # join source bit 18
const-mul-2 in 1 <56533> out 1 <56534>   # join
add in 2 <56294 56534> out 1 <56535>     # join source bit 17
const-mul-2 in 1 <56535> out 1 <56536>   # join
add in 2 <56293 56536> out 1 <56537>     # join source bit 16
const-mul-2 in 1 <56537> out 1 <56538>   # join
add in 2 <56292 56538> out 1 <56539>     # join source bit 15
const-mul-2 in 1 <56539> out 1 <56540>   # join
add in 2 <56291 56540> out 1 <56541>     # join source bit 14
const-mul-2 in 1 <56541> out 1 <56542>   # join
add in 2 <56290 56542> out 1 <56543>     # join source bit 13
const-mul-2 in 1 <56543> out 1 <56544>   # join
add in 2 <56289 56544> out 1 <56545>     # join source bit 12
const-mul-2 in 1 <56545> out 1 <56546>   # join
add in 2 <56288 56546> out 1 <56547>     # join source bit 11
const-mul-2 in 1 <56547> out 1 <56548>   # join
add in 2 <56287 56548> out 1 <56549>     # join source bit 10
const-mul-2 in 1 <56549> out 1 <56550>   # join
add in 2 <56286 56550> out 1 <56551>     # join source bit 9
const-mul-2 in 1 <56551> out 1 <56552>   # join
add in 2 <56285 56552> out 1 <56553>     # join source bit 8
const-mul-2 in 1 <56553> out 1 <56554>   # join
add in 2 <56284 56554> out 1 <56555>     # join source bit 7
const-mul-2 in 1 <56555> out 1 <56556>   # join
add in 2 <56283 56556> out 1 <56557>     # join source bit 6
const-mul-2 in 1 <56557> out 1 <56558>   # join
add in 2 <56282 56558> out 1 <56559>     # join source bit 5
const-mul-2 in 1 <56559> out 1 <56560>   # join
add in 2 <56281 56560> out 1 <56561>     # join source bit 4
const-mul-2 in 1 <56561> out 1 <56562>   # join
add in 2 <56280 56562> out 1 <56563>     # join source bit 3
const-mul-2 in 1 <56563> out 1 <56564>   # join
add in 2 <56279 56564> out 1 <56565>     # join source bit 2
const-mul-2 in 1 <56565> out 1 <56566>   # join
add in 2 <56278 56566> out 1 <56567>     # join source bit 1
const-mul-2 in 1 <56567> out 1 <56568>   # join
add in 2 <56277 56568> out 1 <56569>     # join source bit 0
add in 2 <56569 56569> out 1 <56570>     # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <56274> out 1 <56571> # multiply-by-constant 4294967295
add in 2 <21 56571> out 1 <56572>        # 'CmpLT DFG.Input - DFG.Conditional'
split in 1 <56572> outplitBus
mul in 2 <56604 56570> out 1 <56836>     # cond trueterm
const-mul-neg-1 in 1 <56604> out 1 <56837> # cond minuscond
add in 2 <100 56837> out 1 <56838>       # cond negcond
mul in 2 <56838 56274> out 1 <56839>     # cond falseterm
add in 2 <56836 56839> out 1 <56840>     # cond result
add in 2 <56266 56840> out 1 <56841>     # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
split in 1 <56841> outplitBus
const-mul-2 in 1 <56873> out 1 <57075>   # join source bit 31
add in 2 <56872 57075> out 1 <57076>     # join source bit 30
const-mul-2 in 1 <57076> out 1 <57077>   # join
add in 2 <56871 57077> out 1 <57078>     # join source bit 29
const-mul-2 in 1 <57078> out 1 <57079>   # join
add in 2 <56870 57079> out 1 <57080>     # join source bit 28
const-mul-2 in 1 <57080> out 1 <57081>   # join
add in 2 <56869 57081> out 1 <57082>     # join source bit 27
const-mul-2 in 1 <57082> out 1 <57083>   # join
add in 2 <56868 57083> out 1 <57084>     # join source bit 26
const-mul-2 in 1 <57084> out 1 <57085>   # join
add in 2 <56867 57085> out 1 <57086>     # join source bit 25
const-mul-2 in 1 <57086> out 1 <57087>   # join
add in 2 <56866 57087> out 1 <57088>     # join source bit 24
const-mul-2 in 1 <57088> out 1 <57089>   # join
add in 2 <56865 57089> out 1 <57090>     # join source bit 23
const-mul-2 in 1 <57090> out 1 <57091>   # join
add in 2 <56864 57091> out 1 <57092>     # join source bit 22
const-mul-2 in 1 <57092> out 1 <57093>   # join
add in 2 <56863 57093> out 1 <57094>     # join source bit 21
const-mul-2 in 1 <57094> out 1 <57095>   # join
add in 2 <56862 57095> out 1 <57096>     # join source bit 20
const-mul-2 in 1 <57096> out 1 <57097>   # join
add in 2 <56861 57097> out 1 <57098>     # join source bit 19
const-mul-2 in 1 <57098> out 1 <57099>   # join
add in 2 <56860 57099> out 1 <57100>     # join source bit 18
const-mul-2 in 1 <57100> out 1 <57101>   # join
add in 2 <56859 57101> out 1 <57102>     # join source bit 17
const-mul-2 in 1 <57102> out 1 <57103>   # join
add in 2 <56858 57103> out 1 <57104>     # join source bit 16
const-mul-2 in 1 <57104> out 1 <57105>   # join
add in 2 <56857 57105> out 1 <57106>     # join source bit 15
const-mul-2 in 1 <57106> out 1 <57107>   # join
add in 2 <56856 57107> out 1 <57108>     # join source bit 14
const-mul-2 in 1 <57108> out 1 <57109>   # join
add in 2 <56855 57109> out 1 <57110>     # join source bit 13
const-mul-2 in 1 <57110> out 1 <57111>   # join
add in 2 <56854 57111> out 1 <57112>     # join source bit 12
const-mul-2 in 1 <57112> out 1 <57113>   # join
add in 2 <56853 57113> out 1 <57114>     # join source bit 11
const-mul-2 in 1 <57114> out 1 <57115>   # join
add in 2 <56852 57115> out 1 <57116>     # join source bit 10
const-mul-2 in 1 <57116> out 1 <57117>   # join
add in 2 <56851 57117> out 1 <57118>     # join source bit 9
const-mul-2 in 1 <57118> out 1 <57119>   # join
add in 2 <56850 57119> out 1 <57120>     # join source bit 8
const-mul-2 in 1 <57120> out 1 <57121>   # join
add in 2 <56849 57121> out 1 <57122>     # join source bit 7
const-mul-2 in 1 <57122> out 1 <57123>   # join
add in 2 <56848 57123> out 1 <57124>     # join source bit 6
const-mul-2 in 1 <57124> out 1 <57125>   # join
add in 2 <56847 57125> out 1 <57126>     # join source bit 5
const-mul-2 in 1 <57126> out 1 <57127>   # join
add in 2 <56846 57127> out 1 <57128>     # join source bit 4
const-mul-2 in 1 <57128> out 1 <57129>   # join
add in 2 <56845 57129> out 1 <57130>     # join source bit 3
const-mul-2 in 1 <57130> out 1 <57131>   # join
add in 2 <56844 57131> out 1 <57132>     # join source bit 2
const-mul-2 in 1 <57132> out 1 <57133>   # join
add in 2 <56843 57133> out 1 <57134>     # join source bit 1
const-mul-2 in 1 <57134> out 1 <57135>   # join
add in 2 <56842 57135> out 1 <57136>     # join source bit 0
add in 2 <57136 57136> out 1 <57137>     # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <56266> out 1 <57138> # multiply-by-constant 4294967295
add in 2 <56840 57138> out 1 <57139>     # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <57139> outplitBus
mul in 2 <57171 57137> out 1 <57405>     # cond trueterm
const-mul-neg-1 in 1 <57171> out 1 <57406> # cond minuscond
add in 2 <100 57406> out 1 <57407>       # cond negcond
mul in 2 <57407 56266> out 1 <57408>     # cond falseterm
add in 2 <57405 57408> out 1 <57409>     # cond result
mul in 2 <56094 56058> out 1 <57410>     # cond trueterm
const-mul-neg-1 in 1 <56094> out 1 <57411> # cond minuscond
add in 2 <100 57411> out 1 <57412>       # cond negcond
mul in 2 <57412 56055> out 1 <57413>     # cond falseterm
add in 2 <57410 57413> out 1 <57414>     # cond result
mul in 2 <55950 55914> out 1 <57415>     # cond trueterm
const-mul-neg-1 in 1 <55950> out 1 <57416> # cond minuscond
add in 2 <100 57416> out 1 <57417>       # cond negcond
mul in 2 <57417 55911> out 1 <57418>     # cond falseterm
add in 2 <57415 57418> out 1 <57419>     # cond result
const-mul-ffffffff in 1 <57419> out 1 <57420> # multiply-by-constant 4294967295
add in 2 <57419 57414> out 1 <57421>     # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
add in 2 <57421 57420> out 1 <57422>     # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <57422> out 1 <57423> # multiply-by-constant 4294967295
add in 2 <57421 57423> out 1 <57424>     # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <57419> out 1 <57425> # multiply-by-constant 4294967295
add in 2 <57414 57425> out 1 <57426>     # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <57426> out 200 <57427 57428 57429 57430 57431 57432 57433 57434 57435 57436 57437 57438 57439 57440 57441 57442 57443 57444 57445 57446 57447 57448 57449 57450 57451 57452 57453 57454 57455 57456 57457 57458 57459 57460 57461 57462 57463 57464 57465 57466 57467 57468 57469 57470 57471 57472 57473 57474 57475 57476 57477 57478 57479 57480 57481 57482 57483 57484 57485 57486 57487 57488 57489 57490 57491 57492 57493 57494 57495 57496 57497 57498 57499 57500 57501 57502 57503 57504 57505 57506 57507 57508 57509 57510 57511 57512 57513 57514 57515 57516 57517 57518 57519 57520 57521 57522 57523 57524 57525 57526 57527 57528 57529 57530 57531 57532 57533 57534 57535 57536 57537 57538 57539 57540 57541 57542 57543 57544 57545 57546 57547 57548 57549 57550 57551 57552 57553 57554 57555 57556 57557 57558 57559 57560 57561 57562 57563 57564 57565 57566 57567 57568 57569 57570 57571 57572 57573 57574 57575 57576 57577 57578 57579 57580 57581 57582 57583 57584 57585 57586 57587 57588 57589 57590 57591 57592 57593 57594 57595 57596 57597 57598 57599 57600 57601 57602 57603 57604 57605 57606 57607 57608 57609 57610 57611 57612 57613 57614 57615 57616 57617 57618 57619 57620 57621 57622 57623 57624 57625 57626> # SplitBus
mul in 2 <57458 57424> out 1 <57627>     # cond trueterm
const-mul-neg-1 in 1 <57458> out 1 <57628> # cond minuscond
add in 2 <100 57628> out 1 <57629>       # cond negcond
mul in 2 <57629 57414> out 1 <57630>     # cond falseterm
add in 2 <57627 57630> out 1 <57631>     # cond result
const-mul-ffffffff in 1 <57631> out 1 <57632> # multiply-by-constant 4294967295
add in 2 <57631 57409> out 1 <57633>     # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
split in 1 <57633> outplitBus
const-mul-2 in 1 <57665> out 1 <57869>   # join source bit 31
add in 2 <57664 57869> out 1 <57870>     # join source bit 30
const-mul-2 in 1 <57870> out 1 <57871>   # join
add in 2 <57663 57871> out 1 <57872>     # join source bit 29
const-mul-2 in 1 <57872> out 1 <57873>   # join
add in 2 <57662 57873> out 1 <57874>     # join source bit 28
const-mul-2 in 1 <57874> out 1 <57875>   # join
add in 2 <57661 57875> out 1 <57876>     # join source bit 27
const-mul-2 in 1 <57876> out 1 <57877>   # join
add in 2 <57660 57877> out 1 <57878>     # join source bit 26
const-mul-2 in 1 <57878> out 1 <57879>   # join
add in 2 <57659 57879> out 1 <57880>     # join source bit 25
const-mul-2 in 1 <57880> out 1 <57881>   # join
add in 2 <57658 57881> out 1 <57882>     # join source bit 24
const-mul-2 in 1 <57882> out 1 <57883>   # join
add in 2 <57657 57883> out 1 <57884>     # join source bit 23
const-mul-2 in 1 <57884> out 1 <57885>   # join
add in 2 <57656 57885> out 1 <57886>     # join source bit 22
const-mul-2 in 1 <57886> out 1 <57887>   # join
add in 2 <57655 57887> out 1 <57888>     # join source bit 21
const-mul-2 in 1 <57888> out 1 <57889>   # join
add in 2 <57654 57889> out 1 <57890>     # join source bit 20
const-mul-2 in 1 <57890> out 1 <57891>   # join
add in 2 <57653 57891> out 1 <57892>     # join source bit 19
const-mul-2 in 1 <57892> out 1 <57893>   # join
add in 2 <57652 57893> out 1 <57894>     # join source bit 18
const-mul-2 in 1 <57894> out 1 <57895>   # join
add in 2 <57651 57895> out 1 <57896>     # join source bit 17
const-mul-2 in 1 <57896> out 1 <57897>   # join
add in 2 <57650 57897> out 1 <57898>     # join source bit 16
const-mul-2 in 1 <57898> out 1 <57899>   # join
add in 2 <57649 57899> out 1 <57900>     # join source bit 15
const-mul-2 in 1 <57900> out 1 <57901>   # join
add in 2 <57648 57901> out 1 <57902>     # join source bit 14
const-mul-2 in 1 <57902> out 1 <57903>   # join
add in 2 <57647 57903> out 1 <57904>     # join source bit 13
const-mul-2 in 1 <57904> out 1 <57905>   # join
add in 2 <57646 57905> out 1 <57906>     # join source bit 12
const-mul-2 in 1 <57906> out 1 <57907>   # join
add in 2 <57645 57907> out 1 <57908>     # join source bit 11
const-mul-2 in 1 <57908> out 1 <57909>   # join
add in 2 <57644 57909> out 1 <57910>     # join source bit 10
const-mul-2 in 1 <57910> out 1 <57911>   # join
add in 2 <57643 57911> out 1 <57912>     # join source bit 9
const-mul-2 in 1 <57912> out 1 <57913>   # join
add in 2 <57642 57913> out 1 <57914>     # join source bit 8
const-mul-2 in 1 <57914> out 1 <57915>   # join
add in 2 <57641 57915> out 1 <57916>     # join source bit 7
const-mul-2 in 1 <57916> out 1 <57917>   # join
add in 2 <57640 57917> out 1 <57918>     # join source bit 6
const-mul-2 in 1 <57918> out 1 <57919>   # join
add in 2 <57639 57919> out 1 <57920>     # join source bit 5
const-mul-2 in 1 <57920> out 1 <57921>   # join
add in 2 <57638 57921> out 1 <57922>     # join source bit 4
const-mul-2 in 1 <57922> out 1 <57923>   # join
add in 2 <57637 57923> out 1 <57924>     # join source bit 3
const-mul-2 in 1 <57924> out 1 <57925>   # join
add in 2 <57636 57925> out 1 <57926>     # join source bit 2
const-mul-2 in 1 <57926> out 1 <57927>   # join
add in 2 <57635 57927> out 1 <57928>     # join source bit 1
const-mul-2 in 1 <57928> out 1 <57929>   # join
add in 2 <57634 57929> out 1 <57930>     # join source bit 0
add in 2 <57930 57930> out 1 <57931>     # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <57931> out 1 <57932> # multiply-by-constant 4294967295
add in 2 <57633 57932> out 1 <57933>     # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <57631> out 1 <57934> # multiply-by-constant 4294967295
add in 2 <57409 57934> out 1 <57935>     # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <57935> outplitBus
mul in 2 <57967 57933> out 1 <58203>     # cond trueterm
const-mul-neg-1 in 1 <57967> out 1 <58204> # cond minuscond
add in 2 <100 58204> out 1 <58205>       # cond negcond
mul in 2 <58205 57409> out 1 <58206>     # cond falseterm
add in 2 <58203 58206> out 1 <58207>     # cond result
add in 2 <58207 104> out 1 <58208>       # ArithBusReq.AddReq(DFG.Conditional,DFG.Constant)
const-mul-ffffffff in 1 <19> out 1 <58209> # multiply-by-constant 4294967295
add in 2 <58208 58209> out 1 <58210>     # 'CmpLT DFG.Add - DFG.Input'
split in 1 <58210> outplitBus
mul in 2 <58242 103> out 1 <58449>       # cond trueterm
const-mul-neg-1 in 1 <58242> out 1 <58450> # cond minuscond
add in 2 <100 58450> out 1 <58451>       # cond negcond
mul in 2 <58451 102> out 1 <58452>       # cond falseterm
add in 2 <58449 58452> out 1 <58453>     # cond result
add in 2 <58207 3084> out 1 <58454>      # ArithBusReq.AddReq(DFG.Conditional,DFG.Negate)
const-mul-ffffffff in 1 <58454> out 1 <58455> # multiply-by-constant 4294967295
add in 2 <19 58455> out 1 <58456>        # 'CmpLT DFG.Input - DFG.Subtract'
split in 1 <58456> outplitBus
mul in 2 <58488 103> out 1 <58727>       # cond trueterm
const-mul-neg-1 in 1 <58488> out 1 <58728> # cond minuscond
add in 2 <100 58728> out 1 <58729>       # cond negcond
mul in 2 <58729 58453> out 1 <58730>     # cond falseterm
add in 2 <58727 58730> out 1 <58731>     # cond result
const-mul-ffffffff in 1 <18> out 1 <58732> # multiply-by-constant 4294967295
add in 2 <18 19> out 1 <58733>           # ArithBusReq.AddReq(DFG.Input,DFG.Input)
add in 2 <58733 58732> out 1 <58734>     # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <58734> out 1 <58735> # multiply-by-constant 4294967295
add in 2 <58733 58735> out 1 <58736>     # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <18> out 1 <58737> # multiply-by-constant 4294967295
add in 2 <19 58737> out 1 <58738>        # 'CmpLT DFG.Input - DFG.Input'
split in 1 <58738> out 65 <58739 58740 58741 58742 58743 58744 58745 58746 58747 58748 58749 58750 58751 58752 58753 58754 58755 58756 58757 58758 58759 58760 58761 58762 58763 58764 58765 58766 58767 58768 58769 58770 58771 58772 58773 58774 58775 58776 58777 58778 58779 58780 58781 58782 58783 58784 58785 58786 58787 58788 58789 58790 58791 58792 58793 58794 58795 58796 58797 58798 58799 58800 58801 58802 58803> # SplitBus
mul in 2 <58770 58736> out 1 <58804>     # cond trueterm
const-mul-neg-1 in 1 <58770> out 1 <58805> # cond minuscond
add in 2 <100 58805> out 1 <58806>       # cond negcond
mul in 2 <58806 19> out 1 <58807>        # cond falseterm
add in 2 <58804 58807> out 1 <58808>     # cond result
const-mul-ffffffff in 1 <58808> out 1 <58809> # multiply-by-constant 4294967295
add in 2 <58808 20> out 1 <58810>        # ArithBusReq.AddReq(DFG.Conditional,DFG.Input)
add in 2 <58810 58809> out 1 <58811>     # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <58811> out 1 <58812> # multiply-by-constant 4294967295
add in 2 <58810 58812> out 1 <58813>     # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <58808> out 1 <58814> # multiply-by-constant 4294967295
add in 2 <20 58814> out 1 <58815>        # 'CmpLT DFG.Input - DFG.Conditional'
split in 1 <58815> outplitBus
mul in 2 <58847 58813> out 1 <58947>     # cond trueterm
const-mul-neg-1 in 1 <58847> out 1 <58948> # cond minuscond
add in 2 <100 58948> out 1 <58949>       # cond negcond
mul in 2 <58949 20> out 1 <58950>        # cond falseterm
add in 2 <58947 58950> out 1 <58951>     # cond result
const-mul-ffffffff in 1 <58951> out 1 <58952> # multiply-by-constant 4294967295
add in 2 <58951 21> out 1 <58953>        # ArithBusReq.AddReq(DFG.Conditional,DFG.Input)
add in 2 <58953 58952> out 1 <58954>     # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <58951> out 1 <58955> # multiply-by-constant 4294967295
add in 2 <21 58955> out 1 <58956>        # 'CmpLT DFG.Input - DFG.Conditional'
split in 1 <58956> out 197 <58957 58958 58959 58960 58961 58962 58963 58964 58965 58966 58967 58968 58969 58970 58971 58972 58973 58974 58975 58976 58977 58978 58979 58980 58981 58982 58983 58984 58985 58986 58987 58988 58989 58990 58991 58992 58993 58994 58995 58996 58997 58998 58999 59000 59001 59002 59003 59004 59005 59006 59007 59008 59009 59010 59011 59012 59013 59014 59015 59016 59017 59018 59019 59020 59021 59022 59023 59024 59025 59026 59027 59028 59029 59030 59031 59032 59033 59034 59035 59036 59037 59038 59039 59040 59041 59042 59043 59044 59045 59046 59047 59048 59049 59050 59051 59052 59053 59054 59055 59056 59057 59058 59059 59060 59061 59062 59063 59064 59065 59066 59067 59068 59069 59070 59071 59072 59073 59074 59075 59076 59077 59078 59079 59080 59081 59082 59083 59084 59085 59086 59087 59088 59089 59090 59091 59092 59093 59094 59095 59096 59097 59098 59099 59100 59101 59102 59103 59104 59105 59106 59107 59108 59109 59110 59111 59112 59113 59114 59115 59116 59117 59118 59119 59120 59121 59122 59123 59124 59125 59126 59127 59128 59129 59130 59131 59132 59133 59134 59135 59136 59137 59138 59139 59140 59141 59142 59143 59144 59145 59146 59147 59148 59149 59150 59151 59152 59153> # SplitBus
mul in 2 <58988 58954> out 1 <59154>     # cond trueterm
const-mul-neg-1 in 1 <58988> out 1 <59155> # cond minuscond
add in 2 <100 59155> out 1 <59156>       # cond negcond
mul in 2 <59156 58951> out 1 <59157>     # cond falseterm
add in 2 <59154 59157> out 1 <59158>     # cond result
mul in 2 <58847 58811> out 1 <59159>     # cond trueterm
const-mul-neg-1 in 1 <58847> out 1 <59160> # cond minuscond
add in 2 <100 59160> out 1 <59161>       # cond negcond
mul in 2 <59161 58808> out 1 <59162>     # cond falseterm
add in 2 <59159 59162> out 1 <59163>     # cond result
mul in 2 <58770 58734> out 1 <59164>     # cond trueterm
const-mul-neg-1 in 1 <58770> out 1 <59165> # cond minuscond
add in 2 <100 59165> out 1 <59166>       # cond negcond
mul in 2 <59166 18> out 1 <59167>        # cond falseterm
add in 2 <59164 59167> out 1 <59168>     # cond result
const-mul-ffffffff in 1 <59168> out 1 <59169> # multiply-by-constant 4294967295
add in 2 <59168 59163> out 1 <59170>     # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
add in 2 <59170 59169> out 1 <59171>     # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <59171> out 1 <59172> # multiply-by-constant 4294967295
add in 2 <59170 59172> out 1 <59173>     # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <59168> out 1 <59174> # multiply-by-constant 4294967295
add in 2 <59163 59174> out 1 <59175>     # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <59175> outplitBus
mul in 2 <59207 59173> out 1 <59308>     # cond trueterm
const-mul-neg-1 in 1 <59207> out 1 <59309> # cond minuscond
add in 2 <100 59309> out 1 <59310>       # cond negcond
mul in 2 <59310 59163> out 1 <59311>     # cond falseterm
add in 2 <59308 59311> out 1 <59312>     # cond result
const-mul-ffffffff in 1 <59312> out 1 <59313> # multiply-by-constant 4294967295
add in 2 <59312 59158> out 1 <59314>     # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
add in 2 <59314 59313> out 1 <59315>     # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <59315> out 1 <59316> # multiply-by-constant 4294967295
add in 2 <59314 59316> out 1 <59317>     # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <59312> out 1 <59318> # multiply-by-constant 4294967295
add in 2 <59158 59318> out 1 <59319>     # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <59319> out 199 <59320 59321 59322 59323 59324 59325 59326 59327 59328 59329 59330 59331 59332 59333 59334 59335 59336 59337 59338 59339 59340 59341 59342 59343 59344 59345 59346 59347 59348 59349 59350 59351 59352 59353 59354 59355 59356 59357 59358 59359 59360 59361 59362 59363 59364 59365 59366 59367 59368 59369 59370 59371 59372 59373 59374 59375 59376 59377 59378 59379 59380 59381 59382 59383 59384 59385 59386 59387 59388 59389 59390 59391 59392 59393 59394 59395 59396 59397 59398 59399 59400 59401 59402 59403 59404 59405 59406 59407 59408 59409 59410 59411 59412 59413 59414 59415 59416 59417 59418 59419 59420 59421 59422 59423 59424 59425 59426 59427 59428 59429 59430 59431 59432 59433 59434 59435 59436 59437 59438 59439 59440 59441 59442 59443 59444 59445 59446 59447 59448 59449 59450 59451 59452 59453 59454 59455 59456 59457 59458 59459 59460 59461 59462 59463 59464 59465 59466 59467 59468 59469 59470 59471 59472 59473 59474 59475 59476 59477 59478 59479 59480 59481 59482 59483 59484 59485 59486 59487 59488 59489 59490 59491 59492 59493 59494 59495 59496 59497 59498 59499 59500 59501 59502 59503 59504 59505 59506 59507 59508 59509 59510 59511 59512 59513 59514 59515 59516 59517 59518> # SplitBus
mul in 2 <59351 59317> out 1 <59519>     # cond trueterm
const-mul-neg-1 in 1 <59351> out 1 <59520> # cond minuscond
add in 2 <100 59520> out 1 <59521>       # cond negcond
mul in 2 <59521 59158> out 1 <59522>     # cond falseterm
add in 2 <59519 59522> out 1 <59523>     # cond result
const-mul-ffffffff in 1 <59523> out 1 <59524> # multiply-by-constant 4294967295
const-mul-ffffffff in 1 <58954> out 1 <59525> # multiply-by-constant 4294967295
add in 2 <58953 59525> out 1 <59526>     # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
mul in 2 <58988 59526> out 1 <59527>     # cond trueterm
const-mul-neg-1 in 1 <58988> out 1 <59528> # cond minuscond
add in 2 <100 59528> out 1 <59529>       # cond negcond
mul in 2 <59529 21> out 1 <59530>        # cond falseterm
add in 2 <59527 59530> out 1 <59531>     # cond result
const-mul-ffffffff in 1 <59531> out 1 <59532> # multiply-by-constant 4294967295
add in 2 <59531 22> out 1 <59533>        # ArithBusReq.AddReq(DFG.Conditional,DFG.Input)
split in 1 <59533> outplitBus
const-mul-2 in 1 <59565> out 1 <59765>   # join source bit 31
add in 2 <59564 59765> out 1 <59766>     # join source bit 30
const-mul-2 in 1 <59766> out 1 <59767>   # join
add in 2 <59563 59767> out 1 <59768>     # join source bit 29
const-mul-2 in 1 <59768> out 1 <59769>   # join
add in 2 <59562 59769> out 1 <59770>     # join source bit 28
const-mul-2 in 1 <59770> out 1 <59771>   # join
add in 2 <59561 59771> out 1 <59772>     # join source bit 27
const-mul-2 in 1 <59772> out 1 <59773>   # join
add in 2 <59560 59773> out 1 <59774>     # join source bit 26
const-mul-2 in 1 <59774> out 1 <59775>   # join
add in 2 <59559 59775> out 1 <59776>     # join source bit 25
const-mul-2 in 1 <59776> out 1 <59777>   # join
add in 2 <59558 59777> out 1 <59778>     # join source bit 24
const-mul-2 in 1 <59778> out 1 <59779>   # join
add in 2 <59557 59779> out 1 <59780>     # join source bit 23
const-mul-2 in 1 <59780> out 1 <59781>   # join
add in 2 <59556 59781> out 1 <59782>     # join source bit 22
const-mul-2 in 1 <59782> out 1 <59783>   # join
add in 2 <59555 59783> out 1 <59784>     # join source bit 21
const-mul-2 in 1 <59784> out 1 <59785>   # join
add in 2 <59554 59785> out 1 <59786>     # join source bit 20
const-mul-2 in 1 <59786> out 1 <59787>   # join
add in 2 <59553 59787> out 1 <59788>     # join source bit 19
const-mul-2 in 1 <59788> out 1 <59789>   # join
add in 2 <59552 59789> out 1 <59790>     # join source bit 18
const-mul-2 in 1 <59790> out 1 <59791>   # join
add in 2 <59551 59791> out 1 <59792>     # join source bit 17
const-mul-2 in 1 <59792> out 1 <59793>   # join
add in 2 <59550 59793> out 1 <59794>     # join source bit 16
const-mul-2 in 1 <59794> out 1 <59795>   # join
add in 2 <59549 59795> out 1 <59796>     # join source bit 15
const-mul-2 in 1 <59796> out 1 <59797>   # join
add in 2 <59548 59797> out 1 <59798>     # join source bit 14
const-mul-2 in 1 <59798> out 1 <59799>   # join
add in 2 <59547 59799> out 1 <59800>     # join source bit 13
const-mul-2 in 1 <59800> out 1 <59801>   # join
add in 2 <59546 59801> out 1 <59802>     # join source bit 12
const-mul-2 in 1 <59802> out 1 <59803>   # join
add in 2 <59545 59803> out 1 <59804>     # join source bit 11
const-mul-2 in 1 <59804> out 1 <59805>   # join
add in 2 <59544 59805> out 1 <59806>     # join source bit 10
const-mul-2 in 1 <59806> out 1 <59807>   # join
add in 2 <59543 59807> out 1 <59808>     # join source bit 9
const-mul-2 in 1 <59808> out 1 <59809>   # join
add in 2 <59542 59809> out 1 <59810>     # join source bit 8
const-mul-2 in 1 <59810> out 1 <59811>   # join
add in 2 <59541 59811> out 1 <59812>     # join source bit 7
const-mul-2 in 1 <59812> out 1 <59813>   # join
add in 2 <59540 59813> out 1 <59814>     # join source bit 6
const-mul-2 in 1 <59814> out 1 <59815>   # join
add in 2 <59539 59815> out 1 <59816>     # join source bit 5
const-mul-2 in 1 <59816> out 1 <59817>   # join
add in 2 <59538 59817> out 1 <59818>     # join source bit 4
const-mul-2 in 1 <59818> out 1 <59819>   # join
add in 2 <59537 59819> out 1 <59820>     # join source bit 3
const-mul-2 in 1 <59820> out 1 <59821>   # join
add in 2 <59536 59821> out 1 <59822>     # join source bit 2
const-mul-2 in 1 <59822> out 1 <59823>   # join
add in 2 <59535 59823> out 1 <59824>     # join source bit 1
const-mul-2 in 1 <59824> out 1 <59825>   # join
add in 2 <59534 59825> out 1 <59826>     # join source bit 0
add in 2 <59826 59826> out 1 <59827>     # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <59531> out 1 <59828> # multiply-by-constant 4294967295
add in 2 <22 59828> out 1 <59829>        # 'CmpLT DFG.Input - DFG.Conditional'
split in 1 <59829> outplitBus
mul in 2 <59861 59827> out 1 <60093>     # cond trueterm
const-mul-neg-1 in 1 <59861> out 1 <60094> # cond minuscond
add in 2 <100 60094> out 1 <60095>       # cond negcond
mul in 2 <60095 59531> out 1 <60096>     # cond falseterm
add in 2 <60093 60096> out 1 <60097>     # cond result
add in 2 <59523 60097> out 1 <60098>     # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
split in 1 <60098> outplitBus
const-mul-2 in 1 <60130> out 1 <60332>   # join source bit 31
add in 2 <60129 60332> out 1 <60333>     # join source bit 30
const-mul-2 in 1 <60333> out 1 <60334>   # join
add in 2 <60128 60334> out 1 <60335>     # join source bit 29
const-mul-2 in 1 <60335> out 1 <60336>   # join
add in 2 <60127 60336> out 1 <60337>     # join source bit 28
const-mul-2 in 1 <60337> out 1 <60338>   # join
add in 2 <60126 60338> out 1 <60339>     # join source bit 27
const-mul-2 in 1 <60339> out 1 <60340>   # join
add in 2 <60125 60340> out 1 <60341>     # join source bit 26
const-mul-2 in 1 <60341> out 1 <60342>   # join
add in 2 <60124 60342> out 1 <60343>     # join source bit 25
const-mul-2 in 1 <60343> out 1 <60344>   # join
add in 2 <60123 60344> out 1 <60345>     # join source bit 24
const-mul-2 in 1 <60345> out 1 <60346>   # join
add in 2 <60122 60346> out 1 <60347>     # join source bit 23
const-mul-2 in 1 <60347> out 1 <60348>   # join
add in 2 <60121 60348> out 1 <60349>     # join source bit 22
const-mul-2 in 1 <60349> out 1 <60350>   # join
add in 2 <60120 60350> out 1 <60351>     # join source bit 21
const-mul-2 in 1 <60351> out 1 <60352>   # join
add in 2 <60119 60352> out 1 <60353>     # join source bit 20
const-mul-2 in 1 <60353> out 1 <60354>   # join
add in 2 <60118 60354> out 1 <60355>     # join source bit 19
const-mul-2 in 1 <60355> out 1 <60356>   # join
add in 2 <60117 60356> out 1 <60357>     # join source bit 18
const-mul-2 in 1 <60357> out 1 <60358>   # join
add in 2 <60116 60358> out 1 <60359>     # join source bit 17
const-mul-2 in 1 <60359> out 1 <60360>   # join
add in 2 <60115 60360> out 1 <60361>     # join source bit 16
const-mul-2 in 1 <60361> out 1 <60362>   # join
add in 2 <60114 60362> out 1 <60363>     # join source bit 15
const-mul-2 in 1 <60363> out 1 <60364>   # join
add in 2 <60113 60364> out 1 <60365>     # join source bit 14
const-mul-2 in 1 <60365> out 1 <60366>   # join
add in 2 <60112 60366> out 1 <60367>     # join source bit 13
const-mul-2 in 1 <60367> out 1 <60368>   # join
add in 2 <60111 60368> out 1 <60369>     # join source bit 12
const-mul-2 in 1 <60369> out 1 <60370>   # join
add in 2 <60110 60370> out 1 <60371>     # join source bit 11
const-mul-2 in 1 <60371> out 1 <60372>   # join
add in 2 <60109 60372> out 1 <60373>     # join source bit 10
const-mul-2 in 1 <60373> out 1 <60374>   # join
add in 2 <60108 60374> out 1 <60375>     # join source bit 9
const-mul-2 in 1 <60375> out 1 <60376>   # join
add in 2 <60107 60376> out 1 <60377>     # join source bit 8
const-mul-2 in 1 <60377> out 1 <60378>   # join
add in 2 <60106 60378> out 1 <60379>     # join source bit 7
const-mul-2 in 1 <60379> out 1 <60380>   # join
add in 2 <60105 60380> out 1 <60381>     # join source bit 6
const-mul-2 in 1 <60381> out 1 <60382>   # join
add in 2 <60104 60382> out 1 <60383>     # join source bit 5
const-mul-2 in 1 <60383> out 1 <60384>   # join
add in 2 <60103 60384> out 1 <60385>     # join source bit 4
const-mul-2 in 1 <60385> out 1 <60386>   # join
add in 2 <60102 60386> out 1 <60387>     # join source bit 3
const-mul-2 in 1 <60387> out 1 <60388>   # join
add in 2 <60101 60388> out 1 <60389>     # join source bit 2
const-mul-2 in 1 <60389> out 1 <60390>   # join
add in 2 <60100 60390> out 1 <60391>     # join source bit 1
const-mul-2 in 1 <60391> out 1 <60392>   # join
add in 2 <60099 60392> out 1 <60393>     # join source bit 0
add in 2 <60393 60393> out 1 <60394>     # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <59523> out 1 <60395> # multiply-by-constant 4294967295
add in 2 <60097 60395> out 1 <60396>     # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <60396> out 265 <60397 60398 60399 60400 60401 60402 60403 60404 60405 60406 60407 60408 60409 60410 60411 60412 60413 60414 60415 60416 60417 60418 60419 60420 60421 60422 60423 60424 60425 60426 60427 60428 60429 60430 60431 60432 60433 60434 60435 60436 60437 60438 60439 60440 60441 60442 60443 60444 60445 60446 60447 60448 60449 60450 60451 60452 60453 60454 60455 60456 60457 60458 60459 60460 60461 60462 60463 60464 60465 60466 60467 60468 60469 60470 60471 60472 60473 60474 60475 60476 60477 60478 60479 60480 60481 60482 60483 60484 60485 60486 60487 60488 60489 60490 60491 60492 60493 60494 60495 60496 60497 60498 60499 60500 60501 60502 60503 60504 60505 60506 60507 60508 60509 60510 60511 60512 60513 60514 60515 60516 60517 60518 60519 60520 60521 60522 60523 60524 60525 60526 60527 60528 60529 60530 60531 60532 60533 60534 60535 60536 60537 60538 60539 60540 60541 60542 60543 60544 60545 60546 60547 60548 60549 60550 60551 60552 60553 60554 60555 60556 60557 60558 60559 60560 60561 60562 60563 60564 60565 60566 60567 60568 60569 60570 60571 60572 60573 60574 60575 60576 60577 60578 60579 60580 60581 60582 60583 60584 60585 60586 60587 60588 60589 60590 60591 60592 60593 60594 60595 60596 60597 60598 60599 60600 60601 60602 60603 60604 60605 60606 60607 60608 60609 60610 60611 60612 60613 60614 60615 60616 60617 60618 60619 60620 60621 60622 60623 60624 60625 60626 60627 60628 60629 60630 60631 60632 60633 60634 60635 60636 60637 60638 60639 60640 60641 60642 60643 60644 60645 60646 60647 60648 60649 60650 60651 60652 60653 60654 60655 60656 60657 60658 60659 60660 60661> # SplitBus
mul in 2 <60428 60394> out 1 <60662>     # cond trueterm
const-mul-neg-1 in 1 <60428> out 1 <60663> # cond minuscond
add in 2 <100 60663> out 1 <60664>       # cond negcond
mul in 2 <60664 59523> out 1 <60665>     # cond falseterm
add in 2 <60662 60665> out 1 <60666>     # cond result
mul in 2 <59351 59315> out 1 <60667>     # cond trueterm
const-mul-neg-1 in 1 <59351> out 1 <60668> # cond minuscond
add in 2 <100 60668> out 1 <60669>       # cond negcond
mul in 2 <60669 59312> out 1 <60670>     # cond falseterm
add in 2 <60667 60670> out 1 <60671>     # cond result
mul in 2 <59207 59171> out 1 <60672>     # cond trueterm
const-mul-neg-1 in 1 <59207> out 1 <60673> # cond minuscond
add in 2 <100 60673> out 1 <60674>       # cond negcond
mul in 2 <60674 59168> out 1 <60675>     # cond falseterm
add in 2 <60672 60675> out 1 <60676>     # cond result
const-mul-ffffffff in 1 <60676> out 1 <60677> # multiply-by-constant 4294967295
add in 2 <60676 60671> out 1 <60678>     # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
add in 2 <60678 60677> out 1 <60679>     # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <60679> out 1 <60680> # multiply-by-constant 4294967295
add in 2 <60678 60680> out 1 <60681>     # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <60676> out 1 <60682> # multiply-by-constant 4294967295
add in 2 <60671 60682> out 1 <60683>     # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <60683> out 200 <60684 60685 60686 60687 60688 60689 60690 60691 60692 60693 60694 60695 60696 60697 60698 60699 60700 60701 60702 60703 60704 60705 60706 60707 60708 60709 60710 60711 60712 60713 60714 60715 60716 60717 60718 60719 60720 60721 60722 60723 60724 60725 60726 60727 60728 60729 60730 60731 60732 60733 60734 60735 60736 60737 60738 60739 60740 60741 60742 60743 60744 60745 60746 60747 60748 60749 60750 60751 60752 60753 60754 60755 60756 60757 60758 60759 60760 60761 60762 60763 60764 60765 60766 60767 60768 60769 60770 60771 60772 60773 60774 60775 60776 60777 60778 60779 60780 60781 60782 60783 60784 60785 60786 60787 60788 60789 60790 60791 60792 60793 60794 60795 60796 60797 60798 60799 60800 60801 60802 60803 60804 60805 60806 60807 60808 60809 60810 60811 60812 60813 60814 60815 60816 60817 60818 60819 60820 60821 60822 60823 60824 60825 60826 60827 60828 60829 60830 60831 60832 60833 60834 60835 60836 60837 60838 60839 60840 60841 60842 60843 60844 60845 60846 60847 60848 60849 60850 60851 60852 60853 60854 60855 60856 60857 60858 60859 60860 60861 60862 60863 60864 60865 60866 60867 60868 60869 60870 60871 60872 60873 60874 60875 60876 60877 60878 60879 60880 60881 60882 60883> # SplitBus
mul in 2 <60715 60681> out 1 <60884>     # cond trueterm
const-mul-neg-1 in 1 <60715> out 1 <60885> # cond minuscond
add in 2 <100 60885> out 1 <60886>       # cond negcond
mul in 2 <60886 60671> out 1 <60887>     # cond falseterm
add in 2 <60884 60887> out 1 <60888>     # cond result
const-mul-ffffffff in 1 <60888> out 1 <60889> # multiply-by-constant 4294967295
add in 2 <60888 60666> out 1 <60890>     # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
split in 1 <60890> outplitBus
const-mul-2 in 1 <60922> out 1 <61126>   # join source bit 31
add in 2 <60921 61126> out 1 <61127>     # join source bit 30
const-mul-2 in 1 <61127> out 1 <61128>   # join
add in 2 <60920 61128> out 1 <61129>     # join source bit 29
const-mul-2 in 1 <61129> out 1 <61130>   # join
add in 2 <60919 61130> out 1 <61131>     # join source bit 28
const-mul-2 in 1 <61131> out 1 <61132>   # join
add in 2 <60918 61132> out 1 <61133>     # join source bit 27
const-mul-2 in 1 <61133> out 1 <61134>   # join
add in 2 <60917 61134> out 1 <61135>     # join source bit 26
const-mul-2 in 1 <61135> out 1 <61136>   # join
add in 2 <60916 61136> out 1 <61137>     # join source bit 25
const-mul-2 in 1 <61137> out 1 <61138>   # join
add in 2 <60915 61138> out 1 <61139>     # join source bit 24
const-mul-2 in 1 <61139> out 1 <61140>   # join
add in 2 <60914 61140> out 1 <61141>     # join source bit 23
const-mul-2 in 1 <61141> out 1 <61142>   # join
add in 2 <60913 61142> out 1 <61143>     # join source bit 22
const-mul-2 in 1 <61143> out 1 <61144>   # join
add in 2 <60912 61144> out 1 <61145>     # join source bit 21
const-mul-2 in 1 <61145> out 1 <61146>   # join
add in 2 <60911 61146> out 1 <61147>     # join source bit 20
const-mul-2 in 1 <61147> out 1 <61148>   # join
add in 2 <60910 61148> out 1 <61149>     # join source bit 19
const-mul-2 in 1 <61149> out 1 <61150>   # join
add in 2 <60909 61150> out 1 <61151>     # join source bit 18
const-mul-2 in 1 <61151> out 1 <61152>   # join
add in 2 <60908 61152> out 1 <61153>     # join source bit 17
const-mul-2 in 1 <61153> out 1 <61154>   # join
add in 2 <60907 61154> out 1 <61155>     # join source bit 16
const-mul-2 in 1 <61155> out 1 <61156>   # join
add in 2 <60906 61156> out 1 <61157>     # join source bit 15
const-mul-2 in 1 <61157> out 1 <61158>   # join
add in 2 <60905 61158> out 1 <61159>     # join source bit 14
const-mul-2 in 1 <61159> out 1 <61160>   # join
add in 2 <60904 61160> out 1 <61161>     # join source bit 13
const-mul-2 in 1 <61161> out 1 <61162>   # join
add in 2 <60903 61162> out 1 <61163>     # join source bit 12
const-mul-2 in 1 <61163> out 1 <61164>   # join
add in 2 <60902 61164> out 1 <61165>     # join source bit 11
const-mul-2 in 1 <61165> out 1 <61166>   # join
add in 2 <60901 61166> out 1 <61167>     # join source bit 10
const-mul-2 in 1 <61167> out 1 <61168>   # join
add in 2 <60900 61168> out 1 <61169>     # join source bit 9
const-mul-2 in 1 <61169> out 1 <61170>   # join
add in 2 <60899 61170> out 1 <61171>     # join source bit 8
const-mul-2 in 1 <61171> out 1 <61172>   # join
add in 2 <60898 61172> out 1 <61173>     # join source bit 7
const-mul-2 in 1 <61173> out 1 <61174>   # join
add in 2 <60897 61174> out 1 <61175>     # join source bit 6
const-mul-2 in 1 <61175> out 1 <61176>   # join
add in 2 <60896 61176> out 1 <61177>     # join source bit 5
const-mul-2 in 1 <61177> out 1 <61178>   # join
add in 2 <60895 61178> out 1 <61179>     # join source bit 4
const-mul-2 in 1 <61179> out 1 <61180>   # join
add in 2 <60894 61180> out 1 <61181>     # join source bit 3
const-mul-2 in 1 <61181> out 1 <61182>   # join
add in 2 <60893 61182> out 1 <61183>     # join source bit 2
const-mul-2 in 1 <61183> out 1 <61184>   # join
add in 2 <60892 61184> out 1 <61185>     # join source bit 1
const-mul-2 in 1 <61185> out 1 <61186>   # join
add in 2 <60891 61186> out 1 <61187>     # join source bit 0
add in 2 <61187 61187> out 1 <61188>     # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <61188> out 1 <61189> # multiply-by-constant 4294967295
add in 2 <60890 61189> out 1 <61190>     # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <60888> out 1 <61191> # multiply-by-constant 4294967295
add in 2 <60666 61191> out 1 <61192>     # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <61192> outplitBus
mul in 2 <61224 61190> out 1 <61460>     # cond trueterm
const-mul-neg-1 in 1 <61224> out 1 <61461> # cond minuscond
add in 2 <100 61461> out 1 <61462>       # cond negcond
mul in 2 <61462 60666> out 1 <61463>     # cond falseterm
add in 2 <61460 61463> out 1 <61464>     # cond result
add in 2 <61464 104> out 1 <61465>       # ArithBusReq.AddReq(DFG.Conditional,DFG.Constant)
const-mul-ffffffff in 1 <20> out 1 <61466> # multiply-by-constant 4294967295
add in 2 <61465 61466> out 1 <61467>     # 'CmpLT DFG.Add - DFG.Input'
split in 1 <61467> outplitBus
mul in 2 <61499 103> out 1 <61706>       # cond trueterm
const-mul-neg-1 in 1 <61499> out 1 <61707> # cond minuscond
add in 2 <100 61707> out 1 <61708>       # cond negcond
mul in 2 <61708 102> out 1 <61709>       # cond falseterm
add in 2 <61706 61709> out 1 <61710>     # cond result
add in 2 <61464 3084> out 1 <61711>      # ArithBusReq.AddReq(DFG.Conditional,DFG.Negate)
const-mul-ffffffff in 1 <61711> out 1 <61712> # multiply-by-constant 4294967295
add in 2 <20 61712> out 1 <61713>        # 'CmpLT DFG.Input - DFG.Subtract'
split in 1 <61713> outplitBus
mul in 2 <61745 103> out 1 <61984>       # cond trueterm
const-mul-neg-1 in 1 <61745> out 1 <61985> # cond minuscond
add in 2 <100 61985> out 1 <61986>       # cond negcond
mul in 2 <61986 61710> out 1 <61987>     # cond falseterm
add in 2 <61984 61987> out 1 <61988>     # cond result
const-mul-ffffffff in 1 <19> out 1 <61989> # multiply-by-constant 4294967295
add in 2 <19 20> out 1 <61990>           # ArithBusReq.AddReq(DFG.Input,DFG.Input)
add in 2 <61990 61989> out 1 <61991>     # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <61991> out 1 <61992> # multiply-by-constant 4294967295
add in 2 <61990 61992> out 1 <61993>     # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <19> out 1 <61994> # multiply-by-constant 4294967295
add in 2 <20 61994> out 1 <61995>        # 'CmpLT DFG.Input - DFG.Input'
split in 1 <61995> out 65 <61996 61997 61998 61999 62000 62001 62002 62003 62004 62005 62006 62007 62008 62009 62010 62011 62012 62013 62014 62015 62016 62017 62018 62019 62020 62021 62022 62023 62024 62025 62026 62027 62028 62029 62030 62031 62032 62033 62034 62035 62036 62037 62038 62039 62040 62041 62042 62043 62044 62045 62046 62047 62048 62049 62050 62051 62052 62053 62054 62055 62056 62057 62058 62059 62060> # SplitBus
mul in 2 <62027 61993> out 1 <62061>     # cond trueterm
const-mul-neg-1 in 1 <62027> out 1 <62062> # cond minuscond
add in 2 <100 62062> out 1 <62063>       # cond negcond
mul in 2 <62063 20> out 1 <62064>        # cond falseterm
add in 2 <62061 62064> out 1 <62065>     # cond result
const-mul-ffffffff in 1 <62065> out 1 <62066> # multiply-by-constant 4294967295
add in 2 <62065 21> out 1 <62067>        # ArithBusReq.AddReq(DFG.Conditional,DFG.Input)
add in 2 <62067 62066> out 1 <62068>     # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <62068> out 1 <62069> # multiply-by-constant 4294967295
add in 2 <62067 62069> out 1 <62070>     # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <62065> out 1 <62071> # multiply-by-constant 4294967295
add in 2 <21 62071> out 1 <62072>        # 'CmpLT DFG.Input - DFG.Conditional'
split in 1 <62072> outplitBus
mul in 2 <62104 62070> out 1 <62204>     # cond trueterm
const-mul-neg-1 in 1 <62104> out 1 <62205> # cond minuscond
add in 2 <100 62205> out 1 <62206>       # cond negcond
mul in 2 <62206 21> out 1 <62207>        # cond falseterm
add in 2 <62204 62207> out 1 <62208>     # cond result
const-mul-ffffffff in 1 <62208> out 1 <62209> # multiply-by-constant 4294967295
add in 2 <62208 22> out 1 <62210>        # ArithBusReq.AddReq(DFG.Conditional,DFG.Input)
add in 2 <62210 62209> out 1 <62211>     # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <62208> out 1 <62212> # multiply-by-constant 4294967295
add in 2 <22 62212> out 1 <62213>        # 'CmpLT DFG.Input - DFG.Conditional'
split in 1 <62213> out 197 <62214 62215 62216 62217 62218 62219 62220 62221 62222 62223 62224 62225 62226 62227 62228 62229 62230 62231 62232 62233 62234 62235 62236 62237 62238 62239 62240 62241 62242 62243 62244 62245 62246 62247 62248 62249 62250 62251 62252 62253 62254 62255 62256 62257 62258 62259 62260 62261 62262 62263 62264 62265 62266 62267 62268 62269 62270 62271 62272 62273 62274 62275 62276 62277 62278 62279 62280 62281 62282 62283 62284 62285 62286 62287 62288 62289 62290 62291 62292 62293 62294 62295 62296 62297 62298 62299 62300 62301 62302 62303 62304 62305 62306 62307 62308 62309 62310 62311 62312 62313 62314 62315 62316 62317 62318 62319 62320 62321 62322 62323 62324 62325 62326 62327 62328 62329 62330 62331 62332 62333 62334 62335 62336 62337 62338 62339 62340 62341 62342 62343 62344 62345 62346 62347 62348 62349 62350 62351 62352 62353 62354 62355 62356 62357 62358 62359 62360 62361 62362 62363 62364 62365 62366 62367 62368 62369 62370 62371 62372 62373 62374 62375 62376 62377 62378 62379 62380 62381 62382 62383 62384 62385 62386 62387 62388 62389 62390 62391 62392 62393 62394 62395 62396 62397 62398 62399 62400 62401 62402 62403 62404 62405 62406 62407 62408 62409 62410> # SplitBus
mul in 2 <62245 62211> out 1 <62411>     # cond trueterm
const-mul-neg-1 in 1 <62245> out 1 <62412> # cond minuscond
add in 2 <100 62412> out 1 <62413>       # cond negcond
mul in 2 <62413 62208> out 1 <62414>     # cond falseterm
add in 2 <62411 62414> out 1 <62415>     # cond result
mul in 2 <62104 62068> out 1 <62416>     # cond trueterm
const-mul-neg-1 in 1 <62104> out 1 <62417> # cond minuscond
add in 2 <100 62417> out 1 <62418>       # cond negcond
mul in 2 <62418 62065> out 1 <62419>     # cond falseterm
add in 2 <62416 62419> out 1 <62420>     # cond result
mul in 2 <62027 61991> out 1 <62421>     # cond trueterm
const-mul-neg-1 in 1 <62027> out 1 <62422> # cond minuscond
add in 2 <100 62422> out 1 <62423>       # cond negcond
mul in 2 <62423 19> out 1 <62424>        # cond falseterm
add in 2 <62421 62424> out 1 <62425>     # cond result
const-mul-ffffffff in 1 <62425> out 1 <62426> # multiply-by-constant 4294967295
add in 2 <62425 62420> out 1 <62427>     # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
add in 2 <62427 62426> out 1 <62428>     # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <62428> out 1 <62429> # multiply-by-constant 4294967295
add in 2 <62427 62429> out 1 <62430>     # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <62425> out 1 <62431> # multiply-by-constant 4294967295
add in 2 <62420 62431> out 1 <62432>     # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <62432> outplitBus
mul in 2 <62464 62430> out 1 <62565>     # cond trueterm
const-mul-neg-1 in 1 <62464> out 1 <62566> # cond minuscond
add in 2 <100 62566> out 1 <62567>       # cond negcond
mul in 2 <62567 62420> out 1 <62568>     # cond falseterm
add in 2 <62565 62568> out 1 <62569>     # cond result
const-mul-ffffffff in 1 <62569> out 1 <62570> # multiply-by-constant 4294967295
add in 2 <62569 62415> out 1 <62571>     # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
add in 2 <62571 62570> out 1 <62572>     # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <62572> out 1 <62573> # multiply-by-constant 4294967295
add in 2 <62571 62573> out 1 <62574>     # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <62569> out 1 <62575> # multiply-by-constant 4294967295
add in 2 <62415 62575> out 1 <62576>     # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <62576> out 199 <62577 62578 62579 62580 62581 62582 62583 62584 62585 62586 62587 62588 62589 62590 62591 62592 62593 62594 62595 62596 62597 62598 62599 62600 62601 62602 62603 62604 62605 62606 62607 62608 62609 62610 62611 62612 62613 62614 62615 62616 62617 62618 62619 62620 62621 62622 62623 62624 62625 62626 62627 62628 62629 62630 62631 62632 62633 62634 62635 62636 62637 62638 62639 62640 62641 62642 62643 62644 62645 62646 62647 62648 62649 62650 62651 62652 62653 62654 62655 62656 62657 62658 62659 62660 62661 62662 62663 62664 62665 62666 62667 62668 62669 62670 62671 62672 62673 62674 62675 62676 62677 62678 62679 62680 62681 62682 62683 62684 62685 62686 62687 62688 62689 62690 62691 62692 62693 62694 62695 62696 62697 62698 62699 62700 62701 62702 62703 62704 62705 62706 62707 62708 62709 62710 62711 62712 62713 62714 62715 62716 62717 62718 62719 62720 62721 62722 62723 62724 62725 62726 62727 62728 62729 62730 62731 62732 62733 62734 62735 62736 62737 62738 62739 62740 62741 62742 62743 62744 62745 62746 62747 62748 62749 62750 62751 62752 62753 62754 62755 62756 62757 62758 62759 62760 62761 62762 62763 62764 62765 62766 62767 62768 62769 62770 62771 62772 62773 62774 62775> # SplitBus
mul in 2 <62608 62574> out 1 <62776>     # cond trueterm
const-mul-neg-1 in 1 <62608> out 1 <62777> # cond minuscond
add in 2 <100 62777> out 1 <62778>       # cond negcond
mul in 2 <62778 62415> out 1 <62779>     # cond falseterm
add in 2 <62776 62779> out 1 <62780>     # cond result
const-mul-ffffffff in 1 <62780> out 1 <62781> # multiply-by-constant 4294967295
const-mul-ffffffff in 1 <62211> out 1 <62782> # multiply-by-constant 4294967295
add in 2 <62210 62782> out 1 <62783>     # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
mul in 2 <62245 62783> out 1 <62784>     # cond trueterm
const-mul-neg-1 in 1 <62245> out 1 <62785> # cond minuscond
add in 2 <100 62785> out 1 <62786>       # cond negcond
mul in 2 <62786 22> out 1 <62787>        # cond falseterm
add in 2 <62784 62787> out 1 <62788>     # cond result
const-mul-ffffffff in 1 <62788> out 1 <62789> # multiply-by-constant 4294967295
add in 2 <62788 23> out 1 <62790>        # ArithBusReq.AddReq(DFG.Conditional,DFG.Input)
split in 1 <62790> outplitBus
const-mul-2 in 1 <62822> out 1 <63022>   # join source bit 31
add in 2 <62821 63022> out 1 <63023>     # join source bit 30
const-mul-2 in 1 <63023> out 1 <63024>   # join
add in 2 <62820 63024> out 1 <63025>     # join source bit 29
const-mul-2 in 1 <63025> out 1 <63026>   # join
add in 2 <62819 63026> out 1 <63027>     # join source bit 28
const-mul-2 in 1 <63027> out 1 <63028>   # join
add in 2 <62818 63028> out 1 <63029>     # join source bit 27
const-mul-2 in 1 <63029> out 1 <63030>   # join
add in 2 <62817 63030> out 1 <63031>     # join source bit 26
const-mul-2 in 1 <63031> out 1 <63032>   # join
add in 2 <62816 63032> out 1 <63033>     # join source bit 25
const-mul-2 in 1 <63033> out 1 <63034>   # join
add in 2 <62815 63034> out 1 <63035>     # join source bit 24
const-mul-2 in 1 <63035> out 1 <63036>   # join
add in 2 <62814 63036> out 1 <63037>     # join source bit 23
const-mul-2 in 1 <63037> out 1 <63038>   # join
add in 2 <62813 63038> out 1 <63039>     # join source bit 22
const-mul-2 in 1 <63039> out 1 <63040>   # join
add in 2 <62812 63040> out 1 <63041>     # join source bit 21
const-mul-2 in 1 <63041> out 1 <63042>   # join
add in 2 <62811 63042> out 1 <63043>     # join source bit 20
const-mul-2 in 1 <63043> out 1 <63044>   # join
add in 2 <62810 63044> out 1 <63045>     # join source bit 19
const-mul-2 in 1 <63045> out 1 <63046>   # join
add in 2 <62809 63046> out 1 <63047>     # join source bit 18
const-mul-2 in 1 <63047> out 1 <63048>   # join
add in 2 <62808 63048> out 1 <63049>     # join source bit 17
const-mul-2 in 1 <63049> out 1 <63050>   # join
add in 2 <62807 63050> out 1 <63051>     # join source bit 16
const-mul-2 in 1 <63051> out 1 <63052>   # join
add in 2 <62806 63052> out 1 <63053>     # join source bit 15
const-mul-2 in 1 <63053> out 1 <63054>   # join
add in 2 <62805 63054> out 1 <63055>     # join source bit 14
const-mul-2 in 1 <63055> out 1 <63056>   # join
add in 2 <62804 63056> out 1 <63057>     # join source bit 13
const-mul-2 in 1 <63057> out 1 <63058>   # join
add in 2 <62803 63058> out 1 <63059>     # join source bit 12
const-mul-2 in 1 <63059> out 1 <63060>   # join
add in 2 <62802 63060> out 1 <63061>     # join source bit 11
const-mul-2 in 1 <63061> out 1 <63062>   # join
add in 2 <62801 63062> out 1 <63063>     # join source bit 10
const-mul-2 in 1 <63063> out 1 <63064>   # join
add in 2 <62800 63064> out 1 <63065>     # join source bit 9
const-mul-2 in 1 <63065> out 1 <63066>   # join
add in 2 <62799 63066> out 1 <63067>     # join source bit 8
const-mul-2 in 1 <63067> out 1 <63068>   # join
add in 2 <62798 63068> out 1 <63069>     # join source bit 7
const-mul-2 in 1 <63069> out 1 <63070>   # join
add in 2 <62797 63070> out 1 <63071>     # join source bit 6
const-mul-2 in 1 <63071> out 1 <63072>   # join
add in 2 <62796 63072> out 1 <63073>     # join source bit 5
const-mul-2 in 1 <63073> out 1 <63074>   # join
add in 2 <62795 63074> out 1 <63075>     # join source bit 4
const-mul-2 in 1 <63075> out 1 <63076>   # join
add in 2 <62794 63076> out 1 <63077>     # join source bit 3
const-mul-2 in 1 <63077> out 1 <63078>   # join
add in 2 <62793 63078> out 1 <63079>     # join source bit 2
const-mul-2 in 1 <63079> out 1 <63080>   # join
add in 2 <62792 63080> out 1 <63081>     # join source bit 1
const-mul-2 in 1 <63081> out 1 <63082>   # join
add in 2 <62791 63082> out 1 <63083>     # join source bit 0
add in 2 <63083 63083> out 1 <63084>     # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <62788> out 1 <63085> # multiply-by-constant 4294967295
add in 2 <23 63085> out 1 <63086>        # 'CmpLT DFG.Input - DFG.Conditional'
split in 1 <63086> outplitBus
mul in 2 <63118 63084> out 1 <63350>     # cond trueterm
const-mul-neg-1 in 1 <63118> out 1 <63351> # cond minuscond
add in 2 <100 63351> out 1 <63352>       # cond negcond
mul in 2 <63352 62788> out 1 <63353>     # cond falseterm
add in 2 <63350 63353> out 1 <63354>     # cond result
add in 2 <62780 63354> out 1 <63355>     # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
split in 1 <63355> outplitBus
const-mul-2 in 1 <63387> out 1 <63589>   # join source bit 31
add in 2 <63386 63589> out 1 <63590>     # join source bit 30
const-mul-2 in 1 <63590> out 1 <63591>   # join
add in 2 <63385 63591> out 1 <63592>     # join source bit 29
const-mul-2 in 1 <63592> out 1 <63593>   # join
add in 2 <63384 63593> out 1 <63594>     # join source bit 28
const-mul-2 in 1 <63594> out 1 <63595>   # join
add in 2 <63383 63595> out 1 <63596>     # join source bit 27
const-mul-2 in 1 <63596> out 1 <63597>   # join
add in 2 <63382 63597> out 1 <63598>     # join source bit 26
const-mul-2 in 1 <63598> out 1 <63599>   # join
add in 2 <63381 63599> out 1 <63600>     # join source bit 25
const-mul-2 in 1 <63600> out 1 <63601>   # join
add in 2 <63380 63601> out 1 <63602>     # join source bit 24
const-mul-2 in 1 <63602> out 1 <63603>   # join
add in 2 <63379 63603> out 1 <63604>     # join source bit 23
const-mul-2 in 1 <63604> out 1 <63605>   # join
add in 2 <63378 63605> out 1 <63606>     # join source bit 22
const-mul-2 in 1 <63606> out 1 <63607>   # join
add in 2 <63377 63607> out 1 <63608>     # join source bit 21
const-mul-2 in 1 <63608> out 1 <63609>   # join
add in 2 <63376 63609> out 1 <63610>     # join source bit 20
const-mul-2 in 1 <63610> out 1 <63611>   # join
add in 2 <63375 63611> out 1 <63612>     # join source bit 19
const-mul-2 in 1 <63612> out 1 <63613>   # join
add in 2 <63374 63613> out 1 <63614>     # join source bit 18
const-mul-2 in 1 <63614> out 1 <63615>   # join
add in 2 <63373 63615> out 1 <63616>     # join source bit 17
const-mul-2 in 1 <63616> out 1 <63617>   # join
add in 2 <63372 63617> out 1 <63618>     # join source bit 16
const-mul-2 in 1 <63618> out 1 <63619>   # join
add in 2 <63371 63619> out 1 <63620>     # join source bit 15
const-mul-2 in 1 <63620> out 1 <63621>   # join
add in 2 <63370 63621> out 1 <63622>     # join source bit 14
const-mul-2 in 1 <63622> out 1 <63623>   # join
add in 2 <63369 63623> out 1 <63624>     # join source bit 13
const-mul-2 in 1 <63624> out 1 <63625>   # join
add in 2 <63368 63625> out 1 <63626>     # join source bit 12
const-mul-2 in 1 <63626> out 1 <63627>   # join
add in 2 <63367 63627> out 1 <63628>     # join source bit 11
const-mul-2 in 1 <63628> out 1 <63629>   # join
add in 2 <63366 63629> out 1 <63630>     # join source bit 10
const-mul-2 in 1 <63630> out 1 <63631>   # join
add in 2 <63365 63631> out 1 <63632>     # join source bit 9
const-mul-2 in 1 <63632> out 1 <63633>   # join
add in 2 <63364 63633> out 1 <63634>     # join source bit 8
const-mul-2 in 1 <63634> out 1 <63635>   # join
add in 2 <63363 63635> out 1 <63636>     # join source bit 7
const-mul-2 in 1 <63636> out 1 <63637>   # join
add in 2 <63362 63637> out 1 <63638>     # join source bit 6
const-mul-2 in 1 <63638> out 1 <63639>   # join
add in 2 <63361 63639> out 1 <63640>     # join source bit 5
const-mul-2 in 1 <63640> out 1 <63641>   # join
add in 2 <63360 63641> out 1 <63642>     # join source bit 4
const-mul-2 in 1 <63642> out 1 <63643>   # join
add in 2 <63359 63643> out 1 <63644>     # join source bit 3
const-mul-2 in 1 <63644> out 1 <63645>   # join
add in 2 <63358 63645> out 1 <63646>     # join source bit 2
const-mul-2 in 1 <63646> out 1 <63647>   # join
add in 2 <63357 63647> out 1 <63648>     # join source bit 1
const-mul-2 in 1 <63648> out 1 <63649>   # join
add in 2 <63356 63649> out 1 <63650>     # join source bit 0
add in 2 <63650 63650> out 1 <63651>     # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <62780> out 1 <63652> # multiply-by-constant 4294967295
add in 2 <63354 63652> out 1 <63653>     # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <63653> outplitBus
mul in 2 <63685 63651> out 1 <63919>     # cond trueterm
const-mul-neg-1 in 1 <63685> out 1 <63920> # cond minuscond
add in 2 <100 63920> out 1 <63921>       # cond negcond
mul in 2 <63921 62780> out 1 <63922>     # cond falseterm
add in 2 <63919 63922> out 1 <63923>     # cond result
mul in 2 <62608 62572> out 1 <63924>     # cond trueterm
const-mul-neg-1 in 1 <62608> out 1 <63925> # cond minuscond
add in 2 <100 63925> out 1 <63926>       # cond negcond
mul in 2 <63926 62569> out 1 <63927>     # cond falseterm
add in 2 <63924 63927> out 1 <63928>     # cond result
mul in 2 <62464 62428> out 1 <63929>     # cond trueterm
const-mul-neg-1 in 1 <62464> out 1 <63930> # cond minuscond
add in 2 <100 63930> out 1 <63931>       # cond negcond
mul in 2 <63931 62425> out 1 <63932>     # cond falseterm
add in 2 <63929 63932> out 1 <63933>     # cond result
const-mul-ffffffff in 1 <63933> out 1 <63934> # multiply-by-constant 4294967295
add in 2 <63933 63928> out 1 <63935>     # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
add in 2 <63935 63934> out 1 <63936>     # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <63936> out 1 <63937> # multiply-by-constant 4294967295
add in 2 <63935 63937> out 1 <63938>     # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <63933> out 1 <63939> # multiply-by-constant 4294967295
add in 2 <63928 63939> out 1 <63940>     # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <63940> out 200 <63941 63942 63943 63944 63945 63946 63947 63948 63949 63950 63951 63952 63953 63954 63955 63956 63957 63958 63959 63960 63961 63962 63963 63964 63965 63966 63967 63968 63969 63970 63971 63972 63973 63974 63975 63976 63977 63978 63979 63980 63981 63982 63983 63984 63985 63986 63987 63988 63989 63990 63991 63992 63993 63994 63995 63996 63997 63998 63999 64000 64001 64002 64003 64004 64005 64006 64007 64008 64009 64010 64011 64012 64013 64014 64015 64016 64017 64018 64019 64020 64021 64022 64023 64024 64025 64026 64027 64028 64029 64030 64031 64032 64033 64034 64035 64036 64037 64038 64039 64040 64041 64042 64043 64044 64045 64046 64047 64048 64049 64050 64051 64052 64053 64054 64055 64056 64057 64058 64059 64060 64061 64062 64063 64064 64065 64066 64067 64068 64069 64070 64071 64072 64073 64074 64075 64076 64077 64078 64079 64080 64081 64082 64083 64084 64085 64086 64087 64088 64089 64090 64091 64092 64093 64094 64095 64096 64097 64098 64099 64100 64101 64102 64103 64104 64105 64106 64107 64108 64109 64110 64111 64112 64113 64114 64115 64116 64117 64118 64119 64120 64121 64122 64123 64124 64125 64126 64127 64128 64129 64130 64131 64132 64133 64134 64135 64136 64137 64138 64139 64140> # SplitBus
mul in 2 <63972 63938> out 1 <64141>     # cond trueterm
const-mul-neg-1 in 1 <63972> out 1 <64142> # cond minuscond
add in 2 <100 64142> out 1 <64143>       # cond negcond
mul in 2 <64143 63928> out 1 <64144>     # cond falseterm
add in 2 <64141 64144> out 1 <64145>     # cond result
const-mul-ffffffff in 1 <64145> out 1 <64146> # multiply-by-constant 4294967295
add in 2 <64145 63923> out 1 <64147>     # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
split in 1 <64147> outplitBus
const-mul-2 in 1 <64179> out 1 <64383>   # join source bit 31
add in 2 <64178 64383> out 1 <64384>     # join source bit 30
const-mul-2 in 1 <64384> out 1 <64385>   # join
add in 2 <64177 64385> out 1 <64386>     # join source bit 29
const-mul-2 in 1 <64386> out 1 <64387>   # join
add in 2 <64176 64387> out 1 <64388>     # join source bit 28
const-mul-2 in 1 <64388> out 1 <64389>   # join
add in 2 <64175 64389> out 1 <64390>     # join source bit 27
const-mul-2 in 1 <64390> out 1 <64391>   # join
add in 2 <64174 64391> out 1 <64392>     # join source bit 26
const-mul-2 in 1 <64392> out 1 <64393>   # join
add in 2 <64173 64393> out 1 <64394>     # join source bit 25
const-mul-2 in 1 <64394> out 1 <64395>   # join
add in 2 <64172 64395> out 1 <64396>     # join source bit 24
const-mul-2 in 1 <64396> out 1 <64397>   # join
add in 2 <64171 64397> out 1 <64398>     # join source bit 23
const-mul-2 in 1 <64398> out 1 <64399>   # join
add in 2 <64170 64399> out 1 <64400>     # join source bit 22
const-mul-2 in 1 <64400> out 1 <64401>   # join
add in 2 <64169 64401> out 1 <64402>     # join source bit 21
const-mul-2 in 1 <64402> out 1 <64403>   # join
add in 2 <64168 64403> out 1 <64404>     # join source bit 20
const-mul-2 in 1 <64404> out 1 <64405>   # join
add in 2 <64167 64405> out 1 <64406>     # join source bit 19
const-mul-2 in 1 <64406> out 1 <64407>   # join
add in 2 <64166 64407> out 1 <64408>     # join source bit 18
const-mul-2 in 1 <64408> out 1 <64409>   # join
add in 2 <64165 64409> out 1 <64410>     # join source bit 17
const-mul-2 in 1 <64410> out 1 <64411>   # join
add in 2 <64164 64411> out 1 <64412>     # join source bit 16
const-mul-2 in 1 <64412> out 1 <64413>   # join
add in 2 <64163 64413> out 1 <64414>     # join source bit 15
const-mul-2 in 1 <64414> out 1 <64415>   # join
add in 2 <64162 64415> out 1 <64416>     # join source bit 14
const-mul-2 in 1 <64416> out 1 <64417>   # join
add in 2 <64161 64417> out 1 <64418>     # join source bit 13
const-mul-2 in 1 <64418> out 1 <64419>   # join
add in 2 <64160 64419> out 1 <64420>     # join source bit 12
const-mul-2 in 1 <64420> out 1 <64421>   # join
add in 2 <64159 64421> out 1 <64422>     # join source bit 11
const-mul-2 in 1 <64422> out 1 <64423>   # join
add in 2 <64158 64423> out 1 <64424>     # join source bit 10
const-mul-2 in 1 <64424> out 1 <64425>   # join
add in 2 <64157 64425> out 1 <64426>     # join source bit 9
const-mul-2 in 1 <64426> out 1 <64427>   # join
add in 2 <64156 64427> out 1 <64428>     # join source bit 8
const-mul-2 in 1 <64428> out 1 <64429>   # join
add in 2 <64155 64429> out 1 <64430>     # join source bit 7
const-mul-2 in 1 <64430> out 1 <64431>   # join
add in 2 <64154 64431> out 1 <64432>     # join source bit 6
const-mul-2 in 1 <64432> out 1 <64433>   # join
add in 2 <64153 64433> out 1 <64434>     # join source bit 5
const-mul-2 in 1 <64434> out 1 <64435>   # join
add in 2 <64152 64435> out 1 <64436>     # join source bit 4
const-mul-2 in 1 <64436> out 1 <64437>   # join
add in 2 <64151 64437> out 1 <64438>     # join source bit 3
const-mul-2 in 1 <64438> out 1 <64439>   # join
add in 2 <64150 64439> out 1 <64440>     # join source bit 2
const-mul-2 in 1 <64440> out 1 <64441>   # join
add in 2 <64149 64441> out 1 <64442>     # join source bit 1
const-mul-2 in 1 <64442> out 1 <64443>   # join
add in 2 <64148 64443> out 1 <64444>     # join source bit 0
add in 2 <64444 64444> out 1 <64445>     # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <64445> out 1 <64446> # multiply-by-constant 4294967295
add in 2 <64147 64446> out 1 <64447>     # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <64145> out 1 <64448> # multiply-by-constant 4294967295
add in 2 <63923 64448> out 1 <64449>     # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <64449> outplitBus
mul in 2 <64481 64447> out 1 <64717>     # cond trueterm
const-mul-neg-1 in 1 <64481> out 1 <64718> # cond minuscond
add in 2 <100 64718> out 1 <64719>       # cond negcond
mul in 2 <64719 63923> out 1 <64720>     # cond falseterm
add in 2 <64717 64720> out 1 <64721>     # cond result
add in 2 <64721 104> out 1 <64722>       # ArithBusReq.AddReq(DFG.Conditional,DFG.Constant)
const-mul-ffffffff in 1 <21> out 1 <64723> # multiply-by-constant 4294967295
add in 2 <64722 64723> out 1 <64724>     # 'CmpLT DFG.Add - DFG.Input'
split in 1 <64724> outplitBus
mul in 2 <64756 103> out 1 <64963>       # cond trueterm
const-mul-neg-1 in 1 <64756> out 1 <64964> # cond minuscond
add in 2 <100 64964> out 1 <64965>       # cond negcond
mul in 2 <64965 102> out 1 <64966>       # cond falseterm
add in 2 <64963 64966> out 1 <64967>     # cond result
add in 2 <64721 3084> out 1 <64968>      # ArithBusReq.AddReq(DFG.Conditional,DFG.Negate)
const-mul-ffffffff in 1 <64968> out 1 <64969> # multiply-by-constant 4294967295
add in 2 <21 64969> out 1 <64970>        # 'CmpLT DFG.Input - DFG.Subtract'
split in 1 <64970> outplitBus
mul in 2 <65002 103> out 1 <65241>       # cond trueterm
const-mul-neg-1 in 1 <65002> out 1 <65242> # cond minuscond
add in 2 <100 65242> out 1 <65243>       # cond negcond
mul in 2 <65243 64967> out 1 <65244>     # cond falseterm
add in 2 <65241 65244> out 1 <65245>     # cond result
const-mul-ffffffff in 1 <20> out 1 <65246> # multiply-by-constant 4294967295
add in 2 <20 21> out 1 <65247>           # ArithBusReq.AddReq(DFG.Input,DFG.Input)
add in 2 <65247 65246> out 1 <65248>     # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <65248> out 1 <65249> # multiply-by-constant 4294967295
add in 2 <65247 65249> out 1 <65250>     # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <20> out 1 <65251> # multiply-by-constant 4294967295
add in 2 <21 65251> out 1 <65252>        # 'CmpLT DFG.Input - DFG.Input'
split in 1 <65252> out 65 <65253 65254 65255 65256 65257 65258 65259 65260 65261 65262 65263 65264 65265 65266 65267 65268 65269 65270 65271 65272 65273 65274 65275 65276 65277 65278 65279 65280 65281 65282 65283 65284 65285 65286 65287 65288 65289 65290 65291 65292 65293 65294 65295 65296 65297 65298 65299 65300 65301 65302 65303 65304 65305 65306 65307 65308 65309 65310 65311 65312 65313 65314 65315 65316 65317> # SplitBus
mul in 2 <65284 65250> out 1 <65318>     # cond trueterm
const-mul-neg-1 in 1 <65284> out 1 <65319> # cond minuscond
add in 2 <100 65319> out 1 <65320>       # cond negcond
mul in 2 <65320 21> out 1 <65321>        # cond falseterm
add in 2 <65318 65321> out 1 <65322>     # cond result
const-mul-ffffffff in 1 <65322> out 1 <65323> # multiply-by-constant 4294967295
add in 2 <65322 22> out 1 <65324>        # ArithBusReq.AddReq(DFG.Conditional,DFG.Input)
add in 2 <65324 65323> out 1 <65325>     # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <65325> out 1 <65326> # multiply-by-constant 4294967295
add in 2 <65324 65326> out 1 <65327>     # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <65322> out 1 <65328> # multiply-by-constant 4294967295
add in 2 <22 65328> out 1 <65329>        # 'CmpLT DFG.Input - DFG.Conditional'
split in 1 <65329> outplitBus
mul in 2 <65361 65327> out 1 <65461>     # cond trueterm
const-mul-neg-1 in 1 <65361> out 1 <65462> # cond minuscond
add in 2 <100 65462> out 1 <65463>       # cond negcond
mul in 2 <65463 22> out 1 <65464>        # cond falseterm
add in 2 <65461 65464> out 1 <65465>     # cond result
const-mul-ffffffff in 1 <65465> out 1 <65466> # multiply-by-constant 4294967295
add in 2 <65465 23> out 1 <65467>        # ArithBusReq.AddReq(DFG.Conditional,DFG.Input)
add in 2 <65467 65466> out 1 <65468>     # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <65465> out 1 <65469> # multiply-by-constant 4294967295
add in 2 <23 65469> out 1 <65470>        # 'CmpLT DFG.Input - DFG.Conditional'
split in 1 <65470> out 197 <65471 65472 65473 65474 65475 65476 65477 65478 65479 65480 65481 65482 65483 65484 65485 65486 65487 65488 65489 65490 65491 65492 65493 65494 65495 65496 65497 65498 65499 65500 65501 65502 65503 65504 65505 65506 65507 65508 65509 65510 65511 65512 65513 65514 65515 65516 65517 65518 65519 65520 65521 65522 65523 65524 65525 65526 65527 65528 65529 65530 65531 65532 65533 65534 65535 65536 65537 65538 65539 65540 65541 65542 65543 65544 65545 65546 65547 65548 65549 65550 65551 65552 65553 65554 65555 65556 65557 65558 65559 65560 65561 65562 65563 65564 65565 65566 65567 65568 65569 65570 65571 65572 65573 65574 65575 65576 65577 65578 65579 65580 65581 65582 65583 65584 65585 65586 65587 65588 65589 65590 65591 65592 65593 65594 65595 65596 65597 65598 65599 65600 65601 65602 65603 65604 65605 65606 65607 65608 65609 65610 65611 65612 65613 65614 65615 65616 65617 65618 65619 65620 65621 65622 65623 65624 65625 65626 65627 65628 65629 65630 65631 65632 65633 65634 65635 65636 65637 65638 65639 65640 65641 65642 65643 65644 65645 65646 65647 65648 65649 65650 65651 65652 65653 65654 65655 65656 65657 65658 65659 65660 65661 65662 65663 65664 65665 65666 65667> # SplitBus
mul in 2 <65502 65468> out 1 <65668>     # cond trueterm
const-mul-neg-1 in 1 <65502> out 1 <65669> # cond minuscond
add in 2 <100 65669> out 1 <65670>       # cond negcond
mul in 2 <65670 65465> out 1 <65671>     # cond falseterm
add in 2 <65668 65671> out 1 <65672>     # cond result
mul in 2 <65361 65325> out 1 <65673>     # cond trueterm
const-mul-neg-1 in 1 <65361> out 1 <65674> # cond minuscond
add in 2 <100 65674> out 1 <65675>       # cond negcond
mul in 2 <65675 65322> out 1 <65676>     # cond falseterm
add in 2 <65673 65676> out 1 <65677>     # cond result
mul in 2 <65284 65248> out 1 <65678>     # cond trueterm
const-mul-neg-1 in 1 <65284> out 1 <65679> # cond minuscond
add in 2 <100 65679> out 1 <65680>       # cond negcond
mul in 2 <65680 20> out 1 <65681>        # cond falseterm
add in 2 <65678 65681> out 1 <65682>     # cond result
const-mul-ffffffff in 1 <65682> out 1 <65683> # multiply-by-constant 4294967295
add in 2 <65682 65677> out 1 <65684>     # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
add in 2 <65684 65683> out 1 <65685>     # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <65685> out 1 <65686> # multiply-by-constant 4294967295
add in 2 <65684 65686> out 1 <65687>     # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <65682> out 1 <65688> # multiply-by-constant 4294967295
add in 2 <65677 65688> out 1 <65689>     # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <65689> outplitBus
mul in 2 <65721 65687> out 1 <65822>     # cond trueterm
const-mul-neg-1 in 1 <65721> out 1 <65823> # cond minuscond
add in 2 <100 65823> out 1 <65824>       # cond negcond
mul in 2 <65824 65677> out 1 <65825>     # cond falseterm
add in 2 <65822 65825> out 1 <65826>     # cond result
const-mul-ffffffff in 1 <65826> out 1 <65827> # multiply-by-constant 4294967295
add in 2 <65826 65672> out 1 <65828>     # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
add in 2 <65828 65827> out 1 <65829>     # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <65829> out 1 <65830> # multiply-by-constant 4294967295
add in 2 <65828 65830> out 1 <65831>     # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <65826> out 1 <65832> # multiply-by-constant 4294967295
add in 2 <65672 65832> out 1 <65833>     # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <65833> out 199 <65834 65835 65836 65837 65838 65839 65840 65841 65842 65843 65844 65845 65846 65847 65848 65849 65850 65851 65852 65853 65854 65855 65856 65857 65858 65859 65860 65861 65862 65863 65864 65865 65866 65867 65868 65869 65870 65871 65872 65873 65874 65875 65876 65877 65878 65879 65880 65881 65882 65883 65884 65885 65886 65887 65888 65889 65890 65891 65892 65893 65894 65895 65896 65897 65898 65899 65900 65901 65902 65903 65904 65905 65906 65907 65908 65909 65910 65911 65912 65913 65914 65915 65916 65917 65918 65919 65920 65921 65922 65923 65924 65925 65926 65927 65928 65929 65930 65931 65932 65933 65934 65935 65936 65937 65938 65939 65940 65941 65942 65943 65944 65945 65946 65947 65948 65949 65950 65951 65952 65953 65954 65955 65956 65957 65958 65959 65960 65961 65962 65963 65964 65965 65966 65967 65968 65969 65970 65971 65972 65973 65974 65975 65976 65977 65978 65979 65980 65981 65982 65983 65984 65985 65986 65987 65988 65989 65990 65991 65992 65993 65994 65995 65996 65997 65998 65999 66000 66001 66002 66003 66004 66005 66006 66007 66008 66009 66010 66011 66012 66013 66014 66015 66016 66017 66018 66019 66020 66021 66022 66023 66024 66025 66026 66027 66028 66029 66030 66031 66032> # SplitBus
mul in 2 <65865 65831> out 1 <66033>     # cond trueterm
const-mul-neg-1 in 1 <65865> out 1 <66034> # cond minuscond
add in 2 <100 66034> out 1 <66035>       # cond negcond
mul in 2 <66035 65672> out 1 <66036>     # cond falseterm
add in 2 <66033 66036> out 1 <66037>     # cond result
const-mul-ffffffff in 1 <66037> out 1 <66038> # multiply-by-constant 4294967295
const-mul-ffffffff in 1 <65468> out 1 <66039> # multiply-by-constant 4294967295
add in 2 <65467 66039> out 1 <66040>     # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
mul in 2 <65502 66040> out 1 <66041>     # cond trueterm
const-mul-neg-1 in 1 <65502> out 1 <66042> # cond minuscond
add in 2 <100 66042> out 1 <66043>       # cond negcond
mul in 2 <66043 23> out 1 <66044>        # cond falseterm
add in 2 <66041 66044> out 1 <66045>     # cond result
const-mul-ffffffff in 1 <66045> out 1 <66046> # multiply-by-constant 4294967295
add in 2 <66045 24> out 1 <66047>        # ArithBusReq.AddReq(DFG.Conditional,DFG.Input)
split in 1 <66047> outplitBus
const-mul-2 in 1 <66079> out 1 <66279>   # join source bit 31
add in 2 <66078 66279> out 1 <66280>     # join source bit 30
const-mul-2 in 1 <66280> out 1 <66281>   # join
add in 2 <66077 66281> out 1 <66282>     # join source bit 29
const-mul-2 in 1 <66282> out 1 <66283>   # join
add in 2 <66076 66283> out 1 <66284>     # join source bit 28
const-mul-2 in 1 <66284> out 1 <66285>   # join
add in 2 <66075 66285> out 1 <66286>     # join source bit 27
const-mul-2 in 1 <66286> out 1 <66287>   # join
add in 2 <66074 66287> out 1 <66288>     # join source bit 26
const-mul-2 in 1 <66288> out 1 <66289>   # join
add in 2 <66073 66289> out 1 <66290>     # join source bit 25
const-mul-2 in 1 <66290> out 1 <66291>   # join
add in 2 <66072 66291> out 1 <66292>     # join source bit 24
const-mul-2 in 1 <66292> out 1 <66293>   # join
add in 2 <66071 66293> out 1 <66294>     # join source bit 23
const-mul-2 in 1 <66294> out 1 <66295>   # join
add in 2 <66070 66295> out 1 <66296>     # join source bit 22
const-mul-2 in 1 <66296> out 1 <66297>   # join
add in 2 <66069 66297> out 1 <66298>     # join source bit 21
const-mul-2 in 1 <66298> out 1 <66299>   # join
add in 2 <66068 66299> out 1 <66300>     # join source bit 20
const-mul-2 in 1 <66300> out 1 <66301>   # join
add in 2 <66067 66301> out 1 <66302>     # join source bit 19
const-mul-2 in 1 <66302> out 1 <66303>   # join
add in 2 <66066 66303> out 1 <66304>     # join source bit 18
const-mul-2 in 1 <66304> out 1 <66305>   # join
add in 2 <66065 66305> out 1 <66306>     # join source bit 17
const-mul-2 in 1 <66306> out 1 <66307>   # join
add in 2 <66064 66307> out 1 <66308>     # join source bit 16
const-mul-2 in 1 <66308> out 1 <66309>   # join
add in 2 <66063 66309> out 1 <66310>     # join source bit 15
const-mul-2 in 1 <66310> out 1 <66311>   # join
add in 2 <66062 66311> out 1 <66312>     # join source bit 14
const-mul-2 in 1 <66312> out 1 <66313>   # join
add in 2 <66061 66313> out 1 <66314>     # join source bit 13
const-mul-2 in 1 <66314> out 1 <66315>   # join
add in 2 <66060 66315> out 1 <66316>     # join source bit 12
const-mul-2 in 1 <66316> out 1 <66317>   # join
add in 2 <66059 66317> out 1 <66318>     # join source bit 11
const-mul-2 in 1 <66318> out 1 <66319>   # join
add in 2 <66058 66319> out 1 <66320>     # join source bit 10
const-mul-2 in 1 <66320> out 1 <66321>   # join
add in 2 <66057 66321> out 1 <66322>     # join source bit 9
const-mul-2 in 1 <66322> out 1 <66323>   # join
add in 2 <66056 66323> out 1 <66324>     # join source bit 8
const-mul-2 in 1 <66324> out 1 <66325>   # join
add in 2 <66055 66325> out 1 <66326>     # join source bit 7
const-mul-2 in 1 <66326> out 1 <66327>   # join
add in 2 <66054 66327> out 1 <66328>     # join source bit 6
const-mul-2 in 1 <66328> out 1 <66329>   # join
add in 2 <66053 66329> out 1 <66330>     # join source bit 5
const-mul-2 in 1 <66330> out 1 <66331>   # join
add in 2 <66052 66331> out 1 <66332>     # join source bit 4
const-mul-2 in 1 <66332> out 1 <66333>   # join
add in 2 <66051 66333> out 1 <66334>     # join source bit 3
const-mul-2 in 1 <66334> out 1 <66335>   # join
add in 2 <66050 66335> out 1 <66336>     # join source bit 2
const-mul-2 in 1 <66336> out 1 <66337>   # join
add in 2 <66049 66337> out 1 <66338>     # join source bit 1
const-mul-2 in 1 <66338> out 1 <66339>   # join
add in 2 <66048 66339> out 1 <66340>     # join source bit 0
add in 2 <66340 66340> out 1 <66341>     # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <66045> out 1 <66342> # multiply-by-constant 4294967295
add in 2 <24 66342> out 1 <66343>        # 'CmpLT DFG.Input - DFG.Conditional'
split in 1 <66343> outplitBus
mul in 2 <66375 66341> out 1 <66607>     # cond trueterm
const-mul-neg-1 in 1 <66375> out 1 <66608> # cond minuscond
add in 2 <100 66608> out 1 <66609>       # cond negcond
mul in 2 <66609 66045> out 1 <66610>     # cond falseterm
add in 2 <66607 66610> out 1 <66611>     # cond result
add in 2 <66037 66611> out 1 <66612>     # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
split in 1 <66612> outplitBus
const-mul-2 in 1 <66644> out 1 <66846>   # join source bit 31
add in 2 <66643 66846> out 1 <66847>     # join source bit 30
const-mul-2 in 1 <66847> out 1 <66848>   # join
add in 2 <66642 66848> out 1 <66849>     # join source bit 29
const-mul-2 in 1 <66849> out 1 <66850>   # join
add in 2 <66641 66850> out 1 <66851>     # join source bit 28
const-mul-2 in 1 <66851> out 1 <66852>   # join
add in 2 <66640 66852> out 1 <66853>     # join source bit 27
const-mul-2 in 1 <66853> out 1 <66854>   # join
add in 2 <66639 66854> out 1 <66855>     # join source bit 26
const-mul-2 in 1 <66855> out 1 <66856>   # join
add in 2 <66638 66856> out 1 <66857>     # join source bit 25
const-mul-2 in 1 <66857> out 1 <66858>   # join
add in 2 <66637 66858> out 1 <66859>     # join source bit 24
const-mul-2 in 1 <66859> out 1 <66860>   # join
add in 2 <66636 66860> out 1 <66861>     # join source bit 23
const-mul-2 in 1 <66861> out 1 <66862>   # join
add in 2 <66635 66862> out 1 <66863>     # join source bit 22
const-mul-2 in 1 <66863> out 1 <66864>   # join
add in 2 <66634 66864> out 1 <66865>     # join source bit 21
const-mul-2 in 1 <66865> out 1 <66866>   # join
add in 2 <66633 66866> out 1 <66867>     # join source bit 20
const-mul-2 in 1 <66867> out 1 <66868>   # join
add in 2 <66632 66868> out 1 <66869>     # join source bit 19
const-mul-2 in 1 <66869> out 1 <66870>   # join
add in 2 <66631 66870> out 1 <66871>     # join source bit 18
const-mul-2 in 1 <66871> out 1 <66872>   # join
add in 2 <66630 66872> out 1 <66873>     # join source bit 17
const-mul-2 in 1 <66873> out 1 <66874>   # join
add in 2 <66629 66874> out 1 <66875>     # join source bit 16
const-mul-2 in 1 <66875> out 1 <66876>   # join
add in 2 <66628 66876> out 1 <66877>     # join source bit 15
const-mul-2 in 1 <66877> out 1 <66878>   # join
add in 2 <66627 66878> out 1 <66879>     # join source bit 14
const-mul-2 in 1 <66879> out 1 <66880>   # join
add in 2 <66626 66880> out 1 <66881>     # join source bit 13
const-mul-2 in 1 <66881> out 1 <66882>   # join
add in 2 <66625 66882> out 1 <66883>     # join source bit 12
const-mul-2 in 1 <66883> out 1 <66884>   # join
add in 2 <66624 66884> out 1 <66885>     # join source bit 11
const-mul-2 in 1 <66885> out 1 <66886>   # join
add in 2 <66623 66886> out 1 <66887>     # join source bit 10
const-mul-2 in 1 <66887> out 1 <66888>   # join
add in 2 <66622 66888> out 1 <66889>     # join source bit 9
const-mul-2 in 1 <66889> out 1 <66890>   # join
add in 2 <66621 66890> out 1 <66891>     # join source bit 8
const-mul-2 in 1 <66891> out 1 <66892>   # join
add in 2 <66620 66892> out 1 <66893>     # join source bit 7
const-mul-2 in 1 <66893> out 1 <66894>   # join
add in 2 <66619 66894> out 1 <66895>     # join source bit 6
const-mul-2 in 1 <66895> out 1 <66896>   # join
add in 2 <66618 66896> out 1 <66897>     # join source bit 5
const-mul-2 in 1 <66897> out 1 <66898>   # join
add in 2 <66617 66898> out 1 <66899>     # join source bit 4
const-mul-2 in 1 <66899> out 1 <66900>   # join
add in 2 <66616 66900> out 1 <66901>     # join source bit 3
const-mul-2 in 1 <66901> out 1 <66902>   # join
add in 2 <66615 66902> out 1 <66903>     # join source bit 2
const-mul-2 in 1 <66903> out 1 <66904>   # join
add in 2 <66614 66904> out 1 <66905>     # join source bit 1
const-mul-2 in 1 <66905> out 1 <66906>   # join
add in 2 <66613 66906> out 1 <66907>     # join source bit 0
add in 2 <66907 66907> out 1 <66908>     # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <66037> out 1 <66909> # multiply-by-constant 4294967295
add in 2 <66611 66909> out 1 <66910>     # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <66910> outplitBus
mul in 2 <66942 66908> out 1 <67176>     # cond trueterm
const-mul-neg-1 in 1 <66942> out 1 <67177> # cond minuscond
add in 2 <100 67177> out 1 <67178>       # cond negcond
mul in 2 <67178 66037> out 1 <67179>     # cond falseterm
add in 2 <67176 67179> out 1 <67180>     # cond result
mul in 2 <65865 65829> out 1 <67181>     # cond trueterm
const-mul-neg-1 in 1 <65865> out 1 <67182> # cond minuscond
add in 2 <100 67182> out 1 <67183>       # cond negcond
mul in 2 <67183 65826> out 1 <67184>     # cond falseterm
add in 2 <67181 67184> out 1 <67185>     # cond result
mul in 2 <65721 65685> out 1 <67186>     # cond trueterm
const-mul-neg-1 in 1 <65721> out 1 <67187> # cond minuscond
add in 2 <100 67187> out 1 <67188>       # cond negcond
mul in 2 <67188 65682> out 1 <67189>     # cond falseterm
add in 2 <67186 67189> out 1 <67190>     # cond result
const-mul-ffffffff in 1 <67190> out 1 <67191> # multiply-by-constant 4294967295
add in 2 <67190 67185> out 1 <67192>     # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
add in 2 <67192 67191> out 1 <67193>     # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <67193> out 1 <67194> # multiply-by-constant 4294967295
add in 2 <67192 67194> out 1 <67195>     # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <67190> out 1 <67196> # multiply-by-constant 4294967295
add in 2 <67185 67196> out 1 <67197>     # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <67197> out 200 <67198 67199 67200 67201 67202 67203 67204 67205 67206 67207 67208 67209 67210 67211 67212 67213 67214 67215 67216 67217 67218 67219 67220 67221 67222 67223 67224 67225 67226 67227 67228 67229 67230 67231 67232 67233 67234 67235 67236 67237 67238 67239 67240 67241 67242 67243 67244 67245 67246 67247 67248 67249 67250 67251 67252 67253 67254 67255 67256 67257 67258 67259 67260 67261 67262 67263 67264 67265 67266 67267 67268 67269 67270 67271 67272 67273 67274 67275 67276 67277 67278 67279 67280 67281 67282 67283 67284 67285 67286 67287 67288 67289 67290 67291 67292 67293 67294 67295 67296 67297 67298 67299 67300 67301 67302 67303 67304 67305 67306 67307 67308 67309 67310 67311 67312 67313 67314 67315 67316 67317 67318 67319 67320 67321 67322 67323 67324 67325 67326 67327 67328 67329 67330 67331 67332 67333 67334 67335 67336 67337 67338 67339 67340 67341 67342 67343 67344 67345 67346 67347 67348 67349 67350 67351 67352 67353 67354 67355 67356 67357 67358 67359 67360 67361 67362 67363 67364 67365 67366 67367 67368 67369 67370 67371 67372 67373 67374 67375 67376 67377 67378 67379 67380 67381 67382 67383 67384 67385 67386 67387 67388 67389 67390 67391 67392 67393 67394 67395 67396 67397> # SplitBus
mul in 2 <67229 67195> out 1 <67398>     # cond trueterm
const-mul-neg-1 in 1 <67229> out 1 <67399> # cond minuscond
add in 2 <100 67399> out 1 <67400>       # cond negcond
mul in 2 <67400 67185> out 1 <67401>     # cond falseterm
add in 2 <67398 67401> out 1 <67402>     # cond result
const-mul-ffffffff in 1 <67402> out 1 <67403> # multiply-by-constant 4294967295
add in 2 <67402 67180> out 1 <67404>     # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
split in 1 <67404> outplitBus
const-mul-2 in 1 <67436> out 1 <67640>   # join source bit 31
add in 2 <67435 67640> out 1 <67641>     # join source bit 30
const-mul-2 in 1 <67641> out 1 <67642>   # join
add in 2 <67434 67642> out 1 <67643>     # join source bit 29
const-mul-2 in 1 <67643> out 1 <67644>   # join
add in 2 <67433 67644> out 1 <67645>     # join source bit 28
const-mul-2 in 1 <67645> out 1 <67646>   # join
add in 2 <67432 67646> out 1 <67647>     # join source bit 27
const-mul-2 in 1 <67647> out 1 <67648>   # join
add in 2 <67431 67648> out 1 <67649>     # join source bit 26
const-mul-2 in 1 <67649> out 1 <67650>   # join
add in 2 <67430 67650> out 1 <67651>     # join source bit 25
const-mul-2 in 1 <67651> out 1 <67652>   # join
add in 2 <67429 67652> out 1 <67653>     # join source bit 24
const-mul-2 in 1 <67653> out 1 <67654>   # join
add in 2 <67428 67654> out 1 <67655>     # join source bit 23
const-mul-2 in 1 <67655> out 1 <67656>   # join
add in 2 <67427 67656> out 1 <67657>     # join source bit 22
const-mul-2 in 1 <67657> out 1 <67658>   # join
add in 2 <67426 67658> out 1 <67659>     # join source bit 21
const-mul-2 in 1 <67659> out 1 <67660>   # join
add in 2 <67425 67660> out 1 <67661>     # join source bit 20
const-mul-2 in 1 <67661> out 1 <67662>   # join
add in 2 <67424 67662> out 1 <67663>     # join source bit 19
const-mul-2 in 1 <67663> out 1 <67664>   # join
add in 2 <67423 67664> out 1 <67665>     # join source bit 18
const-mul-2 in 1 <67665> out 1 <67666>   # join
add in 2 <67422 67666> out 1 <67667>     # join source bit 17
const-mul-2 in 1 <67667> out 1 <67668>   # join
add in 2 <67421 67668> out 1 <67669>     # join source bit 16
const-mul-2 in 1 <67669> out 1 <67670>   # join
add in 2 <67420 67670> out 1 <67671>     # join source bit 15
const-mul-2 in 1 <67671> out 1 <67672>   # join
add in 2 <67419 67672> out 1 <67673>     # join source bit 14
const-mul-2 in 1 <67673> out 1 <67674>   # join
add in 2 <67418 67674> out 1 <67675>     # join source bit 13
const-mul-2 in 1 <67675> out 1 <67676>   # join
add in 2 <67417 67676> out 1 <67677>     # join source bit 12
const-mul-2 in 1 <67677> out 1 <67678>   # join
add in 2 <67416 67678> out 1 <67679>     # join source bit 11
const-mul-2 in 1 <67679> out 1 <67680>   # join
add in 2 <67415 67680> out 1 <67681>     # join source bit 10
const-mul-2 in 1 <67681> out 1 <67682>   # join
add in 2 <67414 67682> out 1 <67683>     # join source bit 9
const-mul-2 in 1 <67683> out 1 <67684>   # join
add in 2 <67413 67684> out 1 <67685>     # join source bit 8
const-mul-2 in 1 <67685> out 1 <67686>   # join
add in 2 <67412 67686> out 1 <67687>     # join source bit 7
const-mul-2 in 1 <67687> out 1 <67688>   # join
add in 2 <67411 67688> out 1 <67689>     # join source bit 6
const-mul-2 in 1 <67689> out 1 <67690>   # join
add in 2 <67410 67690> out 1 <67691>     # join source bit 5
const-mul-2 in 1 <67691> out 1 <67692>   # join
add in 2 <67409 67692> out 1 <67693>     # join source bit 4
const-mul-2 in 1 <67693> out 1 <67694>   # join
add in 2 <67408 67694> out 1 <67695>     # join source bit 3
const-mul-2 in 1 <67695> out 1 <67696>   # join
add in 2 <67407 67696> out 1 <67697>     # join source bit 2
const-mul-2 in 1 <67697> out 1 <67698>   # join
add in 2 <67406 67698> out 1 <67699>     # join source bit 1
const-mul-2 in 1 <67699> out 1 <67700>   # join
add in 2 <67405 67700> out 1 <67701>     # join source bit 0
add in 2 <67701 67701> out 1 <67702>     # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <67702> out 1 <67703> # multiply-by-constant 4294967295
add in 2 <67404 67703> out 1 <67704>     # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <67402> out 1 <67705> # multiply-by-constant 4294967295
add in 2 <67180 67705> out 1 <67706>     # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <67706> outplitBus
mul in 2 <67738 67704> out 1 <67974>     # cond trueterm
const-mul-neg-1 in 1 <67738> out 1 <67975> # cond minuscond
add in 2 <100 67975> out 1 <67976>       # cond negcond
mul in 2 <67976 67180> out 1 <67977>     # cond falseterm
add in 2 <67974 67977> out 1 <67978>     # cond result
add in 2 <67978 104> out 1 <67979>       # ArithBusReq.AddReq(DFG.Conditional,DFG.Constant)
const-mul-ffffffff in 1 <22> out 1 <67980> # multiply-by-constant 4294967295
add in 2 <67979 67980> out 1 <67981>     # 'CmpLT DFG.Add - DFG.Input'
split in 1 <67981> outplitBus
mul in 2 <68013 103> out 1 <68220>       # cond trueterm
const-mul-neg-1 in 1 <68013> out 1 <68221> # cond minuscond
add in 2 <100 68221> out 1 <68222>       # cond negcond
mul in 2 <68222 102> out 1 <68223>       # cond falseterm
add in 2 <68220 68223> out 1 <68224>     # cond result
add in 2 <67978 3084> out 1 <68225>      # ArithBusReq.AddReq(DFG.Conditional,DFG.Negate)
const-mul-ffffffff in 1 <68225> out 1 <68226> # multiply-by-constant 4294967295
add in 2 <22 68226> out 1 <68227>        # 'CmpLT DFG.Input - DFG.Subtract'
split in 1 <68227> outplitBus
mul in 2 <68259 103> out 1 <68498>       # cond trueterm
const-mul-neg-1 in 1 <68259> out 1 <68499> # cond minuscond
add in 2 <100 68499> out 1 <68500>       # cond negcond
mul in 2 <68500 68224> out 1 <68501>     # cond falseterm
add in 2 <68498 68501> out 1 <68502>     # cond result
const-mul-ffffffff in 1 <21> out 1 <68503> # multiply-by-constant 4294967295
add in 2 <21 22> out 1 <68504>           # ArithBusReq.AddReq(DFG.Input,DFG.Input)
add in 2 <68504 68503> out 1 <68505>     # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <68505> out 1 <68506> # multiply-by-constant 4294967295
add in 2 <68504 68506> out 1 <68507>     # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <21> out 1 <68508> # multiply-by-constant 4294967295
add in 2 <22 68508> out 1 <68509>        # 'CmpLT DFG.Input - DFG.Input'
split in 1 <68509> out 65 <68510 68511 68512 68513 68514 68515 68516 68517 68518 68519 68520 68521 68522 68523 68524 68525 68526 68527 68528 68529 68530 68531 68532 68533 68534 68535 68536 68537 68538 68539 68540 68541 68542 68543 68544 68545 68546 68547 68548 68549 68550 68551 68552 68553 68554 68555 68556 68557 68558 68559 68560 68561 68562 68563 68564 68565 68566 68567 68568 68569 68570 68571 68572 68573 68574> # SplitBus
mul in 2 <68541 68507> out 1 <68575>     # cond trueterm
const-mul-neg-1 in 1 <68541> out 1 <68576> # cond minuscond
add in 2 <100 68576> out 1 <68577>       # cond negcond
mul in 2 <68577 22> out 1 <68578>        # cond falseterm
add in 2 <68575 68578> out 1 <68579>     # cond result
const-mul-ffffffff in 1 <68579> out 1 <68580> # multiply-by-constant 4294967295
add in 2 <68579 23> out 1 <68581>        # ArithBusReq.AddReq(DFG.Conditional,DFG.Input)
add in 2 <68581 68580> out 1 <68582>     # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <68582> out 1 <68583> # multiply-by-constant 4294967295
add in 2 <68581 68583> out 1 <68584>     # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <68579> out 1 <68585> # multiply-by-constant 4294967295
add in 2 <23 68585> out 1 <68586>        # 'CmpLT DFG.Input - DFG.Conditional'
split in 1 <68586> outplitBus
mul in 2 <68618 68584> out 1 <68718>     # cond trueterm
const-mul-neg-1 in 1 <68618> out 1 <68719> # cond minuscond
add in 2 <100 68719> out 1 <68720>       # cond negcond
mul in 2 <68720 23> out 1 <68721>        # cond falseterm
add in 2 <68718 68721> out 1 <68722>     # cond result
const-mul-ffffffff in 1 <68722> out 1 <68723> # multiply-by-constant 4294967295
add in 2 <68722 24> out 1 <68724>        # ArithBusReq.AddReq(DFG.Conditional,DFG.Input)
add in 2 <68724 68723> out 1 <68725>     # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <68722> out 1 <68726> # multiply-by-constant 4294967295
add in 2 <24 68726> out 1 <68727>        # 'CmpLT DFG.Input - DFG.Conditional'
split in 1 <68727> out 197 <68728 68729 68730 68731 68732 68733 68734 68735 68736 68737 68738 68739 68740 68741 68742 68743 68744 68745 68746 68747 68748 68749 68750 68751 68752 68753 68754 68755 68756 68757 68758 68759 68760 68761 68762 68763 68764 68765 68766 68767 68768 68769 68770 68771 68772 68773 68774 68775 68776 68777 68778 68779 68780 68781 68782 68783 68784 68785 68786 68787 68788 68789 68790 68791 68792 68793 68794 68795 68796 68797 68798 68799 68800 68801 68802 68803 68804 68805 68806 68807 68808 68809 68810 68811 68812 68813 68814 68815 68816 68817 68818 68819 68820 68821 68822 68823 68824 68825 68826 68827 68828 68829 68830 68831 68832 68833 68834 68835 68836 68837 68838 68839 68840 68841 68842 68843 68844 68845 68846 68847 68848 68849 68850 68851 68852 68853 68854 68855 68856 68857 68858 68859 68860 68861 68862 68863 68864 68865 68866 68867 68868 68869 68870 68871 68872 68873 68874 68875 68876 68877 68878 68879 68880 68881 68882 68883 68884 68885 68886 68887 68888 68889 68890 68891 68892 68893 68894 68895 68896 68897 68898 68899 68900 68901 68902 68903 68904 68905 68906 68907 68908 68909 68910 68911 68912 68913 68914 68915 68916 68917 68918 68919 68920 68921 68922 68923 68924> # SplitBus
mul in 2 <68759 68725> out 1 <68925>     # cond trueterm
const-mul-neg-1 in 1 <68759> out 1 <68926> # cond minuscond
add in 2 <100 68926> out 1 <68927>       # cond negcond
mul in 2 <68927 68722> out 1 <68928>     # cond falseterm
add in 2 <68925 68928> out 1 <68929>     # cond result
mul in 2 <68618 68582> out 1 <68930>     # cond trueterm
const-mul-neg-1 in 1 <68618> out 1 <68931> # cond minuscond
add in 2 <100 68931> out 1 <68932>       # cond negcond
mul in 2 <68932 68579> out 1 <68933>     # cond falseterm
add in 2 <68930 68933> out 1 <68934>     # cond result
mul in 2 <68541 68505> out 1 <68935>     # cond trueterm
const-mul-neg-1 in 1 <68541> out 1 <68936> # cond minuscond
add in 2 <100 68936> out 1 <68937>       # cond negcond
mul in 2 <68937 21> out 1 <68938>        # cond falseterm
add in 2 <68935 68938> out 1 <68939>     # cond result
const-mul-ffffffff in 1 <68939> out 1 <68940> # multiply-by-constant 4294967295
add in 2 <68939 68934> out 1 <68941>     # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
add in 2 <68941 68940> out 1 <68942>     # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <68942> out 1 <68943> # multiply-by-constant 4294967295
add in 2 <68941 68943> out 1 <68944>     # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <68939> out 1 <68945> # multiply-by-constant 4294967295
add in 2 <68934 68945> out 1 <68946>     # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <68946> outplitBus
mul in 2 <68978 68944> out 1 <69079>     # cond trueterm
const-mul-neg-1 in 1 <68978> out 1 <69080> # cond minuscond
add in 2 <100 69080> out 1 <69081>       # cond negcond
mul in 2 <69081 68934> out 1 <69082>     # cond falseterm
add in 2 <69079 69082> out 1 <69083>     # cond result
const-mul-ffffffff in 1 <69083> out 1 <69084> # multiply-by-constant 4294967295
add in 2 <69083 68929> out 1 <69085>     # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
add in 2 <69085 69084> out 1 <69086>     # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <69086> out 1 <69087> # multiply-by-constant 4294967295
add in 2 <69085 69087> out 1 <69088>     # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <69083> out 1 <69089> # multiply-by-constant 4294967295
add in 2 <68929 69089> out 1 <69090>     # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <69090> out 199 <69091 69092 69093 69094 69095 69096 69097 69098 69099 69100 69101 69102 69103 69104 69105 69106 69107 69108 69109 69110 69111 69112 69113 69114 69115 69116 69117 69118 69119 69120 69121 69122 69123 69124 69125 69126 69127 69128 69129 69130 69131 69132 69133 69134 69135 69136 69137 69138 69139 69140 69141 69142 69143 69144 69145 69146 69147 69148 69149 69150 69151 69152 69153 69154 69155 69156 69157 69158 69159 69160 69161 69162 69163 69164 69165 69166 69167 69168 69169 69170 69171 69172 69173 69174 69175 69176 69177 69178 69179 69180 69181 69182 69183 69184 69185 69186 69187 69188 69189 69190 69191 69192 69193 69194 69195 69196 69197 69198 69199 69200 69201 69202 69203 69204 69205 69206 69207 69208 69209 69210 69211 69212 69213 69214 69215 69216 69217 69218 69219 69220 69221 69222 69223 69224 69225 69226 69227 69228 69229 69230 69231 69232 69233 69234 69235 69236 69237 69238 69239 69240 69241 69242 69243 69244 69245 69246 69247 69248 69249 69250 69251 69252 69253 69254 69255 69256 69257 69258 69259 69260 69261 69262 69263 69264 69265 69266 69267 69268 69269 69270 69271 69272 69273 69274 69275 69276 69277 69278 69279 69280 69281 69282 69283 69284 69285 69286 69287 69288 69289> # SplitBus
mul in 2 <69122 69088> out 1 <69290>     # cond trueterm
const-mul-neg-1 in 1 <69122> out 1 <69291> # cond minuscond
add in 2 <100 69291> out 1 <69292>       # cond negcond
mul in 2 <69292 68929> out 1 <69293>     # cond falseterm
add in 2 <69290 69293> out 1 <69294>     # cond result
const-mul-ffffffff in 1 <69294> out 1 <69295> # multiply-by-constant 4294967295
const-mul-ffffffff in 1 <68725> out 1 <69296> # multiply-by-constant 4294967295
add in 2 <68724 69296> out 1 <69297>     # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
mul in 2 <68759 69297> out 1 <69298>     # cond trueterm
const-mul-neg-1 in 1 <68759> out 1 <69299> # cond minuscond
add in 2 <100 69299> out 1 <69300>       # cond negcond
mul in 2 <69300 24> out 1 <69301>        # cond falseterm
add in 2 <69298 69301> out 1 <69302>     # cond result
const-mul-ffffffff in 1 <69302> out 1 <69303> # multiply-by-constant 4294967295
add in 2 <69302 25> out 1 <69304>        # ArithBusReq.AddReq(DFG.Conditional,DFG.Input)
split in 1 <69304> outplitBus
const-mul-2 in 1 <69336> out 1 <69536>   # join source bit 31
add in 2 <69335 69536> out 1 <69537>     # join source bit 30
const-mul-2 in 1 <69537> out 1 <69538>   # join
add in 2 <69334 69538> out 1 <69539>     # join source bit 29
const-mul-2 in 1 <69539> out 1 <69540>   # join
add in 2 <69333 69540> out 1 <69541>     # join source bit 28
const-mul-2 in 1 <69541> out 1 <69542>   # join
add in 2 <69332 69542> out 1 <69543>     # join source bit 27
const-mul-2 in 1 <69543> out 1 <69544>   # join
add in 2 <69331 69544> out 1 <69545>     # join source bit 26
const-mul-2 in 1 <69545> out 1 <69546>   # join
add in 2 <69330 69546> out 1 <69547>     # join source bit 25
const-mul-2 in 1 <69547> out 1 <69548>   # join
add in 2 <69329 69548> out 1 <69549>     # join source bit 24
const-mul-2 in 1 <69549> out 1 <69550>   # join
add in 2 <69328 69550> out 1 <69551>     # join source bit 23
const-mul-2 in 1 <69551> out 1 <69552>   # join
add in 2 <69327 69552> out 1 <69553>     # join source bit 22
const-mul-2 in 1 <69553> out 1 <69554>   # join
add in 2 <69326 69554> out 1 <69555>     # join source bit 21
const-mul-2 in 1 <69555> out 1 <69556>   # join
add in 2 <69325 69556> out 1 <69557>     # join source bit 20
const-mul-2 in 1 <69557> out 1 <69558>   # join
add in 2 <69324 69558> out 1 <69559>     # join source bit 19
const-mul-2 in 1 <69559> out 1 <69560>   # join
add in 2 <69323 69560> out 1 <69561>     # join source bit 18
const-mul-2 in 1 <69561> out 1 <69562>   # join
add in 2 <69322 69562> out 1 <69563>     # join source bit 17
const-mul-2 in 1 <69563> out 1 <69564>   # join
add in 2 <69321 69564> out 1 <69565>     # join source bit 16
const-mul-2 in 1 <69565> out 1 <69566>   # join
add in 2 <69320 69566> out 1 <69567>     # join source bit 15
const-mul-2 in 1 <69567> out 1 <69568>   # join
add in 2 <69319 69568> out 1 <69569>     # join source bit 14
const-mul-2 in 1 <69569> out 1 <69570>   # join
add in 2 <69318 69570> out 1 <69571>     # join source bit 13
const-mul-2 in 1 <69571> out 1 <69572>   # join
add in 2 <69317 69572> out 1 <69573>     # join source bit 12
const-mul-2 in 1 <69573> out 1 <69574>   # join
add in 2 <69316 69574> out 1 <69575>     # join source bit 11
const-mul-2 in 1 <69575> out 1 <69576>   # join
add in 2 <69315 69576> out 1 <69577>     # join source bit 10
const-mul-2 in 1 <69577> out 1 <69578>   # join
add in 2 <69314 69578> out 1 <69579>     # join source bit 9
const-mul-2 in 1 <69579> out 1 <69580>   # join
add in 2 <69313 69580> out 1 <69581>     # join source bit 8
const-mul-2 in 1 <69581> out 1 <69582>   # join
add in 2 <69312 69582> out 1 <69583>     # join source bit 7
const-mul-2 in 1 <69583> out 1 <69584>   # join
add in 2 <69311 69584> out 1 <69585>     # join source bit 6
const-mul-2 in 1 <69585> out 1 <69586>   # join
add in 2 <69310 69586> out 1 <69587>     # join source bit 5
const-mul-2 in 1 <69587> out 1 <69588>   # join
add in 2 <69309 69588> out 1 <69589>     # join source bit 4
const-mul-2 in 1 <69589> out 1 <69590>   # join
add in 2 <69308 69590> out 1 <69591>     # join source bit 3
const-mul-2 in 1 <69591> out 1 <69592>   # join
add in 2 <69307 69592> out 1 <69593>     # join source bit 2
const-mul-2 in 1 <69593> out 1 <69594>   # join
add in 2 <69306 69594> out 1 <69595>     # join source bit 1
const-mul-2 in 1 <69595> out 1 <69596>   # join
add in 2 <69305 69596> out 1 <69597>     # join source bit 0
add in 2 <69597 69597> out 1 <69598>     # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <69302> out 1 <69599> # multiply-by-constant 4294967295
add in 2 <25 69599> out 1 <69600>        # 'CmpLT DFG.Input - DFG.Conditional'
split in 1 <69600> outplitBus
mul in 2 <69632 69598> out 1 <69864>     # cond trueterm
const-mul-neg-1 in 1 <69632> out 1 <69865> # cond minuscond
add in 2 <100 69865> out 1 <69866>       # cond negcond
mul in 2 <69866 69302> out 1 <69867>     # cond falseterm
add in 2 <69864 69867> out 1 <69868>     # cond result
add in 2 <69294 69868> out 1 <69869>     # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
split in 1 <69869> outplitBus
const-mul-2 in 1 <69901> out 1 <70103>   # join source bit 31
add in 2 <69900 70103> out 1 <70104>     # join source bit 30
const-mul-2 in 1 <70104> out 1 <70105>   # join
add in 2 <69899 70105> out 1 <70106>     # join source bit 29
const-mul-2 in 1 <70106> out 1 <70107>   # join
add in 2 <69898 70107> out 1 <70108>     # join source bit 28
const-mul-2 in 1 <70108> out 1 <70109>   # join
add in 2 <69897 70109> out 1 <70110>     # join source bit 27
const-mul-2 in 1 <70110> out 1 <70111>   # join
add in 2 <69896 70111> out 1 <70112>     # join source bit 26
const-mul-2 in 1 <70112> out 1 <70113>   # join
add in 2 <69895 70113> out 1 <70114>     # join source bit 25
const-mul-2 in 1 <70114> out 1 <70115>   # join
add in 2 <69894 70115> out 1 <70116>     # join source bit 24
const-mul-2 in 1 <70116> out 1 <70117>   # join
add in 2 <69893 70117> out 1 <70118>     # join source bit 23
const-mul-2 in 1 <70118> out 1 <70119>   # join
add in 2 <69892 70119> out 1 <70120>     # join source bit 22
const-mul-2 in 1 <70120> out 1 <70121>   # join
add in 2 <69891 70121> out 1 <70122>     # join source bit 21
const-mul-2 in 1 <70122> out 1 <70123>   # join
add in 2 <69890 70123> out 1 <70124>     # join source bit 20
const-mul-2 in 1 <70124> out 1 <70125>   # join
add in 2 <69889 70125> out 1 <70126>     # join source bit 19
const-mul-2 in 1 <70126> out 1 <70127>   # join
add in 2 <69888 70127> out 1 <70128>     # join source bit 18
const-mul-2 in 1 <70128> out 1 <70129>   # join
add in 2 <69887 70129> out 1 <70130>     # join source bit 17
const-mul-2 in 1 <70130> out 1 <70131>   # join
add in 2 <69886 70131> out 1 <70132>     # join source bit 16
const-mul-2 in 1 <70132> out 1 <70133>   # join
add in 2 <69885 70133> out 1 <70134>     # join source bit 15
const-mul-2 in 1 <70134> out 1 <70135>   # join
add in 2 <69884 70135> out 1 <70136>     # join source bit 14
const-mul-2 in 1 <70136> out 1 <70137>   # join
add in 2 <69883 70137> out 1 <70138>     # join source bit 13
const-mul-2 in 1 <70138> out 1 <70139>   # join
add in 2 <69882 70139> out 1 <70140>     # join source bit 12
const-mul-2 in 1 <70140> out 1 <70141>   # join
add in 2 <69881 70141> out 1 <70142>     # join source bit 11
const-mul-2 in 1 <70142> out 1 <70143>   # join
add in 2 <69880 70143> out 1 <70144>     # join source bit 10
const-mul-2 in 1 <70144> out 1 <70145>   # join
add in 2 <69879 70145> out 1 <70146>     # join source bit 9
const-mul-2 in 1 <70146> out 1 <70147>   # join
add in 2 <69878 70147> out 1 <70148>     # join source bit 8
const-mul-2 in 1 <70148> out 1 <70149>   # join
add in 2 <69877 70149> out 1 <70150>     # join source bit 7
const-mul-2 in 1 <70150> out 1 <70151>   # join
add in 2 <69876 70151> out 1 <70152>     # join source bit 6
const-mul-2 in 1 <70152> out 1 <70153>   # join
add in 2 <69875 70153> out 1 <70154>     # join source bit 5
const-mul-2 in 1 <70154> out 1 <70155>   # join
add in 2 <69874 70155> out 1 <70156>     # join source bit 4
const-mul-2 in 1 <70156> out 1 <70157>   # join
add in 2 <69873 70157> out 1 <70158>     # join source bit 3
const-mul-2 in 1 <70158> out 1 <70159>   # join
add in 2 <69872 70159> out 1 <70160>     # join source bit 2
const-mul-2 in 1 <70160> out 1 <70161>   # join
add in 2 <69871 70161> out 1 <70162>     # join source bit 1
const-mul-2 in 1 <70162> out 1 <70163>   # join
add in 2 <69870 70163> out 1 <70164>     # join source bit 0
add in 2 <70164 70164> out 1 <70165>     # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <69294> out 1 <70166> # multiply-by-constant 4294967295
add in 2 <69868 70166> out 1 <70167>     # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <70167> outplitBus
mul in 2 <70199 70165> out 1 <70433>     # cond trueterm
const-mul-neg-1 in 1 <70199> out 1 <70434> # cond minuscond
add in 2 <100 70434> out 1 <70435>       # cond negcond
mul in 2 <70435 69294> out 1 <70436>     # cond falseterm
add in 2 <70433 70436> out 1 <70437>     # cond result
mul in 2 <69122 69086> out 1 <70438>     # cond trueterm
const-mul-neg-1 in 1 <69122> out 1 <70439> # cond minuscond
add in 2 <100 70439> out 1 <70440>       # cond negcond
mul in 2 <70440 69083> out 1 <70441>     # cond falseterm
add in 2 <70438 70441> out 1 <70442>     # cond result
mul in 2 <68978 68942> out 1 <70443>     # cond trueterm
const-mul-neg-1 in 1 <68978> out 1 <70444> # cond minuscond
add in 2 <100 70444> out 1 <70445>       # cond negcond
mul in 2 <70445 68939> out 1 <70446>     # cond falseterm
add in 2 <70443 70446> out 1 <70447>     # cond result
const-mul-ffffffff in 1 <70447> out 1 <70448> # multiply-by-constant 4294967295
add in 2 <70447 70442> out 1 <70449>     # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
add in 2 <70449 70448> out 1 <70450>     # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <70450> out 1 <70451> # multiply-by-constant 4294967295
add in 2 <70449 70451> out 1 <70452>     # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <70447> out 1 <70453> # multiply-by-constant 4294967295
add in 2 <70442 70453> out 1 <70454>     # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <70454> out 200 <70455 70456 70457 70458 70459 70460 70461 70462 70463 70464 70465 70466 70467 70468 70469 70470 70471 70472 70473 70474 70475 70476 70477 70478 70479 70480 70481 70482 70483 70484 70485 70486 70487 70488 70489 70490 70491 70492 70493 70494 70495 70496 70497 70498 70499 70500 70501 70502 70503 70504 70505 70506 70507 70508 70509 70510 70511 70512 70513 70514 70515 70516 70517 70518 70519 70520 70521 70522 70523 70524 70525 70526 70527 70528 70529 70530 70531 70532 70533 70534 70535 70536 70537 70538 70539 70540 70541 70542 70543 70544 70545 70546 70547 70548 70549 70550 70551 70552 70553 70554 70555 70556 70557 70558 70559 70560 70561 70562 70563 70564 70565 70566 70567 70568 70569 70570 70571 70572 70573 70574 70575 70576 70577 70578 70579 70580 70581 70582 70583 70584 70585 70586 70587 70588 70589 70590 70591 70592 70593 70594 70595 70596 70597 70598 70599 70600 70601 70602 70603 70604 70605 70606 70607 70608 70609 70610 70611 70612 70613 70614 70615 70616 70617 70618 70619 70620 70621 70622 70623 70624 70625 70626 70627 70628 70629 70630 70631 70632 70633 70634 70635 70636 70637 70638 70639 70640 70641 70642 70643 70644 70645 70646 70647 70648 70649 70650 70651 70652 70653 70654> # SplitBus
mul in 2 <70486 70452> out 1 <70655>     # cond trueterm
const-mul-neg-1 in 1 <70486> out 1 <70656> # cond minuscond
add in 2 <100 70656> out 1 <70657>       # cond negcond
mul in 2 <70657 70442> out 1 <70658>     # cond falseterm
add in 2 <70655 70658> out 1 <70659>     # cond result
const-mul-ffffffff in 1 <70659> out 1 <70660> # multiply-by-constant 4294967295
add in 2 <70659 70437> out 1 <70661>     # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
split in 1 <70661> outplitBus
const-mul-2 in 1 <70693> out 1 <70897>   # join source bit 31
add in 2 <70692 70897> out 1 <70898>     # join source bit 30
const-mul-2 in 1 <70898> out 1 <70899>   # join
add in 2 <70691 70899> out 1 <70900>     # join source bit 29
const-mul-2 in 1 <70900> out 1 <70901>   # join
add in 2 <70690 70901> out 1 <70902>     # join source bit 28
const-mul-2 in 1 <70902> out 1 <70903>   # join
add in 2 <70689 70903> out 1 <70904>     # join source bit 27
const-mul-2 in 1 <70904> out 1 <70905>   # join
add in 2 <70688 70905> out 1 <70906>     # join source bit 26
const-mul-2 in 1 <70906> out 1 <70907>   # join
add in 2 <70687 70907> out 1 <70908>     # join source bit 25
const-mul-2 in 1 <70908> out 1 <70909>   # join
add in 2 <70686 70909> out 1 <70910>     # join source bit 24
const-mul-2 in 1 <70910> out 1 <70911>   # join
add in 2 <70685 70911> out 1 <70912>     # join source bit 23
const-mul-2 in 1 <70912> out 1 <70913>   # join
add in 2 <70684 70913> out 1 <70914>     # join source bit 22
const-mul-2 in 1 <70914> out 1 <70915>   # join
add in 2 <70683 70915> out 1 <70916>     # join source bit 21
const-mul-2 in 1 <70916> out 1 <70917>   # join
add in 2 <70682 70917> out 1 <70918>     # join source bit 20
const-mul-2 in 1 <70918> out 1 <70919>   # join
add in 2 <70681 70919> out 1 <70920>     # join source bit 19
const-mul-2 in 1 <70920> out 1 <70921>   # join
add in 2 <70680 70921> out 1 <70922>     # join source bit 18
const-mul-2 in 1 <70922> out 1 <70923>   # join
add in 2 <70679 70923> out 1 <70924>     # join source bit 17
const-mul-2 in 1 <70924> out 1 <70925>   # join
add in 2 <70678 70925> out 1 <70926>     # join source bit 16
const-mul-2 in 1 <70926> out 1 <70927>   # join
add in 2 <70677 70927> out 1 <70928>     # join source bit 15
const-mul-2 in 1 <70928> out 1 <70929>   # join
add in 2 <70676 70929> out 1 <70930>     # join source bit 14
const-mul-2 in 1 <70930> out 1 <70931>   # join
add in 2 <70675 70931> out 1 <70932>     # join source bit 13
const-mul-2 in 1 <70932> out 1 <70933>   # join
add in 2 <70674 70933> out 1 <70934>     # join source bit 12
const-mul-2 in 1 <70934> out 1 <70935>   # join
add in 2 <70673 70935> out 1 <70936>     # join source bit 11
const-mul-2 in 1 <70936> out 1 <70937>   # join
add in 2 <70672 70937> out 1 <70938>     # join source bit 10
const-mul-2 in 1 <70938> out 1 <70939>   # join
add in 2 <70671 70939> out 1 <70940>     # join source bit 9
const-mul-2 in 1 <70940> out 1 <70941>   # join
add in 2 <70670 70941> out 1 <70942>     # join source bit 8
const-mul-2 in 1 <70942> out 1 <70943>   # join
add in 2 <70669 70943> out 1 <70944>     # join source bit 7
const-mul-2 in 1 <70944> out 1 <70945>   # join
add in 2 <70668 70945> out 1 <70946>     # join source bit 6
const-mul-2 in 1 <70946> out 1 <70947>   # join
add in 2 <70667 70947> out 1 <70948>     # join source bit 5
const-mul-2 in 1 <70948> out 1 <70949>   # join
add in 2 <70666 70949> out 1 <70950>     # join source bit 4
const-mul-2 in 1 <70950> out 1 <70951>   # join
add in 2 <70665 70951> out 1 <70952>     # join source bit 3
const-mul-2 in 1 <70952> out 1 <70953>   # join
add in 2 <70664 70953> out 1 <70954>     # join source bit 2
const-mul-2 in 1 <70954> out 1 <70955>   # join
add in 2 <70663 70955> out 1 <70956>     # join source bit 1
const-mul-2 in 1 <70956> out 1 <70957>   # join
add in 2 <70662 70957> out 1 <70958>     # join source bit 0
add in 2 <70958 70958> out 1 <70959>     # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <70959> out 1 <70960> # multiply-by-constant 4294967295
add in 2 <70661 70960> out 1 <70961>     # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <70659> out 1 <70962> # multiply-by-constant 4294967295
add in 2 <70437 70962> out 1 <70963>     # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <70963> outplitBus
mul in 2 <70995 70961> out 1 <71231>     # cond trueterm
const-mul-neg-1 in 1 <70995> out 1 <71232> # cond minuscond
add in 2 <100 71232> out 1 <71233>       # cond negcond
mul in 2 <71233 70437> out 1 <71234>     # cond falseterm
add in 2 <71231 71234> out 1 <71235>     # cond result
add in 2 <71235 104> out 1 <71236>       # ArithBusReq.AddReq(DFG.Conditional,DFG.Constant)
const-mul-ffffffff in 1 <23> out 1 <71237> # multiply-by-constant 4294967295
add in 2 <71236 71237> out 1 <71238>     # 'CmpLT DFG.Add - DFG.Input'
split in 1 <71238> outplitBus
mul in 2 <71270 103> out 1 <71477>       # cond trueterm
const-mul-neg-1 in 1 <71270> out 1 <71478> # cond minuscond
add in 2 <100 71478> out 1 <71479>       # cond negcond
mul in 2 <71479 102> out 1 <71480>       # cond falseterm
add in 2 <71477 71480> out 1 <71481>     # cond result
add in 2 <71235 3084> out 1 <71482>      # ArithBusReq.AddReq(DFG.Conditional,DFG.Negate)
const-mul-ffffffff in 1 <71482> out 1 <71483> # multiply-by-constant 4294967295
add in 2 <23 71483> out 1 <71484>        # 'CmpLT DFG.Input - DFG.Subtract'
split in 1 <71484> outplitBus
mul in 2 <71516 103> out 1 <71755>       # cond trueterm
const-mul-neg-1 in 1 <71516> out 1 <71756> # cond minuscond
add in 2 <100 71756> out 1 <71757>       # cond negcond
mul in 2 <71757 71481> out 1 <71758>     # cond falseterm
add in 2 <71755 71758> out 1 <71759>     # cond result
const-mul-ffffffff in 1 <22> out 1 <71760> # multiply-by-constant 4294967295
add in 2 <22 23> out 1 <71761>           # ArithBusReq.AddReq(DFG.Input,DFG.Input)
add in 2 <71761 71760> out 1 <71762>     # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <71762> out 1 <71763> # multiply-by-constant 4294967295
add in 2 <71761 71763> out 1 <71764>     # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <22> out 1 <71765> # multiply-by-constant 4294967295
add in 2 <23 71765> out 1 <71766>        # 'CmpLT DFG.Input - DFG.Input'
split in 1 <71766> out 65 <71767 71768 71769 71770 71771 71772 71773 71774 71775 71776 71777 71778 71779 71780 71781 71782 71783 71784 71785 71786 71787 71788 71789 71790 71791 71792 71793 71794 71795 71796 71797 71798 71799 71800 71801 71802 71803 71804 71805 71806 71807 71808 71809 71810 71811 71812 71813 71814 71815 71816 71817 71818 71819 71820 71821 71822 71823 71824 71825 71826 71827 71828 71829 71830 71831> # SplitBus
mul in 2 <71798 71764> out 1 <71832>     # cond trueterm
const-mul-neg-1 in 1 <71798> out 1 <71833> # cond minuscond
add in 2 <100 71833> out 1 <71834>       # cond negcond
mul in 2 <71834 23> out 1 <71835>        # cond falseterm
add in 2 <71832 71835> out 1 <71836>     # cond result
const-mul-ffffffff in 1 <71836> out 1 <71837> # multiply-by-constant 4294967295
add in 2 <71836 24> out 1 <71838>        # ArithBusReq.AddReq(DFG.Conditional,DFG.Input)
add in 2 <71838 71837> out 1 <71839>     # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <71839> out 1 <71840> # multiply-by-constant 4294967295
add in 2 <71838 71840> out 1 <71841>     # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <71836> out 1 <71842> # multiply-by-constant 4294967295
add in 2 <24 71842> out 1 <71843>        # 'CmpLT DFG.Input - DFG.Conditional'
split in 1 <71843> outplitBus
mul in 2 <71875 71841> out 1 <71975>     # cond trueterm
const-mul-neg-1 in 1 <71875> out 1 <71976> # cond minuscond
add in 2 <100 71976> out 1 <71977>       # cond negcond
mul in 2 <71977 24> out 1 <71978>        # cond falseterm
add in 2 <71975 71978> out 1 <71979>     # cond result
const-mul-ffffffff in 1 <71979> out 1 <71980> # multiply-by-constant 4294967295
add in 2 <71979 25> out 1 <71981>        # ArithBusReq.AddReq(DFG.Conditional,DFG.Input)
add in 2 <71981 71980> out 1 <71982>     # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <71979> out 1 <71983> # multiply-by-constant 4294967295
add in 2 <25 71983> out 1 <71984>        # 'CmpLT DFG.Input - DFG.Conditional'
split in 1 <71984> out 197 <71985 71986 71987 71988 71989 71990 71991 71992 71993 71994 71995 71996 71997 71998 71999 72000 72001 72002 72003 72004 72005 72006 72007 72008 72009 72010 72011 72012 72013 72014 72015 72016 72017 72018 72019 72020 72021 72022 72023 72024 72025 72026 72027 72028 72029 72030 72031 72032 72033 72034 72035 72036 72037 72038 72039 72040 72041 72042 72043 72044 72045 72046 72047 72048 72049 72050 72051 72052 72053 72054 72055 72056 72057 72058 72059 72060 72061 72062 72063 72064 72065 72066 72067 72068 72069 72070 72071 72072 72073 72074 72075 72076 72077 72078 72079 72080 72081 72082 72083 72084 72085 72086 72087 72088 72089 72090 72091 72092 72093 72094 72095 72096 72097 72098 72099 72100 72101 72102 72103 72104 72105 72106 72107 72108 72109 72110 72111 72112 72113 72114 72115 72116 72117 72118 72119 72120 72121 72122 72123 72124 72125 72126 72127 72128 72129 72130 72131 72132 72133 72134 72135 72136 72137 72138 72139 72140 72141 72142 72143 72144 72145 72146 72147 72148 72149 72150 72151 72152 72153 72154 72155 72156 72157 72158 72159 72160 72161 72162 72163 72164 72165 72166 72167 72168 72169 72170 72171 72172 72173 72174 72175 72176 72177 72178 72179 72180 72181> # SplitBus
mul in 2 <72016 71982> out 1 <72182>     # cond trueterm
const-mul-neg-1 in 1 <72016> out 1 <72183> # cond minuscond
add in 2 <100 72183> out 1 <72184>       # cond negcond
mul in 2 <72184 71979> out 1 <72185>     # cond falseterm
add in 2 <72182 72185> out 1 <72186>     # cond result
mul in 2 <71875 71839> out 1 <72187>     # cond trueterm
const-mul-neg-1 in 1 <71875> out 1 <72188> # cond minuscond
add in 2 <100 72188> out 1 <72189>       # cond negcond
mul in 2 <72189 71836> out 1 <72190>     # cond falseterm
add in 2 <72187 72190> out 1 <72191>     # cond result
mul in 2 <71798 71762> out 1 <72192>     # cond trueterm
const-mul-neg-1 in 1 <71798> out 1 <72193> # cond minuscond
add in 2 <100 72193> out 1 <72194>       # cond negcond
mul in 2 <72194 22> out 1 <72195>        # cond falseterm
add in 2 <72192 72195> out 1 <72196>     # cond result
const-mul-ffffffff in 1 <72196> out 1 <72197> # multiply-by-constant 4294967295
add in 2 <72196 72191> out 1 <72198>     # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
add in 2 <72198 72197> out 1 <72199>     # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <72199> out 1 <72200> # multiply-by-constant 4294967295
add in 2 <72198 72200> out 1 <72201>     # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <72196> out 1 <72202> # multiply-by-constant 4294967295
add in 2 <72191 72202> out 1 <72203>     # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <72203> outplitBus
mul in 2 <72235 72201> out 1 <72336>     # cond trueterm
const-mul-neg-1 in 1 <72235> out 1 <72337> # cond minuscond
add in 2 <100 72337> out 1 <72338>       # cond negcond
mul in 2 <72338 72191> out 1 <72339>     # cond falseterm
add in 2 <72336 72339> out 1 <72340>     # cond result
const-mul-ffffffff in 1 <72340> out 1 <72341> # multiply-by-constant 4294967295
add in 2 <72340 72186> out 1 <72342>     # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
add in 2 <72342 72341> out 1 <72343>     # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <72343> out 1 <72344> # multiply-by-constant 4294967295
add in 2 <72342 72344> out 1 <72345>     # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <72340> out 1 <72346> # multiply-by-constant 4294967295
add in 2 <72186 72346> out 1 <72347>     # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <72347> out 199 <72348 72349 72350 72351 72352 72353 72354 72355 72356 72357 72358 72359 72360 72361 72362 72363 72364 72365 72366 72367 72368 72369 72370 72371 72372 72373 72374 72375 72376 72377 72378 72379 72380 72381 72382 72383 72384 72385 72386 72387 72388 72389 72390 72391 72392 72393 72394 72395 72396 72397 72398 72399 72400 72401 72402 72403 72404 72405 72406 72407 72408 72409 72410 72411 72412 72413 72414 72415 72416 72417 72418 72419 72420 72421 72422 72423 72424 72425 72426 72427 72428 72429 72430 72431 72432 72433 72434 72435 72436 72437 72438 72439 72440 72441 72442 72443 72444 72445 72446 72447 72448 72449 72450 72451 72452 72453 72454 72455 72456 72457 72458 72459 72460 72461 72462 72463 72464 72465 72466 72467 72468 72469 72470 72471 72472 72473 72474 72475 72476 72477 72478 72479 72480 72481 72482 72483 72484 72485 72486 72487 72488 72489 72490 72491 72492 72493 72494 72495 72496 72497 72498 72499 72500 72501 72502 72503 72504 72505 72506 72507 72508 72509 72510 72511 72512 72513 72514 72515 72516 72517 72518 72519 72520 72521 72522 72523 72524 72525 72526 72527 72528 72529 72530 72531 72532 72533 72534 72535 72536 72537 72538 72539 72540 72541 72542 72543 72544 72545 72546> # SplitBus
mul in 2 <72379 72345> out 1 <72547>     # cond trueterm
const-mul-neg-1 in 1 <72379> out 1 <72548> # cond minuscond
add in 2 <100 72548> out 1 <72549>       # cond negcond
mul in 2 <72549 72186> out 1 <72550>     # cond falseterm
add in 2 <72547 72550> out 1 <72551>     # cond result
const-mul-ffffffff in 1 <72551> out 1 <72552> # multiply-by-constant 4294967295
const-mul-ffffffff in 1 <71982> out 1 <72553> # multiply-by-constant 4294967295
add in 2 <71981 72553> out 1 <72554>     # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
mul in 2 <72016 72554> out 1 <72555>     # cond trueterm
const-mul-neg-1 in 1 <72016> out 1 <72556> # cond minuscond
add in 2 <100 72556> out 1 <72557>       # cond negcond
mul in 2 <72557 25> out 1 <72558>        # cond falseterm
add in 2 <72555 72558> out 1 <72559>     # cond result
const-mul-ffffffff in 1 <72559> out 1 <72560> # multiply-by-constant 4294967295
add in 2 <72559 26> out 1 <72561>        # ArithBusReq.AddReq(DFG.Conditional,DFG.Input)
split in 1 <72561> outplitBus
const-mul-2 in 1 <72593> out 1 <72793>   # join source bit 31
add in 2 <72592 72793> out 1 <72794>     # join source bit 30
const-mul-2 in 1 <72794> out 1 <72795>   # join
add in 2 <72591 72795> out 1 <72796>     # join source bit 29
const-mul-2 in 1 <72796> out 1 <72797>   # join
add in 2 <72590 72797> out 1 <72798>     # join source bit 28
const-mul-2 in 1 <72798> out 1 <72799>   # join
add in 2 <72589 72799> out 1 <72800>     # join source bit 27
const-mul-2 in 1 <72800> out 1 <72801>   # join
add in 2 <72588 72801> out 1 <72802>     # join source bit 26
const-mul-2 in 1 <72802> out 1 <72803>   # join
add in 2 <72587 72803> out 1 <72804>     # join source bit 25
const-mul-2 in 1 <72804> out 1 <72805>   # join
add in 2 <72586 72805> out 1 <72806>     # join source bit 24
const-mul-2 in 1 <72806> out 1 <72807>   # join
add in 2 <72585 72807> out 1 <72808>     # join source bit 23
const-mul-2 in 1 <72808> out 1 <72809>   # join
add in 2 <72584 72809> out 1 <72810>     # join source bit 22
const-mul-2 in 1 <72810> out 1 <72811>   # join
add in 2 <72583 72811> out 1 <72812>     # join source bit 21
const-mul-2 in 1 <72812> out 1 <72813>   # join
add in 2 <72582 72813> out 1 <72814>     # join source bit 20
const-mul-2 in 1 <72814> out 1 <72815>   # join
add in 2 <72581 72815> out 1 <72816>     # join source bit 19
const-mul-2 in 1 <72816> out 1 <72817>   # join
add in 2 <72580 72817> out 1 <72818>     # join source bit 18
const-mul-2 in 1 <72818> out 1 <72819>   # join
add in 2 <72579 72819> out 1 <72820>     # join source bit 17
const-mul-2 in 1 <72820> out 1 <72821>   # join
add in 2 <72578 72821> out 1 <72822>     # join source bit 16
const-mul-2 in 1 <72822> out 1 <72823>   # join
add in 2 <72577 72823> out 1 <72824>     # join source bit 15
const-mul-2 in 1 <72824> out 1 <72825>   # join
add in 2 <72576 72825> out 1 <72826>     # join source bit 14
const-mul-2 in 1 <72826> out 1 <72827>   # join
add in 2 <72575 72827> out 1 <72828>     # join source bit 13
const-mul-2 in 1 <72828> out 1 <72829>   # join
add in 2 <72574 72829> out 1 <72830>     # join source bit 12
const-mul-2 in 1 <72830> out 1 <72831>   # join
add in 2 <72573 72831> out 1 <72832>     # join source bit 11
const-mul-2 in 1 <72832> out 1 <72833>   # join
add in 2 <72572 72833> out 1 <72834>     # join source bit 10
const-mul-2 in 1 <72834> out 1 <72835>   # join
add in 2 <72571 72835> out 1 <72836>     # join source bit 9
const-mul-2 in 1 <72836> out 1 <72837>   # join
add in 2 <72570 72837> out 1 <72838>     # join source bit 8
const-mul-2 in 1 <72838> out 1 <72839>   # join
add in 2 <72569 72839> out 1 <72840>     # join source bit 7
const-mul-2 in 1 <72840> out 1 <72841>   # join
add in 2 <72568 72841> out 1 <72842>     # join source bit 6
const-mul-2 in 1 <72842> out 1 <72843>   # join
add in 2 <72567 72843> out 1 <72844>     # join source bit 5
const-mul-2 in 1 <72844> out 1 <72845>   # join
add in 2 <72566 72845> out 1 <72846>     # join source bit 4
const-mul-2 in 1 <72846> out 1 <72847>   # join
add in 2 <72565 72847> out 1 <72848>     # join source bit 3
const-mul-2 in 1 <72848> out 1 <72849>   # join
add in 2 <72564 72849> out 1 <72850>     # join source bit 2
const-mul-2 in 1 <72850> out 1 <72851>   # join
add in 2 <72563 72851> out 1 <72852>     # join source bit 1
const-mul-2 in 1 <72852> out 1 <72853>   # join
add in 2 <72562 72853> out 1 <72854>     # join source bit 0
add in 2 <72854 72854> out 1 <72855>     # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <72559> out 1 <72856> # multiply-by-constant 4294967295
add in 2 <26 72856> out 1 <72857>        # 'CmpLT DFG.Input - DFG.Conditional'
split in 1 <72857> outplitBus
mul in 2 <72889 72855> out 1 <73121>     # cond trueterm
const-mul-neg-1 in 1 <72889> out 1 <73122> # cond minuscond
add in 2 <100 73122> out 1 <73123>       # cond negcond
mul in 2 <73123 72559> out 1 <73124>     # cond falseterm
add in 2 <73121 73124> out 1 <73125>     # cond result
add in 2 <72551 73125> out 1 <73126>     # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
split in 1 <73126> outplitBus
const-mul-2 in 1 <73158> out 1 <73360>   # join source bit 31
add in 2 <73157 73360> out 1 <73361>     # join source bit 30
const-mul-2 in 1 <73361> out 1 <73362>   # join
add in 2 <73156 73362> out 1 <73363>     # join source bit 29
const-mul-2 in 1 <73363> out 1 <73364>   # join
add in 2 <73155 73364> out 1 <73365>     # join source bit 28
const-mul-2 in 1 <73365> out 1 <73366>   # join
add in 2 <73154 73366> out 1 <73367>     # join source bit 27
const-mul-2 in 1 <73367> out 1 <73368>   # join
add in 2 <73153 73368> out 1 <73369>     # join source bit 26
const-mul-2 in 1 <73369> out 1 <73370>   # join
add in 2 <73152 73370> out 1 <73371>     # join source bit 25
const-mul-2 in 1 <73371> out 1 <73372>   # join
add in 2 <73151 73372> out 1 <73373>     # join source bit 24
const-mul-2 in 1 <73373> out 1 <73374>   # join
add in 2 <73150 73374> out 1 <73375>     # join source bit 23
const-mul-2 in 1 <73375> out 1 <73376>   # join
add in 2 <73149 73376> out 1 <73377>     # join source bit 22
const-mul-2 in 1 <73377> out 1 <73378>   # join
add in 2 <73148 73378> out 1 <73379>     # join source bit 21
const-mul-2 in 1 <73379> out 1 <73380>   # join
add in 2 <73147 73380> out 1 <73381>     # join source bit 20
const-mul-2 in 1 <73381> out 1 <73382>   # join
add in 2 <73146 73382> out 1 <73383>     # join source bit 19
const-mul-2 in 1 <73383> out 1 <73384>   # join
add in 2 <73145 73384> out 1 <73385>     # join source bit 18
const-mul-2 in 1 <73385> out 1 <73386>   # join
add in 2 <73144 73386> out 1 <73387>     # join source bit 17
const-mul-2 in 1 <73387> out 1 <73388>   # join
add in 2 <73143 73388> out 1 <73389>     # join source bit 16
const-mul-2 in 1 <73389> out 1 <73390>   # join
add in 2 <73142 73390> out 1 <73391>     # join source bit 15
const-mul-2 in 1 <73391> out 1 <73392>   # join
add in 2 <73141 73392> out 1 <73393>     # join source bit 14
const-mul-2 in 1 <73393> out 1 <73394>   # join
add in 2 <73140 73394> out 1 <73395>     # join source bit 13
const-mul-2 in 1 <73395> out 1 <73396>   # join
add in 2 <73139 73396> out 1 <73397>     # join source bit 12
const-mul-2 in 1 <73397> out 1 <73398>   # join
add in 2 <73138 73398> out 1 <73399>     # join source bit 11
const-mul-2 in 1 <73399> out 1 <73400>   # join
add in 2 <73137 73400> out 1 <73401>     # join source bit 10
const-mul-2 in 1 <73401> out 1 <73402>   # join
add in 2 <73136 73402> out 1 <73403>     # join source bit 9
const-mul-2 in 1 <73403> out 1 <73404>   # join
add in 2 <73135 73404> out 1 <73405>     # join source bit 8
const-mul-2 in 1 <73405> out 1 <73406>   # join
add in 2 <73134 73406> out 1 <73407>     # join source bit 7
const-mul-2 in 1 <73407> out 1 <73408>   # join
add in 2 <73133 73408> out 1 <73409>     # join source bit 6
const-mul-2 in 1 <73409> out 1 <73410>   # join
add in 2 <73132 73410> out 1 <73411>     # join source bit 5
const-mul-2 in 1 <73411> out 1 <73412>   # join
add in 2 <73131 73412> out 1 <73413>     # join source bit 4
const-mul-2 in 1 <73413> out 1 <73414>   # join
add in 2 <73130 73414> out 1 <73415>     # join source bit 3
const-mul-2 in 1 <73415> out 1 <73416>   # join
add in 2 <73129 73416> out 1 <73417>     # join source bit 2
const-mul-2 in 1 <73417> out 1 <73418>   # join
add in 2 <73128 73418> out 1 <73419>     # join source bit 1
const-mul-2 in 1 <73419> out 1 <73420>   # join
add in 2 <73127 73420> out 1 <73421>     # join source bit 0
add in 2 <73421 73421> out 1 <73422>     # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <72551> out 1 <73423> # multiply-by-constant 4294967295
add in 2 <73125 73423> out 1 <73424>     # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <73424> outplitBus
mul in 2 <73456 73422> out 1 <73690>     # cond trueterm
const-mul-neg-1 in 1 <73456> out 1 <73691> # cond minuscond
add in 2 <100 73691> out 1 <73692>       # cond negcond
mul in 2 <73692 72551> out 1 <73693>     # cond falseterm
add in 2 <73690 73693> out 1 <73694>     # cond result
mul in 2 <72379 72343> out 1 <73695>     # cond trueterm
const-mul-neg-1 in 1 <72379> out 1 <73696> # cond minuscond
add in 2 <100 73696> out 1 <73697>       # cond negcond
mul in 2 <73697 72340> out 1 <73698>     # cond falseterm
add in 2 <73695 73698> out 1 <73699>     # cond result
mul in 2 <72235 72199> out 1 <73700>     # cond trueterm
const-mul-neg-1 in 1 <72235> out 1 <73701> # cond minuscond
add in 2 <100 73701> out 1 <73702>       # cond negcond
mul in 2 <73702 72196> out 1 <73703>     # cond falseterm
add in 2 <73700 73703> out 1 <73704>     # cond result
const-mul-ffffffff in 1 <73704> out 1 <73705> # multiply-by-constant 4294967295
add in 2 <73704 73699> out 1 <73706>     # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
add in 2 <73706 73705> out 1 <73707>     # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <73707> out 1 <73708> # multiply-by-constant 4294967295
add in 2 <73706 73708> out 1 <73709>     # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <73704> out 1 <73710> # multiply-by-constant 4294967295
add in 2 <73699 73710> out 1 <73711>     # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <73711> out 200 <73712 73713 73714 73715 73716 73717 73718 73719 73720 73721 73722 73723 73724 73725 73726 73727 73728 73729 73730 73731 73732 73733 73734 73735 73736 73737 73738 73739 73740 73741 73742 73743 73744 73745 73746 73747 73748 73749 73750 73751 73752 73753 73754 73755 73756 73757 73758 73759 73760 73761 73762 73763 73764 73765 73766 73767 73768 73769 73770 73771 73772 73773 73774 73775 73776 73777 73778 73779 73780 73781 73782 73783 73784 73785 73786 73787 73788 73789 73790 73791 73792 73793 73794 73795 73796 73797 73798 73799 73800 73801 73802 73803 73804 73805 73806 73807 73808 73809 73810 73811 73812 73813 73814 73815 73816 73817 73818 73819 73820 73821 73822 73823 73824 73825 73826 73827 73828 73829 73830 73831 73832 73833 73834 73835 73836 73837 73838 73839 73840 73841 73842 73843 73844 73845 73846 73847 73848 73849 73850 73851 73852 73853 73854 73855 73856 73857 73858 73859 73860 73861 73862 73863 73864 73865 73866 73867 73868 73869 73870 73871 73872 73873 73874 73875 73876 73877 73878 73879 73880 73881 73882 73883 73884 73885 73886 73887 73888 73889 73890 73891 73892 73893 73894 73895 73896 73897 73898 73899 73900 73901 73902 73903 73904 73905 73906 73907 73908 73909 73910 73911> # SplitBus
mul in 2 <73743 73709> out 1 <73912>     # cond trueterm
const-mul-neg-1 in 1 <73743> out 1 <73913> # cond minuscond
add in 2 <100 73913> out 1 <73914>       # cond negcond
mul in 2 <73914 73699> out 1 <73915>     # cond falseterm
add in 2 <73912 73915> out 1 <73916>     # cond result
const-mul-ffffffff in 1 <73916> out 1 <73917> # multiply-by-constant 4294967295
add in 2 <73916 73694> out 1 <73918>     # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
split in 1 <73918> outplitBus
const-mul-2 in 1 <73950> out 1 <74154>   # join source bit 31
add in 2 <73949 74154> out 1 <74155>     # join source bit 30
const-mul-2 in 1 <74155> out 1 <74156>   # join
add in 2 <73948 74156> out 1 <74157>     # join source bit 29
const-mul-2 in 1 <74157> out 1 <74158>   # join
add in 2 <73947 74158> out 1 <74159>     # join source bit 28
const-mul-2 in 1 <74159> out 1 <74160>   # join
add in 2 <73946 74160> out 1 <74161>     # join source bit 27
const-mul-2 in 1 <74161> out 1 <74162>   # join
add in 2 <73945 74162> out 1 <74163>     # join source bit 26
const-mul-2 in 1 <74163> out 1 <74164>   # join
add in 2 <73944 74164> out 1 <74165>     # join source bit 25
const-mul-2 in 1 <74165> out 1 <74166>   # join
add in 2 <73943 74166> out 1 <74167>     # join source bit 24
const-mul-2 in 1 <74167> out 1 <74168>   # join
add in 2 <73942 74168> out 1 <74169>     # join source bit 23
const-mul-2 in 1 <74169> out 1 <74170>   # join
add in 2 <73941 74170> out 1 <74171>     # join source bit 22
const-mul-2 in 1 <74171> out 1 <74172>   # join
add in 2 <73940 74172> out 1 <74173>     # join source bit 21
const-mul-2 in 1 <74173> out 1 <74174>   # join
add in 2 <73939 74174> out 1 <74175>     # join source bit 20
const-mul-2 in 1 <74175> out 1 <74176>   # join
add in 2 <73938 74176> out 1 <74177>     # join source bit 19
const-mul-2 in 1 <74177> out 1 <74178>   # join
add in 2 <73937 74178> out 1 <74179>     # join source bit 18
const-mul-2 in 1 <74179> out 1 <74180>   # join
add in 2 <73936 74180> out 1 <74181>     # join source bit 17
const-mul-2 in 1 <74181> out 1 <74182>   # join
add in 2 <73935 74182> out 1 <74183>     # join source bit 16
const-mul-2 in 1 <74183> out 1 <74184>   # join
add in 2 <73934 74184> out 1 <74185>     # join source bit 15
const-mul-2 in 1 <74185> out 1 <74186>   # join
add in 2 <73933 74186> out 1 <74187>     # join source bit 14
const-mul-2 in 1 <74187> out 1 <74188>   # join
add in 2 <73932 74188> out 1 <74189>     # join source bit 13
const-mul-2 in 1 <74189> out 1 <74190>   # join
add in 2 <73931 74190> out 1 <74191>     # join source bit 12
const-mul-2 in 1 <74191> out 1 <74192>   # join
add in 2 <73930 74192> out 1 <74193>     # join source bit 11
const-mul-2 in 1 <74193> out 1 <74194>   # join
add in 2 <73929 74194> out 1 <74195>     # join source bit 10
const-mul-2 in 1 <74195> out 1 <74196>   # join
add in 2 <73928 74196> out 1 <74197>     # join source bit 9
const-mul-2 in 1 <74197> out 1 <74198>   # join
add in 2 <73927 74198> out 1 <74199>     # join source bit 8
const-mul-2 in 1 <74199> out 1 <74200>   # join
add in 2 <73926 74200> out 1 <74201>     # join source bit 7
const-mul-2 in 1 <74201> out 1 <74202>   # join
add in 2 <73925 74202> out 1 <74203>     # join source bit 6
const-mul-2 in 1 <74203> out 1 <74204>   # join
add in 2 <73924 74204> out 1 <74205>     # join source bit 5
const-mul-2 in 1 <74205> out 1 <74206>   # join
add in 2 <73923 74206> out 1 <74207>     # join source bit 4
const-mul-2 in 1 <74207> out 1 <74208>   # join
add in 2 <73922 74208> out 1 <74209>     # join source bit 3
const-mul-2 in 1 <74209> out 1 <74210>   # join
add in 2 <73921 74210> out 1 <74211>     # join source bit 2
const-mul-2 in 1 <74211> out 1 <74212>   # join
add in 2 <73920 74212> out 1 <74213>     # join source bit 1
const-mul-2 in 1 <74213> out 1 <74214>   # join
add in 2 <73919 74214> out 1 <74215>     # join source bit 0
add in 2 <74215 74215> out 1 <74216>     # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <74216> out 1 <74217> # multiply-by-constant 4294967295
add in 2 <73918 74217> out 1 <74218>     # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <73916> out 1 <74219> # multiply-by-constant 4294967295
add in 2 <73694 74219> out 1 <74220>     # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <74220> outplitBus
mul in 2 <74252 74218> out 1 <74488>     # cond trueterm
const-mul-neg-1 in 1 <74252> out 1 <74489> # cond minuscond
add in 2 <100 74489> out 1 <74490>       # cond negcond
mul in 2 <74490 73694> out 1 <74491>     # cond falseterm
add in 2 <74488 74491> out 1 <74492>     # cond result
add in 2 <74492 104> out 1 <74493>       # ArithBusReq.AddReq(DFG.Conditional,DFG.Constant)
const-mul-ffffffff in 1 <24> out 1 <74494> # multiply-by-constant 4294967295
add in 2 <74493 74494> out 1 <74495>     # 'CmpLT DFG.Add - DFG.Input'
split in 1 <74495> outplitBus
mul in 2 <74527 103> out 1 <74734>       # cond trueterm
const-mul-neg-1 in 1 <74527> out 1 <74735> # cond minuscond
add in 2 <100 74735> out 1 <74736>       # cond negcond
mul in 2 <74736 102> out 1 <74737>       # cond falseterm
add in 2 <74734 74737> out 1 <74738>     # cond result
add in 2 <74492 3084> out 1 <74739>      # ArithBusReq.AddReq(DFG.Conditional,DFG.Negate)
const-mul-ffffffff in 1 <74739> out 1 <74740> # multiply-by-constant 4294967295
add in 2 <24 74740> out 1 <74741>        # 'CmpLT DFG.Input - DFG.Subtract'
split in 1 <74741> outplitBus
mul in 2 <74773 103> out 1 <75012>       # cond trueterm
const-mul-neg-1 in 1 <74773> out 1 <75013> # cond minuscond
add in 2 <100 75013> out 1 <75014>       # cond negcond
mul in 2 <75014 74738> out 1 <75015>     # cond falseterm
add in 2 <75012 75015> out 1 <75016>     # cond result
const-mul-ffffffff in 1 <23> out 1 <75017> # multiply-by-constant 4294967295
add in 2 <23 24> out 1 <75018>           # ArithBusReq.AddReq(DFG.Input,DFG.Input)
add in 2 <75018 75017> out 1 <75019>     # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <75019> out 1 <75020> # multiply-by-constant 4294967295
add in 2 <75018 75020> out 1 <75021>     # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <23> out 1 <75022> # multiply-by-constant 4294967295
add in 2 <24 75022> out 1 <75023>        # 'CmpLT DFG.Input - DFG.Input'
split in 1 <75023> out 65 <75024 75025 75026 75027 75028 75029 75030 75031 75032 75033 75034 75035 75036 75037 75038 75039 75040 75041 75042 75043 75044 75045 75046 75047 75048 75049 75050 75051 75052 75053 75054 75055 75056 75057 75058 75059 75060 75061 75062 75063 75064 75065 75066 75067 75068 75069 75070 75071 75072 75073 75074 75075 75076 75077 75078 75079 75080 75081 75082 75083 75084 75085 75086 75087 75088> # SplitBus
mul in 2 <75055 75021> out 1 <75089>     # cond trueterm
const-mul-neg-1 in 1 <75055> out 1 <75090> # cond minuscond
add in 2 <100 75090> out 1 <75091>       # cond negcond
mul in 2 <75091 24> out 1 <75092>        # cond falseterm
add in 2 <75089 75092> out 1 <75093>     # cond result
const-mul-ffffffff in 1 <75093> out 1 <75094> # multiply-by-constant 4294967295
add in 2 <75093 25> out 1 <75095>        # ArithBusReq.AddReq(DFG.Conditional,DFG.Input)
add in 2 <75095 75094> out 1 <75096>     # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <75096> out 1 <75097> # multiply-by-constant 4294967295
add in 2 <75095 75097> out 1 <75098>     # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <75093> out 1 <75099> # multiply-by-constant 4294967295
add in 2 <25 75099> out 1 <75100>        # 'CmpLT DFG.Input - DFG.Conditional'
split in 1 <75100> outplitBus
mul in 2 <75132 75098> out 1 <75232>     # cond trueterm
const-mul-neg-1 in 1 <75132> out 1 <75233> # cond minuscond
add in 2 <100 75233> out 1 <75234>       # cond negcond
mul in 2 <75234 25> out 1 <75235>        # cond falseterm
add in 2 <75232 75235> out 1 <75236>     # cond result
const-mul-ffffffff in 1 <75236> out 1 <75237> # multiply-by-constant 4294967295
add in 2 <75236 26> out 1 <75238>        # ArithBusReq.AddReq(DFG.Conditional,DFG.Input)
add in 2 <75238 75237> out 1 <75239>     # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <75236> out 1 <75240> # multiply-by-constant 4294967295
add in 2 <26 75240> out 1 <75241>        # 'CmpLT DFG.Input - DFG.Conditional'
split in 1 <75241> out 197 <75242 75243 75244 75245 75246 75247 75248 75249 75250 75251 75252 75253 75254 75255 75256 75257 75258 75259 75260 75261 75262 75263 75264 75265 75266 75267 75268 75269 75270 75271 75272 75273 75274 75275 75276 75277 75278 75279 75280 75281 75282 75283 75284 75285 75286 75287 75288 75289 75290 75291 75292 75293 75294 75295 75296 75297 75298 75299 75300 75301 75302 75303 75304 75305 75306 75307 75308 75309 75310 75311 75312 75313 75314 75315 75316 75317 75318 75319 75320 75321 75322 75323 75324 75325 75326 75327 75328 75329 75330 75331 75332 75333 75334 75335 75336 75337 75338 75339 75340 75341 75342 75343 75344 75345 75346 75347 75348 75349 75350 75351 75352 75353 75354 75355 75356 75357 75358 75359 75360 75361 75362 75363 75364 75365 75366 75367 75368 75369 75370 75371 75372 75373 75374 75375 75376 75377 75378 75379 75380 75381 75382 75383 75384 75385 75386 75387 75388 75389 75390 75391 75392 75393 75394 75395 75396 75397 75398 75399 75400 75401 75402 75403 75404 75405 75406 75407 75408 75409 75410 75411 75412 75413 75414 75415 75416 75417 75418 75419 75420 75421 75422 75423 75424 75425 75426 75427 75428 75429 75430 75431 75432 75433 75434 75435 75436 75437 75438> # SplitBus
mul in 2 <75273 75239> out 1 <75439>     # cond trueterm
const-mul-neg-1 in 1 <75273> out 1 <75440> # cond minuscond
add in 2 <100 75440> out 1 <75441>       # cond negcond
mul in 2 <75441 75236> out 1 <75442>     # cond falseterm
add in 2 <75439 75442> out 1 <75443>     # cond result
mul in 2 <75132 75096> out 1 <75444>     # cond trueterm
const-mul-neg-1 in 1 <75132> out 1 <75445> # cond minuscond
add in 2 <100 75445> out 1 <75446>       # cond negcond
mul in 2 <75446 75093> out 1 <75447>     # cond falseterm
add in 2 <75444 75447> out 1 <75448>     # cond result
mul in 2 <75055 75019> out 1 <75449>     # cond trueterm
const-mul-neg-1 in 1 <75055> out 1 <75450> # cond minuscond
add in 2 <100 75450> out 1 <75451>       # cond negcond
mul in 2 <75451 23> out 1 <75452>        # cond falseterm
add in 2 <75449 75452> out 1 <75453>     # cond result
const-mul-ffffffff in 1 <75453> out 1 <75454> # multiply-by-constant 4294967295
add in 2 <75453 75448> out 1 <75455>     # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
add in 2 <75455 75454> out 1 <75456>     # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <75456> out 1 <75457> # multiply-by-constant 4294967295
add in 2 <75455 75457> out 1 <75458>     # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <75453> out 1 <75459> # multiply-by-constant 4294967295
add in 2 <75448 75459> out 1 <75460>     # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <75460> outplitBus
mul in 2 <75492 75458> out 1 <75593>     # cond trueterm
const-mul-neg-1 in 1 <75492> out 1 <75594> # cond minuscond
add in 2 <100 75594> out 1 <75595>       # cond negcond
mul in 2 <75595 75448> out 1 <75596>     # cond falseterm
add in 2 <75593 75596> out 1 <75597>     # cond result
const-mul-ffffffff in 1 <75597> out 1 <75598> # multiply-by-constant 4294967295
add in 2 <75597 75443> out 1 <75599>     # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
add in 2 <75599 75598> out 1 <75600>     # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <75600> out 1 <75601> # multiply-by-constant 4294967295
add in 2 <75599 75601> out 1 <75602>     # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <75597> out 1 <75603> # multiply-by-constant 4294967295
add in 2 <75443 75603> out 1 <75604>     # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <75604> out 199 <75605 75606 75607 75608 75609 75610 75611 75612 75613 75614 75615 75616 75617 75618 75619 75620 75621 75622 75623 75624 75625 75626 75627 75628 75629 75630 75631 75632 75633 75634 75635 75636 75637 75638 75639 75640 75641 75642 75643 75644 75645 75646 75647 75648 75649 75650 75651 75652 75653 75654 75655 75656 75657 75658 75659 75660 75661 75662 75663 75664 75665 75666 75667 75668 75669 75670 75671 75672 75673 75674 75675 75676 75677 75678 75679 75680 75681 75682 75683 75684 75685 75686 75687 75688 75689 75690 75691 75692 75693 75694 75695 75696 75697 75698 75699 75700 75701 75702 75703 75704 75705 75706 75707 75708 75709 75710 75711 75712 75713 75714 75715 75716 75717 75718 75719 75720 75721 75722 75723 75724 75725 75726 75727 75728 75729 75730 75731 75732 75733 75734 75735 75736 75737 75738 75739 75740 75741 75742 75743 75744 75745 75746 75747 75748 75749 75750 75751 75752 75753 75754 75755 75756 75757 75758 75759 75760 75761 75762 75763 75764 75765 75766 75767 75768 75769 75770 75771 75772 75773 75774 75775 75776 75777 75778 75779 75780 75781 75782 75783 75784 75785 75786 75787 75788 75789 75790 75791 75792 75793 75794 75795 75796 75797 75798 75799 75800 75801 75802 75803> # SplitBus
mul in 2 <75636 75602> out 1 <75804>     # cond trueterm
const-mul-neg-1 in 1 <75636> out 1 <75805> # cond minuscond
add in 2 <100 75805> out 1 <75806>       # cond negcond
mul in 2 <75806 75443> out 1 <75807>     # cond falseterm
add in 2 <75804 75807> out 1 <75808>     # cond result
const-mul-ffffffff in 1 <75808> out 1 <75809> # multiply-by-constant 4294967295
const-mul-ffffffff in 1 <75239> out 1 <75810> # multiply-by-constant 4294967295
add in 2 <75238 75810> out 1 <75811>     # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
mul in 2 <75273 75811> out 1 <75812>     # cond trueterm
const-mul-neg-1 in 1 <75273> out 1 <75813> # cond minuscond
add in 2 <100 75813> out 1 <75814>       # cond negcond
mul in 2 <75814 26> out 1 <75815>        # cond falseterm
add in 2 <75812 75815> out 1 <75816>     # cond result
const-mul-ffffffff in 1 <75816> out 1 <75817> # multiply-by-constant 4294967295
add in 2 <75816 27> out 1 <75818>        # ArithBusReq.AddReq(DFG.Conditional,DFG.Input)
split in 1 <75818> outplitBus
const-mul-2 in 1 <75850> out 1 <76050>   # join source bit 31
add in 2 <75849 76050> out 1 <76051>     # join source bit 30
const-mul-2 in 1 <76051> out 1 <76052>   # join
add in 2 <75848 76052> out 1 <76053>     # join source bit 29
const-mul-2 in 1 <76053> out 1 <76054>   # join
add in 2 <75847 76054> out 1 <76055>     # join source bit 28
const-mul-2 in 1 <76055> out 1 <76056>   # join
add in 2 <75846 76056> out 1 <76057>     # join source bit 27
const-mul-2 in 1 <76057> out 1 <76058>   # join
add in 2 <75845 76058> out 1 <76059>     # join source bit 26
const-mul-2 in 1 <76059> out 1 <76060>   # join
add in 2 <75844 76060> out 1 <76061>     # join source bit 25
const-mul-2 in 1 <76061> out 1 <76062>   # join
add in 2 <75843 76062> out 1 <76063>     # join source bit 24
const-mul-2 in 1 <76063> out 1 <76064>   # join
add in 2 <75842 76064> out 1 <76065>     # join source bit 23
const-mul-2 in 1 <76065> out 1 <76066>   # join
add in 2 <75841 76066> out 1 <76067>     # join source bit 22
const-mul-2 in 1 <76067> out 1 <76068>   # join
add in 2 <75840 76068> out 1 <76069>     # join source bit 21
const-mul-2 in 1 <76069> out 1 <76070>   # join
add in 2 <75839 76070> out 1 <76071>     # join source bit 20
const-mul-2 in 1 <76071> out 1 <76072>   # join
add in 2 <75838 76072> out 1 <76073>     # join source bit 19
const-mul-2 in 1 <76073> out 1 <76074>   # join
add in 2 <75837 76074> out 1 <76075>     # join source bit 18
const-mul-2 in 1 <76075> out 1 <76076>   # join
add in 2 <75836 76076> out 1 <76077>     # join source bit 17
const-mul-2 in 1 <76077> out 1 <76078>   # join
add in 2 <75835 76078> out 1 <76079>     # join source bit 16
const-mul-2 in 1 <76079> out 1 <76080>   # join
add in 2 <75834 76080> out 1 <76081>     # join source bit 15
const-mul-2 in 1 <76081> out 1 <76082>   # join
add in 2 <75833 76082> out 1 <76083>     # join source bit 14
const-mul-2 in 1 <76083> out 1 <76084>   # join
add in 2 <75832 76084> out 1 <76085>     # join source bit 13
const-mul-2 in 1 <76085> out 1 <76086>   # join
add in 2 <75831 76086> out 1 <76087>     # join source bit 12
const-mul-2 in 1 <76087> out 1 <76088>   # join
add in 2 <75830 76088> out 1 <76089>     # join source bit 11
const-mul-2 in 1 <76089> out 1 <76090>   # join
add in 2 <75829 76090> out 1 <76091>     # join source bit 10
const-mul-2 in 1 <76091> out 1 <76092>   # join
add in 2 <75828 76092> out 1 <76093>     # join source bit 9
const-mul-2 in 1 <76093> out 1 <76094>   # join
add in 2 <75827 76094> out 1 <76095>     # join source bit 8
const-mul-2 in 1 <76095> out 1 <76096>   # join
add in 2 <75826 76096> out 1 <76097>     # join source bit 7
const-mul-2 in 1 <76097> out 1 <76098>   # join
add in 2 <75825 76098> out 1 <76099>     # join source bit 6
const-mul-2 in 1 <76099> out 1 <76100>   # join
add in 2 <75824 76100> out 1 <76101>     # join source bit 5
const-mul-2 in 1 <76101> out 1 <76102>   # join
add in 2 <75823 76102> out 1 <76103>     # join source bit 4
const-mul-2 in 1 <76103> out 1 <76104>   # join
add in 2 <75822 76104> out 1 <76105>     # join source bit 3
const-mul-2 in 1 <76105> out 1 <76106>   # join
add in 2 <75821 76106> out 1 <76107>     # join source bit 2
const-mul-2 in 1 <76107> out 1 <76108>   # join
add in 2 <75820 76108> out 1 <76109>     # join source bit 1
const-mul-2 in 1 <76109> out 1 <76110>   # join
add in 2 <75819 76110> out 1 <76111>     # join source bit 0
add in 2 <76111 76111> out 1 <76112>     # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <75816> out 1 <76113> # multiply-by-constant 4294967295
add in 2 <27 76113> out 1 <76114>        # 'CmpLT DFG.Input - DFG.Conditional'
split in 1 <76114> outplitBus
mul in 2 <76146 76112> out 1 <76378>     # cond trueterm
const-mul-neg-1 in 1 <76146> out 1 <76379> # cond minuscond
add in 2 <100 76379> out 1 <76380>       # cond negcond
mul in 2 <76380 75816> out 1 <76381>     # cond falseterm
add in 2 <76378 76381> out 1 <76382>     # cond result
add in 2 <75808 76382> out 1 <76383>     # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
split in 1 <76383> outplitBus
const-mul-2 in 1 <76415> out 1 <76617>   # join source bit 31
add in 2 <76414 76617> out 1 <76618>     # join source bit 30
const-mul-2 in 1 <76618> out 1 <76619>   # join
add in 2 <76413 76619> out 1 <76620>     # join source bit 29
const-mul-2 in 1 <76620> out 1 <76621>   # join
add in 2 <76412 76621> out 1 <76622>     # join source bit 28
const-mul-2 in 1 <76622> out 1 <76623>   # join
add in 2 <76411 76623> out 1 <76624>     # join source bit 27
const-mul-2 in 1 <76624> out 1 <76625>   # join
add in 2 <76410 76625> out 1 <76626>     # join source bit 26
const-mul-2 in 1 <76626> out 1 <76627>   # join
add in 2 <76409 76627> out 1 <76628>     # join source bit 25
const-mul-2 in 1 <76628> out 1 <76629>   # join
add in 2 <76408 76629> out 1 <76630>     # join source bit 24
const-mul-2 in 1 <76630> out 1 <76631>   # join
add in 2 <76407 76631> out 1 <76632>     # join source bit 23
const-mul-2 in 1 <76632> out 1 <76633>   # join
add in 2 <76406 76633> out 1 <76634>     # join source bit 22
const-mul-2 in 1 <76634> out 1 <76635>   # join
add in 2 <76405 76635> out 1 <76636>     # join source bit 21
const-mul-2 in 1 <76636> out 1 <76637>   # join
add in 2 <76404 76637> out 1 <76638>     # join source bit 20
const-mul-2 in 1 <76638> out 1 <76639>   # join
add in 2 <76403 76639> out 1 <76640>     # join source bit 19
const-mul-2 in 1 <76640> out 1 <76641>   # join
add in 2 <76402 76641> out 1 <76642>     # join source bit 18
const-mul-2 in 1 <76642> out 1 <76643>   # join
add in 2 <76401 76643> out 1 <76644>     # join source bit 17
const-mul-2 in 1 <76644> out 1 <76645>   # join
add in 2 <76400 76645> out 1 <76646>     # join source bit 16
const-mul-2 in 1 <76646> out 1 <76647>   # join
add in 2 <76399 76647> out 1 <76648>     # join source bit 15
const-mul-2 in 1 <76648> out 1 <76649>   # join
add in 2 <76398 76649> out 1 <76650>     # join source bit 14
const-mul-2 in 1 <76650> out 1 <76651>   # join
add in 2 <76397 76651> out 1 <76652>     # join source bit 13
const-mul-2 in 1 <76652> out 1 <76653>   # join
add in 2 <76396 76653> out 1 <76654>     # join source bit 12
const-mul-2 in 1 <76654> out 1 <76655>   # join
add in 2 <76395 76655> out 1 <76656>     # join source bit 11
const-mul-2 in 1 <76656> out 1 <76657>   # join
add in 2 <76394 76657> out 1 <76658>     # join source bit 10
const-mul-2 in 1 <76658> out 1 <76659>   # join
add in 2 <76393 76659> out 1 <76660>     # join source bit 9
const-mul-2 in 1 <76660> out 1 <76661>   # join
add in 2 <76392 76661> out 1 <76662>     # join source bit 8
const-mul-2 in 1 <76662> out 1 <76663>   # join
add in 2 <76391 76663> out 1 <76664>     # join source bit 7
const-mul-2 in 1 <76664> out 1 <76665>   # join
add in 2 <76390 76665> out 1 <76666>     # join source bit 6
const-mul-2 in 1 <76666> out 1 <76667>   # join
add in 2 <76389 76667> out 1 <76668>     # join source bit 5
const-mul-2 in 1 <76668> out 1 <76669>   # join
add in 2 <76388 76669> out 1 <76670>     # join source bit 4
const-mul-2 in 1 <76670> out 1 <76671>   # join
add in 2 <76387 76671> out 1 <76672>     # join source bit 3
const-mul-2 in 1 <76672> out 1 <76673>   # join
add in 2 <76386 76673> out 1 <76674>     # join source bit 2
const-mul-2 in 1 <76674> out 1 <76675>   # join
add in 2 <76385 76675> out 1 <76676>     # join source bit 1
const-mul-2 in 1 <76676> out 1 <76677>   # join
add in 2 <76384 76677> out 1 <76678>     # join source bit 0
add in 2 <76678 76678> out 1 <76679>     # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <75808> out 1 <76680> # multiply-by-constant 4294967295
add in 2 <76382 76680> out 1 <76681>     # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <76681> outplitBus
mul in 2 <76713 76679> out 1 <76947>     # cond trueterm
const-mul-neg-1 in 1 <76713> out 1 <76948> # cond minuscond
add in 2 <100 76948> out 1 <76949>       # cond negcond
mul in 2 <76949 75808> out 1 <76950>     # cond falseterm
add in 2 <76947 76950> out 1 <76951>     # cond result
mul in 2 <75636 75600> out 1 <76952>     # cond trueterm
const-mul-neg-1 in 1 <75636> out 1 <76953> # cond minuscond
add in 2 <100 76953> out 1 <76954>       # cond negcond
mul in 2 <76954 75597> out 1 <76955>     # cond falseterm
add in 2 <76952 76955> out 1 <76956>     # cond result
mul in 2 <75492 75456> out 1 <76957>     # cond trueterm
const-mul-neg-1 in 1 <75492> out 1 <76958> # cond minuscond
add in 2 <100 76958> out 1 <76959>       # cond negcond
mul in 2 <76959 75453> out 1 <76960>     # cond falseterm
add in 2 <76957 76960> out 1 <76961>     # cond result
const-mul-ffffffff in 1 <76961> out 1 <76962> # multiply-by-constant 4294967295
add in 2 <76961 76956> out 1 <76963>     # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
add in 2 <76963 76962> out 1 <76964>     # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <76964> out 1 <76965> # multiply-by-constant 4294967295
add in 2 <76963 76965> out 1 <76966>     # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <76961> out 1 <76967> # multiply-by-constant 4294967295
add in 2 <76956 76967> out 1 <76968>     # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <76968> out 200 <76969 76970 76971 76972 76973 76974 76975 76976 76977 76978 76979 76980 76981 76982 76983 76984 76985 76986 76987 76988 76989 76990 76991 76992 76993 76994 76995 76996 76997 76998 76999 77000 77001 77002 77003 77004 77005 77006 77007 77008 77009 77010 77011 77012 77013 77014 77015 77016 77017 77018 77019 77020 77021 77022 77023 77024 77025 77026 77027 77028 77029 77030 77031 77032 77033 77034 77035 77036 77037 77038 77039 77040 77041 77042 77043 77044 77045 77046 77047 77048 77049 77050 77051 77052 77053 77054 77055 77056 77057 77058 77059 77060 77061 77062 77063 77064 77065 77066 77067 77068 77069 77070 77071 77072 77073 77074 77075 77076 77077 77078 77079 77080 77081 77082 77083 77084 77085 77086 77087 77088 77089 77090 77091 77092 77093 77094 77095 77096 77097 77098 77099 77100 77101 77102 77103 77104 77105 77106 77107 77108 77109 77110 77111 77112 77113 77114 77115 77116 77117 77118 77119 77120 77121 77122 77123 77124 77125 77126 77127 77128 77129 77130 77131 77132 77133 77134 77135 77136 77137 77138 77139 77140 77141 77142 77143 77144 77145 77146 77147 77148 77149 77150 77151 77152 77153 77154 77155 77156 77157 77158 77159 77160 77161 77162 77163 77164 77165 77166 77167 77168> # SplitBus
mul in 2 <77000 76966> out 1 <77169>     # cond trueterm
const-mul-neg-1 in 1 <77000> out 1 <77170> # cond minuscond
add in 2 <100 77170> out 1 <77171>       # cond negcond
mul in 2 <77171 76956> out 1 <77172>     # cond falseterm
add in 2 <77169 77172> out 1 <77173>     # cond result
const-mul-ffffffff in 1 <77173> out 1 <77174> # multiply-by-constant 4294967295
add in 2 <77173 76951> out 1 <77175>     # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
split in 1 <77175> outplitBus
const-mul-2 in 1 <77207> out 1 <77411>   # join source bit 31
add in 2 <77206 77411> out 1 <77412>     # join source bit 30
const-mul-2 in 1 <77412> out 1 <77413>   # join
add in 2 <77205 77413> out 1 <77414>     # join source bit 29
const-mul-2 in 1 <77414> out 1 <77415>   # join
add in 2 <77204 77415> out 1 <77416>     # join source bit 28
const-mul-2 in 1 <77416> out 1 <77417>   # join
add in 2 <77203 77417> out 1 <77418>     # join source bit 27
const-mul-2 in 1 <77418> out 1 <77419>   # join
add in 2 <77202 77419> out 1 <77420>     # join source bit 26
const-mul-2 in 1 <77420> out 1 <77421>   # join
add in 2 <77201 77421> out 1 <77422>     # join source bit 25
const-mul-2 in 1 <77422> out 1 <77423>   # join
add in 2 <77200 77423> out 1 <77424>     # join source bit 24
const-mul-2 in 1 <77424> out 1 <77425>   # join
add in 2 <77199 77425> out 1 <77426>     # join source bit 23
const-mul-2 in 1 <77426> out 1 <77427>   # join
add in 2 <77198 77427> out 1 <77428>     # join source bit 22
const-mul-2 in 1 <77428> out 1 <77429>   # join
add in 2 <77197 77429> out 1 <77430>     # join source bit 21
const-mul-2 in 1 <77430> out 1 <77431>   # join
add in 2 <77196 77431> out 1 <77432>     # join source bit 20
const-mul-2 in 1 <77432> out 1 <77433>   # join
add in 2 <77195 77433> out 1 <77434>     # join source bit 19
const-mul-2 in 1 <77434> out 1 <77435>   # join
add in 2 <77194 77435> out 1 <77436>     # join source bit 18
const-mul-2 in 1 <77436> out 1 <77437>   # join
add in 2 <77193 77437> out 1 <77438>     # join source bit 17
const-mul-2 in 1 <77438> out 1 <77439>   # join
add in 2 <77192 77439> out 1 <77440>     # join source bit 16
const-mul-2 in 1 <77440> out 1 <77441>   # join
add in 2 <77191 77441> out 1 <77442>     # join source bit 15
const-mul-2 in 1 <77442> out 1 <77443>   # join
add in 2 <77190 77443> out 1 <77444>     # join source bit 14
const-mul-2 in 1 <77444> out 1 <77445>   # join
add in 2 <77189 77445> out 1 <77446>     # join source bit 13
const-mul-2 in 1 <77446> out 1 <77447>   # join
add in 2 <77188 77447> out 1 <77448>     # join source bit 12
const-mul-2 in 1 <77448> out 1 <77449>   # join
add in 2 <77187 77449> out 1 <77450>     # join source bit 11
const-mul-2 in 1 <77450> out 1 <77451>   # join
add in 2 <77186 77451> out 1 <77452>     # join source bit 10
const-mul-2 in 1 <77452> out 1 <77453>   # join
add in 2 <77185 77453> out 1 <77454>     # join source bit 9
const-mul-2 in 1 <77454> out 1 <77455>   # join
add in 2 <77184 77455> out 1 <77456>     # join source bit 8
const-mul-2 in 1 <77456> out 1 <77457>   # join
add in 2 <77183 77457> out 1 <77458>     # join source bit 7
const-mul-2 in 1 <77458> out 1 <77459>   # join
add in 2 <77182 77459> out 1 <77460>     # join source bit 6
const-mul-2 in 1 <77460> out 1 <77461>   # join
add in 2 <77181 77461> out 1 <77462>     # join source bit 5
const-mul-2 in 1 <77462> out 1 <77463>   # join
add in 2 <77180 77463> out 1 <77464>     # join source bit 4
const-mul-2 in 1 <77464> out 1 <77465>   # join
add in 2 <77179 77465> out 1 <77466>     # join source bit 3
const-mul-2 in 1 <77466> out 1 <77467>   # join
add in 2 <77178 77467> out 1 <77468>     # join source bit 2
const-mul-2 in 1 <77468> out 1 <77469>   # join
add in 2 <77177 77469> out 1 <77470>     # join source bit 1
const-mul-2 in 1 <77470> out 1 <77471>   # join
add in 2 <77176 77471> out 1 <77472>     # join source bit 0
add in 2 <77472 77472> out 1 <77473>     # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <77473> out 1 <77474> # multiply-by-constant 4294967295
add in 2 <77175 77474> out 1 <77475>     # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <77173> out 1 <77476> # multiply-by-constant 4294967295
add in 2 <76951 77476> out 1 <77477>     # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <77477> out 267 <77478 77479 77480 77481 77482 77483 77484 77485 77486 77487 77488 77489 77490 77491 77492 77493 77494 77495 77496 77497 77498 77499 77500 77501 77502 77503 77504 77505 77506 77507 77508 77509 77510 77511 77512 77513 77514 77515 77516 77517 77518 77519 77520 77521 77522 77523 77524 77525 77526 77527 77528 77529 77530 77531 77532 77533 77534 77535 77536 77537 77538 77539 77540 77541 77542 77543 77544 77545 77546 77547 77548 77549 77550 77551 77552 77553 77554 77555 77556 77557 77558 77559 77560 77561 77562 77563 77564 77565 77566 77567 77568 77569 77570 77571 77572 77573 77574 77575 77576 77577 77578 77579 77580 77581 77582 77583 77584 77585 77586 77587 77588 77589 77590 77591 77592 77593 77594 77595 77596 77597 77598 77599 77600 77601 77602 77603 77604 77605 77606 77607 77608 77609 77610 77611 77612 77613 77614 77615 77616 77617 77618 77619 77620 77621 77622 77623 77624 77625 77626 77627 77628 77629 77630 77631 77632 77633 77634 77635 77636 77637 77638 77639 77640 77641 77642 77643 77644 77645 77646 77647 77648 77649 77650 77651 77652 77653 77654 77655 77656 77657 77658 77659 77660 77661 77662 77663 77664 77665 77666 77667 77668 77669 77670 77671 77672 77673 77674 77675 77676 77677 77678 77679 77680 77681 77682 77683 77684 77685 77686 77687 77688 77689 77690 77691 77692 77693 77694 77695 77696 77697 77698 77699 77700 77701 77702 77703 77704 77705 77706 77707 77708 77709 77710 77711 77712 77713 77714 77715 77716 77717 77718 77719 77720 77721 77722 77723 77724 77725 77726 77727 77728 77729 77730 77731 77732 77733 77734 77735 77736 77737 77738 77739 77740 77741 77742 77743 77744> # SplitBus
mul in 2 <77509 77475> out 1 <77745>     # cond trueterm
const-mul-neg-1 in 1 <77509> out 1 <77746> # cond minuscond
add in 2 <100 77746> out 1 <77747>       # cond negcond
mul in 2 <77747 76951> out 1 <77748>     # cond falseterm
add in 2 <77745 77748> out 1 <77749>     # cond result
add in 2 <77749 104> out 1 <77750>       # ArithBusReq.AddReq(DFG.Conditional,DFG.Constant)
const-mul-ffffffff in 1 <25> out 1 <77751> # multiply-by-constant 4294967295
add in 2 <77750 77751> out 1 <77752>     # 'CmpLT DFG.Add - DFG.Input'
split in 1 <77752> outplitBus
mul in 2 <77784 103> out 1 <77991>       # cond trueterm
const-mul-neg-1 in 1 <77784> out 1 <77992> # cond minuscond
add in 2 <100 77992> out 1 <77993>       # cond negcond
mul in 2 <77993 102> out 1 <77994>       # cond falseterm
add in 2 <77991 77994> out 1 <77995>     # cond result
add in 2 <77749 3084> out 1 <77996>      # ArithBusReq.AddReq(DFG.Conditional,DFG.Negate)
const-mul-ffffffff in 1 <77996> out 1 <77997> # multiply-by-constant 4294967295
add in 2 <25 77997> out 1 <77998>        # 'CmpLT DFG.Input - DFG.Subtract'
split in 1 <77998> outplitBus
mul in 2 <78030 103> out 1 <78269>       # cond trueterm
const-mul-neg-1 in 1 <78030> out 1 <78270> # cond minuscond
add in 2 <100 78270> out 1 <78271>       # cond negcond
mul in 2 <78271 77995> out 1 <78272>     # cond falseterm
add in 2 <78269 78272> out 1 <78273>     # cond result
const-mul-ffffffff in 1 <24> out 1 <78274> # multiply-by-constant 4294967295
add in 2 <24 25> out 1 <78275>           # ArithBusReq.AddReq(DFG.Input,DFG.Input)
add in 2 <78275 78274> out 1 <78276>     # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <78276> out 1 <78277> # multiply-by-constant 4294967295
add in 2 <78275 78277> out 1 <78278>     # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <24> out 1 <78279> # multiply-by-constant 4294967295
add in 2 <25 78279> out 1 <78280>        # 'CmpLT DFG.Input - DFG.Input'
split in 1 <78280> out 65 <78281 78282 78283 78284 78285 78286 78287 78288 78289 78290 78291 78292 78293 78294 78295 78296 78297 78298 78299 78300 78301 78302 78303 78304 78305 78306 78307 78308 78309 78310 78311 78312 78313 78314 78315 78316 78317 78318 78319 78320 78321 78322 78323 78324 78325 78326 78327 78328 78329 78330 78331 78332 78333 78334 78335 78336 78337 78338 78339 78340 78341 78342 78343 78344 78345> # SplitBus
mul in 2 <78312 78278> out 1 <78346>     # cond trueterm
const-mul-neg-1 in 1 <78312> out 1 <78347> # cond minuscond
add in 2 <100 78347> out 1 <78348>       # cond negcond
mul in 2 <78348 25> out 1 <78349>        # cond falseterm
add in 2 <78346 78349> out 1 <78350>     # cond result
const-mul-ffffffff in 1 <78350> out 1 <78351> # multiply-by-constant 4294967295
add in 2 <78350 26> out 1 <78352>        # ArithBusReq.AddReq(DFG.Conditional,DFG.Input)
add in 2 <78352 78351> out 1 <78353>     # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <78353> out 1 <78354> # multiply-by-constant 4294967295
add in 2 <78352 78354> out 1 <78355>     # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <78350> out 1 <78356> # multiply-by-constant 4294967295
add in 2 <26 78356> out 1 <78357>        # 'CmpLT DFG.Input - DFG.Conditional'
split in 1 <78357> out 131 <78358 78359 78360 78361 78362 78363 78364 78365 78366 78367 78368 78369 78370 78371 78372 78373 78374 78375 78376 78377 78378 78379 78380 78381 78382 78383 78384 78385 78386 78387 78388 78389 78390 78391 78392 78393 78394 78395 78396 78397 78398 78399 78400 78401 78402 78403 78404 78405 78406 78407 78408 78409 78410 78411 78412 78413 78414 78415 78416 78417 78418 78419 78420 78421 78422 78423 78424 78425 78426 78427 78428 78429 78430 78431 78432 78433 78434 78435 78436 78437 78438 78439 78440 78441 78442 78443 78444 78445 78446 78447 78448 78449 78450 78451 78452 78453 78454 78455 78456 78457 78458 78459 78460 78461 78462 78463 78464 78465 78466 78467 78468 78469 78470 78471 78472 78473 78474 78475 78476 78477 78478 78479 78480 78481 78482 78483 78484 78485 78486 78487 78488> # SplitBus
mul in 2 <78389 78355> out 1 <78489>     # cond trueterm
const-mul-neg-1 in 1 <78389> out 1 <78490> # cond minuscond
add in 2 <100 78490> out 1 <78491>       # cond negcond
mul in 2 <78491 26> out 1 <78492>        # cond falseterm
add in 2 <78489 78492> out 1 <78493>     # cond result
const-mul-ffffffff in 1 <78493> out 1 <78494> # multiply-by-constant 4294967295
add in 2 <78493 27> out 1 <78495>        # ArithBusReq.AddReq(DFG.Conditional,DFG.Input)
add in 2 <78495 78494> out 1 <78496>     # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <78493> out 1 <78497> # multiply-by-constant 4294967295
add in 2 <27 78497> out 1 <78498>        # 'CmpLT DFG.Input - DFG.Conditional'
split in 1 <78498> out 197 <78499 78500 78501 78502 78503 78504 78505 78506 78507 78508 78509 78510 78511 78512 78513 78514 78515 78516 78517 78518 78519 78520 78521 78522 78523 78524 78525 78526 78527 78528 78529 78530 78531 78532 78533 78534 78535 78536 78537 78538 78539 78540 78541 78542 78543 78544 78545 78546 78547 78548 78549 78550 78551 78552 78553 78554 78555 78556 78557 78558 78559 78560 78561 78562 78563 78564 78565 78566 78567 78568 78569 78570 78571 78572 78573 78574 78575 78576 78577 78578 78579 78580 78581 78582 78583 78584 78585 78586 78587 78588 78589 78590 78591 78592 78593 78594 78595 78596 78597 78598 78599 78600 78601 78602 78603 78604 78605 78606 78607 78608 78609 78610 78611 78612 78613 78614 78615 78616 78617 78618 78619 78620 78621 78622 78623 78624 78625 78626 78627 78628 78629 78630 78631 78632 78633 78634 78635 78636 78637 78638 78639 78640 78641 78642 78643 78644 78645 78646 78647 78648 78649 78650 78651 78652 78653 78654 78655 78656 78657 78658 78659 78660 78661 78662 78663 78664 78665 78666 78667 78668 78669 78670 78671 78672 78673 78674 78675 78676 78677 78678 78679 78680 78681 78682 78683 78684 78685 78686 78687 78688 78689 78690 78691 78692 78693 78694 78695> # SplitBus
mul in 2 <78530 78496> out 1 <78696>     # cond trueterm
const-mul-neg-1 in 1 <78530> out 1 <78697> # cond minuscond
add in 2 <100 78697> out 1 <78698>       # cond negcond
mul in 2 <78698 78493> out 1 <78699>     # cond falseterm
add in 2 <78696 78699> out 1 <78700>     # cond result
mul in 2 <78389 78353> out 1 <78701>     # cond trueterm
const-mul-neg-1 in 1 <78389> out 1 <78702> # cond minuscond
add in 2 <100 78702> out 1 <78703>       # cond negcond
mul in 2 <78703 78350> out 1 <78704>     # cond falseterm
add in 2 <78701 78704> out 1 <78705>     # cond result
mul in 2 <78312 78276> out 1 <78706>     # cond trueterm
const-mul-neg-1 in 1 <78312> out 1 <78707> # cond minuscond
add in 2 <100 78707> out 1 <78708>       # cond negcond
mul in 2 <78708 24> out 1 <78709>        # cond falseterm
add in 2 <78706 78709> out 1 <78710>     # cond result
const-mul-ffffffff in 1 <78710> out 1 <78711> # multiply-by-constant 4294967295
add in 2 <78710 78705> out 1 <78712>     # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
add in 2 <78712 78711> out 1 <78713>     # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <78713> out 1 <78714> # multiply-by-constant 4294967295
add in 2 <78712 78714> out 1 <78715>     # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <78710> out 1 <78716> # multiply-by-constant 4294967295
add in 2 <78705 78716> out 1 <78717>     # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <78717> outplitBus
mul in 2 <78749 78715> out 1 <78850>     # cond trueterm
const-mul-neg-1 in 1 <78749> out 1 <78851> # cond minuscond
add in 2 <100 78851> out 1 <78852>       # cond negcond
mul in 2 <78852 78705> out 1 <78853>     # cond falseterm
add in 2 <78850 78853> out 1 <78854>     # cond result
const-mul-ffffffff in 1 <78854> out 1 <78855> # multiply-by-constant 4294967295
add in 2 <78854 78700> out 1 <78856>     # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
add in 2 <78856 78855> out 1 <78857>     # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <78857> out 1 <78858> # multiply-by-constant 4294967295
add in 2 <78856 78858> out 1 <78859>     # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <78854> out 1 <78860> # multiply-by-constant 4294967295
add in 2 <78700 78860> out 1 <78861>     # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <78861> out 199 <78862 78863 78864 78865 78866 78867 78868 78869 78870 78871 78872 78873 78874 78875 78876 78877 78878 78879 78880 78881 78882 78883 78884 78885 78886 78887 78888 78889 78890 78891 78892 78893 78894 78895 78896 78897 78898 78899 78900 78901 78902 78903 78904 78905 78906 78907 78908 78909 78910 78911 78912 78913 78914 78915 78916 78917 78918 78919 78920 78921 78922 78923 78924 78925 78926 78927 78928 78929 78930 78931 78932 78933 78934 78935 78936 78937 78938 78939 78940 78941 78942 78943 78944 78945 78946 78947 78948 78949 78950 78951 78952 78953 78954 78955 78956 78957 78958 78959 78960 78961 78962 78963 78964 78965 78966 78967 78968 78969 78970 78971 78972 78973 78974 78975 78976 78977 78978 78979 78980 78981 78982 78983 78984 78985 78986 78987 78988 78989 78990 78991 78992 78993 78994 78995 78996 78997 78998 78999 79000 79001 79002 79003 79004 79005 79006 79007 79008 79009 79010 79011 79012 79013 79014 79015 79016 79017 79018 79019 79020 79021 79022 79023 79024 79025 79026 79027 79028 79029 79030 79031 79032 79033 79034 79035 79036 79037 79038 79039 79040 79041 79042 79043 79044 79045 79046 79047 79048 79049 79050 79051 79052 79053 79054 79055 79056 79057 79058 79059 79060> # SplitBus
mul in 2 <78893 78859> out 1 <79061>     # cond trueterm
const-mul-neg-1 in 1 <78893> out 1 <79062> # cond minuscond
add in 2 <100 79062> out 1 <79063>       # cond negcond
mul in 2 <79063 78700> out 1 <79064>     # cond falseterm
add in 2 <79061 79064> out 1 <79065>     # cond result
const-mul-ffffffff in 1 <79065> out 1 <79066> # multiply-by-constant 4294967295
const-mul-ffffffff in 1 <78496> out 1 <79067> # multiply-by-constant 4294967295
add in 2 <78495 79067> out 1 <79068>     # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
mul in 2 <78530 79068> out 1 <79069>     # cond trueterm
const-mul-neg-1 in 1 <78530> out 1 <79070> # cond minuscond
add in 2 <100 79070> out 1 <79071>       # cond negcond
mul in 2 <79071 27> out 1 <79072>        # cond falseterm
add in 2 <79069 79072> out 1 <79073>     # cond result
const-mul-ffffffff in 1 <79073> out 1 <79074> # multiply-by-constant 4294967295
add in 2 <79073 28> out 1 <79075>        # ArithBusReq.AddReq(DFG.Conditional,DFG.Input)
split in 1 <79075> outplitBus
const-mul-2 in 1 <79107> out 1 <79307>   # join source bit 31
add in 2 <79106 79307> out 1 <79308>     # join source bit 30
const-mul-2 in 1 <79308> out 1 <79309>   # join
add in 2 <79105 79309> out 1 <79310>     # join source bit 29
const-mul-2 in 1 <79310> out 1 <79311>   # join
add in 2 <79104 79311> out 1 <79312>     # join source bit 28
const-mul-2 in 1 <79312> out 1 <79313>   # join
add in 2 <79103 79313> out 1 <79314>     # join source bit 27
const-mul-2 in 1 <79314> out 1 <79315>   # join
add in 2 <79102 79315> out 1 <79316>     # join source bit 26
const-mul-2 in 1 <79316> out 1 <79317>   # join
add in 2 <79101 79317> out 1 <79318>     # join source bit 25
const-mul-2 in 1 <79318> out 1 <79319>   # join
add in 2 <79100 79319> out 1 <79320>     # join source bit 24
const-mul-2 in 1 <79320> out 1 <79321>   # join
add in 2 <79099 79321> out 1 <79322>     # join source bit 23
const-mul-2 in 1 <79322> out 1 <79323>   # join
add in 2 <79098 79323> out 1 <79324>     # join source bit 22
const-mul-2 in 1 <79324> out 1 <79325>   # join
add in 2 <79097 79325> out 1 <79326>     # join source bit 21
const-mul-2 in 1 <79326> out 1 <79327>   # join
add in 2 <79096 79327> out 1 <79328>     # join source bit 20
const-mul-2 in 1 <79328> out 1 <79329>   # join
add in 2 <79095 79329> out 1 <79330>     # join source bit 19
const-mul-2 in 1 <79330> out 1 <79331>   # join
add in 2 <79094 79331> out 1 <79332>     # join source bit 18
const-mul-2 in 1 <79332> out 1 <79333>   # join
add in 2 <79093 79333> out 1 <79334>     # join source bit 17
const-mul-2 in 1 <79334> out 1 <79335>   # join
add in 2 <79092 79335> out 1 <79336>     # join source bit 16
const-mul-2 in 1 <79336> out 1 <79337>   # join
add in 2 <79091 79337> out 1 <79338>     # join source bit 15
const-mul-2 in 1 <79338> out 1 <79339>   # join
add in 2 <79090 79339> out 1 <79340>     # join source bit 14
const-mul-2 in 1 <79340> out 1 <79341>   # join
add in 2 <79089 79341> out 1 <79342>     # join source bit 13
const-mul-2 in 1 <79342> out 1 <79343>   # join
add in 2 <79088 79343> out 1 <79344>     # join source bit 12
const-mul-2 in 1 <79344> out 1 <79345>   # join
add in 2 <79087 79345> out 1 <79346>     # join source bit 11
const-mul-2 in 1 <79346> out 1 <79347>   # join
add in 2 <79086 79347> out 1 <79348>     # join source bit 10
const-mul-2 in 1 <79348> out 1 <79349>   # join
add in 2 <79085 79349> out 1 <79350>     # join source bit 9
const-mul-2 in 1 <79350> out 1 <79351>   # join
add in 2 <79084 79351> out 1 <79352>     # join source bit 8
const-mul-2 in 1 <79352> out 1 <79353>   # join
add in 2 <79083 79353> out 1 <79354>     # join source bit 7
const-mul-2 in 1 <79354> out 1 <79355>   # join
add in 2 <79082 79355> out 1 <79356>     # join source bit 6
const-mul-2 in 1 <79356> out 1 <79357>   # join
add in 2 <79081 79357> out 1 <79358>     # join source bit 5
const-mul-2 in 1 <79358> out 1 <79359>   # join
add in 2 <79080 79359> out 1 <79360>     # join source bit 4
const-mul-2 in 1 <79360> out 1 <79361>   # join
add in 2 <79079 79361> out 1 <79362>     # join source bit 3
const-mul-2 in 1 <79362> out 1 <79363>   # join
add in 2 <79078 79363> out 1 <79364>     # join source bit 2
const-mul-2 in 1 <79364> out 1 <79365>   # join
add in 2 <79077 79365> out 1 <79366>     # join source bit 1
const-mul-2 in 1 <79366> out 1 <79367>   # join
add in 2 <79076 79367> out 1 <79368>     # join source bit 0
add in 2 <79368 79368> out 1 <79369>     # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <79073> out 1 <79370> # multiply-by-constant 4294967295
add in 2 <28 79370> out 1 <79371>        # 'CmpLT DFG.Input - DFG.Conditional'
split in 1 <79371> outplitBus
mul in 2 <79403 79369> out 1 <79635>     # cond trueterm
const-mul-neg-1 in 1 <79403> out 1 <79636> # cond minuscond
add in 2 <100 79636> out 1 <79637>       # cond negcond
mul in 2 <79637 79073> out 1 <79638>     # cond falseterm
add in 2 <79635 79638> out 1 <79639>     # cond result
add in 2 <79065 79639> out 1 <79640>     # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
split in 1 <79640> outplitBus
const-mul-2 in 1 <79672> out 1 <79874>   # join source bit 31
add in 2 <79671 79874> out 1 <79875>     # join source bit 30
const-mul-2 in 1 <79875> out 1 <79876>   # join
add in 2 <79670 79876> out 1 <79877>     # join source bit 29
const-mul-2 in 1 <79877> out 1 <79878>   # join
add in 2 <79669 79878> out 1 <79879>     # join source bit 28
const-mul-2 in 1 <79879> out 1 <79880>   # join
add in 2 <79668 79880> out 1 <79881>     # join source bit 27
const-mul-2 in 1 <79881> out 1 <79882>   # join
add in 2 <79667 79882> out 1 <79883>     # join source bit 26
const-mul-2 in 1 <79883> out 1 <79884>   # join
add in 2 <79666 79884> out 1 <79885>     # join source bit 25
const-mul-2 in 1 <79885> out 1 <79886>   # join
add in 2 <79665 79886> out 1 <79887>     # join source bit 24
const-mul-2 in 1 <79887> out 1 <79888>   # join
add in 2 <79664 79888> out 1 <79889>     # join source bit 23
const-mul-2 in 1 <79889> out 1 <79890>   # join
add in 2 <79663 79890> out 1 <79891>     # join source bit 22
const-mul-2 in 1 <79891> out 1 <79892>   # join
add in 2 <79662 79892> out 1 <79893>     # join source bit 21
const-mul-2 in 1 <79893> out 1 <79894>   # join
add in 2 <79661 79894> out 1 <79895>     # join source bit 20
const-mul-2 in 1 <79895> out 1 <79896>   # join
add in 2 <79660 79896> out 1 <79897>     # join source bit 19
const-mul-2 in 1 <79897> out 1 <79898>   # join
add in 2 <79659 79898> out 1 <79899>     # join source bit 18
const-mul-2 in 1 <79899> out 1 <79900>   # join
add in 2 <79658 79900> out 1 <79901>     # join source bit 17
const-mul-2 in 1 <79901> out 1 <79902>   # join
add in 2 <79657 79902> out 1 <79903>     # join source bit 16
const-mul-2 in 1 <79903> out 1 <79904>   # join
add in 2 <79656 79904> out 1 <79905>     # join source bit 15
const-mul-2 in 1 <79905> out 1 <79906>   # join
add in 2 <79655 79906> out 1 <79907>     # join source bit 14
const-mul-2 in 1 <79907> out 1 <79908>   # join
add in 2 <79654 79908> out 1 <79909>     # join source bit 13
const-mul-2 in 1 <79909> out 1 <79910>   # join
add in 2 <79653 79910> out 1 <79911>     # join source bit 12
const-mul-2 in 1 <79911> out 1 <79912>   # join
add in 2 <79652 79912> out 1 <79913>     # join source bit 11
const-mul-2 in 1 <79913> out 1 <79914>   # join
add in 2 <79651 79914> out 1 <79915>     # join source bit 10
const-mul-2 in 1 <79915> out 1 <79916>   # join
add in 2 <79650 79916> out 1 <79917>     # join source bit 9
const-mul-2 in 1 <79917> out 1 <79918>   # join
add in 2 <79649 79918> out 1 <79919>     # join source bit 8
const-mul-2 in 1 <79919> out 1 <79920>   # join
add in 2 <79648 79920> out 1 <79921>     # join source bit 7
const-mul-2 in 1 <79921> out 1 <79922>   # join
add in 2 <79647 79922> out 1 <79923>     # join source bit 6
const-mul-2 in 1 <79923> out 1 <79924>   # join
add in 2 <79646 79924> out 1 <79925>     # join source bit 5
const-mul-2 in 1 <79925> out 1 <79926>   # join
add in 2 <79645 79926> out 1 <79927>     # join source bit 4
const-mul-2 in 1 <79927> out 1 <79928>   # join
add in 2 <79644 79928> out 1 <79929>     # join source bit 3
const-mul-2 in 1 <79929> out 1 <79930>   # join
add in 2 <79643 79930> out 1 <79931>     # join source bit 2
const-mul-2 in 1 <79931> out 1 <79932>   # join
add in 2 <79642 79932> out 1 <79933>     # join source bit 1
const-mul-2 in 1 <79933> out 1 <79934>   # join
add in 2 <79641 79934> out 1 <79935>     # join source bit 0
add in 2 <79935 79935> out 1 <79936>     # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <79065> out 1 <79937> # multiply-by-constant 4294967295
add in 2 <79639 79937> out 1 <79938>     # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <79938> outplitBus
mul in 2 <79970 79936> out 1 <80204>     # cond trueterm
const-mul-neg-1 in 1 <79970> out 1 <80205> # cond minuscond
add in 2 <100 80205> out 1 <80206>       # cond negcond
mul in 2 <80206 79065> out 1 <80207>     # cond falseterm
add in 2 <80204 80207> out 1 <80208>     # cond result
mul in 2 <78893 78857> out 1 <80209>     # cond trueterm
const-mul-neg-1 in 1 <78893> out 1 <80210> # cond minuscond
add in 2 <100 80210> out 1 <80211>       # cond negcond
mul in 2 <80211 78854> out 1 <80212>     # cond falseterm
add in 2 <80209 80212> out 1 <80213>     # cond result
mul in 2 <78749 78713> out 1 <80214>     # cond trueterm
const-mul-neg-1 in 1 <78749> out 1 <80215> # cond minuscond
add in 2 <100 80215> out 1 <80216>       # cond negcond
mul in 2 <80216 78710> out 1 <80217>     # cond falseterm
add in 2 <80214 80217> out 1 <80218>     # cond result
const-mul-ffffffff in 1 <80218> out 1 <80219> # multiply-by-constant 4294967295
add in 2 <80218 80213> out 1 <80220>     # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
add in 2 <80220 80219> out 1 <80221>     # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <80221> out 1 <80222> # multiply-by-constant 4294967295
add in 2 <80220 80222> out 1 <80223>     # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <80218> out 1 <80224> # multiply-by-constant 4294967295
add in 2 <80213 80224> out 1 <80225>     # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <80225> out 200 <80226 80227 80228 80229 80230 80231 80232 80233 80234 80235 80236 80237 80238 80239 80240 80241 80242 80243 80244 80245 80246 80247 80248 80249 80250 80251 80252 80253 80254 80255 80256 80257 80258 80259 80260 80261 80262 80263 80264 80265 80266 80267 80268 80269 80270 80271 80272 80273 80274 80275 80276 80277 80278 80279 80280 80281 80282 80283 80284 80285 80286 80287 80288 80289 80290 80291 80292 80293 80294 80295 80296 80297 80298 80299 80300 80301 80302 80303 80304 80305 80306 80307 80308 80309 80310 80311 80312 80313 80314 80315 80316 80317 80318 80319 80320 80321 80322 80323 80324 80325 80326 80327 80328 80329 80330 80331 80332 80333 80334 80335 80336 80337 80338 80339 80340 80341 80342 80343 80344 80345 80346 80347 80348 80349 80350 80351 80352 80353 80354 80355 80356 80357 80358 80359 80360 80361 80362 80363 80364 80365 80366 80367 80368 80369 80370 80371 80372 80373 80374 80375 80376 80377 80378 80379 80380 80381 80382 80383 80384 80385 80386 80387 80388 80389 80390 80391 80392 80393 80394 80395 80396 80397 80398 80399 80400 80401 80402 80403 80404 80405 80406 80407 80408 80409 80410 80411 80412 80413 80414 80415 80416 80417 80418 80419 80420 80421 80422 80423 80424 80425> # SplitBus
mul in 2 <80257 80223> out 1 <80426>     # cond trueterm
const-mul-neg-1 in 1 <80257> out 1 <80427> # cond minuscond
add in 2 <100 80427> out 1 <80428>       # cond negcond
mul in 2 <80428 80213> out 1 <80429>     # cond falseterm
add in 2 <80426 80429> out 1 <80430>     # cond result
const-mul-ffffffff in 1 <80430> out 1 <80431> # multiply-by-constant 4294967295
add in 2 <80430 80208> out 1 <80432>     # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
split in 1 <80432> outplitBus
const-mul-2 in 1 <80464> out 1 <80668>   # join source bit 31
add in 2 <80463 80668> out 1 <80669>     # join source bit 30
const-mul-2 in 1 <80669> out 1 <80670>   # join
add in 2 <80462 80670> out 1 <80671>     # join source bit 29
const-mul-2 in 1 <80671> out 1 <80672>   # join
add in 2 <80461 80672> out 1 <80673>     # join source bit 28
const-mul-2 in 1 <80673> out 1 <80674>   # join
add in 2 <80460 80674> out 1 <80675>     # join source bit 27
const-mul-2 in 1 <80675> out 1 <80676>   # join
add in 2 <80459 80676> out 1 <80677>     # join source bit 26
const-mul-2 in 1 <80677> out 1 <80678>   # join
add in 2 <80458 80678> out 1 <80679>     # join source bit 25
const-mul-2 in 1 <80679> out 1 <80680>   # join
add in 2 <80457 80680> out 1 <80681>     # join source bit 24
const-mul-2 in 1 <80681> out 1 <80682>   # join
add in 2 <80456 80682> out 1 <80683>     # join source bit 23
const-mul-2 in 1 <80683> out 1 <80684>   # join
add in 2 <80455 80684> out 1 <80685>     # join source bit 22
const-mul-2 in 1 <80685> out 1 <80686>   # join
add in 2 <80454 80686> out 1 <80687>     # join source bit 21
const-mul-2 in 1 <80687> out 1 <80688>   # join
add in 2 <80453 80688> out 1 <80689>     # join source bit 20
const-mul-2 in 1 <80689> out 1 <80690>   # join
add in 2 <80452 80690> out 1 <80691>     # join source bit 19
const-mul-2 in 1 <80691> out 1 <80692>   # join
add in 2 <80451 80692> out 1 <80693>     # join source bit 18
const-mul-2 in 1 <80693> out 1 <80694>   # join
add in 2 <80450 80694> out 1 <80695>     # join source bit 17
const-mul-2 in 1 <80695> out 1 <80696>   # join
add in 2 <80449 80696> out 1 <80697>     # join source bit 16
const-mul-2 in 1 <80697> out 1 <80698>   # join
add in 2 <80448 80698> out 1 <80699>     # join source bit 15
const-mul-2 in 1 <80699> out 1 <80700>   # join
add in 2 <80447 80700> out 1 <80701>     # join source bit 14
const-mul-2 in 1 <80701> out 1 <80702>   # join
add in 2 <80446 80702> out 1 <80703>     # join source bit 13
const-mul-2 in 1 <80703> out 1 <80704>   # join
add in 2 <80445 80704> out 1 <80705>     # join source bit 12
const-mul-2 in 1 <80705> out 1 <80706>   # join
add in 2 <80444 80706> out 1 <80707>     # join source bit 11
const-mul-2 in 1 <80707> out 1 <80708>   # join
add in 2 <80443 80708> out 1 <80709>     # join source bit 10
const-mul-2 in 1 <80709> out 1 <80710>   # join
add in 2 <80442 80710> out 1 <80711>     # join source bit 9
const-mul-2 in 1 <80711> out 1 <80712>   # join
add in 2 <80441 80712> out 1 <80713>     # join source bit 8
const-mul-2 in 1 <80713> out 1 <80714>   # join
add in 2 <80440 80714> out 1 <80715>     # join source bit 7
const-mul-2 in 1 <80715> out 1 <80716>   # join
add in 2 <80439 80716> out 1 <80717>     # join source bit 6
const-mul-2 in 1 <80717> out 1 <80718>   # join
add in 2 <80438 80718> out 1 <80719>     # join source bit 5
const-mul-2 in 1 <80719> out 1 <80720>   # join
add in 2 <80437 80720> out 1 <80721>     # join source bit 4
const-mul-2 in 1 <80721> out 1 <80722>   # join
add in 2 <80436 80722> out 1 <80723>     # join source bit 3
const-mul-2 in 1 <80723> out 1 <80724>   # join
add in 2 <80435 80724> out 1 <80725>     # join source bit 2
const-mul-2 in 1 <80725> out 1 <80726>   # join
add in 2 <80434 80726> out 1 <80727>     # join source bit 1
const-mul-2 in 1 <80727> out 1 <80728>   # join
add in 2 <80433 80728> out 1 <80729>     # join source bit 0
add in 2 <80729 80729> out 1 <80730>     # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <80730> out 1 <80731> # multiply-by-constant 4294967295
add in 2 <80432 80731> out 1 <80732>     # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <80430> out 1 <80733> # multiply-by-constant 4294967295
add in 2 <80208 80733> out 1 <80734>     # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <80734> outplitBus
mul in 2 <80766 80732> out 1 <81002>     # cond trueterm
const-mul-neg-1 in 1 <80766> out 1 <81003> # cond minuscond
add in 2 <100 81003> out 1 <81004>       # cond negcond
mul in 2 <81004 80208> out 1 <81005>     # cond falseterm
add in 2 <81002 81005> out 1 <81006>     # cond result
add in 2 <81006 104> out 1 <81007>       # ArithBusReq.AddReq(DFG.Conditional,DFG.Constant)
const-mul-ffffffff in 1 <26> out 1 <81008> # multiply-by-constant 4294967295
add in 2 <81007 81008> out 1 <81009>     # 'CmpLT DFG.Add - DFG.Input'
split in 1 <81009> outplitBus
mul in 2 <81041 103> out 1 <81248>       # cond trueterm
const-mul-neg-1 in 1 <81041> out 1 <81249> # cond minuscond
add in 2 <100 81249> out 1 <81250>       # cond negcond
mul in 2 <81250 102> out 1 <81251>       # cond falseterm
add in 2 <81248 81251> out 1 <81252>     # cond result
add in 2 <81006 3084> out 1 <81253>      # ArithBusReq.AddReq(DFG.Conditional,DFG.Negate)
const-mul-ffffffff in 1 <81253> out 1 <81254> # multiply-by-constant 4294967295
add in 2 <26 81254> out 1 <81255>        # 'CmpLT DFG.Input - DFG.Subtract'
split in 1 <81255> out 270 <81256 81257 81258 81259 81260 81261 81262 81263 81264 81265 81266 81267 81268 81269 81270 81271 81272 81273 81274 81275 81276 81277 81278 81279 81280 81281 81282 81283 81284 81285 81286 81287 81288 81289 81290 81291 81292 81293 81294 81295 81296 81297 81298 81299 81300 81301 81302 81303 81304 81305 81306 81307 81308 81309 81310 81311 81312 81313 81314 81315 81316 81317 81318 81319 81320 81321 81322 81323 81324 81325 81326 81327 81328 81329 81330 81331 81332 81333 81334 81335 81336 81337 81338 81339 81340 81341 81342 81343 81344 81345 81346 81347 81348 81349 81350 81351 81352 81353 81354 81355 81356 81357 81358 81359 81360 81361 81362 81363 81364 81365 81366 81367 81368 81369 81370 81371 81372 81373 81374 81375 81376 81377 81378 81379 81380 81381 81382 81383 81384 81385 81386 81387 81388 81389 81390 81391 81392 81393 81394 81395 81396 81397 81398 81399 81400 81401 81402 81403 81404 81405 81406 81407 81408 81409 81410 81411 81412 81413 81414 81415 81416 81417 81418 81419 81420 81421 81422 81423 81424 81425 81426 81427 81428 81429 81430 81431 81432 81433 81434 81435 81436 81437 81438 81439 81440 81441 81442 81443 81444 81445 81446 81447 81448 81449 81450 81451 81452 81453 81454 81455 81456 81457 81458 81459 81460 81461 81462 81463 81464 81465 81466 81467 81468 81469 81470 81471 81472 81473 81474 81475 81476 81477 81478 81479 81480 81481 81482 81483 81484 81485 81486 81487 81488 81489 81490 81491 81492 81493 81494 81495 81496 81497 81498 81499 81500 81501 81502 81503 81504 81505 81506 81507 81508 81509 81510 81511 81512 81513 81514 81515 81516 81517 81518 81519 81520 81521 81522 81523 81524 81525> # SplitBus
mul in 2 <81287 103> out 1 <81526>       # cond trueterm
const-mul-neg-1 in 1 <81287> out 1 <81527> # cond minuscond
add in 2 <100 81527> out 1 <81528>       # cond negcond
mul in 2 <81528 81252> out 1 <81529>     # cond falseterm
add in 2 <81526 81529> out 1 <81530>     # cond result
const-mul-ffffffff in 1 <25> out 1 <81531> # multiply-by-constant 4294967295
add in 2 <25 26> out 1 <81532>           # ArithBusReq.AddReq(DFG.Input,DFG.Input)
add in 2 <81532 81531> out 1 <81533>     # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <81533> out 1 <81534> # multiply-by-constant 4294967295
add in 2 <81532 81534> out 1 <81535>     # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <25> out 1 <81536> # multiply-by-constant 4294967295
add in 2 <26 81536> out 1 <81537>        # 'CmpLT DFG.Input - DFG.Input'
split in 1 <81537> out 65 <81538 81539 81540 81541 81542 81543 81544 81545 81546 81547 81548 81549 81550 81551 81552 81553 81554 81555 81556 81557 81558 81559 81560 81561 81562 81563 81564 81565 81566 81567 81568 81569 81570 81571 81572 81573 81574 81575 81576 81577 81578 81579 81580 81581 81582 81583 81584 81585 81586 81587 81588 81589 81590 81591 81592 81593 81594 81595 81596 81597 81598 81599 81600 81601 81602> # SplitBus
mul in 2 <81569 81535> out 1 <81603>     # cond trueterm
const-mul-neg-1 in 1 <81569> out 1 <81604> # cond minuscond
add in 2 <100 81604> out 1 <81605>       # cond negcond
mul in 2 <81605 26> out 1 <81606>        # cond falseterm
add in 2 <81603 81606> out 1 <81607>     # cond result
const-mul-ffffffff in 1 <81607> out 1 <81608> # multiply-by-constant 4294967295
add in 2 <81607 27> out 1 <81609>        # ArithBusReq.AddReq(DFG.Conditional,DFG.Input)
add in 2 <81609 81608> out 1 <81610>     # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <81610> out 1 <81611> # multiply-by-constant 4294967295
add in 2 <81609 81611> out 1 <81612>     # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <81607> out 1 <81613> # multiply-by-constant 4294967295
add in 2 <27 81613> out 1 <81614>        # 'CmpLT DFG.Input - DFG.Conditional'
split in 1 <81614> outplitBus
mul in 2 <81646 81612> out 1 <81746>     # cond trueterm
const-mul-neg-1 in 1 <81646> out 1 <81747> # cond minuscond
add in 2 <100 81747> out 1 <81748>       # cond negcond
mul in 2 <81748 27> out 1 <81749>        # cond falseterm
add in 2 <81746 81749> out 1 <81750>     # cond result
const-mul-ffffffff in 1 <81750> out 1 <81751> # multiply-by-constant 4294967295
add in 2 <81750 28> out 1 <81752>        # ArithBusReq.AddReq(DFG.Conditional,DFG.Input)
add in 2 <81752 81751> out 1 <81753>     # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <81750> out 1 <81754> # multiply-by-constant 4294967295
add in 2 <28 81754> out 1 <81755>        # 'CmpLT DFG.Input - DFG.Conditional'
split in 1 <81755> out 197 <81756 81757 81758 81759 81760 81761 81762 81763 81764 81765 81766 81767 81768 81769 81770 81771 81772 81773 81774 81775 81776 81777 81778 81779 81780 81781 81782 81783 81784 81785 81786 81787 81788 81789 81790 81791 81792 81793 81794 81795 81796 81797 81798 81799 81800 81801 81802 81803 81804 81805 81806 81807 81808 81809 81810 81811 81812 81813 81814 81815 81816 81817 81818 81819 81820 81821 81822 81823 81824 81825 81826 81827 81828 81829 81830 81831 81832 81833 81834 81835 81836 81837 81838 81839 81840 81841 81842 81843 81844 81845 81846 81847 81848 81849 81850 81851 81852 81853 81854 81855 81856 81857 81858 81859 81860 81861 81862 81863 81864 81865 81866 81867 81868 81869 81870 81871 81872 81873 81874 81875 81876 81877 81878 81879 81880 81881 81882 81883 81884 81885 81886 81887 81888 81889 81890 81891 81892 81893 81894 81895 81896 81897 81898 81899 81900 81901 81902 81903 81904 81905 81906 81907 81908 81909 81910 81911 81912 81913 81914 81915 81916 81917 81918 81919 81920 81921 81922 81923 81924 81925 81926 81927 81928 81929 81930 81931 81932 81933 81934 81935 81936 81937 81938 81939 81940 81941 81942 81943 81944 81945 81946 81947 81948 81949 81950 81951 81952> # SplitBus
mul in 2 <81787 81753> out 1 <81953>     # cond trueterm
const-mul-neg-1 in 1 <81787> out 1 <81954> # cond minuscond
add in 2 <100 81954> out 1 <81955>       # cond negcond
mul in 2 <81955 81750> out 1 <81956>     # cond falseterm
add in 2 <81953 81956> out 1 <81957>     # cond result
mul in 2 <81646 81610> out 1 <81958>     # cond trueterm
const-mul-neg-1 in 1 <81646> out 1 <81959> # cond minuscond
add in 2 <100 81959> out 1 <81960>       # cond negcond
mul in 2 <81960 81607> out 1 <81961>     # cond falseterm
add in 2 <81958 81961> out 1 <81962>     # cond result
mul in 2 <81569 81533> out 1 <81963>     # cond trueterm
const-mul-neg-1 in 1 <81569> out 1 <81964> # cond minuscond
add in 2 <100 81964> out 1 <81965>       # cond negcond
mul in 2 <81965 25> out 1 <81966>        # cond falseterm
add in 2 <81963 81966> out 1 <81967>     # cond result
const-mul-ffffffff in 1 <81967> out 1 <81968> # multiply-by-constant 4294967295
add in 2 <81967 81962> out 1 <81969>     # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
add in 2 <81969 81968> out 1 <81970>     # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <81970> out 1 <81971> # multiply-by-constant 4294967295
add in 2 <81969 81971> out 1 <81972>     # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <81967> out 1 <81973> # multiply-by-constant 4294967295
add in 2 <81962 81973> out 1 <81974>     # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <81974> outplitBus
mul in 2 <82006 81972> out 1 <82107>     # cond trueterm
const-mul-neg-1 in 1 <82006> out 1 <82108> # cond minuscond
add in 2 <100 82108> out 1 <82109>       # cond negcond
mul in 2 <82109 81962> out 1 <82110>     # cond falseterm
add in 2 <82107 82110> out 1 <82111>     # cond result
const-mul-ffffffff in 1 <82111> out 1 <82112> # multiply-by-constant 4294967295
add in 2 <82111 81957> out 1 <82113>     # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
add in 2 <82113 82112> out 1 <82114>     # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <82114> out 1 <82115> # multiply-by-constant 4294967295
add in 2 <82113 82115> out 1 <82116>     # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <82111> out 1 <82117> # multiply-by-constant 4294967295
add in 2 <81957 82117> out 1 <82118>     # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <82118> out 199 <82119 82120 82121 82122 82123 82124 82125 82126 82127 82128 82129 82130 82131 82132 82133 82134 82135 82136 82137 82138 82139 82140 82141 82142 82143 82144 82145 82146 82147 82148 82149 82150 82151 82152 82153 82154 82155 82156 82157 82158 82159 82160 82161 82162 82163 82164 82165 82166 82167 82168 82169 82170 82171 82172 82173 82174 82175 82176 82177 82178 82179 82180 82181 82182 82183 82184 82185 82186 82187 82188 82189 82190 82191 82192 82193 82194 82195 82196 82197 82198 82199 82200 82201 82202 82203 82204 82205 82206 82207 82208 82209 82210 82211 82212 82213 82214 82215 82216 82217 82218 82219 82220 82221 82222 82223 82224 82225 82226 82227 82228 82229 82230 82231 82232 82233 82234 82235 82236 82237 82238 82239 82240 82241 82242 82243 82244 82245 82246 82247 82248 82249 82250 82251 82252 82253 82254 82255 82256 82257 82258 82259 82260 82261 82262 82263 82264 82265 82266 82267 82268 82269 82270 82271 82272 82273 82274 82275 82276 82277 82278 82279 82280 82281 82282 82283 82284 82285 82286 82287 82288 82289 82290 82291 82292 82293 82294 82295 82296 82297 82298 82299 82300 82301 82302 82303 82304 82305 82306 82307 82308 82309 82310 82311 82312 82313 82314 82315 82316 82317> # SplitBus
mul in 2 <82150 82116> out 1 <82318>     # cond trueterm
const-mul-neg-1 in 1 <82150> out 1 <82319> # cond minuscond
add in 2 <100 82319> out 1 <82320>       # cond negcond
mul in 2 <82320 81957> out 1 <82321>     # cond falseterm
add in 2 <82318 82321> out 1 <82322>     # cond result
const-mul-ffffffff in 1 <82322> out 1 <82323> # multiply-by-constant 4294967295
const-mul-ffffffff in 1 <81753> out 1 <82324> # multiply-by-constant 4294967295
add in 2 <81752 82324> out 1 <82325>     # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
mul in 2 <81787 82325> out 1 <82326>     # cond trueterm
const-mul-neg-1 in 1 <81787> out 1 <82327> # cond minuscond
add in 2 <100 82327> out 1 <82328>       # cond negcond
mul in 2 <82328 28> out 1 <82329>        # cond falseterm
add in 2 <82326 82329> out 1 <82330>     # cond result
const-mul-ffffffff in 1 <82330> out 1 <82331> # multiply-by-constant 4294967295
add in 2 <82330 29> out 1 <82332>        # ArithBusReq.AddReq(DFG.Conditional,DFG.Input)
split in 1 <82332> outplitBus
const-mul-2 in 1 <82364> out 1 <82564>   # join source bit 31
add in 2 <82363 82564> out 1 <82565>     # join source bit 30
const-mul-2 in 1 <82565> out 1 <82566>   # join
add in 2 <82362 82566> out 1 <82567>     # join source bit 29
const-mul-2 in 1 <82567> out 1 <82568>   # join
add in 2 <82361 82568> out 1 <82569>     # join source bit 28
const-mul-2 in 1 <82569> out 1 <82570>   # join
add in 2 <82360 82570> out 1 <82571>     # join source bit 27
const-mul-2 in 1 <82571> out 1 <82572>   # join
add in 2 <82359 82572> out 1 <82573>     # join source bit 26
const-mul-2 in 1 <82573> out 1 <82574>   # join
add in 2 <82358 82574> out 1 <82575>     # join source bit 25
const-mul-2 in 1 <82575> out 1 <82576>   # join
add in 2 <82357 82576> out 1 <82577>     # join source bit 24
const-mul-2 in 1 <82577> out 1 <82578>   # join
add in 2 <82356 82578> out 1 <82579>     # join source bit 23
const-mul-2 in 1 <82579> out 1 <82580>   # join
add in 2 <82355 82580> out 1 <82581>     # join source bit 22
const-mul-2 in 1 <82581> out 1 <82582>   # join
add in 2 <82354 82582> out 1 <82583>     # join source bit 21
const-mul-2 in 1 <82583> out 1 <82584>   # join
add in 2 <82353 82584> out 1 <82585>     # join source bit 20
const-mul-2 in 1 <82585> out 1 <82586>   # join
add in 2 <82352 82586> out 1 <82587>     # join source bit 19
const-mul-2 in 1 <82587> out 1 <82588>   # join
add in 2 <82351 82588> out 1 <82589>     # join source bit 18
const-mul-2 in 1 <82589> out 1 <82590>   # join
add in 2 <82350 82590> out 1 <82591>     # join source bit 17
const-mul-2 in 1 <82591> out 1 <82592>   # join
add in 2 <82349 82592> out 1 <82593>     # join source bit 16
const-mul-2 in 1 <82593> out 1 <82594>   # join
add in 2 <82348 82594> out 1 <82595>     # join source bit 15
const-mul-2 in 1 <82595> out 1 <82596>   # join
add in 2 <82347 82596> out 1 <82597>     # join source bit 14
const-mul-2 in 1 <82597> out 1 <82598>   # join
add in 2 <82346 82598> out 1 <82599>     # join source bit 13
const-mul-2 in 1 <82599> out 1 <82600>   # join
add in 2 <82345 82600> out 1 <82601>     # join source bit 12
const-mul-2 in 1 <82601> out 1 <82602>   # join
add in 2 <82344 82602> out 1 <82603>     # join source bit 11
const-mul-2 in 1 <82603> out 1 <82604>   # join
add in 2 <82343 82604> out 1 <82605>     # join source bit 10
const-mul-2 in 1 <82605> out 1 <82606>   # join
add in 2 <82342 82606> out 1 <82607>     # join source bit 9
const-mul-2 in 1 <82607> out 1 <82608>   # join
add in 2 <82341 82608> out 1 <82609>     # join source bit 8
const-mul-2 in 1 <82609> out 1 <82610>   # join
add in 2 <82340 82610> out 1 <82611>     # join source bit 7
const-mul-2 in 1 <82611> out 1 <82612>   # join
add in 2 <82339 82612> out 1 <82613>     # join source bit 6
const-mul-2 in 1 <82613> out 1 <82614>   # join
add in 2 <82338 82614> out 1 <82615>     # join source bit 5
const-mul-2 in 1 <82615> out 1 <82616>   # join
add in 2 <82337 82616> out 1 <82617>     # join source bit 4
const-mul-2 in 1 <82617> out 1 <82618>   # join
add in 2 <82336 82618> out 1 <82619>     # join source bit 3
const-mul-2 in 1 <82619> out 1 <82620>   # join
add in 2 <82335 82620> out 1 <82621>     # join source bit 2
const-mul-2 in 1 <82621> out 1 <82622>   # join
add in 2 <82334 82622> out 1 <82623>     # join source bit 1
const-mul-2 in 1 <82623> out 1 <82624>   # join
add in 2 <82333 82624> out 1 <82625>     # join source bit 0
add in 2 <82625 82625> out 1 <82626>     # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <82330> out 1 <82627> # multiply-by-constant 4294967295
add in 2 <29 82627> out 1 <82628>        # 'CmpLT DFG.Input - DFG.Conditional'
split in 1 <82628> outplitBus
mul in 2 <82660 82626> out 1 <82892>     # cond trueterm
const-mul-neg-1 in 1 <82660> out 1 <82893> # cond minuscond
add in 2 <100 82893> out 1 <82894>       # cond negcond
mul in 2 <82894 82330> out 1 <82895>     # cond falseterm
add in 2 <82892 82895> out 1 <82896>     # cond result
add in 2 <82322 82896> out 1 <82897>     # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
split in 1 <82897> out 233 <82898 82899 82900 82901 82902 82903 82904 82905 82906 82907 82908 82909 82910 82911 82912 82913 82914 82915 82916 82917 82918 82919 82920 82921 82922 82923 82924 82925 82926 82927 82928 82929 82930 82931 82932 82933 82934 82935 82936 82937 82938 82939 82940 82941 82942 82943 82944 82945 82946 82947 82948 82949 82950 82951 82952 82953 82954 82955 82956 82957 82958 82959 82960 82961 82962 82963 82964 82965 82966 82967 82968 82969 82970 82971 82972 82973 82974 82975 82976 82977 82978 82979 82980 82981 82982 82983 82984 82985 82986 82987 82988 82989 82990 82991 82992 82993 82994 82995 82996 82997 82998 82999 83000 83001 83002 83003 83004 83005 83006 83007 83008 83009 83010 83011 83012 83013 83014 83015 83016 83017 83018 83019 83020 83021 83022 83023 83024 83025 83026 83027 83028 83029 83030 83031 83032 83033 83034 83035 83036 83037 83038 83039 83040 83041 83042 83043 83044 83045 83046 83047 83048 83049 83050 83051 83052 83053 83054 83055 83056 83057 83058 83059 83060 83061 83062 83063 83064 83065 83066 83067 83068 83069 83070 83071 83072 83073 83074 83075 83076 83077 83078 83079 83080 83081 83082 83083 83084 83085 83086 83087 83088 83089 83090 83091 83092 83093 83094 83095 83096 83097 83098 83099 83100 83101 83102 83103 83104 83105 83106 83107 83108 83109 83110 83111 83112 83113 83114 83115 83116 83117 83118 83119 83120 83121 83122 83123 83124 83125 83126 83127 83128 83129 83130> # SplitBus
const-mul-2 in 1 <82929> out 1 <83131>   # join source bit 31
add in 2 <82928 83131> out 1 <83132>     # join source bit 30
const-mul-2 in 1 <83132> out 1 <83133>   # join
add in 2 <82927 83133> out 1 <83134>     # join source bit 29
const-mul-2 in 1 <83134> out 1 <83135>   # join
add in 2 <82926 83135> out 1 <83136>     # join source bit 28
const-mul-2 in 1 <83136> out 1 <83137>   # join
add in 2 <82925 83137> out 1 <83138>     # join source bit 27
const-mul-2 in 1 <83138> out 1 <83139>   # join
add in 2 <82924 83139> out 1 <83140>     # join source bit 26
const-mul-2 in 1 <83140> out 1 <83141>   # join
add in 2 <82923 83141> out 1 <83142>     # join source bit 25
const-mul-2 in 1 <83142> out 1 <83143>   # join
add in 2 <82922 83143> out 1 <83144>     # join source bit 24
const-mul-2 in 1 <83144> out 1 <83145>   # join
add in 2 <82921 83145> out 1 <83146>     # join source bit 23
const-mul-2 in 1 <83146> out 1 <83147>   # join
add in 2 <82920 83147> out 1 <83148>     # join source bit 22
const-mul-2 in 1 <83148> out 1 <83149>   # join
add in 2 <82919 83149> out 1 <83150>     # join source bit 21
const-mul-2 in 1 <83150> out 1 <83151>   # join
add in 2 <82918 83151> out 1 <83152>     # join source bit 20
const-mul-2 in 1 <83152> out 1 <83153>   # join
add in 2 <82917 83153> out 1 <83154>     # join source bit 19
const-mul-2 in 1 <83154> out 1 <83155>   # join
add in 2 <82916 83155> out 1 <83156>     # join source bit 18
const-mul-2 in 1 <83156> out 1 <83157>   # join
add in 2 <82915 83157> out 1 <83158>     # join source bit 17
const-mul-2 in 1 <83158> out 1 <83159>   # join
add in 2 <82914 83159> out 1 <83160>     # join source bit 16
const-mul-2 in 1 <83160> out 1 <83161>   # join
add in 2 <82913 83161> out 1 <83162>     # join source bit 15
const-mul-2 in 1 <83162> out 1 <83163>   # join
add in 2 <82912 83163> out 1 <83164>     # join source bit 14
const-mul-2 in 1 <83164> out 1 <83165>   # join
add in 2 <82911 83165> out 1 <83166>     # join source bit 13
const-mul-2 in 1 <83166> out 1 <83167>   # join
add in 2 <82910 83167> out 1 <83168>     # join source bit 12
const-mul-2 in 1 <83168> out 1 <83169>   # join
add in 2 <82909 83169> out 1 <83170>     # join source bit 11
const-mul-2 in 1 <83170> out 1 <83171>   # join
add in 2 <82908 83171> out 1 <83172>     # join source bit 10
const-mul-2 in 1 <83172> out 1 <83173>   # join
add in 2 <82907 83173> out 1 <83174>     # join source bit 9
const-mul-2 in 1 <83174> out 1 <83175>   # join
add in 2 <82906 83175> out 1 <83176>     # join source bit 8
const-mul-2 in 1 <83176> out 1 <83177>   # join
add in 2 <82905 83177> out 1 <83178>     # join source bit 7
const-mul-2 in 1 <83178> out 1 <83179>   # join
add in 2 <82904 83179> out 1 <83180>     # join source bit 6
const-mul-2 in 1 <83180> out 1 <83181>   # join
add in 2 <82903 83181> out 1 <83182>     # join source bit 5
const-mul-2 in 1 <83182> out 1 <83183>   # join
add in 2 <82902 83183> out 1 <83184>     # join source bit 4
const-mul-2 in 1 <83184> out 1 <83185>   # join
add in 2 <82901 83185> out 1 <83186>     # join source bit 3
const-mul-2 in 1 <83186> out 1 <83187>   # join
add in 2 <82900 83187> out 1 <83188>     # join source bit 2
const-mul-2 in 1 <83188> out 1 <83189>   # join
add in 2 <82899 83189> out 1 <83190>     # join source bit 1
const-mul-2 in 1 <83190> out 1 <83191>   # join
add in 2 <82898 83191> out 1 <83192>     # join source bit 0
add in 2 <83192 83192> out 1 <83193>     # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <82322> out 1 <83194> # multiply-by-constant 4294967295
add in 2 <82896 83194> out 1 <83195>     # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <83195> outplitBus
mul in 2 <83227 83193> out 1 <83461>     # cond trueterm
const-mul-neg-1 in 1 <83227> out 1 <83462> # cond minuscond
add in 2 <100 83462> out 1 <83463>       # cond negcond
mul in 2 <83463 82322> out 1 <83464>     # cond falseterm
add in 2 <83461 83464> out 1 <83465>     # cond result
mul in 2 <82150 82114> out 1 <83466>     # cond trueterm
const-mul-neg-1 in 1 <82150> out 1 <83467> # cond minuscond
add in 2 <100 83467> out 1 <83468>       # cond negcond
mul in 2 <83468 82111> out 1 <83469>     # cond falseterm
add in 2 <83466 83469> out 1 <83470>     # cond result
mul in 2 <82006 81970> out 1 <83471>     # cond trueterm
const-mul-neg-1 in 1 <82006> out 1 <83472> # cond minuscond
add in 2 <100 83472> out 1 <83473>       # cond negcond
mul in 2 <83473 81967> out 1 <83474>     # cond falseterm
add in 2 <83471 83474> out 1 <83475>     # cond result
const-mul-ffffffff in 1 <83475> out 1 <83476> # multiply-by-constant 4294967295
add in 2 <83475 83470> out 1 <83477>     # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
add in 2 <83477 83476> out 1 <83478>     # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <83478> out 1 <83479> # multiply-by-constant 4294967295
add in 2 <83477 83479> out 1 <83480>     # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <83475> out 1 <83481> # multiply-by-constant 4294967295
add in 2 <83470 83481> out 1 <83482>     # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <83482> out 200 <83483 83484 83485 83486 83487 83488 83489 83490 83491 83492 83493 83494 83495 83496 83497 83498 83499 83500 83501 83502 83503 83504 83505 83506 83507 83508 83509 83510 83511 83512 83513 83514 83515 83516 83517 83518 83519 83520 83521 83522 83523 83524 83525 83526 83527 83528 83529 83530 83531 83532 83533 83534 83535 83536 83537 83538 83539 83540 83541 83542 83543 83544 83545 83546 83547 83548 83549 83550 83551 83552 83553 83554 83555 83556 83557 83558 83559 83560 83561 83562 83563 83564 83565 83566 83567 83568 83569 83570 83571 83572 83573 83574 83575 83576 83577 83578 83579 83580 83581 83582 83583 83584 83585 83586 83587 83588 83589 83590 83591 83592 83593 83594 83595 83596 83597 83598 83599 83600 83601 83602 83603 83604 83605 83606 83607 83608 83609 83610 83611 83612 83613 83614 83615 83616 83617 83618 83619 83620 83621 83622 83623 83624 83625 83626 83627 83628 83629 83630 83631 83632 83633 83634 83635 83636 83637 83638 83639 83640 83641 83642 83643 83644 83645 83646 83647 83648 83649 83650 83651 83652 83653 83654 83655 83656 83657 83658 83659 83660 83661 83662 83663 83664 83665 83666 83667 83668 83669 83670 83671 83672 83673 83674 83675 83676 83677 83678 83679 83680 83681 83682> # SplitBus
mul in 2 <83514 83480> out 1 <83683>     # cond trueterm
const-mul-neg-1 in 1 <83514> out 1 <83684> # cond minuscond
add in 2 <100 83684> out 1 <83685>       # cond negcond
mul in 2 <83685 83470> out 1 <83686>     # cond falseterm
add in 2 <83683 83686> out 1 <83687>     # cond result
const-mul-ffffffff in 1 <83687> out 1 <83688> # multiply-by-constant 4294967295
add in 2 <83687 83465> out 1 <83689>     # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
split in 1 <83689> outplitBus
const-mul-2 in 1 <83721> out 1 <83925>   # join source bit 31
add in 2 <83720 83925> out 1 <83926>     # join source bit 30
const-mul-2 in 1 <83926> out 1 <83927>   # join
add in 2 <83719 83927> out 1 <83928>     # join source bit 29
const-mul-2 in 1 <83928> out 1 <83929>   # join
add in 2 <83718 83929> out 1 <83930>     # join source bit 28
const-mul-2 in 1 <83930> out 1 <83931>   # join
add in 2 <83717 83931> out 1 <83932>     # join source bit 27
const-mul-2 in 1 <83932> out 1 <83933>   # join
add in 2 <83716 83933> out 1 <83934>     # join source bit 26
const-mul-2 in 1 <83934> out 1 <83935>   # join
add in 2 <83715 83935> out 1 <83936>     # join source bit 25
const-mul-2 in 1 <83936> out 1 <83937>   # join
add in 2 <83714 83937> out 1 <83938>     # join source bit 24
const-mul-2 in 1 <83938> out 1 <83939>   # join
add in 2 <83713 83939> out 1 <83940>     # join source bit 23
const-mul-2 in 1 <83940> out 1 <83941>   # join
add in 2 <83712 83941> out 1 <83942>     # join source bit 22
const-mul-2 in 1 <83942> out 1 <83943>   # join
add in 2 <83711 83943> out 1 <83944>     # join source bit 21
const-mul-2 in 1 <83944> out 1 <83945>   # join
add in 2 <83710 83945> out 1 <83946>     # join source bit 20
const-mul-2 in 1 <83946> out 1 <83947>   # join
add in 2 <83709 83947> out 1 <83948>     # join source bit 19
const-mul-2 in 1 <83948> out 1 <83949>   # join
add in 2 <83708 83949> out 1 <83950>     # join source bit 18
const-mul-2 in 1 <83950> out 1 <83951>   # join
add in 2 <83707 83951> out 1 <83952>     # join source bit 17
const-mul-2 in 1 <83952> out 1 <83953>   # join
add in 2 <83706 83953> out 1 <83954>     # join source bit 16
const-mul-2 in 1 <83954> out 1 <83955>   # join
add in 2 <83705 83955> out 1 <83956>     # join source bit 15
const-mul-2 in 1 <83956> out 1 <83957>   # join
add in 2 <83704 83957> out 1 <83958>     # join source bit 14
const-mul-2 in 1 <83958> out 1 <83959>   # join
add in 2 <83703 83959> out 1 <83960>     # join source bit 13
const-mul-2 in 1 <83960> out 1 <83961>   # join
add in 2 <83702 83961> out 1 <83962>     # join source bit 12
const-mul-2 in 1 <83962> out 1 <83963>   # join
add in 2 <83701 83963> out 1 <83964>     # join source bit 11
const-mul-2 in 1 <83964> out 1 <83965>   # join
add in 2 <83700 83965> out 1 <83966>     # join source bit 10
const-mul-2 in 1 <83966> out 1 <83967>   # join
add in 2 <83699 83967> out 1 <83968>     # join source bit 9
const-mul-2 in 1 <83968> out 1 <83969>   # join
add in 2 <83698 83969> out 1 <83970>     # join source bit 8
const-mul-2 in 1 <83970> out 1 <83971>   # join
add in 2 <83697 83971> out 1 <83972>     # join source bit 7
const-mul-2 in 1 <83972> out 1 <83973>   # join
add in 2 <83696 83973> out 1 <83974>     # join source bit 6
const-mul-2 in 1 <83974> out 1 <83975>   # join
add in 2 <83695 83975> out 1 <83976>     # join source bit 5
const-mul-2 in 1 <83976> out 1 <83977>   # join
add in 2 <83694 83977> out 1 <83978>     # join source bit 4
const-mul-2 in 1 <83978> out 1 <83979>   # join
add in 2 <83693 83979> out 1 <83980>     # join source bit 3
const-mul-2 in 1 <83980> out 1 <83981>   # join
add in 2 <83692 83981> out 1 <83982>     # join source bit 2
const-mul-2 in 1 <83982> out 1 <83983>   # join
add in 2 <83691 83983> out 1 <83984>     # join source bit 1
const-mul-2 in 1 <83984> out 1 <83985>   # join
add in 2 <83690 83985> out 1 <83986>     # join source bit 0
add in 2 <83986 83986> out 1 <83987>     # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <83987> out 1 <83988> # multiply-by-constant 4294967295
add in 2 <83689 83988> out 1 <83989>     # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <83687> out 1 <83990> # multiply-by-constant 4294967295
add in 2 <83465 83990> out 1 <83991>     # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <83991> outplitBus
mul in 2 <84023 83989> out 1 <84259>     # cond trueterm
const-mul-neg-1 in 1 <84023> out 1 <84260> # cond minuscond
add in 2 <100 84260> out 1 <84261>       # cond negcond
mul in 2 <84261 83465> out 1 <84262>     # cond falseterm
add in 2 <84259 84262> out 1 <84263>     # cond result
add in 2 <84263 104> out 1 <84264>       # ArithBusReq.AddReq(DFG.Conditional,DFG.Constant)
const-mul-ffffffff in 1 <27> out 1 <84265> # multiply-by-constant 4294967295
add in 2 <84264 84265> out 1 <84266>     # 'CmpLT DFG.Add - DFG.Input'
split in 1 <84266> outplitBus
mul in 2 <84298 103> out 1 <84505>       # cond trueterm
const-mul-neg-1 in 1 <84298> out 1 <84506> # cond minuscond
add in 2 <100 84506> out 1 <84507>       # cond negcond
mul in 2 <84507 102> out 1 <84508>       # cond falseterm
add in 2 <84505 84508> out 1 <84509>     # cond result
add in 2 <84263 3084> out 1 <84510>      # ArithBusReq.AddReq(DFG.Conditional,DFG.Negate)
const-mul-ffffffff in 1 <84510> out 1 <84511> # multiply-by-constant 4294967295
add in 2 <27 84511> out 1 <84512>        # 'CmpLT DFG.Input - DFG.Subtract'
split in 1 <84512> outplitBus
mul in 2 <84544 103> out 1 <84783>       # cond trueterm
const-mul-neg-1 in 1 <84544> out 1 <84784> # cond minuscond
add in 2 <100 84784> out 1 <84785>       # cond negcond
mul in 2 <84785 84509> out 1 <84786>     # cond falseterm
add in 2 <84783 84786> out 1 <84787>     # cond result
const-mul-ffffffff in 1 <26> out 1 <84788> # multiply-by-constant 4294967295
add in 2 <26 27> out 1 <84789>           # ArithBusReq.AddReq(DFG.Input,DFG.Input)
add in 2 <84789 84788> out 1 <84790>     # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <84790> out 1 <84791> # multiply-by-constant 4294967295
add in 2 <84789 84791> out 1 <84792>     # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <26> out 1 <84793> # multiply-by-constant 4294967295
add in 2 <27 84793> out 1 <84794>        # 'CmpLT DFG.Input - DFG.Input'
split in 1 <84794> out 65 <84795 84796 84797 84798 84799 84800 84801 84802 84803 84804 84805 84806 84807 84808 84809 84810 84811 84812 84813 84814 84815 84816 84817 84818 84819 84820 84821 84822 84823 84824 84825 84826 84827 84828 84829 84830 84831 84832 84833 84834 84835 84836 84837 84838 84839 84840 84841 84842 84843 84844 84845 84846 84847 84848 84849 84850 84851 84852 84853 84854 84855 84856 84857 84858 84859> # SplitBus
mul in 2 <84826 84792> out 1 <84860>     # cond trueterm
const-mul-neg-1 in 1 <84826> out 1 <84861> # cond minuscond
add in 2 <100 84861> out 1 <84862>       # cond negcond
mul in 2 <84862 27> out 1 <84863>        # cond falseterm
add in 2 <84860 84863> out 1 <84864>     # cond result
const-mul-ffffffff in 1 <84864> out 1 <84865> # multiply-by-constant 4294967295
add in 2 <84864 28> out 1 <84866>        # ArithBusReq.AddReq(DFG.Conditional,DFG.Input)
add in 2 <84866 84865> out 1 <84867>     # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <84867> out 1 <84868> # multiply-by-constant 4294967295
add in 2 <84866 84868> out 1 <84869>     # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <84864> out 1 <84870> # multiply-by-constant 4294967295
add in 2 <28 84870> out 1 <84871>        # 'CmpLT DFG.Input - DFG.Conditional'
split in 1 <84871> outplitBus
mul in 2 <84903 84869> out 1 <85003>     # cond trueterm
const-mul-neg-1 in 1 <84903> out 1 <85004> # cond minuscond
add in 2 <100 85004> out 1 <85005>       # cond negcond
mul in 2 <85005 28> out 1 <85006>        # cond falseterm
add in 2 <85003 85006> out 1 <85007>     # cond result
const-mul-ffffffff in 1 <85007> out 1 <85008> # multiply-by-constant 4294967295
add in 2 <85007 29> out 1 <85009>        # ArithBusReq.AddReq(DFG.Conditional,DFG.Input)
add in 2 <85009 85008> out 1 <85010>     # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <85007> out 1 <85011> # multiply-by-constant 4294967295
add in 2 <29 85011> out 1 <85012>        # 'CmpLT DFG.Input - DFG.Conditional'
split in 1 <85012> out 197 <85013 85014 85015 85016 85017 85018 85019 85020 85021 85022 85023 85024 85025 85026 85027 85028 85029 85030 85031 85032 85033 85034 85035 85036 85037 85038 85039 85040 85041 85042 85043 85044 85045 85046 85047 85048 85049 85050 85051 85052 85053 85054 85055 85056 85057 85058 85059 85060 85061 85062 85063 85064 85065 85066 85067 85068 85069 85070 85071 85072 85073 85074 85075 85076 85077 85078 85079 85080 85081 85082 85083 85084 85085 85086 85087 85088 85089 85090 85091 85092 85093 85094 85095 85096 85097 85098 85099 85100 85101 85102 85103 85104 85105 85106 85107 85108 85109 85110 85111 85112 85113 85114 85115 85116 85117 85118 85119 85120 85121 85122 85123 85124 85125 85126 85127 85128 85129 85130 85131 85132 85133 85134 85135 85136 85137 85138 85139 85140 85141 85142 85143 85144 85145 85146 85147 85148 85149 85150 85151 85152 85153 85154 85155 85156 85157 85158 85159 85160 85161 85162 85163 85164 85165 85166 85167 85168 85169 85170 85171 85172 85173 85174 85175 85176 85177 85178 85179 85180 85181 85182 85183 85184 85185 85186 85187 85188 85189 85190 85191 85192 85193 85194 85195 85196 85197 85198 85199 85200 85201 85202 85203 85204 85205 85206 85207 85208 85209> # SplitBus
mul in 2 <85044 85010> out 1 <85210>     # cond trueterm
const-mul-neg-1 in 1 <85044> out 1 <85211> # cond minuscond
add in 2 <100 85211> out 1 <85212>       # cond negcond
mul in 2 <85212 85007> out 1 <85213>     # cond falseterm
add in 2 <85210 85213> out 1 <85214>     # cond result
mul in 2 <84903 84867> out 1 <85215>     # cond trueterm
const-mul-neg-1 in 1 <84903> out 1 <85216> # cond minuscond
add in 2 <100 85216> out 1 <85217>       # cond negcond
mul in 2 <85217 84864> out 1 <85218>     # cond falseterm
add in 2 <85215 85218> out 1 <85219>     # cond result
mul in 2 <84826 84790> out 1 <85220>     # cond trueterm
const-mul-neg-1 in 1 <84826> out 1 <85221> # cond minuscond
add in 2 <100 85221> out 1 <85222>       # cond negcond
mul in 2 <85222 26> out 1 <85223>        # cond falseterm
add in 2 <85220 85223> out 1 <85224>     # cond result
const-mul-ffffffff in 1 <85224> out 1 <85225> # multiply-by-constant 4294967295
add in 2 <85224 85219> out 1 <85226>     # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
add in 2 <85226 85225> out 1 <85227>     # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <85227> out 1 <85228> # multiply-by-constant 4294967295
add in 2 <85226 85228> out 1 <85229>     # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <85224> out 1 <85230> # multiply-by-constant 4294967295
add in 2 <85219 85230> out 1 <85231>     # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <85231> outplitBus
mul in 2 <85263 85229> out 1 <85364>     # cond trueterm
const-mul-neg-1 in 1 <85263> out 1 <85365> # cond minuscond
add in 2 <100 85365> out 1 <85366>       # cond negcond
mul in 2 <85366 85219> out 1 <85367>     # cond falseterm
add in 2 <85364 85367> out 1 <85368>     # cond result
const-mul-ffffffff in 1 <85368> out 1 <85369> # multiply-by-constant 4294967295
add in 2 <85368 85214> out 1 <85370>     # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
add in 2 <85370 85369> out 1 <85371>     # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <85371> out 1 <85372> # multiply-by-constant 4294967295
add in 2 <85370 85372> out 1 <85373>     # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <85368> out 1 <85374> # multiply-by-constant 4294967295
add in 2 <85214 85374> out 1 <85375>     # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <85375> out 199 <85376 85377 85378 85379 85380 85381 85382 85383 85384 85385 85386 85387 85388 85389 85390 85391 85392 85393 85394 85395 85396 85397 85398 85399 85400 85401 85402 85403 85404 85405 85406 85407 85408 85409 85410 85411 85412 85413 85414 85415 85416 85417 85418 85419 85420 85421 85422 85423 85424 85425 85426 85427 85428 85429 85430 85431 85432 85433 85434 85435 85436 85437 85438 85439 85440 85441 85442 85443 85444 85445 85446 85447 85448 85449 85450 85451 85452 85453 85454 85455 85456 85457 85458 85459 85460 85461 85462 85463 85464 85465 85466 85467 85468 85469 85470 85471 85472 85473 85474 85475 85476 85477 85478 85479 85480 85481 85482 85483 85484 85485 85486 85487 85488 85489 85490 85491 85492 85493 85494 85495 85496 85497 85498 85499 85500 85501 85502 85503 85504 85505 85506 85507 85508 85509 85510 85511 85512 85513 85514 85515 85516 85517 85518 85519 85520 85521 85522 85523 85524 85525 85526 85527 85528 85529 85530 85531 85532 85533 85534 85535 85536 85537 85538 85539 85540 85541 85542 85543 85544 85545 85546 85547 85548 85549 85550 85551 85552 85553 85554 85555 85556 85557 85558 85559 85560 85561 85562 85563 85564 85565 85566 85567 85568 85569 85570 85571 85572 85573 85574> # SplitBus
mul in 2 <85407 85373> out 1 <85575>     # cond trueterm
const-mul-neg-1 in 1 <85407> out 1 <85576> # cond minuscond
add in 2 <100 85576> out 1 <85577>       # cond negcond
mul in 2 <85577 85214> out 1 <85578>     # cond falseterm
add in 2 <85575 85578> out 1 <85579>     # cond result
const-mul-ffffffff in 1 <85579> out 1 <85580> # multiply-by-constant 4294967295
const-mul-ffffffff in 1 <85010> out 1 <85581> # multiply-by-constant 4294967295
add in 2 <85009 85581> out 1 <85582>     # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
mul in 2 <85044 85582> out 1 <85583>     # cond trueterm
const-mul-neg-1 in 1 <85044> out 1 <85584> # cond minuscond
add in 2 <100 85584> out 1 <85585>       # cond negcond
mul in 2 <85585 29> out 1 <85586>        # cond falseterm
add in 2 <85583 85586> out 1 <85587>     # cond result
const-mul-ffffffff in 1 <85587> out 1 <85588> # multiply-by-constant 4294967295
add in 2 <85587 30> out 1 <85589>        # ArithBusReq.AddReq(DFG.Conditional,DFG.Input)
split in 1 <85589> outplitBus
const-mul-2 in 1 <85621> out 1 <85821>   # join source bit 31
add in 2 <85620 85821> out 1 <85822>     # join source bit 30
const-mul-2 in 1 <85822> out 1 <85823>   # join
add in 2 <85619 85823> out 1 <85824>     # join source bit 29
const-mul-2 in 1 <85824> out 1 <85825>   # join
add in 2 <85618 85825> out 1 <85826>     # join source bit 28
const-mul-2 in 1 <85826> out 1 <85827>   # join
add in 2 <85617 85827> out 1 <85828>     # join source bit 27
const-mul-2 in 1 <85828> out 1 <85829>   # join
add in 2 <85616 85829> out 1 <85830>     # join source bit 26
const-mul-2 in 1 <85830> out 1 <85831>   # join
add in 2 <85615 85831> out 1 <85832>     # join source bit 25
const-mul-2 in 1 <85832> out 1 <85833>   # join
add in 2 <85614 85833> out 1 <85834>     # join source bit 24
const-mul-2 in 1 <85834> out 1 <85835>   # join
add in 2 <85613 85835> out 1 <85836>     # join source bit 23
const-mul-2 in 1 <85836> out 1 <85837>   # join
add in 2 <85612 85837> out 1 <85838>     # join source bit 22
const-mul-2 in 1 <85838> out 1 <85839>   # join
add in 2 <85611 85839> out 1 <85840>     # join source bit 21
const-mul-2 in 1 <85840> out 1 <85841>   # join
add in 2 <85610 85841> out 1 <85842>     # join source bit 20
const-mul-2 in 1 <85842> out 1 <85843>   # join
add in 2 <85609 85843> out 1 <85844>     # join source bit 19
const-mul-2 in 1 <85844> out 1 <85845>   # join
add in 2 <85608 85845> out 1 <85846>     # join source bit 18
const-mul-2 in 1 <85846> out 1 <85847>   # join
add in 2 <85607 85847> out 1 <85848>     # join source bit 17
const-mul-2 in 1 <85848> out 1 <85849>   # join
add in 2 <85606 85849> out 1 <85850>     # join source bit 16
const-mul-2 in 1 <85850> out 1 <85851>   # join
add in 2 <85605 85851> out 1 <85852>     # join source bit 15
const-mul-2 in 1 <85852> out 1 <85853>   # join
add in 2 <85604 85853> out 1 <85854>     # join source bit 14
const-mul-2 in 1 <85854> out 1 <85855>   # join
add in 2 <85603 85855> out 1 <85856>     # join source bit 13
const-mul-2 in 1 <85856> out 1 <85857>   # join
add in 2 <85602 85857> out 1 <85858>     # join source bit 12
const-mul-2 in 1 <85858> out 1 <85859>   # join
add in 2 <85601 85859> out 1 <85860>     # join source bit 11
const-mul-2 in 1 <85860> out 1 <85861>   # join
add in 2 <85600 85861> out 1 <85862>     # join source bit 10
const-mul-2 in 1 <85862> out 1 <85863>   # join
add in 2 <85599 85863> out 1 <85864>     # join source bit 9
const-mul-2 in 1 <85864> out 1 <85865>   # join
add in 2 <85598 85865> out 1 <85866>     # join source bit 8
const-mul-2 in 1 <85866> out 1 <85867>   # join
add in 2 <85597 85867> out 1 <85868>     # join source bit 7
const-mul-2 in 1 <85868> out 1 <85869>   # join
add in 2 <85596 85869> out 1 <85870>     # join source bit 6
const-mul-2 in 1 <85870> out 1 <85871>   # join
add in 2 <85595 85871> out 1 <85872>     # join source bit 5
const-mul-2 in 1 <85872> out 1 <85873>   # join
add in 2 <85594 85873> out 1 <85874>     # join source bit 4
const-mul-2 in 1 <85874> out 1 <85875>   # join
add in 2 <85593 85875> out 1 <85876>     # join source bit 3
const-mul-2 in 1 <85876> out 1 <85877>   # join
add in 2 <85592 85877> out 1 <85878>     # join source bit 2
const-mul-2 in 1 <85878> out 1 <85879>   # join
add in 2 <85591 85879> out 1 <85880>     # join source bit 1
const-mul-2 in 1 <85880> out 1 <85881>   # join
add in 2 <85590 85881> out 1 <85882>     # join source bit 0
add in 2 <85882 85882> out 1 <85883>     # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <85587> out 1 <85884> # multiply-by-constant 4294967295
add in 2 <30 85884> out 1 <85885>        # 'CmpLT DFG.Input - DFG.Conditional'
split in 1 <85885> outplitBus
mul in 2 <85917 85883> out 1 <86149>     # cond trueterm
const-mul-neg-1 in 1 <85917> out 1 <86150> # cond minuscond
add in 2 <100 86150> out 1 <86151>       # cond negcond
mul in 2 <86151 85587> out 1 <86152>     # cond falseterm
add in 2 <86149 86152> out 1 <86153>     # cond result
add in 2 <85579 86153> out 1 <86154>     # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
split in 1 <86154> outplitBus
const-mul-2 in 1 <86186> out 1 <86388>   # join source bit 31
add in 2 <86185 86388> out 1 <86389>     # join source bit 30
const-mul-2 in 1 <86389> out 1 <86390>   # join
add in 2 <86184 86390> out 1 <86391>     # join source bit 29
const-mul-2 in 1 <86391> out 1 <86392>   # join
add in 2 <86183 86392> out 1 <86393>     # join source bit 28
const-mul-2 in 1 <86393> out 1 <86394>   # join
add in 2 <86182 86394> out 1 <86395>     # join source bit 27
const-mul-2 in 1 <86395> out 1 <86396>   # join
add in 2 <86181 86396> out 1 <86397>     # join source bit 26
const-mul-2 in 1 <86397> out 1 <86398>   # join
add in 2 <86180 86398> out 1 <86399>     # join source bit 25
const-mul-2 in 1 <86399> out 1 <86400>   # join
add in 2 <86179 86400> out 1 <86401>     # join source bit 24
const-mul-2 in 1 <86401> out 1 <86402>   # join
add in 2 <86178 86402> out 1 <86403>     # join source bit 23
const-mul-2 in 1 <86403> out 1 <86404>   # join
add in 2 <86177 86404> out 1 <86405>     # join source bit 22
const-mul-2 in 1 <86405> out 1 <86406>   # join
add in 2 <86176 86406> out 1 <86407>     # join source bit 21
const-mul-2 in 1 <86407> out 1 <86408>   # join
add in 2 <86175 86408> out 1 <86409>     # join source bit 20
const-mul-2 in 1 <86409> out 1 <86410>   # join
add in 2 <86174 86410> out 1 <86411>     # join source bit 19
const-mul-2 in 1 <86411> out 1 <86412>   # join
add in 2 <86173 86412> out 1 <86413>     # join source bit 18
const-mul-2 in 1 <86413> out 1 <86414>   # join
add in 2 <86172 86414> out 1 <86415>     # join source bit 17
const-mul-2 in 1 <86415> out 1 <86416>   # join
add in 2 <86171 86416> out 1 <86417>     # join source bit 16
const-mul-2 in 1 <86417> out 1 <86418>   # join
add in 2 <86170 86418> out 1 <86419>     # join source bit 15
const-mul-2 in 1 <86419> out 1 <86420>   # join
add in 2 <86169 86420> out 1 <86421>     # join source bit 14
const-mul-2 in 1 <86421> out 1 <86422>   # join
add in 2 <86168 86422> out 1 <86423>     # join source bit 13
const-mul-2 in 1 <86423> out 1 <86424>   # join
add in 2 <86167 86424> out 1 <86425>     # join source bit 12
const-mul-2 in 1 <86425> out 1 <86426>   # join
add in 2 <86166 86426> out 1 <86427>     # join source bit 11
const-mul-2 in 1 <86427> out 1 <86428>   # join
add in 2 <86165 86428> out 1 <86429>     # join source bit 10
const-mul-2 in 1 <86429> out 1 <86430>   # join
add in 2 <86164 86430> out 1 <86431>     # join source bit 9
const-mul-2 in 1 <86431> out 1 <86432>   # join
add in 2 <86163 86432> out 1 <86433>     # join source bit 8
const-mul-2 in 1 <86433> out 1 <86434>   # join
add in 2 <86162 86434> out 1 <86435>     # join source bit 7
const-mul-2 in 1 <86435> out 1 <86436>   # join
add in 2 <86161 86436> out 1 <86437>     # join source bit 6
const-mul-2 in 1 <86437> out 1 <86438>   # join
add in 2 <86160 86438> out 1 <86439>     # join source bit 5
const-mul-2 in 1 <86439> out 1 <86440>   # join
add in 2 <86159 86440> out 1 <86441>     # join source bit 4
const-mul-2 in 1 <86441> out 1 <86442>   # join
add in 2 <86158 86442> out 1 <86443>     # join source bit 3
const-mul-2 in 1 <86443> out 1 <86444>   # join
add in 2 <86157 86444> out 1 <86445>     # join source bit 2
const-mul-2 in 1 <86445> out 1 <86446>   # join
add in 2 <86156 86446> out 1 <86447>     # join source bit 1
const-mul-2 in 1 <86447> out 1 <86448>   # join
add in 2 <86155 86448> out 1 <86449>     # join source bit 0
add in 2 <86449 86449> out 1 <86450>     # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <85579> out 1 <86451> # multiply-by-constant 4294967295
add in 2 <86153 86451> out 1 <86452>     # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <86452> outplitBus
mul in 2 <86484 86450> out 1 <86718>     # cond trueterm
const-mul-neg-1 in 1 <86484> out 1 <86719> # cond minuscond
add in 2 <100 86719> out 1 <86720>       # cond negcond
mul in 2 <86720 85579> out 1 <86721>     # cond falseterm
add in 2 <86718 86721> out 1 <86722>     # cond result
mul in 2 <85407 85371> out 1 <86723>     # cond trueterm
const-mul-neg-1 in 1 <85407> out 1 <86724> # cond minuscond
add in 2 <100 86724> out 1 <86725>       # cond negcond
mul in 2 <86725 85368> out 1 <86726>     # cond falseterm
add in 2 <86723 86726> out 1 <86727>     # cond result
mul in 2 <85263 85227> out 1 <86728>     # cond trueterm
const-mul-neg-1 in 1 <85263> out 1 <86729> # cond minuscond
add in 2 <100 86729> out 1 <86730>       # cond negcond
mul in 2 <86730 85224> out 1 <86731>     # cond falseterm
add in 2 <86728 86731> out 1 <86732>     # cond result
const-mul-ffffffff in 1 <86732> out 1 <86733> # multiply-by-constant 4294967295
add in 2 <86732 86727> out 1 <86734>     # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
add in 2 <86734 86733> out 1 <86735>     # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <86735> out 1 <86736> # multiply-by-constant 4294967295
add in 2 <86734 86736> out 1 <86737>     # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <86732> out 1 <86738> # multiply-by-constant 4294967295
add in 2 <86727 86738> out 1 <86739>     # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <86739> out 200 <86740 86741 86742 86743 86744 86745 86746 86747 86748 86749 86750 86751 86752 86753 86754 86755 86756 86757 86758 86759 86760 86761 86762 86763 86764 86765 86766 86767 86768 86769 86770 86771 86772 86773 86774 86775 86776 86777 86778 86779 86780 86781 86782 86783 86784 86785 86786 86787 86788 86789 86790 86791 86792 86793 86794 86795 86796 86797 86798 86799 86800 86801 86802 86803 86804 86805 86806 86807 86808 86809 86810 86811 86812 86813 86814 86815 86816 86817 86818 86819 86820 86821 86822 86823 86824 86825 86826 86827 86828 86829 86830 86831 86832 86833 86834 86835 86836 86837 86838 86839 86840 86841 86842 86843 86844 86845 86846 86847 86848 86849 86850 86851 86852 86853 86854 86855 86856 86857 86858 86859 86860 86861 86862 86863 86864 86865 86866 86867 86868 86869 86870 86871 86872 86873 86874 86875 86876 86877 86878 86879 86880 86881 86882 86883 86884 86885 86886 86887 86888 86889 86890 86891 86892 86893 86894 86895 86896 86897 86898 86899 86900 86901 86902 86903 86904 86905 86906 86907 86908 86909 86910 86911 86912 86913 86914 86915 86916 86917 86918 86919 86920 86921 86922 86923 86924 86925 86926 86927 86928 86929 86930 86931 86932 86933 86934 86935 86936 86937 86938 86939> # SplitBus
mul in 2 <86771 86737> out 1 <86940>     # cond trueterm
const-mul-neg-1 in 1 <86771> out 1 <86941> # cond minuscond
add in 2 <100 86941> out 1 <86942>       # cond negcond
mul in 2 <86942 86727> out 1 <86943>     # cond falseterm
add in 2 <86940 86943> out 1 <86944>     # cond result
const-mul-ffffffff in 1 <86944> out 1 <86945> # multiply-by-constant 4294967295
add in 2 <86944 86722> out 1 <86946>     # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
split in 1 <86946> out 235 <86947 86948 86949 86950 86951 86952 86953 86954 86955 86956 86957 86958 86959 86960 86961 86962 86963 86964 86965 86966 86967 86968 86969 86970 86971 86972 86973 86974 86975 86976 86977 86978 86979 86980 86981 86982 86983 86984 86985 86986 86987 86988 86989 86990 86991 86992 86993 86994 86995 86996 86997 86998 86999 87000 87001 87002 87003 87004 87005 87006 87007 87008 87009 87010 87011 87012 87013 87014 87015 87016 87017 87018 87019 87020 87021 87022 87023 87024 87025 87026 87027 87028 87029 87030 87031 87032 87033 87034 87035 87036 87037 87038 87039 87040 87041 87042 87043 87044 87045 87046 87047 87048 87049 87050 87051 87052 87053 87054 87055 87056 87057 87058 87059 87060 87061 87062 87063 87064 87065 87066 87067 87068 87069 87070 87071 87072 87073 87074 87075 87076 87077 87078 87079 87080 87081 87082 87083 87084 87085 87086 87087 87088 87089 87090 87091 87092 87093 87094 87095 87096 87097 87098 87099 87100 87101 87102 87103 87104 87105 87106 87107 87108 87109 87110 87111 87112 87113 87114 87115 87116 87117 87118 87119 87120 87121 87122 87123 87124 87125 87126 87127 87128 87129 87130 87131 87132 87133 87134 87135 87136 87137 87138 87139 87140 87141 87142 87143 87144 87145 87146 87147 87148 87149 87150 87151 87152 87153 87154 87155 87156 87157 87158 87159 87160 87161 87162 87163 87164 87165 87166 87167 87168 87169 87170 87171 87172 87173 87174 87175 87176 87177 87178 87179 87180 87181> # SplitBus
const-mul-2 in 1 <86978> out 1 <87182>   # join source bit 31
add in 2 <86977 87182> out 1 <87183>     # join source bit 30
const-mul-2 in 1 <87183> out 1 <87184>   # join
add in 2 <86976 87184> out 1 <87185>     # join source bit 29
const-mul-2 in 1 <87185> out 1 <87186>   # join
add in 2 <86975 87186> out 1 <87187>     # join source bit 28
const-mul-2 in 1 <87187> out 1 <87188>   # join
add in 2 <86974 87188> out 1 <87189>     # join source bit 27
const-mul-2 in 1 <87189> out 1 <87190>   # join
add in 2 <86973 87190> out 1 <87191>     # join source bit 26
const-mul-2 in 1 <87191> out 1 <87192>   # join
add in 2 <86972 87192> out 1 <87193>     # join source bit 25
const-mul-2 in 1 <87193> out 1 <87194>   # join
add in 2 <86971 87194> out 1 <87195>     # join source bit 24
const-mul-2 in 1 <87195> out 1 <87196>   # join
add in 2 <86970 87196> out 1 <87197>     # join source bit 23
const-mul-2 in 1 <87197> out 1 <87198>   # join
add in 2 <86969 87198> out 1 <87199>     # join source bit 22
const-mul-2 in 1 <87199> out 1 <87200>   # join
add in 2 <86968 87200> out 1 <87201>     # join source bit 21
const-mul-2 in 1 <87201> out 1 <87202>   # join
add in 2 <86967 87202> out 1 <87203>     # join source bit 20
const-mul-2 in 1 <87203> out 1 <87204>   # join
add in 2 <86966 87204> out 1 <87205>     # join source bit 19
const-mul-2 in 1 <87205> out 1 <87206>   # join
add in 2 <86965 87206> out 1 <87207>     # join source bit 18
const-mul-2 in 1 <87207> out 1 <87208>   # join
add in 2 <86964 87208> out 1 <87209>     # join source bit 17
const-mul-2 in 1 <87209> out 1 <87210>   # join
add in 2 <86963 87210> out 1 <87211>     # join source bit 16
const-mul-2 in 1 <87211> out 1 <87212>   # join
add in 2 <86962 87212> out 1 <87213>     # join source bit 15
const-mul-2 in 1 <87213> out 1 <87214>   # join
add in 2 <86961 87214> out 1 <87215>     # join source bit 14
const-mul-2 in 1 <87215> out 1 <87216>   # join
add in 2 <86960 87216> out 1 <87217>     # join source bit 13
const-mul-2 in 1 <87217> out 1 <87218>   # join
add in 2 <86959 87218> out 1 <87219>     # join source bit 12
const-mul-2 in 1 <87219> out 1 <87220>   # join
add in 2 <86958 87220> out 1 <87221>     # join source bit 11
const-mul-2 in 1 <87221> out 1 <87222>   # join
add in 2 <86957 87222> out 1 <87223>     # join source bit 10
const-mul-2 in 1 <87223> out 1 <87224>   # join
add in 2 <86956 87224> out 1 <87225>     # join source bit 9
const-mul-2 in 1 <87225> out 1 <87226>   # join
add in 2 <86955 87226> out 1 <87227>     # join source bit 8
const-mul-2 in 1 <87227> out 1 <87228>   # join
add in 2 <86954 87228> out 1 <87229>     # join source bit 7
const-mul-2 in 1 <87229> out 1 <87230>   # join
add in 2 <86953 87230> out 1 <87231>     # join source bit 6
const-mul-2 in 1 <87231> out 1 <87232>   # join
add in 2 <86952 87232> out 1 <87233>     # join source bit 5
const-mul-2 in 1 <87233> out 1 <87234>   # join
add in 2 <86951 87234> out 1 <87235>     # join source bit 4
const-mul-2 in 1 <87235> out 1 <87236>   # join
add in 2 <86950 87236> out 1 <87237>     # join source bit 3
const-mul-2 in 1 <87237> out 1 <87238>   # join
add in 2 <86949 87238> out 1 <87239>     # join source bit 2
const-mul-2 in 1 <87239> out 1 <87240>   # join
add in 2 <86948 87240> out 1 <87241>     # join source bit 1
const-mul-2 in 1 <87241> out 1 <87242>   # join
add in 2 <86947 87242> out 1 <87243>     # join source bit 0
add in 2 <87243 87243> out 1 <87244>     # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <87244> out 1 <87245> # multiply-by-constant 4294967295
add in 2 <86946 87245> out 1 <87246>     # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <86944> out 1 <87247> # multiply-by-constant 4294967295
add in 2 <86722 87247> out 1 <87248>     # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <87248> outplitBus
mul in 2 <87280 87246> out 1 <87516>     # cond trueterm
const-mul-neg-1 in 1 <87280> out 1 <87517> # cond minuscond
add in 2 <100 87517> out 1 <87518>       # cond negcond
mul in 2 <87518 86722> out 1 <87519>     # cond falseterm
add in 2 <87516 87519> out 1 <87520>     # cond result
add in 2 <87520 104> out 1 <87521>       # ArithBusReq.AddReq(DFG.Conditional,DFG.Constant)
const-mul-ffffffff in 1 <28> out 1 <87522> # multiply-by-constant 4294967295
add in 2 <87521 87522> out 1 <87523>     # 'CmpLT DFG.Add - DFG.Input'
split in 1 <87523> outplitBus
mul in 2 <87555 103> out 1 <87762>       # cond trueterm
const-mul-neg-1 in 1 <87555> out 1 <87763> # cond minuscond
add in 2 <100 87763> out 1 <87764>       # cond negcond
mul in 2 <87764 102> out 1 <87765>       # cond falseterm
add in 2 <87762 87765> out 1 <87766>     # cond result
add in 2 <87520 3084> out 1 <87767>      # ArithBusReq.AddReq(DFG.Conditional,DFG.Negate)
const-mul-ffffffff in 1 <87767> out 1 <87768> # multiply-by-constant 4294967295
add in 2 <28 87768> out 1 <87769>        # 'CmpLT DFG.Input - DFG.Subtract'
split in 1 <87769> outplitBus
mul in 2 <87801 103> out 1 <88040>       # cond trueterm
const-mul-neg-1 in 1 <87801> out 1 <88041> # cond minuscond
add in 2 <100 88041> out 1 <88042>       # cond negcond
mul in 2 <88042 87766> out 1 <88043>     # cond falseterm
add in 2 <88040 88043> out 1 <88044>     # cond result
const-mul-ffffffff in 1 <27> out 1 <88045> # multiply-by-constant 4294967295
add in 2 <27 28> out 1 <88046>           # ArithBusReq.AddReq(DFG.Input,DFG.Input)
add in 2 <88046 88045> out 1 <88047>     # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <88047> out 1 <88048> # multiply-by-constant 4294967295
add in 2 <88046 88048> out 1 <88049>     # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <27> out 1 <88050> # multiply-by-constant 4294967295
add in 2 <28 88050> out 1 <88051>        # 'CmpLT DFG.Input - DFG.Input'
split in 1 <88051> out 65 <88052 88053 88054 88055 88056 88057 88058 88059 88060 88061 88062 88063 88064 88065 88066 88067 88068 88069 88070 88071 88072 88073 88074 88075 88076 88077 88078 88079 88080 88081 88082 88083 88084 88085 88086 88087 88088 88089 88090 88091 88092 88093 88094 88095 88096 88097 88098 88099 88100 88101 88102 88103 88104 88105 88106 88107 88108 88109 88110 88111 88112 88113 88114 88115 88116> # SplitBus
mul in 2 <88083 88049> out 1 <88117>     # cond trueterm
const-mul-neg-1 in 1 <88083> out 1 <88118> # cond minuscond
add in 2 <100 88118> out 1 <88119>       # cond negcond
mul in 2 <88119 28> out 1 <88120>        # cond falseterm
add in 2 <88117 88120> out 1 <88121>     # cond result
const-mul-ffffffff in 1 <88121> out 1 <88122> # multiply-by-constant 4294967295
add in 2 <88121 29> out 1 <88123>        # ArithBusReq.AddReq(DFG.Conditional,DFG.Input)
add in 2 <88123 88122> out 1 <88124>     # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <88124> out 1 <88125> # multiply-by-constant 4294967295
add in 2 <88123 88125> out 1 <88126>     # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <88121> out 1 <88127> # multiply-by-constant 4294967295
add in 2 <29 88127> out 1 <88128>        # 'CmpLT DFG.Input - DFG.Conditional'
split in 1 <88128> outplitBus
mul in 2 <88160 88126> out 1 <88260>     # cond trueterm
const-mul-neg-1 in 1 <88160> out 1 <88261> # cond minuscond
add in 2 <100 88261> out 1 <88262>       # cond negcond
mul in 2 <88262 29> out 1 <88263>        # cond falseterm
add in 2 <88260 88263> out 1 <88264>     # cond result
const-mul-ffffffff in 1 <88264> out 1 <88265> # multiply-by-constant 4294967295
add in 2 <88264 30> out 1 <88266>        # ArithBusReq.AddReq(DFG.Conditional,DFG.Input)
add in 2 <88266 88265> out 1 <88267>     # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <88264> out 1 <88268> # multiply-by-constant 4294967295
add in 2 <30 88268> out 1 <88269>        # 'CmpLT DFG.Input - DFG.Conditional'
split in 1 <88269> out 197 <88270 88271 88272 88273 88274 88275 88276 88277 88278 88279 88280 88281 88282 88283 88284 88285 88286 88287 88288 88289 88290 88291 88292 88293 88294 88295 88296 88297 88298 88299 88300 88301 88302 88303 88304 88305 88306 88307 88308 88309 88310 88311 88312 88313 88314 88315 88316 88317 88318 88319 88320 88321 88322 88323 88324 88325 88326 88327 88328 88329 88330 88331 88332 88333 88334 88335 88336 88337 88338 88339 88340 88341 88342 88343 88344 88345 88346 88347 88348 88349 88350 88351 88352 88353 88354 88355 88356 88357 88358 88359 88360 88361 88362 88363 88364 88365 88366 88367 88368 88369 88370 88371 88372 88373 88374 88375 88376 88377 88378 88379 88380 88381 88382 88383 88384 88385 88386 88387 88388 88389 88390 88391 88392 88393 88394 88395 88396 88397 88398 88399 88400 88401 88402 88403 88404 88405 88406 88407 88408 88409 88410 88411 88412 88413 88414 88415 88416 88417 88418 88419 88420 88421 88422 88423 88424 88425 88426 88427 88428 88429 88430 88431 88432 88433 88434 88435 88436 88437 88438 88439 88440 88441 88442 88443 88444 88445 88446 88447 88448 88449 88450 88451 88452 88453 88454 88455 88456 88457 88458 88459 88460 88461 88462 88463 88464 88465 88466> # SplitBus
mul in 2 <88301 88267> out 1 <88467>     # cond trueterm
const-mul-neg-1 in 1 <88301> out 1 <88468> # cond minuscond
add in 2 <100 88468> out 1 <88469>       # cond negcond
mul in 2 <88469 88264> out 1 <88470>     # cond falseterm
add in 2 <88467 88470> out 1 <88471>     # cond result
mul in 2 <88160 88124> out 1 <88472>     # cond trueterm
const-mul-neg-1 in 1 <88160> out 1 <88473> # cond minuscond
add in 2 <100 88473> out 1 <88474>       # cond negcond
mul in 2 <88474 88121> out 1 <88475>     # cond falseterm
add in 2 <88472 88475> out 1 <88476>     # cond result
mul in 2 <88083 88047> out 1 <88477>     # cond trueterm
const-mul-neg-1 in 1 <88083> out 1 <88478> # cond minuscond
add in 2 <100 88478> out 1 <88479>       # cond negcond
mul in 2 <88479 27> out 1 <88480>        # cond falseterm
add in 2 <88477 88480> out 1 <88481>     # cond result
const-mul-ffffffff in 1 <88481> out 1 <88482> # multiply-by-constant 4294967295
add in 2 <88481 88476> out 1 <88483>     # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
add in 2 <88483 88482> out 1 <88484>     # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <88484> out 1 <88485> # multiply-by-constant 4294967295
add in 2 <88483 88485> out 1 <88486>     # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <88481> out 1 <88487> # multiply-by-constant 4294967295
add in 2 <88476 88487> out 1 <88488>     # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <88488> outplitBus
mul in 2 <88520 88486> out 1 <88621>     # cond trueterm
const-mul-neg-1 in 1 <88520> out 1 <88622> # cond minuscond
add in 2 <100 88622> out 1 <88623>       # cond negcond
mul in 2 <88623 88476> out 1 <88624>     # cond falseterm
add in 2 <88621 88624> out 1 <88625>     # cond result
const-mul-ffffffff in 1 <88625> out 1 <88626> # multiply-by-constant 4294967295
add in 2 <88625 88471> out 1 <88627>     # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
add in 2 <88627 88626> out 1 <88628>     # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <88628> out 1 <88629> # multiply-by-constant 4294967295
add in 2 <88627 88629> out 1 <88630>     # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <88625> out 1 <88631> # multiply-by-constant 4294967295
add in 2 <88471 88631> out 1 <88632>     # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <88632> out 199 <88633 88634 88635 88636 88637 88638 88639 88640 88641 88642 88643 88644 88645 88646 88647 88648 88649 88650 88651 88652 88653 88654 88655 88656 88657 88658 88659 88660 88661 88662 88663 88664 88665 88666 88667 88668 88669 88670 88671 88672 88673 88674 88675 88676 88677 88678 88679 88680 88681 88682 88683 88684 88685 88686 88687 88688 88689 88690 88691 88692 88693 88694 88695 88696 88697 88698 88699 88700 88701 88702 88703 88704 88705 88706 88707 88708 88709 88710 88711 88712 88713 88714 88715 88716 88717 88718 88719 88720 88721 88722 88723 88724 88725 88726 88727 88728 88729 88730 88731 88732 88733 88734 88735 88736 88737 88738 88739 88740 88741 88742 88743 88744 88745 88746 88747 88748 88749 88750 88751 88752 88753 88754 88755 88756 88757 88758 88759 88760 88761 88762 88763 88764 88765 88766 88767 88768 88769 88770 88771 88772 88773 88774 88775 88776 88777 88778 88779 88780 88781 88782 88783 88784 88785 88786 88787 88788 88789 88790 88791 88792 88793 88794 88795 88796 88797 88798 88799 88800 88801 88802 88803 88804 88805 88806 88807 88808 88809 88810 88811 88812 88813 88814 88815 88816 88817 88818 88819 88820 88821 88822 88823 88824 88825 88826 88827 88828 88829 88830 88831> # SplitBus
mul in 2 <88664 88630> out 1 <88832>     # cond trueterm
const-mul-neg-1 in 1 <88664> out 1 <88833> # cond minuscond
add in 2 <100 88833> out 1 <88834>       # cond negcond
mul in 2 <88834 88471> out 1 <88835>     # cond falseterm
add in 2 <88832 88835> out 1 <88836>     # cond result
const-mul-ffffffff in 1 <88836> out 1 <88837> # multiply-by-constant 4294967295
const-mul-ffffffff in 1 <88267> out 1 <88838> # multiply-by-constant 4294967295
add in 2 <88266 88838> out 1 <88839>     # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
mul in 2 <88301 88839> out 1 <88840>     # cond trueterm
const-mul-neg-1 in 1 <88301> out 1 <88841> # cond minuscond
add in 2 <100 88841> out 1 <88842>       # cond negcond
mul in 2 <88842 30> out 1 <88843>        # cond falseterm
add in 2 <88840 88843> out 1 <88844>     # cond result
const-mul-ffffffff in 1 <88844> out 1 <88845> # multiply-by-constant 4294967295
add in 2 <88844 31> out 1 <88846>        # ArithBusReq.AddReq(DFG.Conditional,DFG.Input)
split in 1 <88846> outplitBus
const-mul-2 in 1 <88878> out 1 <89078>   # join source bit 31
add in 2 <88877 89078> out 1 <89079>     # join source bit 30
const-mul-2 in 1 <89079> out 1 <89080>   # join
add in 2 <88876 89080> out 1 <89081>     # join source bit 29
const-mul-2 in 1 <89081> out 1 <89082>   # join
add in 2 <88875 89082> out 1 <89083>     # join source bit 28
const-mul-2 in 1 <89083> out 1 <89084>   # join
add in 2 <88874 89084> out 1 <89085>     # join source bit 27
const-mul-2 in 1 <89085> out 1 <89086>   # join
add in 2 <88873 89086> out 1 <89087>     # join source bit 26
const-mul-2 in 1 <89087> out 1 <89088>   # join
add in 2 <88872 89088> out 1 <89089>     # join source bit 25
const-mul-2 in 1 <89089> out 1 <89090>   # join
add in 2 <88871 89090> out 1 <89091>     # join source bit 24
const-mul-2 in 1 <89091> out 1 <89092>   # join
add in 2 <88870 89092> out 1 <89093>     # join source bit 23
const-mul-2 in 1 <89093> out 1 <89094>   # join
add in 2 <88869 89094> out 1 <89095>     # join source bit 22
const-mul-2 in 1 <89095> out 1 <89096>   # join
add in 2 <88868 89096> out 1 <89097>     # join source bit 21
const-mul-2 in 1 <89097> out 1 <89098>   # join
add in 2 <88867 89098> out 1 <89099>     # join source bit 20
const-mul-2 in 1 <89099> out 1 <89100>   # join
add in 2 <88866 89100> out 1 <89101>     # join source bit 19
const-mul-2 in 1 <89101> out 1 <89102>   # join
add in 2 <88865 89102> out 1 <89103>     # join source bit 18
const-mul-2 in 1 <89103> out 1 <89104>   # join
add in 2 <88864 89104> out 1 <89105>     # join source bit 17
const-mul-2 in 1 <89105> out 1 <89106>   # join
add in 2 <88863 89106> out 1 <89107>     # join source bit 16
const-mul-2 in 1 <89107> out 1 <89108>   # join
add in 2 <88862 89108> out 1 <89109>     # join source bit 15
const-mul-2 in 1 <89109> out 1 <89110>   # join
add in 2 <88861 89110> out 1 <89111>     # join source bit 14
const-mul-2 in 1 <89111> out 1 <89112>   # join
add in 2 <88860 89112> out 1 <89113>     # join source bit 13
const-mul-2 in 1 <89113> out 1 <89114>   # join
add in 2 <88859 89114> out 1 <89115>     # join source bit 12
const-mul-2 in 1 <89115> out 1 <89116>   # join
add in 2 <88858 89116> out 1 <89117>     # join source bit 11
const-mul-2 in 1 <89117> out 1 <89118>   # join
add in 2 <88857 89118> out 1 <89119>     # join source bit 10
const-mul-2 in 1 <89119> out 1 <89120>   # join
add in 2 <88856 89120> out 1 <89121>     # join source bit 9
const-mul-2 in 1 <89121> out 1 <89122>   # join
add in 2 <88855 89122> out 1 <89123>     # join source bit 8
const-mul-2 in 1 <89123> out 1 <89124>   # join
add in 2 <88854 89124> out 1 <89125>     # join source bit 7
const-mul-2 in 1 <89125> out 1 <89126>   # join
add in 2 <88853 89126> out 1 <89127>     # join source bit 6
const-mul-2 in 1 <89127> out 1 <89128>   # join
add in 2 <88852 89128> out 1 <89129>     # join source bit 5
const-mul-2 in 1 <89129> out 1 <89130>   # join
add in 2 <88851 89130> out 1 <89131>     # join source bit 4
const-mul-2 in 1 <89131> out 1 <89132>   # join
add in 2 <88850 89132> out 1 <89133>     # join source bit 3
const-mul-2 in 1 <89133> out 1 <89134>   # join
add in 2 <88849 89134> out 1 <89135>     # join source bit 2
const-mul-2 in 1 <89135> out 1 <89136>   # join
add in 2 <88848 89136> out 1 <89137>     # join source bit 1
const-mul-2 in 1 <89137> out 1 <89138>   # join
add in 2 <88847 89138> out 1 <89139>     # join source bit 0
add in 2 <89139 89139> out 1 <89140>     # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <88844> out 1 <89141> # multiply-by-constant 4294967295
add in 2 <31 89141> out 1 <89142>        # 'CmpLT DFG.Input - DFG.Conditional'
split in 1 <89142> outplitBus
mul in 2 <89174 89140> out 1 <89406>     # cond trueterm
const-mul-neg-1 in 1 <89174> out 1 <89407> # cond minuscond
add in 2 <100 89407> out 1 <89408>       # cond negcond
mul in 2 <89408 88844> out 1 <89409>     # cond falseterm
add in 2 <89406 89409> out 1 <89410>     # cond result
add in 2 <88836 89410> out 1 <89411>     # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
split in 1 <89411> outplitBus
const-mul-2 in 1 <89443> out 1 <89645>   # join source bit 31
add in 2 <89442 89645> out 1 <89646>     # join source bit 30
const-mul-2 in 1 <89646> out 1 <89647>   # join
add in 2 <89441 89647> out 1 <89648>     # join source bit 29
const-mul-2 in 1 <89648> out 1 <89649>   # join
add in 2 <89440 89649> out 1 <89650>     # join source bit 28
const-mul-2 in 1 <89650> out 1 <89651>   # join
add in 2 <89439 89651> out 1 <89652>     # join source bit 27
const-mul-2 in 1 <89652> out 1 <89653>   # join
add in 2 <89438 89653> out 1 <89654>     # join source bit 26
const-mul-2 in 1 <89654> out 1 <89655>   # join
add in 2 <89437 89655> out 1 <89656>     # join source bit 25
const-mul-2 in 1 <89656> out 1 <89657>   # join
add in 2 <89436 89657> out 1 <89658>     # join source bit 24
const-mul-2 in 1 <89658> out 1 <89659>   # join
add in 2 <89435 89659> out 1 <89660>     # join source bit 23
const-mul-2 in 1 <89660> out 1 <89661>   # join
add in 2 <89434 89661> out 1 <89662>     # join source bit 22
const-mul-2 in 1 <89662> out 1 <89663>   # join
add in 2 <89433 89663> out 1 <89664>     # join source bit 21
const-mul-2 in 1 <89664> out 1 <89665>   # join
add in 2 <89432 89665> out 1 <89666>     # join source bit 20
const-mul-2 in 1 <89666> out 1 <89667>   # join
add in 2 <89431 89667> out 1 <89668>     # join source bit 19
const-mul-2 in 1 <89668> out 1 <89669>   # join
add in 2 <89430 89669> out 1 <89670>     # join source bit 18
const-mul-2 in 1 <89670> out 1 <89671>   # join
add in 2 <89429 89671> out 1 <89672>     # join source bit 17
const-mul-2 in 1 <89672> out 1 <89673>   # join
add in 2 <89428 89673> out 1 <89674>     # join source bit 16
const-mul-2 in 1 <89674> out 1 <89675>   # join
add in 2 <89427 89675> out 1 <89676>     # join source bit 15
const-mul-2 in 1 <89676> out 1 <89677>   # join
add in 2 <89426 89677> out 1 <89678>     # join source bit 14
const-mul-2 in 1 <89678> out 1 <89679>   # join
add in 2 <89425 89679> out 1 <89680>     # join source bit 13
const-mul-2 in 1 <89680> out 1 <89681>   # join
add in 2 <89424 89681> out 1 <89682>     # join source bit 12
const-mul-2 in 1 <89682> out 1 <89683>   # join
add in 2 <89423 89683> out 1 <89684>     # join source bit 11
const-mul-2 in 1 <89684> out 1 <89685>   # join
add in 2 <89422 89685> out 1 <89686>     # join source bit 10
const-mul-2 in 1 <89686> out 1 <89687>   # join
add in 2 <89421 89687> out 1 <89688>     # join source bit 9
const-mul-2 in 1 <89688> out 1 <89689>   # join
add in 2 <89420 89689> out 1 <89690>     # join source bit 8
const-mul-2 in 1 <89690> out 1 <89691>   # join
add in 2 <89419 89691> out 1 <89692>     # join source bit 7
const-mul-2 in 1 <89692> out 1 <89693>   # join
add in 2 <89418 89693> out 1 <89694>     # join source bit 6
const-mul-2 in 1 <89694> out 1 <89695>   # join
add in 2 <89417 89695> out 1 <89696>     # join source bit 5
const-mul-2 in 1 <89696> out 1 <89697>   # join
add in 2 <89416 89697> out 1 <89698>     # join source bit 4
const-mul-2 in 1 <89698> out 1 <89699>   # join
add in 2 <89415 89699> out 1 <89700>     # join source bit 3
const-mul-2 in 1 <89700> out 1 <89701>   # join
add in 2 <89414 89701> out 1 <89702>     # join source bit 2
const-mul-2 in 1 <89702> out 1 <89703>   # join
add in 2 <89413 89703> out 1 <89704>     # join source bit 1
const-mul-2 in 1 <89704> out 1 <89705>   # join
add in 2 <89412 89705> out 1 <89706>     # join source bit 0
add in 2 <89706 89706> out 1 <89707>     # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <88836> out 1 <89708> # multiply-by-constant 4294967295
add in 2 <89410 89708> out 1 <89709>     # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <89709> outplitBus
mul in 2 <89741 89707> out 1 <89975>     # cond trueterm
const-mul-neg-1 in 1 <89741> out 1 <89976> # cond minuscond
add in 2 <100 89976> out 1 <89977>       # cond negcond
mul in 2 <89977 88836> out 1 <89978>     # cond falseterm
add in 2 <89975 89978> out 1 <89979>     # cond result
mul in 2 <88664 88628> out 1 <89980>     # cond trueterm
const-mul-neg-1 in 1 <88664> out 1 <89981> # cond minuscond
add in 2 <100 89981> out 1 <89982>       # cond negcond
mul in 2 <89982 88625> out 1 <89983>     # cond falseterm
add in 2 <89980 89983> out 1 <89984>     # cond result
mul in 2 <88520 88484> out 1 <89985>     # cond trueterm
const-mul-neg-1 in 1 <88520> out 1 <89986> # cond minuscond
add in 2 <100 89986> out 1 <89987>       # cond negcond
mul in 2 <89987 88481> out 1 <89988>     # cond falseterm
add in 2 <89985 89988> out 1 <89989>     # cond result
const-mul-ffffffff in 1 <89989> out 1 <89990> # multiply-by-constant 4294967295
add in 2 <89989 89984> out 1 <89991>     # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
add in 2 <89991 89990> out 1 <89992>     # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <89992> out 1 <89993> # multiply-by-constant 4294967295
add in 2 <89991 89993> out 1 <89994>     # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <89989> out 1 <89995> # multiply-by-constant 4294967295
add in 2 <89984 89995> out 1 <89996>     # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <89996> out 200 <89997 89998 89999 90000 90001 90002 90003 90004 90005 90006 90007 90008 90009 90010 90011 90012 90013 90014 90015 90016 90017 90018 90019 90020 90021 90022 90023 90024 90025 90026 90027 90028 90029 90030 90031 90032 90033 90034 90035 90036 90037 90038 90039 90040 90041 90042 90043 90044 90045 90046 90047 90048 90049 90050 90051 90052 90053 90054 90055 90056 90057 90058 90059 90060 90061 90062 90063 90064 90065 90066 90067 90068 90069 90070 90071 90072 90073 90074 90075 90076 90077 90078 90079 90080 90081 90082 90083 90084 90085 90086 90087 90088 90089 90090 90091 90092 90093 90094 90095 90096 90097 90098 90099 90100 90101 90102 90103 90104 90105 90106 90107 90108 90109 90110 90111 90112 90113 90114 90115 90116 90117 90118 90119 90120 90121 90122 90123 90124 90125 90126 90127 90128 90129 90130 90131 90132 90133 90134 90135 90136 90137 90138 90139 90140 90141 90142 90143 90144 90145 90146 90147 90148 90149 90150 90151 90152 90153 90154 90155 90156 90157 90158 90159 90160 90161 90162 90163 90164 90165 90166 90167 90168 90169 90170 90171 90172 90173 90174 90175 90176 90177 90178 90179 90180 90181 90182 90183 90184 90185 90186 90187 90188 90189 90190 90191 90192 90193 90194 90195 90196> # SplitBus
mul in 2 <90028 89994> out 1 <90197>     # cond trueterm
const-mul-neg-1 in 1 <90028> out 1 <90198> # cond minuscond
add in 2 <100 90198> out 1 <90199>       # cond negcond
mul in 2 <90199 89984> out 1 <90200>     # cond falseterm
add in 2 <90197 90200> out 1 <90201>     # cond result
const-mul-ffffffff in 1 <90201> out 1 <90202> # multiply-by-constant 4294967295
add in 2 <90201 89979> out 1 <90203>     # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
split in 1 <90203> outplitBus
const-mul-2 in 1 <90235> out 1 <90439>   # join source bit 31
add in 2 <90234 90439> out 1 <90440>     # join source bit 30
const-mul-2 in 1 <90440> out 1 <90441>   # join
add in 2 <90233 90441> out 1 <90442>     # join source bit 29
const-mul-2 in 1 <90442> out 1 <90443>   # join
add in 2 <90232 90443> out 1 <90444>     # join source bit 28
const-mul-2 in 1 <90444> out 1 <90445>   # join
add in 2 <90231 90445> out 1 <90446>     # join source bit 27
const-mul-2 in 1 <90446> out 1 <90447>   # join
add in 2 <90230 90447> out 1 <90448>     # join source bit 26
const-mul-2 in 1 <90448> out 1 <90449>   # join
add in 2 <90229 90449> out 1 <90450>     # join source bit 25
const-mul-2 in 1 <90450> out 1 <90451>   # join
add in 2 <90228 90451> out 1 <90452>     # join source bit 24
const-mul-2 in 1 <90452> out 1 <90453>   # join
add in 2 <90227 90453> out 1 <90454>     # join source bit 23
const-mul-2 in 1 <90454> out 1 <90455>   # join
add in 2 <90226 90455> out 1 <90456>     # join source bit 22
const-mul-2 in 1 <90456> out 1 <90457>   # join
add in 2 <90225 90457> out 1 <90458>     # join source bit 21
const-mul-2 in 1 <90458> out 1 <90459>   # join
add in 2 <90224 90459> out 1 <90460>     # join source bit 20
const-mul-2 in 1 <90460> out 1 <90461>   # join
add in 2 <90223 90461> out 1 <90462>     # join source bit 19
const-mul-2 in 1 <90462> out 1 <90463>   # join
add in 2 <90222 90463> out 1 <90464>     # join source bit 18
const-mul-2 in 1 <90464> out 1 <90465>   # join
add in 2 <90221 90465> out 1 <90466>     # join source bit 17
const-mul-2 in 1 <90466> out 1 <90467>   # join
add in 2 <90220 90467> out 1 <90468>     # join source bit 16
const-mul-2 in 1 <90468> out 1 <90469>   # join
add in 2 <90219 90469> out 1 <90470>     # join source bit 15
const-mul-2 in 1 <90470> out 1 <90471>   # join
add in 2 <90218 90471> out 1 <90472>     # join source bit 14
const-mul-2 in 1 <90472> out 1 <90473>   # join
add in 2 <90217 90473> out 1 <90474>     # join source bit 13
const-mul-2 in 1 <90474> out 1 <90475>   # join
add in 2 <90216 90475> out 1 <90476>     # join source bit 12
const-mul-2 in 1 <90476> out 1 <90477>   # join
add in 2 <90215 90477> out 1 <90478>     # join source bit 11
const-mul-2 in 1 <90478> out 1 <90479>   # join
add in 2 <90214 90479> out 1 <90480>     # join source bit 10
const-mul-2 in 1 <90480> out 1 <90481>   # join
add in 2 <90213 90481> out 1 <90482>     # join source bit 9
const-mul-2 in 1 <90482> out 1 <90483>   # join
add in 2 <90212 90483> out 1 <90484>     # join source bit 8
const-mul-2 in 1 <90484> out 1 <90485>   # join
add in 2 <90211 90485> out 1 <90486>     # join source bit 7
const-mul-2 in 1 <90486> out 1 <90487>   # join
add in 2 <90210 90487> out 1 <90488>     # join source bit 6
const-mul-2 in 1 <90488> out 1 <90489>   # join
add in 2 <90209 90489> out 1 <90490>     # join source bit 5
const-mul-2 in 1 <90490> out 1 <90491>   # join
add in 2 <90208 90491> out 1 <90492>     # join source bit 4
const-mul-2 in 1 <90492> out 1 <90493>   # join
add in 2 <90207 90493> out 1 <90494>     # join source bit 3
const-mul-2 in 1 <90494> out 1 <90495>   # join
add in 2 <90206 90495> out 1 <90496>     # join source bit 2
const-mul-2 in 1 <90496> out 1 <90497>   # join
add in 2 <90205 90497> out 1 <90498>     # join source bit 1
const-mul-2 in 1 <90498> out 1 <90499>   # join
add in 2 <90204 90499> out 1 <90500>     # join source bit 0
add in 2 <90500 90500> out 1 <90501>     # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <90501> out 1 <90502> # multiply-by-constant 4294967295
add in 2 <90203 90502> out 1 <90503>     # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <90201> out 1 <90504> # multiply-by-constant 4294967295
add in 2 <89979 90504> out 1 <90505>     # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <90505> outplitBus
mul in 2 <90537 90503> out 1 <90773>     # cond trueterm
const-mul-neg-1 in 1 <90537> out 1 <90774> # cond minuscond
add in 2 <100 90774> out 1 <90775>       # cond negcond
mul in 2 <90775 89979> out 1 <90776>     # cond falseterm
add in 2 <90773 90776> out 1 <90777>     # cond result
add in 2 <90777 104> out 1 <90778>       # ArithBusReq.AddReq(DFG.Conditional,DFG.Constant)
const-mul-ffffffff in 1 <29> out 1 <90779> # multiply-by-constant 4294967295
add in 2 <90778 90779> out 1 <90780>     # 'CmpLT DFG.Add - DFG.Input'
split in 1 <90780> outplitBus
mul in 2 <90812 103> out 1 <91019>       # cond trueterm
const-mul-neg-1 in 1 <90812> out 1 <91020> # cond minuscond
add in 2 <100 91020> out 1 <91021>       # cond negcond
mul in 2 <91021 102> out 1 <91022>       # cond falseterm
add in 2 <91019 91022> out 1 <91023>     # cond result
add in 2 <90777 3084> out 1 <91024>      # ArithBusReq.AddReq(DFG.Conditional,DFG.Negate)
const-mul-ffffffff in 1 <91024> out 1 <91025> # multiply-by-constant 4294967295
add in 2 <29 91025> out 1 <91026>        # 'CmpLT DFG.Input - DFG.Subtract'
split in 1 <91026> outplitBus
mul in 2 <91058 103> out 1 <91297>       # cond trueterm
const-mul-neg-1 in 1 <91058> out 1 <91298> # cond minuscond
add in 2 <100 91298> out 1 <91299>       # cond negcond
mul in 2 <91299 91023> out 1 <91300>     # cond falseterm
add in 2 <91297 91300> out 1 <91301>     # cond result
const-mul-ffffffff in 1 <28> out 1 <91302> # multiply-by-constant 4294967295
add in 2 <28 29> out 1 <91303>           # ArithBusReq.AddReq(DFG.Input,DFG.Input)
add in 2 <91303 91302> out 1 <91304>     # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <91304> out 1 <91305> # multiply-by-constant 4294967295
add in 2 <91303 91305> out 1 <91306>     # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <28> out 1 <91307> # multiply-by-constant 4294967295
add in 2 <29 91307> out 1 <91308>        # 'CmpLT DFG.Input - DFG.Input'
split in 1 <91308> out 65 <91309 91310 91311 91312 91313 91314 91315 91316 91317 91318 91319 91320 91321 91322 91323 91324 91325 91326 91327 91328 91329 91330 91331 91332 91333 91334 91335 91336 91337 91338 91339 91340 91341 91342 91343 91344 91345 91346 91347 91348 91349 91350 91351 91352 91353 91354 91355 91356 91357 91358 91359 91360 91361 91362 91363 91364 91365 91366 91367 91368 91369 91370 91371 91372 91373> # SplitBus
mul in 2 <91340 91306> out 1 <91374>     # cond trueterm
const-mul-neg-1 in 1 <91340> out 1 <91375> # cond minuscond
add in 2 <100 91375> out 1 <91376>       # cond negcond
mul in 2 <91376 29> out 1 <91377>        # cond falseterm
add in 2 <91374 91377> out 1 <91378>     # cond result
const-mul-ffffffff in 1 <91378> out 1 <91379> # multiply-by-constant 4294967295
add in 2 <91378 30> out 1 <91380>        # ArithBusReq.AddReq(DFG.Conditional,DFG.Input)
add in 2 <91380 91379> out 1 <91381>     # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <91381> out 1 <91382> # multiply-by-constant 4294967295
add in 2 <91380 91382> out 1 <91383>     # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <91378> out 1 <91384> # multiply-by-constant 4294967295
add in 2 <30 91384> out 1 <91385>        # 'CmpLT DFG.Input - DFG.Conditional'
split in 1 <91385> outplitBus
mul in 2 <91417 91383> out 1 <91517>     # cond trueterm
const-mul-neg-1 in 1 <91417> out 1 <91518> # cond minuscond
add in 2 <100 91518> out 1 <91519>       # cond negcond
mul in 2 <91519 30> out 1 <91520>        # cond falseterm
add in 2 <91517 91520> out 1 <91521>     # cond result
const-mul-ffffffff in 1 <91521> out 1 <91522> # multiply-by-constant 4294967295
add in 2 <91521 31> out 1 <91523>        # ArithBusReq.AddReq(DFG.Conditional,DFG.Input)
add in 2 <91523 91522> out 1 <91524>     # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <91521> out 1 <91525> # multiply-by-constant 4294967295
add in 2 <31 91525> out 1 <91526>        # 'CmpLT DFG.Input - DFG.Conditional'
split in 1 <91526> out 197 <91527 91528 91529 91530 91531 91532 91533 91534 91535 91536 91537 91538 91539 91540 91541 91542 91543 91544 91545 91546 91547 91548 91549 91550 91551 91552 91553 91554 91555 91556 91557 91558 91559 91560 91561 91562 91563 91564 91565 91566 91567 91568 91569 91570 91571 91572 91573 91574 91575 91576 91577 91578 91579 91580 91581 91582 91583 91584 91585 91586 91587 91588 91589 91590 91591 91592 91593 91594 91595 91596 91597 91598 91599 91600 91601 91602 91603 91604 91605 91606 91607 91608 91609 91610 91611 91612 91613 91614 91615 91616 91617 91618 91619 91620 91621 91622 91623 91624 91625 91626 91627 91628 91629 91630 91631 91632 91633 91634 91635 91636 91637 91638 91639 91640 91641 91642 91643 91644 91645 91646 91647 91648 91649 91650 91651 91652 91653 91654 91655 91656 91657 91658 91659 91660 91661 91662 91663 91664 91665 91666 91667 91668 91669 91670 91671 91672 91673 91674 91675 91676 91677 91678 91679 91680 91681 91682 91683 91684 91685 91686 91687 91688 91689 91690 91691 91692 91693 91694 91695 91696 91697 91698 91699 91700 91701 91702 91703 91704 91705 91706 91707 91708 91709 91710 91711 91712 91713 91714 91715 91716 91717 91718 91719 91720 91721 91722 91723> # SplitBus
mul in 2 <91558 91524> out 1 <91724>     # cond trueterm
const-mul-neg-1 in 1 <91558> out 1 <91725> # cond minuscond
add in 2 <100 91725> out 1 <91726>       # cond negcond
mul in 2 <91726 91521> out 1 <91727>     # cond falseterm
add in 2 <91724 91727> out 1 <91728>     # cond result
mul in 2 <91417 91381> out 1 <91729>     # cond trueterm
const-mul-neg-1 in 1 <91417> out 1 <91730> # cond minuscond
add in 2 <100 91730> out 1 <91731>       # cond negcond
mul in 2 <91731 91378> out 1 <91732>     # cond falseterm
add in 2 <91729 91732> out 1 <91733>     # cond result
mul in 2 <91340 91304> out 1 <91734>     # cond trueterm
const-mul-neg-1 in 1 <91340> out 1 <91735> # cond minuscond
add in 2 <100 91735> out 1 <91736>       # cond negcond
mul in 2 <91736 28> out 1 <91737>        # cond falseterm
add in 2 <91734 91737> out 1 <91738>     # cond result
const-mul-ffffffff in 1 <91738> out 1 <91739> # multiply-by-constant 4294967295
add in 2 <91738 91733> out 1 <91740>     # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
add in 2 <91740 91739> out 1 <91741>     # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <91741> out 1 <91742> # multiply-by-constant 4294967295
add in 2 <91740 91742> out 1 <91743>     # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <91738> out 1 <91744> # multiply-by-constant 4294967295
add in 2 <91733 91744> out 1 <91745>     # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <91745> outplitBus
mul in 2 <91777 91743> out 1 <91878>     # cond trueterm
const-mul-neg-1 in 1 <91777> out 1 <91879> # cond minuscond
add in 2 <100 91879> out 1 <91880>       # cond negcond
mul in 2 <91880 91733> out 1 <91881>     # cond falseterm
add in 2 <91878 91881> out 1 <91882>     # cond result
const-mul-ffffffff in 1 <91882> out 1 <91883> # multiply-by-constant 4294967295
add in 2 <91882 91728> out 1 <91884>     # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
add in 2 <91884 91883> out 1 <91885>     # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <91885> out 1 <91886> # multiply-by-constant 4294967295
add in 2 <91884 91886> out 1 <91887>     # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <91882> out 1 <91888> # multiply-by-constant 4294967295
add in 2 <91728 91888> out 1 <91889>     # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <91889> out 199 <91890 91891 91892 91893 91894 91895 91896 91897 91898 91899 91900 91901 91902 91903 91904 91905 91906 91907 91908 91909 91910 91911 91912 91913 91914 91915 91916 91917 91918 91919 91920 91921 91922 91923 91924 91925 91926 91927 91928 91929 91930 91931 91932 91933 91934 91935 91936 91937 91938 91939 91940 91941 91942 91943 91944 91945 91946 91947 91948 91949 91950 91951 91952 91953 91954 91955 91956 91957 91958 91959 91960 91961 91962 91963 91964 91965 91966 91967 91968 91969 91970 91971 91972 91973 91974 91975 91976 91977 91978 91979 91980 91981 91982 91983 91984 91985 91986 91987 91988 91989 91990 91991 91992 91993 91994 91995 91996 91997 91998 91999 92000 92001 92002 92003 92004 92005 92006 92007 92008 92009 92010 92011 92012 92013 92014 92015 92016 92017 92018 92019 92020 92021 92022 92023 92024 92025 92026 92027 92028 92029 92030 92031 92032 92033 92034 92035 92036 92037 92038 92039 92040 92041 92042 92043 92044 92045 92046 92047 92048 92049 92050 92051 92052 92053 92054 92055 92056 92057 92058 92059 92060 92061 92062 92063 92064 92065 92066 92067 92068 92069 92070 92071 92072 92073 92074 92075 92076 92077 92078 92079 92080 92081 92082 92083 92084 92085 92086 92087 92088> # SplitBus
mul in 2 <91921 91887> out 1 <92089>     # cond trueterm
const-mul-neg-1 in 1 <91921> out 1 <92090> # cond minuscond
add in 2 <100 92090> out 1 <92091>       # cond negcond
mul in 2 <92091 91728> out 1 <92092>     # cond falseterm
add in 2 <92089 92092> out 1 <92093>     # cond result
const-mul-ffffffff in 1 <92093> out 1 <92094> # multiply-by-constant 4294967295
const-mul-ffffffff in 1 <91524> out 1 <92095> # multiply-by-constant 4294967295
add in 2 <91523 92095> out 1 <92096>     # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
mul in 2 <91558 92096> out 1 <92097>     # cond trueterm
const-mul-neg-1 in 1 <91558> out 1 <92098> # cond minuscond
add in 2 <100 92098> out 1 <92099>       # cond negcond
mul in 2 <92099 31> out 1 <92100>        # cond falseterm
add in 2 <92097 92100> out 1 <92101>     # cond result
const-mul-ffffffff in 1 <92101> out 1 <92102> # multiply-by-constant 4294967295
add in 2 <92101 32> out 1 <92103>        # ArithBusReq.AddReq(DFG.Conditional,DFG.Input)
split in 1 <92103> outplitBus
const-mul-2 in 1 <92135> out 1 <92335>   # join source bit 31
add in 2 <92134 92335> out 1 <92336>     # join source bit 30
const-mul-2 in 1 <92336> out 1 <92337>   # join
add in 2 <92133 92337> out 1 <92338>     # join source bit 29
const-mul-2 in 1 <92338> out 1 <92339>   # join
add in 2 <92132 92339> out 1 <92340>     # join source bit 28
const-mul-2 in 1 <92340> out 1 <92341>   # join
add in 2 <92131 92341> out 1 <92342>     # join source bit 27
const-mul-2 in 1 <92342> out 1 <92343>   # join
add in 2 <92130 92343> out 1 <92344>     # join source bit 26
const-mul-2 in 1 <92344> out 1 <92345>   # join
add in 2 <92129 92345> out 1 <92346>     # join source bit 25
const-mul-2 in 1 <92346> out 1 <92347>   # join
add in 2 <92128 92347> out 1 <92348>     # join source bit 24
const-mul-2 in 1 <92348> out 1 <92349>   # join
add in 2 <92127 92349> out 1 <92350>     # join source bit 23
const-mul-2 in 1 <92350> out 1 <92351>   # join
add in 2 <92126 92351> out 1 <92352>     # join source bit 22
const-mul-2 in 1 <92352> out 1 <92353>   # join
add in 2 <92125 92353> out 1 <92354>     # join source bit 21
const-mul-2 in 1 <92354> out 1 <92355>   # join
add in 2 <92124 92355> out 1 <92356>     # join source bit 20
const-mul-2 in 1 <92356> out 1 <92357>   # join
add in 2 <92123 92357> out 1 <92358>     # join source bit 19
const-mul-2 in 1 <92358> out 1 <92359>   # join
add in 2 <92122 92359> out 1 <92360>     # join source bit 18
const-mul-2 in 1 <92360> out 1 <92361>   # join
add in 2 <92121 92361> out 1 <92362>     # join source bit 17
const-mul-2 in 1 <92362> out 1 <92363>   # join
add in 2 <92120 92363> out 1 <92364>     # join source bit 16
const-mul-2 in 1 <92364> out 1 <92365>   # join
add in 2 <92119 92365> out 1 <92366>     # join source bit 15
const-mul-2 in 1 <92366> out 1 <92367>   # join
add in 2 <92118 92367> out 1 <92368>     # join source bit 14
const-mul-2 in 1 <92368> out 1 <92369>   # join
add in 2 <92117 92369> out 1 <92370>     # join source bit 13
const-mul-2 in 1 <92370> out 1 <92371>   # join
add in 2 <92116 92371> out 1 <92372>     # join source bit 12
const-mul-2 in 1 <92372> out 1 <92373>   # join
add in 2 <92115 92373> out 1 <92374>     # join source bit 11
const-mul-2 in 1 <92374> out 1 <92375>   # join
add in 2 <92114 92375> out 1 <92376>     # join source bit 10
const-mul-2 in 1 <92376> out 1 <92377>   # join
add in 2 <92113 92377> out 1 <92378>     # join source bit 9
const-mul-2 in 1 <92378> out 1 <92379>   # join
add in 2 <92112 92379> out 1 <92380>     # join source bit 8
const-mul-2 in 1 <92380> out 1 <92381>   # join
add in 2 <92111 92381> out 1 <92382>     # join source bit 7
const-mul-2 in 1 <92382> out 1 <92383>   # join
add in 2 <92110 92383> out 1 <92384>     # join source bit 6
const-mul-2 in 1 <92384> out 1 <92385>   # join
add in 2 <92109 92385> out 1 <92386>     # join source bit 5
const-mul-2 in 1 <92386> out 1 <92387>   # join
add in 2 <92108 92387> out 1 <92388>     # join source bit 4
const-mul-2 in 1 <92388> out 1 <92389>   # join
add in 2 <92107 92389> out 1 <92390>     # join source bit 3
const-mul-2 in 1 <92390> out 1 <92391>   # join
add in 2 <92106 92391> out 1 <92392>     # join source bit 2
const-mul-2 in 1 <92392> out 1 <92393>   # join
add in 2 <92105 92393> out 1 <92394>     # join source bit 1
const-mul-2 in 1 <92394> out 1 <92395>   # join
add in 2 <92104 92395> out 1 <92396>     # join source bit 0
add in 2 <92396 92396> out 1 <92397>     # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <92101> out 1 <92398> # multiply-by-constant 4294967295
add in 2 <32 92398> out 1 <92399>        # 'CmpLT DFG.Input - DFG.Conditional'
split in 1 <92399> out 263 <92400 92401 92402 92403 92404 92405 92406 92407 92408 92409 92410 92411 92412 92413 92414 92415 92416 92417 92418 92419 92420 92421 92422 92423 92424 92425 92426 92427 92428 92429 92430 92431 92432 92433 92434 92435 92436 92437 92438 92439 92440 92441 92442 92443 92444 92445 92446 92447 92448 92449 92450 92451 92452 92453 92454 92455 92456 92457 92458 92459 92460 92461 92462 92463 92464 92465 92466 92467 92468 92469 92470 92471 92472 92473 92474 92475 92476 92477 92478 92479 92480 92481 92482 92483 92484 92485 92486 92487 92488 92489 92490 92491 92492 92493 92494 92495 92496 92497 92498 92499 92500 92501 92502 92503 92504 92505 92506 92507 92508 92509 92510 92511 92512 92513 92514 92515 92516 92517 92518 92519 92520 92521 92522 92523 92524 92525 92526 92527 92528 92529 92530 92531 92532 92533 92534 92535 92536 92537 92538 92539 92540 92541 92542 92543 92544 92545 92546 92547 92548 92549 92550 92551 92552 92553 92554 92555 92556 92557 92558 92559 92560 92561 92562 92563 92564 92565 92566 92567 92568 92569 92570 92571 92572 92573 92574 92575 92576 92577 92578 92579 92580 92581 92582 92583 92584 92585 92586 92587 92588 92589 92590 92591 92592 92593 92594 92595 92596 92597 92598 92599 92600 92601 92602 92603 92604 92605 92606 92607 92608 92609 92610 92611 92612 92613 92614 92615 92616 92617 92618 92619 92620 92621 92622 92623 92624 92625 92626 92627 92628 92629 92630 92631 92632 92633 92634 92635 92636 92637 92638 92639 92640 92641 92642 92643 92644 92645 92646 92647 92648 92649 92650 92651 92652 92653 92654 92655 92656 92657 92658 92659 92660 92661 92662> # SplitBus
mul in 2 <92431 92397> out 1 <92663>     # cond trueterm
const-mul-neg-1 in 1 <92431> out 1 <92664> # cond minuscond
add in 2 <100 92664> out 1 <92665>       # cond negcond
mul in 2 <92665 92101> out 1 <92666>     # cond falseterm
add in 2 <92663 92666> out 1 <92667>     # cond result
add in 2 <92093 92667> out 1 <92668>     # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
split in 1 <92668> outplitBus
const-mul-2 in 1 <92700> out 1 <92902>   # join source bit 31
add in 2 <92699 92902> out 1 <92903>     # join source bit 30
const-mul-2 in 1 <92903> out 1 <92904>   # join
add in 2 <92698 92904> out 1 <92905>     # join source bit 29
const-mul-2 in 1 <92905> out 1 <92906>   # join
add in 2 <92697 92906> out 1 <92907>     # join source bit 28
const-mul-2 in 1 <92907> out 1 <92908>   # join
add in 2 <92696 92908> out 1 <92909>     # join source bit 27
const-mul-2 in 1 <92909> out 1 <92910>   # join
add in 2 <92695 92910> out 1 <92911>     # join source bit 26
const-mul-2 in 1 <92911> out 1 <92912>   # join
add in 2 <92694 92912> out 1 <92913>     # join source bit 25
const-mul-2 in 1 <92913> out 1 <92914>   # join
add in 2 <92693 92914> out 1 <92915>     # join source bit 24
const-mul-2 in 1 <92915> out 1 <92916>   # join
add in 2 <92692 92916> out 1 <92917>     # join source bit 23
const-mul-2 in 1 <92917> out 1 <92918>   # join
add in 2 <92691 92918> out 1 <92919>     # join source bit 22
const-mul-2 in 1 <92919> out 1 <92920>   # join
add in 2 <92690 92920> out 1 <92921>     # join source bit 21
const-mul-2 in 1 <92921> out 1 <92922>   # join
add in 2 <92689 92922> out 1 <92923>     # join source bit 20
const-mul-2 in 1 <92923> out 1 <92924>   # join
add in 2 <92688 92924> out 1 <92925>     # join source bit 19
const-mul-2 in 1 <92925> out 1 <92926>   # join
add in 2 <92687 92926> out 1 <92927>     # join source bit 18
const-mul-2 in 1 <92927> out 1 <92928>   # join
add in 2 <92686 92928> out 1 <92929>     # join source bit 17
const-mul-2 in 1 <92929> out 1 <92930>   # join
add in 2 <92685 92930> out 1 <92931>     # join source bit 16
const-mul-2 in 1 <92931> out 1 <92932>   # join
add in 2 <92684 92932> out 1 <92933>     # join source bit 15
const-mul-2 in 1 <92933> out 1 <92934>   # join
add in 2 <92683 92934> out 1 <92935>     # join source bit 14
const-mul-2 in 1 <92935> out 1 <92936>   # join
add in 2 <92682 92936> out 1 <92937>     # join source bit 13
const-mul-2 in 1 <92937> out 1 <92938>   # join
add in 2 <92681 92938> out 1 <92939>     # join source bit 12
const-mul-2 in 1 <92939> out 1 <92940>   # join
add in 2 <92680 92940> out 1 <92941>     # join source bit 11
const-mul-2 in 1 <92941> out 1 <92942>   # join
add in 2 <92679 92942> out 1 <92943>     # join source bit 10
const-mul-2 in 1 <92943> out 1 <92944>   # join
add in 2 <92678 92944> out 1 <92945>     # join source bit 9
const-mul-2 in 1 <92945> out 1 <92946>   # join
add in 2 <92677 92946> out 1 <92947>     # join source bit 8
const-mul-2 in 1 <92947> out 1 <92948>   # join
add in 2 <92676 92948> out 1 <92949>     # join source bit 7
const-mul-2 in 1 <92949> out 1 <92950>   # join
add in 2 <92675 92950> out 1 <92951>     # join source bit 6
const-mul-2 in 1 <92951> out 1 <92952>   # join
add in 2 <92674 92952> out 1 <92953>     # join source bit 5
const-mul-2 in 1 <92953> out 1 <92954>   # join
add in 2 <92673 92954> out 1 <92955>     # join source bit 4
const-mul-2 in 1 <92955> out 1 <92956>   # join
add in 2 <92672 92956> out 1 <92957>     # join source bit 3
const-mul-2 in 1 <92957> out 1 <92958>   # join
add in 2 <92671 92958> out 1 <92959>     # join source bit 2
const-mul-2 in 1 <92959> out 1 <92960>   # join
add in 2 <92670 92960> out 1 <92961>     # join source bit 1
const-mul-2 in 1 <92961> out 1 <92962>   # join
add in 2 <92669 92962> out 1 <92963>     # join source bit 0
add in 2 <92963 92963> out 1 <92964>     # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <92093> out 1 <92965> # multiply-by-constant 4294967295
add in 2 <92667 92965> out 1 <92966>     # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <92966> outplitBus
mul in 2 <92998 92964> out 1 <93232>     # cond trueterm
const-mul-neg-1 in 1 <92998> out 1 <93233> # cond minuscond
add in 2 <100 93233> out 1 <93234>       # cond negcond
mul in 2 <93234 92093> out 1 <93235>     # cond falseterm
add in 2 <93232 93235> out 1 <93236>     # cond result
mul in 2 <91921 91885> out 1 <93237>     # cond trueterm
const-mul-neg-1 in 1 <91921> out 1 <93238> # cond minuscond
add in 2 <100 93238> out 1 <93239>       # cond negcond
mul in 2 <93239 91882> out 1 <93240>     # cond falseterm
add in 2 <93237 93240> out 1 <93241>     # cond result
mul in 2 <91777 91741> out 1 <93242>     # cond trueterm
const-mul-neg-1 in 1 <91777> out 1 <93243> # cond minuscond
add in 2 <100 93243> out 1 <93244>       # cond negcond
mul in 2 <93244 91738> out 1 <93245>     # cond falseterm
add in 2 <93242 93245> out 1 <93246>     # cond result
const-mul-ffffffff in 1 <93246> out 1 <93247> # multiply-by-constant 4294967295
add in 2 <93246 93241> out 1 <93248>     # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
add in 2 <93248 93247> out 1 <93249>     # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <93249> out 1 <93250> # multiply-by-constant 4294967295
add in 2 <93248 93250> out 1 <93251>     # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <93246> out 1 <93252> # multiply-by-constant 4294967295
add in 2 <93241 93252> out 1 <93253>     # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <93253> out 200 <93254 93255 93256 93257 93258 93259 93260 93261 93262 93263 93264 93265 93266 93267 93268 93269 93270 93271 93272 93273 93274 93275 93276 93277 93278 93279 93280 93281 93282 93283 93284 93285 93286 93287 93288 93289 93290 93291 93292 93293 93294 93295 93296 93297 93298 93299 93300 93301 93302 93303 93304 93305 93306 93307 93308 93309 93310 93311 93312 93313 93314 93315 93316 93317 93318 93319 93320 93321 93322 93323 93324 93325 93326 93327 93328 93329 93330 93331 93332 93333 93334 93335 93336 93337 93338 93339 93340 93341 93342 93343 93344 93345 93346 93347 93348 93349 93350 93351 93352 93353 93354 93355 93356 93357 93358 93359 93360 93361 93362 93363 93364 93365 93366 93367 93368 93369 93370 93371 93372 93373 93374 93375 93376 93377 93378 93379 93380 93381 93382 93383 93384 93385 93386 93387 93388 93389 93390 93391 93392 93393 93394 93395 93396 93397 93398 93399 93400 93401 93402 93403 93404 93405 93406 93407 93408 93409 93410 93411 93412 93413 93414 93415 93416 93417 93418 93419 93420 93421 93422 93423 93424 93425 93426 93427 93428 93429 93430 93431 93432 93433 93434 93435 93436 93437 93438 93439 93440 93441 93442 93443 93444 93445 93446 93447 93448 93449 93450 93451 93452 93453> # SplitBus
mul in 2 <93285 93251> out 1 <93454>     # cond trueterm
const-mul-neg-1 in 1 <93285> out 1 <93455> # cond minuscond
add in 2 <100 93455> out 1 <93456>       # cond negcond
mul in 2 <93456 93241> out 1 <93457>     # cond falseterm
add in 2 <93454 93457> out 1 <93458>     # cond result
const-mul-ffffffff in 1 <93458> out 1 <93459> # multiply-by-constant 4294967295
add in 2 <93458 93236> out 1 <93460>     # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
split in 1 <93460> outplitBus
const-mul-2 in 1 <93492> out 1 <93696>   # join source bit 31
add in 2 <93491 93696> out 1 <93697>     # join source bit 30
const-mul-2 in 1 <93697> out 1 <93698>   # join
add in 2 <93490 93698> out 1 <93699>     # join source bit 29
const-mul-2 in 1 <93699> out 1 <93700>   # join
add in 2 <93489 93700> out 1 <93701>     # join source bit 28
const-mul-2 in 1 <93701> out 1 <93702>   # join
add in 2 <93488 93702> out 1 <93703>     # join source bit 27
const-mul-2 in 1 <93703> out 1 <93704>   # join
add in 2 <93487 93704> out 1 <93705>     # join source bit 26
const-mul-2 in 1 <93705> out 1 <93706>   # join
add in 2 <93486 93706> out 1 <93707>     # join source bit 25
const-mul-2 in 1 <93707> out 1 <93708>   # join
add in 2 <93485 93708> out 1 <93709>     # join source bit 24
const-mul-2 in 1 <93709> out 1 <93710>   # join
add in 2 <93484 93710> out 1 <93711>     # join source bit 23
const-mul-2 in 1 <93711> out 1 <93712>   # join
add in 2 <93483 93712> out 1 <93713>     # join source bit 22
const-mul-2 in 1 <93713> out 1 <93714>   # join
add in 2 <93482 93714> out 1 <93715>     # join source bit 21
const-mul-2 in 1 <93715> out 1 <93716>   # join
add in 2 <93481 93716> out 1 <93717>     # join source bit 20
const-mul-2 in 1 <93717> out 1 <93718>   # join
add in 2 <93480 93718> out 1 <93719>     # join source bit 19
const-mul-2 in 1 <93719> out 1 <93720>   # join
add in 2 <93479 93720> out 1 <93721>     # join source bit 18
const-mul-2 in 1 <93721> out 1 <93722>   # join
add in 2 <93478 93722> out 1 <93723>     # join source bit 17
const-mul-2 in 1 <93723> out 1 <93724>   # join
add in 2 <93477 93724> out 1 <93725>     # join source bit 16
const-mul-2 in 1 <93725> out 1 <93726>   # join
add in 2 <93476 93726> out 1 <93727>     # join source bit 15
const-mul-2 in 1 <93727> out 1 <93728>   # join
add in 2 <93475 93728> out 1 <93729>     # join source bit 14
const-mul-2 in 1 <93729> out 1 <93730>   # join
add in 2 <93474 93730> out 1 <93731>     # join source bit 13
const-mul-2 in 1 <93731> out 1 <93732>   # join
add in 2 <93473 93732> out 1 <93733>     # join source bit 12
const-mul-2 in 1 <93733> out 1 <93734>   # join
add in 2 <93472 93734> out 1 <93735>     # join source bit 11
const-mul-2 in 1 <93735> out 1 <93736>   # join
add in 2 <93471 93736> out 1 <93737>     # join source bit 10
const-mul-2 in 1 <93737> out 1 <93738>   # join
add in 2 <93470 93738> out 1 <93739>     # join source bit 9
const-mul-2 in 1 <93739> out 1 <93740>   # join
add in 2 <93469 93740> out 1 <93741>     # join source bit 8
const-mul-2 in 1 <93741> out 1 <93742>   # join
add in 2 <93468 93742> out 1 <93743>     # join source bit 7
const-mul-2 in 1 <93743> out 1 <93744>   # join
add in 2 <93467 93744> out 1 <93745>     # join source bit 6
const-mul-2 in 1 <93745> out 1 <93746>   # join
add in 2 <93466 93746> out 1 <93747>     # join source bit 5
const-mul-2 in 1 <93747> out 1 <93748>   # join
add in 2 <93465 93748> out 1 <93749>     # join source bit 4
const-mul-2 in 1 <93749> out 1 <93750>   # join
add in 2 <93464 93750> out 1 <93751>     # join source bit 3
const-mul-2 in 1 <93751> out 1 <93752>   # join
add in 2 <93463 93752> out 1 <93753>     # join source bit 2
const-mul-2 in 1 <93753> out 1 <93754>   # join
add in 2 <93462 93754> out 1 <93755>     # join source bit 1
const-mul-2 in 1 <93755> out 1 <93756>   # join
add in 2 <93461 93756> out 1 <93757>     # join source bit 0
add in 2 <93757 93757> out 1 <93758>     # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <93758> out 1 <93759> # multiply-by-constant 4294967295
add in 2 <93460 93759> out 1 <93760>     # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <93458> out 1 <93761> # multiply-by-constant 4294967295
add in 2 <93236 93761> out 1 <93762>     # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <93762> outplitBus
mul in 2 <93794 93760> out 1 <94030>     # cond trueterm
const-mul-neg-1 in 1 <93794> out 1 <94031> # cond minuscond
add in 2 <100 94031> out 1 <94032>       # cond negcond
mul in 2 <94032 93236> out 1 <94033>     # cond falseterm
add in 2 <94030 94033> out 1 <94034>     # cond result
add in 2 <94034 104> out 1 <94035>       # ArithBusReq.AddReq(DFG.Conditional,DFG.Constant)
const-mul-ffffffff in 1 <30> out 1 <94036> # multiply-by-constant 4294967295
add in 2 <94035 94036> out 1 <94037>     # 'CmpLT DFG.Add - DFG.Input'
split in 1 <94037> outplitBus
mul in 2 <94069 103> out 1 <94276>       # cond trueterm
const-mul-neg-1 in 1 <94069> out 1 <94277> # cond minuscond
add in 2 <100 94277> out 1 <94278>       # cond negcond
mul in 2 <94278 102> out 1 <94279>       # cond falseterm
add in 2 <94276 94279> out 1 <94280>     # cond result
add in 2 <94034 3084> out 1 <94281>      # ArithBusReq.AddReq(DFG.Conditional,DFG.Negate)
const-mul-ffffffff in 1 <94281> out 1 <94282> # multiply-by-constant 4294967295
add in 2 <30 94282> out 1 <94283>        # 'CmpLT DFG.Input - DFG.Subtract'
split in 1 <94283> outplitBus
mul in 2 <94315 103> out 1 <94554>       # cond trueterm
const-mul-neg-1 in 1 <94315> out 1 <94555> # cond minuscond
add in 2 <100 94555> out 1 <94556>       # cond negcond
mul in 2 <94556 94280> out 1 <94557>     # cond falseterm
add in 2 <94554 94557> out 1 <94558>     # cond result
const-mul-ffffffff in 1 <29> out 1 <94559> # multiply-by-constant 4294967295
add in 2 <29 30> out 1 <94560>           # ArithBusReq.AddReq(DFG.Input,DFG.Input)
add in 2 <94560 94559> out 1 <94561>     # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <94561> out 1 <94562> # multiply-by-constant 4294967295
add in 2 <94560 94562> out 1 <94563>     # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <29> out 1 <94564> # multiply-by-constant 4294967295
add in 2 <30 94564> out 1 <94565>        # 'CmpLT DFG.Input - DFG.Input'
split in 1 <94565> out 65 <94566 94567 94568 94569 94570 94571 94572 94573 94574 94575 94576 94577 94578 94579 94580 94581 94582 94583 94584 94585 94586 94587 94588 94589 94590 94591 94592 94593 94594 94595 94596 94597 94598 94599 94600 94601 94602 94603 94604 94605 94606 94607 94608 94609 94610 94611 94612 94613 94614 94615 94616 94617 94618 94619 94620 94621 94622 94623 94624 94625 94626 94627 94628 94629 94630> # SplitBus
mul in 2 <94597 94563> out 1 <94631>     # cond trueterm
const-mul-neg-1 in 1 <94597> out 1 <94632> # cond minuscond
add in 2 <100 94632> out 1 <94633>       # cond negcond
mul in 2 <94633 30> out 1 <94634>        # cond falseterm
add in 2 <94631 94634> out 1 <94635>     # cond result
const-mul-ffffffff in 1 <94635> out 1 <94636> # multiply-by-constant 4294967295
add in 2 <94635 31> out 1 <94637>        # ArithBusReq.AddReq(DFG.Conditional,DFG.Input)
add in 2 <94637 94636> out 1 <94638>     # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <94638> out 1 <94639> # multiply-by-constant 4294967295
add in 2 <94637 94639> out 1 <94640>     # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <94635> out 1 <94641> # multiply-by-constant 4294967295
add in 2 <31 94641> out 1 <94642>        # 'CmpLT DFG.Input - DFG.Conditional'
split in 1 <94642> outplitBus
mul in 2 <94674 94640> out 1 <94774>     # cond trueterm
const-mul-neg-1 in 1 <94674> out 1 <94775> # cond minuscond
add in 2 <100 94775> out 1 <94776>       # cond negcond
mul in 2 <94776 31> out 1 <94777>        # cond falseterm
add in 2 <94774 94777> out 1 <94778>     # cond result
const-mul-ffffffff in 1 <94778> out 1 <94779> # multiply-by-constant 4294967295
add in 2 <94778 32> out 1 <94780>        # ArithBusReq.AddReq(DFG.Conditional,DFG.Input)
add in 2 <94780 94779> out 1 <94781>     # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <94778> out 1 <94782> # multiply-by-constant 4294967295
add in 2 <32 94782> out 1 <94783>        # 'CmpLT DFG.Input - DFG.Conditional'
split in 1 <94783> out 197 <94784 94785 94786 94787 94788 94789 94790 94791 94792 94793 94794 94795 94796 94797 94798 94799 94800 94801 94802 94803 94804 94805 94806 94807 94808 94809 94810 94811 94812 94813 94814 94815 94816 94817 94818 94819 94820 94821 94822 94823 94824 94825 94826 94827 94828 94829 94830 94831 94832 94833 94834 94835 94836 94837 94838 94839 94840 94841 94842 94843 94844 94845 94846 94847 94848 94849 94850 94851 94852 94853 94854 94855 94856 94857 94858 94859 94860 94861 94862 94863 94864 94865 94866 94867 94868 94869 94870 94871 94872 94873 94874 94875 94876 94877 94878 94879 94880 94881 94882 94883 94884 94885 94886 94887 94888 94889 94890 94891 94892 94893 94894 94895 94896 94897 94898 94899 94900 94901 94902 94903 94904 94905 94906 94907 94908 94909 94910 94911 94912 94913 94914 94915 94916 94917 94918 94919 94920 94921 94922 94923 94924 94925 94926 94927 94928 94929 94930 94931 94932 94933 94934 94935 94936 94937 94938 94939 94940 94941 94942 94943 94944 94945 94946 94947 94948 94949 94950 94951 94952 94953 94954 94955 94956 94957 94958 94959 94960 94961 94962 94963 94964 94965 94966 94967 94968 94969 94970 94971 94972 94973 94974 94975 94976 94977 94978 94979 94980> # SplitBus
mul in 2 <94815 94781> out 1 <94981>     # cond trueterm
const-mul-neg-1 in 1 <94815> out 1 <94982> # cond minuscond
add in 2 <100 94982> out 1 <94983>       # cond negcond
mul in 2 <94983 94778> out 1 <94984>     # cond falseterm
add in 2 <94981 94984> out 1 <94985>     # cond result
mul in 2 <94674 94638> out 1 <94986>     # cond trueterm
const-mul-neg-1 in 1 <94674> out 1 <94987> # cond minuscond
add in 2 <100 94987> out 1 <94988>       # cond negcond
mul in 2 <94988 94635> out 1 <94989>     # cond falseterm
add in 2 <94986 94989> out 1 <94990>     # cond result
mul in 2 <94597 94561> out 1 <94991>     # cond trueterm
const-mul-neg-1 in 1 <94597> out 1 <94992> # cond minuscond
add in 2 <100 94992> out 1 <94993>       # cond negcond
mul in 2 <94993 29> out 1 <94994>        # cond falseterm
add in 2 <94991 94994> out 1 <94995>     # cond result
const-mul-ffffffff in 1 <94995> out 1 <94996> # multiply-by-constant 4294967295
add in 2 <94995 94990> out 1 <94997>     # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
add in 2 <94997 94996> out 1 <94998>     # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <94998> out 1 <94999> # multiply-by-constant 4294967295
add in 2 <94997 94999> out 1 <95000>     # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <94995> out 1 <95001> # multiply-by-constant 4294967295
add in 2 <94990 95001> out 1 <95002>     # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <95002> outplitBus
mul in 2 <95034 95000> out 1 <95135>     # cond trueterm
const-mul-neg-1 in 1 <95034> out 1 <95136> # cond minuscond
add in 2 <100 95136> out 1 <95137>       # cond negcond
mul in 2 <95137 94990> out 1 <95138>     # cond falseterm
add in 2 <95135 95138> out 1 <95139>     # cond result
const-mul-ffffffff in 1 <95139> out 1 <95140> # multiply-by-constant 4294967295
add in 2 <95139 94985> out 1 <95141>     # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
add in 2 <95141 95140> out 1 <95142>     # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <95142> out 1 <95143> # multiply-by-constant 4294967295
add in 2 <95141 95143> out 1 <95144>     # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <95139> out 1 <95145> # multiply-by-constant 4294967295
add in 2 <94985 95145> out 1 <95146>     # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <95146> out 199 <95147 95148 95149 95150 95151 95152 95153 95154 95155 95156 95157 95158 95159 95160 95161 95162 95163 95164 95165 95166 95167 95168 95169 95170 95171 95172 95173 95174 95175 95176 95177 95178 95179 95180 95181 95182 95183 95184 95185 95186 95187 95188 95189 95190 95191 95192 95193 95194 95195 95196 95197 95198 95199 95200 95201 95202 95203 95204 95205 95206 95207 95208 95209 95210 95211 95212 95213 95214 95215 95216 95217 95218 95219 95220 95221 95222 95223 95224 95225 95226 95227 95228 95229 95230 95231 95232 95233 95234 95235 95236 95237 95238 95239 95240 95241 95242 95243 95244 95245 95246 95247 95248 95249 95250 95251 95252 95253 95254 95255 95256 95257 95258 95259 95260 95261 95262 95263 95264 95265 95266 95267 95268 95269 95270 95271 95272 95273 95274 95275 95276 95277 95278 95279 95280 95281 95282 95283 95284 95285 95286 95287 95288 95289 95290 95291 95292 95293 95294 95295 95296 95297 95298 95299 95300 95301 95302 95303 95304 95305 95306 95307 95308 95309 95310 95311 95312 95313 95314 95315 95316 95317 95318 95319 95320 95321 95322 95323 95324 95325 95326 95327 95328 95329 95330 95331 95332 95333 95334 95335 95336 95337 95338 95339 95340 95341 95342 95343 95344 95345> # SplitBus
mul in 2 <95178 95144> out 1 <95346>     # cond trueterm
const-mul-neg-1 in 1 <95178> out 1 <95347> # cond minuscond
add in 2 <100 95347> out 1 <95348>       # cond negcond
mul in 2 <95348 94985> out 1 <95349>     # cond falseterm
add in 2 <95346 95349> out 1 <95350>     # cond result
const-mul-ffffffff in 1 <95350> out 1 <95351> # multiply-by-constant 4294967295
const-mul-ffffffff in 1 <94781> out 1 <95352> # multiply-by-constant 4294967295
add in 2 <94780 95352> out 1 <95353>     # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
mul in 2 <94815 95353> out 1 <95354>     # cond trueterm
const-mul-neg-1 in 1 <94815> out 1 <95355> # cond minuscond
add in 2 <100 95355> out 1 <95356>       # cond negcond
mul in 2 <95356 32> out 1 <95357>        # cond falseterm
add in 2 <95354 95357> out 1 <95358>     # cond result
const-mul-ffffffff in 1 <95358> out 1 <95359> # multiply-by-constant 4294967295
add in 2 <95358 33> out 1 <95360>        # ArithBusReq.AddReq(DFG.Conditional,DFG.Input)
split in 1 <95360> outplitBus
const-mul-2 in 1 <95392> out 1 <95592>   # join source bit 31
add in 2 <95391 95592> out 1 <95593>     # join source bit 30
const-mul-2 in 1 <95593> out 1 <95594>   # join
add in 2 <95390 95594> out 1 <95595>     # join source bit 29
const-mul-2 in 1 <95595> out 1 <95596>   # join
add in 2 <95389 95596> out 1 <95597>     # join source bit 28
const-mul-2 in 1 <95597> out 1 <95598>   # join
add in 2 <95388 95598> out 1 <95599>     # join source bit 27
const-mul-2 in 1 <95599> out 1 <95600>   # join
add in 2 <95387 95600> out 1 <95601>     # join source bit 26
const-mul-2 in 1 <95601> out 1 <95602>   # join
add in 2 <95386 95602> out 1 <95603>     # join source bit 25
const-mul-2 in 1 <95603> out 1 <95604>   # join
add in 2 <95385 95604> out 1 <95605>     # join source bit 24
const-mul-2 in 1 <95605> out 1 <95606>   # join
add in 2 <95384 95606> out 1 <95607>     # join source bit 23
const-mul-2 in 1 <95607> out 1 <95608>   # join
add in 2 <95383 95608> out 1 <95609>     # join source bit 22
const-mul-2 in 1 <95609> out 1 <95610>   # join
add in 2 <95382 95610> out 1 <95611>     # join source bit 21
const-mul-2 in 1 <95611> out 1 <95612>   # join
add in 2 <95381 95612> out 1 <95613>     # join source bit 20
const-mul-2 in 1 <95613> out 1 <95614>   # join
add in 2 <95380 95614> out 1 <95615>     # join source bit 19
const-mul-2 in 1 <95615> out 1 <95616>   # join
add in 2 <95379 95616> out 1 <95617>     # join source bit 18
const-mul-2 in 1 <95617> out 1 <95618>   # join
add in 2 <95378 95618> out 1 <95619>     # join source bit 17
const-mul-2 in 1 <95619> out 1 <95620>   # join
add in 2 <95377 95620> out 1 <95621>     # join source bit 16
const-mul-2 in 1 <95621> out 1 <95622>   # join
add in 2 <95376 95622> out 1 <95623>     # join source bit 15
const-mul-2 in 1 <95623> out 1 <95624>   # join
add in 2 <95375 95624> out 1 <95625>     # join source bit 14
const-mul-2 in 1 <95625> out 1 <95626>   # join
add in 2 <95374 95626> out 1 <95627>     # join source bit 13
const-mul-2 in 1 <95627> out 1 <95628>   # join
add in 2 <95373 95628> out 1 <95629>     # join source bit 12
const-mul-2 in 1 <95629> out 1 <95630>   # join
add in 2 <95372 95630> out 1 <95631>     # join source bit 11
const-mul-2 in 1 <95631> out 1 <95632>   # join
add in 2 <95371 95632> out 1 <95633>     # join source bit 10
const-mul-2 in 1 <95633> out 1 <95634>   # join
add in 2 <95370 95634> out 1 <95635>     # join source bit 9
const-mul-2 in 1 <95635> out 1 <95636>   # join
add in 2 <95369 95636> out 1 <95637>     # join source bit 8
const-mul-2 in 1 <95637> out 1 <95638>   # join
add in 2 <95368 95638> out 1 <95639>     # join source bit 7
const-mul-2 in 1 <95639> out 1 <95640>   # join
add in 2 <95367 95640> out 1 <95641>     # join source bit 6
const-mul-2 in 1 <95641> out 1 <95642>   # join
add in 2 <95366 95642> out 1 <95643>     # join source bit 5
const-mul-2 in 1 <95643> out 1 <95644>   # join
add in 2 <95365 95644> out 1 <95645>     # join source bit 4
const-mul-2 in 1 <95645> out 1 <95646>   # join
add in 2 <95364 95646> out 1 <95647>     # join source bit 3
const-mul-2 in 1 <95647> out 1 <95648>   # join
add in 2 <95363 95648> out 1 <95649>     # join source bit 2
const-mul-2 in 1 <95649> out 1 <95650>   # join
add in 2 <95362 95650> out 1 <95651>     # join source bit 1
const-mul-2 in 1 <95651> out 1 <95652>   # join
add in 2 <95361 95652> out 1 <95653>     # join source bit 0
add in 2 <95653 95653> out 1 <95654>     # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <95358> out 1 <95655> # multiply-by-constant 4294967295
add in 2 <33 95655> out 1 <95656>        # 'CmpLT DFG.Input - DFG.Conditional'
split in 1 <95656> outplitBus
mul in 2 <95688 95654> out 1 <95920>     # cond trueterm
const-mul-neg-1 in 1 <95688> out 1 <95921> # cond minuscond
add in 2 <100 95921> out 1 <95922>       # cond negcond
mul in 2 <95922 95358> out 1 <95923>     # cond falseterm
add in 2 <95920 95923> out 1 <95924>     # cond result
add in 2 <95350 95924> out 1 <95925>     # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
split in 1 <95925> outplitBus
const-mul-2 in 1 <95957> out 1 <96159>   # join source bit 31
add in 2 <95956 96159> out 1 <96160>     # join source bit 30
const-mul-2 in 1 <96160> out 1 <96161>   # join
add in 2 <95955 96161> out 1 <96162>     # join source bit 29
const-mul-2 in 1 <96162> out 1 <96163>   # join
add in 2 <95954 96163> out 1 <96164>     # join source bit 28
const-mul-2 in 1 <96164> out 1 <96165>   # join
add in 2 <95953 96165> out 1 <96166>     # join source bit 27
const-mul-2 in 1 <96166> out 1 <96167>   # join
add in 2 <95952 96167> out 1 <96168>     # join source bit 26
const-mul-2 in 1 <96168> out 1 <96169>   # join
add in 2 <95951 96169> out 1 <96170>     # join source bit 25
const-mul-2 in 1 <96170> out 1 <96171>   # join
add in 2 <95950 96171> out 1 <96172>     # join source bit 24
const-mul-2 in 1 <96172> out 1 <96173>   # join
add in 2 <95949 96173> out 1 <96174>     # join source bit 23
const-mul-2 in 1 <96174> out 1 <96175>   # join
add in 2 <95948 96175> out 1 <96176>     # join source bit 22
const-mul-2 in 1 <96176> out 1 <96177>   # join
add in 2 <95947 96177> out 1 <96178>     # join source bit 21
const-mul-2 in 1 <96178> out 1 <96179>   # join
add in 2 <95946 96179> out 1 <96180>     # join source bit 20
const-mul-2 in 1 <96180> out 1 <96181>   # join
add in 2 <95945 96181> out 1 <96182>     # join source bit 19
const-mul-2 in 1 <96182> out 1 <96183>   # join
add in 2 <95944 96183> out 1 <96184>     # join source bit 18
const-mul-2 in 1 <96184> out 1 <96185>   # join
add in 2 <95943 96185> out 1 <96186>     # join source bit 17
const-mul-2 in 1 <96186> out 1 <96187>   # join
add in 2 <95942 96187> out 1 <96188>     # join source bit 16
const-mul-2 in 1 <96188> out 1 <96189>   # join
add in 2 <95941 96189> out 1 <96190>     # join source bit 15
const-mul-2 in 1 <96190> out 1 <96191>   # join
add in 2 <95940 96191> out 1 <96192>     # join source bit 14
const-mul-2 in 1 <96192> out 1 <96193>   # join
add in 2 <95939 96193> out 1 <96194>     # join source bit 13
const-mul-2 in 1 <96194> out 1 <96195>   # join
add in 2 <95938 96195> out 1 <96196>     # join source bit 12
const-mul-2 in 1 <96196> out 1 <96197>   # join
add in 2 <95937 96197> out 1 <96198>     # join source bit 11
const-mul-2 in 1 <96198> out 1 <96199>   # join
add in 2 <95936 96199> out 1 <96200>     # join source bit 10
const-mul-2 in 1 <96200> out 1 <96201>   # join
add in 2 <95935 96201> out 1 <96202>     # join source bit 9
const-mul-2 in 1 <96202> out 1 <96203>   # join
add in 2 <95934 96203> out 1 <96204>     # join source bit 8
const-mul-2 in 1 <96204> out 1 <96205>   # join
add in 2 <95933 96205> out 1 <96206>     # join source bit 7
const-mul-2 in 1 <96206> out 1 <96207>   # join
add in 2 <95932 96207> out 1 <96208>     # join source bit 6
const-mul-2 in 1 <96208> out 1 <96209>   # join
add in 2 <95931 96209> out 1 <96210>     # join source bit 5
const-mul-2 in 1 <96210> out 1 <96211>   # join
add in 2 <95930 96211> out 1 <96212>     # join source bit 4
const-mul-2 in 1 <96212> out 1 <96213>   # join
add in 2 <95929 96213> out 1 <96214>     # join source bit 3
const-mul-2 in 1 <96214> out 1 <96215>   # join
add in 2 <95928 96215> out 1 <96216>     # join source bit 2
const-mul-2 in 1 <96216> out 1 <96217>   # join
add in 2 <95927 96217> out 1 <96218>     # join source bit 1
const-mul-2 in 1 <96218> out 1 <96219>   # join
add in 2 <95926 96219> out 1 <96220>     # join source bit 0
add in 2 <96220 96220> out 1 <96221>     # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <95350> out 1 <96222> # multiply-by-constant 4294967295
add in 2 <95924 96222> out 1 <96223>     # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <96223> outplitBus
mul in 2 <96255 96221> out 1 <96489>     # cond trueterm
const-mul-neg-1 in 1 <96255> out 1 <96490> # cond minuscond
add in 2 <100 96490> out 1 <96491>       # cond negcond
mul in 2 <96491 95350> out 1 <96492>     # cond falseterm
add in 2 <96489 96492> out 1 <96493>     # cond result
mul in 2 <95178 95142> out 1 <96494>     # cond trueterm
const-mul-neg-1 in 1 <95178> out 1 <96495> # cond minuscond
add in 2 <100 96495> out 1 <96496>       # cond negcond
mul in 2 <96496 95139> out 1 <96497>     # cond falseterm
add in 2 <96494 96497> out 1 <96498>     # cond result
mul in 2 <95034 94998> out 1 <96499>     # cond trueterm
const-mul-neg-1 in 1 <95034> out 1 <96500> # cond minuscond
add in 2 <100 96500> out 1 <96501>       # cond negcond
mul in 2 <96501 94995> out 1 <96502>     # cond falseterm
add in 2 <96499 96502> out 1 <96503>     # cond result
const-mul-ffffffff in 1 <96503> out 1 <96504> # multiply-by-constant 4294967295
add in 2 <96503 96498> out 1 <96505>     # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
add in 2 <96505 96504> out 1 <96506>     # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <96506> out 1 <96507> # multiply-by-constant 4294967295
add in 2 <96505 96507> out 1 <96508>     # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <96503> out 1 <96509> # multiply-by-constant 4294967295
add in 2 <96498 96509> out 1 <96510>     # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <96510> out 200 <96511 96512 96513 96514 96515 96516 96517 96518 96519 96520 96521 96522 96523 96524 96525 96526 96527 96528 96529 96530 96531 96532 96533 96534 96535 96536 96537 96538 96539 96540 96541 96542 96543 96544 96545 96546 96547 96548 96549 96550 96551 96552 96553 96554 96555 96556 96557 96558 96559 96560 96561 96562 96563 96564 96565 96566 96567 96568 96569 96570 96571 96572 96573 96574 96575 96576 96577 96578 96579 96580 96581 96582 96583 96584 96585 96586 96587 96588 96589 96590 96591 96592 96593 96594 96595 96596 96597 96598 96599 96600 96601 96602 96603 96604 96605 96606 96607 96608 96609 96610 96611 96612 96613 96614 96615 96616 96617 96618 96619 96620 96621 96622 96623 96624 96625 96626 96627 96628 96629 96630 96631 96632 96633 96634 96635 96636 96637 96638 96639 96640 96641 96642 96643 96644 96645 96646 96647 96648 96649 96650 96651 96652 96653 96654 96655 96656 96657 96658 96659 96660 96661 96662 96663 96664 96665 96666 96667 96668 96669 96670 96671 96672 96673 96674 96675 96676 96677 96678 96679 96680 96681 96682 96683 96684 96685 96686 96687 96688 96689 96690 96691 96692 96693 96694 96695 96696 96697 96698 96699 96700 96701 96702 96703 96704 96705 96706 96707 96708 96709 96710> # SplitBus
mul in 2 <96542 96508> out 1 <96711>     # cond trueterm
const-mul-neg-1 in 1 <96542> out 1 <96712> # cond minuscond
add in 2 <100 96712> out 1 <96713>       # cond negcond
mul in 2 <96713 96498> out 1 <96714>     # cond falseterm
add in 2 <96711 96714> out 1 <96715>     # cond result
const-mul-ffffffff in 1 <96715> out 1 <96716> # multiply-by-constant 4294967295
add in 2 <96715 96493> out 1 <96717>     # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
split in 1 <96717> outplitBus
const-mul-2 in 1 <96749> out 1 <96953>   # join source bit 31
add in 2 <96748 96953> out 1 <96954>     # join source bit 30
const-mul-2 in 1 <96954> out 1 <96955>   # join
add in 2 <96747 96955> out 1 <96956>     # join source bit 29
const-mul-2 in 1 <96956> out 1 <96957>   # join
add in 2 <96746 96957> out 1 <96958>     # join source bit 28
const-mul-2 in 1 <96958> out 1 <96959>   # join
add in 2 <96745 96959> out 1 <96960>     # join source bit 27
const-mul-2 in 1 <96960> out 1 <96961>   # join
add in 2 <96744 96961> out 1 <96962>     # join source bit 26
const-mul-2 in 1 <96962> out 1 <96963>   # join
add in 2 <96743 96963> out 1 <96964>     # join source bit 25
const-mul-2 in 1 <96964> out 1 <96965>   # join
add in 2 <96742 96965> out 1 <96966>     # join source bit 24
const-mul-2 in 1 <96966> out 1 <96967>   # join
add in 2 <96741 96967> out 1 <96968>     # join source bit 23
const-mul-2 in 1 <96968> out 1 <96969>   # join
add in 2 <96740 96969> out 1 <96970>     # join source bit 22
const-mul-2 in 1 <96970> out 1 <96971>   # join
add in 2 <96739 96971> out 1 <96972>     # join source bit 21
const-mul-2 in 1 <96972> out 1 <96973>   # join
add in 2 <96738 96973> out 1 <96974>     # join source bit 20
const-mul-2 in 1 <96974> out 1 <96975>   # join
add in 2 <96737 96975> out 1 <96976>     # join source bit 19
const-mul-2 in 1 <96976> out 1 <96977>   # join
add in 2 <96736 96977> out 1 <96978>     # join source bit 18
const-mul-2 in 1 <96978> out 1 <96979>   # join
add in 2 <96735 96979> out 1 <96980>     # join source bit 17
const-mul-2 in 1 <96980> out 1 <96981>   # join
add in 2 <96734 96981> out 1 <96982>     # join source bit 16
const-mul-2 in 1 <96982> out 1 <96983>   # join
add in 2 <96733 96983> out 1 <96984>     # join source bit 15
const-mul-2 in 1 <96984> out 1 <96985>   # join
add in 2 <96732 96985> out 1 <96986>     # join source bit 14
const-mul-2 in 1 <96986> out 1 <96987>   # join
add in 2 <96731 96987> out 1 <96988>     # join source bit 13
const-mul-2 in 1 <96988> out 1 <96989>   # join
add in 2 <96730 96989> out 1 <96990>     # join source bit 12
const-mul-2 in 1 <96990> out 1 <96991>   # join
add in 2 <96729 96991> out 1 <96992>     # join source bit 11
const-mul-2 in 1 <96992> out 1 <96993>   # join
add in 2 <96728 96993> out 1 <96994>     # join source bit 10
const-mul-2 in 1 <96994> out 1 <96995>   # join
add in 2 <96727 96995> out 1 <96996>     # join source bit 9
const-mul-2 in 1 <96996> out 1 <96997>   # join
add in 2 <96726 96997> out 1 <96998>     # join source bit 8
const-mul-2 in 1 <96998> out 1 <96999>   # join
add in 2 <96725 96999> out 1 <97000>     # join source bit 7
const-mul-2 in 1 <97000> out 1 <97001>   # join
add in 2 <96724 97001> out 1 <97002>     # join source bit 6
const-mul-2 in 1 <97002> out 1 <97003>   # join
add in 2 <96723 97003> out 1 <97004>     # join source bit 5
const-mul-2 in 1 <97004> out 1 <97005>   # join
add in 2 <96722 97005> out 1 <97006>     # join source bit 4
const-mul-2 in 1 <97006> out 1 <97007>   # join
add in 2 <96721 97007> out 1 <97008>     # join source bit 3
const-mul-2 in 1 <97008> out 1 <97009>   # join
add in 2 <96720 97009> out 1 <97010>     # join source bit 2
const-mul-2 in 1 <97010> out 1 <97011>   # join
add in 2 <96719 97011> out 1 <97012>     # join source bit 1
const-mul-2 in 1 <97012> out 1 <97013>   # join
add in 2 <96718 97013> out 1 <97014>     # join source bit 0
add in 2 <97014 97014> out 1 <97015>     # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <97015> out 1 <97016> # multiply-by-constant 4294967295
add in 2 <96717 97016> out 1 <97017>     # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <96715> out 1 <97018> # multiply-by-constant 4294967295
add in 2 <96493 97018> out 1 <97019>     # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <97019> outplitBus
mul in 2 <97051 97017> out 1 <97287>     # cond trueterm
const-mul-neg-1 in 1 <97051> out 1 <97288> # cond minuscond
add in 2 <100 97288> out 1 <97289>       # cond negcond
mul in 2 <97289 96493> out 1 <97290>     # cond falseterm
add in 2 <97287 97290> out 1 <97291>     # cond result
add in 2 <97291 104> out 1 <97292>       # ArithBusReq.AddReq(DFG.Conditional,DFG.Constant)
const-mul-ffffffff in 1 <31> out 1 <97293> # multiply-by-constant 4294967295
add in 2 <97292 97293> out 1 <97294>     # 'CmpLT DFG.Add - DFG.Input'
split in 1 <97294> out 238 <97295 97296 97297 97298 97299 97300 97301 97302 97303 97304 97305 97306 97307 97308 97309 97310 97311 97312 97313 97314 97315 97316 97317 97318 97319 97320 97321 97322 97323 97324 97325 97326 97327 97328 97329 97330 97331 97332 97333 97334 97335 97336 97337 97338 97339 97340 97341 97342 97343 97344 97345 97346 97347 97348 97349 97350 97351 97352 97353 97354 97355 97356 97357 97358 97359 97360 97361 97362 97363 97364 97365 97366 97367 97368 97369 97370 97371 97372 97373 97374 97375 97376 97377 97378 97379 97380 97381 97382 97383 97384 97385 97386 97387 97388 97389 97390 97391 97392 97393 97394 97395 97396 97397 97398 97399 97400 97401 97402 97403 97404 97405 97406 97407 97408 97409 97410 97411 97412 97413 97414 97415 97416 97417 97418 97419 97420 97421 97422 97423 97424 97425 97426 97427 97428 97429 97430 97431 97432 97433 97434 97435 97436 97437 97438 97439 97440 97441 97442 97443 97444 97445 97446 97447 97448 97449 97450 97451 97452 97453 97454 97455 97456 97457 97458 97459 97460 97461 97462 97463 97464 97465 97466 97467 97468 97469 97470 97471 97472 97473 97474 97475 97476 97477 97478 97479 97480 97481 97482 97483 97484 97485 97486 97487 97488 97489 97490 97491 97492 97493 97494 97495 97496 97497 97498 97499 97500 97501 97502 97503 97504 97505 97506 97507 97508 97509 97510 97511 97512 97513 97514 97515 97516 97517 97518 97519 97520 97521 97522 97523 97524 97525 97526 97527 97528 97529 97530 97531 97532> # SplitBus
mul in 2 <97326 103> out 1 <97533>       # cond trueterm
const-mul-neg-1 in 1 <97326> out 1 <97534> # cond minuscond
add in 2 <100 97534> out 1 <97535>       # cond negcond
mul in 2 <97535 102> out 1 <97536>       # cond falseterm
add in 2 <97533 97536> out 1 <97537>     # cond result
add in 2 <97291 3084> out 1 <97538>      # ArithBusReq.AddReq(DFG.Conditional,DFG.Negate)
const-mul-ffffffff in 1 <97538> out 1 <97539> # multiply-by-constant 4294967295
add in 2 <31 97539> out 1 <97540>        # 'CmpLT DFG.Input - DFG.Subtract'
split in 1 <97540> outplitBus
mul in 2 <97572 103> out 1 <97811>       # cond trueterm
const-mul-neg-1 in 1 <97572> out 1 <97812> # cond minuscond
add in 2 <100 97812> out 1 <97813>       # cond negcond
mul in 2 <97813 97537> out 1 <97814>     # cond falseterm
add in 2 <97811 97814> out 1 <97815>     # cond result
const-mul-ffffffff in 1 <30> out 1 <97816> # multiply-by-constant 4294967295
add in 2 <30 31> out 1 <97817>           # ArithBusReq.AddReq(DFG.Input,DFG.Input)
add in 2 <97817 97816> out 1 <97818>     # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <97818> out 1 <97819> # multiply-by-constant 4294967295
add in 2 <97817 97819> out 1 <97820>     # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <30> out 1 <97821> # multiply-by-constant 4294967295
add in 2 <31 97821> out 1 <97822>        # 'CmpLT DFG.Input - DFG.Input'
split in 1 <97822> out 65 <97823 97824 97825 97826 97827 97828 97829 97830 97831 97832 97833 97834 97835 97836 97837 97838 97839 97840 97841 97842 97843 97844 97845 97846 97847 97848 97849 97850 97851 97852 97853 97854 97855 97856 97857 97858 97859 97860 97861 97862 97863 97864 97865 97866 97867 97868 97869 97870 97871 97872 97873 97874 97875 97876 97877 97878 97879 97880 97881 97882 97883 97884 97885 97886 97887> # SplitBus
mul in 2 <97854 97820> out 1 <97888>     # cond trueterm
const-mul-neg-1 in 1 <97854> out 1 <97889> # cond minuscond
add in 2 <100 97889> out 1 <97890>       # cond negcond
mul in 2 <97890 31> out 1 <97891>        # cond falseterm
add in 2 <97888 97891> out 1 <97892>     # cond result
const-mul-ffffffff in 1 <97892> out 1 <97893> # multiply-by-constant 4294967295
add in 2 <97892 32> out 1 <97894>        # ArithBusReq.AddReq(DFG.Conditional,DFG.Input)
add in 2 <97894 97893> out 1 <97895>     # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <97895> out 1 <97896> # multiply-by-constant 4294967295
add in 2 <97894 97896> out 1 <97897>     # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <97892> out 1 <97898> # multiply-by-constant 4294967295
add in 2 <32 97898> out 1 <97899>        # 'CmpLT DFG.Input - DFG.Conditional'
split in 1 <97899> out 131 <97900 97901 97902 97903 97904 97905 97906 97907 97908 97909 97910 97911 97912 97913 97914 97915 97916 97917 97918 97919 97920 97921 97922 97923 97924 97925 97926 97927 97928 97929 97930 97931 97932 97933 97934 97935 97936 97937 97938 97939 97940 97941 97942 97943 97944 97945 97946 97947 97948 97949 97950 97951 97952 97953 97954 97955 97956 97957 97958 97959 97960 97961 97962 97963 97964 97965 97966 97967 97968 97969 97970 97971 97972 97973 97974 97975 97976 97977 97978 97979 97980 97981 97982 97983 97984 97985 97986 97987 97988 97989 97990 97991 97992 97993 97994 97995 97996 97997 97998 97999 98000 98001 98002 98003 98004 98005 98006 98007 98008 98009 98010 98011 98012 98013 98014 98015 98016 98017 98018 98019 98020 98021 98022 98023 98024 98025 98026 98027 98028 98029 98030> # SplitBus
mul in 2 <97931 97897> out 1 <98031>     # cond trueterm
const-mul-neg-1 in 1 <97931> out 1 <98032> # cond minuscond
add in 2 <100 98032> out 1 <98033>       # cond negcond
mul in 2 <98033 32> out 1 <98034>        # cond falseterm
add in 2 <98031 98034> out 1 <98035>     # cond result
const-mul-ffffffff in 1 <98035> out 1 <98036> # multiply-by-constant 4294967295
add in 2 <98035 33> out 1 <98037>        # ArithBusReq.AddReq(DFG.Conditional,DFG.Input)
add in 2 <98037 98036> out 1 <98038>     # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <98035> out 1 <98039> # multiply-by-constant 4294967295
add in 2 <33 98039> out 1 <98040>        # 'CmpLT DFG.Input - DFG.Conditional'
split in 1 <98040> out 197 <98041 98042 98043 98044 98045 98046 98047 98048 98049 98050 98051 98052 98053 98054 98055 98056 98057 98058 98059 98060 98061 98062 98063 98064 98065 98066 98067 98068 98069 98070 98071 98072 98073 98074 98075 98076 98077 98078 98079 98080 98081 98082 98083 98084 98085 98086 98087 98088 98089 98090 98091 98092 98093 98094 98095 98096 98097 98098 98099 98100 98101 98102 98103 98104 98105 98106 98107 98108 98109 98110 98111 98112 98113 98114 98115 98116 98117 98118 98119 98120 98121 98122 98123 98124 98125 98126 98127 98128 98129 98130 98131 98132 98133 98134 98135 98136 98137 98138 98139 98140 98141 98142 98143 98144 98145 98146 98147 98148 98149 98150 98151 98152 98153 98154 98155 98156 98157 98158 98159 98160 98161 98162 98163 98164 98165 98166 98167 98168 98169 98170 98171 98172 98173 98174 98175 98176 98177 98178 98179 98180 98181 98182 98183 98184 98185 98186 98187 98188 98189 98190 98191 98192 98193 98194 98195 98196 98197 98198 98199 98200 98201 98202 98203 98204 98205 98206 98207 98208 98209 98210 98211 98212 98213 98214 98215 98216 98217 98218 98219 98220 98221 98222 98223 98224 98225 98226 98227 98228 98229 98230 98231 98232 98233 98234 98235 98236 98237> # SplitBus
mul in 2 <98072 98038> out 1 <98238>     # cond trueterm
const-mul-neg-1 in 1 <98072> out 1 <98239> # cond minuscond
add in 2 <100 98239> out 1 <98240>       # cond negcond
mul in 2 <98240 98035> out 1 <98241>     # cond falseterm
add in 2 <98238 98241> out 1 <98242>     # cond result
mul in 2 <97931 97895> out 1 <98243>     # cond trueterm
const-mul-neg-1 in 1 <97931> out 1 <98244> # cond minuscond
add in 2 <100 98244> out 1 <98245>       # cond negcond
mul in 2 <98245 97892> out 1 <98246>     # cond falseterm
add in 2 <98243 98246> out 1 <98247>     # cond result
mul in 2 <97854 97818> out 1 <98248>     # cond trueterm
const-mul-neg-1 in 1 <97854> out 1 <98249> # cond minuscond
add in 2 <100 98249> out 1 <98250>       # cond negcond
mul in 2 <98250 30> out 1 <98251>        # cond falseterm
add in 2 <98248 98251> out 1 <98252>     # cond result
const-mul-ffffffff in 1 <98252> out 1 <98253> # multiply-by-constant 4294967295
add in 2 <98252 98247> out 1 <98254>     # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
add in 2 <98254 98253> out 1 <98255>     # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <98255> out 1 <98256> # multiply-by-constant 4294967295
add in 2 <98254 98256> out 1 <98257>     # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <98252> out 1 <98258> # multiply-by-constant 4294967295
add in 2 <98247 98258> out 1 <98259>     # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <98259> outplitBus
mul in 2 <98291 98257> out 1 <98392>     # cond trueterm
const-mul-neg-1 in 1 <98291> out 1 <98393> # cond minuscond
add in 2 <100 98393> out 1 <98394>       # cond negcond
mul in 2 <98394 98247> out 1 <98395>     # cond falseterm
add in 2 <98392 98395> out 1 <98396>     # cond result
const-mul-ffffffff in 1 <98396> out 1 <98397> # multiply-by-constant 4294967295
add in 2 <98396 98242> out 1 <98398>     # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
add in 2 <98398 98397> out 1 <98399>     # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <98399> out 1 <98400> # multiply-by-constant 4294967295
add in 2 <98398 98400> out 1 <98401>     # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <98396> out 1 <98402> # multiply-by-constant 4294967295
add in 2 <98242 98402> out 1 <98403>     # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <98403> out 199 <98404 98405 98406 98407 98408 98409 98410 98411 98412 98413 98414 98415 98416 98417 98418 98419 98420 98421 98422 98423 98424 98425 98426 98427 98428 98429 98430 98431 98432 98433 98434 98435 98436 98437 98438 98439 98440 98441 98442 98443 98444 98445 98446 98447 98448 98449 98450 98451 98452 98453 98454 98455 98456 98457 98458 98459 98460 98461 98462 98463 98464 98465 98466 98467 98468 98469 98470 98471 98472 98473 98474 98475 98476 98477 98478 98479 98480 98481 98482 98483 98484 98485 98486 98487 98488 98489 98490 98491 98492 98493 98494 98495 98496 98497 98498 98499 98500 98501 98502 98503 98504 98505 98506 98507 98508 98509 98510 98511 98512 98513 98514 98515 98516 98517 98518 98519 98520 98521 98522 98523 98524 98525 98526 98527 98528 98529 98530 98531 98532 98533 98534 98535 98536 98537 98538 98539 98540 98541 98542 98543 98544 98545 98546 98547 98548 98549 98550 98551 98552 98553 98554 98555 98556 98557 98558 98559 98560 98561 98562 98563 98564 98565 98566 98567 98568 98569 98570 98571 98572 98573 98574 98575 98576 98577 98578 98579 98580 98581 98582 98583 98584 98585 98586 98587 98588 98589 98590 98591 98592 98593 98594 98595 98596 98597 98598 98599 98600 98601 98602> # SplitBus
mul in 2 <98435 98401> out 1 <98603>     # cond trueterm
const-mul-neg-1 in 1 <98435> out 1 <98604> # cond minuscond
add in 2 <100 98604> out 1 <98605>       # cond negcond
mul in 2 <98605 98242> out 1 <98606>     # cond falseterm
add in 2 <98603 98606> out 1 <98607>     # cond result
const-mul-ffffffff in 1 <98607> out 1 <98608> # multiply-by-constant 4294967295
const-mul-ffffffff in 1 <98038> out 1 <98609> # multiply-by-constant 4294967295
add in 2 <98037 98609> out 1 <98610>     # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
mul in 2 <98072 98610> out 1 <98611>     # cond trueterm
const-mul-neg-1 in 1 <98072> out 1 <98612> # cond minuscond
add in 2 <100 98612> out 1 <98613>       # cond negcond
mul in 2 <98613 33> out 1 <98614>        # cond falseterm
add in 2 <98611 98614> out 1 <98615>     # cond result
const-mul-ffffffff in 1 <98615> out 1 <98616> # multiply-by-constant 4294967295
add in 2 <98615 34> out 1 <98617>        # ArithBusReq.AddReq(DFG.Conditional,DFG.Input)
split in 1 <98617> outplitBus
const-mul-2 in 1 <98649> out 1 <98849>   # join source bit 31
add in 2 <98648 98849> out 1 <98850>     # join source bit 30
const-mul-2 in 1 <98850> out 1 <98851>   # join
add in 2 <98647 98851> out 1 <98852>     # join source bit 29
const-mul-2 in 1 <98852> out 1 <98853>   # join
add in 2 <98646 98853> out 1 <98854>     # join source bit 28
const-mul-2 in 1 <98854> out 1 <98855>   # join
add in 2 <98645 98855> out 1 <98856>     # join source bit 27
const-mul-2 in 1 <98856> out 1 <98857>   # join
add in 2 <98644 98857> out 1 <98858>     # join source bit 26
const-mul-2 in 1 <98858> out 1 <98859>   # join
add in 2 <98643 98859> out 1 <98860>     # join source bit 25
const-mul-2 in 1 <98860> out 1 <98861>   # join
add in 2 <98642 98861> out 1 <98862>     # join source bit 24
const-mul-2 in 1 <98862> out 1 <98863>   # join
add in 2 <98641 98863> out 1 <98864>     # join source bit 23
const-mul-2 in 1 <98864> out 1 <98865>   # join
add in 2 <98640 98865> out 1 <98866>     # join source bit 22
const-mul-2 in 1 <98866> out 1 <98867>   # join
add in 2 <98639 98867> out 1 <98868>     # join source bit 21
const-mul-2 in 1 <98868> out 1 <98869>   # join
add in 2 <98638 98869> out 1 <98870>     # join source bit 20
const-mul-2 in 1 <98870> out 1 <98871>   # join
add in 2 <98637 98871> out 1 <98872>     # join source bit 19
const-mul-2 in 1 <98872> out 1 <98873>   # join
add in 2 <98636 98873> out 1 <98874>     # join source bit 18
const-mul-2 in 1 <98874> out 1 <98875>   # join
add in 2 <98635 98875> out 1 <98876>     # join source bit 17
const-mul-2 in 1 <98876> out 1 <98877>   # join
add in 2 <98634 98877> out 1 <98878>     # join source bit 16
const-mul-2 in 1 <98878> out 1 <98879>   # join
add in 2 <98633 98879> out 1 <98880>     # join source bit 15
const-mul-2 in 1 <98880> out 1 <98881>   # join
add in 2 <98632 98881> out 1 <98882>     # join source bit 14
const-mul-2 in 1 <98882> out 1 <98883>   # join
add in 2 <98631 98883> out 1 <98884>     # join source bit 13
const-mul-2 in 1 <98884> out 1 <98885>   # join
add in 2 <98630 98885> out 1 <98886>     # join source bit 12
const-mul-2 in 1 <98886> out 1 <98887>   # join
add in 2 <98629 98887> out 1 <98888>     # join source bit 11
const-mul-2 in 1 <98888> out 1 <98889>   # join
add in 2 <98628 98889> out 1 <98890>     # join source bit 10
const-mul-2 in 1 <98890> out 1 <98891>   # join
add in 2 <98627 98891> out 1 <98892>     # join source bit 9
const-mul-2 in 1 <98892> out 1 <98893>   # join
add in 2 <98626 98893> out 1 <98894>     # join source bit 8
const-mul-2 in 1 <98894> out 1 <98895>   # join
add in 2 <98625 98895> out 1 <98896>     # join source bit 7
const-mul-2 in 1 <98896> out 1 <98897>   # join
add in 2 <98624 98897> out 1 <98898>     # join source bit 6
const-mul-2 in 1 <98898> out 1 <98899>   # join
add in 2 <98623 98899> out 1 <98900>     # join source bit 5
const-mul-2 in 1 <98900> out 1 <98901>   # join
add in 2 <98622 98901> out 1 <98902>     # join source bit 4
const-mul-2 in 1 <98902> out 1 <98903>   # join
add in 2 <98621 98903> out 1 <98904>     # join source bit 3
const-mul-2 in 1 <98904> out 1 <98905>   # join
add in 2 <98620 98905> out 1 <98906>     # join source bit 2
const-mul-2 in 1 <98906> out 1 <98907>   # join
add in 2 <98619 98907> out 1 <98908>     # join source bit 1
const-mul-2 in 1 <98908> out 1 <98909>   # join
add in 2 <98618 98909> out 1 <98910>     # join source bit 0
add in 2 <98910 98910> out 1 <98911>     # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <98615> out 1 <98912> # multiply-by-constant 4294967295
add in 2 <34 98912> out 1 <98913>        # 'CmpLT DFG.Input - DFG.Conditional'
split in 1 <98913> outplitBus
mul in 2 <98945 98911> out 1 <99177>     # cond trueterm
const-mul-neg-1 in 1 <98945> out 1 <99178> # cond minuscond
add in 2 <100 99178> out 1 <99179>       # cond negcond
mul in 2 <99179 98615> out 1 <99180>     # cond falseterm
add in 2 <99177 99180> out 1 <99181>     # cond result
add in 2 <98607 99181> out 1 <99182>     # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
split in 1 <99182> outplitBus
const-mul-2 in 1 <99214> out 1 <99416>   # join source bit 31
add in 2 <99213 99416> out 1 <99417>     # join source bit 30
const-mul-2 in 1 <99417> out 1 <99418>   # join
add in 2 <99212 99418> out 1 <99419>     # join source bit 29
const-mul-2 in 1 <99419> out 1 <99420>   # join
add in 2 <99211 99420> out 1 <99421>     # join source bit 28
const-mul-2 in 1 <99421> out 1 <99422>   # join
add in 2 <99210 99422> out 1 <99423>     # join source bit 27
const-mul-2 in 1 <99423> out 1 <99424>   # join
add in 2 <99209 99424> out 1 <99425>     # join source bit 26
const-mul-2 in 1 <99425> out 1 <99426>   # join
add in 2 <99208 99426> out 1 <99427>     # join source bit 25
const-mul-2 in 1 <99427> out 1 <99428>   # join
add in 2 <99207 99428> out 1 <99429>     # join source bit 24
const-mul-2 in 1 <99429> out 1 <99430>   # join
add in 2 <99206 99430> out 1 <99431>     # join source bit 23
const-mul-2 in 1 <99431> out 1 <99432>   # join
add in 2 <99205 99432> out 1 <99433>     # join source bit 22
const-mul-2 in 1 <99433> out 1 <99434>   # join
add in 2 <99204 99434> out 1 <99435>     # join source bit 21
const-mul-2 in 1 <99435> out 1 <99436>   # join
add in 2 <99203 99436> out 1 <99437>     # join source bit 20
const-mul-2 in 1 <99437> out 1 <99438>   # join
add in 2 <99202 99438> out 1 <99439>     # join source bit 19
const-mul-2 in 1 <99439> out 1 <99440>   # join
add in 2 <99201 99440> out 1 <99441>     # join source bit 18
const-mul-2 in 1 <99441> out 1 <99442>   # join
add in 2 <99200 99442> out 1 <99443>     # join source bit 17
const-mul-2 in 1 <99443> out 1 <99444>   # join
add in 2 <99199 99444> out 1 <99445>     # join source bit 16
const-mul-2 in 1 <99445> out 1 <99446>   # join
add in 2 <99198 99446> out 1 <99447>     # join source bit 15
const-mul-2 in 1 <99447> out 1 <99448>   # join
add in 2 <99197 99448> out 1 <99449>     # join source bit 14
const-mul-2 in 1 <99449> out 1 <99450>   # join
add in 2 <99196 99450> out 1 <99451>     # join source bit 13
const-mul-2 in 1 <99451> out 1 <99452>   # join
add in 2 <99195 99452> out 1 <99453>     # join source bit 12
const-mul-2 in 1 <99453> out 1 <99454>   # join
add in 2 <99194 99454> out 1 <99455>     # join source bit 11
const-mul-2 in 1 <99455> out 1 <99456>   # join
add in 2 <99193 99456> out 1 <99457>     # join source bit 10
const-mul-2 in 1 <99457> out 1 <99458>   # join
add in 2 <99192 99458> out 1 <99459>     # join source bit 9
const-mul-2 in 1 <99459> out 1 <99460>   # join
add in 2 <99191 99460> out 1 <99461>     # join source bit 8
const-mul-2 in 1 <99461> out 1 <99462>   # join
add in 2 <99190 99462> out 1 <99463>     # join source bit 7
const-mul-2 in 1 <99463> out 1 <99464>   # join
add in 2 <99189 99464> out 1 <99465>     # join source bit 6
const-mul-2 in 1 <99465> out 1 <99466>   # join
add in 2 <99188 99466> out 1 <99467>     # join source bit 5
const-mul-2 in 1 <99467> out 1 <99468>   # join
add in 2 <99187 99468> out 1 <99469>     # join source bit 4
const-mul-2 in 1 <99469> out 1 <99470>   # join
add in 2 <99186 99470> out 1 <99471>     # join source bit 3
const-mul-2 in 1 <99471> out 1 <99472>   # join
add in 2 <99185 99472> out 1 <99473>     # join source bit 2
const-mul-2 in 1 <99473> out 1 <99474>   # join
add in 2 <99184 99474> out 1 <99475>     # join source bit 1
const-mul-2 in 1 <99475> out 1 <99476>   # join
add in 2 <99183 99476> out 1 <99477>     # join source bit 0
add in 2 <99477 99477> out 1 <99478>     # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <98607> out 1 <99479> # multiply-by-constant 4294967295
add in 2 <99181 99479> out 1 <99480>     # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <99480> outplitBus
mul in 2 <99512 99478> out 1 <99746>     # cond trueterm
const-mul-neg-1 in 1 <99512> out 1 <99747> # cond minuscond
add in 2 <100 99747> out 1 <99748>       # cond negcond
mul in 2 <99748 98607> out 1 <99749>     # cond falseterm
add in 2 <99746 99749> out 1 <99750>     # cond result
mul in 2 <98435 98399> out 1 <99751>     # cond trueterm
const-mul-neg-1 in 1 <98435> out 1 <99752> # cond minuscond
add in 2 <100 99752> out 1 <99753>       # cond negcond
mul in 2 <99753 98396> out 1 <99754>     # cond falseterm
add in 2 <99751 99754> out 1 <99755>     # cond result
mul in 2 <98291 98255> out 1 <99756>     # cond trueterm
const-mul-neg-1 in 1 <98291> out 1 <99757> # cond minuscond
add in 2 <100 99757> out 1 <99758>       # cond negcond
mul in 2 <99758 98252> out 1 <99759>     # cond falseterm
add in 2 <99756 99759> out 1 <99760>     # cond result
const-mul-ffffffff in 1 <99760> out 1 <99761> # multiply-by-constant 4294967295
add in 2 <99760 99755> out 1 <99762>     # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
add in 2 <99762 99761> out 1 <99763>     # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <99763> out 1 <99764> # multiply-by-constant 4294967295
add in 2 <99762 99764> out 1 <99765>     # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <99760> out 1 <99766> # multiply-by-constant 4294967295
add in 2 <99755 99766> out 1 <99767>     # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <99767> out 200 <99768 99769 99770 99771 99772 99773 99774 99775 99776 99777 99778 99779 99780 99781 99782 99783 99784 99785 99786 99787 99788 99789 99790 99791 99792 99793 99794 99795 99796 99797 99798 99799 99800 99801 99802 99803 99804 99805 99806 99807 99808 99809 99810 99811 99812 99813 99814 99815 99816 99817 99818 99819 99820 99821 99822 99823 99824 99825 99826 99827 99828 99829 99830 99831 99832 99833 99834 99835 99836 99837 99838 99839 99840 99841 99842 99843 99844 99845 99846 99847 99848 99849 99850 99851 99852 99853 99854 99855 99856 99857 99858 99859 99860 99861 99862 99863 99864 99865 99866 99867 99868 99869 99870 99871 99872 99873 99874 99875 99876 99877 99878 99879 99880 99881 99882 99883 99884 99885 99886 99887 99888 99889 99890 99891 99892 99893 99894 99895 99896 99897 99898 99899 99900 99901 99902 99903 99904 99905 99906 99907 99908 99909 99910 99911 99912 99913 99914 99915 99916 99917 99918 99919 99920 99921 99922 99923 99924 99925 99926 99927 99928 99929 99930 99931 99932 99933 99934 99935 99936 99937 99938 99939 99940 99941 99942 99943 99944 99945 99946 99947 99948 99949 99950 99951 99952 99953 99954 99955 99956 99957 99958 99959 99960 99961 99962 99963 99964 99965 99966 99967> # SplitBus
mul in 2 <99799 99765> out 1 <99968>     # cond trueterm
const-mul-neg-1 in 1 <99799> out 1 <99969> # cond minuscond
add in 2 <100 99969> out 1 <99970>       # cond negcond
mul in 2 <99970 99755> out 1 <99971>     # cond falseterm
add in 2 <99968 99971> out 1 <99972>     # cond result
const-mul-ffffffff in 1 <99972> out 1 <99973> # multiply-by-constant 4294967295
add in 2 <99972 99750> out 1 <99974>     # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
split in 1 <99974> out 235 <99975 99976 99977 99978 99979 99980 99981 99982 99983 99984 99985 99986 99987 99988 99989 99990 99991 99992 99993 99994 99995 99996 99997 99998 99999 100000 100001 100002 100003 100004 100005 100006 100007 100008 100009 100010 100011 100012 100013 100014 100015 100016 100017 100018 100019 100020 100021 100022 100023 100024 100025 100026 100027 100028 100029 100030 100031 100032 100033 100034 100035 100036 100037 100038 100039 100040 100041 100042 100043 100044 100045 100046 100047 100048 100049 100050 100051 100052 100053 100054 100055 100056 100057 100058 100059 100060 100061 100062 100063 100064 100065 100066 100067 100068 100069 100070 100071 100072 100073 100074 100075 100076 100077 100078 100079 100080 100081 100082 100083 100084 100085 100086 100087 100088 100089 100090 100091 100092 100093 100094 100095 100096 100097 100098 100099 100100 100101 100102 100103 100104 100105 100106 100107 100108 100109 100110 100111 100112 100113 100114 100115 100116 100117 100118 100119 100120 100121 100122 100123 100124 100125 100126 100127 100128 100129 100130 100131 100132 100133 100134 100135 100136 100137 100138 100139 100140 100141 100142 100143 100144 100145 100146 100147 100148 100149 100150 100151 100152 100153 100154 100155 100156 100157 100158 100159 100160 100161 100162 100163 100164 100165 100166 100167 100168 100169 100170 100171 100172 100173 100174 100175 100176 100177 100178 100179 100180 100181 100182 100183 100184 100185 100186 100187 100188 100189 100190 100191 100192 100193 100194 100195 100196 100197 100198 100199 100200 100201 100202 100203 100204 100205 100206 100207 100208 100209> # SplitBus
const-mul-2 in 1 <100006> out 1 <100210> # join source bit 31
add in 2 <100005 100210> out 1 <100211>  # join source bit 30
const-mul-2 in 1 <100211> out 1 <100212> # join
add in 2 <100004 100212> out 1 <100213>  # join source bit 29
const-mul-2 in 1 <100213> out 1 <100214> # join
add in 2 <100003 100214> out 1 <100215>  # join source bit 28
const-mul-2 in 1 <100215> out 1 <100216> # join
add in 2 <100002 100216> out 1 <100217>  # join source bit 27
const-mul-2 in 1 <100217> out 1 <100218> # join
add in 2 <100001 100218> out 1 <100219>  # join source bit 26
const-mul-2 in 1 <100219> out 1 <100220> # join
add in 2 <100000 100220> out 1 <100221>  # join source bit 25
const-mul-2 in 1 <100221> out 1 <100222> # join
add in 2 <99999 100222> out 1 <100223>   # join source bit 24
const-mul-2 in 1 <100223> out 1 <100224> # join
add in 2 <99998 100224> out 1 <100225>   # join source bit 23
const-mul-2 in 1 <100225> out 1 <100226> # join
add in 2 <99997 100226> out 1 <100227>   # join source bit 22
const-mul-2 in 1 <100227> out 1 <100228> # join
add in 2 <99996 100228> out 1 <100229>   # join source bit 21
const-mul-2 in 1 <100229> out 1 <100230> # join
add in 2 <99995 100230> out 1 <100231>   # join source bit 20
const-mul-2 in 1 <100231> out 1 <100232> # join
add in 2 <99994 100232> out 1 <100233>   # join source bit 19
const-mul-2 in 1 <100233> out 1 <100234> # join
add in 2 <99993 100234> out 1 <100235>   # join source bit 18
const-mul-2 in 1 <100235> out 1 <100236> # join
add in 2 <99992 100236> out 1 <100237>   # join source bit 17
const-mul-2 in 1 <100237> out 1 <100238> # join
add in 2 <99991 100238> out 1 <100239>   # join source bit 16
const-mul-2 in 1 <100239> out 1 <100240> # join
add in 2 <99990 100240> out 1 <100241>   # join source bit 15
const-mul-2 in 1 <100241> out 1 <100242> # join
add in 2 <99989 100242> out 1 <100243>   # join source bit 14
const-mul-2 in 1 <100243> out 1 <100244> # join
add in 2 <99988 100244> out 1 <100245>   # join source bit 13
const-mul-2 in 1 <100245> out 1 <100246> # join
add in 2 <99987 100246> out 1 <100247>   # join source bit 12
const-mul-2 in 1 <100247> out 1 <100248> # join
add in 2 <99986 100248> out 1 <100249>   # join source bit 11
const-mul-2 in 1 <100249> out 1 <100250> # join
add in 2 <99985 100250> out 1 <100251>   # join source bit 10
const-mul-2 in 1 <100251> out 1 <100252> # join
add in 2 <99984 100252> out 1 <100253>   # join source bit 9
const-mul-2 in 1 <100253> out 1 <100254> # join
add in 2 <99983 100254> out 1 <100255>   # join source bit 8
const-mul-2 in 1 <100255> out 1 <100256> # join
add in 2 <99982 100256> out 1 <100257>   # join source bit 7
const-mul-2 in 1 <100257> out 1 <100258> # join
add in 2 <99981 100258> out 1 <100259>   # join source bit 6
const-mul-2 in 1 <100259> out 1 <100260> # join
add in 2 <99980 100260> out 1 <100261>   # join source bit 5
const-mul-2 in 1 <100261> out 1 <100262> # join
add in 2 <99979 100262> out 1 <100263>   # join source bit 4
const-mul-2 in 1 <100263> out 1 <100264> # join
add in 2 <99978 100264> out 1 <100265>   # join source bit 3
const-mul-2 in 1 <100265> out 1 <100266> # join
add in 2 <99977 100266> out 1 <100267>   # join source bit 2
const-mul-2 in 1 <100267> out 1 <100268> # join
add in 2 <99976 100268> out 1 <100269>   # join source bit 1
const-mul-2 in 1 <100269> out 1 <100270> # join
add in 2 <99975 100270> out 1 <100271>   # join source bit 0
add in 2 <100271 100271> out 1 <100272>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <100272> out 1 <100273> # multiply-by-constant 4294967295
add in 2 <99974 100273> out 1 <100274>   # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <99972> out 1 <100275> # multiply-by-constant 4294967295
add in 2 <99750 100275> out 1 <100276>   # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <100276> out 267 <100277 100278 100279 100280 100281 100282 100283 100284 100285 100286 100287 100288 100289 100290 100291 100292 100293 100294 100295 100296 100297 100298 100299 100300 100301 100302 100303 100304 100305 100306 100307 100308 100309 100310 100311 100312 100313 100314 100315 100316 100317 100318 100319 100320 100321 100322 100323 100324 100325 100326 100327 100328 100329 100330 100331 100332 100333 100334 100335 100336 100337 100338 100339 100340 100341 100342 100343 100344 100345 100346 100347 100348 100349 100350 100351 100352 100353 100354 100355 100356 100357 100358 100359 100360 100361 100362 100363 100364 100365 100366 100367 100368 100369 100370 100371 100372 100373 100374 100375 100376 100377 100378 100379 100380 100381 100382 100383 100384 100385 100386 100387 100388 100389 100390 100391 100392 100393 100394 100395 100396 100397 100398 100399 100400 100401 100402 100403 100404 100405 100406 100407 100408 100409 100410 100411 100412 100413 100414 100415 100416 100417 100418 100419 100420 100421 100422 100423 100424 100425 100426 100427 100428 100429 100430 100431 100432 100433 100434 100435 100436 100437 100438 100439 100440 100441 100442 100443 100444 100445 100446 100447 100448 100449 100450 100451 100452 100453 100454 100455 100456 100457 100458 100459 100460 100461 100462 100463 100464 100465 100466 100467 100468 100469 100470 100471 100472 100473 100474 100475 100476 100477 100478 100479 100480 100481 100482 100483 100484 100485 100486 100487 100488 100489 100490 100491 100492 100493 100494 100495 100496 100497 100498 100499 100500 100501 100502 100503 100504 100505 100506 100507 100508 100509 100510 100511 100512 100513 100514 100515 100516 100517 100518 100519 100520 100521 100522 100523 100524 100525 100526 100527 100528 100529 100530 100531 100532 100533 100534 100535 100536 100537 100538 100539 100540 100541 100542 100543> # SplitBus
mul in 2 <100308 100274> out 1 <100544>  # cond trueterm
const-mul-neg-1 in 1 <100308> out 1 <100545> # cond minuscond
add in 2 <100 100545> out 1 <100546>     # cond negcond
mul in 2 <100546 99750> out 1 <100547>   # cond falseterm
add in 2 <100544 100547> out 1 <100548>  # cond result
add in 2 <100548 104> out 1 <100549>     # ArithBusReq.AddReq(DFG.Conditional,DFG.Constant)
const-mul-ffffffff in 1 <32> out 1 <100550> # multiply-by-constant 4294967295
add in 2 <100549 100550> out 1 <100551>  # 'CmpLT DFG.Add - DFG.Input'
split in 1 <100551> out 238 <100552 100553 100554 100555 100556 100557 100558 100559 100560 100561 100562 100563 100564 100565 100566 100567 100568 100569 100570 100571 100572 100573 100574 100575 100576 100577 100578 100579 100580 100581 100582 100583 100584 100585 100586 100587 100588 100589 100590 100591 100592 100593 100594 100595 100596 100597 100598 100599 100600 100601 100602 100603 100604 100605 100606 100607 100608 100609 100610 100611 100612 100613 100614 100615 100616 100617 100618 100619 100620 100621 100622 100623 100624 100625 100626 100627 100628 100629 100630 100631 100632 100633 100634 100635 100636 100637 100638 100639 100640 100641 100642 100643 100644 100645 100646 100647 100648 100649 100650 100651 100652 100653 100654 100655 100656 100657 100658 100659 100660 100661 100662 100663 100664 100665 100666 100667 100668 100669 100670 100671 100672 100673 100674 100675 100676 100677 100678 100679 100680 100681 100682 100683 100684 100685 100686 100687 100688 100689 100690 100691 100692 100693 100694 100695 100696 100697 100698 100699 100700 100701 100702 100703 100704 100705 100706 100707 100708 100709 100710 100711 100712 100713 100714 100715 100716 100717 100718 100719 100720 100721 100722 100723 100724 100725 100726 100727 100728 100729 100730 100731 100732 100733 100734 100735 100736 100737 100738 100739 100740 100741 100742 100743 100744 100745 100746 100747 100748 100749 100750 100751 100752 100753 100754 100755 100756 100757 100758 100759 100760 100761 100762 100763 100764 100765 100766 100767 100768 100769 100770 100771 100772 100773 100774 100775 100776 100777 100778 100779 100780 100781 100782 100783 100784 100785 100786 100787 100788 100789> # SplitBus
mul in 2 <100583 103> out 1 <100790>     # cond trueterm
const-mul-neg-1 in 1 <100583> out 1 <100791> # cond minuscond
add in 2 <100 100791> out 1 <100792>     # cond negcond
mul in 2 <100792 102> out 1 <100793>     # cond falseterm
add in 2 <100790 100793> out 1 <100794>  # cond result
add in 2 <100548 3084> out 1 <100795>    # ArithBusReq.AddReq(DFG.Conditional,DFG.Negate)
const-mul-ffffffff in 1 <100795> out 1 <100796> # multiply-by-constant 4294967295
add in 2 <32 100796> out 1 <100797>      # 'CmpLT DFG.Input - DFG.Subtract'
split in 1 <100797> outplitBus
mul in 2 <100829 103> out 1 <101068>     # cond trueterm
const-mul-neg-1 in 1 <100829> out 1 <101069> # cond minuscond
add in 2 <100 101069> out 1 <101070>     # cond negcond
mul in 2 <101070 100794> out 1 <101071>  # cond falseterm
add in 2 <101068 101071> out 1 <101072>  # cond result
const-mul-ffffffff in 1 <31> out 1 <101073> # multiply-by-constant 4294967295
add in 2 <31 32> out 1 <101074>          # ArithBusReq.AddReq(DFG.Input,DFG.Input)
add in 2 <101074 101073> out 1 <101075>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <101075> out 1 <101076> # multiply-by-constant 4294967295
add in 2 <101074 101076> out 1 <101077>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <31> out 1 <101078> # multiply-by-constant 4294967295
add in 2 <32 101078> out 1 <101079>      # 'CmpLT DFG.Input - DFG.Input'
split in 1 <101079> out 65 <101080 101081 101082 101083 101084 101085 101086 101087 101088 101089 101090 101091 101092 101093 101094 101095 101096 101097 101098 101099 101100 101101 101102 101103 101104 101105 101106 101107 101108 101109 101110 101111 101112 101113 101114 101115 101116 101117 101118 101119 101120 101121 101122 101123 101124 101125 101126 101127 101128 101129 101130 101131 101132 101133 101134 101135 101136 101137 101138 101139 101140 101141 101142 101143 101144> # SplitBus
mul in 2 <101111 101077> out 1 <101145>  # cond trueterm
const-mul-neg-1 in 1 <101111> out 1 <101146> # cond minuscond
add in 2 <100 101146> out 1 <101147>     # cond negcond
mul in 2 <101147 32> out 1 <101148>      # cond falseterm
add in 2 <101145 101148> out 1 <101149>  # cond result
const-mul-ffffffff in 1 <101149> out 1 <101150> # multiply-by-constant 4294967295
add in 2 <101149 33> out 1 <101151>      # ArithBusReq.AddReq(DFG.Conditional,DFG.Input)
add in 2 <101151 101150> out 1 <101152>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <101152> out 1 <101153> # multiply-by-constant 4294967295
add in 2 <101151 101153> out 1 <101154>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <101149> out 1 <101155> # multiply-by-constant 4294967295
add in 2 <33 101155> out 1 <101156>      # 'CmpLT DFG.Input - DFG.Conditional'
split in 1 <101156> out 131 <101157 101158 101159 101160 101161 101162 101163 101164 101165 101166 101167 101168 101169 101170 101171 101172 101173 101174 101175 101176 101177 101178 101179 101180 101181 101182 101183 101184 101185 101186 101187 101188 101189 101190 101191 101192 101193 101194 101195 101196 101197 101198 101199 101200 101201 101202 101203 101204 101205 101206 101207 101208 101209 101210 101211 101212 101213 101214 101215 101216 101217 101218 101219 101220 101221 101222 101223 101224 101225 101226 101227 101228 101229 101230 101231 101232 101233 101234 101235 101236 101237 101238 101239 101240 101241 101242 101243 101244 101245 101246 101247 101248 101249 101250 101251 101252 101253 101254 101255 101256 101257 101258 101259 101260 101261 101262 101263 101264 101265 101266 101267 101268 101269 101270 101271 101272 101273 101274 101275 101276 101277 101278 101279 101280 101281 101282 101283 101284 101285 101286 101287> # SplitBus
mul in 2 <101188 101154> out 1 <101288>  # cond trueterm
const-mul-neg-1 in 1 <101188> out 1 <101289> # cond minuscond
add in 2 <100 101289> out 1 <101290>     # cond negcond
mul in 2 <101290 33> out 1 <101291>      # cond falseterm
add in 2 <101288 101291> out 1 <101292>  # cond result
const-mul-ffffffff in 1 <101292> out 1 <101293> # multiply-by-constant 4294967295
add in 2 <101292 34> out 1 <101294>      # ArithBusReq.AddReq(DFG.Conditional,DFG.Input)
add in 2 <101294 101293> out 1 <101295>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <101292> out 1 <101296> # multiply-by-constant 4294967295
add in 2 <34 101296> out 1 <101297>      # 'CmpLT DFG.Input - DFG.Conditional'
split in 1 <101297> out 197 <101298 101299 101300 101301 101302 101303 101304 101305 101306 101307 101308 101309 101310 101311 101312 101313 101314 101315 101316 101317 101318 101319 101320 101321 101322 101323 101324 101325 101326 101327 101328 101329 101330 101331 101332 101333 101334 101335 101336 101337 101338 101339 101340 101341 101342 101343 101344 101345 101346 101347 101348 101349 101350 101351 101352 101353 101354 101355 101356 101357 101358 101359 101360 101361 101362 101363 101364 101365 101366 101367 101368 101369 101370 101371 101372 101373 101374 101375 101376 101377 101378 101379 101380 101381 101382 101383 101384 101385 101386 101387 101388 101389 101390 101391 101392 101393 101394 101395 101396 101397 101398 101399 101400 101401 101402 101403 101404 101405 101406 101407 101408 101409 101410 101411 101412 101413 101414 101415 101416 101417 101418 101419 101420 101421 101422 101423 101424 101425 101426 101427 101428 101429 101430 101431 101432 101433 101434 101435 101436 101437 101438 101439 101440 101441 101442 101443 101444 101445 101446 101447 101448 101449 101450 101451 101452 101453 101454 101455 101456 101457 101458 101459 101460 101461 101462 101463 101464 101465 101466 101467 101468 101469 101470 101471 101472 101473 101474 101475 101476 101477 101478 101479 101480 101481 101482 101483 101484 101485 101486 101487 101488 101489 101490 101491 101492 101493 101494> # SplitBus
mul in 2 <101329 101295> out 1 <101495>  # cond trueterm
const-mul-neg-1 in 1 <101329> out 1 <101496> # cond minuscond
add in 2 <100 101496> out 1 <101497>     # cond negcond
mul in 2 <101497 101292> out 1 <101498>  # cond falseterm
add in 2 <101495 101498> out 1 <101499>  # cond result
mul in 2 <101188 101152> out 1 <101500>  # cond trueterm
const-mul-neg-1 in 1 <101188> out 1 <101501> # cond minuscond
add in 2 <100 101501> out 1 <101502>     # cond negcond
mul in 2 <101502 101149> out 1 <101503>  # cond falseterm
add in 2 <101500 101503> out 1 <101504>  # cond result
mul in 2 <101111 101075> out 1 <101505>  # cond trueterm
const-mul-neg-1 in 1 <101111> out 1 <101506> # cond minuscond
add in 2 <100 101506> out 1 <101507>     # cond negcond
mul in 2 <101507 31> out 1 <101508>      # cond falseterm
add in 2 <101505 101508> out 1 <101509>  # cond result
const-mul-ffffffff in 1 <101509> out 1 <101510> # multiply-by-constant 4294967295
add in 2 <101509 101504> out 1 <101511>  # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
add in 2 <101511 101510> out 1 <101512>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <101512> out 1 <101513> # multiply-by-constant 4294967295
add in 2 <101511 101513> out 1 <101514>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <101509> out 1 <101515> # multiply-by-constant 4294967295
add in 2 <101504 101515> out 1 <101516>  # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <101516> out 132 <101517 101518 101519 101520 101521 101522 101523 101524 101525 101526 101527 101528 101529 101530 101531 101532 101533 101534 101535 101536 101537 101538 101539 101540 101541 101542 101543 101544 101545 101546 101547 101548 101549 101550 101551 101552 101553 101554 101555 101556 101557 101558 101559 101560 101561 101562 101563 101564 101565 101566 101567 101568 101569 101570 101571 101572 101573 101574 101575 101576 101577 101578 101579 101580 101581 101582 101583 101584 101585 101586 101587 101588 101589 101590 101591 101592 101593 101594 101595 101596 101597 101598 101599 101600 101601 101602 101603 101604 101605 101606 101607 101608 101609 101610 101611 101612 101613 101614 101615 101616 101617 101618 101619 101620 101621 101622 101623 101624 101625 101626 101627 101628 101629 101630 101631 101632 101633 101634 101635 101636 101637 101638 101639 101640 101641 101642 101643 101644 101645 101646 101647 101648> # SplitBus
mul in 2 <101548 101514> out 1 <101649>  # cond trueterm
const-mul-neg-1 in 1 <101548> out 1 <101650> # cond minuscond
add in 2 <100 101650> out 1 <101651>     # cond negcond
mul in 2 <101651 101504> out 1 <101652>  # cond falseterm
add in 2 <101649 101652> out 1 <101653>  # cond result
const-mul-ffffffff in 1 <101653> out 1 <101654> # multiply-by-constant 4294967295
add in 2 <101653 101499> out 1 <101655>  # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
add in 2 <101655 101654> out 1 <101656>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <101656> out 1 <101657> # multiply-by-constant 4294967295
add in 2 <101655 101657> out 1 <101658>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <101653> out 1 <101659> # multiply-by-constant 4294967295
add in 2 <101499 101659> out 1 <101660>  # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <101660> out 199 <101661 101662 101663 101664 101665 101666 101667 101668 101669 101670 101671 101672 101673 101674 101675 101676 101677 101678 101679 101680 101681 101682 101683 101684 101685 101686 101687 101688 101689 101690 101691 101692 101693 101694 101695 101696 101697 101698 101699 101700 101701 101702 101703 101704 101705 101706 101707 101708 101709 101710 101711 101712 101713 101714 101715 101716 101717 101718 101719 101720 101721 101722 101723 101724 101725 101726 101727 101728 101729 101730 101731 101732 101733 101734 101735 101736 101737 101738 101739 101740 101741 101742 101743 101744 101745 101746 101747 101748 101749 101750 101751 101752 101753 101754 101755 101756 101757 101758 101759 101760 101761 101762 101763 101764 101765 101766 101767 101768 101769 101770 101771 101772 101773 101774 101775 101776 101777 101778 101779 101780 101781 101782 101783 101784 101785 101786 101787 101788 101789 101790 101791 101792 101793 101794 101795 101796 101797 101798 101799 101800 101801 101802 101803 101804 101805 101806 101807 101808 101809 101810 101811 101812 101813 101814 101815 101816 101817 101818 101819 101820 101821 101822 101823 101824 101825 101826 101827 101828 101829 101830 101831 101832 101833 101834 101835 101836 101837 101838 101839 101840 101841 101842 101843 101844 101845 101846 101847 101848 101849 101850 101851 101852 101853 101854 101855 101856 101857 101858 101859> # SplitBus
mul in 2 <101692 101658> out 1 <101860>  # cond trueterm
const-mul-neg-1 in 1 <101692> out 1 <101861> # cond minuscond
add in 2 <100 101861> out 1 <101862>     # cond negcond
mul in 2 <101862 101499> out 1 <101863>  # cond falseterm
add in 2 <101860 101863> out 1 <101864>  # cond result
const-mul-ffffffff in 1 <101864> out 1 <101865> # multiply-by-constant 4294967295
const-mul-ffffffff in 1 <101295> out 1 <101866> # multiply-by-constant 4294967295
add in 2 <101294 101866> out 1 <101867>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
mul in 2 <101329 101867> out 1 <101868>  # cond trueterm
const-mul-neg-1 in 1 <101329> out 1 <101869> # cond minuscond
add in 2 <100 101869> out 1 <101870>     # cond negcond
mul in 2 <101870 34> out 1 <101871>      # cond falseterm
add in 2 <101868 101871> out 1 <101872>  # cond result
const-mul-ffffffff in 1 <101872> out 1 <101873> # multiply-by-constant 4294967295
add in 2 <101872 35> out 1 <101874>      # ArithBusReq.AddReq(DFG.Conditional,DFG.Input)
split in 1 <101874> out 231 <101875 101876 101877 101878 101879 101880 101881 101882 101883 101884 101885 101886 101887 101888 101889 101890 101891 101892 101893 101894 101895 101896 101897 101898 101899 101900 101901 101902 101903 101904 101905 101906 101907 101908 101909 101910 101911 101912 101913 101914 101915 101916 101917 101918 101919 101920 101921 101922 101923 101924 101925 101926 101927 101928 101929 101930 101931 101932 101933 101934 101935 101936 101937 101938 101939 101940 101941 101942 101943 101944 101945 101946 101947 101948 101949 101950 101951 101952 101953 101954 101955 101956 101957 101958 101959 101960 101961 101962 101963 101964 101965 101966 101967 101968 101969 101970 101971 101972 101973 101974 101975 101976 101977 101978 101979 101980 101981 101982 101983 101984 101985 101986 101987 101988 101989 101990 101991 101992 101993 101994 101995 101996 101997 101998 101999 102000 102001 102002 102003 102004 102005 102006 102007 102008 102009 102010 102011 102012 102013 102014 102015 102016 102017 102018 102019 102020 102021 102022 102023 102024 102025 102026 102027 102028 102029 102030 102031 102032 102033 102034 102035 102036 102037 102038 102039 102040 102041 102042 102043 102044 102045 102046 102047 102048 102049 102050 102051 102052 102053 102054 102055 102056 102057 102058 102059 102060 102061 102062 102063 102064 102065 102066 102067 102068 102069 102070 102071 102072 102073 102074 102075 102076 102077 102078 102079 102080 102081 102082 102083 102084 102085 102086 102087 102088 102089 102090 102091 102092 102093 102094 102095 102096 102097 102098 102099 102100 102101 102102 102103 102104 102105> # SplitBus
const-mul-2 in 1 <101906> out 1 <102106> # join source bit 31
add in 2 <101905 102106> out 1 <102107>  # join source bit 30
const-mul-2 in 1 <102107> out 1 <102108> # join
add in 2 <101904 102108> out 1 <102109>  # join source bit 29
const-mul-2 in 1 <102109> out 1 <102110> # join
add in 2 <101903 102110> out 1 <102111>  # join source bit 28
const-mul-2 in 1 <102111> out 1 <102112> # join
add in 2 <101902 102112> out 1 <102113>  # join source bit 27
const-mul-2 in 1 <102113> out 1 <102114> # join
add in 2 <101901 102114> out 1 <102115>  # join source bit 26
const-mul-2 in 1 <102115> out 1 <102116> # join
add in 2 <101900 102116> out 1 <102117>  # join source bit 25
const-mul-2 in 1 <102117> out 1 <102118> # join
add in 2 <101899 102118> out 1 <102119>  # join source bit 24
const-mul-2 in 1 <102119> out 1 <102120> # join
add in 2 <101898 102120> out 1 <102121>  # join source bit 23
const-mul-2 in 1 <102121> out 1 <102122> # join
add in 2 <101897 102122> out 1 <102123>  # join source bit 22
const-mul-2 in 1 <102123> out 1 <102124> # join
add in 2 <101896 102124> out 1 <102125>  # join source bit 21
const-mul-2 in 1 <102125> out 1 <102126> # join
add in 2 <101895 102126> out 1 <102127>  # join source bit 20
const-mul-2 in 1 <102127> out 1 <102128> # join
add in 2 <101894 102128> out 1 <102129>  # join source bit 19
const-mul-2 in 1 <102129> out 1 <102130> # join
add in 2 <101893 102130> out 1 <102131>  # join source bit 18
const-mul-2 in 1 <102131> out 1 <102132> # join
add in 2 <101892 102132> out 1 <102133>  # join source bit 17
const-mul-2 in 1 <102133> out 1 <102134> # join
add in 2 <101891 102134> out 1 <102135>  # join source bit 16
const-mul-2 in 1 <102135> out 1 <102136> # join
add in 2 <101890 102136> out 1 <102137>  # join source bit 15
const-mul-2 in 1 <102137> out 1 <102138> # join
add in 2 <101889 102138> out 1 <102139>  # join source bit 14
const-mul-2 in 1 <102139> out 1 <102140> # join
add in 2 <101888 102140> out 1 <102141>  # join source bit 13
const-mul-2 in 1 <102141> out 1 <102142> # join
add in 2 <101887 102142> out 1 <102143>  # join source bit 12
const-mul-2 in 1 <102143> out 1 <102144> # join
add in 2 <101886 102144> out 1 <102145>  # join source bit 11
const-mul-2 in 1 <102145> out 1 <102146> # join
add in 2 <101885 102146> out 1 <102147>  # join source bit 10
const-mul-2 in 1 <102147> out 1 <102148> # join
add in 2 <101884 102148> out 1 <102149>  # join source bit 9
const-mul-2 in 1 <102149> out 1 <102150> # join
add in 2 <101883 102150> out 1 <102151>  # join source bit 8
const-mul-2 in 1 <102151> out 1 <102152> # join
add in 2 <101882 102152> out 1 <102153>  # join source bit 7
const-mul-2 in 1 <102153> out 1 <102154> # join
add in 2 <101881 102154> out 1 <102155>  # join source bit 6
const-mul-2 in 1 <102155> out 1 <102156> # join
add in 2 <101880 102156> out 1 <102157>  # join source bit 5
const-mul-2 in 1 <102157> out 1 <102158> # join
add in 2 <101879 102158> out 1 <102159>  # join source bit 4
const-mul-2 in 1 <102159> out 1 <102160> # join
add in 2 <101878 102160> out 1 <102161>  # join source bit 3
const-mul-2 in 1 <102161> out 1 <102162> # join
add in 2 <101877 102162> out 1 <102163>  # join source bit 2
const-mul-2 in 1 <102163> out 1 <102164> # join
add in 2 <101876 102164> out 1 <102165>  # join source bit 1
const-mul-2 in 1 <102165> out 1 <102166> # join
add in 2 <101875 102166> out 1 <102167>  # join source bit 0
add in 2 <102167 102167> out 1 <102168>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <101872> out 1 <102169> # multiply-by-constant 4294967295
add in 2 <35 102169> out 1 <102170>      # 'CmpLT DFG.Input - DFG.Conditional'
split in 1 <102170> out 263 <102171 102172 102173 102174 102175 102176 102177 102178 102179 102180 102181 102182 102183 102184 102185 102186 102187 102188 102189 102190 102191 102192 102193 102194 102195 102196 102197 102198 102199 102200 102201 102202 102203 102204 102205 102206 102207 102208 102209 102210 102211 102212 102213 102214 102215 102216 102217 102218 102219 102220 102221 102222 102223 102224 102225 102226 102227 102228 102229 102230 102231 102232 102233 102234 102235 102236 102237 102238 102239 102240 102241 102242 102243 102244 102245 102246 102247 102248 102249 102250 102251 102252 102253 102254 102255 102256 102257 102258 102259 102260 102261 102262 102263 102264 102265 102266 102267 102268 102269 102270 102271 102272 102273 102274 102275 102276 102277 102278 102279 102280 102281 102282 102283 102284 102285 102286 102287 102288 102289 102290 102291 102292 102293 102294 102295 102296 102297 102298 102299 102300 102301 102302 102303 102304 102305 102306 102307 102308 102309 102310 102311 102312 102313 102314 102315 102316 102317 102318 102319 102320 102321 102322 102323 102324 102325 102326 102327 102328 102329 102330 102331 102332 102333 102334 102335 102336 102337 102338 102339 102340 102341 102342 102343 102344 102345 102346 102347 102348 102349 102350 102351 102352 102353 102354 102355 102356 102357 102358 102359 102360 102361 102362 102363 102364 102365 102366 102367 102368 102369 102370 102371 102372 102373 102374 102375 102376 102377 102378 102379 102380 102381 102382 102383 102384 102385 102386 102387 102388 102389 102390 102391 102392 102393 102394 102395 102396 102397 102398 102399 102400 102401 102402 102403 102404 102405 102406 102407 102408 102409 102410 102411 102412 102413 102414 102415 102416 102417 102418 102419 102420 102421 102422 102423 102424 102425 102426 102427 102428 102429 102430 102431 102432 102433> # SplitBus
mul in 2 <102202 102168> out 1 <102434>  # cond trueterm
const-mul-neg-1 in 1 <102202> out 1 <102435> # cond minuscond
add in 2 <100 102435> out 1 <102436>     # cond negcond
mul in 2 <102436 101872> out 1 <102437>  # cond falseterm
add in 2 <102434 102437> out 1 <102438>  # cond result
add in 2 <101864 102438> out 1 <102439>  # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
split in 1 <102439> out 233 <102440 102441 102442 102443 102444 102445 102446 102447 102448 102449 102450 102451 102452 102453 102454 102455 102456 102457 102458 102459 102460 102461 102462 102463 102464 102465 102466 102467 102468 102469 102470 102471 102472 102473 102474 102475 102476 102477 102478 102479 102480 102481 102482 102483 102484 102485 102486 102487 102488 102489 102490 102491 102492 102493 102494 102495 102496 102497 102498 102499 102500 102501 102502 102503 102504 102505 102506 102507 102508 102509 102510 102511 102512 102513 102514 102515 102516 102517 102518 102519 102520 102521 102522 102523 102524 102525 102526 102527 102528 102529 102530 102531 102532 102533 102534 102535 102536 102537 102538 102539 102540 102541 102542 102543 102544 102545 102546 102547 102548 102549 102550 102551 102552 102553 102554 102555 102556 102557 102558 102559 102560 102561 102562 102563 102564 102565 102566 102567 102568 102569 102570 102571 102572 102573 102574 102575 102576 102577 102578 102579 102580 102581 102582 102583 102584 102585 102586 102587 102588 102589 102590 102591 102592 102593 102594 102595 102596 102597 102598 102599 102600 102601 102602 102603 102604 102605 102606 102607 102608 102609 102610 102611 102612 102613 102614 102615 102616 102617 102618 102619 102620 102621 102622 102623 102624 102625 102626 102627 102628 102629 102630 102631 102632 102633 102634 102635 102636 102637 102638 102639 102640 102641 102642 102643 102644 102645 102646 102647 102648 102649 102650 102651 102652 102653 102654 102655 102656 102657 102658 102659 102660 102661 102662 102663 102664 102665 102666 102667 102668 102669 102670 102671 102672> # SplitBus
const-mul-2 in 1 <102471> out 1 <102673> # join source bit 31
add in 2 <102470 102673> out 1 <102674>  # join source bit 30
const-mul-2 in 1 <102674> out 1 <102675> # join
add in 2 <102469 102675> out 1 <102676>  # join source bit 29
const-mul-2 in 1 <102676> out 1 <102677> # join
add in 2 <102468 102677> out 1 <102678>  # join source bit 28
const-mul-2 in 1 <102678> out 1 <102679> # join
add in 2 <102467 102679> out 1 <102680>  # join source bit 27
const-mul-2 in 1 <102680> out 1 <102681> # join
add in 2 <102466 102681> out 1 <102682>  # join source bit 26
const-mul-2 in 1 <102682> out 1 <102683> # join
add in 2 <102465 102683> out 1 <102684>  # join source bit 25
const-mul-2 in 1 <102684> out 1 <102685> # join
add in 2 <102464 102685> out 1 <102686>  # join source bit 24
const-mul-2 in 1 <102686> out 1 <102687> # join
add in 2 <102463 102687> out 1 <102688>  # join source bit 23
const-mul-2 in 1 <102688> out 1 <102689> # join
add in 2 <102462 102689> out 1 <102690>  # join source bit 22
const-mul-2 in 1 <102690> out 1 <102691> # join
add in 2 <102461 102691> out 1 <102692>  # join source bit 21
const-mul-2 in 1 <102692> out 1 <102693> # join
add in 2 <102460 102693> out 1 <102694>  # join source bit 20
const-mul-2 in 1 <102694> out 1 <102695> # join
add in 2 <102459 102695> out 1 <102696>  # join source bit 19
const-mul-2 in 1 <102696> out 1 <102697> # join
add in 2 <102458 102697> out 1 <102698>  # join source bit 18
const-mul-2 in 1 <102698> out 1 <102699> # join
add in 2 <102457 102699> out 1 <102700>  # join source bit 17
const-mul-2 in 1 <102700> out 1 <102701> # join
add in 2 <102456 102701> out 1 <102702>  # join source bit 16
const-mul-2 in 1 <102702> out 1 <102703> # join
add in 2 <102455 102703> out 1 <102704>  # join source bit 15
const-mul-2 in 1 <102704> out 1 <102705> # join
add in 2 <102454 102705> out 1 <102706>  # join source bit 14
const-mul-2 in 1 <102706> out 1 <102707> # join
add in 2 <102453 102707> out 1 <102708>  # join source bit 13
const-mul-2 in 1 <102708> out 1 <102709> # join
add in 2 <102452 102709> out 1 <102710>  # join source bit 12
const-mul-2 in 1 <102710> out 1 <102711> # join
add in 2 <102451 102711> out 1 <102712>  # join source bit 11
const-mul-2 in 1 <102712> out 1 <102713> # join
add in 2 <102450 102713> out 1 <102714>  # join source bit 10
const-mul-2 in 1 <102714> out 1 <102715> # join
add in 2 <102449 102715> out 1 <102716>  # join source bit 9
const-mul-2 in 1 <102716> out 1 <102717> # join
add in 2 <102448 102717> out 1 <102718>  # join source bit 8
const-mul-2 in 1 <102718> out 1 <102719> # join
add in 2 <102447 102719> out 1 <102720>  # join source bit 7
const-mul-2 in 1 <102720> out 1 <102721> # join
add in 2 <102446 102721> out 1 <102722>  # join source bit 6
const-mul-2 in 1 <102722> out 1 <102723> # join
add in 2 <102445 102723> out 1 <102724>  # join source bit 5
const-mul-2 in 1 <102724> out 1 <102725> # join
add in 2 <102444 102725> out 1 <102726>  # join source bit 4
const-mul-2 in 1 <102726> out 1 <102727> # join
add in 2 <102443 102727> out 1 <102728>  # join source bit 3
const-mul-2 in 1 <102728> out 1 <102729> # join
add in 2 <102442 102729> out 1 <102730>  # join source bit 2
const-mul-2 in 1 <102730> out 1 <102731> # join
add in 2 <102441 102731> out 1 <102732>  # join source bit 1
const-mul-2 in 1 <102732> out 1 <102733> # join
add in 2 <102440 102733> out 1 <102734>  # join source bit 0
add in 2 <102734 102734> out 1 <102735>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <101864> out 1 <102736> # multiply-by-constant 4294967295
add in 2 <102438 102736> out 1 <102737>  # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <102737> out 265 <102738 102739 102740 102741 102742 102743 102744 102745 102746 102747 102748 102749 102750 102751 102752 102753 102754 102755 102756 102757 102758 102759 102760 102761 102762 102763 102764 102765 102766 102767 102768 102769 102770 102771 102772 102773 102774 102775 102776 102777 102778 102779 102780 102781 102782 102783 102784 102785 102786 102787 102788 102789 102790 102791 102792 102793 102794 102795 102796 102797 102798 102799 102800 102801 102802 102803 102804 102805 102806 102807 102808 102809 102810 102811 102812 102813 102814 102815 102816 102817 102818 102819 102820 102821 102822 102823 102824 102825 102826 102827 102828 102829 102830 102831 102832 102833 102834 102835 102836 102837 102838 102839 102840 102841 102842 102843 102844 102845 102846 102847 102848 102849 102850 102851 102852 102853 102854 102855 102856 102857 102858 102859 102860 102861 102862 102863 102864 102865 102866 102867 102868 102869 102870 102871 102872 102873 102874 102875 102876 102877 102878 102879 102880 102881 102882 102883 102884 102885 102886 102887 102888 102889 102890 102891 102892 102893 102894 102895 102896 102897 102898 102899 102900 102901 102902 102903 102904 102905 102906 102907 102908 102909 102910 102911 102912 102913 102914 102915 102916 102917 102918 102919 102920 102921 102922 102923 102924 102925 102926 102927 102928 102929 102930 102931 102932 102933 102934 102935 102936 102937 102938 102939 102940 102941 102942 102943 102944 102945 102946 102947 102948 102949 102950 102951 102952 102953 102954 102955 102956 102957 102958 102959 102960 102961 102962 102963 102964 102965 102966 102967 102968 102969 102970 102971 102972 102973 102974 102975 102976 102977 102978 102979 102980 102981 102982 102983 102984 102985 102986 102987 102988 102989 102990 102991 102992 102993 102994 102995 102996 102997 102998 102999 103000 103001 103002> # SplitBus
mul in 2 <102769 102735> out 1 <103003>  # cond trueterm
const-mul-neg-1 in 1 <102769> out 1 <103004> # cond minuscond
add in 2 <100 103004> out 1 <103005>     # cond negcond
mul in 2 <103005 101864> out 1 <103006>  # cond falseterm
add in 2 <103003 103006> out 1 <103007>  # cond result
mul in 2 <101692 101656> out 1 <103008>  # cond trueterm
const-mul-neg-1 in 1 <101692> out 1 <103009> # cond minuscond
add in 2 <100 103009> out 1 <103010>     # cond negcond
mul in 2 <103010 101653> out 1 <103011>  # cond falseterm
add in 2 <103008 103011> out 1 <103012>  # cond result
mul in 2 <101548 101512> out 1 <103013>  # cond trueterm
const-mul-neg-1 in 1 <101548> out 1 <103014> # cond minuscond
add in 2 <100 103014> out 1 <103015>     # cond negcond
mul in 2 <103015 101509> out 1 <103016>  # cond falseterm
add in 2 <103013 103016> out 1 <103017>  # cond result
const-mul-ffffffff in 1 <103017> out 1 <103018> # multiply-by-constant 4294967295
add in 2 <103017 103012> out 1 <103019>  # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
add in 2 <103019 103018> out 1 <103020>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <103020> out 1 <103021> # multiply-by-constant 4294967295
add in 2 <103019 103021> out 1 <103022>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <103017> out 1 <103023> # multiply-by-constant 4294967295
add in 2 <103012 103023> out 1 <103024>  # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <103024> out 200 <103025 103026 103027 103028 103029 103030 103031 103032 103033 103034 103035 103036 103037 103038 103039 103040 103041 103042 103043 103044 103045 103046 103047 103048 103049 103050 103051 103052 103053 103054 103055 103056 103057 103058 103059 103060 103061 103062 103063 103064 103065 103066 103067 103068 103069 103070 103071 103072 103073 103074 103075 103076 103077 103078 103079 103080 103081 103082 103083 103084 103085 103086 103087 103088 103089 103090 103091 103092 103093 103094 103095 103096 103097 103098 103099 103100 103101 103102 103103 103104 103105 103106 103107 103108 103109 103110 103111 103112 103113 103114 103115 103116 103117 103118 103119 103120 103121 103122 103123 103124 103125 103126 103127 103128 103129 103130 103131 103132 103133 103134 103135 103136 103137 103138 103139 103140 103141 103142 103143 103144 103145 103146 103147 103148 103149 103150 103151 103152 103153 103154 103155 103156 103157 103158 103159 103160 103161 103162 103163 103164 103165 103166 103167 103168 103169 103170 103171 103172 103173 103174 103175 103176 103177 103178 103179 103180 103181 103182 103183 103184 103185 103186 103187 103188 103189 103190 103191 103192 103193 103194 103195 103196 103197 103198 103199 103200 103201 103202 103203 103204 103205 103206 103207 103208 103209 103210 103211 103212 103213 103214 103215 103216 103217 103218 103219 103220 103221 103222 103223 103224> # SplitBus
mul in 2 <103056 103022> out 1 <103225>  # cond trueterm
const-mul-neg-1 in 1 <103056> out 1 <103226> # cond minuscond
add in 2 <100 103226> out 1 <103227>     # cond negcond
mul in 2 <103227 103012> out 1 <103228>  # cond falseterm
add in 2 <103225 103228> out 1 <103229>  # cond result
const-mul-ffffffff in 1 <103229> out 1 <103230> # multiply-by-constant 4294967295
add in 2 <103229 103007> out 1 <103231>  # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
split in 1 <103231> outplitBus
const-mul-2 in 1 <103263> out 1 <103467> # join source bit 31
add in 2 <103262 103467> out 1 <103468>  # join source bit 30
const-mul-2 in 1 <103468> out 1 <103469> # join
add in 2 <103261 103469> out 1 <103470>  # join source bit 29
const-mul-2 in 1 <103470> out 1 <103471> # join
add in 2 <103260 103471> out 1 <103472>  # join source bit 28
const-mul-2 in 1 <103472> out 1 <103473> # join
add in 2 <103259 103473> out 1 <103474>  # join source bit 27
const-mul-2 in 1 <103474> out 1 <103475> # join
add in 2 <103258 103475> out 1 <103476>  # join source bit 26
const-mul-2 in 1 <103476> out 1 <103477> # join
add in 2 <103257 103477> out 1 <103478>  # join source bit 25
const-mul-2 in 1 <103478> out 1 <103479> # join
add in 2 <103256 103479> out 1 <103480>  # join source bit 24
const-mul-2 in 1 <103480> out 1 <103481> # join
add in 2 <103255 103481> out 1 <103482>  # join source bit 23
const-mul-2 in 1 <103482> out 1 <103483> # join
add in 2 <103254 103483> out 1 <103484>  # join source bit 22
const-mul-2 in 1 <103484> out 1 <103485> # join
add in 2 <103253 103485> out 1 <103486>  # join source bit 21
const-mul-2 in 1 <103486> out 1 <103487> # join
add in 2 <103252 103487> out 1 <103488>  # join source bit 20
const-mul-2 in 1 <103488> out 1 <103489> # join
add in 2 <103251 103489> out 1 <103490>  # join source bit 19
const-mul-2 in 1 <103490> out 1 <103491> # join
add in 2 <103250 103491> out 1 <103492>  # join source bit 18
const-mul-2 in 1 <103492> out 1 <103493> # join
add in 2 <103249 103493> out 1 <103494>  # join source bit 17
const-mul-2 in 1 <103494> out 1 <103495> # join
add in 2 <103248 103495> out 1 <103496>  # join source bit 16
const-mul-2 in 1 <103496> out 1 <103497> # join
add in 2 <103247 103497> out 1 <103498>  # join source bit 15
const-mul-2 in 1 <103498> out 1 <103499> # join
add in 2 <103246 103499> out 1 <103500>  # join source bit 14
const-mul-2 in 1 <103500> out 1 <103501> # join
add in 2 <103245 103501> out 1 <103502>  # join source bit 13
const-mul-2 in 1 <103502> out 1 <103503> # join
add in 2 <103244 103503> out 1 <103504>  # join source bit 12
const-mul-2 in 1 <103504> out 1 <103505> # join
add in 2 <103243 103505> out 1 <103506>  # join source bit 11
const-mul-2 in 1 <103506> out 1 <103507> # join
add in 2 <103242 103507> out 1 <103508>  # join source bit 10
const-mul-2 in 1 <103508> out 1 <103509> # join
add in 2 <103241 103509> out 1 <103510>  # join source bit 9
const-mul-2 in 1 <103510> out 1 <103511> # join
add in 2 <103240 103511> out 1 <103512>  # join source bit 8
const-mul-2 in 1 <103512> out 1 <103513> # join
add in 2 <103239 103513> out 1 <103514>  # join source bit 7
const-mul-2 in 1 <103514> out 1 <103515> # join
add in 2 <103238 103515> out 1 <103516>  # join source bit 6
const-mul-2 in 1 <103516> out 1 <103517> # join
add in 2 <103237 103517> out 1 <103518>  # join source bit 5
const-mul-2 in 1 <103518> out 1 <103519> # join
add in 2 <103236 103519> out 1 <103520>  # join source bit 4
const-mul-2 in 1 <103520> out 1 <103521> # join
add in 2 <103235 103521> out 1 <103522>  # join source bit 3
const-mul-2 in 1 <103522> out 1 <103523> # join
add in 2 <103234 103523> out 1 <103524>  # join source bit 2
const-mul-2 in 1 <103524> out 1 <103525> # join
add in 2 <103233 103525> out 1 <103526>  # join source bit 1
const-mul-2 in 1 <103526> out 1 <103527> # join
add in 2 <103232 103527> out 1 <103528>  # join source bit 0
add in 2 <103528 103528> out 1 <103529>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <103529> out 1 <103530> # multiply-by-constant 4294967295
add in 2 <103231 103530> out 1 <103531>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <103229> out 1 <103532> # multiply-by-constant 4294967295
add in 2 <103007 103532> out 1 <103533>  # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <103533> outplitBus
mul in 2 <103565 103531> out 1 <103801>  # cond trueterm
const-mul-neg-1 in 1 <103565> out 1 <103802> # cond minuscond
add in 2 <100 103802> out 1 <103803>     # cond negcond
mul in 2 <103803 103007> out 1 <103804>  # cond falseterm
add in 2 <103801 103804> out 1 <103805>  # cond result
add in 2 <103805 104> out 1 <103806>     # ArithBusReq.AddReq(DFG.Conditional,DFG.Constant)
const-mul-ffffffff in 1 <33> out 1 <103807> # multiply-by-constant 4294967295
add in 2 <103806 103807> out 1 <103808>  # 'CmpLT DFG.Add - DFG.Input'
split in 1 <103808> outplitBus
mul in 2 <103840 103> out 1 <104047>     # cond trueterm
const-mul-neg-1 in 1 <103840> out 1 <104048> # cond minuscond
add in 2 <100 104048> out 1 <104049>     # cond negcond
mul in 2 <104049 102> out 1 <104050>     # cond falseterm
add in 2 <104047 104050> out 1 <104051>  # cond result
add in 2 <103805 3084> out 1 <104052>    # ArithBusReq.AddReq(DFG.Conditional,DFG.Negate)
const-mul-ffffffff in 1 <104052> out 1 <104053> # multiply-by-constant 4294967295
add in 2 <33 104053> out 1 <104054>      # 'CmpLT DFG.Input - DFG.Subtract'
split in 1 <104054> out 270 <104055 104056 104057 104058 104059 104060 104061 104062 104063 104064 104065 104066 104067 104068 104069 104070 104071 104072 104073 104074 104075 104076 104077 104078 104079 104080 104081 104082 104083 104084 104085 104086 104087 104088 104089 104090 104091 104092 104093 104094 104095 104096 104097 104098 104099 104100 104101 104102 104103 104104 104105 104106 104107 104108 104109 104110 104111 104112 104113 104114 104115 104116 104117 104118 104119 104120 104121 104122 104123 104124 104125 104126 104127 104128 104129 104130 104131 104132 104133 104134 104135 104136 104137 104138 104139 104140 104141 104142 104143 104144 104145 104146 104147 104148 104149 104150 104151 104152 104153 104154 104155 104156 104157 104158 104159 104160 104161 104162 104163 104164 104165 104166 104167 104168 104169 104170 104171 104172 104173 104174 104175 104176 104177 104178 104179 104180 104181 104182 104183 104184 104185 104186 104187 104188 104189 104190 104191 104192 104193 104194 104195 104196 104197 104198 104199 104200 104201 104202 104203 104204 104205 104206 104207 104208 104209 104210 104211 104212 104213 104214 104215 104216 104217 104218 104219 104220 104221 104222 104223 104224 104225 104226 104227 104228 104229 104230 104231 104232 104233 104234 104235 104236 104237 104238 104239 104240 104241 104242 104243 104244 104245 104246 104247 104248 104249 104250 104251 104252 104253 104254 104255 104256 104257 104258 104259 104260 104261 104262 104263 104264 104265 104266 104267 104268 104269 104270 104271 104272 104273 104274 104275 104276 104277 104278 104279 104280 104281 104282 104283 104284 104285 104286 104287 104288 104289 104290 104291 104292 104293 104294 104295 104296 104297 104298 104299 104300 104301 104302 104303 104304 104305 104306 104307 104308 104309 104310 104311 104312 104313 104314 104315 104316 104317 104318 104319 104320 104321 104322 104323 104324> # SplitBus
mul in 2 <104086 103> out 1 <104325>     # cond trueterm
const-mul-neg-1 in 1 <104086> out 1 <104326> # cond minuscond
add in 2 <100 104326> out 1 <104327>     # cond negcond
mul in 2 <104327 104051> out 1 <104328>  # cond falseterm
add in 2 <104325 104328> out 1 <104329>  # cond result
const-mul-ffffffff in 1 <32> out 1 <104330> # multiply-by-constant 4294967295
add in 2 <32 33> out 1 <104331>          # ArithBusReq.AddReq(DFG.Input,DFG.Input)
add in 2 <104331 104330> out 1 <104332>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <104332> out 1 <104333> # multiply-by-constant 4294967295
add in 2 <104331 104333> out 1 <104334>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <32> out 1 <104335> # multiply-by-constant 4294967295
add in 2 <33 104335> out 1 <104336>      # 'CmpLT DFG.Input - DFG.Input'
split in 1 <104336> out 65 <104337 104338 104339 104340 104341 104342 104343 104344 104345 104346 104347 104348 104349 104350 104351 104352 104353 104354 104355 104356 104357 104358 104359 104360 104361 104362 104363 104364 104365 104366 104367 104368 104369 104370 104371 104372 104373 104374 104375 104376 104377 104378 104379 104380 104381 104382 104383 104384 104385 104386 104387 104388 104389 104390 104391 104392 104393 104394 104395 104396 104397 104398 104399 104400 104401> # SplitBus
mul in 2 <104368 104334> out 1 <104402>  # cond trueterm
const-mul-neg-1 in 1 <104368> out 1 <104403> # cond minuscond
add in 2 <100 104403> out 1 <104404>     # cond negcond
mul in 2 <104404 33> out 1 <104405>      # cond falseterm
add in 2 <104402 104405> out 1 <104406>  # cond result
const-mul-ffffffff in 1 <104406> out 1 <104407> # multiply-by-constant 4294967295
add in 2 <104406 34> out 1 <104408>      # ArithBusReq.AddReq(DFG.Conditional,DFG.Input)
add in 2 <104408 104407> out 1 <104409>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <104409> out 1 <104410> # multiply-by-constant 4294967295
add in 2 <104408 104410> out 1 <104411>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <104406> out 1 <104412> # multiply-by-constant 4294967295
add in 2 <34 104412> out 1 <104413>      # 'CmpLT DFG.Input - DFG.Conditional'
split in 1 <104413> out 131 <104414 104415 104416 104417 104418 104419 104420 104421 104422 104423 104424 104425 104426 104427 104428 104429 104430 104431 104432 104433 104434 104435 104436 104437 104438 104439 104440 104441 104442 104443 104444 104445 104446 104447 104448 104449 104450 104451 104452 104453 104454 104455 104456 104457 104458 104459 104460 104461 104462 104463 104464 104465 104466 104467 104468 104469 104470 104471 104472 104473 104474 104475 104476 104477 104478 104479 104480 104481 104482 104483 104484 104485 104486 104487 104488 104489 104490 104491 104492 104493 104494 104495 104496 104497 104498 104499 104500 104501 104502 104503 104504 104505 104506 104507 104508 104509 104510 104511 104512 104513 104514 104515 104516 104517 104518 104519 104520 104521 104522 104523 104524 104525 104526 104527 104528 104529 104530 104531 104532 104533 104534 104535 104536 104537 104538 104539 104540 104541 104542 104543 104544> # SplitBus
mul in 2 <104445 104411> out 1 <104545>  # cond trueterm
const-mul-neg-1 in 1 <104445> out 1 <104546> # cond minuscond
add in 2 <100 104546> out 1 <104547>     # cond negcond
mul in 2 <104547 34> out 1 <104548>      # cond falseterm
add in 2 <104545 104548> out 1 <104549>  # cond result
const-mul-ffffffff in 1 <104549> out 1 <104550> # multiply-by-constant 4294967295
add in 2 <104549 35> out 1 <104551>      # ArithBusReq.AddReq(DFG.Conditional,DFG.Input)
add in 2 <104551 104550> out 1 <104552>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <104549> out 1 <104553> # multiply-by-constant 4294967295
add in 2 <35 104553> out 1 <104554>      # 'CmpLT DFG.Input - DFG.Conditional'
split in 1 <104554> out 197 <104555 104556 104557 104558 104559 104560 104561 104562 104563 104564 104565 104566 104567 104568 104569 104570 104571 104572 104573 104574 104575 104576 104577 104578 104579 104580 104581 104582 104583 104584 104585 104586 104587 104588 104589 104590 104591 104592 104593 104594 104595 104596 104597 104598 104599 104600 104601 104602 104603 104604 104605 104606 104607 104608 104609 104610 104611 104612 104613 104614 104615 104616 104617 104618 104619 104620 104621 104622 104623 104624 104625 104626 104627 104628 104629 104630 104631 104632 104633 104634 104635 104636 104637 104638 104639 104640 104641 104642 104643 104644 104645 104646 104647 104648 104649 104650 104651 104652 104653 104654 104655 104656 104657 104658 104659 104660 104661 104662 104663 104664 104665 104666 104667 104668 104669 104670 104671 104672 104673 104674 104675 104676 104677 104678 104679 104680 104681 104682 104683 104684 104685 104686 104687 104688 104689 104690 104691 104692 104693 104694 104695 104696 104697 104698 104699 104700 104701 104702 104703 104704 104705 104706 104707 104708 104709 104710 104711 104712 104713 104714 104715 104716 104717 104718 104719 104720 104721 104722 104723 104724 104725 104726 104727 104728 104729 104730 104731 104732 104733 104734 104735 104736 104737 104738 104739 104740 104741 104742 104743 104744 104745 104746 104747 104748 104749 104750 104751> # SplitBus
mul in 2 <104586 104552> out 1 <104752>  # cond trueterm
const-mul-neg-1 in 1 <104586> out 1 <104753> # cond minuscond
add in 2 <100 104753> out 1 <104754>     # cond negcond
mul in 2 <104754 104549> out 1 <104755>  # cond falseterm
add in 2 <104752 104755> out 1 <104756>  # cond result
mul in 2 <104445 104409> out 1 <104757>  # cond trueterm
const-mul-neg-1 in 1 <104445> out 1 <104758> # cond minuscond
add in 2 <100 104758> out 1 <104759>     # cond negcond
mul in 2 <104759 104406> out 1 <104760>  # cond falseterm
add in 2 <104757 104760> out 1 <104761>  # cond result
mul in 2 <104368 104332> out 1 <104762>  # cond trueterm
const-mul-neg-1 in 1 <104368> out 1 <104763> # cond minuscond
add in 2 <100 104763> out 1 <104764>     # cond negcond
mul in 2 <104764 32> out 1 <104765>      # cond falseterm
add in 2 <104762 104765> out 1 <104766>  # cond result
const-mul-ffffffff in 1 <104766> out 1 <104767> # multiply-by-constant 4294967295
add in 2 <104766 104761> out 1 <104768>  # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
add in 2 <104768 104767> out 1 <104769>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <104769> out 1 <104770> # multiply-by-constant 4294967295
add in 2 <104768 104770> out 1 <104771>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <104766> out 1 <104772> # multiply-by-constant 4294967295
add in 2 <104761 104772> out 1 <104773>  # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <104773> out 132 <104774 104775 104776 104777 104778 104779 104780 104781 104782 104783 104784 104785 104786 104787 104788 104789 104790 104791 104792 104793 104794 104795 104796 104797 104798 104799 104800 104801 104802 104803 104804 104805 104806 104807 104808 104809 104810 104811 104812 104813 104814 104815 104816 104817 104818 104819 104820 104821 104822 104823 104824 104825 104826 104827 104828 104829 104830 104831 104832 104833 104834 104835 104836 104837 104838 104839 104840 104841 104842 104843 104844 104845 104846 104847 104848 104849 104850 104851 104852 104853 104854 104855 104856 104857 104858 104859 104860 104861 104862 104863 104864 104865 104866 104867 104868 104869 104870 104871 104872 104873 104874 104875 104876 104877 104878 104879 104880 104881 104882 104883 104884 104885 104886 104887 104888 104889 104890 104891 104892 104893 104894 104895 104896 104897 104898 104899 104900 104901 104902 104903 104904 104905> # SplitBus
mul in 2 <104805 104771> out 1 <104906>  # cond trueterm
const-mul-neg-1 in 1 <104805> out 1 <104907> # cond minuscond
add in 2 <100 104907> out 1 <104908>     # cond negcond
mul in 2 <104908 104761> out 1 <104909>  # cond falseterm
add in 2 <104906 104909> out 1 <104910>  # cond result
const-mul-ffffffff in 1 <104910> out 1 <104911> # multiply-by-constant 4294967295
add in 2 <104910 104756> out 1 <104912>  # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
add in 2 <104912 104911> out 1 <104913>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <104913> out 1 <104914> # multiply-by-constant 4294967295
add in 2 <104912 104914> out 1 <104915>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <104910> out 1 <104916> # multiply-by-constant 4294967295
add in 2 <104756 104916> out 1 <104917>  # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <104917> out 199 <104918 104919 104920 104921 104922 104923 104924 104925 104926 104927 104928 104929 104930 104931 104932 104933 104934 104935 104936 104937 104938 104939 104940 104941 104942 104943 104944 104945 104946 104947 104948 104949 104950 104951 104952 104953 104954 104955 104956 104957 104958 104959 104960 104961 104962 104963 104964 104965 104966 104967 104968 104969 104970 104971 104972 104973 104974 104975 104976 104977 104978 104979 104980 104981 104982 104983 104984 104985 104986 104987 104988 104989 104990 104991 104992 104993 104994 104995 104996 104997 104998 104999 105000 105001 105002 105003 105004 105005 105006 105007 105008 105009 105010 105011 105012 105013 105014 105015 105016 105017 105018 105019 105020 105021 105022 105023 105024 105025 105026 105027 105028 105029 105030 105031 105032 105033 105034 105035 105036 105037 105038 105039 105040 105041 105042 105043 105044 105045 105046 105047 105048 105049 105050 105051 105052 105053 105054 105055 105056 105057 105058 105059 105060 105061 105062 105063 105064 105065 105066 105067 105068 105069 105070 105071 105072 105073 105074 105075 105076 105077 105078 105079 105080 105081 105082 105083 105084 105085 105086 105087 105088 105089 105090 105091 105092 105093 105094 105095 105096 105097 105098 105099 105100 105101 105102 105103 105104 105105 105106 105107 105108 105109 105110 105111 105112 105113 105114 105115 105116> # SplitBus
mul in 2 <104949 104915> out 1 <105117>  # cond trueterm
const-mul-neg-1 in 1 <104949> out 1 <105118> # cond minuscond
add in 2 <100 105118> out 1 <105119>     # cond negcond
mul in 2 <105119 104756> out 1 <105120>  # cond falseterm
add in 2 <105117 105120> out 1 <105121>  # cond result
const-mul-ffffffff in 1 <105121> out 1 <105122> # multiply-by-constant 4294967295
const-mul-ffffffff in 1 <104552> out 1 <105123> # multiply-by-constant 4294967295
add in 2 <104551 105123> out 1 <105124>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
mul in 2 <104586 105124> out 1 <105125>  # cond trueterm
const-mul-neg-1 in 1 <104586> out 1 <105126> # cond minuscond
add in 2 <100 105126> out 1 <105127>     # cond negcond
mul in 2 <105127 35> out 1 <105128>      # cond falseterm
add in 2 <105125 105128> out 1 <105129>  # cond result
const-mul-ffffffff in 1 <105129> out 1 <105130> # multiply-by-constant 4294967295
add in 2 <105129 36> out 1 <105131>      # ArithBusReq.AddReq(DFG.Conditional,DFG.Input)
split in 1 <105131> outplitBus
const-mul-2 in 1 <105163> out 1 <105363> # join source bit 31
add in 2 <105162 105363> out 1 <105364>  # join source bit 30
const-mul-2 in 1 <105364> out 1 <105365> # join
add in 2 <105161 105365> out 1 <105366>  # join source bit 29
const-mul-2 in 1 <105366> out 1 <105367> # join
add in 2 <105160 105367> out 1 <105368>  # join source bit 28
const-mul-2 in 1 <105368> out 1 <105369> # join
add in 2 <105159 105369> out 1 <105370>  # join source bit 27
const-mul-2 in 1 <105370> out 1 <105371> # join
add in 2 <105158 105371> out 1 <105372>  # join source bit 26
const-mul-2 in 1 <105372> out 1 <105373> # join
add in 2 <105157 105373> out 1 <105374>  # join source bit 25
const-mul-2 in 1 <105374> out 1 <105375> # join
add in 2 <105156 105375> out 1 <105376>  # join source bit 24
const-mul-2 in 1 <105376> out 1 <105377> # join
add in 2 <105155 105377> out 1 <105378>  # join source bit 23
const-mul-2 in 1 <105378> out 1 <105379> # join
add in 2 <105154 105379> out 1 <105380>  # join source bit 22
const-mul-2 in 1 <105380> out 1 <105381> # join
add in 2 <105153 105381> out 1 <105382>  # join source bit 21
const-mul-2 in 1 <105382> out 1 <105383> # join
add in 2 <105152 105383> out 1 <105384>  # join source bit 20
const-mul-2 in 1 <105384> out 1 <105385> # join
add in 2 <105151 105385> out 1 <105386>  # join source bit 19
const-mul-2 in 1 <105386> out 1 <105387> # join
add in 2 <105150 105387> out 1 <105388>  # join source bit 18
const-mul-2 in 1 <105388> out 1 <105389> # join
add in 2 <105149 105389> out 1 <105390>  # join source bit 17
const-mul-2 in 1 <105390> out 1 <105391> # join
add in 2 <105148 105391> out 1 <105392>  # join source bit 16
const-mul-2 in 1 <105392> out 1 <105393> # join
add in 2 <105147 105393> out 1 <105394>  # join source bit 15
const-mul-2 in 1 <105394> out 1 <105395> # join
add in 2 <105146 105395> out 1 <105396>  # join source bit 14
const-mul-2 in 1 <105396> out 1 <105397> # join
add in 2 <105145 105397> out 1 <105398>  # join source bit 13
const-mul-2 in 1 <105398> out 1 <105399> # join
add in 2 <105144 105399> out 1 <105400>  # join source bit 12
const-mul-2 in 1 <105400> out 1 <105401> # join
add in 2 <105143 105401> out 1 <105402>  # join source bit 11
const-mul-2 in 1 <105402> out 1 <105403> # join
add in 2 <105142 105403> out 1 <105404>  # join source bit 10
const-mul-2 in 1 <105404> out 1 <105405> # join
add in 2 <105141 105405> out 1 <105406>  # join source bit 9
const-mul-2 in 1 <105406> out 1 <105407> # join
add in 2 <105140 105407> out 1 <105408>  # join source bit 8
const-mul-2 in 1 <105408> out 1 <105409> # join
add in 2 <105139 105409> out 1 <105410>  # join source bit 7
const-mul-2 in 1 <105410> out 1 <105411> # join
add in 2 <105138 105411> out 1 <105412>  # join source bit 6
const-mul-2 in 1 <105412> out 1 <105413> # join
add in 2 <105137 105413> out 1 <105414>  # join source bit 5
const-mul-2 in 1 <105414> out 1 <105415> # join
add in 2 <105136 105415> out 1 <105416>  # join source bit 4
const-mul-2 in 1 <105416> out 1 <105417> # join
add in 2 <105135 105417> out 1 <105418>  # join source bit 3
const-mul-2 in 1 <105418> out 1 <105419> # join
add in 2 <105134 105419> out 1 <105420>  # join source bit 2
const-mul-2 in 1 <105420> out 1 <105421> # join
add in 2 <105133 105421> out 1 <105422>  # join source bit 1
const-mul-2 in 1 <105422> out 1 <105423> # join
add in 2 <105132 105423> out 1 <105424>  # join source bit 0
add in 2 <105424 105424> out 1 <105425>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <105129> out 1 <105426> # multiply-by-constant 4294967295
add in 2 <36 105426> out 1 <105427>      # 'CmpLT DFG.Input - DFG.Conditional'
split in 1 <105427> outplitBus
mul in 2 <105459 105425> out 1 <105691>  # cond trueterm
const-mul-neg-1 in 1 <105459> out 1 <105692> # cond minuscond
add in 2 <100 105692> out 1 <105693>     # cond negcond
mul in 2 <105693 105129> out 1 <105694>  # cond falseterm
add in 2 <105691 105694> out 1 <105695>  # cond result
add in 2 <105121 105695> out 1 <105696>  # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
split in 1 <105696> outplitBus
const-mul-2 in 1 <105728> out 1 <105930> # join source bit 31
add in 2 <105727 105930> out 1 <105931>  # join source bit 30
const-mul-2 in 1 <105931> out 1 <105932> # join
add in 2 <105726 105932> out 1 <105933>  # join source bit 29
const-mul-2 in 1 <105933> out 1 <105934> # join
add in 2 <105725 105934> out 1 <105935>  # join source bit 28
const-mul-2 in 1 <105935> out 1 <105936> # join
add in 2 <105724 105936> out 1 <105937>  # join source bit 27
const-mul-2 in 1 <105937> out 1 <105938> # join
add in 2 <105723 105938> out 1 <105939>  # join source bit 26
const-mul-2 in 1 <105939> out 1 <105940> # join
add in 2 <105722 105940> out 1 <105941>  # join source bit 25
const-mul-2 in 1 <105941> out 1 <105942> # join
add in 2 <105721 105942> out 1 <105943>  # join source bit 24
const-mul-2 in 1 <105943> out 1 <105944> # join
add in 2 <105720 105944> out 1 <105945>  # join source bit 23
const-mul-2 in 1 <105945> out 1 <105946> # join
add in 2 <105719 105946> out 1 <105947>  # join source bit 22
const-mul-2 in 1 <105947> out 1 <105948> # join
add in 2 <105718 105948> out 1 <105949>  # join source bit 21
const-mul-2 in 1 <105949> out 1 <105950> # join
add in 2 <105717 105950> out 1 <105951>  # join source bit 20
const-mul-2 in 1 <105951> out 1 <105952> # join
add in 2 <105716 105952> out 1 <105953>  # join source bit 19
const-mul-2 in 1 <105953> out 1 <105954> # join
add in 2 <105715 105954> out 1 <105955>  # join source bit 18
const-mul-2 in 1 <105955> out 1 <105956> # join
add in 2 <105714 105956> out 1 <105957>  # join source bit 17
const-mul-2 in 1 <105957> out 1 <105958> # join
add in 2 <105713 105958> out 1 <105959>  # join source bit 16
const-mul-2 in 1 <105959> out 1 <105960> # join
add in 2 <105712 105960> out 1 <105961>  # join source bit 15
const-mul-2 in 1 <105961> out 1 <105962> # join
add in 2 <105711 105962> out 1 <105963>  # join source bit 14
const-mul-2 in 1 <105963> out 1 <105964> # join
add in 2 <105710 105964> out 1 <105965>  # join source bit 13
const-mul-2 in 1 <105965> out 1 <105966> # join
add in 2 <105709 105966> out 1 <105967>  # join source bit 12
const-mul-2 in 1 <105967> out 1 <105968> # join
add in 2 <105708 105968> out 1 <105969>  # join source bit 11
const-mul-2 in 1 <105969> out 1 <105970> # join
add in 2 <105707 105970> out 1 <105971>  # join source bit 10
const-mul-2 in 1 <105971> out 1 <105972> # join
add in 2 <105706 105972> out 1 <105973>  # join source bit 9
const-mul-2 in 1 <105973> out 1 <105974> # join
add in 2 <105705 105974> out 1 <105975>  # join source bit 8
const-mul-2 in 1 <105975> out 1 <105976> # join
add in 2 <105704 105976> out 1 <105977>  # join source bit 7
const-mul-2 in 1 <105977> out 1 <105978> # join
add in 2 <105703 105978> out 1 <105979>  # join source bit 6
const-mul-2 in 1 <105979> out 1 <105980> # join
add in 2 <105702 105980> out 1 <105981>  # join source bit 5
const-mul-2 in 1 <105981> out 1 <105982> # join
add in 2 <105701 105982> out 1 <105983>  # join source bit 4
const-mul-2 in 1 <105983> out 1 <105984> # join
add in 2 <105700 105984> out 1 <105985>  # join source bit 3
const-mul-2 in 1 <105985> out 1 <105986> # join
add in 2 <105699 105986> out 1 <105987>  # join source bit 2
const-mul-2 in 1 <105987> out 1 <105988> # join
add in 2 <105698 105988> out 1 <105989>  # join source bit 1
const-mul-2 in 1 <105989> out 1 <105990> # join
add in 2 <105697 105990> out 1 <105991>  # join source bit 0
add in 2 <105991 105991> out 1 <105992>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <105121> out 1 <105993> # multiply-by-constant 4294967295
add in 2 <105695 105993> out 1 <105994>  # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <105994> outplitBus
mul in 2 <106026 105992> out 1 <106260>  # cond trueterm
const-mul-neg-1 in 1 <106026> out 1 <106261> # cond minuscond
add in 2 <100 106261> out 1 <106262>     # cond negcond
mul in 2 <106262 105121> out 1 <106263>  # cond falseterm
add in 2 <106260 106263> out 1 <106264>  # cond result
mul in 2 <104949 104913> out 1 <106265>  # cond trueterm
const-mul-neg-1 in 1 <104949> out 1 <106266> # cond minuscond
add in 2 <100 106266> out 1 <106267>     # cond negcond
mul in 2 <106267 104910> out 1 <106268>  # cond falseterm
add in 2 <106265 106268> out 1 <106269>  # cond result
mul in 2 <104805 104769> out 1 <106270>  # cond trueterm
const-mul-neg-1 in 1 <104805> out 1 <106271> # cond minuscond
add in 2 <100 106271> out 1 <106272>     # cond negcond
mul in 2 <106272 104766> out 1 <106273>  # cond falseterm
add in 2 <106270 106273> out 1 <106274>  # cond result
const-mul-ffffffff in 1 <106274> out 1 <106275> # multiply-by-constant 4294967295
add in 2 <106274 106269> out 1 <106276>  # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
add in 2 <106276 106275> out 1 <106277>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <106277> out 1 <106278> # multiply-by-constant 4294967295
add in 2 <106276 106278> out 1 <106279>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <106274> out 1 <106280> # multiply-by-constant 4294967295
add in 2 <106269 106280> out 1 <106281>  # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <106281> out 200 <106282 106283 106284 106285 106286 106287 106288 106289 106290 106291 106292 106293 106294 106295 106296 106297 106298 106299 106300 106301 106302 106303 106304 106305 106306 106307 106308 106309 106310 106311 106312 106313 106314 106315 106316 106317 106318 106319 106320 106321 106322 106323 106324 106325 106326 106327 106328 106329 106330 106331 106332 106333 106334 106335 106336 106337 106338 106339 106340 106341 106342 106343 106344 106345 106346 106347 106348 106349 106350 106351 106352 106353 106354 106355 106356 106357 106358 106359 106360 106361 106362 106363 106364 106365 106366 106367 106368 106369 106370 106371 106372 106373 106374 106375 106376 106377 106378 106379 106380 106381 106382 106383 106384 106385 106386 106387 106388 106389 106390 106391 106392 106393 106394 106395 106396 106397 106398 106399 106400 106401 106402 106403 106404 106405 106406 106407 106408 106409 106410 106411 106412 106413 106414 106415 106416 106417 106418 106419 106420 106421 106422 106423 106424 106425 106426 106427 106428 106429 106430 106431 106432 106433 106434 106435 106436 106437 106438 106439 106440 106441 106442 106443 106444 106445 106446 106447 106448 106449 106450 106451 106452 106453 106454 106455 106456 106457 106458 106459 106460 106461 106462 106463 106464 106465 106466 106467 106468 106469 106470 106471 106472 106473 106474 106475 106476 106477 106478 106479 106480 106481> # SplitBus
mul in 2 <106313 106279> out 1 <106482>  # cond trueterm
const-mul-neg-1 in 1 <106313> out 1 <106483> # cond minuscond
add in 2 <100 106483> out 1 <106484>     # cond negcond
mul in 2 <106484 106269> out 1 <106485>  # cond falseterm
add in 2 <106482 106485> out 1 <106486>  # cond result
const-mul-ffffffff in 1 <106486> out 1 <106487> # multiply-by-constant 4294967295
add in 2 <106486 106264> out 1 <106488>  # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
split in 1 <106488> out 235 <106489 106490 106491 106492 106493 106494 106495 106496 106497 106498 106499 106500 106501 106502 106503 106504 106505 106506 106507 106508 106509 106510 106511 106512 106513 106514 106515 106516 106517 106518 106519 106520 106521 106522 106523 106524 106525 106526 106527 106528 106529 106530 106531 106532 106533 106534 106535 106536 106537 106538 106539 106540 106541 106542 106543 106544 106545 106546 106547 106548 106549 106550 106551 106552 106553 106554 106555 106556 106557 106558 106559 106560 106561 106562 106563 106564 106565 106566 106567 106568 106569 106570 106571 106572 106573 106574 106575 106576 106577 106578 106579 106580 106581 106582 106583 106584 106585 106586 106587 106588 106589 106590 106591 106592 106593 106594 106595 106596 106597 106598 106599 106600 106601 106602 106603 106604 106605 106606 106607 106608 106609 106610 106611 106612 106613 106614 106615 106616 106617 106618 106619 106620 106621 106622 106623 106624 106625 106626 106627 106628 106629 106630 106631 106632 106633 106634 106635 106636 106637 106638 106639 106640 106641 106642 106643 106644 106645 106646 106647 106648 106649 106650 106651 106652 106653 106654 106655 106656 106657 106658 106659 106660 106661 106662 106663 106664 106665 106666 106667 106668 106669 106670 106671 106672 106673 106674 106675 106676 106677 106678 106679 106680 106681 106682 106683 106684 106685 106686 106687 106688 106689 106690 106691 106692 106693 106694 106695 106696 106697 106698 106699 106700 106701 106702 106703 106704 106705 106706 106707 106708 106709 106710 106711 106712 106713 106714 106715 106716 106717 106718 106719 106720 106721 106722 106723> # SplitBus
const-mul-2 in 1 <106520> out 1 <106724> # join source bit 31
add in 2 <106519 106724> out 1 <106725>  # join source bit 30
const-mul-2 in 1 <106725> out 1 <106726> # join
add in 2 <106518 106726> out 1 <106727>  # join source bit 29
const-mul-2 in 1 <106727> out 1 <106728> # join
add in 2 <106517 106728> out 1 <106729>  # join source bit 28
const-mul-2 in 1 <106729> out 1 <106730> # join
add in 2 <106516 106730> out 1 <106731>  # join source bit 27
const-mul-2 in 1 <106731> out 1 <106732> # join
add in 2 <106515 106732> out 1 <106733>  # join source bit 26
const-mul-2 in 1 <106733> out 1 <106734> # join
add in 2 <106514 106734> out 1 <106735>  # join source bit 25
const-mul-2 in 1 <106735> out 1 <106736> # join
add in 2 <106513 106736> out 1 <106737>  # join source bit 24
const-mul-2 in 1 <106737> out 1 <106738> # join
add in 2 <106512 106738> out 1 <106739>  # join source bit 23
const-mul-2 in 1 <106739> out 1 <106740> # join
add in 2 <106511 106740> out 1 <106741>  # join source bit 22
const-mul-2 in 1 <106741> out 1 <106742> # join
add in 2 <106510 106742> out 1 <106743>  # join source bit 21
const-mul-2 in 1 <106743> out 1 <106744> # join
add in 2 <106509 106744> out 1 <106745>  # join source bit 20
const-mul-2 in 1 <106745> out 1 <106746> # join
add in 2 <106508 106746> out 1 <106747>  # join source bit 19
const-mul-2 in 1 <106747> out 1 <106748> # join
add in 2 <106507 106748> out 1 <106749>  # join source bit 18
const-mul-2 in 1 <106749> out 1 <106750> # join
add in 2 <106506 106750> out 1 <106751>  # join source bit 17
const-mul-2 in 1 <106751> out 1 <106752> # join
add in 2 <106505 106752> out 1 <106753>  # join source bit 16
const-mul-2 in 1 <106753> out 1 <106754> # join
add in 2 <106504 106754> out 1 <106755>  # join source bit 15
const-mul-2 in 1 <106755> out 1 <106756> # join
add in 2 <106503 106756> out 1 <106757>  # join source bit 14
const-mul-2 in 1 <106757> out 1 <106758> # join
add in 2 <106502 106758> out 1 <106759>  # join source bit 13
const-mul-2 in 1 <106759> out 1 <106760> # join
add in 2 <106501 106760> out 1 <106761>  # join source bit 12
const-mul-2 in 1 <106761> out 1 <106762> # join
add in 2 <106500 106762> out 1 <106763>  # join source bit 11
const-mul-2 in 1 <106763> out 1 <106764> # join
add in 2 <106499 106764> out 1 <106765>  # join source bit 10
const-mul-2 in 1 <106765> out 1 <106766> # join
add in 2 <106498 106766> out 1 <106767>  # join source bit 9
const-mul-2 in 1 <106767> out 1 <106768> # join
add in 2 <106497 106768> out 1 <106769>  # join source bit 8
const-mul-2 in 1 <106769> out 1 <106770> # join
add in 2 <106496 106770> out 1 <106771>  # join source bit 7
const-mul-2 in 1 <106771> out 1 <106772> # join
add in 2 <106495 106772> out 1 <106773>  # join source bit 6
const-mul-2 in 1 <106773> out 1 <106774> # join
add in 2 <106494 106774> out 1 <106775>  # join source bit 5
const-mul-2 in 1 <106775> out 1 <106776> # join
add in 2 <106493 106776> out 1 <106777>  # join source bit 4
const-mul-2 in 1 <106777> out 1 <106778> # join
add in 2 <106492 106778> out 1 <106779>  # join source bit 3
const-mul-2 in 1 <106779> out 1 <106780> # join
add in 2 <106491 106780> out 1 <106781>  # join source bit 2
const-mul-2 in 1 <106781> out 1 <106782> # join
add in 2 <106490 106782> out 1 <106783>  # join source bit 1
const-mul-2 in 1 <106783> out 1 <106784> # join
add in 2 <106489 106784> out 1 <106785>  # join source bit 0
add in 2 <106785 106785> out 1 <106786>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <106786> out 1 <106787> # multiply-by-constant 4294967295
add in 2 <106488 106787> out 1 <106788>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <106486> out 1 <106789> # multiply-by-constant 4294967295
add in 2 <106264 106789> out 1 <106790>  # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <106790> out 267 <106791 106792 106793 106794 106795 106796 106797 106798 106799 106800 106801 106802 106803 106804 106805 106806 106807 106808 106809 106810 106811 106812 106813 106814 106815 106816 106817 106818 106819 106820 106821 106822 106823 106824 106825 106826 106827 106828 106829 106830 106831 106832 106833 106834 106835 106836 106837 106838 106839 106840 106841 106842 106843 106844 106845 106846 106847 106848 106849 106850 106851 106852 106853 106854 106855 106856 106857 106858 106859 106860 106861 106862 106863 106864 106865 106866 106867 106868 106869 106870 106871 106872 106873 106874 106875 106876 106877 106878 106879 106880 106881 106882 106883 106884 106885 106886 106887 106888 106889 106890 106891 106892 106893 106894 106895 106896 106897 106898 106899 106900 106901 106902 106903 106904 106905 106906 106907 106908 106909 106910 106911 106912 106913 106914 106915 106916 106917 106918 106919 106920 106921 106922 106923 106924 106925 106926 106927 106928 106929 106930 106931 106932 106933 106934 106935 106936 106937 106938 106939 106940 106941 106942 106943 106944 106945 106946 106947 106948 106949 106950 106951 106952 106953 106954 106955 106956 106957 106958 106959 106960 106961 106962 106963 106964 106965 106966 106967 106968 106969 106970 106971 106972 106973 106974 106975 106976 106977 106978 106979 106980 106981 106982 106983 106984 106985 106986 106987 106988 106989 106990 106991 106992 106993 106994 106995 106996 106997 106998 106999 107000 107001 107002 107003 107004 107005 107006 107007 107008 107009 107010 107011 107012 107013 107014 107015 107016 107017 107018 107019 107020 107021 107022 107023 107024 107025 107026 107027 107028 107029 107030 107031 107032 107033 107034 107035 107036 107037 107038 107039 107040 107041 107042 107043 107044 107045 107046 107047 107048 107049 107050 107051 107052 107053 107054 107055 107056 107057> # SplitBus
mul in 2 <106822 106788> out 1 <107058>  # cond trueterm
const-mul-neg-1 in 1 <106822> out 1 <107059> # cond minuscond
add in 2 <100 107059> out 1 <107060>     # cond negcond
mul in 2 <107060 106264> out 1 <107061>  # cond falseterm
add in 2 <107058 107061> out 1 <107062>  # cond result
add in 2 <107062 104> out 1 <107063>     # ArithBusReq.AddReq(DFG.Conditional,DFG.Constant)
const-mul-ffffffff in 1 <34> out 1 <107064> # multiply-by-constant 4294967295
add in 2 <107063 107064> out 1 <107065>  # 'CmpLT DFG.Add - DFG.Input'
split in 1 <107065> out 238 <107066 107067 107068 107069 107070 107071 107072 107073 107074 107075 107076 107077 107078 107079 107080 107081 107082 107083 107084 107085 107086 107087 107088 107089 107090 107091 107092 107093 107094 107095 107096 107097 107098 107099 107100 107101 107102 107103 107104 107105 107106 107107 107108 107109 107110 107111 107112 107113 107114 107115 107116 107117 107118 107119 107120 107121 107122 107123 107124 107125 107126 107127 107128 107129 107130 107131 107132 107133 107134 107135 107136 107137 107138 107139 107140 107141 107142 107143 107144 107145 107146 107147 107148 107149 107150 107151 107152 107153 107154 107155 107156 107157 107158 107159 107160 107161 107162 107163 107164 107165 107166 107167 107168 107169 107170 107171 107172 107173 107174 107175 107176 107177 107178 107179 107180 107181 107182 107183 107184 107185 107186 107187 107188 107189 107190 107191 107192 107193 107194 107195 107196 107197 107198 107199 107200 107201 107202 107203 107204 107205 107206 107207 107208 107209 107210 107211 107212 107213 107214 107215 107216 107217 107218 107219 107220 107221 107222 107223 107224 107225 107226 107227 107228 107229 107230 107231 107232 107233 107234 107235 107236 107237 107238 107239 107240 107241 107242 107243 107244 107245 107246 107247 107248 107249 107250 107251 107252 107253 107254 107255 107256 107257 107258 107259 107260 107261 107262 107263 107264 107265 107266 107267 107268 107269 107270 107271 107272 107273 107274 107275 107276 107277 107278 107279 107280 107281 107282 107283 107284 107285 107286 107287 107288 107289 107290 107291 107292 107293 107294 107295 107296 107297 107298 107299 107300 107301 107302 107303> # SplitBus
mul in 2 <107097 103> out 1 <107304>     # cond trueterm
const-mul-neg-1 in 1 <107097> out 1 <107305> # cond minuscond
add in 2 <100 107305> out 1 <107306>     # cond negcond
mul in 2 <107306 102> out 1 <107307>     # cond falseterm
add in 2 <107304 107307> out 1 <107308>  # cond result
add in 2 <107062 3084> out 1 <107309>    # ArithBusReq.AddReq(DFG.Conditional,DFG.Negate)
const-mul-ffffffff in 1 <107309> out 1 <107310> # multiply-by-constant 4294967295
add in 2 <34 107310> out 1 <107311>      # 'CmpLT DFG.Input - DFG.Subtract'
split in 1 <107311> outplitBus
mul in 2 <107343 103> out 1 <107582>     # cond trueterm
const-mul-neg-1 in 1 <107343> out 1 <107583> # cond minuscond
add in 2 <100 107583> out 1 <107584>     # cond negcond
mul in 2 <107584 107308> out 1 <107585>  # cond falseterm
add in 2 <107582 107585> out 1 <107586>  # cond result
const-mul-ffffffff in 1 <33> out 1 <107587> # multiply-by-constant 4294967295
add in 2 <33 34> out 1 <107588>          # ArithBusReq.AddReq(DFG.Input,DFG.Input)
add in 2 <107588 107587> out 1 <107589>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <107589> out 1 <107590> # multiply-by-constant 4294967295
add in 2 <107588 107590> out 1 <107591>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <33> out 1 <107592> # multiply-by-constant 4294967295
add in 2 <34 107592> out 1 <107593>      # 'CmpLT DFG.Input - DFG.Input'
split in 1 <107593> out 65 <107594 107595 107596 107597 107598 107599 107600 107601 107602 107603 107604 107605 107606 107607 107608 107609 107610 107611 107612 107613 107614 107615 107616 107617 107618 107619 107620 107621 107622 107623 107624 107625 107626 107627 107628 107629 107630 107631 107632 107633 107634 107635 107636 107637 107638 107639 107640 107641 107642 107643 107644 107645 107646 107647 107648 107649 107650 107651 107652 107653 107654 107655 107656 107657 107658> # SplitBus
mul in 2 <107625 107591> out 1 <107659>  # cond trueterm
const-mul-neg-1 in 1 <107625> out 1 <107660> # cond minuscond
add in 2 <100 107660> out 1 <107661>     # cond negcond
mul in 2 <107661 34> out 1 <107662>      # cond falseterm
add in 2 <107659 107662> out 1 <107663>  # cond result
const-mul-ffffffff in 1 <107663> out 1 <107664> # multiply-by-constant 4294967295
add in 2 <107663 35> out 1 <107665>      # ArithBusReq.AddReq(DFG.Conditional,DFG.Input)
add in 2 <107665 107664> out 1 <107666>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <107666> out 1 <107667> # multiply-by-constant 4294967295
add in 2 <107665 107667> out 1 <107668>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <107663> out 1 <107669> # multiply-by-constant 4294967295
add in 2 <35 107669> out 1 <107670>      # 'CmpLT DFG.Input - DFG.Conditional'
split in 1 <107670> out 131 <107671 107672 107673 107674 107675 107676 107677 107678 107679 107680 107681 107682 107683 107684 107685 107686 107687 107688 107689 107690 107691 107692 107693 107694 107695 107696 107697 107698 107699 107700 107701 107702 107703 107704 107705 107706 107707 107708 107709 107710 107711 107712 107713 107714 107715 107716 107717 107718 107719 107720 107721 107722 107723 107724 107725 107726 107727 107728 107729 107730 107731 107732 107733 107734 107735 107736 107737 107738 107739 107740 107741 107742 107743 107744 107745 107746 107747 107748 107749 107750 107751 107752 107753 107754 107755 107756 107757 107758 107759 107760 107761 107762 107763 107764 107765 107766 107767 107768 107769 107770 107771 107772 107773 107774 107775 107776 107777 107778 107779 107780 107781 107782 107783 107784 107785 107786 107787 107788 107789 107790 107791 107792 107793 107794 107795 107796 107797 107798 107799 107800 107801> # SplitBus
mul in 2 <107702 107668> out 1 <107802>  # cond trueterm
const-mul-neg-1 in 1 <107702> out 1 <107803> # cond minuscond
add in 2 <100 107803> out 1 <107804>     # cond negcond
mul in 2 <107804 35> out 1 <107805>      # cond falseterm
add in 2 <107802 107805> out 1 <107806>  # cond result
const-mul-ffffffff in 1 <107806> out 1 <107807> # multiply-by-constant 4294967295
add in 2 <107806 36> out 1 <107808>      # ArithBusReq.AddReq(DFG.Conditional,DFG.Input)
add in 2 <107808 107807> out 1 <107809>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <107806> out 1 <107810> # multiply-by-constant 4294967295
add in 2 <36 107810> out 1 <107811>      # 'CmpLT DFG.Input - DFG.Conditional'
split in 1 <107811> out 197 <107812 107813 107814 107815 107816 107817 107818 107819 107820 107821 107822 107823 107824 107825 107826 107827 107828 107829 107830 107831 107832 107833 107834 107835 107836 107837 107838 107839 107840 107841 107842 107843 107844 107845 107846 107847 107848 107849 107850 107851 107852 107853 107854 107855 107856 107857 107858 107859 107860 107861 107862 107863 107864 107865 107866 107867 107868 107869 107870 107871 107872 107873 107874 107875 107876 107877 107878 107879 107880 107881 107882 107883 107884 107885 107886 107887 107888 107889 107890 107891 107892 107893 107894 107895 107896 107897 107898 107899 107900 107901 107902 107903 107904 107905 107906 107907 107908 107909 107910 107911 107912 107913 107914 107915 107916 107917 107918 107919 107920 107921 107922 107923 107924 107925 107926 107927 107928 107929 107930 107931 107932 107933 107934 107935 107936 107937 107938 107939 107940 107941 107942 107943 107944 107945 107946 107947 107948 107949 107950 107951 107952 107953 107954 107955 107956 107957 107958 107959 107960 107961 107962 107963 107964 107965 107966 107967 107968 107969 107970 107971 107972 107973 107974 107975 107976 107977 107978 107979 107980 107981 107982 107983 107984 107985 107986 107987 107988 107989 107990 107991 107992 107993 107994 107995 107996 107997 107998 107999 108000 108001 108002 108003 108004 108005 108006 108007 108008> # SplitBus
mul in 2 <107843 107809> out 1 <108009>  # cond trueterm
const-mul-neg-1 in 1 <107843> out 1 <108010> # cond minuscond
add in 2 <100 108010> out 1 <108011>     # cond negcond
mul in 2 <108011 107806> out 1 <108012>  # cond falseterm
add in 2 <108009 108012> out 1 <108013>  # cond result
mul in 2 <107702 107666> out 1 <108014>  # cond trueterm
const-mul-neg-1 in 1 <107702> out 1 <108015> # cond minuscond
add in 2 <100 108015> out 1 <108016>     # cond negcond
mul in 2 <108016 107663> out 1 <108017>  # cond falseterm
add in 2 <108014 108017> out 1 <108018>  # cond result
mul in 2 <107625 107589> out 1 <108019>  # cond trueterm
const-mul-neg-1 in 1 <107625> out 1 <108020> # cond minuscond
add in 2 <100 108020> out 1 <108021>     # cond negcond
mul in 2 <108021 33> out 1 <108022>      # cond falseterm
add in 2 <108019 108022> out 1 <108023>  # cond result
const-mul-ffffffff in 1 <108023> out 1 <108024> # multiply-by-constant 4294967295
add in 2 <108023 108018> out 1 <108025>  # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
add in 2 <108025 108024> out 1 <108026>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <108026> out 1 <108027> # multiply-by-constant 4294967295
add in 2 <108025 108027> out 1 <108028>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <108023> out 1 <108029> # multiply-by-constant 4294967295
add in 2 <108018 108029> out 1 <108030>  # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <108030> out 132 <108031 108032 108033 108034 108035 108036 108037 108038 108039 108040 108041 108042 108043 108044 108045 108046 108047 108048 108049 108050 108051 108052 108053 108054 108055 108056 108057 108058 108059 108060 108061 108062 108063 108064 108065 108066 108067 108068 108069 108070 108071 108072 108073 108074 108075 108076 108077 108078 108079 108080 108081 108082 108083 108084 108085 108086 108087 108088 108089 108090 108091 108092 108093 108094 108095 108096 108097 108098 108099 108100 108101 108102 108103 108104 108105 108106 108107 108108 108109 108110 108111 108112 108113 108114 108115 108116 108117 108118 108119 108120 108121 108122 108123 108124 108125 108126 108127 108128 108129 108130 108131 108132 108133 108134 108135 108136 108137 108138 108139 108140 108141 108142 108143 108144 108145 108146 108147 108148 108149 108150 108151 108152 108153 108154 108155 108156 108157 108158 108159 108160 108161 108162> # SplitBus
mul in 2 <108062 108028> out 1 <108163>  # cond trueterm
const-mul-neg-1 in 1 <108062> out 1 <108164> # cond minuscond
add in 2 <100 108164> out 1 <108165>     # cond negcond
mul in 2 <108165 108018> out 1 <108166>  # cond falseterm
add in 2 <108163 108166> out 1 <108167>  # cond result
const-mul-ffffffff in 1 <108167> out 1 <108168> # multiply-by-constant 4294967295
add in 2 <108167 108013> out 1 <108169>  # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
add in 2 <108169 108168> out 1 <108170>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <108170> out 1 <108171> # multiply-by-constant 4294967295
add in 2 <108169 108171> out 1 <108172>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <108167> out 1 <108173> # multiply-by-constant 4294967295
add in 2 <108013 108173> out 1 <108174>  # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <108174> out 199 <108175 108176 108177 108178 108179 108180 108181 108182 108183 108184 108185 108186 108187 108188 108189 108190 108191 108192 108193 108194 108195 108196 108197 108198 108199 108200 108201 108202 108203 108204 108205 108206 108207 108208 108209 108210 108211 108212 108213 108214 108215 108216 108217 108218 108219 108220 108221 108222 108223 108224 108225 108226 108227 108228 108229 108230 108231 108232 108233 108234 108235 108236 108237 108238 108239 108240 108241 108242 108243 108244 108245 108246 108247 108248 108249 108250 108251 108252 108253 108254 108255 108256 108257 108258 108259 108260 108261 108262 108263 108264 108265 108266 108267 108268 108269 108270 108271 108272 108273 108274 108275 108276 108277 108278 108279 108280 108281 108282 108283 108284 108285 108286 108287 108288 108289 108290 108291 108292 108293 108294 108295 108296 108297 108298 108299 108300 108301 108302 108303 108304 108305 108306 108307 108308 108309 108310 108311 108312 108313 108314 108315 108316 108317 108318 108319 108320 108321 108322 108323 108324 108325 108326 108327 108328 108329 108330 108331 108332 108333 108334 108335 108336 108337 108338 108339 108340 108341 108342 108343 108344 108345 108346 108347 108348 108349 108350 108351 108352 108353 108354 108355 108356 108357 108358 108359 108360 108361 108362 108363 108364 108365 108366 108367 108368 108369 108370 108371 108372 108373> # SplitBus
mul in 2 <108206 108172> out 1 <108374>  # cond trueterm
const-mul-neg-1 in 1 <108206> out 1 <108375> # cond minuscond
add in 2 <100 108375> out 1 <108376>     # cond negcond
mul in 2 <108376 108013> out 1 <108377>  # cond falseterm
add in 2 <108374 108377> out 1 <108378>  # cond result
const-mul-ffffffff in 1 <108378> out 1 <108379> # multiply-by-constant 4294967295
const-mul-ffffffff in 1 <107809> out 1 <108380> # multiply-by-constant 4294967295
add in 2 <107808 108380> out 1 <108381>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
mul in 2 <107843 108381> out 1 <108382>  # cond trueterm
const-mul-neg-1 in 1 <107843> out 1 <108383> # cond minuscond
add in 2 <100 108383> out 1 <108384>     # cond negcond
mul in 2 <108384 36> out 1 <108385>      # cond falseterm
add in 2 <108382 108385> out 1 <108386>  # cond result
const-mul-ffffffff in 1 <108386> out 1 <108387> # multiply-by-constant 4294967295
add in 2 <108386 37> out 1 <108388>      # ArithBusReq.AddReq(DFG.Conditional,DFG.Input)
split in 1 <108388> out 231 <108389 108390 108391 108392 108393 108394 108395 108396 108397 108398 108399 108400 108401 108402 108403 108404 108405 108406 108407 108408 108409 108410 108411 108412 108413 108414 108415 108416 108417 108418 108419 108420 108421 108422 108423 108424 108425 108426 108427 108428 108429 108430 108431 108432 108433 108434 108435 108436 108437 108438 108439 108440 108441 108442 108443 108444 108445 108446 108447 108448 108449 108450 108451 108452 108453 108454 108455 108456 108457 108458 108459 108460 108461 108462 108463 108464 108465 108466 108467 108468 108469 108470 108471 108472 108473 108474 108475 108476 108477 108478 108479 108480 108481 108482 108483 108484 108485 108486 108487 108488 108489 108490 108491 108492 108493 108494 108495 108496 108497 108498 108499 108500 108501 108502 108503 108504 108505 108506 108507 108508 108509 108510 108511 108512 108513 108514 108515 108516 108517 108518 108519 108520 108521 108522 108523 108524 108525 108526 108527 108528 108529 108530 108531 108532 108533 108534 108535 108536 108537 108538 108539 108540 108541 108542 108543 108544 108545 108546 108547 108548 108549 108550 108551 108552 108553 108554 108555 108556 108557 108558 108559 108560 108561 108562 108563 108564 108565 108566 108567 108568 108569 108570 108571 108572 108573 108574 108575 108576 108577 108578 108579 108580 108581 108582 108583 108584 108585 108586 108587 108588 108589 108590 108591 108592 108593 108594 108595 108596 108597 108598 108599 108600 108601 108602 108603 108604 108605 108606 108607 108608 108609 108610 108611 108612 108613 108614 108615 108616 108617 108618 108619> # SplitBus
const-mul-2 in 1 <108420> out 1 <108620> # join source bit 31
add in 2 <108419 108620> out 1 <108621>  # join source bit 30
const-mul-2 in 1 <108621> out 1 <108622> # join
add in 2 <108418 108622> out 1 <108623>  # join source bit 29
const-mul-2 in 1 <108623> out 1 <108624> # join
add in 2 <108417 108624> out 1 <108625>  # join source bit 28
const-mul-2 in 1 <108625> out 1 <108626> # join
add in 2 <108416 108626> out 1 <108627>  # join source bit 27
const-mul-2 in 1 <108627> out 1 <108628> # join
add in 2 <108415 108628> out 1 <108629>  # join source bit 26
const-mul-2 in 1 <108629> out 1 <108630> # join
add in 2 <108414 108630> out 1 <108631>  # join source bit 25
const-mul-2 in 1 <108631> out 1 <108632> # join
add in 2 <108413 108632> out 1 <108633>  # join source bit 24
const-mul-2 in 1 <108633> out 1 <108634> # join
add in 2 <108412 108634> out 1 <108635>  # join source bit 23
const-mul-2 in 1 <108635> out 1 <108636> # join
add in 2 <108411 108636> out 1 <108637>  # join source bit 22
const-mul-2 in 1 <108637> out 1 <108638> # join
add in 2 <108410 108638> out 1 <108639>  # join source bit 21
const-mul-2 in 1 <108639> out 1 <108640> # join
add in 2 <108409 108640> out 1 <108641>  # join source bit 20
const-mul-2 in 1 <108641> out 1 <108642> # join
add in 2 <108408 108642> out 1 <108643>  # join source bit 19
const-mul-2 in 1 <108643> out 1 <108644> # join
add in 2 <108407 108644> out 1 <108645>  # join source bit 18
const-mul-2 in 1 <108645> out 1 <108646> # join
add in 2 <108406 108646> out 1 <108647>  # join source bit 17
const-mul-2 in 1 <108647> out 1 <108648> # join
add in 2 <108405 108648> out 1 <108649>  # join source bit 16
const-mul-2 in 1 <108649> out 1 <108650> # join
add in 2 <108404 108650> out 1 <108651>  # join source bit 15
const-mul-2 in 1 <108651> out 1 <108652> # join
add in 2 <108403 108652> out 1 <108653>  # join source bit 14
const-mul-2 in 1 <108653> out 1 <108654> # join
add in 2 <108402 108654> out 1 <108655>  # join source bit 13
const-mul-2 in 1 <108655> out 1 <108656> # join
add in 2 <108401 108656> out 1 <108657>  # join source bit 12
const-mul-2 in 1 <108657> out 1 <108658> # join
add in 2 <108400 108658> out 1 <108659>  # join source bit 11
const-mul-2 in 1 <108659> out 1 <108660> # join
add in 2 <108399 108660> out 1 <108661>  # join source bit 10
const-mul-2 in 1 <108661> out 1 <108662> # join
add in 2 <108398 108662> out 1 <108663>  # join source bit 9
const-mul-2 in 1 <108663> out 1 <108664> # join
add in 2 <108397 108664> out 1 <108665>  # join source bit 8
const-mul-2 in 1 <108665> out 1 <108666> # join
add in 2 <108396 108666> out 1 <108667>  # join source bit 7
const-mul-2 in 1 <108667> out 1 <108668> # join
add in 2 <108395 108668> out 1 <108669>  # join source bit 6
const-mul-2 in 1 <108669> out 1 <108670> # join
add in 2 <108394 108670> out 1 <108671>  # join source bit 5
const-mul-2 in 1 <108671> out 1 <108672> # join
add in 2 <108393 108672> out 1 <108673>  # join source bit 4
const-mul-2 in 1 <108673> out 1 <108674> # join
add in 2 <108392 108674> out 1 <108675>  # join source bit 3
const-mul-2 in 1 <108675> out 1 <108676> # join
add in 2 <108391 108676> out 1 <108677>  # join source bit 2
const-mul-2 in 1 <108677> out 1 <108678> # join
add in 2 <108390 108678> out 1 <108679>  # join source bit 1
const-mul-2 in 1 <108679> out 1 <108680> # join
add in 2 <108389 108680> out 1 <108681>  # join source bit 0
add in 2 <108681 108681> out 1 <108682>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <108386> out 1 <108683> # multiply-by-constant 4294967295
add in 2 <37 108683> out 1 <108684>      # 'CmpLT DFG.Input - DFG.Conditional'
split in 1 <108684> out 263 <108685 108686 108687 108688 108689 108690 108691 108692 108693 108694 108695 108696 108697 108698 108699 108700 108701 108702 108703 108704 108705 108706 108707 108708 108709 108710 108711 108712 108713 108714 108715 108716 108717 108718 108719 108720 108721 108722 108723 108724 108725 108726 108727 108728 108729 108730 108731 108732 108733 108734 108735 108736 108737 108738 108739 108740 108741 108742 108743 108744 108745 108746 108747 108748 108749 108750 108751 108752 108753 108754 108755 108756 108757 108758 108759 108760 108761 108762 108763 108764 108765 108766 108767 108768 108769 108770 108771 108772 108773 108774 108775 108776 108777 108778 108779 108780 108781 108782 108783 108784 108785 108786 108787 108788 108789 108790 108791 108792 108793 108794 108795 108796 108797 108798 108799 108800 108801 108802 108803 108804 108805 108806 108807 108808 108809 108810 108811 108812 108813 108814 108815 108816 108817 108818 108819 108820 108821 108822 108823 108824 108825 108826 108827 108828 108829 108830 108831 108832 108833 108834 108835 108836 108837 108838 108839 108840 108841 108842 108843 108844 108845 108846 108847 108848 108849 108850 108851 108852 108853 108854 108855 108856 108857 108858 108859 108860 108861 108862 108863 108864 108865 108866 108867 108868 108869 108870 108871 108872 108873 108874 108875 108876 108877 108878 108879 108880 108881 108882 108883 108884 108885 108886 108887 108888 108889 108890 108891 108892 108893 108894 108895 108896 108897 108898 108899 108900 108901 108902 108903 108904 108905 108906 108907 108908 108909 108910 108911 108912 108913 108914 108915 108916 108917 108918 108919 108920 108921 108922 108923 108924 108925 108926 108927 108928 108929 108930 108931 108932 108933 108934 108935 108936 108937 108938 108939 108940 108941 108942 108943 108944 108945 108946 108947> # SplitBus
mul in 2 <108716 108682> out 1 <108948>  # cond trueterm
const-mul-neg-1 in 1 <108716> out 1 <108949> # cond minuscond
add in 2 <100 108949> out 1 <108950>     # cond negcond
mul in 2 <108950 108386> out 1 <108951>  # cond falseterm
add in 2 <108948 108951> out 1 <108952>  # cond result
add in 2 <108378 108952> out 1 <108953>  # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
split in 1 <108953> out 233 <108954 108955 108956 108957 108958 108959 108960 108961 108962 108963 108964 108965 108966 108967 108968 108969 108970 108971 108972 108973 108974 108975 108976 108977 108978 108979 108980 108981 108982 108983 108984 108985 108986 108987 108988 108989 108990 108991 108992 108993 108994 108995 108996 108997 108998 108999 109000 109001 109002 109003 109004 109005 109006 109007 109008 109009 109010 109011 109012 109013 109014 109015 109016 109017 109018 109019 109020 109021 109022 109023 109024 109025 109026 109027 109028 109029 109030 109031 109032 109033 109034 109035 109036 109037 109038 109039 109040 109041 109042 109043 109044 109045 109046 109047 109048 109049 109050 109051 109052 109053 109054 109055 109056 109057 109058 109059 109060 109061 109062 109063 109064 109065 109066 109067 109068 109069 109070 109071 109072 109073 109074 109075 109076 109077 109078 109079 109080 109081 109082 109083 109084 109085 109086 109087 109088 109089 109090 109091 109092 109093 109094 109095 109096 109097 109098 109099 109100 109101 109102 109103 109104 109105 109106 109107 109108 109109 109110 109111 109112 109113 109114 109115 109116 109117 109118 109119 109120 109121 109122 109123 109124 109125 109126 109127 109128 109129 109130 109131 109132 109133 109134 109135 109136 109137 109138 109139 109140 109141 109142 109143 109144 109145 109146 109147 109148 109149 109150 109151 109152 109153 109154 109155 109156 109157 109158 109159 109160 109161 109162 109163 109164 109165 109166 109167 109168 109169 109170 109171 109172 109173 109174 109175 109176 109177 109178 109179 109180 109181 109182 109183 109184 109185 109186> # SplitBus
const-mul-2 in 1 <108985> out 1 <109187> # join source bit 31
add in 2 <108984 109187> out 1 <109188>  # join source bit 30
const-mul-2 in 1 <109188> out 1 <109189> # join
add in 2 <108983 109189> out 1 <109190>  # join source bit 29
const-mul-2 in 1 <109190> out 1 <109191> # join
add in 2 <108982 109191> out 1 <109192>  # join source bit 28
const-mul-2 in 1 <109192> out 1 <109193> # join
add in 2 <108981 109193> out 1 <109194>  # join source bit 27
const-mul-2 in 1 <109194> out 1 <109195> # join
add in 2 <108980 109195> out 1 <109196>  # join source bit 26
const-mul-2 in 1 <109196> out 1 <109197> # join
add in 2 <108979 109197> out 1 <109198>  # join source bit 25
const-mul-2 in 1 <109198> out 1 <109199> # join
add in 2 <108978 109199> out 1 <109200>  # join source bit 24
const-mul-2 in 1 <109200> out 1 <109201> # join
add in 2 <108977 109201> out 1 <109202>  # join source bit 23
const-mul-2 in 1 <109202> out 1 <109203> # join
add in 2 <108976 109203> out 1 <109204>  # join source bit 22
const-mul-2 in 1 <109204> out 1 <109205> # join
add in 2 <108975 109205> out 1 <109206>  # join source bit 21
const-mul-2 in 1 <109206> out 1 <109207> # join
add in 2 <108974 109207> out 1 <109208>  # join source bit 20
const-mul-2 in 1 <109208> out 1 <109209> # join
add in 2 <108973 109209> out 1 <109210>  # join source bit 19
const-mul-2 in 1 <109210> out 1 <109211> # join
add in 2 <108972 109211> out 1 <109212>  # join source bit 18
const-mul-2 in 1 <109212> out 1 <109213> # join
add in 2 <108971 109213> out 1 <109214>  # join source bit 17
const-mul-2 in 1 <109214> out 1 <109215> # join
add in 2 <108970 109215> out 1 <109216>  # join source bit 16
const-mul-2 in 1 <109216> out 1 <109217> # join
add in 2 <108969 109217> out 1 <109218>  # join source bit 15
const-mul-2 in 1 <109218> out 1 <109219> # join
add in 2 <108968 109219> out 1 <109220>  # join source bit 14
const-mul-2 in 1 <109220> out 1 <109221> # join
add in 2 <108967 109221> out 1 <109222>  # join source bit 13
const-mul-2 in 1 <109222> out 1 <109223> # join
add in 2 <108966 109223> out 1 <109224>  # join source bit 12
const-mul-2 in 1 <109224> out 1 <109225> # join
add in 2 <108965 109225> out 1 <109226>  # join source bit 11
const-mul-2 in 1 <109226> out 1 <109227> # join
add in 2 <108964 109227> out 1 <109228>  # join source bit 10
const-mul-2 in 1 <109228> out 1 <109229> # join
add in 2 <108963 109229> out 1 <109230>  # join source bit 9
const-mul-2 in 1 <109230> out 1 <109231> # join
add in 2 <108962 109231> out 1 <109232>  # join source bit 8
const-mul-2 in 1 <109232> out 1 <109233> # join
add in 2 <108961 109233> out 1 <109234>  # join source bit 7
const-mul-2 in 1 <109234> out 1 <109235> # join
add in 2 <108960 109235> out 1 <109236>  # join source bit 6
const-mul-2 in 1 <109236> out 1 <109237> # join
add in 2 <108959 109237> out 1 <109238>  # join source bit 5
const-mul-2 in 1 <109238> out 1 <109239> # join
add in 2 <108958 109239> out 1 <109240>  # join source bit 4
const-mul-2 in 1 <109240> out 1 <109241> # join
add in 2 <108957 109241> out 1 <109242>  # join source bit 3
const-mul-2 in 1 <109242> out 1 <109243> # join
add in 2 <108956 109243> out 1 <109244>  # join source bit 2
const-mul-2 in 1 <109244> out 1 <109245> # join
add in 2 <108955 109245> out 1 <109246>  # join source bit 1
const-mul-2 in 1 <109246> out 1 <109247> # join
add in 2 <108954 109247> out 1 <109248>  # join source bit 0
add in 2 <109248 109248> out 1 <109249>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <108378> out 1 <109250> # multiply-by-constant 4294967295
add in 2 <108952 109250> out 1 <109251>  # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <109251> out 265 <109252 109253 109254 109255 109256 109257 109258 109259 109260 109261 109262 109263 109264 109265 109266 109267 109268 109269 109270 109271 109272 109273 109274 109275 109276 109277 109278 109279 109280 109281 109282 109283 109284 109285 109286 109287 109288 109289 109290 109291 109292 109293 109294 109295 109296 109297 109298 109299 109300 109301 109302 109303 109304 109305 109306 109307 109308 109309 109310 109311 109312 109313 109314 109315 109316 109317 109318 109319 109320 109321 109322 109323 109324 109325 109326 109327 109328 109329 109330 109331 109332 109333 109334 109335 109336 109337 109338 109339 109340 109341 109342 109343 109344 109345 109346 109347 109348 109349 109350 109351 109352 109353 109354 109355 109356 109357 109358 109359 109360 109361 109362 109363 109364 109365 109366 109367 109368 109369 109370 109371 109372 109373 109374 109375 109376 109377 109378 109379 109380 109381 109382 109383 109384 109385 109386 109387 109388 109389 109390 109391 109392 109393 109394 109395 109396 109397 109398 109399 109400 109401 109402 109403 109404 109405 109406 109407 109408 109409 109410 109411 109412 109413 109414 109415 109416 109417 109418 109419 109420 109421 109422 109423 109424 109425 109426 109427 109428 109429 109430 109431 109432 109433 109434 109435 109436 109437 109438 109439 109440 109441 109442 109443 109444 109445 109446 109447 109448 109449 109450 109451 109452 109453 109454 109455 109456 109457 109458 109459 109460 109461 109462 109463 109464 109465 109466 109467 109468 109469 109470 109471 109472 109473 109474 109475 109476 109477 109478 109479 109480 109481 109482 109483 109484 109485 109486 109487 109488 109489 109490 109491 109492 109493 109494 109495 109496 109497 109498 109499 109500 109501 109502 109503 109504 109505 109506 109507 109508 109509 109510 109511 109512 109513 109514 109515 109516> # SplitBus
mul in 2 <109283 109249> out 1 <109517>  # cond trueterm
const-mul-neg-1 in 1 <109283> out 1 <109518> # cond minuscond
add in 2 <100 109518> out 1 <109519>     # cond negcond
mul in 2 <109519 108378> out 1 <109520>  # cond falseterm
add in 2 <109517 109520> out 1 <109521>  # cond result
mul in 2 <108206 108170> out 1 <109522>  # cond trueterm
const-mul-neg-1 in 1 <108206> out 1 <109523> # cond minuscond
add in 2 <100 109523> out 1 <109524>     # cond negcond
mul in 2 <109524 108167> out 1 <109525>  # cond falseterm
add in 2 <109522 109525> out 1 <109526>  # cond result
mul in 2 <108062 108026> out 1 <109527>  # cond trueterm
const-mul-neg-1 in 1 <108062> out 1 <109528> # cond minuscond
add in 2 <100 109528> out 1 <109529>     # cond negcond
mul in 2 <109529 108023> out 1 <109530>  # cond falseterm
add in 2 <109527 109530> out 1 <109531>  # cond result
const-mul-ffffffff in 1 <109531> out 1 <109532> # multiply-by-constant 4294967295
add in 2 <109531 109526> out 1 <109533>  # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
add in 2 <109533 109532> out 1 <109534>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <109534> out 1 <109535> # multiply-by-constant 4294967295
add in 2 <109533 109535> out 1 <109536>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <109531> out 1 <109537> # multiply-by-constant 4294967295
add in 2 <109526 109537> out 1 <109538>  # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <109538> out 200 <109539 109540 109541 109542 109543 109544 109545 109546 109547 109548 109549 109550 109551 109552 109553 109554 109555 109556 109557 109558 109559 109560 109561 109562 109563 109564 109565 109566 109567 109568 109569 109570 109571 109572 109573 109574 109575 109576 109577 109578 109579 109580 109581 109582 109583 109584 109585 109586 109587 109588 109589 109590 109591 109592 109593 109594 109595 109596 109597 109598 109599 109600 109601 109602 109603 109604 109605 109606 109607 109608 109609 109610 109611 109612 109613 109614 109615 109616 109617 109618 109619 109620 109621 109622 109623 109624 109625 109626 109627 109628 109629 109630 109631 109632 109633 109634 109635 109636 109637 109638 109639 109640 109641 109642 109643 109644 109645 109646 109647 109648 109649 109650 109651 109652 109653 109654 109655 109656 109657 109658 109659 109660 109661 109662 109663 109664 109665 109666 109667 109668 109669 109670 109671 109672 109673 109674 109675 109676 109677 109678 109679 109680 109681 109682 109683 109684 109685 109686 109687 109688 109689 109690 109691 109692 109693 109694 109695 109696 109697 109698 109699 109700 109701 109702 109703 109704 109705 109706 109707 109708 109709 109710 109711 109712 109713 109714 109715 109716 109717 109718 109719 109720 109721 109722 109723 109724 109725 109726 109727 109728 109729 109730 109731 109732 109733 109734 109735 109736 109737 109738> # SplitBus
mul in 2 <109570 109536> out 1 <109739>  # cond trueterm
const-mul-neg-1 in 1 <109570> out 1 <109740> # cond minuscond
add in 2 <100 109740> out 1 <109741>     # cond negcond
mul in 2 <109741 109526> out 1 <109742>  # cond falseterm
add in 2 <109739 109742> out 1 <109743>  # cond result
const-mul-ffffffff in 1 <109743> out 1 <109744> # multiply-by-constant 4294967295
add in 2 <109743 109521> out 1 <109745>  # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
split in 1 <109745> out 235 <109746 109747 109748 109749 109750 109751 109752 109753 109754 109755 109756 109757 109758 109759 109760 109761 109762 109763 109764 109765 109766 109767 109768 109769 109770 109771 109772 109773 109774 109775 109776 109777 109778 109779 109780 109781 109782 109783 109784 109785 109786 109787 109788 109789 109790 109791 109792 109793 109794 109795 109796 109797 109798 109799 109800 109801 109802 109803 109804 109805 109806 109807 109808 109809 109810 109811 109812 109813 109814 109815 109816 109817 109818 109819 109820 109821 109822 109823 109824 109825 109826 109827 109828 109829 109830 109831 109832 109833 109834 109835 109836 109837 109838 109839 109840 109841 109842 109843 109844 109845 109846 109847 109848 109849 109850 109851 109852 109853 109854 109855 109856 109857 109858 109859 109860 109861 109862 109863 109864 109865 109866 109867 109868 109869 109870 109871 109872 109873 109874 109875 109876 109877 109878 109879 109880 109881 109882 109883 109884 109885 109886 109887 109888 109889 109890 109891 109892 109893 109894 109895 109896 109897 109898 109899 109900 109901 109902 109903 109904 109905 109906 109907 109908 109909 109910 109911 109912 109913 109914 109915 109916 109917 109918 109919 109920 109921 109922 109923 109924 109925 109926 109927 109928 109929 109930 109931 109932 109933 109934 109935 109936 109937 109938 109939 109940 109941 109942 109943 109944 109945 109946 109947 109948 109949 109950 109951 109952 109953 109954 109955 109956 109957 109958 109959 109960 109961 109962 109963 109964 109965 109966 109967 109968 109969 109970 109971 109972 109973 109974 109975 109976 109977 109978 109979 109980> # SplitBus
const-mul-2 in 1 <109777> out 1 <109981> # join source bit 31
add in 2 <109776 109981> out 1 <109982>  # join source bit 30
const-mul-2 in 1 <109982> out 1 <109983> # join
add in 2 <109775 109983> out 1 <109984>  # join source bit 29
const-mul-2 in 1 <109984> out 1 <109985> # join
add in 2 <109774 109985> out 1 <109986>  # join source bit 28
const-mul-2 in 1 <109986> out 1 <109987> # join
add in 2 <109773 109987> out 1 <109988>  # join source bit 27
const-mul-2 in 1 <109988> out 1 <109989> # join
add in 2 <109772 109989> out 1 <109990>  # join source bit 26
const-mul-2 in 1 <109990> out 1 <109991> # join
add in 2 <109771 109991> out 1 <109992>  # join source bit 25
const-mul-2 in 1 <109992> out 1 <109993> # join
add in 2 <109770 109993> out 1 <109994>  # join source bit 24
const-mul-2 in 1 <109994> out 1 <109995> # join
add in 2 <109769 109995> out 1 <109996>  # join source bit 23
const-mul-2 in 1 <109996> out 1 <109997> # join
add in 2 <109768 109997> out 1 <109998>  # join source bit 22
const-mul-2 in 1 <109998> out 1 <109999> # join
add in 2 <109767 109999> out 1 <110000>  # join source bit 21
const-mul-2 in 1 <110000> out 1 <110001> # join
add in 2 <109766 110001> out 1 <110002>  # join source bit 20
const-mul-2 in 1 <110002> out 1 <110003> # join
add in 2 <109765 110003> out 1 <110004>  # join source bit 19
const-mul-2 in 1 <110004> out 1 <110005> # join
add in 2 <109764 110005> out 1 <110006>  # join source bit 18
const-mul-2 in 1 <110006> out 1 <110007> # join
add in 2 <109763 110007> out 1 <110008>  # join source bit 17
const-mul-2 in 1 <110008> out 1 <110009> # join
add in 2 <109762 110009> out 1 <110010>  # join source bit 16
const-mul-2 in 1 <110010> out 1 <110011> # join
add in 2 <109761 110011> out 1 <110012>  # join source bit 15
const-mul-2 in 1 <110012> out 1 <110013> # join
add in 2 <109760 110013> out 1 <110014>  # join source bit 14
const-mul-2 in 1 <110014> out 1 <110015> # join
add in 2 <109759 110015> out 1 <110016>  # join source bit 13
const-mul-2 in 1 <110016> out 1 <110017> # join
add in 2 <109758 110017> out 1 <110018>  # join source bit 12
const-mul-2 in 1 <110018> out 1 <110019> # join
add in 2 <109757 110019> out 1 <110020>  # join source bit 11
const-mul-2 in 1 <110020> out 1 <110021> # join
add in 2 <109756 110021> out 1 <110022>  # join source bit 10
const-mul-2 in 1 <110022> out 1 <110023> # join
add in 2 <109755 110023> out 1 <110024>  # join source bit 9
const-mul-2 in 1 <110024> out 1 <110025> # join
add in 2 <109754 110025> out 1 <110026>  # join source bit 8
const-mul-2 in 1 <110026> out 1 <110027> # join
add in 2 <109753 110027> out 1 <110028>  # join source bit 7
const-mul-2 in 1 <110028> out 1 <110029> # join
add in 2 <109752 110029> out 1 <110030>  # join source bit 6
const-mul-2 in 1 <110030> out 1 <110031> # join
add in 2 <109751 110031> out 1 <110032>  # join source bit 5
const-mul-2 in 1 <110032> out 1 <110033> # join
add in 2 <109750 110033> out 1 <110034>  # join source bit 4
const-mul-2 in 1 <110034> out 1 <110035> # join
add in 2 <109749 110035> out 1 <110036>  # join source bit 3
const-mul-2 in 1 <110036> out 1 <110037> # join
add in 2 <109748 110037> out 1 <110038>  # join source bit 2
const-mul-2 in 1 <110038> out 1 <110039> # join
add in 2 <109747 110039> out 1 <110040>  # join source bit 1
const-mul-2 in 1 <110040> out 1 <110041> # join
add in 2 <109746 110041> out 1 <110042>  # join source bit 0
add in 2 <110042 110042> out 1 <110043>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <110043> out 1 <110044> # multiply-by-constant 4294967295
add in 2 <109745 110044> out 1 <110045>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <109743> out 1 <110046> # multiply-by-constant 4294967295
add in 2 <109521 110046> out 1 <110047>  # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <110047> out 267 <110048 110049 110050 110051 110052 110053 110054 110055 110056 110057 110058 110059 110060 110061 110062 110063 110064 110065 110066 110067 110068 110069 110070 110071 110072 110073 110074 110075 110076 110077 110078 110079 110080 110081 110082 110083 110084 110085 110086 110087 110088 110089 110090 110091 110092 110093 110094 110095 110096 110097 110098 110099 110100 110101 110102 110103 110104 110105 110106 110107 110108 110109 110110 110111 110112 110113 110114 110115 110116 110117 110118 110119 110120 110121 110122 110123 110124 110125 110126 110127 110128 110129 110130 110131 110132 110133 110134 110135 110136 110137 110138 110139 110140 110141 110142 110143 110144 110145 110146 110147 110148 110149 110150 110151 110152 110153 110154 110155 110156 110157 110158 110159 110160 110161 110162 110163 110164 110165 110166 110167 110168 110169 110170 110171 110172 110173 110174 110175 110176 110177 110178 110179 110180 110181 110182 110183 110184 110185 110186 110187 110188 110189 110190 110191 110192 110193 110194 110195 110196 110197 110198 110199 110200 110201 110202 110203 110204 110205 110206 110207 110208 110209 110210 110211 110212 110213 110214 110215 110216 110217 110218 110219 110220 110221 110222 110223 110224 110225 110226 110227 110228 110229 110230 110231 110232 110233 110234 110235 110236 110237 110238 110239 110240 110241 110242 110243 110244 110245 110246 110247 110248 110249 110250 110251 110252 110253 110254 110255 110256 110257 110258 110259 110260 110261 110262 110263 110264 110265 110266 110267 110268 110269 110270 110271 110272 110273 110274 110275 110276 110277 110278 110279 110280 110281 110282 110283 110284 110285 110286 110287 110288 110289 110290 110291 110292 110293 110294 110295 110296 110297 110298 110299 110300 110301 110302 110303 110304 110305 110306 110307 110308 110309 110310 110311 110312 110313 110314> # SplitBus
mul in 2 <110079 110045> out 1 <110315>  # cond trueterm
const-mul-neg-1 in 1 <110079> out 1 <110316> # cond minuscond
add in 2 <100 110316> out 1 <110317>     # cond negcond
mul in 2 <110317 109521> out 1 <110318>  # cond falseterm
add in 2 <110315 110318> out 1 <110319>  # cond result
add in 2 <110319 104> out 1 <110320>     # ArithBusReq.AddReq(DFG.Conditional,DFG.Constant)
const-mul-ffffffff in 1 <35> out 1 <110321> # multiply-by-constant 4294967295
add in 2 <110320 110321> out 1 <110322>  # 'CmpLT DFG.Add - DFG.Input'
split in 1 <110322> outplitBus
mul in 2 <110354 103> out 1 <110561>     # cond trueterm
const-mul-neg-1 in 1 <110354> out 1 <110562> # cond minuscond
add in 2 <100 110562> out 1 <110563>     # cond negcond
mul in 2 <110563 102> out 1 <110564>     # cond falseterm
add in 2 <110561 110564> out 1 <110565>  # cond result
add in 2 <110319 3084> out 1 <110566>    # ArithBusReq.AddReq(DFG.Conditional,DFG.Negate)
const-mul-ffffffff in 1 <110566> out 1 <110567> # multiply-by-constant 4294967295
add in 2 <35 110567> out 1 <110568>      # 'CmpLT DFG.Input - DFG.Subtract'
split in 1 <110568> out 270 <110569 110570 110571 110572 110573 110574 110575 110576 110577 110578 110579 110580 110581 110582 110583 110584 110585 110586 110587 110588 110589 110590 110591 110592 110593 110594 110595 110596 110597 110598 110599 110600 110601 110602 110603 110604 110605 110606 110607 110608 110609 110610 110611 110612 110613 110614 110615 110616 110617 110618 110619 110620 110621 110622 110623 110624 110625 110626 110627 110628 110629 110630 110631 110632 110633 110634 110635 110636 110637 110638 110639 110640 110641 110642 110643 110644 110645 110646 110647 110648 110649 110650 110651 110652 110653 110654 110655 110656 110657 110658 110659 110660 110661 110662 110663 110664 110665 110666 110667 110668 110669 110670 110671 110672 110673 110674 110675 110676 110677 110678 110679 110680 110681 110682 110683 110684 110685 110686 110687 110688 110689 110690 110691 110692 110693 110694 110695 110696 110697 110698 110699 110700 110701 110702 110703 110704 110705 110706 110707 110708 110709 110710 110711 110712 110713 110714 110715 110716 110717 110718 110719 110720 110721 110722 110723 110724 110725 110726 110727 110728 110729 110730 110731 110732 110733 110734 110735 110736 110737 110738 110739 110740 110741 110742 110743 110744 110745 110746 110747 110748 110749 110750 110751 110752 110753 110754 110755 110756 110757 110758 110759 110760 110761 110762 110763 110764 110765 110766 110767 110768 110769 110770 110771 110772 110773 110774 110775 110776 110777 110778 110779 110780 110781 110782 110783 110784 110785 110786 110787 110788 110789 110790 110791 110792 110793 110794 110795 110796 110797 110798 110799 110800 110801 110802 110803 110804 110805 110806 110807 110808 110809 110810 110811 110812 110813 110814 110815 110816 110817 110818 110819 110820 110821 110822 110823 110824 110825 110826 110827 110828 110829 110830 110831 110832 110833 110834 110835 110836 110837 110838> # SplitBus
mul in 2 <110600 103> out 1 <110839>     # cond trueterm
const-mul-neg-1 in 1 <110600> out 1 <110840> # cond minuscond
add in 2 <100 110840> out 1 <110841>     # cond negcond
mul in 2 <110841 110565> out 1 <110842>  # cond falseterm
add in 2 <110839 110842> out 1 <110843>  # cond result
const-mul-ffffffff in 1 <34> out 1 <110844> # multiply-by-constant 4294967295
add in 2 <34 35> out 1 <110845>          # ArithBusReq.AddReq(DFG.Input,DFG.Input)
add in 2 <110845 110844> out 1 <110846>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <110846> out 1 <110847> # multiply-by-constant 4294967295
add in 2 <110845 110847> out 1 <110848>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <34> out 1 <110849> # multiply-by-constant 4294967295
add in 2 <35 110849> out 1 <110850>      # 'CmpLT DFG.Input - DFG.Input'
split in 1 <110850> out 65 <110851 110852 110853 110854 110855 110856 110857 110858 110859 110860 110861 110862 110863 110864 110865 110866 110867 110868 110869 110870 110871 110872 110873 110874 110875 110876 110877 110878 110879 110880 110881 110882 110883 110884 110885 110886 110887 110888 110889 110890 110891 110892 110893 110894 110895 110896 110897 110898 110899 110900 110901 110902 110903 110904 110905 110906 110907 110908 110909 110910 110911 110912 110913 110914 110915> # SplitBus
mul in 2 <110882 110848> out 1 <110916>  # cond trueterm
const-mul-neg-1 in 1 <110882> out 1 <110917> # cond minuscond
add in 2 <100 110917> out 1 <110918>     # cond negcond
mul in 2 <110918 35> out 1 <110919>      # cond falseterm
add in 2 <110916 110919> out 1 <110920>  # cond result
const-mul-ffffffff in 1 <110920> out 1 <110921> # multiply-by-constant 4294967295
add in 2 <110920 36> out 1 <110922>      # ArithBusReq.AddReq(DFG.Conditional,DFG.Input)
add in 2 <110922 110921> out 1 <110923>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <110923> out 1 <110924> # multiply-by-constant 4294967295
add in 2 <110922 110924> out 1 <110925>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <110920> out 1 <110926> # multiply-by-constant 4294967295
add in 2 <36 110926> out 1 <110927>      # 'CmpLT DFG.Input - DFG.Conditional'
split in 1 <110927> out 131 <110928 110929 110930 110931 110932 110933 110934 110935 110936 110937 110938 110939 110940 110941 110942 110943 110944 110945 110946 110947 110948 110949 110950 110951 110952 110953 110954 110955 110956 110957 110958 110959 110960 110961 110962 110963 110964 110965 110966 110967 110968 110969 110970 110971 110972 110973 110974 110975 110976 110977 110978 110979 110980 110981 110982 110983 110984 110985 110986 110987 110988 110989 110990 110991 110992 110993 110994 110995 110996 110997 110998 110999 111000 111001 111002 111003 111004 111005 111006 111007 111008 111009 111010 111011 111012 111013 111014 111015 111016 111017 111018 111019 111020 111021 111022 111023 111024 111025 111026 111027 111028 111029 111030 111031 111032 111033 111034 111035 111036 111037 111038 111039 111040 111041 111042 111043 111044 111045 111046 111047 111048 111049 111050 111051 111052 111053 111054 111055 111056 111057 111058> # SplitBus
mul in 2 <110959 110925> out 1 <111059>  # cond trueterm
const-mul-neg-1 in 1 <110959> out 1 <111060> # cond minuscond
add in 2 <100 111060> out 1 <111061>     # cond negcond
mul in 2 <111061 36> out 1 <111062>      # cond falseterm
add in 2 <111059 111062> out 1 <111063>  # cond result
const-mul-ffffffff in 1 <111063> out 1 <111064> # multiply-by-constant 4294967295
add in 2 <111063 37> out 1 <111065>      # ArithBusReq.AddReq(DFG.Conditional,DFG.Input)
add in 2 <111065 111064> out 1 <111066>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <111063> out 1 <111067> # multiply-by-constant 4294967295
add in 2 <37 111067> out 1 <111068>      # 'CmpLT DFG.Input - DFG.Conditional'
split in 1 <111068> out 197 <111069 111070 111071 111072 111073 111074 111075 111076 111077 111078 111079 111080 111081 111082 111083 111084 111085 111086 111087 111088 111089 111090 111091 111092 111093 111094 111095 111096 111097 111098 111099 111100 111101 111102 111103 111104 111105 111106 111107 111108 111109 111110 111111 111112 111113 111114 111115 111116 111117 111118 111119 111120 111121 111122 111123 111124 111125 111126 111127 111128 111129 111130 111131 111132 111133 111134 111135 111136 111137 111138 111139 111140 111141 111142 111143 111144 111145 111146 111147 111148 111149 111150 111151 111152 111153 111154 111155 111156 111157 111158 111159 111160 111161 111162 111163 111164 111165 111166 111167 111168 111169 111170 111171 111172 111173 111174 111175 111176 111177 111178 111179 111180 111181 111182 111183 111184 111185 111186 111187 111188 111189 111190 111191 111192 111193 111194 111195 111196 111197 111198 111199 111200 111201 111202 111203 111204 111205 111206 111207 111208 111209 111210 111211 111212 111213 111214 111215 111216 111217 111218 111219 111220 111221 111222 111223 111224 111225 111226 111227 111228 111229 111230 111231 111232 111233 111234 111235 111236 111237 111238 111239 111240 111241 111242 111243 111244 111245 111246 111247 111248 111249 111250 111251 111252 111253 111254 111255 111256 111257 111258 111259 111260 111261 111262 111263 111264 111265> # SplitBus
mul in 2 <111100 111066> out 1 <111266>  # cond trueterm
const-mul-neg-1 in 1 <111100> out 1 <111267> # cond minuscond
add in 2 <100 111267> out 1 <111268>     # cond negcond
mul in 2 <111268 111063> out 1 <111269>  # cond falseterm
add in 2 <111266 111269> out 1 <111270>  # cond result
mul in 2 <110959 110923> out 1 <111271>  # cond trueterm
const-mul-neg-1 in 1 <110959> out 1 <111272> # cond minuscond
add in 2 <100 111272> out 1 <111273>     # cond negcond
mul in 2 <111273 110920> out 1 <111274>  # cond falseterm
add in 2 <111271 111274> out 1 <111275>  # cond result
mul in 2 <110882 110846> out 1 <111276>  # cond trueterm
const-mul-neg-1 in 1 <110882> out 1 <111277> # cond minuscond
add in 2 <100 111277> out 1 <111278>     # cond negcond
mul in 2 <111278 34> out 1 <111279>      # cond falseterm
add in 2 <111276 111279> out 1 <111280>  # cond result
const-mul-ffffffff in 1 <111280> out 1 <111281> # multiply-by-constant 4294967295
add in 2 <111280 111275> out 1 <111282>  # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
add in 2 <111282 111281> out 1 <111283>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <111283> out 1 <111284> # multiply-by-constant 4294967295
add in 2 <111282 111284> out 1 <111285>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <111280> out 1 <111286> # multiply-by-constant 4294967295
add in 2 <111275 111286> out 1 <111287>  # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <111287> out 132 <111288 111289 111290 111291 111292 111293 111294 111295 111296 111297 111298 111299 111300 111301 111302 111303 111304 111305 111306 111307 111308 111309 111310 111311 111312 111313 111314 111315 111316 111317 111318 111319 111320 111321 111322 111323 111324 111325 111326 111327 111328 111329 111330 111331 111332 111333 111334 111335 111336 111337 111338 111339 111340 111341 111342 111343 111344 111345 111346 111347 111348 111349 111350 111351 111352 111353 111354 111355 111356 111357 111358 111359 111360 111361 111362 111363 111364 111365 111366 111367 111368 111369 111370 111371 111372 111373 111374 111375 111376 111377 111378 111379 111380 111381 111382 111383 111384 111385 111386 111387 111388 111389 111390 111391 111392 111393 111394 111395 111396 111397 111398 111399 111400 111401 111402 111403 111404 111405 111406 111407 111408 111409 111410 111411 111412 111413 111414 111415 111416 111417 111418 111419> # SplitBus
mul in 2 <111319 111285> out 1 <111420>  # cond trueterm
const-mul-neg-1 in 1 <111319> out 1 <111421> # cond minuscond
add in 2 <100 111421> out 1 <111422>     # cond negcond
mul in 2 <111422 111275> out 1 <111423>  # cond falseterm
add in 2 <111420 111423> out 1 <111424>  # cond result
const-mul-ffffffff in 1 <111424> out 1 <111425> # multiply-by-constant 4294967295
add in 2 <111424 111270> out 1 <111426>  # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
add in 2 <111426 111425> out 1 <111427>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <111427> out 1 <111428> # multiply-by-constant 4294967295
add in 2 <111426 111428> out 1 <111429>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <111424> out 1 <111430> # multiply-by-constant 4294967295
add in 2 <111270 111430> out 1 <111431>  # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <111431> out 199 <111432 111433 111434 111435 111436 111437 111438 111439 111440 111441 111442 111443 111444 111445 111446 111447 111448 111449 111450 111451 111452 111453 111454 111455 111456 111457 111458 111459 111460 111461 111462 111463 111464 111465 111466 111467 111468 111469 111470 111471 111472 111473 111474 111475 111476 111477 111478 111479 111480 111481 111482 111483 111484 111485 111486 111487 111488 111489 111490 111491 111492 111493 111494 111495 111496 111497 111498 111499 111500 111501 111502 111503 111504 111505 111506 111507 111508 111509 111510 111511 111512 111513 111514 111515 111516 111517 111518 111519 111520 111521 111522 111523 111524 111525 111526 111527 111528 111529 111530 111531 111532 111533 111534 111535 111536 111537 111538 111539 111540 111541 111542 111543 111544 111545 111546 111547 111548 111549 111550 111551 111552 111553 111554 111555 111556 111557 111558 111559 111560 111561 111562 111563 111564 111565 111566 111567 111568 111569 111570 111571 111572 111573 111574 111575 111576 111577 111578 111579 111580 111581 111582 111583 111584 111585 111586 111587 111588 111589 111590 111591 111592 111593 111594 111595 111596 111597 111598 111599 111600 111601 111602 111603 111604 111605 111606 111607 111608 111609 111610 111611 111612 111613 111614 111615 111616 111617 111618 111619 111620 111621 111622 111623 111624 111625 111626 111627 111628 111629 111630> # SplitBus
mul in 2 <111463 111429> out 1 <111631>  # cond trueterm
const-mul-neg-1 in 1 <111463> out 1 <111632> # cond minuscond
add in 2 <100 111632> out 1 <111633>     # cond negcond
mul in 2 <111633 111270> out 1 <111634>  # cond falseterm
add in 2 <111631 111634> out 1 <111635>  # cond result
const-mul-ffffffff in 1 <111635> out 1 <111636> # multiply-by-constant 4294967295
const-mul-ffffffff in 1 <111066> out 1 <111637> # multiply-by-constant 4294967295
add in 2 <111065 111637> out 1 <111638>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
mul in 2 <111100 111638> out 1 <111639>  # cond trueterm
const-mul-neg-1 in 1 <111100> out 1 <111640> # cond minuscond
add in 2 <100 111640> out 1 <111641>     # cond negcond
mul in 2 <111641 37> out 1 <111642>      # cond falseterm
add in 2 <111639 111642> out 1 <111643>  # cond result
const-mul-ffffffff in 1 <111643> out 1 <111644> # multiply-by-constant 4294967295
add in 2 <111643 38> out 1 <111645>      # ArithBusReq.AddReq(DFG.Conditional,DFG.Input)
split in 1 <111645> out 231 <111646 111647 111648 111649 111650 111651 111652 111653 111654 111655 111656 111657 111658 111659 111660 111661 111662 111663 111664 111665 111666 111667 111668 111669 111670 111671 111672 111673 111674 111675 111676 111677 111678 111679 111680 111681 111682 111683 111684 111685 111686 111687 111688 111689 111690 111691 111692 111693 111694 111695 111696 111697 111698 111699 111700 111701 111702 111703 111704 111705 111706 111707 111708 111709 111710 111711 111712 111713 111714 111715 111716 111717 111718 111719 111720 111721 111722 111723 111724 111725 111726 111727 111728 111729 111730 111731 111732 111733 111734 111735 111736 111737 111738 111739 111740 111741 111742 111743 111744 111745 111746 111747 111748 111749 111750 111751 111752 111753 111754 111755 111756 111757 111758 111759 111760 111761 111762 111763 111764 111765 111766 111767 111768 111769 111770 111771 111772 111773 111774 111775 111776 111777 111778 111779 111780 111781 111782 111783 111784 111785 111786 111787 111788 111789 111790 111791 111792 111793 111794 111795 111796 111797 111798 111799 111800 111801 111802 111803 111804 111805 111806 111807 111808 111809 111810 111811 111812 111813 111814 111815 111816 111817 111818 111819 111820 111821 111822 111823 111824 111825 111826 111827 111828 111829 111830 111831 111832 111833 111834 111835 111836 111837 111838 111839 111840 111841 111842 111843 111844 111845 111846 111847 111848 111849 111850 111851 111852 111853 111854 111855 111856 111857 111858 111859 111860 111861 111862 111863 111864 111865 111866 111867 111868 111869 111870 111871 111872 111873 111874 111875 111876> # SplitBus
const-mul-2 in 1 <111677> out 1 <111877> # join source bit 31
add in 2 <111676 111877> out 1 <111878>  # join source bit 30
const-mul-2 in 1 <111878> out 1 <111879> # join
add in 2 <111675 111879> out 1 <111880>  # join source bit 29
const-mul-2 in 1 <111880> out 1 <111881> # join
add in 2 <111674 111881> out 1 <111882>  # join source bit 28
const-mul-2 in 1 <111882> out 1 <111883> # join
add in 2 <111673 111883> out 1 <111884>  # join source bit 27
const-mul-2 in 1 <111884> out 1 <111885> # join
add in 2 <111672 111885> out 1 <111886>  # join source bit 26
const-mul-2 in 1 <111886> out 1 <111887> # join
add in 2 <111671 111887> out 1 <111888>  # join source bit 25
const-mul-2 in 1 <111888> out 1 <111889> # join
add in 2 <111670 111889> out 1 <111890>  # join source bit 24
const-mul-2 in 1 <111890> out 1 <111891> # join
add in 2 <111669 111891> out 1 <111892>  # join source bit 23
const-mul-2 in 1 <111892> out 1 <111893> # join
add in 2 <111668 111893> out 1 <111894>  # join source bit 22
const-mul-2 in 1 <111894> out 1 <111895> # join
add in 2 <111667 111895> out 1 <111896>  # join source bit 21
const-mul-2 in 1 <111896> out 1 <111897> # join
add in 2 <111666 111897> out 1 <111898>  # join source bit 20
const-mul-2 in 1 <111898> out 1 <111899> # join
add in 2 <111665 111899> out 1 <111900>  # join source bit 19
const-mul-2 in 1 <111900> out 1 <111901> # join
add in 2 <111664 111901> out 1 <111902>  # join source bit 18
const-mul-2 in 1 <111902> out 1 <111903> # join
add in 2 <111663 111903> out 1 <111904>  # join source bit 17
const-mul-2 in 1 <111904> out 1 <111905> # join
add in 2 <111662 111905> out 1 <111906>  # join source bit 16
const-mul-2 in 1 <111906> out 1 <111907> # join
add in 2 <111661 111907> out 1 <111908>  # join source bit 15
const-mul-2 in 1 <111908> out 1 <111909> # join
add in 2 <111660 111909> out 1 <111910>  # join source bit 14
const-mul-2 in 1 <111910> out 1 <111911> # join
add in 2 <111659 111911> out 1 <111912>  # join source bit 13
const-mul-2 in 1 <111912> out 1 <111913> # join
add in 2 <111658 111913> out 1 <111914>  # join source bit 12
const-mul-2 in 1 <111914> out 1 <111915> # join
add in 2 <111657 111915> out 1 <111916>  # join source bit 11
const-mul-2 in 1 <111916> out 1 <111917> # join
add in 2 <111656 111917> out 1 <111918>  # join source bit 10
const-mul-2 in 1 <111918> out 1 <111919> # join
add in 2 <111655 111919> out 1 <111920>  # join source bit 9
const-mul-2 in 1 <111920> out 1 <111921> # join
add in 2 <111654 111921> out 1 <111922>  # join source bit 8
const-mul-2 in 1 <111922> out 1 <111923> # join
add in 2 <111653 111923> out 1 <111924>  # join source bit 7
const-mul-2 in 1 <111924> out 1 <111925> # join
add in 2 <111652 111925> out 1 <111926>  # join source bit 6
const-mul-2 in 1 <111926> out 1 <111927> # join
add in 2 <111651 111927> out 1 <111928>  # join source bit 5
const-mul-2 in 1 <111928> out 1 <111929> # join
add in 2 <111650 111929> out 1 <111930>  # join source bit 4
const-mul-2 in 1 <111930> out 1 <111931> # join
add in 2 <111649 111931> out 1 <111932>  # join source bit 3
const-mul-2 in 1 <111932> out 1 <111933> # join
add in 2 <111648 111933> out 1 <111934>  # join source bit 2
const-mul-2 in 1 <111934> out 1 <111935> # join
add in 2 <111647 111935> out 1 <111936>  # join source bit 1
const-mul-2 in 1 <111936> out 1 <111937> # join
add in 2 <111646 111937> out 1 <111938>  # join source bit 0
add in 2 <111938 111938> out 1 <111939>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <111643> out 1 <111940> # multiply-by-constant 4294967295
add in 2 <38 111940> out 1 <111941>      # 'CmpLT DFG.Input - DFG.Conditional'
split in 1 <111941> out 263 <111942 111943 111944 111945 111946 111947 111948 111949 111950 111951 111952 111953 111954 111955 111956 111957 111958 111959 111960 111961 111962 111963 111964 111965 111966 111967 111968 111969 111970 111971 111972 111973 111974 111975 111976 111977 111978 111979 111980 111981 111982 111983 111984 111985 111986 111987 111988 111989 111990 111991 111992 111993 111994 111995 111996 111997 111998 111999 112000 112001 112002 112003 112004 112005 112006 112007 112008 112009 112010 112011 112012 112013 112014 112015 112016 112017 112018 112019 112020 112021 112022 112023 112024 112025 112026 112027 112028 112029 112030 112031 112032 112033 112034 112035 112036 112037 112038 112039 112040 112041 112042 112043 112044 112045 112046 112047 112048 112049 112050 112051 112052 112053 112054 112055 112056 112057 112058 112059 112060 112061 112062 112063 112064 112065 112066 112067 112068 112069 112070 112071 112072 112073 112074 112075 112076 112077 112078 112079 112080 112081 112082 112083 112084 112085 112086 112087 112088 112089 112090 112091 112092 112093 112094 112095 112096 112097 112098 112099 112100 112101 112102 112103 112104 112105 112106 112107 112108 112109 112110 112111 112112 112113 112114 112115 112116 112117 112118 112119 112120 112121 112122 112123 112124 112125 112126 112127 112128 112129 112130 112131 112132 112133 112134 112135 112136 112137 112138 112139 112140 112141 112142 112143 112144 112145 112146 112147 112148 112149 112150 112151 112152 112153 112154 112155 112156 112157 112158 112159 112160 112161 112162 112163 112164 112165 112166 112167 112168 112169 112170 112171 112172 112173 112174 112175 112176 112177 112178 112179 112180 112181 112182 112183 112184 112185 112186 112187 112188 112189 112190 112191 112192 112193 112194 112195 112196 112197 112198 112199 112200 112201 112202 112203 112204> # SplitBus
mul in 2 <111973 111939> out 1 <112205>  # cond trueterm
const-mul-neg-1 in 1 <111973> out 1 <112206> # cond minuscond
add in 2 <100 112206> out 1 <112207>     # cond negcond
mul in 2 <112207 111643> out 1 <112208>  # cond falseterm
add in 2 <112205 112208> out 1 <112209>  # cond result
add in 2 <111635 112209> out 1 <112210>  # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
split in 1 <112210> outplitBus
const-mul-2 in 1 <112242> out 1 <112444> # join source bit 31
add in 2 <112241 112444> out 1 <112445>  # join source bit 30
const-mul-2 in 1 <112445> out 1 <112446> # join
add in 2 <112240 112446> out 1 <112447>  # join source bit 29
const-mul-2 in 1 <112447> out 1 <112448> # join
add in 2 <112239 112448> out 1 <112449>  # join source bit 28
const-mul-2 in 1 <112449> out 1 <112450> # join
add in 2 <112238 112450> out 1 <112451>  # join source bit 27
const-mul-2 in 1 <112451> out 1 <112452> # join
add in 2 <112237 112452> out 1 <112453>  # join source bit 26
const-mul-2 in 1 <112453> out 1 <112454> # join
add in 2 <112236 112454> out 1 <112455>  # join source bit 25
const-mul-2 in 1 <112455> out 1 <112456> # join
add in 2 <112235 112456> out 1 <112457>  # join source bit 24
const-mul-2 in 1 <112457> out 1 <112458> # join
add in 2 <112234 112458> out 1 <112459>  # join source bit 23
const-mul-2 in 1 <112459> out 1 <112460> # join
add in 2 <112233 112460> out 1 <112461>  # join source bit 22
const-mul-2 in 1 <112461> out 1 <112462> # join
add in 2 <112232 112462> out 1 <112463>  # join source bit 21
const-mul-2 in 1 <112463> out 1 <112464> # join
add in 2 <112231 112464> out 1 <112465>  # join source bit 20
const-mul-2 in 1 <112465> out 1 <112466> # join
add in 2 <112230 112466> out 1 <112467>  # join source bit 19
const-mul-2 in 1 <112467> out 1 <112468> # join
add in 2 <112229 112468> out 1 <112469>  # join source bit 18
const-mul-2 in 1 <112469> out 1 <112470> # join
add in 2 <112228 112470> out 1 <112471>  # join source bit 17
const-mul-2 in 1 <112471> out 1 <112472> # join
add in 2 <112227 112472> out 1 <112473>  # join source bit 16
const-mul-2 in 1 <112473> out 1 <112474> # join
add in 2 <112226 112474> out 1 <112475>  # join source bit 15
const-mul-2 in 1 <112475> out 1 <112476> # join
add in 2 <112225 112476> out 1 <112477>  # join source bit 14
const-mul-2 in 1 <112477> out 1 <112478> # join
add in 2 <112224 112478> out 1 <112479>  # join source bit 13
const-mul-2 in 1 <112479> out 1 <112480> # join
add in 2 <112223 112480> out 1 <112481>  # join source bit 12
const-mul-2 in 1 <112481> out 1 <112482> # join
add in 2 <112222 112482> out 1 <112483>  # join source bit 11
const-mul-2 in 1 <112483> out 1 <112484> # join
add in 2 <112221 112484> out 1 <112485>  # join source bit 10
const-mul-2 in 1 <112485> out 1 <112486> # join
add in 2 <112220 112486> out 1 <112487>  # join source bit 9
const-mul-2 in 1 <112487> out 1 <112488> # join
add in 2 <112219 112488> out 1 <112489>  # join source bit 8
const-mul-2 in 1 <112489> out 1 <112490> # join
add in 2 <112218 112490> out 1 <112491>  # join source bit 7
const-mul-2 in 1 <112491> out 1 <112492> # join
add in 2 <112217 112492> out 1 <112493>  # join source bit 6
const-mul-2 in 1 <112493> out 1 <112494> # join
add in 2 <112216 112494> out 1 <112495>  # join source bit 5
const-mul-2 in 1 <112495> out 1 <112496> # join
add in 2 <112215 112496> out 1 <112497>  # join source bit 4
const-mul-2 in 1 <112497> out 1 <112498> # join
add in 2 <112214 112498> out 1 <112499>  # join source bit 3
const-mul-2 in 1 <112499> out 1 <112500> # join
add in 2 <112213 112500> out 1 <112501>  # join source bit 2
const-mul-2 in 1 <112501> out 1 <112502> # join
add in 2 <112212 112502> out 1 <112503>  # join source bit 1
const-mul-2 in 1 <112503> out 1 <112504> # join
add in 2 <112211 112504> out 1 <112505>  # join source bit 0
add in 2 <112505 112505> out 1 <112506>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <111635> out 1 <112507> # multiply-by-constant 4294967295
add in 2 <112209 112507> out 1 <112508>  # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <112508> outplitBus
mul in 2 <112540 112506> out 1 <112774>  # cond trueterm
const-mul-neg-1 in 1 <112540> out 1 <112775> # cond minuscond
add in 2 <100 112775> out 1 <112776>     # cond negcond
mul in 2 <112776 111635> out 1 <112777>  # cond falseterm
add in 2 <112774 112777> out 1 <112778>  # cond result
mul in 2 <111463 111427> out 1 <112779>  # cond trueterm
const-mul-neg-1 in 1 <111463> out 1 <112780> # cond minuscond
add in 2 <100 112780> out 1 <112781>     # cond negcond
mul in 2 <112781 111424> out 1 <112782>  # cond falseterm
add in 2 <112779 112782> out 1 <112783>  # cond result
mul in 2 <111319 111283> out 1 <112784>  # cond trueterm
const-mul-neg-1 in 1 <111319> out 1 <112785> # cond minuscond
add in 2 <100 112785> out 1 <112786>     # cond negcond
mul in 2 <112786 111280> out 1 <112787>  # cond falseterm
add in 2 <112784 112787> out 1 <112788>  # cond result
const-mul-ffffffff in 1 <112788> out 1 <112789> # multiply-by-constant 4294967295
add in 2 <112788 112783> out 1 <112790>  # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
add in 2 <112790 112789> out 1 <112791>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <112791> out 1 <112792> # multiply-by-constant 4294967295
add in 2 <112790 112792> out 1 <112793>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <112788> out 1 <112794> # multiply-by-constant 4294967295
add in 2 <112783 112794> out 1 <112795>  # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <112795> out 200 <112796 112797 112798 112799 112800 112801 112802 112803 112804 112805 112806 112807 112808 112809 112810 112811 112812 112813 112814 112815 112816 112817 112818 112819 112820 112821 112822 112823 112824 112825 112826 112827 112828 112829 112830 112831 112832 112833 112834 112835 112836 112837 112838 112839 112840 112841 112842 112843 112844 112845 112846 112847 112848 112849 112850 112851 112852 112853 112854 112855 112856 112857 112858 112859 112860 112861 112862 112863 112864 112865 112866 112867 112868 112869 112870 112871 112872 112873 112874 112875 112876 112877 112878 112879 112880 112881 112882 112883 112884 112885 112886 112887 112888 112889 112890 112891 112892 112893 112894 112895 112896 112897 112898 112899 112900 112901 112902 112903 112904 112905 112906 112907 112908 112909 112910 112911 112912 112913 112914 112915 112916 112917 112918 112919 112920 112921 112922 112923 112924 112925 112926 112927 112928 112929 112930 112931 112932 112933 112934 112935 112936 112937 112938 112939 112940 112941 112942 112943 112944 112945 112946 112947 112948 112949 112950 112951 112952 112953 112954 112955 112956 112957 112958 112959 112960 112961 112962 112963 112964 112965 112966 112967 112968 112969 112970 112971 112972 112973 112974 112975 112976 112977 112978 112979 112980 112981 112982 112983 112984 112985 112986 112987 112988 112989 112990 112991 112992 112993 112994 112995> # SplitBus
mul in 2 <112827 112793> out 1 <112996>  # cond trueterm
const-mul-neg-1 in 1 <112827> out 1 <112997> # cond minuscond
add in 2 <100 112997> out 1 <112998>     # cond negcond
mul in 2 <112998 112783> out 1 <112999>  # cond falseterm
add in 2 <112996 112999> out 1 <113000>  # cond result
const-mul-ffffffff in 1 <113000> out 1 <113001> # multiply-by-constant 4294967295
add in 2 <113000 112778> out 1 <113002>  # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
split in 1 <113002> outplitBus
const-mul-2 in 1 <113034> out 1 <113238> # join source bit 31
add in 2 <113033 113238> out 1 <113239>  # join source bit 30
const-mul-2 in 1 <113239> out 1 <113240> # join
add in 2 <113032 113240> out 1 <113241>  # join source bit 29
const-mul-2 in 1 <113241> out 1 <113242> # join
add in 2 <113031 113242> out 1 <113243>  # join source bit 28
const-mul-2 in 1 <113243> out 1 <113244> # join
add in 2 <113030 113244> out 1 <113245>  # join source bit 27
const-mul-2 in 1 <113245> out 1 <113246> # join
add in 2 <113029 113246> out 1 <113247>  # join source bit 26
const-mul-2 in 1 <113247> out 1 <113248> # join
add in 2 <113028 113248> out 1 <113249>  # join source bit 25
const-mul-2 in 1 <113249> out 1 <113250> # join
add in 2 <113027 113250> out 1 <113251>  # join source bit 24
const-mul-2 in 1 <113251> out 1 <113252> # join
add in 2 <113026 113252> out 1 <113253>  # join source bit 23
const-mul-2 in 1 <113253> out 1 <113254> # join
add in 2 <113025 113254> out 1 <113255>  # join source bit 22
const-mul-2 in 1 <113255> out 1 <113256> # join
add in 2 <113024 113256> out 1 <113257>  # join source bit 21
const-mul-2 in 1 <113257> out 1 <113258> # join
add in 2 <113023 113258> out 1 <113259>  # join source bit 20
const-mul-2 in 1 <113259> out 1 <113260> # join
add in 2 <113022 113260> out 1 <113261>  # join source bit 19
const-mul-2 in 1 <113261> out 1 <113262> # join
add in 2 <113021 113262> out 1 <113263>  # join source bit 18
const-mul-2 in 1 <113263> out 1 <113264> # join
add in 2 <113020 113264> out 1 <113265>  # join source bit 17
const-mul-2 in 1 <113265> out 1 <113266> # join
add in 2 <113019 113266> out 1 <113267>  # join source bit 16
const-mul-2 in 1 <113267> out 1 <113268> # join
add in 2 <113018 113268> out 1 <113269>  # join source bit 15
const-mul-2 in 1 <113269> out 1 <113270> # join
add in 2 <113017 113270> out 1 <113271>  # join source bit 14
const-mul-2 in 1 <113271> out 1 <113272> # join
add in 2 <113016 113272> out 1 <113273>  # join source bit 13
const-mul-2 in 1 <113273> out 1 <113274> # join
add in 2 <113015 113274> out 1 <113275>  # join source bit 12
const-mul-2 in 1 <113275> out 1 <113276> # join
add in 2 <113014 113276> out 1 <113277>  # join source bit 11
const-mul-2 in 1 <113277> out 1 <113278> # join
add in 2 <113013 113278> out 1 <113279>  # join source bit 10
const-mul-2 in 1 <113279> out 1 <113280> # join
add in 2 <113012 113280> out 1 <113281>  # join source bit 9
const-mul-2 in 1 <113281> out 1 <113282> # join
add in 2 <113011 113282> out 1 <113283>  # join source bit 8
const-mul-2 in 1 <113283> out 1 <113284> # join
add in 2 <113010 113284> out 1 <113285>  # join source bit 7
const-mul-2 in 1 <113285> out 1 <113286> # join
add in 2 <113009 113286> out 1 <113287>  # join source bit 6
const-mul-2 in 1 <113287> out 1 <113288> # join
add in 2 <113008 113288> out 1 <113289>  # join source bit 5
const-mul-2 in 1 <113289> out 1 <113290> # join
add in 2 <113007 113290> out 1 <113291>  # join source bit 4
const-mul-2 in 1 <113291> out 1 <113292> # join
add in 2 <113006 113292> out 1 <113293>  # join source bit 3
const-mul-2 in 1 <113293> out 1 <113294> # join
add in 2 <113005 113294> out 1 <113295>  # join source bit 2
const-mul-2 in 1 <113295> out 1 <113296> # join
add in 2 <113004 113296> out 1 <113297>  # join source bit 1
const-mul-2 in 1 <113297> out 1 <113298> # join
add in 2 <113003 113298> out 1 <113299>  # join source bit 0
add in 2 <113299 113299> out 1 <113300>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <113300> out 1 <113301> # multiply-by-constant 4294967295
add in 2 <113002 113301> out 1 <113302>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <113000> out 1 <113303> # multiply-by-constant 4294967295
add in 2 <112778 113303> out 1 <113304>  # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <113304> outplitBus
mul in 2 <113336 113302> out 1 <113572>  # cond trueterm
const-mul-neg-1 in 1 <113336> out 1 <113573> # cond minuscond
add in 2 <100 113573> out 1 <113574>     # cond negcond
mul in 2 <113574 112778> out 1 <113575>  # cond falseterm
add in 2 <113572 113575> out 1 <113576>  # cond result
add in 2 <113576 104> out 1 <113577>     # ArithBusReq.AddReq(DFG.Conditional,DFG.Constant)
const-mul-ffffffff in 1 <36> out 1 <113578> # multiply-by-constant 4294967295
add in 2 <113577 113578> out 1 <113579>  # 'CmpLT DFG.Add - DFG.Input'
split in 1 <113579> out 238 <113580 113581 113582 113583 113584 113585 113586 113587 113588 113589 113590 113591 113592 113593 113594 113595 113596 113597 113598 113599 113600 113601 113602 113603 113604 113605 113606 113607 113608 113609 113610 113611 113612 113613 113614 113615 113616 113617 113618 113619 113620 113621 113622 113623 113624 113625 113626 113627 113628 113629 113630 113631 113632 113633 113634 113635 113636 113637 113638 113639 113640 113641 113642 113643 113644 113645 113646 113647 113648 113649 113650 113651 113652 113653 113654 113655 113656 113657 113658 113659 113660 113661 113662 113663 113664 113665 113666 113667 113668 113669 113670 113671 113672 113673 113674 113675 113676 113677 113678 113679 113680 113681 113682 113683 113684 113685 113686 113687 113688 113689 113690 113691 113692 113693 113694 113695 113696 113697 113698 113699 113700 113701 113702 113703 113704 113705 113706 113707 113708 113709 113710 113711 113712 113713 113714 113715 113716 113717 113718 113719 113720 113721 113722 113723 113724 113725 113726 113727 113728 113729 113730 113731 113732 113733 113734 113735 113736 113737 113738 113739 113740 113741 113742 113743 113744 113745 113746 113747 113748 113749 113750 113751 113752 113753 113754 113755 113756 113757 113758 113759 113760 113761 113762 113763 113764 113765 113766 113767 113768 113769 113770 113771 113772 113773 113774 113775 113776 113777 113778 113779 113780 113781 113782 113783 113784 113785 113786 113787 113788 113789 113790 113791 113792 113793 113794 113795 113796 113797 113798 113799 113800 113801 113802 113803 113804 113805 113806 113807 113808 113809 113810 113811 113812 113813 113814 113815 113816 113817> # SplitBus
mul in 2 <113611 103> out 1 <113818>     # cond trueterm
const-mul-neg-1 in 1 <113611> out 1 <113819> # cond minuscond
add in 2 <100 113819> out 1 <113820>     # cond negcond
mul in 2 <113820 102> out 1 <113821>     # cond falseterm
add in 2 <113818 113821> out 1 <113822>  # cond result
add in 2 <113576 3084> out 1 <113823>    # ArithBusReq.AddReq(DFG.Conditional,DFG.Negate)
const-mul-ffffffff in 1 <113823> out 1 <113824> # multiply-by-constant 4294967295
add in 2 <36 113824> out 1 <113825>      # 'CmpLT DFG.Input - DFG.Subtract'
split in 1 <113825> outplitBus
mul in 2 <113857 103> out 1 <114096>     # cond trueterm
const-mul-neg-1 in 1 <113857> out 1 <114097> # cond minuscond
add in 2 <100 114097> out 1 <114098>     # cond negcond
mul in 2 <114098 113822> out 1 <114099>  # cond falseterm
add in 2 <114096 114099> out 1 <114100>  # cond result
const-mul-ffffffff in 1 <35> out 1 <114101> # multiply-by-constant 4294967295
add in 2 <35 36> out 1 <114102>          # ArithBusReq.AddReq(DFG.Input,DFG.Input)
add in 2 <114102 114101> out 1 <114103>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <114103> out 1 <114104> # multiply-by-constant 4294967295
add in 2 <114102 114104> out 1 <114105>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <35> out 1 <114106> # multiply-by-constant 4294967295
add in 2 <36 114106> out 1 <114107>      # 'CmpLT DFG.Input - DFG.Input'
split in 1 <114107> out 65 <114108 114109 114110 114111 114112 114113 114114 114115 114116 114117 114118 114119 114120 114121 114122 114123 114124 114125 114126 114127 114128 114129 114130 114131 114132 114133 114134 114135 114136 114137 114138 114139 114140 114141 114142 114143 114144 114145 114146 114147 114148 114149 114150 114151 114152 114153 114154 114155 114156 114157 114158 114159 114160 114161 114162 114163 114164 114165 114166 114167 114168 114169 114170 114171 114172> # SplitBus
mul in 2 <114139 114105> out 1 <114173>  # cond trueterm
const-mul-neg-1 in 1 <114139> out 1 <114174> # cond minuscond
add in 2 <100 114174> out 1 <114175>     # cond negcond
mul in 2 <114175 36> out 1 <114176>      # cond falseterm
add in 2 <114173 114176> out 1 <114177>  # cond result
const-mul-ffffffff in 1 <114177> out 1 <114178> # multiply-by-constant 4294967295
add in 2 <114177 37> out 1 <114179>      # ArithBusReq.AddReq(DFG.Conditional,DFG.Input)
add in 2 <114179 114178> out 1 <114180>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <114180> out 1 <114181> # multiply-by-constant 4294967295
add in 2 <114179 114181> out 1 <114182>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <114177> out 1 <114183> # multiply-by-constant 4294967295
add in 2 <37 114183> out 1 <114184>      # 'CmpLT DFG.Input - DFG.Conditional'
split in 1 <114184> out 131 <114185 114186 114187 114188 114189 114190 114191 114192 114193 114194 114195 114196 114197 114198 114199 114200 114201 114202 114203 114204 114205 114206 114207 114208 114209 114210 114211 114212 114213 114214 114215 114216 114217 114218 114219 114220 114221 114222 114223 114224 114225 114226 114227 114228 114229 114230 114231 114232 114233 114234 114235 114236 114237 114238 114239 114240 114241 114242 114243 114244 114245 114246 114247 114248 114249 114250 114251 114252 114253 114254 114255 114256 114257 114258 114259 114260 114261 114262 114263 114264 114265 114266 114267 114268 114269 114270 114271 114272 114273 114274 114275 114276 114277 114278 114279 114280 114281 114282 114283 114284 114285 114286 114287 114288 114289 114290 114291 114292 114293 114294 114295 114296 114297 114298 114299 114300 114301 114302 114303 114304 114305 114306 114307 114308 114309 114310 114311 114312 114313 114314 114315> # SplitBus
mul in 2 <114216 114182> out 1 <114316>  # cond trueterm
const-mul-neg-1 in 1 <114216> out 1 <114317> # cond minuscond
add in 2 <100 114317> out 1 <114318>     # cond negcond
mul in 2 <114318 37> out 1 <114319>      # cond falseterm
add in 2 <114316 114319> out 1 <114320>  # cond result
const-mul-ffffffff in 1 <114320> out 1 <114321> # multiply-by-constant 4294967295
add in 2 <114320 38> out 1 <114322>      # ArithBusReq.AddReq(DFG.Conditional,DFG.Input)
add in 2 <114322 114321> out 1 <114323>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <114320> out 1 <114324> # multiply-by-constant 4294967295
add in 2 <38 114324> out 1 <114325>      # 'CmpLT DFG.Input - DFG.Conditional'
split in 1 <114325> out 197 <114326 114327 114328 114329 114330 114331 114332 114333 114334 114335 114336 114337 114338 114339 114340 114341 114342 114343 114344 114345 114346 114347 114348 114349 114350 114351 114352 114353 114354 114355 114356 114357 114358 114359 114360 114361 114362 114363 114364 114365 114366 114367 114368 114369 114370 114371 114372 114373 114374 114375 114376 114377 114378 114379 114380 114381 114382 114383 114384 114385 114386 114387 114388 114389 114390 114391 114392 114393 114394 114395 114396 114397 114398 114399 114400 114401 114402 114403 114404 114405 114406 114407 114408 114409 114410 114411 114412 114413 114414 114415 114416 114417 114418 114419 114420 114421 114422 114423 114424 114425 114426 114427 114428 114429 114430 114431 114432 114433 114434 114435 114436 114437 114438 114439 114440 114441 114442 114443 114444 114445 114446 114447 114448 114449 114450 114451 114452 114453 114454 114455 114456 114457 114458 114459 114460 114461 114462 114463 114464 114465 114466 114467 114468 114469 114470 114471 114472 114473 114474 114475 114476 114477 114478 114479 114480 114481 114482 114483 114484 114485 114486 114487 114488 114489 114490 114491 114492 114493 114494 114495 114496 114497 114498 114499 114500 114501 114502 114503 114504 114505 114506 114507 114508 114509 114510 114511 114512 114513 114514 114515 114516 114517 114518 114519 114520 114521 114522> # SplitBus
mul in 2 <114357 114323> out 1 <114523>  # cond trueterm
const-mul-neg-1 in 1 <114357> out 1 <114524> # cond minuscond
add in 2 <100 114524> out 1 <114525>     # cond negcond
mul in 2 <114525 114320> out 1 <114526>  # cond falseterm
add in 2 <114523 114526> out 1 <114527>  # cond result
mul in 2 <114216 114180> out 1 <114528>  # cond trueterm
const-mul-neg-1 in 1 <114216> out 1 <114529> # cond minuscond
add in 2 <100 114529> out 1 <114530>     # cond negcond
mul in 2 <114530 114177> out 1 <114531>  # cond falseterm
add in 2 <114528 114531> out 1 <114532>  # cond result
mul in 2 <114139 114103> out 1 <114533>  # cond trueterm
const-mul-neg-1 in 1 <114139> out 1 <114534> # cond minuscond
add in 2 <100 114534> out 1 <114535>     # cond negcond
mul in 2 <114535 35> out 1 <114536>      # cond falseterm
add in 2 <114533 114536> out 1 <114537>  # cond result
const-mul-ffffffff in 1 <114537> out 1 <114538> # multiply-by-constant 4294967295
add in 2 <114537 114532> out 1 <114539>  # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
add in 2 <114539 114538> out 1 <114540>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <114540> out 1 <114541> # multiply-by-constant 4294967295
add in 2 <114539 114541> out 1 <114542>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <114537> out 1 <114543> # multiply-by-constant 4294967295
add in 2 <114532 114543> out 1 <114544>  # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <114544> out 132 <114545 114546 114547 114548 114549 114550 114551 114552 114553 114554 114555 114556 114557 114558 114559 114560 114561 114562 114563 114564 114565 114566 114567 114568 114569 114570 114571 114572 114573 114574 114575 114576 114577 114578 114579 114580 114581 114582 114583 114584 114585 114586 114587 114588 114589 114590 114591 114592 114593 114594 114595 114596 114597 114598 114599 114600 114601 114602 114603 114604 114605 114606 114607 114608 114609 114610 114611 114612 114613 114614 114615 114616 114617 114618 114619 114620 114621 114622 114623 114624 114625 114626 114627 114628 114629 114630 114631 114632 114633 114634 114635 114636 114637 114638 114639 114640 114641 114642 114643 114644 114645 114646 114647 114648 114649 114650 114651 114652 114653 114654 114655 114656 114657 114658 114659 114660 114661 114662 114663 114664 114665 114666 114667 114668 114669 114670 114671 114672 114673 114674 114675 114676> # SplitBus
mul in 2 <114576 114542> out 1 <114677>  # cond trueterm
const-mul-neg-1 in 1 <114576> out 1 <114678> # cond minuscond
add in 2 <100 114678> out 1 <114679>     # cond negcond
mul in 2 <114679 114532> out 1 <114680>  # cond falseterm
add in 2 <114677 114680> out 1 <114681>  # cond result
const-mul-ffffffff in 1 <114681> out 1 <114682> # multiply-by-constant 4294967295
add in 2 <114681 114527> out 1 <114683>  # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
add in 2 <114683 114682> out 1 <114684>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <114684> out 1 <114685> # multiply-by-constant 4294967295
add in 2 <114683 114685> out 1 <114686>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <114681> out 1 <114687> # multiply-by-constant 4294967295
add in 2 <114527 114687> out 1 <114688>  # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <114688> out 199 <114689 114690 114691 114692 114693 114694 114695 114696 114697 114698 114699 114700 114701 114702 114703 114704 114705 114706 114707 114708 114709 114710 114711 114712 114713 114714 114715 114716 114717 114718 114719 114720 114721 114722 114723 114724 114725 114726 114727 114728 114729 114730 114731 114732 114733 114734 114735 114736 114737 114738 114739 114740 114741 114742 114743 114744 114745 114746 114747 114748 114749 114750 114751 114752 114753 114754 114755 114756 114757 114758 114759 114760 114761 114762 114763 114764 114765 114766 114767 114768 114769 114770 114771 114772 114773 114774 114775 114776 114777 114778 114779 114780 114781 114782 114783 114784 114785 114786 114787 114788 114789 114790 114791 114792 114793 114794 114795 114796 114797 114798 114799 114800 114801 114802 114803 114804 114805 114806 114807 114808 114809 114810 114811 114812 114813 114814 114815 114816 114817 114818 114819 114820 114821 114822 114823 114824 114825 114826 114827 114828 114829 114830 114831 114832 114833 114834 114835 114836 114837 114838 114839 114840 114841 114842 114843 114844 114845 114846 114847 114848 114849 114850 114851 114852 114853 114854 114855 114856 114857 114858 114859 114860 114861 114862 114863 114864 114865 114866 114867 114868 114869 114870 114871 114872 114873 114874 114875 114876 114877 114878 114879 114880 114881 114882 114883 114884 114885 114886 114887> # SplitBus
mul in 2 <114720 114686> out 1 <114888>  # cond trueterm
const-mul-neg-1 in 1 <114720> out 1 <114889> # cond minuscond
add in 2 <100 114889> out 1 <114890>     # cond negcond
mul in 2 <114890 114527> out 1 <114891>  # cond falseterm
add in 2 <114888 114891> out 1 <114892>  # cond result
const-mul-ffffffff in 1 <114892> out 1 <114893> # multiply-by-constant 4294967295
const-mul-ffffffff in 1 <114323> out 1 <114894> # multiply-by-constant 4294967295
add in 2 <114322 114894> out 1 <114895>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
mul in 2 <114357 114895> out 1 <114896>  # cond trueterm
const-mul-neg-1 in 1 <114357> out 1 <114897> # cond minuscond
add in 2 <100 114897> out 1 <114898>     # cond negcond
mul in 2 <114898 38> out 1 <114899>      # cond falseterm
add in 2 <114896 114899> out 1 <114900>  # cond result
const-mul-ffffffff in 1 <114900> out 1 <114901> # multiply-by-constant 4294967295
add in 2 <114900 39> out 1 <114902>      # ArithBusReq.AddReq(DFG.Conditional,DFG.Input)
split in 1 <114902> outplitBus
const-mul-2 in 1 <114934> out 1 <115134> # join source bit 31
add in 2 <114933 115134> out 1 <115135>  # join source bit 30
const-mul-2 in 1 <115135> out 1 <115136> # join
add in 2 <114932 115136> out 1 <115137>  # join source bit 29
const-mul-2 in 1 <115137> out 1 <115138> # join
add in 2 <114931 115138> out 1 <115139>  # join source bit 28
const-mul-2 in 1 <115139> out 1 <115140> # join
add in 2 <114930 115140> out 1 <115141>  # join source bit 27
const-mul-2 in 1 <115141> out 1 <115142> # join
add in 2 <114929 115142> out 1 <115143>  # join source bit 26
const-mul-2 in 1 <115143> out 1 <115144> # join
add in 2 <114928 115144> out 1 <115145>  # join source bit 25
const-mul-2 in 1 <115145> out 1 <115146> # join
add in 2 <114927 115146> out 1 <115147>  # join source bit 24
const-mul-2 in 1 <115147> out 1 <115148> # join
add in 2 <114926 115148> out 1 <115149>  # join source bit 23
const-mul-2 in 1 <115149> out 1 <115150> # join
add in 2 <114925 115150> out 1 <115151>  # join source bit 22
const-mul-2 in 1 <115151> out 1 <115152> # join
add in 2 <114924 115152> out 1 <115153>  # join source bit 21
const-mul-2 in 1 <115153> out 1 <115154> # join
add in 2 <114923 115154> out 1 <115155>  # join source bit 20
const-mul-2 in 1 <115155> out 1 <115156> # join
add in 2 <114922 115156> out 1 <115157>  # join source bit 19
const-mul-2 in 1 <115157> out 1 <115158> # join
add in 2 <114921 115158> out 1 <115159>  # join source bit 18
const-mul-2 in 1 <115159> out 1 <115160> # join
add in 2 <114920 115160> out 1 <115161>  # join source bit 17
const-mul-2 in 1 <115161> out 1 <115162> # join
add in 2 <114919 115162> out 1 <115163>  # join source bit 16
const-mul-2 in 1 <115163> out 1 <115164> # join
add in 2 <114918 115164> out 1 <115165>  # join source bit 15
const-mul-2 in 1 <115165> out 1 <115166> # join
add in 2 <114917 115166> out 1 <115167>  # join source bit 14
const-mul-2 in 1 <115167> out 1 <115168> # join
add in 2 <114916 115168> out 1 <115169>  # join source bit 13
const-mul-2 in 1 <115169> out 1 <115170> # join
add in 2 <114915 115170> out 1 <115171>  # join source bit 12
const-mul-2 in 1 <115171> out 1 <115172> # join
add in 2 <114914 115172> out 1 <115173>  # join source bit 11
const-mul-2 in 1 <115173> out 1 <115174> # join
add in 2 <114913 115174> out 1 <115175>  # join source bit 10
const-mul-2 in 1 <115175> out 1 <115176> # join
add in 2 <114912 115176> out 1 <115177>  # join source bit 9
const-mul-2 in 1 <115177> out 1 <115178> # join
add in 2 <114911 115178> out 1 <115179>  # join source bit 8
const-mul-2 in 1 <115179> out 1 <115180> # join
add in 2 <114910 115180> out 1 <115181>  # join source bit 7
const-mul-2 in 1 <115181> out 1 <115182> # join
add in 2 <114909 115182> out 1 <115183>  # join source bit 6
const-mul-2 in 1 <115183> out 1 <115184> # join
add in 2 <114908 115184> out 1 <115185>  # join source bit 5
const-mul-2 in 1 <115185> out 1 <115186> # join
add in 2 <114907 115186> out 1 <115187>  # join source bit 4
const-mul-2 in 1 <115187> out 1 <115188> # join
add in 2 <114906 115188> out 1 <115189>  # join source bit 3
const-mul-2 in 1 <115189> out 1 <115190> # join
add in 2 <114905 115190> out 1 <115191>  # join source bit 2
const-mul-2 in 1 <115191> out 1 <115192> # join
add in 2 <114904 115192> out 1 <115193>  # join source bit 1
const-mul-2 in 1 <115193> out 1 <115194> # join
add in 2 <114903 115194> out 1 <115195>  # join source bit 0
add in 2 <115195 115195> out 1 <115196>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <114900> out 1 <115197> # multiply-by-constant 4294967295
add in 2 <39 115197> out 1 <115198>      # 'CmpLT DFG.Input - DFG.Conditional'
split in 1 <115198> outplitBus
mul in 2 <115230 115196> out 1 <115462>  # cond trueterm
const-mul-neg-1 in 1 <115230> out 1 <115463> # cond minuscond
add in 2 <100 115463> out 1 <115464>     # cond negcond
mul in 2 <115464 114900> out 1 <115465>  # cond falseterm
add in 2 <115462 115465> out 1 <115466>  # cond result
add in 2 <114892 115466> out 1 <115467>  # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
split in 1 <115467> out 233 <115468 115469 115470 115471 115472 115473 115474 115475 115476 115477 115478 115479 115480 115481 115482 115483 115484 115485 115486 115487 115488 115489 115490 115491 115492 115493 115494 115495 115496 115497 115498 115499 115500 115501 115502 115503 115504 115505 115506 115507 115508 115509 115510 115511 115512 115513 115514 115515 115516 115517 115518 115519 115520 115521 115522 115523 115524 115525 115526 115527 115528 115529 115530 115531 115532 115533 115534 115535 115536 115537 115538 115539 115540 115541 115542 115543 115544 115545 115546 115547 115548 115549 115550 115551 115552 115553 115554 115555 115556 115557 115558 115559 115560 115561 115562 115563 115564 115565 115566 115567 115568 115569 115570 115571 115572 115573 115574 115575 115576 115577 115578 115579 115580 115581 115582 115583 115584 115585 115586 115587 115588 115589 115590 115591 115592 115593 115594 115595 115596 115597 115598 115599 115600 115601 115602 115603 115604 115605 115606 115607 115608 115609 115610 115611 115612 115613 115614 115615 115616 115617 115618 115619 115620 115621 115622 115623 115624 115625 115626 115627 115628 115629 115630 115631 115632 115633 115634 115635 115636 115637 115638 115639 115640 115641 115642 115643 115644 115645 115646 115647 115648 115649 115650 115651 115652 115653 115654 115655 115656 115657 115658 115659 115660 115661 115662 115663 115664 115665 115666 115667 115668 115669 115670 115671 115672 115673 115674 115675 115676 115677 115678 115679 115680 115681 115682 115683 115684 115685 115686 115687 115688 115689 115690 115691 115692 115693 115694 115695 115696 115697 115698 115699 115700> # SplitBus
const-mul-2 in 1 <115499> out 1 <115701> # join source bit 31
add in 2 <115498 115701> out 1 <115702>  # join source bit 30
const-mul-2 in 1 <115702> out 1 <115703> # join
add in 2 <115497 115703> out 1 <115704>  # join source bit 29
const-mul-2 in 1 <115704> out 1 <115705> # join
add in 2 <115496 115705> out 1 <115706>  # join source bit 28
const-mul-2 in 1 <115706> out 1 <115707> # join
add in 2 <115495 115707> out 1 <115708>  # join source bit 27
const-mul-2 in 1 <115708> out 1 <115709> # join
add in 2 <115494 115709> out 1 <115710>  # join source bit 26
const-mul-2 in 1 <115710> out 1 <115711> # join
add in 2 <115493 115711> out 1 <115712>  # join source bit 25
const-mul-2 in 1 <115712> out 1 <115713> # join
add in 2 <115492 115713> out 1 <115714>  # join source bit 24
const-mul-2 in 1 <115714> out 1 <115715> # join
add in 2 <115491 115715> out 1 <115716>  # join source bit 23
const-mul-2 in 1 <115716> out 1 <115717> # join
add in 2 <115490 115717> out 1 <115718>  # join source bit 22
const-mul-2 in 1 <115718> out 1 <115719> # join
add in 2 <115489 115719> out 1 <115720>  # join source bit 21
const-mul-2 in 1 <115720> out 1 <115721> # join
add in 2 <115488 115721> out 1 <115722>  # join source bit 20
const-mul-2 in 1 <115722> out 1 <115723> # join
add in 2 <115487 115723> out 1 <115724>  # join source bit 19
const-mul-2 in 1 <115724> out 1 <115725> # join
add in 2 <115486 115725> out 1 <115726>  # join source bit 18
const-mul-2 in 1 <115726> out 1 <115727> # join
add in 2 <115485 115727> out 1 <115728>  # join source bit 17
const-mul-2 in 1 <115728> out 1 <115729> # join
add in 2 <115484 115729> out 1 <115730>  # join source bit 16
const-mul-2 in 1 <115730> out 1 <115731> # join
add in 2 <115483 115731> out 1 <115732>  # join source bit 15
const-mul-2 in 1 <115732> out 1 <115733> # join
add in 2 <115482 115733> out 1 <115734>  # join source bit 14
const-mul-2 in 1 <115734> out 1 <115735> # join
add in 2 <115481 115735> out 1 <115736>  # join source bit 13
const-mul-2 in 1 <115736> out 1 <115737> # join
add in 2 <115480 115737> out 1 <115738>  # join source bit 12
const-mul-2 in 1 <115738> out 1 <115739> # join
add in 2 <115479 115739> out 1 <115740>  # join source bit 11
const-mul-2 in 1 <115740> out 1 <115741> # join
add in 2 <115478 115741> out 1 <115742>  # join source bit 10
const-mul-2 in 1 <115742> out 1 <115743> # join
add in 2 <115477 115743> out 1 <115744>  # join source bit 9
const-mul-2 in 1 <115744> out 1 <115745> # join
add in 2 <115476 115745> out 1 <115746>  # join source bit 8
const-mul-2 in 1 <115746> out 1 <115747> # join
add in 2 <115475 115747> out 1 <115748>  # join source bit 7
const-mul-2 in 1 <115748> out 1 <115749> # join
add in 2 <115474 115749> out 1 <115750>  # join source bit 6
const-mul-2 in 1 <115750> out 1 <115751> # join
add in 2 <115473 115751> out 1 <115752>  # join source bit 5
const-mul-2 in 1 <115752> out 1 <115753> # join
add in 2 <115472 115753> out 1 <115754>  # join source bit 4
const-mul-2 in 1 <115754> out 1 <115755> # join
add in 2 <115471 115755> out 1 <115756>  # join source bit 3
const-mul-2 in 1 <115756> out 1 <115757> # join
add in 2 <115470 115757> out 1 <115758>  # join source bit 2
const-mul-2 in 1 <115758> out 1 <115759> # join
add in 2 <115469 115759> out 1 <115760>  # join source bit 1
const-mul-2 in 1 <115760> out 1 <115761> # join
add in 2 <115468 115761> out 1 <115762>  # join source bit 0
add in 2 <115762 115762> out 1 <115763>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <114892> out 1 <115764> # multiply-by-constant 4294967295
add in 2 <115466 115764> out 1 <115765>  # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <115765> out 265 <115766 115767 115768 115769 115770 115771 115772 115773 115774 115775 115776 115777 115778 115779 115780 115781 115782 115783 115784 115785 115786 115787 115788 115789 115790 115791 115792 115793 115794 115795 115796 115797 115798 115799 115800 115801 115802 115803 115804 115805 115806 115807 115808 115809 115810 115811 115812 115813 115814 115815 115816 115817 115818 115819 115820 115821 115822 115823 115824 115825 115826 115827 115828 115829 115830 115831 115832 115833 115834 115835 115836 115837 115838 115839 115840 115841 115842 115843 115844 115845 115846 115847 115848 115849 115850 115851 115852 115853 115854 115855 115856 115857 115858 115859 115860 115861 115862 115863 115864 115865 115866 115867 115868 115869 115870 115871 115872 115873 115874 115875 115876 115877 115878 115879 115880 115881 115882 115883 115884 115885 115886 115887 115888 115889 115890 115891 115892 115893 115894 115895 115896 115897 115898 115899 115900 115901 115902 115903 115904 115905 115906 115907 115908 115909 115910 115911 115912 115913 115914 115915 115916 115917 115918 115919 115920 115921 115922 115923 115924 115925 115926 115927 115928 115929 115930 115931 115932 115933 115934 115935 115936 115937 115938 115939 115940 115941 115942 115943 115944 115945 115946 115947 115948 115949 115950 115951 115952 115953 115954 115955 115956 115957 115958 115959 115960 115961 115962 115963 115964 115965 115966 115967 115968 115969 115970 115971 115972 115973 115974 115975 115976 115977 115978 115979 115980 115981 115982 115983 115984 115985 115986 115987 115988 115989 115990 115991 115992 115993 115994 115995 115996 115997 115998 115999 116000 116001 116002 116003 116004 116005 116006 116007 116008 116009 116010 116011 116012 116013 116014 116015 116016 116017 116018 116019 116020 116021 116022 116023 116024 116025 116026 116027 116028 116029 116030> # SplitBus
mul in 2 <115797 115763> out 1 <116031>  # cond trueterm
const-mul-neg-1 in 1 <115797> out 1 <116032> # cond minuscond
add in 2 <100 116032> out 1 <116033>     # cond negcond
mul in 2 <116033 114892> out 1 <116034>  # cond falseterm
add in 2 <116031 116034> out 1 <116035>  # cond result
mul in 2 <114720 114684> out 1 <116036>  # cond trueterm
const-mul-neg-1 in 1 <114720> out 1 <116037> # cond minuscond
add in 2 <100 116037> out 1 <116038>     # cond negcond
mul in 2 <116038 114681> out 1 <116039>  # cond falseterm
add in 2 <116036 116039> out 1 <116040>  # cond result
mul in 2 <114576 114540> out 1 <116041>  # cond trueterm
const-mul-neg-1 in 1 <114576> out 1 <116042> # cond minuscond
add in 2 <100 116042> out 1 <116043>     # cond negcond
mul in 2 <116043 114537> out 1 <116044>  # cond falseterm
add in 2 <116041 116044> out 1 <116045>  # cond result
const-mul-ffffffff in 1 <116045> out 1 <116046> # multiply-by-constant 4294967295
add in 2 <116045 116040> out 1 <116047>  # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
add in 2 <116047 116046> out 1 <116048>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <116048> out 1 <116049> # multiply-by-constant 4294967295
add in 2 <116047 116049> out 1 <116050>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <116045> out 1 <116051> # multiply-by-constant 4294967295
add in 2 <116040 116051> out 1 <116052>  # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <116052> out 200 <116053 116054 116055 116056 116057 116058 116059 116060 116061 116062 116063 116064 116065 116066 116067 116068 116069 116070 116071 116072 116073 116074 116075 116076 116077 116078 116079 116080 116081 116082 116083 116084 116085 116086 116087 116088 116089 116090 116091 116092 116093 116094 116095 116096 116097 116098 116099 116100 116101 116102 116103 116104 116105 116106 116107 116108 116109 116110 116111 116112 116113 116114 116115 116116 116117 116118 116119 116120 116121 116122 116123 116124 116125 116126 116127 116128 116129 116130 116131 116132 116133 116134 116135 116136 116137 116138 116139 116140 116141 116142 116143 116144 116145 116146 116147 116148 116149 116150 116151 116152 116153 116154 116155 116156 116157 116158 116159 116160 116161 116162 116163 116164 116165 116166 116167 116168 116169 116170 116171 116172 116173 116174 116175 116176 116177 116178 116179 116180 116181 116182 116183 116184 116185 116186 116187 116188 116189 116190 116191 116192 116193 116194 116195 116196 116197 116198 116199 116200 116201 116202 116203 116204 116205 116206 116207 116208 116209 116210 116211 116212 116213 116214 116215 116216 116217 116218 116219 116220 116221 116222 116223 116224 116225 116226 116227 116228 116229 116230 116231 116232 116233 116234 116235 116236 116237 116238 116239 116240 116241 116242 116243 116244 116245 116246 116247 116248 116249 116250 116251 116252> # SplitBus
mul in 2 <116084 116050> out 1 <116253>  # cond trueterm
const-mul-neg-1 in 1 <116084> out 1 <116254> # cond minuscond
add in 2 <100 116254> out 1 <116255>     # cond negcond
mul in 2 <116255 116040> out 1 <116256>  # cond falseterm
add in 2 <116253 116256> out 1 <116257>  # cond result
const-mul-ffffffff in 1 <116257> out 1 <116258> # multiply-by-constant 4294967295
add in 2 <116257 116035> out 1 <116259>  # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
split in 1 <116259> out 235 <116260 116261 116262 116263 116264 116265 116266 116267 116268 116269 116270 116271 116272 116273 116274 116275 116276 116277 116278 116279 116280 116281 116282 116283 116284 116285 116286 116287 116288 116289 116290 116291 116292 116293 116294 116295 116296 116297 116298 116299 116300 116301 116302 116303 116304 116305 116306 116307 116308 116309 116310 116311 116312 116313 116314 116315 116316 116317 116318 116319 116320 116321 116322 116323 116324 116325 116326 116327 116328 116329 116330 116331 116332 116333 116334 116335 116336 116337 116338 116339 116340 116341 116342 116343 116344 116345 116346 116347 116348 116349 116350 116351 116352 116353 116354 116355 116356 116357 116358 116359 116360 116361 116362 116363 116364 116365 116366 116367 116368 116369 116370 116371 116372 116373 116374 116375 116376 116377 116378 116379 116380 116381 116382 116383 116384 116385 116386 116387 116388 116389 116390 116391 116392 116393 116394 116395 116396 116397 116398 116399 116400 116401 116402 116403 116404 116405 116406 116407 116408 116409 116410 116411 116412 116413 116414 116415 116416 116417 116418 116419 116420 116421 116422 116423 116424 116425 116426 116427 116428 116429 116430 116431 116432 116433 116434 116435 116436 116437 116438 116439 116440 116441 116442 116443 116444 116445 116446 116447 116448 116449 116450 116451 116452 116453 116454 116455 116456 116457 116458 116459 116460 116461 116462 116463 116464 116465 116466 116467 116468 116469 116470 116471 116472 116473 116474 116475 116476 116477 116478 116479 116480 116481 116482 116483 116484 116485 116486 116487 116488 116489 116490 116491 116492 116493 116494> # SplitBus
const-mul-2 in 1 <116291> out 1 <116495> # join source bit 31
add in 2 <116290 116495> out 1 <116496>  # join source bit 30
const-mul-2 in 1 <116496> out 1 <116497> # join
add in 2 <116289 116497> out 1 <116498>  # join source bit 29
const-mul-2 in 1 <116498> out 1 <116499> # join
add in 2 <116288 116499> out 1 <116500>  # join source bit 28
const-mul-2 in 1 <116500> out 1 <116501> # join
add in 2 <116287 116501> out 1 <116502>  # join source bit 27
const-mul-2 in 1 <116502> out 1 <116503> # join
add in 2 <116286 116503> out 1 <116504>  # join source bit 26
const-mul-2 in 1 <116504> out 1 <116505> # join
add in 2 <116285 116505> out 1 <116506>  # join source bit 25
const-mul-2 in 1 <116506> out 1 <116507> # join
add in 2 <116284 116507> out 1 <116508>  # join source bit 24
const-mul-2 in 1 <116508> out 1 <116509> # join
add in 2 <116283 116509> out 1 <116510>  # join source bit 23
const-mul-2 in 1 <116510> out 1 <116511> # join
add in 2 <116282 116511> out 1 <116512>  # join source bit 22
const-mul-2 in 1 <116512> out 1 <116513> # join
add in 2 <116281 116513> out 1 <116514>  # join source bit 21
const-mul-2 in 1 <116514> out 1 <116515> # join
add in 2 <116280 116515> out 1 <116516>  # join source bit 20
const-mul-2 in 1 <116516> out 1 <116517> # join
add in 2 <116279 116517> out 1 <116518>  # join source bit 19
const-mul-2 in 1 <116518> out 1 <116519> # join
add in 2 <116278 116519> out 1 <116520>  # join source bit 18
const-mul-2 in 1 <116520> out 1 <116521> # join
add in 2 <116277 116521> out 1 <116522>  # join source bit 17
const-mul-2 in 1 <116522> out 1 <116523> # join
add in 2 <116276 116523> out 1 <116524>  # join source bit 16
const-mul-2 in 1 <116524> out 1 <116525> # join
add in 2 <116275 116525> out 1 <116526>  # join source bit 15
const-mul-2 in 1 <116526> out 1 <116527> # join
add in 2 <116274 116527> out 1 <116528>  # join source bit 14
const-mul-2 in 1 <116528> out 1 <116529> # join
add in 2 <116273 116529> out 1 <116530>  # join source bit 13
const-mul-2 in 1 <116530> out 1 <116531> # join
add in 2 <116272 116531> out 1 <116532>  # join source bit 12
const-mul-2 in 1 <116532> out 1 <116533> # join
add in 2 <116271 116533> out 1 <116534>  # join source bit 11
const-mul-2 in 1 <116534> out 1 <116535> # join
add in 2 <116270 116535> out 1 <116536>  # join source bit 10
const-mul-2 in 1 <116536> out 1 <116537> # join
add in 2 <116269 116537> out 1 <116538>  # join source bit 9
const-mul-2 in 1 <116538> out 1 <116539> # join
add in 2 <116268 116539> out 1 <116540>  # join source bit 8
const-mul-2 in 1 <116540> out 1 <116541> # join
add in 2 <116267 116541> out 1 <116542>  # join source bit 7
const-mul-2 in 1 <116542> out 1 <116543> # join
add in 2 <116266 116543> out 1 <116544>  # join source bit 6
const-mul-2 in 1 <116544> out 1 <116545> # join
add in 2 <116265 116545> out 1 <116546>  # join source bit 5
const-mul-2 in 1 <116546> out 1 <116547> # join
add in 2 <116264 116547> out 1 <116548>  # join source bit 4
const-mul-2 in 1 <116548> out 1 <116549> # join
add in 2 <116263 116549> out 1 <116550>  # join source bit 3
const-mul-2 in 1 <116550> out 1 <116551> # join
add in 2 <116262 116551> out 1 <116552>  # join source bit 2
const-mul-2 in 1 <116552> out 1 <116553> # join
add in 2 <116261 116553> out 1 <116554>  # join source bit 1
const-mul-2 in 1 <116554> out 1 <116555> # join
add in 2 <116260 116555> out 1 <116556>  # join source bit 0
add in 2 <116556 116556> out 1 <116557>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <116557> out 1 <116558> # multiply-by-constant 4294967295
add in 2 <116259 116558> out 1 <116559>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <116257> out 1 <116560> # multiply-by-constant 4294967295
add in 2 <116035 116560> out 1 <116561>  # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <116561> out 267 <116562 116563 116564 116565 116566 116567 116568 116569 116570 116571 116572 116573 116574 116575 116576 116577 116578 116579 116580 116581 116582 116583 116584 116585 116586 116587 116588 116589 116590 116591 116592 116593 116594 116595 116596 116597 116598 116599 116600 116601 116602 116603 116604 116605 116606 116607 116608 116609 116610 116611 116612 116613 116614 116615 116616 116617 116618 116619 116620 116621 116622 116623 116624 116625 116626 116627 116628 116629 116630 116631 116632 116633 116634 116635 116636 116637 116638 116639 116640 116641 116642 116643 116644 116645 116646 116647 116648 116649 116650 116651 116652 116653 116654 116655 116656 116657 116658 116659 116660 116661 116662 116663 116664 116665 116666 116667 116668 116669 116670 116671 116672 116673 116674 116675 116676 116677 116678 116679 116680 116681 116682 116683 116684 116685 116686 116687 116688 116689 116690 116691 116692 116693 116694 116695 116696 116697 116698 116699 116700 116701 116702 116703 116704 116705 116706 116707 116708 116709 116710 116711 116712 116713 116714 116715 116716 116717 116718 116719 116720 116721 116722 116723 116724 116725 116726 116727 116728 116729 116730 116731 116732 116733 116734 116735 116736 116737 116738 116739 116740 116741 116742 116743 116744 116745 116746 116747 116748 116749 116750 116751 116752 116753 116754 116755 116756 116757 116758 116759 116760 116761 116762 116763 116764 116765 116766 116767 116768 116769 116770 116771 116772 116773 116774 116775 116776 116777 116778 116779 116780 116781 116782 116783 116784 116785 116786 116787 116788 116789 116790 116791 116792 116793 116794 116795 116796 116797 116798 116799 116800 116801 116802 116803 116804 116805 116806 116807 116808 116809 116810 116811 116812 116813 116814 116815 116816 116817 116818 116819 116820 116821 116822 116823 116824 116825 116826 116827 116828> # SplitBus
mul in 2 <116593 116559> out 1 <116829>  # cond trueterm
const-mul-neg-1 in 1 <116593> out 1 <116830> # cond minuscond
add in 2 <100 116830> out 1 <116831>     # cond negcond
mul in 2 <116831 116035> out 1 <116832>  # cond falseterm
add in 2 <116829 116832> out 1 <116833>  # cond result
add in 2 <116833 104> out 1 <116834>     # ArithBusReq.AddReq(DFG.Conditional,DFG.Constant)
const-mul-ffffffff in 1 <37> out 1 <116835> # multiply-by-constant 4294967295
add in 2 <116834 116835> out 1 <116836>  # 'CmpLT DFG.Add - DFG.Input'
split in 1 <116836> out 238 <116837 116838 116839 116840 116841 116842 116843 116844 116845 116846 116847 116848 116849 116850 116851 116852 116853 116854 116855 116856 116857 116858 116859 116860 116861 116862 116863 116864 116865 116866 116867 116868 116869 116870 116871 116872 116873 116874 116875 116876 116877 116878 116879 116880 116881 116882 116883 116884 116885 116886 116887 116888 116889 116890 116891 116892 116893 116894 116895 116896 116897 116898 116899 116900 116901 116902 116903 116904 116905 116906 116907 116908 116909 116910 116911 116912 116913 116914 116915 116916 116917 116918 116919 116920 116921 116922 116923 116924 116925 116926 116927 116928 116929 116930 116931 116932 116933 116934 116935 116936 116937 116938 116939 116940 116941 116942 116943 116944 116945 116946 116947 116948 116949 116950 116951 116952 116953 116954 116955 116956 116957 116958 116959 116960 116961 116962 116963 116964 116965 116966 116967 116968 116969 116970 116971 116972 116973 116974 116975 116976 116977 116978 116979 116980 116981 116982 116983 116984 116985 116986 116987 116988 116989 116990 116991 116992 116993 116994 116995 116996 116997 116998 116999 117000 117001 117002 117003 117004 117005 117006 117007 117008 117009 117010 117011 117012 117013 117014 117015 117016 117017 117018 117019 117020 117021 117022 117023 117024 117025 117026 117027 117028 117029 117030 117031 117032 117033 117034 117035 117036 117037 117038 117039 117040 117041 117042 117043 117044 117045 117046 117047 117048 117049 117050 117051 117052 117053 117054 117055 117056 117057 117058 117059 117060 117061 117062 117063 117064 117065 117066 117067 117068 117069 117070 117071 117072 117073 117074> # SplitBus
mul in 2 <116868 103> out 1 <117075>     # cond trueterm
const-mul-neg-1 in 1 <116868> out 1 <117076> # cond minuscond
add in 2 <100 117076> out 1 <117077>     # cond negcond
mul in 2 <117077 102> out 1 <117078>     # cond falseterm
add in 2 <117075 117078> out 1 <117079>  # cond result
add in 2 <116833 3084> out 1 <117080>    # ArithBusReq.AddReq(DFG.Conditional,DFG.Negate)
const-mul-ffffffff in 1 <117080> out 1 <117081> # multiply-by-constant 4294967295
add in 2 <37 117081> out 1 <117082>      # 'CmpLT DFG.Input - DFG.Subtract'
split in 1 <117082> out 270 <117083 117084 117085 117086 117087 117088 117089 117090 117091 117092 117093 117094 117095 117096 117097 117098 117099 117100 117101 117102 117103 117104 117105 117106 117107 117108 117109 117110 117111 117112 117113 117114 117115 117116 117117 117118 117119 117120 117121 117122 117123 117124 117125 117126 117127 117128 117129 117130 117131 117132 117133 117134 117135 117136 117137 117138 117139 117140 117141 117142 117143 117144 117145 117146 117147 117148 117149 117150 117151 117152 117153 117154 117155 117156 117157 117158 117159 117160 117161 117162 117163 117164 117165 117166 117167 117168 117169 117170 117171 117172 117173 117174 117175 117176 117177 117178 117179 117180 117181 117182 117183 117184 117185 117186 117187 117188 117189 117190 117191 117192 117193 117194 117195 117196 117197 117198 117199 117200 117201 117202 117203 117204 117205 117206 117207 117208 117209 117210 117211 117212 117213 117214 117215 117216 117217 117218 117219 117220 117221 117222 117223 117224 117225 117226 117227 117228 117229 117230 117231 117232 117233 117234 117235 117236 117237 117238 117239 117240 117241 117242 117243 117244 117245 117246 117247 117248 117249 117250 117251 117252 117253 117254 117255 117256 117257 117258 117259 117260 117261 117262 117263 117264 117265 117266 117267 117268 117269 117270 117271 117272 117273 117274 117275 117276 117277 117278 117279 117280 117281 117282 117283 117284 117285 117286 117287 117288 117289 117290 117291 117292 117293 117294 117295 117296 117297 117298 117299 117300 117301 117302 117303 117304 117305 117306 117307 117308 117309 117310 117311 117312 117313 117314 117315 117316 117317 117318 117319 117320 117321 117322 117323 117324 117325 117326 117327 117328 117329 117330 117331 117332 117333 117334 117335 117336 117337 117338 117339 117340 117341 117342 117343 117344 117345 117346 117347 117348 117349 117350 117351 117352> # SplitBus
mul in 2 <117114 103> out 1 <117353>     # cond trueterm
const-mul-neg-1 in 1 <117114> out 1 <117354> # cond minuscond
add in 2 <100 117354> out 1 <117355>     # cond negcond
mul in 2 <117355 117079> out 1 <117356>  # cond falseterm
add in 2 <117353 117356> out 1 <117357>  # cond result
const-mul-ffffffff in 1 <36> out 1 <117358> # multiply-by-constant 4294967295
add in 2 <36 37> out 1 <117359>          # ArithBusReq.AddReq(DFG.Input,DFG.Input)
add in 2 <117359 117358> out 1 <117360>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <117360> out 1 <117361> # multiply-by-constant 4294967295
add in 2 <117359 117361> out 1 <117362>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <36> out 1 <117363> # multiply-by-constant 4294967295
add in 2 <37 117363> out 1 <117364>      # 'CmpLT DFG.Input - DFG.Input'
split in 1 <117364> out 65 <117365 117366 117367 117368 117369 117370 117371 117372 117373 117374 117375 117376 117377 117378 117379 117380 117381 117382 117383 117384 117385 117386 117387 117388 117389 117390 117391 117392 117393 117394 117395 117396 117397 117398 117399 117400 117401 117402 117403 117404 117405 117406 117407 117408 117409 117410 117411 117412 117413 117414 117415 117416 117417 117418 117419 117420 117421 117422 117423 117424 117425 117426 117427 117428 117429> # SplitBus
mul in 2 <117396 117362> out 1 <117430>  # cond trueterm
const-mul-neg-1 in 1 <117396> out 1 <117431> # cond minuscond
add in 2 <100 117431> out 1 <117432>     # cond negcond
mul in 2 <117432 37> out 1 <117433>      # cond falseterm
add in 2 <117430 117433> out 1 <117434>  # cond result
const-mul-ffffffff in 1 <117434> out 1 <117435> # multiply-by-constant 4294967295
add in 2 <117434 38> out 1 <117436>      # ArithBusReq.AddReq(DFG.Conditional,DFG.Input)
add in 2 <117436 117435> out 1 <117437>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <117437> out 1 <117438> # multiply-by-constant 4294967295
add in 2 <117436 117438> out 1 <117439>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <117434> out 1 <117440> # multiply-by-constant 4294967295
add in 2 <38 117440> out 1 <117441>      # 'CmpLT DFG.Input - DFG.Conditional'
split in 1 <117441> out 131 <117442 117443 117444 117445 117446 117447 117448 117449 117450 117451 117452 117453 117454 117455 117456 117457 117458 117459 117460 117461 117462 117463 117464 117465 117466 117467 117468 117469 117470 117471 117472 117473 117474 117475 117476 117477 117478 117479 117480 117481 117482 117483 117484 117485 117486 117487 117488 117489 117490 117491 117492 117493 117494 117495 117496 117497 117498 117499 117500 117501 117502 117503 117504 117505 117506 117507 117508 117509 117510 117511 117512 117513 117514 117515 117516 117517 117518 117519 117520 117521 117522 117523 117524 117525 117526 117527 117528 117529 117530 117531 117532 117533 117534 117535 117536 117537 117538 117539 117540 117541 117542 117543 117544 117545 117546 117547 117548 117549 117550 117551 117552 117553 117554 117555 117556 117557 117558 117559 117560 117561 117562 117563 117564 117565 117566 117567 117568 117569 117570 117571 117572> # SplitBus
mul in 2 <117473 117439> out 1 <117573>  # cond trueterm
const-mul-neg-1 in 1 <117473> out 1 <117574> # cond minuscond
add in 2 <100 117574> out 1 <117575>     # cond negcond
mul in 2 <117575 38> out 1 <117576>      # cond falseterm
add in 2 <117573 117576> out 1 <117577>  # cond result
const-mul-ffffffff in 1 <117577> out 1 <117578> # multiply-by-constant 4294967295
add in 2 <117577 39> out 1 <117579>      # ArithBusReq.AddReq(DFG.Conditional,DFG.Input)
add in 2 <117579 117578> out 1 <117580>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <117577> out 1 <117581> # multiply-by-constant 4294967295
add in 2 <39 117581> out 1 <117582>      # 'CmpLT DFG.Input - DFG.Conditional'
split in 1 <117582> out 197 <117583 117584 117585 117586 117587 117588 117589 117590 117591 117592 117593 117594 117595 117596 117597 117598 117599 117600 117601 117602 117603 117604 117605 117606 117607 117608 117609 117610 117611 117612 117613 117614 117615 117616 117617 117618 117619 117620 117621 117622 117623 117624 117625 117626 117627 117628 117629 117630 117631 117632 117633 117634 117635 117636 117637 117638 117639 117640 117641 117642 117643 117644 117645 117646 117647 117648 117649 117650 117651 117652 117653 117654 117655 117656 117657 117658 117659 117660 117661 117662 117663 117664 117665 117666 117667 117668 117669 117670 117671 117672 117673 117674 117675 117676 117677 117678 117679 117680 117681 117682 117683 117684 117685 117686 117687 117688 117689 117690 117691 117692 117693 117694 117695 117696 117697 117698 117699 117700 117701 117702 117703 117704 117705 117706 117707 117708 117709 117710 117711 117712 117713 117714 117715 117716 117717 117718 117719 117720 117721 117722 117723 117724 117725 117726 117727 117728 117729 117730 117731 117732 117733 117734 117735 117736 117737 117738 117739 117740 117741 117742 117743 117744 117745 117746 117747 117748 117749 117750 117751 117752 117753 117754 117755 117756 117757 117758 117759 117760 117761 117762 117763 117764 117765 117766 117767 117768 117769 117770 117771 117772 117773 117774 117775 117776 117777 117778 117779> # SplitBus
mul in 2 <117614 117580> out 1 <117780>  # cond trueterm
const-mul-neg-1 in 1 <117614> out 1 <117781> # cond minuscond
add in 2 <100 117781> out 1 <117782>     # cond negcond
mul in 2 <117782 117577> out 1 <117783>  # cond falseterm
add in 2 <117780 117783> out 1 <117784>  # cond result
mul in 2 <117473 117437> out 1 <117785>  # cond trueterm
const-mul-neg-1 in 1 <117473> out 1 <117786> # cond minuscond
add in 2 <100 117786> out 1 <117787>     # cond negcond
mul in 2 <117787 117434> out 1 <117788>  # cond falseterm
add in 2 <117785 117788> out 1 <117789>  # cond result
mul in 2 <117396 117360> out 1 <117790>  # cond trueterm
const-mul-neg-1 in 1 <117396> out 1 <117791> # cond minuscond
add in 2 <100 117791> out 1 <117792>     # cond negcond
mul in 2 <117792 36> out 1 <117793>      # cond falseterm
add in 2 <117790 117793> out 1 <117794>  # cond result
const-mul-ffffffff in 1 <117794> out 1 <117795> # multiply-by-constant 4294967295
add in 2 <117794 117789> out 1 <117796>  # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
add in 2 <117796 117795> out 1 <117797>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <117797> out 1 <117798> # multiply-by-constant 4294967295
add in 2 <117796 117798> out 1 <117799>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <117794> out 1 <117800> # multiply-by-constant 4294967295
add in 2 <117789 117800> out 1 <117801>  # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <117801> out 132 <117802 117803 117804 117805 117806 117807 117808 117809 117810 117811 117812 117813 117814 117815 117816 117817 117818 117819 117820 117821 117822 117823 117824 117825 117826 117827 117828 117829 117830 117831 117832 117833 117834 117835 117836 117837 117838 117839 117840 117841 117842 117843 117844 117845 117846 117847 117848 117849 117850 117851 117852 117853 117854 117855 117856 117857 117858 117859 117860 117861 117862 117863 117864 117865 117866 117867 117868 117869 117870 117871 117872 117873 117874 117875 117876 117877 117878 117879 117880 117881 117882 117883 117884 117885 117886 117887 117888 117889 117890 117891 117892 117893 117894 117895 117896 117897 117898 117899 117900 117901 117902 117903 117904 117905 117906 117907 117908 117909 117910 117911 117912 117913 117914 117915 117916 117917 117918 117919 117920 117921 117922 117923 117924 117925 117926 117927 117928 117929 117930 117931 117932 117933> # SplitBus
mul in 2 <117833 117799> out 1 <117934>  # cond trueterm
const-mul-neg-1 in 1 <117833> out 1 <117935> # cond minuscond
add in 2 <100 117935> out 1 <117936>     # cond negcond
mul in 2 <117936 117789> out 1 <117937>  # cond falseterm
add in 2 <117934 117937> out 1 <117938>  # cond result
const-mul-ffffffff in 1 <117938> out 1 <117939> # multiply-by-constant 4294967295
add in 2 <117938 117784> out 1 <117940>  # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
add in 2 <117940 117939> out 1 <117941>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <117941> out 1 <117942> # multiply-by-constant 4294967295
add in 2 <117940 117942> out 1 <117943>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <117938> out 1 <117944> # multiply-by-constant 4294967295
add in 2 <117784 117944> out 1 <117945>  # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <117945> out 199 <117946 117947 117948 117949 117950 117951 117952 117953 117954 117955 117956 117957 117958 117959 117960 117961 117962 117963 117964 117965 117966 117967 117968 117969 117970 117971 117972 117973 117974 117975 117976 117977 117978 117979 117980 117981 117982 117983 117984 117985 117986 117987 117988 117989 117990 117991 117992 117993 117994 117995 117996 117997 117998 117999 118000 118001 118002 118003 118004 118005 118006 118007 118008 118009 118010 118011 118012 118013 118014 118015 118016 118017 118018 118019 118020 118021 118022 118023 118024 118025 118026 118027 118028 118029 118030 118031 118032 118033 118034 118035 118036 118037 118038 118039 118040 118041 118042 118043 118044 118045 118046 118047 118048 118049 118050 118051 118052 118053 118054 118055 118056 118057 118058 118059 118060 118061 118062 118063 118064 118065 118066 118067 118068 118069 118070 118071 118072 118073 118074 118075 118076 118077 118078 118079 118080 118081 118082 118083 118084 118085 118086 118087 118088 118089 118090 118091 118092 118093 118094 118095 118096 118097 118098 118099 118100 118101 118102 118103 118104 118105 118106 118107 118108 118109 118110 118111 118112 118113 118114 118115 118116 118117 118118 118119 118120 118121 118122 118123 118124 118125 118126 118127 118128 118129 118130 118131 118132 118133 118134 118135 118136 118137 118138 118139 118140 118141 118142 118143 118144> # SplitBus
mul in 2 <117977 117943> out 1 <118145>  # cond trueterm
const-mul-neg-1 in 1 <117977> out 1 <118146> # cond minuscond
add in 2 <100 118146> out 1 <118147>     # cond negcond
mul in 2 <118147 117784> out 1 <118148>  # cond falseterm
add in 2 <118145 118148> out 1 <118149>  # cond result
const-mul-ffffffff in 1 <118149> out 1 <118150> # multiply-by-constant 4294967295
const-mul-ffffffff in 1 <117580> out 1 <118151> # multiply-by-constant 4294967295
add in 2 <117579 118151> out 1 <118152>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
mul in 2 <117614 118152> out 1 <118153>  # cond trueterm
const-mul-neg-1 in 1 <117614> out 1 <118154> # cond minuscond
add in 2 <100 118154> out 1 <118155>     # cond negcond
mul in 2 <118155 39> out 1 <118156>      # cond falseterm
add in 2 <118153 118156> out 1 <118157>  # cond result
const-mul-ffffffff in 1 <118157> out 1 <118158> # multiply-by-constant 4294967295
add in 2 <118157 40> out 1 <118159>      # ArithBusReq.AddReq(DFG.Conditional,DFG.Input)
split in 1 <118159> out 231 <118160 118161 118162 118163 118164 118165 118166 118167 118168 118169 118170 118171 118172 118173 118174 118175 118176 118177 118178 118179 118180 118181 118182 118183 118184 118185 118186 118187 118188 118189 118190 118191 118192 118193 118194 118195 118196 118197 118198 118199 118200 118201 118202 118203 118204 118205 118206 118207 118208 118209 118210 118211 118212 118213 118214 118215 118216 118217 118218 118219 118220 118221 118222 118223 118224 118225 118226 118227 118228 118229 118230 118231 118232 118233 118234 118235 118236 118237 118238 118239 118240 118241 118242 118243 118244 118245 118246 118247 118248 118249 118250 118251 118252 118253 118254 118255 118256 118257 118258 118259 118260 118261 118262 118263 118264 118265 118266 118267 118268 118269 118270 118271 118272 118273 118274 118275 118276 118277 118278 118279 118280 118281 118282 118283 118284 118285 118286 118287 118288 118289 118290 118291 118292 118293 118294 118295 118296 118297 118298 118299 118300 118301 118302 118303 118304 118305 118306 118307 118308 118309 118310 118311 118312 118313 118314 118315 118316 118317 118318 118319 118320 118321 118322 118323 118324 118325 118326 118327 118328 118329 118330 118331 118332 118333 118334 118335 118336 118337 118338 118339 118340 118341 118342 118343 118344 118345 118346 118347 118348 118349 118350 118351 118352 118353 118354 118355 118356 118357 118358 118359 118360 118361 118362 118363 118364 118365 118366 118367 118368 118369 118370 118371 118372 118373 118374 118375 118376 118377 118378 118379 118380 118381 118382 118383 118384 118385 118386 118387 118388 118389 118390> # SplitBus
const-mul-2 in 1 <118191> out 1 <118391> # join source bit 31
add in 2 <118190 118391> out 1 <118392>  # join source bit 30
const-mul-2 in 1 <118392> out 1 <118393> # join
add in 2 <118189 118393> out 1 <118394>  # join source bit 29
const-mul-2 in 1 <118394> out 1 <118395> # join
add in 2 <118188 118395> out 1 <118396>  # join source bit 28
const-mul-2 in 1 <118396> out 1 <118397> # join
add in 2 <118187 118397> out 1 <118398>  # join source bit 27
const-mul-2 in 1 <118398> out 1 <118399> # join
add in 2 <118186 118399> out 1 <118400>  # join source bit 26
const-mul-2 in 1 <118400> out 1 <118401> # join
add in 2 <118185 118401> out 1 <118402>  # join source bit 25
const-mul-2 in 1 <118402> out 1 <118403> # join
add in 2 <118184 118403> out 1 <118404>  # join source bit 24
const-mul-2 in 1 <118404> out 1 <118405> # join
add in 2 <118183 118405> out 1 <118406>  # join source bit 23
const-mul-2 in 1 <118406> out 1 <118407> # join
add in 2 <118182 118407> out 1 <118408>  # join source bit 22
const-mul-2 in 1 <118408> out 1 <118409> # join
add in 2 <118181 118409> out 1 <118410>  # join source bit 21
const-mul-2 in 1 <118410> out 1 <118411> # join
add in 2 <118180 118411> out 1 <118412>  # join source bit 20
const-mul-2 in 1 <118412> out 1 <118413> # join
add in 2 <118179 118413> out 1 <118414>  # join source bit 19
const-mul-2 in 1 <118414> out 1 <118415> # join
add in 2 <118178 118415> out 1 <118416>  # join source bit 18
const-mul-2 in 1 <118416> out 1 <118417> # join
add in 2 <118177 118417> out 1 <118418>  # join source bit 17
const-mul-2 in 1 <118418> out 1 <118419> # join
add in 2 <118176 118419> out 1 <118420>  # join source bit 16
const-mul-2 in 1 <118420> out 1 <118421> # join
add in 2 <118175 118421> out 1 <118422>  # join source bit 15
const-mul-2 in 1 <118422> out 1 <118423> # join
add in 2 <118174 118423> out 1 <118424>  # join source bit 14
const-mul-2 in 1 <118424> out 1 <118425> # join
add in 2 <118173 118425> out 1 <118426>  # join source bit 13
const-mul-2 in 1 <118426> out 1 <118427> # join
add in 2 <118172 118427> out 1 <118428>  # join source bit 12
const-mul-2 in 1 <118428> out 1 <118429> # join
add in 2 <118171 118429> out 1 <118430>  # join source bit 11
const-mul-2 in 1 <118430> out 1 <118431> # join
add in 2 <118170 118431> out 1 <118432>  # join source bit 10
const-mul-2 in 1 <118432> out 1 <118433> # join
add in 2 <118169 118433> out 1 <118434>  # join source bit 9
const-mul-2 in 1 <118434> out 1 <118435> # join
add in 2 <118168 118435> out 1 <118436>  # join source bit 8
const-mul-2 in 1 <118436> out 1 <118437> # join
add in 2 <118167 118437> out 1 <118438>  # join source bit 7
const-mul-2 in 1 <118438> out 1 <118439> # join
add in 2 <118166 118439> out 1 <118440>  # join source bit 6
const-mul-2 in 1 <118440> out 1 <118441> # join
add in 2 <118165 118441> out 1 <118442>  # join source bit 5
const-mul-2 in 1 <118442> out 1 <118443> # join
add in 2 <118164 118443> out 1 <118444>  # join source bit 4
const-mul-2 in 1 <118444> out 1 <118445> # join
add in 2 <118163 118445> out 1 <118446>  # join source bit 3
const-mul-2 in 1 <118446> out 1 <118447> # join
add in 2 <118162 118447> out 1 <118448>  # join source bit 2
const-mul-2 in 1 <118448> out 1 <118449> # join
add in 2 <118161 118449> out 1 <118450>  # join source bit 1
const-mul-2 in 1 <118450> out 1 <118451> # join
add in 2 <118160 118451> out 1 <118452>  # join source bit 0
add in 2 <118452 118452> out 1 <118453>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <118157> out 1 <118454> # multiply-by-constant 4294967295
add in 2 <40 118454> out 1 <118455>      # 'CmpLT DFG.Input - DFG.Conditional'
split in 1 <118455> out 263 <118456 118457 118458 118459 118460 118461 118462 118463 118464 118465 118466 118467 118468 118469 118470 118471 118472 118473 118474 118475 118476 118477 118478 118479 118480 118481 118482 118483 118484 118485 118486 118487 118488 118489 118490 118491 118492 118493 118494 118495 118496 118497 118498 118499 118500 118501 118502 118503 118504 118505 118506 118507 118508 118509 118510 118511 118512 118513 118514 118515 118516 118517 118518 118519 118520 118521 118522 118523 118524 118525 118526 118527 118528 118529 118530 118531 118532 118533 118534 118535 118536 118537 118538 118539 118540 118541 118542 118543 118544 118545 118546 118547 118548 118549 118550 118551 118552 118553 118554 118555 118556 118557 118558 118559 118560 118561 118562 118563 118564 118565 118566 118567 118568 118569 118570 118571 118572 118573 118574 118575 118576 118577 118578 118579 118580 118581 118582 118583 118584 118585 118586 118587 118588 118589 118590 118591 118592 118593 118594 118595 118596 118597 118598 118599 118600 118601 118602 118603 118604 118605 118606 118607 118608 118609 118610 118611 118612 118613 118614 118615 118616 118617 118618 118619 118620 118621 118622 118623 118624 118625 118626 118627 118628 118629 118630 118631 118632 118633 118634 118635 118636 118637 118638 118639 118640 118641 118642 118643 118644 118645 118646 118647 118648 118649 118650 118651 118652 118653 118654 118655 118656 118657 118658 118659 118660 118661 118662 118663 118664 118665 118666 118667 118668 118669 118670 118671 118672 118673 118674 118675 118676 118677 118678 118679 118680 118681 118682 118683 118684 118685 118686 118687 118688 118689 118690 118691 118692 118693 118694 118695 118696 118697 118698 118699 118700 118701 118702 118703 118704 118705 118706 118707 118708 118709 118710 118711 118712 118713 118714 118715 118716 118717 118718> # SplitBus
mul in 2 <118487 118453> out 1 <118719>  # cond trueterm
const-mul-neg-1 in 1 <118487> out 1 <118720> # cond minuscond
add in 2 <100 118720> out 1 <118721>     # cond negcond
mul in 2 <118721 118157> out 1 <118722>  # cond falseterm
add in 2 <118719 118722> out 1 <118723>  # cond result
add in 2 <118149 118723> out 1 <118724>  # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
split in 1 <118724> outplitBus
const-mul-2 in 1 <118756> out 1 <118958> # join source bit 31
add in 2 <118755 118958> out 1 <118959>  # join source bit 30
const-mul-2 in 1 <118959> out 1 <118960> # join
add in 2 <118754 118960> out 1 <118961>  # join source bit 29
const-mul-2 in 1 <118961> out 1 <118962> # join
add in 2 <118753 118962> out 1 <118963>  # join source bit 28
const-mul-2 in 1 <118963> out 1 <118964> # join
add in 2 <118752 118964> out 1 <118965>  # join source bit 27
const-mul-2 in 1 <118965> out 1 <118966> # join
add in 2 <118751 118966> out 1 <118967>  # join source bit 26
const-mul-2 in 1 <118967> out 1 <118968> # join
add in 2 <118750 118968> out 1 <118969>  # join source bit 25
const-mul-2 in 1 <118969> out 1 <118970> # join
add in 2 <118749 118970> out 1 <118971>  # join source bit 24
const-mul-2 in 1 <118971> out 1 <118972> # join
add in 2 <118748 118972> out 1 <118973>  # join source bit 23
const-mul-2 in 1 <118973> out 1 <118974> # join
add in 2 <118747 118974> out 1 <118975>  # join source bit 22
const-mul-2 in 1 <118975> out 1 <118976> # join
add in 2 <118746 118976> out 1 <118977>  # join source bit 21
const-mul-2 in 1 <118977> out 1 <118978> # join
add in 2 <118745 118978> out 1 <118979>  # join source bit 20
const-mul-2 in 1 <118979> out 1 <118980> # join
add in 2 <118744 118980> out 1 <118981>  # join source bit 19
const-mul-2 in 1 <118981> out 1 <118982> # join
add in 2 <118743 118982> out 1 <118983>  # join source bit 18
const-mul-2 in 1 <118983> out 1 <118984> # join
add in 2 <118742 118984> out 1 <118985>  # join source bit 17
const-mul-2 in 1 <118985> out 1 <118986> # join
add in 2 <118741 118986> out 1 <118987>  # join source bit 16
const-mul-2 in 1 <118987> out 1 <118988> # join
add in 2 <118740 118988> out 1 <118989>  # join source bit 15
const-mul-2 in 1 <118989> out 1 <118990> # join
add in 2 <118739 118990> out 1 <118991>  # join source bit 14
const-mul-2 in 1 <118991> out 1 <118992> # join
add in 2 <118738 118992> out 1 <118993>  # join source bit 13
const-mul-2 in 1 <118993> out 1 <118994> # join
add in 2 <118737 118994> out 1 <118995>  # join source bit 12
const-mul-2 in 1 <118995> out 1 <118996> # join
add in 2 <118736 118996> out 1 <118997>  # join source bit 11
const-mul-2 in 1 <118997> out 1 <118998> # join
add in 2 <118735 118998> out 1 <118999>  # join source bit 10
const-mul-2 in 1 <118999> out 1 <119000> # join
add in 2 <118734 119000> out 1 <119001>  # join source bit 9
const-mul-2 in 1 <119001> out 1 <119002> # join
add in 2 <118733 119002> out 1 <119003>  # join source bit 8
const-mul-2 in 1 <119003> out 1 <119004> # join
add in 2 <118732 119004> out 1 <119005>  # join source bit 7
const-mul-2 in 1 <119005> out 1 <119006> # join
add in 2 <118731 119006> out 1 <119007>  # join source bit 6
const-mul-2 in 1 <119007> out 1 <119008> # join
add in 2 <118730 119008> out 1 <119009>  # join source bit 5
const-mul-2 in 1 <119009> out 1 <119010> # join
add in 2 <118729 119010> out 1 <119011>  # join source bit 4
const-mul-2 in 1 <119011> out 1 <119012> # join
add in 2 <118728 119012> out 1 <119013>  # join source bit 3
const-mul-2 in 1 <119013> out 1 <119014> # join
add in 2 <118727 119014> out 1 <119015>  # join source bit 2
const-mul-2 in 1 <119015> out 1 <119016> # join
add in 2 <118726 119016> out 1 <119017>  # join source bit 1
const-mul-2 in 1 <119017> out 1 <119018> # join
add in 2 <118725 119018> out 1 <119019>  # join source bit 0
add in 2 <119019 119019> out 1 <119020>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <118149> out 1 <119021> # multiply-by-constant 4294967295
add in 2 <118723 119021> out 1 <119022>  # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <119022> outplitBus
mul in 2 <119054 119020> out 1 <119288>  # cond trueterm
const-mul-neg-1 in 1 <119054> out 1 <119289> # cond minuscond
add in 2 <100 119289> out 1 <119290>     # cond negcond
mul in 2 <119290 118149> out 1 <119291>  # cond falseterm
add in 2 <119288 119291> out 1 <119292>  # cond result
mul in 2 <117977 117941> out 1 <119293>  # cond trueterm
const-mul-neg-1 in 1 <117977> out 1 <119294> # cond minuscond
add in 2 <100 119294> out 1 <119295>     # cond negcond
mul in 2 <119295 117938> out 1 <119296>  # cond falseterm
add in 2 <119293 119296> out 1 <119297>  # cond result
mul in 2 <117833 117797> out 1 <119298>  # cond trueterm
const-mul-neg-1 in 1 <117833> out 1 <119299> # cond minuscond
add in 2 <100 119299> out 1 <119300>     # cond negcond
mul in 2 <119300 117794> out 1 <119301>  # cond falseterm
add in 2 <119298 119301> out 1 <119302>  # cond result
const-mul-ffffffff in 1 <119302> out 1 <119303> # multiply-by-constant 4294967295
add in 2 <119302 119297> out 1 <119304>  # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
add in 2 <119304 119303> out 1 <119305>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <119305> out 1 <119306> # multiply-by-constant 4294967295
add in 2 <119304 119306> out 1 <119307>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <119302> out 1 <119308> # multiply-by-constant 4294967295
add in 2 <119297 119308> out 1 <119309>  # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <119309> out 200 <119310 119311 119312 119313 119314 119315 119316 119317 119318 119319 119320 119321 119322 119323 119324 119325 119326 119327 119328 119329 119330 119331 119332 119333 119334 119335 119336 119337 119338 119339 119340 119341 119342 119343 119344 119345 119346 119347 119348 119349 119350 119351 119352 119353 119354 119355 119356 119357 119358 119359 119360 119361 119362 119363 119364 119365 119366 119367 119368 119369 119370 119371 119372 119373 119374 119375 119376 119377 119378 119379 119380 119381 119382 119383 119384 119385 119386 119387 119388 119389 119390 119391 119392 119393 119394 119395 119396 119397 119398 119399 119400 119401 119402 119403 119404 119405 119406 119407 119408 119409 119410 119411 119412 119413 119414 119415 119416 119417 119418 119419 119420 119421 119422 119423 119424 119425 119426 119427 119428 119429 119430 119431 119432 119433 119434 119435 119436 119437 119438 119439 119440 119441 119442 119443 119444 119445 119446 119447 119448 119449 119450 119451 119452 119453 119454 119455 119456 119457 119458 119459 119460 119461 119462 119463 119464 119465 119466 119467 119468 119469 119470 119471 119472 119473 119474 119475 119476 119477 119478 119479 119480 119481 119482 119483 119484 119485 119486 119487 119488 119489 119490 119491 119492 119493 119494 119495 119496 119497 119498 119499 119500 119501 119502 119503 119504 119505 119506 119507 119508 119509> # SplitBus
mul in 2 <119341 119307> out 1 <119510>  # cond trueterm
const-mul-neg-1 in 1 <119341> out 1 <119511> # cond minuscond
add in 2 <100 119511> out 1 <119512>     # cond negcond
mul in 2 <119512 119297> out 1 <119513>  # cond falseterm
add in 2 <119510 119513> out 1 <119514>  # cond result
const-mul-ffffffff in 1 <119514> out 1 <119515> # multiply-by-constant 4294967295
add in 2 <119514 119292> out 1 <119516>  # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
split in 1 <119516> outplitBus
const-mul-2 in 1 <119548> out 1 <119752> # join source bit 31
add in 2 <119547 119752> out 1 <119753>  # join source bit 30
const-mul-2 in 1 <119753> out 1 <119754> # join
add in 2 <119546 119754> out 1 <119755>  # join source bit 29
const-mul-2 in 1 <119755> out 1 <119756> # join
add in 2 <119545 119756> out 1 <119757>  # join source bit 28
const-mul-2 in 1 <119757> out 1 <119758> # join
add in 2 <119544 119758> out 1 <119759>  # join source bit 27
const-mul-2 in 1 <119759> out 1 <119760> # join
add in 2 <119543 119760> out 1 <119761>  # join source bit 26
const-mul-2 in 1 <119761> out 1 <119762> # join
add in 2 <119542 119762> out 1 <119763>  # join source bit 25
const-mul-2 in 1 <119763> out 1 <119764> # join
add in 2 <119541 119764> out 1 <119765>  # join source bit 24
const-mul-2 in 1 <119765> out 1 <119766> # join
add in 2 <119540 119766> out 1 <119767>  # join source bit 23
const-mul-2 in 1 <119767> out 1 <119768> # join
add in 2 <119539 119768> out 1 <119769>  # join source bit 22
const-mul-2 in 1 <119769> out 1 <119770> # join
add in 2 <119538 119770> out 1 <119771>  # join source bit 21
const-mul-2 in 1 <119771> out 1 <119772> # join
add in 2 <119537 119772> out 1 <119773>  # join source bit 20
const-mul-2 in 1 <119773> out 1 <119774> # join
add in 2 <119536 119774> out 1 <119775>  # join source bit 19
const-mul-2 in 1 <119775> out 1 <119776> # join
add in 2 <119535 119776> out 1 <119777>  # join source bit 18
const-mul-2 in 1 <119777> out 1 <119778> # join
add in 2 <119534 119778> out 1 <119779>  # join source bit 17
const-mul-2 in 1 <119779> out 1 <119780> # join
add in 2 <119533 119780> out 1 <119781>  # join source bit 16
const-mul-2 in 1 <119781> out 1 <119782> # join
add in 2 <119532 119782> out 1 <119783>  # join source bit 15
const-mul-2 in 1 <119783> out 1 <119784> # join
add in 2 <119531 119784> out 1 <119785>  # join source bit 14
const-mul-2 in 1 <119785> out 1 <119786> # join
add in 2 <119530 119786> out 1 <119787>  # join source bit 13
const-mul-2 in 1 <119787> out 1 <119788> # join
add in 2 <119529 119788> out 1 <119789>  # join source bit 12
const-mul-2 in 1 <119789> out 1 <119790> # join
add in 2 <119528 119790> out 1 <119791>  # join source bit 11
const-mul-2 in 1 <119791> out 1 <119792> # join
add in 2 <119527 119792> out 1 <119793>  # join source bit 10
const-mul-2 in 1 <119793> out 1 <119794> # join
add in 2 <119526 119794> out 1 <119795>  # join source bit 9
const-mul-2 in 1 <119795> out 1 <119796> # join
add in 2 <119525 119796> out 1 <119797>  # join source bit 8
const-mul-2 in 1 <119797> out 1 <119798> # join
add in 2 <119524 119798> out 1 <119799>  # join source bit 7
const-mul-2 in 1 <119799> out 1 <119800> # join
add in 2 <119523 119800> out 1 <119801>  # join source bit 6
const-mul-2 in 1 <119801> out 1 <119802> # join
add in 2 <119522 119802> out 1 <119803>  # join source bit 5
const-mul-2 in 1 <119803> out 1 <119804> # join
add in 2 <119521 119804> out 1 <119805>  # join source bit 4
const-mul-2 in 1 <119805> out 1 <119806> # join
add in 2 <119520 119806> out 1 <119807>  # join source bit 3
const-mul-2 in 1 <119807> out 1 <119808> # join
add in 2 <119519 119808> out 1 <119809>  # join source bit 2
const-mul-2 in 1 <119809> out 1 <119810> # join
add in 2 <119518 119810> out 1 <119811>  # join source bit 1
const-mul-2 in 1 <119811> out 1 <119812> # join
add in 2 <119517 119812> out 1 <119813>  # join source bit 0
add in 2 <119813 119813> out 1 <119814>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <119814> out 1 <119815> # multiply-by-constant 4294967295
add in 2 <119516 119815> out 1 <119816>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <119514> out 1 <119817> # multiply-by-constant 4294967295
add in 2 <119292 119817> out 1 <119818>  # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <119818> out 267 <119819 119820 119821 119822 119823 119824 119825 119826 119827 119828 119829 119830 119831 119832 119833 119834 119835 119836 119837 119838 119839 119840 119841 119842 119843 119844 119845 119846 119847 119848 119849 119850 119851 119852 119853 119854 119855 119856 119857 119858 119859 119860 119861 119862 119863 119864 119865 119866 119867 119868 119869 119870 119871 119872 119873 119874 119875 119876 119877 119878 119879 119880 119881 119882 119883 119884 119885 119886 119887 119888 119889 119890 119891 119892 119893 119894 119895 119896 119897 119898 119899 119900 119901 119902 119903 119904 119905 119906 119907 119908 119909 119910 119911 119912 119913 119914 119915 119916 119917 119918 119919 119920 119921 119922 119923 119924 119925 119926 119927 119928 119929 119930 119931 119932 119933 119934 119935 119936 119937 119938 119939 119940 119941 119942 119943 119944 119945 119946 119947 119948 119949 119950 119951 119952 119953 119954 119955 119956 119957 119958 119959 119960 119961 119962 119963 119964 119965 119966 119967 119968 119969 119970 119971 119972 119973 119974 119975 119976 119977 119978 119979 119980 119981 119982 119983 119984 119985 119986 119987 119988 119989 119990 119991 119992 119993 119994 119995 119996 119997 119998 119999 120000 120001 120002 120003 120004 120005 120006 120007 120008 120009 120010 120011 120012 120013 120014 120015 120016 120017 120018 120019 120020 120021 120022 120023 120024 120025 120026 120027 120028 120029 120030 120031 120032 120033 120034 120035 120036 120037 120038 120039 120040 120041 120042 120043 120044 120045 120046 120047 120048 120049 120050 120051 120052 120053 120054 120055 120056 120057 120058 120059 120060 120061 120062 120063 120064 120065 120066 120067 120068 120069 120070 120071 120072 120073 120074 120075 120076 120077 120078 120079 120080 120081 120082 120083 120084 120085> # SplitBus
mul in 2 <119850 119816> out 1 <120086>  # cond trueterm
const-mul-neg-1 in 1 <119850> out 1 <120087> # cond minuscond
add in 2 <100 120087> out 1 <120088>     # cond negcond
mul in 2 <120088 119292> out 1 <120089>  # cond falseterm
add in 2 <120086 120089> out 1 <120090>  # cond result
add in 2 <120090 104> out 1 <120091>     # ArithBusReq.AddReq(DFG.Conditional,DFG.Constant)
const-mul-ffffffff in 1 <38> out 1 <120092> # multiply-by-constant 4294967295
add in 2 <120091 120092> out 1 <120093>  # 'CmpLT DFG.Add - DFG.Input'
split in 1 <120093> outplitBus
mul in 2 <120125 103> out 1 <120332>     # cond trueterm
const-mul-neg-1 in 1 <120125> out 1 <120333> # cond minuscond
add in 2 <100 120333> out 1 <120334>     # cond negcond
mul in 2 <120334 102> out 1 <120335>     # cond falseterm
add in 2 <120332 120335> out 1 <120336>  # cond result
add in 2 <120090 3084> out 1 <120337>    # ArithBusReq.AddReq(DFG.Conditional,DFG.Negate)
const-mul-ffffffff in 1 <120337> out 1 <120338> # multiply-by-constant 4294967295
add in 2 <38 120338> out 1 <120339>      # 'CmpLT DFG.Input - DFG.Subtract'
split in 1 <120339> out 270 <120340 120341 120342 120343 120344 120345 120346 120347 120348 120349 120350 120351 120352 120353 120354 120355 120356 120357 120358 120359 120360 120361 120362 120363 120364 120365 120366 120367 120368 120369 120370 120371 120372 120373 120374 120375 120376 120377 120378 120379 120380 120381 120382 120383 120384 120385 120386 120387 120388 120389 120390 120391 120392 120393 120394 120395 120396 120397 120398 120399 120400 120401 120402 120403 120404 120405 120406 120407 120408 120409 120410 120411 120412 120413 120414 120415 120416 120417 120418 120419 120420 120421 120422 120423 120424 120425 120426 120427 120428 120429 120430 120431 120432 120433 120434 120435 120436 120437 120438 120439 120440 120441 120442 120443 120444 120445 120446 120447 120448 120449 120450 120451 120452 120453 120454 120455 120456 120457 120458 120459 120460 120461 120462 120463 120464 120465 120466 120467 120468 120469 120470 120471 120472 120473 120474 120475 120476 120477 120478 120479 120480 120481 120482 120483 120484 120485 120486 120487 120488 120489 120490 120491 120492 120493 120494 120495 120496 120497 120498 120499 120500 120501 120502 120503 120504 120505 120506 120507 120508 120509 120510 120511 120512 120513 120514 120515 120516 120517 120518 120519 120520 120521 120522 120523 120524 120525 120526 120527 120528 120529 120530 120531 120532 120533 120534 120535 120536 120537 120538 120539 120540 120541 120542 120543 120544 120545 120546 120547 120548 120549 120550 120551 120552 120553 120554 120555 120556 120557 120558 120559 120560 120561 120562 120563 120564 120565 120566 120567 120568 120569 120570 120571 120572 120573 120574 120575 120576 120577 120578 120579 120580 120581 120582 120583 120584 120585 120586 120587 120588 120589 120590 120591 120592 120593 120594 120595 120596 120597 120598 120599 120600 120601 120602 120603 120604 120605 120606 120607 120608 120609> # SplitBus
mul in 2 <120371 103> out 1 <120610>     # cond trueterm
const-mul-neg-1 in 1 <120371> out 1 <120611> # cond minuscond
add in 2 <100 120611> out 1 <120612>     # cond negcond
mul in 2 <120612 120336> out 1 <120613>  # cond falseterm
add in 2 <120610 120613> out 1 <120614>  # cond result
const-mul-ffffffff in 1 <37> out 1 <120615> # multiply-by-constant 4294967295
add in 2 <37 38> out 1 <120616>          # ArithBusReq.AddReq(DFG.Input,DFG.Input)
add in 2 <120616 120615> out 1 <120617>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <120617> out 1 <120618> # multiply-by-constant 4294967295
add in 2 <120616 120618> out 1 <120619>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <37> out 1 <120620> # multiply-by-constant 4294967295
add in 2 <38 120620> out 1 <120621>      # 'CmpLT DFG.Input - DFG.Input'
split in 1 <120621> out 65 <120622 120623 120624 120625 120626 120627 120628 120629 120630 120631 120632 120633 120634 120635 120636 120637 120638 120639 120640 120641 120642 120643 120644 120645 120646 120647 120648 120649 120650 120651 120652 120653 120654 120655 120656 120657 120658 120659 120660 120661 120662 120663 120664 120665 120666 120667 120668 120669 120670 120671 120672 120673 120674 120675 120676 120677 120678 120679 120680 120681 120682 120683 120684 120685 120686> # SplitBus
mul in 2 <120653 120619> out 1 <120687>  # cond trueterm
const-mul-neg-1 in 1 <120653> out 1 <120688> # cond minuscond
add in 2 <100 120688> out 1 <120689>     # cond negcond
mul in 2 <120689 38> out 1 <120690>      # cond falseterm
add in 2 <120687 120690> out 1 <120691>  # cond result
const-mul-ffffffff in 1 <120691> out 1 <120692> # multiply-by-constant 4294967295
add in 2 <120691 39> out 1 <120693>      # ArithBusReq.AddReq(DFG.Conditional,DFG.Input)
add in 2 <120693 120692> out 1 <120694>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <120694> out 1 <120695> # multiply-by-constant 4294967295
add in 2 <120693 120695> out 1 <120696>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <120691> out 1 <120697> # multiply-by-constant 4294967295
add in 2 <39 120697> out 1 <120698>      # 'CmpLT DFG.Input - DFG.Conditional'
split in 1 <120698> out 131 <120699 120700 120701 120702 120703 120704 120705 120706 120707 120708 120709 120710 120711 120712 120713 120714 120715 120716 120717 120718 120719 120720 120721 120722 120723 120724 120725 120726 120727 120728 120729 120730 120731 120732 120733 120734 120735 120736 120737 120738 120739 120740 120741 120742 120743 120744 120745 120746 120747 120748 120749 120750 120751 120752 120753 120754 120755 120756 120757 120758 120759 120760 120761 120762 120763 120764 120765 120766 120767 120768 120769 120770 120771 120772 120773 120774 120775 120776 120777 120778 120779 120780 120781 120782 120783 120784 120785 120786 120787 120788 120789 120790 120791 120792 120793 120794 120795 120796 120797 120798 120799 120800 120801 120802 120803 120804 120805 120806 120807 120808 120809 120810 120811 120812 120813 120814 120815 120816 120817 120818 120819 120820 120821 120822 120823 120824 120825 120826 120827 120828 120829> # SplitBus
mul in 2 <120730 120696> out 1 <120830>  # cond trueterm
const-mul-neg-1 in 1 <120730> out 1 <120831> # cond minuscond
add in 2 <100 120831> out 1 <120832>     # cond negcond
mul in 2 <120832 39> out 1 <120833>      # cond falseterm
add in 2 <120830 120833> out 1 <120834>  # cond result
const-mul-ffffffff in 1 <120834> out 1 <120835> # multiply-by-constant 4294967295
add in 2 <120834 40> out 1 <120836>      # ArithBusReq.AddReq(DFG.Conditional,DFG.Input)
add in 2 <120836 120835> out 1 <120837>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <120834> out 1 <120838> # multiply-by-constant 4294967295
add in 2 <40 120838> out 1 <120839>      # 'CmpLT DFG.Input - DFG.Conditional'
split in 1 <120839> out 197 <120840 120841 120842 120843 120844 120845 120846 120847 120848 120849 120850 120851 120852 120853 120854 120855 120856 120857 120858 120859 120860 120861 120862 120863 120864 120865 120866 120867 120868 120869 120870 120871 120872 120873 120874 120875 120876 120877 120878 120879 120880 120881 120882 120883 120884 120885 120886 120887 120888 120889 120890 120891 120892 120893 120894 120895 120896 120897 120898 120899 120900 120901 120902 120903 120904 120905 120906 120907 120908 120909 120910 120911 120912 120913 120914 120915 120916 120917 120918 120919 120920 120921 120922 120923 120924 120925 120926 120927 120928 120929 120930 120931 120932 120933 120934 120935 120936 120937 120938 120939 120940 120941 120942 120943 120944 120945 120946 120947 120948 120949 120950 120951 120952 120953 120954 120955 120956 120957 120958 120959 120960 120961 120962 120963 120964 120965 120966 120967 120968 120969 120970 120971 120972 120973 120974 120975 120976 120977 120978 120979 120980 120981 120982 120983 120984 120985 120986 120987 120988 120989 120990 120991 120992 120993 120994 120995 120996 120997 120998 120999 121000 121001 121002 121003 121004 121005 121006 121007 121008 121009 121010 121011 121012 121013 121014 121015 121016 121017 121018 121019 121020 121021 121022 121023 121024 121025 121026 121027 121028 121029 121030 121031 121032 121033 121034 121035 121036> # SplitBus
mul in 2 <120871 120837> out 1 <121037>  # cond trueterm
const-mul-neg-1 in 1 <120871> out 1 <121038> # cond minuscond
add in 2 <100 121038> out 1 <121039>     # cond negcond
mul in 2 <121039 120834> out 1 <121040>  # cond falseterm
add in 2 <121037 121040> out 1 <121041>  # cond result
mul in 2 <120730 120694> out 1 <121042>  # cond trueterm
const-mul-neg-1 in 1 <120730> out 1 <121043> # cond minuscond
add in 2 <100 121043> out 1 <121044>     # cond negcond
mul in 2 <121044 120691> out 1 <121045>  # cond falseterm
add in 2 <121042 121045> out 1 <121046>  # cond result
mul in 2 <120653 120617> out 1 <121047>  # cond trueterm
const-mul-neg-1 in 1 <120653> out 1 <121048> # cond minuscond
add in 2 <100 121048> out 1 <121049>     # cond negcond
mul in 2 <121049 37> out 1 <121050>      # cond falseterm
add in 2 <121047 121050> out 1 <121051>  # cond result
const-mul-ffffffff in 1 <121051> out 1 <121052> # multiply-by-constant 4294967295
add in 2 <121051 121046> out 1 <121053>  # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
add in 2 <121053 121052> out 1 <121054>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <121054> out 1 <121055> # multiply-by-constant 4294967295
add in 2 <121053 121055> out 1 <121056>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <121051> out 1 <121057> # multiply-by-constant 4294967295
add in 2 <121046 121057> out 1 <121058>  # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <121058> out 132 <121059 121060 121061 121062 121063 121064 121065 121066 121067 121068 121069 121070 121071 121072 121073 121074 121075 121076 121077 121078 121079 121080 121081 121082 121083 121084 121085 121086 121087 121088 121089 121090 121091 121092 121093 121094 121095 121096 121097 121098 121099 121100 121101 121102 121103 121104 121105 121106 121107 121108 121109 121110 121111 121112 121113 121114 121115 121116 121117 121118 121119 121120 121121 121122 121123 121124 121125 121126 121127 121128 121129 121130 121131 121132 121133 121134 121135 121136 121137 121138 121139 121140 121141 121142 121143 121144 121145 121146 121147 121148 121149 121150 121151 121152 121153 121154 121155 121156 121157 121158 121159 121160 121161 121162 121163 121164 121165 121166 121167 121168 121169 121170 121171 121172 121173 121174 121175 121176 121177 121178 121179 121180 121181 121182 121183 121184 121185 121186 121187 121188 121189 121190> # SplitBus
mul in 2 <121090 121056> out 1 <121191>  # cond trueterm
const-mul-neg-1 in 1 <121090> out 1 <121192> # cond minuscond
add in 2 <100 121192> out 1 <121193>     # cond negcond
mul in 2 <121193 121046> out 1 <121194>  # cond falseterm
add in 2 <121191 121194> out 1 <121195>  # cond result
const-mul-ffffffff in 1 <121195> out 1 <121196> # multiply-by-constant 4294967295
add in 2 <121195 121041> out 1 <121197>  # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
add in 2 <121197 121196> out 1 <121198>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <121198> out 1 <121199> # multiply-by-constant 4294967295
add in 2 <121197 121199> out 1 <121200>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <121195> out 1 <121201> # multiply-by-constant 4294967295
add in 2 <121041 121201> out 1 <121202>  # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <121202> out 199 <121203 121204 121205 121206 121207 121208 121209 121210 121211 121212 121213 121214 121215 121216 121217 121218 121219 121220 121221 121222 121223 121224 121225 121226 121227 121228 121229 121230 121231 121232 121233 121234 121235 121236 121237 121238 121239 121240 121241 121242 121243 121244 121245 121246 121247 121248 121249 121250 121251 121252 121253 121254 121255 121256 121257 121258 121259 121260 121261 121262 121263 121264 121265 121266 121267 121268 121269 121270 121271 121272 121273 121274 121275 121276 121277 121278 121279 121280 121281 121282 121283 121284 121285 121286 121287 121288 121289 121290 121291 121292 121293 121294 121295 121296 121297 121298 121299 121300 121301 121302 121303 121304 121305 121306 121307 121308 121309 121310 121311 121312 121313 121314 121315 121316 121317 121318 121319 121320 121321 121322 121323 121324 121325 121326 121327 121328 121329 121330 121331 121332 121333 121334 121335 121336 121337 121338 121339 121340 121341 121342 121343 121344 121345 121346 121347 121348 121349 121350 121351 121352 121353 121354 121355 121356 121357 121358 121359 121360 121361 121362 121363 121364 121365 121366 121367 121368 121369 121370 121371 121372 121373 121374 121375 121376 121377 121378 121379 121380 121381 121382 121383 121384 121385 121386 121387 121388 121389 121390 121391 121392 121393 121394 121395 121396 121397 121398 121399 121400 121401> # SplitBus
mul in 2 <121234 121200> out 1 <121402>  # cond trueterm
const-mul-neg-1 in 1 <121234> out 1 <121403> # cond minuscond
add in 2 <100 121403> out 1 <121404>     # cond negcond
mul in 2 <121404 121041> out 1 <121405>  # cond falseterm
add in 2 <121402 121405> out 1 <121406>  # cond result
const-mul-ffffffff in 1 <121406> out 1 <121407> # multiply-by-constant 4294967295
const-mul-ffffffff in 1 <120837> out 1 <121408> # multiply-by-constant 4294967295
add in 2 <120836 121408> out 1 <121409>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
mul in 2 <120871 121409> out 1 <121410>  # cond trueterm
const-mul-neg-1 in 1 <120871> out 1 <121411> # cond minuscond
add in 2 <100 121411> out 1 <121412>     # cond negcond
mul in 2 <121412 40> out 1 <121413>      # cond falseterm
add in 2 <121410 121413> out 1 <121414>  # cond result
const-mul-ffffffff in 1 <121414> out 1 <121415> # multiply-by-constant 4294967295
add in 2 <121414 41> out 1 <121416>      # ArithBusReq.AddReq(DFG.Conditional,DFG.Input)
split in 1 <121416> outplitBus
const-mul-2 in 1 <121448> out 1 <121648> # join source bit 31
add in 2 <121447 121648> out 1 <121649>  # join source bit 30
const-mul-2 in 1 <121649> out 1 <121650> # join
add in 2 <121446 121650> out 1 <121651>  # join source bit 29
const-mul-2 in 1 <121651> out 1 <121652> # join
add in 2 <121445 121652> out 1 <121653>  # join source bit 28
const-mul-2 in 1 <121653> out 1 <121654> # join
add in 2 <121444 121654> out 1 <121655>  # join source bit 27
const-mul-2 in 1 <121655> out 1 <121656> # join
add in 2 <121443 121656> out 1 <121657>  # join source bit 26
const-mul-2 in 1 <121657> out 1 <121658> # join
add in 2 <121442 121658> out 1 <121659>  # join source bit 25
const-mul-2 in 1 <121659> out 1 <121660> # join
add in 2 <121441 121660> out 1 <121661>  # join source bit 24
const-mul-2 in 1 <121661> out 1 <121662> # join
add in 2 <121440 121662> out 1 <121663>  # join source bit 23
const-mul-2 in 1 <121663> out 1 <121664> # join
add in 2 <121439 121664> out 1 <121665>  # join source bit 22
const-mul-2 in 1 <121665> out 1 <121666> # join
add in 2 <121438 121666> out 1 <121667>  # join source bit 21
const-mul-2 in 1 <121667> out 1 <121668> # join
add in 2 <121437 121668> out 1 <121669>  # join source bit 20
const-mul-2 in 1 <121669> out 1 <121670> # join
add in 2 <121436 121670> out 1 <121671>  # join source bit 19
const-mul-2 in 1 <121671> out 1 <121672> # join
add in 2 <121435 121672> out 1 <121673>  # join source bit 18
const-mul-2 in 1 <121673> out 1 <121674> # join
add in 2 <121434 121674> out 1 <121675>  # join source bit 17
const-mul-2 in 1 <121675> out 1 <121676> # join
add in 2 <121433 121676> out 1 <121677>  # join source bit 16
const-mul-2 in 1 <121677> out 1 <121678> # join
add in 2 <121432 121678> out 1 <121679>  # join source bit 15
const-mul-2 in 1 <121679> out 1 <121680> # join
add in 2 <121431 121680> out 1 <121681>  # join source bit 14
const-mul-2 in 1 <121681> out 1 <121682> # join
add in 2 <121430 121682> out 1 <121683>  # join source bit 13
const-mul-2 in 1 <121683> out 1 <121684> # join
add in 2 <121429 121684> out 1 <121685>  # join source bit 12
const-mul-2 in 1 <121685> out 1 <121686> # join
add in 2 <121428 121686> out 1 <121687>  # join source bit 11
const-mul-2 in 1 <121687> out 1 <121688> # join
add in 2 <121427 121688> out 1 <121689>  # join source bit 10
const-mul-2 in 1 <121689> out 1 <121690> # join
add in 2 <121426 121690> out 1 <121691>  # join source bit 9
const-mul-2 in 1 <121691> out 1 <121692> # join
add in 2 <121425 121692> out 1 <121693>  # join source bit 8
const-mul-2 in 1 <121693> out 1 <121694> # join
add in 2 <121424 121694> out 1 <121695>  # join source bit 7
const-mul-2 in 1 <121695> out 1 <121696> # join
add in 2 <121423 121696> out 1 <121697>  # join source bit 6
const-mul-2 in 1 <121697> out 1 <121698> # join
add in 2 <121422 121698> out 1 <121699>  # join source bit 5
const-mul-2 in 1 <121699> out 1 <121700> # join
add in 2 <121421 121700> out 1 <121701>  # join source bit 4
const-mul-2 in 1 <121701> out 1 <121702> # join
add in 2 <121420 121702> out 1 <121703>  # join source bit 3
const-mul-2 in 1 <121703> out 1 <121704> # join
add in 2 <121419 121704> out 1 <121705>  # join source bit 2
const-mul-2 in 1 <121705> out 1 <121706> # join
add in 2 <121418 121706> out 1 <121707>  # join source bit 1
const-mul-2 in 1 <121707> out 1 <121708> # join
add in 2 <121417 121708> out 1 <121709>  # join source bit 0
add in 2 <121709 121709> out 1 <121710>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <121414> out 1 <121711> # multiply-by-constant 4294967295
add in 2 <41 121711> out 1 <121712>      # 'CmpLT DFG.Input - DFG.Conditional'
split in 1 <121712> outplitBus
mul in 2 <121744 121710> out 1 <121976>  # cond trueterm
const-mul-neg-1 in 1 <121744> out 1 <121977> # cond minuscond
add in 2 <100 121977> out 1 <121978>     # cond negcond
mul in 2 <121978 121414> out 1 <121979>  # cond falseterm
add in 2 <121976 121979> out 1 <121980>  # cond result
add in 2 <121406 121980> out 1 <121981>  # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
split in 1 <121981> out 233 <121982 121983 121984 121985 121986 121987 121988 121989 121990 121991 121992 121993 121994 121995 121996 121997 121998 121999 122000 122001 122002 122003 122004 122005 122006 122007 122008 122009 122010 122011 122012 122013 122014 122015 122016 122017 122018 122019 122020 122021 122022 122023 122024 122025 122026 122027 122028 122029 122030 122031 122032 122033 122034 122035 122036 122037 122038 122039 122040 122041 122042 122043 122044 122045 122046 122047 122048 122049 122050 122051 122052 122053 122054 122055 122056 122057 122058 122059 122060 122061 122062 122063 122064 122065 122066 122067 122068 122069 122070 122071 122072 122073 122074 122075 122076 122077 122078 122079 122080 122081 122082 122083 122084 122085 122086 122087 122088 122089 122090 122091 122092 122093 122094 122095 122096 122097 122098 122099 122100 122101 122102 122103 122104 122105 122106 122107 122108 122109 122110 122111 122112 122113 122114 122115 122116 122117 122118 122119 122120 122121 122122 122123 122124 122125 122126 122127 122128 122129 122130 122131 122132 122133 122134 122135 122136 122137 122138 122139 122140 122141 122142 122143 122144 122145 122146 122147 122148 122149 122150 122151 122152 122153 122154 122155 122156 122157 122158 122159 122160 122161 122162 122163 122164 122165 122166 122167 122168 122169 122170 122171 122172 122173 122174 122175 122176 122177 122178 122179 122180 122181 122182 122183 122184 122185 122186 122187 122188 122189 122190 122191 122192 122193 122194 122195 122196 122197 122198 122199 122200 122201 122202 122203 122204 122205 122206 122207 122208 122209 122210 122211 122212 122213 122214> # SplitBus
const-mul-2 in 1 <122013> out 1 <122215> # join source bit 31
add in 2 <122012 122215> out 1 <122216>  # join source bit 30
const-mul-2 in 1 <122216> out 1 <122217> # join
add in 2 <122011 122217> out 1 <122218>  # join source bit 29
const-mul-2 in 1 <122218> out 1 <122219> # join
add in 2 <122010 122219> out 1 <122220>  # join source bit 28
const-mul-2 in 1 <122220> out 1 <122221> # join
add in 2 <122009 122221> out 1 <122222>  # join source bit 27
const-mul-2 in 1 <122222> out 1 <122223> # join
add in 2 <122008 122223> out 1 <122224>  # join source bit 26
const-mul-2 in 1 <122224> out 1 <122225> # join
add in 2 <122007 122225> out 1 <122226>  # join source bit 25
const-mul-2 in 1 <122226> out 1 <122227> # join
add in 2 <122006 122227> out 1 <122228>  # join source bit 24
const-mul-2 in 1 <122228> out 1 <122229> # join
add in 2 <122005 122229> out 1 <122230>  # join source bit 23
const-mul-2 in 1 <122230> out 1 <122231> # join
add in 2 <122004 122231> out 1 <122232>  # join source bit 22
const-mul-2 in 1 <122232> out 1 <122233> # join
add in 2 <122003 122233> out 1 <122234>  # join source bit 21
const-mul-2 in 1 <122234> out 1 <122235> # join
add in 2 <122002 122235> out 1 <122236>  # join source bit 20
const-mul-2 in 1 <122236> out 1 <122237> # join
add in 2 <122001 122237> out 1 <122238>  # join source bit 19
const-mul-2 in 1 <122238> out 1 <122239> # join
add in 2 <122000 122239> out 1 <122240>  # join source bit 18
const-mul-2 in 1 <122240> out 1 <122241> # join
add in 2 <121999 122241> out 1 <122242>  # join source bit 17
const-mul-2 in 1 <122242> out 1 <122243> # join
add in 2 <121998 122243> out 1 <122244>  # join source bit 16
const-mul-2 in 1 <122244> out 1 <122245> # join
add in 2 <121997 122245> out 1 <122246>  # join source bit 15
const-mul-2 in 1 <122246> out 1 <122247> # join
add in 2 <121996 122247> out 1 <122248>  # join source bit 14
const-mul-2 in 1 <122248> out 1 <122249> # join
add in 2 <121995 122249> out 1 <122250>  # join source bit 13
const-mul-2 in 1 <122250> out 1 <122251> # join
add in 2 <121994 122251> out 1 <122252>  # join source bit 12
const-mul-2 in 1 <122252> out 1 <122253> # join
add in 2 <121993 122253> out 1 <122254>  # join source bit 11
const-mul-2 in 1 <122254> out 1 <122255> # join
add in 2 <121992 122255> out 1 <122256>  # join source bit 10
const-mul-2 in 1 <122256> out 1 <122257> # join
add in 2 <121991 122257> out 1 <122258>  # join source bit 9
const-mul-2 in 1 <122258> out 1 <122259> # join
add in 2 <121990 122259> out 1 <122260>  # join source bit 8
const-mul-2 in 1 <122260> out 1 <122261> # join
add in 2 <121989 122261> out 1 <122262>  # join source bit 7
const-mul-2 in 1 <122262> out 1 <122263> # join
add in 2 <121988 122263> out 1 <122264>  # join source bit 6
const-mul-2 in 1 <122264> out 1 <122265> # join
add in 2 <121987 122265> out 1 <122266>  # join source bit 5
const-mul-2 in 1 <122266> out 1 <122267> # join
add in 2 <121986 122267> out 1 <122268>  # join source bit 4
const-mul-2 in 1 <122268> out 1 <122269> # join
add in 2 <121985 122269> out 1 <122270>  # join source bit 3
const-mul-2 in 1 <122270> out 1 <122271> # join
add in 2 <121984 122271> out 1 <122272>  # join source bit 2
const-mul-2 in 1 <122272> out 1 <122273> # join
add in 2 <121983 122273> out 1 <122274>  # join source bit 1
const-mul-2 in 1 <122274> out 1 <122275> # join
add in 2 <121982 122275> out 1 <122276>  # join source bit 0
add in 2 <122276 122276> out 1 <122277>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <121406> out 1 <122278> # multiply-by-constant 4294967295
add in 2 <121980 122278> out 1 <122279>  # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <122279> out 265 <122280 122281 122282 122283 122284 122285 122286 122287 122288 122289 122290 122291 122292 122293 122294 122295 122296 122297 122298 122299 122300 122301 122302 122303 122304 122305 122306 122307 122308 122309 122310 122311 122312 122313 122314 122315 122316 122317 122318 122319 122320 122321 122322 122323 122324 122325 122326 122327 122328 122329 122330 122331 122332 122333 122334 122335 122336 122337 122338 122339 122340 122341 122342 122343 122344 122345 122346 122347 122348 122349 122350 122351 122352 122353 122354 122355 122356 122357 122358 122359 122360 122361 122362 122363 122364 122365 122366 122367 122368 122369 122370 122371 122372 122373 122374 122375 122376 122377 122378 122379 122380 122381 122382 122383 122384 122385 122386 122387 122388 122389 122390 122391 122392 122393 122394 122395 122396 122397 122398 122399 122400 122401 122402 122403 122404 122405 122406 122407 122408 122409 122410 122411 122412 122413 122414 122415 122416 122417 122418 122419 122420 122421 122422 122423 122424 122425 122426 122427 122428 122429 122430 122431 122432 122433 122434 122435 122436 122437 122438 122439 122440 122441 122442 122443 122444 122445 122446 122447 122448 122449 122450 122451 122452 122453 122454 122455 122456 122457 122458 122459 122460 122461 122462 122463 122464 122465 122466 122467 122468 122469 122470 122471 122472 122473 122474 122475 122476 122477 122478 122479 122480 122481 122482 122483 122484 122485 122486 122487 122488 122489 122490 122491 122492 122493 122494 122495 122496 122497 122498 122499 122500 122501 122502 122503 122504 122505 122506 122507 122508 122509 122510 122511 122512 122513 122514 122515 122516 122517 122518 122519 122520 122521 122522 122523 122524 122525 122526 122527 122528 122529 122530 122531 122532 122533 122534 122535 122536 122537 122538 122539 122540 122541 122542 122543 122544> # SplitBus
mul in 2 <122311 122277> out 1 <122545>  # cond trueterm
const-mul-neg-1 in 1 <122311> out 1 <122546> # cond minuscond
add in 2 <100 122546> out 1 <122547>     # cond negcond
mul in 2 <122547 121406> out 1 <122548>  # cond falseterm
add in 2 <122545 122548> out 1 <122549>  # cond result
mul in 2 <121234 121198> out 1 <122550>  # cond trueterm
const-mul-neg-1 in 1 <121234> out 1 <122551> # cond minuscond
add in 2 <100 122551> out 1 <122552>     # cond negcond
mul in 2 <122552 121195> out 1 <122553>  # cond falseterm
add in 2 <122550 122553> out 1 <122554>  # cond result
mul in 2 <121090 121054> out 1 <122555>  # cond trueterm
const-mul-neg-1 in 1 <121090> out 1 <122556> # cond minuscond
add in 2 <100 122556> out 1 <122557>     # cond negcond
mul in 2 <122557 121051> out 1 <122558>  # cond falseterm
add in 2 <122555 122558> out 1 <122559>  # cond result
const-mul-ffffffff in 1 <122559> out 1 <122560> # multiply-by-constant 4294967295
add in 2 <122559 122554> out 1 <122561>  # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
add in 2 <122561 122560> out 1 <122562>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <122562> out 1 <122563> # multiply-by-constant 4294967295
add in 2 <122561 122563> out 1 <122564>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <122559> out 1 <122565> # multiply-by-constant 4294967295
add in 2 <122554 122565> out 1 <122566>  # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <122566> out 200 <122567 122568 122569 122570 122571 122572 122573 122574 122575 122576 122577 122578 122579 122580 122581 122582 122583 122584 122585 122586 122587 122588 122589 122590 122591 122592 122593 122594 122595 122596 122597 122598 122599 122600 122601 122602 122603 122604 122605 122606 122607 122608 122609 122610 122611 122612 122613 122614 122615 122616 122617 122618 122619 122620 122621 122622 122623 122624 122625 122626 122627 122628 122629 122630 122631 122632 122633 122634 122635 122636 122637 122638 122639 122640 122641 122642 122643 122644 122645 122646 122647 122648 122649 122650 122651 122652 122653 122654 122655 122656 122657 122658 122659 122660 122661 122662 122663 122664 122665 122666 122667 122668 122669 122670 122671 122672 122673 122674 122675 122676 122677 122678 122679 122680 122681 122682 122683 122684 122685 122686 122687 122688 122689 122690 122691 122692 122693 122694 122695 122696 122697 122698 122699 122700 122701 122702 122703 122704 122705 122706 122707 122708 122709 122710 122711 122712 122713 122714 122715 122716 122717 122718 122719 122720 122721 122722 122723 122724 122725 122726 122727 122728 122729 122730 122731 122732 122733 122734 122735 122736 122737 122738 122739 122740 122741 122742 122743 122744 122745 122746 122747 122748 122749 122750 122751 122752 122753 122754 122755 122756 122757 122758 122759 122760 122761 122762 122763 122764 122765 122766> # SplitBus
mul in 2 <122598 122564> out 1 <122767>  # cond trueterm
const-mul-neg-1 in 1 <122598> out 1 <122768> # cond minuscond
add in 2 <100 122768> out 1 <122769>     # cond negcond
mul in 2 <122769 122554> out 1 <122770>  # cond falseterm
add in 2 <122767 122770> out 1 <122771>  # cond result
const-mul-ffffffff in 1 <122771> out 1 <122772> # multiply-by-constant 4294967295
add in 2 <122771 122549> out 1 <122773>  # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
split in 1 <122773> out 235 <122774 122775 122776 122777 122778 122779 122780 122781 122782 122783 122784 122785 122786 122787 122788 122789 122790 122791 122792 122793 122794 122795 122796 122797 122798 122799 122800 122801 122802 122803 122804 122805 122806 122807 122808 122809 122810 122811 122812 122813 122814 122815 122816 122817 122818 122819 122820 122821 122822 122823 122824 122825 122826 122827 122828 122829 122830 122831 122832 122833 122834 122835 122836 122837 122838 122839 122840 122841 122842 122843 122844 122845 122846 122847 122848 122849 122850 122851 122852 122853 122854 122855 122856 122857 122858 122859 122860 122861 122862 122863 122864 122865 122866 122867 122868 122869 122870 122871 122872 122873 122874 122875 122876 122877 122878 122879 122880 122881 122882 122883 122884 122885 122886 122887 122888 122889 122890 122891 122892 122893 122894 122895 122896 122897 122898 122899 122900 122901 122902 122903 122904 122905 122906 122907 122908 122909 122910 122911 122912 122913 122914 122915 122916 122917 122918 122919 122920 122921 122922 122923 122924 122925 122926 122927 122928 122929 122930 122931 122932 122933 122934 122935 122936 122937 122938 122939 122940 122941 122942 122943 122944 122945 122946 122947 122948 122949 122950 122951 122952 122953 122954 122955 122956 122957 122958 122959 122960 122961 122962 122963 122964 122965 122966 122967 122968 122969 122970 122971 122972 122973 122974 122975 122976 122977 122978 122979 122980 122981 122982 122983 122984 122985 122986 122987 122988 122989 122990 122991 122992 122993 122994 122995 122996 122997 122998 122999 123000 123001 123002 123003 123004 123005 123006 123007 123008> # SplitBus
const-mul-2 in 1 <122805> out 1 <123009> # join source bit 31
add in 2 <122804 123009> out 1 <123010>  # join source bit 30
const-mul-2 in 1 <123010> out 1 <123011> # join
add in 2 <122803 123011> out 1 <123012>  # join source bit 29
const-mul-2 in 1 <123012> out 1 <123013> # join
add in 2 <122802 123013> out 1 <123014>  # join source bit 28
const-mul-2 in 1 <123014> out 1 <123015> # join
add in 2 <122801 123015> out 1 <123016>  # join source bit 27
const-mul-2 in 1 <123016> out 1 <123017> # join
add in 2 <122800 123017> out 1 <123018>  # join source bit 26
const-mul-2 in 1 <123018> out 1 <123019> # join
add in 2 <122799 123019> out 1 <123020>  # join source bit 25
const-mul-2 in 1 <123020> out 1 <123021> # join
add in 2 <122798 123021> out 1 <123022>  # join source bit 24
const-mul-2 in 1 <123022> out 1 <123023> # join
add in 2 <122797 123023> out 1 <123024>  # join source bit 23
const-mul-2 in 1 <123024> out 1 <123025> # join
add in 2 <122796 123025> out 1 <123026>  # join source bit 22
const-mul-2 in 1 <123026> out 1 <123027> # join
add in 2 <122795 123027> out 1 <123028>  # join source bit 21
const-mul-2 in 1 <123028> out 1 <123029> # join
add in 2 <122794 123029> out 1 <123030>  # join source bit 20
const-mul-2 in 1 <123030> out 1 <123031> # join
add in 2 <122793 123031> out 1 <123032>  # join source bit 19
const-mul-2 in 1 <123032> out 1 <123033> # join
add in 2 <122792 123033> out 1 <123034>  # join source bit 18
const-mul-2 in 1 <123034> out 1 <123035> # join
add in 2 <122791 123035> out 1 <123036>  # join source bit 17
const-mul-2 in 1 <123036> out 1 <123037> # join
add in 2 <122790 123037> out 1 <123038>  # join source bit 16
const-mul-2 in 1 <123038> out 1 <123039> # join
add in 2 <122789 123039> out 1 <123040>  # join source bit 15
const-mul-2 in 1 <123040> out 1 <123041> # join
add in 2 <122788 123041> out 1 <123042>  # join source bit 14
const-mul-2 in 1 <123042> out 1 <123043> # join
add in 2 <122787 123043> out 1 <123044>  # join source bit 13
const-mul-2 in 1 <123044> out 1 <123045> # join
add in 2 <122786 123045> out 1 <123046>  # join source bit 12
const-mul-2 in 1 <123046> out 1 <123047> # join
add in 2 <122785 123047> out 1 <123048>  # join source bit 11
const-mul-2 in 1 <123048> out 1 <123049> # join
add in 2 <122784 123049> out 1 <123050>  # join source bit 10
const-mul-2 in 1 <123050> out 1 <123051> # join
add in 2 <122783 123051> out 1 <123052>  # join source bit 9
const-mul-2 in 1 <123052> out 1 <123053> # join
add in 2 <122782 123053> out 1 <123054>  # join source bit 8
const-mul-2 in 1 <123054> out 1 <123055> # join
add in 2 <122781 123055> out 1 <123056>  # join source bit 7
const-mul-2 in 1 <123056> out 1 <123057> # join
add in 2 <122780 123057> out 1 <123058>  # join source bit 6
const-mul-2 in 1 <123058> out 1 <123059> # join
add in 2 <122779 123059> out 1 <123060>  # join source bit 5
const-mul-2 in 1 <123060> out 1 <123061> # join
add in 2 <122778 123061> out 1 <123062>  # join source bit 4
const-mul-2 in 1 <123062> out 1 <123063> # join
add in 2 <122777 123063> out 1 <123064>  # join source bit 3
const-mul-2 in 1 <123064> out 1 <123065> # join
add in 2 <122776 123065> out 1 <123066>  # join source bit 2
const-mul-2 in 1 <123066> out 1 <123067> # join
add in 2 <122775 123067> out 1 <123068>  # join source bit 1
const-mul-2 in 1 <123068> out 1 <123069> # join
add in 2 <122774 123069> out 1 <123070>  # join source bit 0
add in 2 <123070 123070> out 1 <123071>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <123071> out 1 <123072> # multiply-by-constant 4294967295
add in 2 <122773 123072> out 1 <123073>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <122771> out 1 <123074> # multiply-by-constant 4294967295
add in 2 <122549 123074> out 1 <123075>  # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <123075> out 267 <123076 123077 123078 123079 123080 123081 123082 123083 123084 123085 123086 123087 123088 123089 123090 123091 123092 123093 123094 123095 123096 123097 123098 123099 123100 123101 123102 123103 123104 123105 123106 123107 123108 123109 123110 123111 123112 123113 123114 123115 123116 123117 123118 123119 123120 123121 123122 123123 123124 123125 123126 123127 123128 123129 123130 123131 123132 123133 123134 123135 123136 123137 123138 123139 123140 123141 123142 123143 123144 123145 123146 123147 123148 123149 123150 123151 123152 123153 123154 123155 123156 123157 123158 123159 123160 123161 123162 123163 123164 123165 123166 123167 123168 123169 123170 123171 123172 123173 123174 123175 123176 123177 123178 123179 123180 123181 123182 123183 123184 123185 123186 123187 123188 123189 123190 123191 123192 123193 123194 123195 123196 123197 123198 123199 123200 123201 123202 123203 123204 123205 123206 123207 123208 123209 123210 123211 123212 123213 123214 123215 123216 123217 123218 123219 123220 123221 123222 123223 123224 123225 123226 123227 123228 123229 123230 123231 123232 123233 123234 123235 123236 123237 123238 123239 123240 123241 123242 123243 123244 123245 123246 123247 123248 123249 123250 123251 123252 123253 123254 123255 123256 123257 123258 123259 123260 123261 123262 123263 123264 123265 123266 123267 123268 123269 123270 123271 123272 123273 123274 123275 123276 123277 123278 123279 123280 123281 123282 123283 123284 123285 123286 123287 123288 123289 123290 123291 123292 123293 123294 123295 123296 123297 123298 123299 123300 123301 123302 123303 123304 123305 123306 123307 123308 123309 123310 123311 123312 123313 123314 123315 123316 123317 123318 123319 123320 123321 123322 123323 123324 123325 123326 123327 123328 123329 123330 123331 123332 123333 123334 123335 123336 123337 123338 123339 123340 123341 123342> # SplitBus
mul in 2 <123107 123073> out 1 <123343>  # cond trueterm
const-mul-neg-1 in 1 <123107> out 1 <123344> # cond minuscond
add in 2 <100 123344> out 1 <123345>     # cond negcond
mul in 2 <123345 122549> out 1 <123346>  # cond falseterm
add in 2 <123343 123346> out 1 <123347>  # cond result
add in 2 <123347 104> out 1 <123348>     # ArithBusReq.AddReq(DFG.Conditional,DFG.Constant)
const-mul-ffffffff in 1 <39> out 1 <123349> # multiply-by-constant 4294967295
add in 2 <123348 123349> out 1 <123350>  # 'CmpLT DFG.Add - DFG.Input'
split in 1 <123350> out 238 <123351 123352 123353 123354 123355 123356 123357 123358 123359 123360 123361 123362 123363 123364 123365 123366 123367 123368 123369 123370 123371 123372 123373 123374 123375 123376 123377 123378 123379 123380 123381 123382 123383 123384 123385 123386 123387 123388 123389 123390 123391 123392 123393 123394 123395 123396 123397 123398 123399 123400 123401 123402 123403 123404 123405 123406 123407 123408 123409 123410 123411 123412 123413 123414 123415 123416 123417 123418 123419 123420 123421 123422 123423 123424 123425 123426 123427 123428 123429 123430 123431 123432 123433 123434 123435 123436 123437 123438 123439 123440 123441 123442 123443 123444 123445 123446 123447 123448 123449 123450 123451 123452 123453 123454 123455 123456 123457 123458 123459 123460 123461 123462 123463 123464 123465 123466 123467 123468 123469 123470 123471 123472 123473 123474 123475 123476 123477 123478 123479 123480 123481 123482 123483 123484 123485 123486 123487 123488 123489 123490 123491 123492 123493 123494 123495 123496 123497 123498 123499 123500 123501 123502 123503 123504 123505 123506 123507 123508 123509 123510 123511 123512 123513 123514 123515 123516 123517 123518 123519 123520 123521 123522 123523 123524 123525 123526 123527 123528 123529 123530 123531 123532 123533 123534 123535 123536 123537 123538 123539 123540 123541 123542 123543 123544 123545 123546 123547 123548 123549 123550 123551 123552 123553 123554 123555 123556 123557 123558 123559 123560 123561 123562 123563 123564 123565 123566 123567 123568 123569 123570 123571 123572 123573 123574 123575 123576 123577 123578 123579 123580 123581 123582 123583 123584 123585 123586 123587 123588> # SplitBus
mul in 2 <123382 103> out 1 <123589>     # cond trueterm
const-mul-neg-1 in 1 <123382> out 1 <123590> # cond minuscond
add in 2 <100 123590> out 1 <123591>     # cond negcond
mul in 2 <123591 102> out 1 <123592>     # cond falseterm
add in 2 <123589 123592> out 1 <123593>  # cond result
add in 2 <123347 3084> out 1 <123594>    # ArithBusReq.AddReq(DFG.Conditional,DFG.Negate)
const-mul-ffffffff in 1 <123594> out 1 <123595> # multiply-by-constant 4294967295
add in 2 <39 123595> out 1 <123596>      # 'CmpLT DFG.Input - DFG.Subtract'
split in 1 <123596> outplitBus
mul in 2 <123628 103> out 1 <123867>     # cond trueterm
const-mul-neg-1 in 1 <123628> out 1 <123868> # cond minuscond
add in 2 <100 123868> out 1 <123869>     # cond negcond
mul in 2 <123869 123593> out 1 <123870>  # cond falseterm
add in 2 <123867 123870> out 1 <123871>  # cond result
const-mul-ffffffff in 1 <38> out 1 <123872> # multiply-by-constant 4294967295
add in 2 <38 39> out 1 <123873>          # ArithBusReq.AddReq(DFG.Input,DFG.Input)
add in 2 <123873 123872> out 1 <123874>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <123874> out 1 <123875> # multiply-by-constant 4294967295
add in 2 <123873 123875> out 1 <123876>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <38> out 1 <123877> # multiply-by-constant 4294967295
add in 2 <39 123877> out 1 <123878>      # 'CmpLT DFG.Input - DFG.Input'
split in 1 <123878> out 65 <123879 123880 123881 123882 123883 123884 123885 123886 123887 123888 123889 123890 123891 123892 123893 123894 123895 123896 123897 123898 123899 123900 123901 123902 123903 123904 123905 123906 123907 123908 123909 123910 123911 123912 123913 123914 123915 123916 123917 123918 123919 123920 123921 123922 123923 123924 123925 123926 123927 123928 123929 123930 123931 123932 123933 123934 123935 123936 123937 123938 123939 123940 123941 123942 123943> # SplitBus
mul in 2 <123910 123876> out 1 <123944>  # cond trueterm
const-mul-neg-1 in 1 <123910> out 1 <123945> # cond minuscond
add in 2 <100 123945> out 1 <123946>     # cond negcond
mul in 2 <123946 39> out 1 <123947>      # cond falseterm
add in 2 <123944 123947> out 1 <123948>  # cond result
const-mul-ffffffff in 1 <123948> out 1 <123949> # multiply-by-constant 4294967295
add in 2 <123948 40> out 1 <123950>      # ArithBusReq.AddReq(DFG.Conditional,DFG.Input)
add in 2 <123950 123949> out 1 <123951>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <123951> out 1 <123952> # multiply-by-constant 4294967295
add in 2 <123950 123952> out 1 <123953>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <123948> out 1 <123954> # multiply-by-constant 4294967295
add in 2 <40 123954> out 1 <123955>      # 'CmpLT DFG.Input - DFG.Conditional'
split in 1 <123955> out 131 <123956 123957 123958 123959 123960 123961 123962 123963 123964 123965 123966 123967 123968 123969 123970 123971 123972 123973 123974 123975 123976 123977 123978 123979 123980 123981 123982 123983 123984 123985 123986 123987 123988 123989 123990 123991 123992 123993 123994 123995 123996 123997 123998 123999 124000 124001 124002 124003 124004 124005 124006 124007 124008 124009 124010 124011 124012 124013 124014 124015 124016 124017 124018 124019 124020 124021 124022 124023 124024 124025 124026 124027 124028 124029 124030 124031 124032 124033 124034 124035 124036 124037 124038 124039 124040 124041 124042 124043 124044 124045 124046 124047 124048 124049 124050 124051 124052 124053 124054 124055 124056 124057 124058 124059 124060 124061 124062 124063 124064 124065 124066 124067 124068 124069 124070 124071 124072 124073 124074 124075 124076 124077 124078 124079 124080 124081 124082 124083 124084 124085 124086> # SplitBus
mul in 2 <123987 123953> out 1 <124087>  # cond trueterm
const-mul-neg-1 in 1 <123987> out 1 <124088> # cond minuscond
add in 2 <100 124088> out 1 <124089>     # cond negcond
mul in 2 <124089 40> out 1 <124090>      # cond falseterm
add in 2 <124087 124090> out 1 <124091>  # cond result
const-mul-ffffffff in 1 <124091> out 1 <124092> # multiply-by-constant 4294967295
add in 2 <124091 41> out 1 <124093>      # ArithBusReq.AddReq(DFG.Conditional,DFG.Input)
add in 2 <124093 124092> out 1 <124094>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <124091> out 1 <124095> # multiply-by-constant 4294967295
add in 2 <41 124095> out 1 <124096>      # 'CmpLT DFG.Input - DFG.Conditional'
split in 1 <124096> out 197 <124097 124098 124099 124100 124101 124102 124103 124104 124105 124106 124107 124108 124109 124110 124111 124112 124113 124114 124115 124116 124117 124118 124119 124120 124121 124122 124123 124124 124125 124126 124127 124128 124129 124130 124131 124132 124133 124134 124135 124136 124137 124138 124139 124140 124141 124142 124143 124144 124145 124146 124147 124148 124149 124150 124151 124152 124153 124154 124155 124156 124157 124158 124159 124160 124161 124162 124163 124164 124165 124166 124167 124168 124169 124170 124171 124172 124173 124174 124175 124176 124177 124178 124179 124180 124181 124182 124183 124184 124185 124186 124187 124188 124189 124190 124191 124192 124193 124194 124195 124196 124197 124198 124199 124200 124201 124202 124203 124204 124205 124206 124207 124208 124209 124210 124211 124212 124213 124214 124215 124216 124217 124218 124219 124220 124221 124222 124223 124224 124225 124226 124227 124228 124229 124230 124231 124232 124233 124234 124235 124236 124237 124238 124239 124240 124241 124242 124243 124244 124245 124246 124247 124248 124249 124250 124251 124252 124253 124254 124255 124256 124257 124258 124259 124260 124261 124262 124263 124264 124265 124266 124267 124268 124269 124270 124271 124272 124273 124274 124275 124276 124277 124278 124279 124280 124281 124282 124283 124284 124285 124286 124287 124288 124289 124290 124291 124292 124293> # SplitBus
mul in 2 <124128 124094> out 1 <124294>  # cond trueterm
const-mul-neg-1 in 1 <124128> out 1 <124295> # cond minuscond
add in 2 <100 124295> out 1 <124296>     # cond negcond
mul in 2 <124296 124091> out 1 <124297>  # cond falseterm
add in 2 <124294 124297> out 1 <124298>  # cond result
mul in 2 <123987 123951> out 1 <124299>  # cond trueterm
const-mul-neg-1 in 1 <123987> out 1 <124300> # cond minuscond
add in 2 <100 124300> out 1 <124301>     # cond negcond
mul in 2 <124301 123948> out 1 <124302>  # cond falseterm
add in 2 <124299 124302> out 1 <124303>  # cond result
mul in 2 <123910 123874> out 1 <124304>  # cond trueterm
const-mul-neg-1 in 1 <123910> out 1 <124305> # cond minuscond
add in 2 <100 124305> out 1 <124306>     # cond negcond
mul in 2 <124306 38> out 1 <124307>      # cond falseterm
add in 2 <124304 124307> out 1 <124308>  # cond result
const-mul-ffffffff in 1 <124308> out 1 <124309> # multiply-by-constant 4294967295
add in 2 <124308 124303> out 1 <124310>  # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
add in 2 <124310 124309> out 1 <124311>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <124311> out 1 <124312> # multiply-by-constant 4294967295
add in 2 <124310 124312> out 1 <124313>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <124308> out 1 <124314> # multiply-by-constant 4294967295
add in 2 <124303 124314> out 1 <124315>  # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <124315> out 132 <124316 124317 124318 124319 124320 124321 124322 124323 124324 124325 124326 124327 124328 124329 124330 124331 124332 124333 124334 124335 124336 124337 124338 124339 124340 124341 124342 124343 124344 124345 124346 124347 124348 124349 124350 124351 124352 124353 124354 124355 124356 124357 124358 124359 124360 124361 124362 124363 124364 124365 124366 124367 124368 124369 124370 124371 124372 124373 124374 124375 124376 124377 124378 124379 124380 124381 124382 124383 124384 124385 124386 124387 124388 124389 124390 124391 124392 124393 124394 124395 124396 124397 124398 124399 124400 124401 124402 124403 124404 124405 124406 124407 124408 124409 124410 124411 124412 124413 124414 124415 124416 124417 124418 124419 124420 124421 124422 124423 124424 124425 124426 124427 124428 124429 124430 124431 124432 124433 124434 124435 124436 124437 124438 124439 124440 124441 124442 124443 124444 124445 124446 124447> # SplitBus
mul in 2 <124347 124313> out 1 <124448>  # cond trueterm
const-mul-neg-1 in 1 <124347> out 1 <124449> # cond minuscond
add in 2 <100 124449> out 1 <124450>     # cond negcond
mul in 2 <124450 124303> out 1 <124451>  # cond falseterm
add in 2 <124448 124451> out 1 <124452>  # cond result
const-mul-ffffffff in 1 <124452> out 1 <124453> # multiply-by-constant 4294967295
add in 2 <124452 124298> out 1 <124454>  # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
add in 2 <124454 124453> out 1 <124455>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <124455> out 1 <124456> # multiply-by-constant 4294967295
add in 2 <124454 124456> out 1 <124457>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <124452> out 1 <124458> # multiply-by-constant 4294967295
add in 2 <124298 124458> out 1 <124459>  # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <124459> out 199 <124460 124461 124462 124463 124464 124465 124466 124467 124468 124469 124470 124471 124472 124473 124474 124475 124476 124477 124478 124479 124480 124481 124482 124483 124484 124485 124486 124487 124488 124489 124490 124491 124492 124493 124494 124495 124496 124497 124498 124499 124500 124501 124502 124503 124504 124505 124506 124507 124508 124509 124510 124511 124512 124513 124514 124515 124516 124517 124518 124519 124520 124521 124522 124523 124524 124525 124526 124527 124528 124529 124530 124531 124532 124533 124534 124535 124536 124537 124538 124539 124540 124541 124542 124543 124544 124545 124546 124547 124548 124549 124550 124551 124552 124553 124554 124555 124556 124557 124558 124559 124560 124561 124562 124563 124564 124565 124566 124567 124568 124569 124570 124571 124572 124573 124574 124575 124576 124577 124578 124579 124580 124581 124582 124583 124584 124585 124586 124587 124588 124589 124590 124591 124592 124593 124594 124595 124596 124597 124598 124599 124600 124601 124602 124603 124604 124605 124606 124607 124608 124609 124610 124611 124612 124613 124614 124615 124616 124617 124618 124619 124620 124621 124622 124623 124624 124625 124626 124627 124628 124629 124630 124631 124632 124633 124634 124635 124636 124637 124638 124639 124640 124641 124642 124643 124644 124645 124646 124647 124648 124649 124650 124651 124652 124653 124654 124655 124656 124657 124658> # SplitBus
mul in 2 <124491 124457> out 1 <124659>  # cond trueterm
const-mul-neg-1 in 1 <124491> out 1 <124660> # cond minuscond
add in 2 <100 124660> out 1 <124661>     # cond negcond
mul in 2 <124661 124298> out 1 <124662>  # cond falseterm
add in 2 <124659 124662> out 1 <124663>  # cond result
const-mul-ffffffff in 1 <124663> out 1 <124664> # multiply-by-constant 4294967295
const-mul-ffffffff in 1 <124094> out 1 <124665> # multiply-by-constant 4294967295
add in 2 <124093 124665> out 1 <124666>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
mul in 2 <124128 124666> out 1 <124667>  # cond trueterm
const-mul-neg-1 in 1 <124128> out 1 <124668> # cond minuscond
add in 2 <100 124668> out 1 <124669>     # cond negcond
mul in 2 <124669 41> out 1 <124670>      # cond falseterm
add in 2 <124667 124670> out 1 <124671>  # cond result
const-mul-ffffffff in 1 <124671> out 1 <124672> # multiply-by-constant 4294967295
add in 2 <124671 42> out 1 <124673>      # ArithBusReq.AddReq(DFG.Conditional,DFG.Input)
split in 1 <124673> out 231 <124674 124675 124676 124677 124678 124679 124680 124681 124682 124683 124684 124685 124686 124687 124688 124689 124690 124691 124692 124693 124694 124695 124696 124697 124698 124699 124700 124701 124702 124703 124704 124705 124706 124707 124708 124709 124710 124711 124712 124713 124714 124715 124716 124717 124718 124719 124720 124721 124722 124723 124724 124725 124726 124727 124728 124729 124730 124731 124732 124733 124734 124735 124736 124737 124738 124739 124740 124741 124742 124743 124744 124745 124746 124747 124748 124749 124750 124751 124752 124753 124754 124755 124756 124757 124758 124759 124760 124761 124762 124763 124764 124765 124766 124767 124768 124769 124770 124771 124772 124773 124774 124775 124776 124777 124778 124779 124780 124781 124782 124783 124784 124785 124786 124787 124788 124789 124790 124791 124792 124793 124794 124795 124796 124797 124798 124799 124800 124801 124802 124803 124804 124805 124806 124807 124808 124809 124810 124811 124812 124813 124814 124815 124816 124817 124818 124819 124820 124821 124822 124823 124824 124825 124826 124827 124828 124829 124830 124831 124832 124833 124834 124835 124836 124837 124838 124839 124840 124841 124842 124843 124844 124845 124846 124847 124848 124849 124850 124851 124852 124853 124854 124855 124856 124857 124858 124859 124860 124861 124862 124863 124864 124865 124866 124867 124868 124869 124870 124871 124872 124873 124874 124875 124876 124877 124878 124879 124880 124881 124882 124883 124884 124885 124886 124887 124888 124889 124890 124891 124892 124893 124894 124895 124896 124897 124898 124899 124900 124901 124902 124903 124904> # SplitBus
const-mul-2 in 1 <124705> out 1 <124905> # join source bit 31
add in 2 <124704 124905> out 1 <124906>  # join source bit 30
const-mul-2 in 1 <124906> out 1 <124907> # join
add in 2 <124703 124907> out 1 <124908>  # join source bit 29
const-mul-2 in 1 <124908> out 1 <124909> # join
add in 2 <124702 124909> out 1 <124910>  # join source bit 28
const-mul-2 in 1 <124910> out 1 <124911> # join
add in 2 <124701 124911> out 1 <124912>  # join source bit 27
const-mul-2 in 1 <124912> out 1 <124913> # join
add in 2 <124700 124913> out 1 <124914>  # join source bit 26
const-mul-2 in 1 <124914> out 1 <124915> # join
add in 2 <124699 124915> out 1 <124916>  # join source bit 25
const-mul-2 in 1 <124916> out 1 <124917> # join
add in 2 <124698 124917> out 1 <124918>  # join source bit 24
const-mul-2 in 1 <124918> out 1 <124919> # join
add in 2 <124697 124919> out 1 <124920>  # join source bit 23
const-mul-2 in 1 <124920> out 1 <124921> # join
add in 2 <124696 124921> out 1 <124922>  # join source bit 22
const-mul-2 in 1 <124922> out 1 <124923> # join
add in 2 <124695 124923> out 1 <124924>  # join source bit 21
const-mul-2 in 1 <124924> out 1 <124925> # join
add in 2 <124694 124925> out 1 <124926>  # join source bit 20
const-mul-2 in 1 <124926> out 1 <124927> # join
add in 2 <124693 124927> out 1 <124928>  # join source bit 19
const-mul-2 in 1 <124928> out 1 <124929> # join
add in 2 <124692 124929> out 1 <124930>  # join source bit 18
const-mul-2 in 1 <124930> out 1 <124931> # join
add in 2 <124691 124931> out 1 <124932>  # join source bit 17
const-mul-2 in 1 <124932> out 1 <124933> # join
add in 2 <124690 124933> out 1 <124934>  # join source bit 16
const-mul-2 in 1 <124934> out 1 <124935> # join
add in 2 <124689 124935> out 1 <124936>  # join source bit 15
const-mul-2 in 1 <124936> out 1 <124937> # join
add in 2 <124688 124937> out 1 <124938>  # join source bit 14
const-mul-2 in 1 <124938> out 1 <124939> # join
add in 2 <124687 124939> out 1 <124940>  # join source bit 13
const-mul-2 in 1 <124940> out 1 <124941> # join
add in 2 <124686 124941> out 1 <124942>  # join source bit 12
const-mul-2 in 1 <124942> out 1 <124943> # join
add in 2 <124685 124943> out 1 <124944>  # join source bit 11
const-mul-2 in 1 <124944> out 1 <124945> # join
add in 2 <124684 124945> out 1 <124946>  # join source bit 10
const-mul-2 in 1 <124946> out 1 <124947> # join
add in 2 <124683 124947> out 1 <124948>  # join source bit 9
const-mul-2 in 1 <124948> out 1 <124949> # join
add in 2 <124682 124949> out 1 <124950>  # join source bit 8
const-mul-2 in 1 <124950> out 1 <124951> # join
add in 2 <124681 124951> out 1 <124952>  # join source bit 7
const-mul-2 in 1 <124952> out 1 <124953> # join
add in 2 <124680 124953> out 1 <124954>  # join source bit 6
const-mul-2 in 1 <124954> out 1 <124955> # join
add in 2 <124679 124955> out 1 <124956>  # join source bit 5
const-mul-2 in 1 <124956> out 1 <124957> # join
add in 2 <124678 124957> out 1 <124958>  # join source bit 4
const-mul-2 in 1 <124958> out 1 <124959> # join
add in 2 <124677 124959> out 1 <124960>  # join source bit 3
const-mul-2 in 1 <124960> out 1 <124961> # join
add in 2 <124676 124961> out 1 <124962>  # join source bit 2
const-mul-2 in 1 <124962> out 1 <124963> # join
add in 2 <124675 124963> out 1 <124964>  # join source bit 1
const-mul-2 in 1 <124964> out 1 <124965> # join
add in 2 <124674 124965> out 1 <124966>  # join source bit 0
add in 2 <124966 124966> out 1 <124967>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <124671> out 1 <124968> # multiply-by-constant 4294967295
add in 2 <42 124968> out 1 <124969>      # 'CmpLT DFG.Input - DFG.Conditional'
split in 1 <124969> out 263 <124970 124971 124972 124973 124974 124975 124976 124977 124978 124979 124980 124981 124982 124983 124984 124985 124986 124987 124988 124989 124990 124991 124992 124993 124994 124995 124996 124997 124998 124999 125000 125001 125002 125003 125004 125005 125006 125007 125008 125009 125010 125011 125012 125013 125014 125015 125016 125017 125018 125019 125020 125021 125022 125023 125024 125025 125026 125027 125028 125029 125030 125031 125032 125033 125034 125035 125036 125037 125038 125039 125040 125041 125042 125043 125044 125045 125046 125047 125048 125049 125050 125051 125052 125053 125054 125055 125056 125057 125058 125059 125060 125061 125062 125063 125064 125065 125066 125067 125068 125069 125070 125071 125072 125073 125074 125075 125076 125077 125078 125079 125080 125081 125082 125083 125084 125085 125086 125087 125088 125089 125090 125091 125092 125093 125094 125095 125096 125097 125098 125099 125100 125101 125102 125103 125104 125105 125106 125107 125108 125109 125110 125111 125112 125113 125114 125115 125116 125117 125118 125119 125120 125121 125122 125123 125124 125125 125126 125127 125128 125129 125130 125131 125132 125133 125134 125135 125136 125137 125138 125139 125140 125141 125142 125143 125144 125145 125146 125147 125148 125149 125150 125151 125152 125153 125154 125155 125156 125157 125158 125159 125160 125161 125162 125163 125164 125165 125166 125167 125168 125169 125170 125171 125172 125173 125174 125175 125176 125177 125178 125179 125180 125181 125182 125183 125184 125185 125186 125187 125188 125189 125190 125191 125192 125193 125194 125195 125196 125197 125198 125199 125200 125201 125202 125203 125204 125205 125206 125207 125208 125209 125210 125211 125212 125213 125214 125215 125216 125217 125218 125219 125220 125221 125222 125223 125224 125225 125226 125227 125228 125229 125230 125231 125232> # SplitBus
mul in 2 <125001 124967> out 1 <125233>  # cond trueterm
const-mul-neg-1 in 1 <125001> out 1 <125234> # cond minuscond
add in 2 <100 125234> out 1 <125235>     # cond negcond
mul in 2 <125235 124671> out 1 <125236>  # cond falseterm
add in 2 <125233 125236> out 1 <125237>  # cond result
add in 2 <124663 125237> out 1 <125238>  # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
split in 1 <125238> out 233 <125239 125240 125241 125242 125243 125244 125245 125246 125247 125248 125249 125250 125251 125252 125253 125254 125255 125256 125257 125258 125259 125260 125261 125262 125263 125264 125265 125266 125267 125268 125269 125270 125271 125272 125273 125274 125275 125276 125277 125278 125279 125280 125281 125282 125283 125284 125285 125286 125287 125288 125289 125290 125291 125292 125293 125294 125295 125296 125297 125298 125299 125300 125301 125302 125303 125304 125305 125306 125307 125308 125309 125310 125311 125312 125313 125314 125315 125316 125317 125318 125319 125320 125321 125322 125323 125324 125325 125326 125327 125328 125329 125330 125331 125332 125333 125334 125335 125336 125337 125338 125339 125340 125341 125342 125343 125344 125345 125346 125347 125348 125349 125350 125351 125352 125353 125354 125355 125356 125357 125358 125359 125360 125361 125362 125363 125364 125365 125366 125367 125368 125369 125370 125371 125372 125373 125374 125375 125376 125377 125378 125379 125380 125381 125382 125383 125384 125385 125386 125387 125388 125389 125390 125391 125392 125393 125394 125395 125396 125397 125398 125399 125400 125401 125402 125403 125404 125405 125406 125407 125408 125409 125410 125411 125412 125413 125414 125415 125416 125417 125418 125419 125420 125421 125422 125423 125424 125425 125426 125427 125428 125429 125430 125431 125432 125433 125434 125435 125436 125437 125438 125439 125440 125441 125442 125443 125444 125445 125446 125447 125448 125449 125450 125451 125452 125453 125454 125455 125456 125457 125458 125459 125460 125461 125462 125463 125464 125465 125466 125467 125468 125469 125470 125471> # SplitBus
const-mul-2 in 1 <125270> out 1 <125472> # join source bit 31
add in 2 <125269 125472> out 1 <125473>  # join source bit 30
const-mul-2 in 1 <125473> out 1 <125474> # join
add in 2 <125268 125474> out 1 <125475>  # join source bit 29
const-mul-2 in 1 <125475> out 1 <125476> # join
add in 2 <125267 125476> out 1 <125477>  # join source bit 28
const-mul-2 in 1 <125477> out 1 <125478> # join
add in 2 <125266 125478> out 1 <125479>  # join source bit 27
const-mul-2 in 1 <125479> out 1 <125480> # join
add in 2 <125265 125480> out 1 <125481>  # join source bit 26
const-mul-2 in 1 <125481> out 1 <125482> # join
add in 2 <125264 125482> out 1 <125483>  # join source bit 25
const-mul-2 in 1 <125483> out 1 <125484> # join
add in 2 <125263 125484> out 1 <125485>  # join source bit 24
const-mul-2 in 1 <125485> out 1 <125486> # join
add in 2 <125262 125486> out 1 <125487>  # join source bit 23
const-mul-2 in 1 <125487> out 1 <125488> # join
add in 2 <125261 125488> out 1 <125489>  # join source bit 22
const-mul-2 in 1 <125489> out 1 <125490> # join
add in 2 <125260 125490> out 1 <125491>  # join source bit 21
const-mul-2 in 1 <125491> out 1 <125492> # join
add in 2 <125259 125492> out 1 <125493>  # join source bit 20
const-mul-2 in 1 <125493> out 1 <125494> # join
add in 2 <125258 125494> out 1 <125495>  # join source bit 19
const-mul-2 in 1 <125495> out 1 <125496> # join
add in 2 <125257 125496> out 1 <125497>  # join source bit 18
const-mul-2 in 1 <125497> out 1 <125498> # join
add in 2 <125256 125498> out 1 <125499>  # join source bit 17
const-mul-2 in 1 <125499> out 1 <125500> # join
add in 2 <125255 125500> out 1 <125501>  # join source bit 16
const-mul-2 in 1 <125501> out 1 <125502> # join
add in 2 <125254 125502> out 1 <125503>  # join source bit 15
const-mul-2 in 1 <125503> out 1 <125504> # join
add in 2 <125253 125504> out 1 <125505>  # join source bit 14
const-mul-2 in 1 <125505> out 1 <125506> # join
add in 2 <125252 125506> out 1 <125507>  # join source bit 13
const-mul-2 in 1 <125507> out 1 <125508> # join
add in 2 <125251 125508> out 1 <125509>  # join source bit 12
const-mul-2 in 1 <125509> out 1 <125510> # join
add in 2 <125250 125510> out 1 <125511>  # join source bit 11
const-mul-2 in 1 <125511> out 1 <125512> # join
add in 2 <125249 125512> out 1 <125513>  # join source bit 10
const-mul-2 in 1 <125513> out 1 <125514> # join
add in 2 <125248 125514> out 1 <125515>  # join source bit 9
const-mul-2 in 1 <125515> out 1 <125516> # join
add in 2 <125247 125516> out 1 <125517>  # join source bit 8
const-mul-2 in 1 <125517> out 1 <125518> # join
add in 2 <125246 125518> out 1 <125519>  # join source bit 7
const-mul-2 in 1 <125519> out 1 <125520> # join
add in 2 <125245 125520> out 1 <125521>  # join source bit 6
const-mul-2 in 1 <125521> out 1 <125522> # join
add in 2 <125244 125522> out 1 <125523>  # join source bit 5
const-mul-2 in 1 <125523> out 1 <125524> # join
add in 2 <125243 125524> out 1 <125525>  # join source bit 4
const-mul-2 in 1 <125525> out 1 <125526> # join
add in 2 <125242 125526> out 1 <125527>  # join source bit 3
const-mul-2 in 1 <125527> out 1 <125528> # join
add in 2 <125241 125528> out 1 <125529>  # join source bit 2
const-mul-2 in 1 <125529> out 1 <125530> # join
add in 2 <125240 125530> out 1 <125531>  # join source bit 1
const-mul-2 in 1 <125531> out 1 <125532> # join
add in 2 <125239 125532> out 1 <125533>  # join source bit 0
add in 2 <125533 125533> out 1 <125534>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <124663> out 1 <125535> # multiply-by-constant 4294967295
add in 2 <125237 125535> out 1 <125536>  # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <125536> out 265 <125537 125538 125539 125540 125541 125542 125543 125544 125545 125546 125547 125548 125549 125550 125551 125552 125553 125554 125555 125556 125557 125558 125559 125560 125561 125562 125563 125564 125565 125566 125567 125568 125569 125570 125571 125572 125573 125574 125575 125576 125577 125578 125579 125580 125581 125582 125583 125584 125585 125586 125587 125588 125589 125590 125591 125592 125593 125594 125595 125596 125597 125598 125599 125600 125601 125602 125603 125604 125605 125606 125607 125608 125609 125610 125611 125612 125613 125614 125615 125616 125617 125618 125619 125620 125621 125622 125623 125624 125625 125626 125627 125628 125629 125630 125631 125632 125633 125634 125635 125636 125637 125638 125639 125640 125641 125642 125643 125644 125645 125646 125647 125648 125649 125650 125651 125652 125653 125654 125655 125656 125657 125658 125659 125660 125661 125662 125663 125664 125665 125666 125667 125668 125669 125670 125671 125672 125673 125674 125675 125676 125677 125678 125679 125680 125681 125682 125683 125684 125685 125686 125687 125688 125689 125690 125691 125692 125693 125694 125695 125696 125697 125698 125699 125700 125701 125702 125703 125704 125705 125706 125707 125708 125709 125710 125711 125712 125713 125714 125715 125716 125717 125718 125719 125720 125721 125722 125723 125724 125725 125726 125727 125728 125729 125730 125731 125732 125733 125734 125735 125736 125737 125738 125739 125740 125741 125742 125743 125744 125745 125746 125747 125748 125749 125750 125751 125752 125753 125754 125755 125756 125757 125758 125759 125760 125761 125762 125763 125764 125765 125766 125767 125768 125769 125770 125771 125772 125773 125774 125775 125776 125777 125778 125779 125780 125781 125782 125783 125784 125785 125786 125787 125788 125789 125790 125791 125792 125793 125794 125795 125796 125797 125798 125799 125800 125801> # SplitBus
mul in 2 <125568 125534> out 1 <125802>  # cond trueterm
const-mul-neg-1 in 1 <125568> out 1 <125803> # cond minuscond
add in 2 <100 125803> out 1 <125804>     # cond negcond
mul in 2 <125804 124663> out 1 <125805>  # cond falseterm
add in 2 <125802 125805> out 1 <125806>  # cond result
mul in 2 <124491 124455> out 1 <125807>  # cond trueterm
const-mul-neg-1 in 1 <124491> out 1 <125808> # cond minuscond
add in 2 <100 125808> out 1 <125809>     # cond negcond
mul in 2 <125809 124452> out 1 <125810>  # cond falseterm
add in 2 <125807 125810> out 1 <125811>  # cond result
mul in 2 <124347 124311> out 1 <125812>  # cond trueterm
const-mul-neg-1 in 1 <124347> out 1 <125813> # cond minuscond
add in 2 <100 125813> out 1 <125814>     # cond negcond
mul in 2 <125814 124308> out 1 <125815>  # cond falseterm
add in 2 <125812 125815> out 1 <125816>  # cond result
const-mul-ffffffff in 1 <125816> out 1 <125817> # multiply-by-constant 4294967295
add in 2 <125816 125811> out 1 <125818>  # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
add in 2 <125818 125817> out 1 <125819>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <125819> out 1 <125820> # multiply-by-constant 4294967295
add in 2 <125818 125820> out 1 <125821>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <125816> out 1 <125822> # multiply-by-constant 4294967295
add in 2 <125811 125822> out 1 <125823>  # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <125823> out 200 <125824 125825 125826 125827 125828 125829 125830 125831 125832 125833 125834 125835 125836 125837 125838 125839 125840 125841 125842 125843 125844 125845 125846 125847 125848 125849 125850 125851 125852 125853 125854 125855 125856 125857 125858 125859 125860 125861 125862 125863 125864 125865 125866 125867 125868 125869 125870 125871 125872 125873 125874 125875 125876 125877 125878 125879 125880 125881 125882 125883 125884 125885 125886 125887 125888 125889 125890 125891 125892 125893 125894 125895 125896 125897 125898 125899 125900 125901 125902 125903 125904 125905 125906 125907 125908 125909 125910 125911 125912 125913 125914 125915 125916 125917 125918 125919 125920 125921 125922 125923 125924 125925 125926 125927 125928 125929 125930 125931 125932 125933 125934 125935 125936 125937 125938 125939 125940 125941 125942 125943 125944 125945 125946 125947 125948 125949 125950 125951 125952 125953 125954 125955 125956 125957 125958 125959 125960 125961 125962 125963 125964 125965 125966 125967 125968 125969 125970 125971 125972 125973 125974 125975 125976 125977 125978 125979 125980 125981 125982 125983 125984 125985 125986 125987 125988 125989 125990 125991 125992 125993 125994 125995 125996 125997 125998 125999 126000 126001 126002 126003 126004 126005 126006 126007 126008 126009 126010 126011 126012 126013 126014 126015 126016 126017 126018 126019 126020 126021 126022 126023> # SplitBus
mul in 2 <125855 125821> out 1 <126024>  # cond trueterm
const-mul-neg-1 in 1 <125855> out 1 <126025> # cond minuscond
add in 2 <100 126025> out 1 <126026>     # cond negcond
mul in 2 <126026 125811> out 1 <126027>  # cond falseterm
add in 2 <126024 126027> out 1 <126028>  # cond result
const-mul-ffffffff in 1 <126028> out 1 <126029> # multiply-by-constant 4294967295
add in 2 <126028 125806> out 1 <126030>  # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
split in 1 <126030> outplitBus
const-mul-2 in 1 <126062> out 1 <126266> # join source bit 31
add in 2 <126061 126266> out 1 <126267>  # join source bit 30
const-mul-2 in 1 <126267> out 1 <126268> # join
add in 2 <126060 126268> out 1 <126269>  # join source bit 29
const-mul-2 in 1 <126269> out 1 <126270> # join
add in 2 <126059 126270> out 1 <126271>  # join source bit 28
const-mul-2 in 1 <126271> out 1 <126272> # join
add in 2 <126058 126272> out 1 <126273>  # join source bit 27
const-mul-2 in 1 <126273> out 1 <126274> # join
add in 2 <126057 126274> out 1 <126275>  # join source bit 26
const-mul-2 in 1 <126275> out 1 <126276> # join
add in 2 <126056 126276> out 1 <126277>  # join source bit 25
const-mul-2 in 1 <126277> out 1 <126278> # join
add in 2 <126055 126278> out 1 <126279>  # join source bit 24
const-mul-2 in 1 <126279> out 1 <126280> # join
add in 2 <126054 126280> out 1 <126281>  # join source bit 23
const-mul-2 in 1 <126281> out 1 <126282> # join
add in 2 <126053 126282> out 1 <126283>  # join source bit 22
const-mul-2 in 1 <126283> out 1 <126284> # join
add in 2 <126052 126284> out 1 <126285>  # join source bit 21
const-mul-2 in 1 <126285> out 1 <126286> # join
add in 2 <126051 126286> out 1 <126287>  # join source bit 20
const-mul-2 in 1 <126287> out 1 <126288> # join
add in 2 <126050 126288> out 1 <126289>  # join source bit 19
const-mul-2 in 1 <126289> out 1 <126290> # join
add in 2 <126049 126290> out 1 <126291>  # join source bit 18
const-mul-2 in 1 <126291> out 1 <126292> # join
add in 2 <126048 126292> out 1 <126293>  # join source bit 17
const-mul-2 in 1 <126293> out 1 <126294> # join
add in 2 <126047 126294> out 1 <126295>  # join source bit 16
const-mul-2 in 1 <126295> out 1 <126296> # join
add in 2 <126046 126296> out 1 <126297>  # join source bit 15
const-mul-2 in 1 <126297> out 1 <126298> # join
add in 2 <126045 126298> out 1 <126299>  # join source bit 14
const-mul-2 in 1 <126299> out 1 <126300> # join
add in 2 <126044 126300> out 1 <126301>  # join source bit 13
const-mul-2 in 1 <126301> out 1 <126302> # join
add in 2 <126043 126302> out 1 <126303>  # join source bit 12
const-mul-2 in 1 <126303> out 1 <126304> # join
add in 2 <126042 126304> out 1 <126305>  # join source bit 11
const-mul-2 in 1 <126305> out 1 <126306> # join
add in 2 <126041 126306> out 1 <126307>  # join source bit 10
const-mul-2 in 1 <126307> out 1 <126308> # join
add in 2 <126040 126308> out 1 <126309>  # join source bit 9
const-mul-2 in 1 <126309> out 1 <126310> # join
add in 2 <126039 126310> out 1 <126311>  # join source bit 8
const-mul-2 in 1 <126311> out 1 <126312> # join
add in 2 <126038 126312> out 1 <126313>  # join source bit 7
const-mul-2 in 1 <126313> out 1 <126314> # join
add in 2 <126037 126314> out 1 <126315>  # join source bit 6
const-mul-2 in 1 <126315> out 1 <126316> # join
add in 2 <126036 126316> out 1 <126317>  # join source bit 5
const-mul-2 in 1 <126317> out 1 <126318> # join
add in 2 <126035 126318> out 1 <126319>  # join source bit 4
const-mul-2 in 1 <126319> out 1 <126320> # join
add in 2 <126034 126320> out 1 <126321>  # join source bit 3
const-mul-2 in 1 <126321> out 1 <126322> # join
add in 2 <126033 126322> out 1 <126323>  # join source bit 2
const-mul-2 in 1 <126323> out 1 <126324> # join
add in 2 <126032 126324> out 1 <126325>  # join source bit 1
const-mul-2 in 1 <126325> out 1 <126326> # join
add in 2 <126031 126326> out 1 <126327>  # join source bit 0
add in 2 <126327 126327> out 1 <126328>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <126328> out 1 <126329> # multiply-by-constant 4294967295
add in 2 <126030 126329> out 1 <126330>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <126028> out 1 <126331> # multiply-by-constant 4294967295
add in 2 <125806 126331> out 1 <126332>  # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <126332> outplitBus
mul in 2 <126364 126330> out 1 <126600>  # cond trueterm
const-mul-neg-1 in 1 <126364> out 1 <126601> # cond minuscond
add in 2 <100 126601> out 1 <126602>     # cond negcond
mul in 2 <126602 125806> out 1 <126603>  # cond falseterm
add in 2 <126600 126603> out 1 <126604>  # cond result
add in 2 <126604 104> out 1 <126605>     # ArithBusReq.AddReq(DFG.Conditional,DFG.Constant)
const-mul-ffffffff in 1 <40> out 1 <126606> # multiply-by-constant 4294967295
add in 2 <126605 126606> out 1 <126607>  # 'CmpLT DFG.Add - DFG.Input'
split in 1 <126607> outplitBus
mul in 2 <126639 103> out 1 <126846>     # cond trueterm
const-mul-neg-1 in 1 <126639> out 1 <126847> # cond minuscond
add in 2 <100 126847> out 1 <126848>     # cond negcond
mul in 2 <126848 102> out 1 <126849>     # cond falseterm
add in 2 <126846 126849> out 1 <126850>  # cond result
add in 2 <126604 3084> out 1 <126851>    # ArithBusReq.AddReq(DFG.Conditional,DFG.Negate)
const-mul-ffffffff in 1 <126851> out 1 <126852> # multiply-by-constant 4294967295
add in 2 <40 126852> out 1 <126853>      # 'CmpLT DFG.Input - DFG.Subtract'
split in 1 <126853> out 270 <126854 126855 126856 126857 126858 126859 126860 126861 126862 126863 126864 126865 126866 126867 126868 126869 126870 126871 126872 126873 126874 126875 126876 126877 126878 126879 126880 126881 126882 126883 126884 126885 126886 126887 126888 126889 126890 126891 126892 126893 126894 126895 126896 126897 126898 126899 126900 126901 126902 126903 126904 126905 126906 126907 126908 126909 126910 126911 126912 126913 126914 126915 126916 126917 126918 126919 126920 126921 126922 126923 126924 126925 126926 126927 126928 126929 126930 126931 126932 126933 126934 126935 126936 126937 126938 126939 126940 126941 126942 126943 126944 126945 126946 126947 126948 126949 126950 126951 126952 126953 126954 126955 126956 126957 126958 126959 126960 126961 126962 126963 126964 126965 126966 126967 126968 126969 126970 126971 126972 126973 126974 126975 126976 126977 126978 126979 126980 126981 126982 126983 126984 126985 126986 126987 126988 126989 126990 126991 126992 126993 126994 126995 126996 126997 126998 126999 127000 127001 127002 127003 127004 127005 127006 127007 127008 127009 127010 127011 127012 127013 127014 127015 127016 127017 127018 127019 127020 127021 127022 127023 127024 127025 127026 127027 127028 127029 127030 127031 127032 127033 127034 127035 127036 127037 127038 127039 127040 127041 127042 127043 127044 127045 127046 127047 127048 127049 127050 127051 127052 127053 127054 127055 127056 127057 127058 127059 127060 127061 127062 127063 127064 127065 127066 127067 127068 127069 127070 127071 127072 127073 127074 127075 127076 127077 127078 127079 127080 127081 127082 127083 127084 127085 127086 127087 127088 127089 127090 127091 127092 127093 127094 127095 127096 127097 127098 127099 127100 127101 127102 127103 127104 127105 127106 127107 127108 127109 127110 127111 127112 127113 127114 127115 127116 127117 127118 127119 127120 127121 127122 127123> # SplitBus
mul in 2 <126885 103> out 1 <127124>     # cond trueterm
const-mul-neg-1 in 1 <126885> out 1 <127125> # cond minuscond
add in 2 <100 127125> out 1 <127126>     # cond negcond
mul in 2 <127126 126850> out 1 <127127>  # cond falseterm
add in 2 <127124 127127> out 1 <127128>  # cond result
const-mul-ffffffff in 1 <39> out 1 <127129> # multiply-by-constant 4294967295
add in 2 <39 40> out 1 <127130>          # ArithBusReq.AddReq(DFG.Input,DFG.Input)
add in 2 <127130 127129> out 1 <127131>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <127131> out 1 <127132> # multiply-by-constant 4294967295
add in 2 <127130 127132> out 1 <127133>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <39> out 1 <127134> # multiply-by-constant 4294967295
add in 2 <40 127134> out 1 <127135>      # 'CmpLT DFG.Input - DFG.Input'
split in 1 <127135> out 65 <127136 127137 127138 127139 127140 127141 127142 127143 127144 127145 127146 127147 127148 127149 127150 127151 127152 127153 127154 127155 127156 127157 127158 127159 127160 127161 127162 127163 127164 127165 127166 127167 127168 127169 127170 127171 127172 127173 127174 127175 127176 127177 127178 127179 127180 127181 127182 127183 127184 127185 127186 127187 127188 127189 127190 127191 127192 127193 127194 127195 127196 127197 127198 127199 127200> # SplitBus
mul in 2 <127167 127133> out 1 <127201>  # cond trueterm
const-mul-neg-1 in 1 <127167> out 1 <127202> # cond minuscond
add in 2 <100 127202> out 1 <127203>     # cond negcond
mul in 2 <127203 40> out 1 <127204>      # cond falseterm
add in 2 <127201 127204> out 1 <127205>  # cond result
const-mul-ffffffff in 1 <127205> out 1 <127206> # multiply-by-constant 4294967295
add in 2 <127205 41> out 1 <127207>      # ArithBusReq.AddReq(DFG.Conditional,DFG.Input)
add in 2 <127207 127206> out 1 <127208>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <127208> out 1 <127209> # multiply-by-constant 4294967295
add in 2 <127207 127209> out 1 <127210>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <127205> out 1 <127211> # multiply-by-constant 4294967295
add in 2 <41 127211> out 1 <127212>      # 'CmpLT DFG.Input - DFG.Conditional'
split in 1 <127212> out 131 <127213 127214 127215 127216 127217 127218 127219 127220 127221 127222 127223 127224 127225 127226 127227 127228 127229 127230 127231 127232 127233 127234 127235 127236 127237 127238 127239 127240 127241 127242 127243 127244 127245 127246 127247 127248 127249 127250 127251 127252 127253 127254 127255 127256 127257 127258 127259 127260 127261 127262 127263 127264 127265 127266 127267 127268 127269 127270 127271 127272 127273 127274 127275 127276 127277 127278 127279 127280 127281 127282 127283 127284 127285 127286 127287 127288 127289 127290 127291 127292 127293 127294 127295 127296 127297 127298 127299 127300 127301 127302 127303 127304 127305 127306 127307 127308 127309 127310 127311 127312 127313 127314 127315 127316 127317 127318 127319 127320 127321 127322 127323 127324 127325 127326 127327 127328 127329 127330 127331 127332 127333 127334 127335 127336 127337 127338 127339 127340 127341 127342 127343> # SplitBus
mul in 2 <127244 127210> out 1 <127344>  # cond trueterm
const-mul-neg-1 in 1 <127244> out 1 <127345> # cond minuscond
add in 2 <100 127345> out 1 <127346>     # cond negcond
mul in 2 <127346 41> out 1 <127347>      # cond falseterm
add in 2 <127344 127347> out 1 <127348>  # cond result
const-mul-ffffffff in 1 <127348> out 1 <127349> # multiply-by-constant 4294967295
add in 2 <127348 42> out 1 <127350>      # ArithBusReq.AddReq(DFG.Conditional,DFG.Input)
add in 2 <127350 127349> out 1 <127351>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <127348> out 1 <127352> # multiply-by-constant 4294967295
add in 2 <42 127352> out 1 <127353>      # 'CmpLT DFG.Input - DFG.Conditional'
split in 1 <127353> out 197 <127354 127355 127356 127357 127358 127359 127360 127361 127362 127363 127364 127365 127366 127367 127368 127369 127370 127371 127372 127373 127374 127375 127376 127377 127378 127379 127380 127381 127382 127383 127384 127385 127386 127387 127388 127389 127390 127391 127392 127393 127394 127395 127396 127397 127398 127399 127400 127401 127402 127403 127404 127405 127406 127407 127408 127409 127410 127411 127412 127413 127414 127415 127416 127417 127418 127419 127420 127421 127422 127423 127424 127425 127426 127427 127428 127429 127430 127431 127432 127433 127434 127435 127436 127437 127438 127439 127440 127441 127442 127443 127444 127445 127446 127447 127448 127449 127450 127451 127452 127453 127454 127455 127456 127457 127458 127459 127460 127461 127462 127463 127464 127465 127466 127467 127468 127469 127470 127471 127472 127473 127474 127475 127476 127477 127478 127479 127480 127481 127482 127483 127484 127485 127486 127487 127488 127489 127490 127491 127492 127493 127494 127495 127496 127497 127498 127499 127500 127501 127502 127503 127504 127505 127506 127507 127508 127509 127510 127511 127512 127513 127514 127515 127516 127517 127518 127519 127520 127521 127522 127523 127524 127525 127526 127527 127528 127529 127530 127531 127532 127533 127534 127535 127536 127537 127538 127539 127540 127541 127542 127543 127544 127545 127546 127547 127548 127549 127550> # SplitBus
mul in 2 <127385 127351> out 1 <127551>  # cond trueterm
const-mul-neg-1 in 1 <127385> out 1 <127552> # cond minuscond
add in 2 <100 127552> out 1 <127553>     # cond negcond
mul in 2 <127553 127348> out 1 <127554>  # cond falseterm
add in 2 <127551 127554> out 1 <127555>  # cond result
mul in 2 <127244 127208> out 1 <127556>  # cond trueterm
const-mul-neg-1 in 1 <127244> out 1 <127557> # cond minuscond
add in 2 <100 127557> out 1 <127558>     # cond negcond
mul in 2 <127558 127205> out 1 <127559>  # cond falseterm
add in 2 <127556 127559> out 1 <127560>  # cond result
mul in 2 <127167 127131> out 1 <127561>  # cond trueterm
const-mul-neg-1 in 1 <127167> out 1 <127562> # cond minuscond
add in 2 <100 127562> out 1 <127563>     # cond negcond
mul in 2 <127563 39> out 1 <127564>      # cond falseterm
add in 2 <127561 127564> out 1 <127565>  # cond result
const-mul-ffffffff in 1 <127565> out 1 <127566> # multiply-by-constant 4294967295
add in 2 <127565 127560> out 1 <127567>  # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
add in 2 <127567 127566> out 1 <127568>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <127568> out 1 <127569> # multiply-by-constant 4294967295
add in 2 <127567 127569> out 1 <127570>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <127565> out 1 <127571> # multiply-by-constant 4294967295
add in 2 <127560 127571> out 1 <127572>  # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <127572> out 132 <127573 127574 127575 127576 127577 127578 127579 127580 127581 127582 127583 127584 127585 127586 127587 127588 127589 127590 127591 127592 127593 127594 127595 127596 127597 127598 127599 127600 127601 127602 127603 127604 127605 127606 127607 127608 127609 127610 127611 127612 127613 127614 127615 127616 127617 127618 127619 127620 127621 127622 127623 127624 127625 127626 127627 127628 127629 127630 127631 127632 127633 127634 127635 127636 127637 127638 127639 127640 127641 127642 127643 127644 127645 127646 127647 127648 127649 127650 127651 127652 127653 127654 127655 127656 127657 127658 127659 127660 127661 127662 127663 127664 127665 127666 127667 127668 127669 127670 127671 127672 127673 127674 127675 127676 127677 127678 127679 127680 127681 127682 127683 127684 127685 127686 127687 127688 127689 127690 127691 127692 127693 127694 127695 127696 127697 127698 127699 127700 127701 127702 127703 127704> # SplitBus
mul in 2 <127604 127570> out 1 <127705>  # cond trueterm
const-mul-neg-1 in 1 <127604> out 1 <127706> # cond minuscond
add in 2 <100 127706> out 1 <127707>     # cond negcond
mul in 2 <127707 127560> out 1 <127708>  # cond falseterm
add in 2 <127705 127708> out 1 <127709>  # cond result
const-mul-ffffffff in 1 <127709> out 1 <127710> # multiply-by-constant 4294967295
add in 2 <127709 127555> out 1 <127711>  # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
add in 2 <127711 127710> out 1 <127712>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <127712> out 1 <127713> # multiply-by-constant 4294967295
add in 2 <127711 127713> out 1 <127714>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <127709> out 1 <127715> # multiply-by-constant 4294967295
add in 2 <127555 127715> out 1 <127716>  # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <127716> out 199 <127717 127718 127719 127720 127721 127722 127723 127724 127725 127726 127727 127728 127729 127730 127731 127732 127733 127734 127735 127736 127737 127738 127739 127740 127741 127742 127743 127744 127745 127746 127747 127748 127749 127750 127751 127752 127753 127754 127755 127756 127757 127758 127759 127760 127761 127762 127763 127764 127765 127766 127767 127768 127769 127770 127771 127772 127773 127774 127775 127776 127777 127778 127779 127780 127781 127782 127783 127784 127785 127786 127787 127788 127789 127790 127791 127792 127793 127794 127795 127796 127797 127798 127799 127800 127801 127802 127803 127804 127805 127806 127807 127808 127809 127810 127811 127812 127813 127814 127815 127816 127817 127818 127819 127820 127821 127822 127823 127824 127825 127826 127827 127828 127829 127830 127831 127832 127833 127834 127835 127836 127837 127838 127839 127840 127841 127842 127843 127844 127845 127846 127847 127848 127849 127850 127851 127852 127853 127854 127855 127856 127857 127858 127859 127860 127861 127862 127863 127864 127865 127866 127867 127868 127869 127870 127871 127872 127873 127874 127875 127876 127877 127878 127879 127880 127881 127882 127883 127884 127885 127886 127887 127888 127889 127890 127891 127892 127893 127894 127895 127896 127897 127898 127899 127900 127901 127902 127903 127904 127905 127906 127907 127908 127909 127910 127911 127912 127913 127914 127915> # SplitBus
mul in 2 <127748 127714> out 1 <127916>  # cond trueterm
const-mul-neg-1 in 1 <127748> out 1 <127917> # cond minuscond
add in 2 <100 127917> out 1 <127918>     # cond negcond
mul in 2 <127918 127555> out 1 <127919>  # cond falseterm
add in 2 <127916 127919> out 1 <127920>  # cond result
const-mul-ffffffff in 1 <127920> out 1 <127921> # multiply-by-constant 4294967295
const-mul-ffffffff in 1 <127351> out 1 <127922> # multiply-by-constant 4294967295
add in 2 <127350 127922> out 1 <127923>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
mul in 2 <127385 127923> out 1 <127924>  # cond trueterm
const-mul-neg-1 in 1 <127385> out 1 <127925> # cond minuscond
add in 2 <100 127925> out 1 <127926>     # cond negcond
mul in 2 <127926 42> out 1 <127927>      # cond falseterm
add in 2 <127924 127927> out 1 <127928>  # cond result
const-mul-ffffffff in 1 <127928> out 1 <127929> # multiply-by-constant 4294967295
add in 2 <127928 43> out 1 <127930>      # ArithBusReq.AddReq(DFG.Conditional,DFG.Input)
split in 1 <127930> outplitBus
const-mul-2 in 1 <127962> out 1 <128162> # join source bit 31
add in 2 <127961 128162> out 1 <128163>  # join source bit 30
const-mul-2 in 1 <128163> out 1 <128164> # join
add in 2 <127960 128164> out 1 <128165>  # join source bit 29
const-mul-2 in 1 <128165> out 1 <128166> # join
add in 2 <127959 128166> out 1 <128167>  # join source bit 28
const-mul-2 in 1 <128167> out 1 <128168> # join
add in 2 <127958 128168> out 1 <128169>  # join source bit 27
const-mul-2 in 1 <128169> out 1 <128170> # join
add in 2 <127957 128170> out 1 <128171>  # join source bit 26
const-mul-2 in 1 <128171> out 1 <128172> # join
add in 2 <127956 128172> out 1 <128173>  # join source bit 25
const-mul-2 in 1 <128173> out 1 <128174> # join
add in 2 <127955 128174> out 1 <128175>  # join source bit 24
const-mul-2 in 1 <128175> out 1 <128176> # join
add in 2 <127954 128176> out 1 <128177>  # join source bit 23
const-mul-2 in 1 <128177> out 1 <128178> # join
add in 2 <127953 128178> out 1 <128179>  # join source bit 22
const-mul-2 in 1 <128179> out 1 <128180> # join
add in 2 <127952 128180> out 1 <128181>  # join source bit 21
const-mul-2 in 1 <128181> out 1 <128182> # join
add in 2 <127951 128182> out 1 <128183>  # join source bit 20
const-mul-2 in 1 <128183> out 1 <128184> # join
add in 2 <127950 128184> out 1 <128185>  # join source bit 19
const-mul-2 in 1 <128185> out 1 <128186> # join
add in 2 <127949 128186> out 1 <128187>  # join source bit 18
const-mul-2 in 1 <128187> out 1 <128188> # join
add in 2 <127948 128188> out 1 <128189>  # join source bit 17
const-mul-2 in 1 <128189> out 1 <128190> # join
add in 2 <127947 128190> out 1 <128191>  # join source bit 16
const-mul-2 in 1 <128191> out 1 <128192> # join
add in 2 <127946 128192> out 1 <128193>  # join source bit 15
const-mul-2 in 1 <128193> out 1 <128194> # join
add in 2 <127945 128194> out 1 <128195>  # join source bit 14
const-mul-2 in 1 <128195> out 1 <128196> # join
add in 2 <127944 128196> out 1 <128197>  # join source bit 13
const-mul-2 in 1 <128197> out 1 <128198> # join
add in 2 <127943 128198> out 1 <128199>  # join source bit 12
const-mul-2 in 1 <128199> out 1 <128200> # join
add in 2 <127942 128200> out 1 <128201>  # join source bit 11
const-mul-2 in 1 <128201> out 1 <128202> # join
add in 2 <127941 128202> out 1 <128203>  # join source bit 10
const-mul-2 in 1 <128203> out 1 <128204> # join
add in 2 <127940 128204> out 1 <128205>  # join source bit 9
const-mul-2 in 1 <128205> out 1 <128206> # join
add in 2 <127939 128206> out 1 <128207>  # join source bit 8
const-mul-2 in 1 <128207> out 1 <128208> # join
add in 2 <127938 128208> out 1 <128209>  # join source bit 7
const-mul-2 in 1 <128209> out 1 <128210> # join
add in 2 <127937 128210> out 1 <128211>  # join source bit 6
const-mul-2 in 1 <128211> out 1 <128212> # join
add in 2 <127936 128212> out 1 <128213>  # join source bit 5
const-mul-2 in 1 <128213> out 1 <128214> # join
add in 2 <127935 128214> out 1 <128215>  # join source bit 4
const-mul-2 in 1 <128215> out 1 <128216> # join
add in 2 <127934 128216> out 1 <128217>  # join source bit 3
const-mul-2 in 1 <128217> out 1 <128218> # join
add in 2 <127933 128218> out 1 <128219>  # join source bit 2
const-mul-2 in 1 <128219> out 1 <128220> # join
add in 2 <127932 128220> out 1 <128221>  # join source bit 1
const-mul-2 in 1 <128221> out 1 <128222> # join
add in 2 <127931 128222> out 1 <128223>  # join source bit 0
add in 2 <128223 128223> out 1 <128224>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <127928> out 1 <128225> # multiply-by-constant 4294967295
add in 2 <43 128225> out 1 <128226>      # 'CmpLT DFG.Input - DFG.Conditional'
split in 1 <128226> outplitBus
mul in 2 <128258 128224> out 1 <128490>  # cond trueterm
const-mul-neg-1 in 1 <128258> out 1 <128491> # cond minuscond
add in 2 <100 128491> out 1 <128492>     # cond negcond
mul in 2 <128492 127928> out 1 <128493>  # cond falseterm
add in 2 <128490 128493> out 1 <128494>  # cond result
add in 2 <127920 128494> out 1 <128495>  # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
split in 1 <128495> outplitBus
const-mul-2 in 1 <128527> out 1 <128729> # join source bit 31
add in 2 <128526 128729> out 1 <128730>  # join source bit 30
const-mul-2 in 1 <128730> out 1 <128731> # join
add in 2 <128525 128731> out 1 <128732>  # join source bit 29
const-mul-2 in 1 <128732> out 1 <128733> # join
add in 2 <128524 128733> out 1 <128734>  # join source bit 28
const-mul-2 in 1 <128734> out 1 <128735> # join
add in 2 <128523 128735> out 1 <128736>  # join source bit 27
const-mul-2 in 1 <128736> out 1 <128737> # join
add in 2 <128522 128737> out 1 <128738>  # join source bit 26
const-mul-2 in 1 <128738> out 1 <128739> # join
add in 2 <128521 128739> out 1 <128740>  # join source bit 25
const-mul-2 in 1 <128740> out 1 <128741> # join
add in 2 <128520 128741> out 1 <128742>  # join source bit 24
const-mul-2 in 1 <128742> out 1 <128743> # join
add in 2 <128519 128743> out 1 <128744>  # join source bit 23
const-mul-2 in 1 <128744> out 1 <128745> # join
add in 2 <128518 128745> out 1 <128746>  # join source bit 22
const-mul-2 in 1 <128746> out 1 <128747> # join
add in 2 <128517 128747> out 1 <128748>  # join source bit 21
const-mul-2 in 1 <128748> out 1 <128749> # join
add in 2 <128516 128749> out 1 <128750>  # join source bit 20
const-mul-2 in 1 <128750> out 1 <128751> # join
add in 2 <128515 128751> out 1 <128752>  # join source bit 19
const-mul-2 in 1 <128752> out 1 <128753> # join
add in 2 <128514 128753> out 1 <128754>  # join source bit 18
const-mul-2 in 1 <128754> out 1 <128755> # join
add in 2 <128513 128755> out 1 <128756>  # join source bit 17
const-mul-2 in 1 <128756> out 1 <128757> # join
add in 2 <128512 128757> out 1 <128758>  # join source bit 16
const-mul-2 in 1 <128758> out 1 <128759> # join
add in 2 <128511 128759> out 1 <128760>  # join source bit 15
const-mul-2 in 1 <128760> out 1 <128761> # join
add in 2 <128510 128761> out 1 <128762>  # join source bit 14
const-mul-2 in 1 <128762> out 1 <128763> # join
add in 2 <128509 128763> out 1 <128764>  # join source bit 13
const-mul-2 in 1 <128764> out 1 <128765> # join
add in 2 <128508 128765> out 1 <128766>  # join source bit 12
const-mul-2 in 1 <128766> out 1 <128767> # join
add in 2 <128507 128767> out 1 <128768>  # join source bit 11
const-mul-2 in 1 <128768> out 1 <128769> # join
add in 2 <128506 128769> out 1 <128770>  # join source bit 10
const-mul-2 in 1 <128770> out 1 <128771> # join
add in 2 <128505 128771> out 1 <128772>  # join source bit 9
const-mul-2 in 1 <128772> out 1 <128773> # join
add in 2 <128504 128773> out 1 <128774>  # join source bit 8
const-mul-2 in 1 <128774> out 1 <128775> # join
add in 2 <128503 128775> out 1 <128776>  # join source bit 7
const-mul-2 in 1 <128776> out 1 <128777> # join
add in 2 <128502 128777> out 1 <128778>  # join source bit 6
const-mul-2 in 1 <128778> out 1 <128779> # join
add in 2 <128501 128779> out 1 <128780>  # join source bit 5
const-mul-2 in 1 <128780> out 1 <128781> # join
add in 2 <128500 128781> out 1 <128782>  # join source bit 4
const-mul-2 in 1 <128782> out 1 <128783> # join
add in 2 <128499 128783> out 1 <128784>  # join source bit 3
const-mul-2 in 1 <128784> out 1 <128785> # join
add in 2 <128498 128785> out 1 <128786>  # join source bit 2
const-mul-2 in 1 <128786> out 1 <128787> # join
add in 2 <128497 128787> out 1 <128788>  # join source bit 1
const-mul-2 in 1 <128788> out 1 <128789> # join
add in 2 <128496 128789> out 1 <128790>  # join source bit 0
add in 2 <128790 128790> out 1 <128791>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <127920> out 1 <128792> # multiply-by-constant 4294967295
add in 2 <128494 128792> out 1 <128793>  # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <128793> outplitBus
mul in 2 <128825 128791> out 1 <129059>  # cond trueterm
const-mul-neg-1 in 1 <128825> out 1 <129060> # cond minuscond
add in 2 <100 129060> out 1 <129061>     # cond negcond
mul in 2 <129061 127920> out 1 <129062>  # cond falseterm
add in 2 <129059 129062> out 1 <129063>  # cond result
mul in 2 <127748 127712> out 1 <129064>  # cond trueterm
const-mul-neg-1 in 1 <127748> out 1 <129065> # cond minuscond
add in 2 <100 129065> out 1 <129066>     # cond negcond
mul in 2 <129066 127709> out 1 <129067>  # cond falseterm
add in 2 <129064 129067> out 1 <129068>  # cond result
mul in 2 <127604 127568> out 1 <129069>  # cond trueterm
const-mul-neg-1 in 1 <127604> out 1 <129070> # cond minuscond
add in 2 <100 129070> out 1 <129071>     # cond negcond
mul in 2 <129071 127565> out 1 <129072>  # cond falseterm
add in 2 <129069 129072> out 1 <129073>  # cond result
const-mul-ffffffff in 1 <129073> out 1 <129074> # multiply-by-constant 4294967295
add in 2 <129073 129068> out 1 <129075>  # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
add in 2 <129075 129074> out 1 <129076>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <129076> out 1 <129077> # multiply-by-constant 4294967295
add in 2 <129075 129077> out 1 <129078>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <129073> out 1 <129079> # multiply-by-constant 4294967295
add in 2 <129068 129079> out 1 <129080>  # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <129080> out 200 <129081 129082 129083 129084 129085 129086 129087 129088 129089 129090 129091 129092 129093 129094 129095 129096 129097 129098 129099 129100 129101 129102 129103 129104 129105 129106 129107 129108 129109 129110 129111 129112 129113 129114 129115 129116 129117 129118 129119 129120 129121 129122 129123 129124 129125 129126 129127 129128 129129 129130 129131 129132 129133 129134 129135 129136 129137 129138 129139 129140 129141 129142 129143 129144 129145 129146 129147 129148 129149 129150 129151 129152 129153 129154 129155 129156 129157 129158 129159 129160 129161 129162 129163 129164 129165 129166 129167 129168 129169 129170 129171 129172 129173 129174 129175 129176 129177 129178 129179 129180 129181 129182 129183 129184 129185 129186 129187 129188 129189 129190 129191 129192 129193 129194 129195 129196 129197 129198 129199 129200 129201 129202 129203 129204 129205 129206 129207 129208 129209 129210 129211 129212 129213 129214 129215 129216 129217 129218 129219 129220 129221 129222 129223 129224 129225 129226 129227 129228 129229 129230 129231 129232 129233 129234 129235 129236 129237 129238 129239 129240 129241 129242 129243 129244 129245 129246 129247 129248 129249 129250 129251 129252 129253 129254 129255 129256 129257 129258 129259 129260 129261 129262 129263 129264 129265 129266 129267 129268 129269 129270 129271 129272 129273 129274 129275 129276 129277 129278 129279 129280> # SplitBus
mul in 2 <129112 129078> out 1 <129281>  # cond trueterm
const-mul-neg-1 in 1 <129112> out 1 <129282> # cond minuscond
add in 2 <100 129282> out 1 <129283>     # cond negcond
mul in 2 <129283 129068> out 1 <129284>  # cond falseterm
add in 2 <129281 129284> out 1 <129285>  # cond result
const-mul-ffffffff in 1 <129285> out 1 <129286> # multiply-by-constant 4294967295
add in 2 <129285 129063> out 1 <129287>  # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
split in 1 <129287> out 235 <129288 129289 129290 129291 129292 129293 129294 129295 129296 129297 129298 129299 129300 129301 129302 129303 129304 129305 129306 129307 129308 129309 129310 129311 129312 129313 129314 129315 129316 129317 129318 129319 129320 129321 129322 129323 129324 129325 129326 129327 129328 129329 129330 129331 129332 129333 129334 129335 129336 129337 129338 129339 129340 129341 129342 129343 129344 129345 129346 129347 129348 129349 129350 129351 129352 129353 129354 129355 129356 129357 129358 129359 129360 129361 129362 129363 129364 129365 129366 129367 129368 129369 129370 129371 129372 129373 129374 129375 129376 129377 129378 129379 129380 129381 129382 129383 129384 129385 129386 129387 129388 129389 129390 129391 129392 129393 129394 129395 129396 129397 129398 129399 129400 129401 129402 129403 129404 129405 129406 129407 129408 129409 129410 129411 129412 129413 129414 129415 129416 129417 129418 129419 129420 129421 129422 129423 129424 129425 129426 129427 129428 129429 129430 129431 129432 129433 129434 129435 129436 129437 129438 129439 129440 129441 129442 129443 129444 129445 129446 129447 129448 129449 129450 129451 129452 129453 129454 129455 129456 129457 129458 129459 129460 129461 129462 129463 129464 129465 129466 129467 129468 129469 129470 129471 129472 129473 129474 129475 129476 129477 129478 129479 129480 129481 129482 129483 129484 129485 129486 129487 129488 129489 129490 129491 129492 129493 129494 129495 129496 129497 129498 129499 129500 129501 129502 129503 129504 129505 129506 129507 129508 129509 129510 129511 129512 129513 129514 129515 129516 129517 129518 129519 129520 129521 129522> # SplitBus
const-mul-2 in 1 <129319> out 1 <129523> # join source bit 31
add in 2 <129318 129523> out 1 <129524>  # join source bit 30
const-mul-2 in 1 <129524> out 1 <129525> # join
add in 2 <129317 129525> out 1 <129526>  # join source bit 29
const-mul-2 in 1 <129526> out 1 <129527> # join
add in 2 <129316 129527> out 1 <129528>  # join source bit 28
const-mul-2 in 1 <129528> out 1 <129529> # join
add in 2 <129315 129529> out 1 <129530>  # join source bit 27
const-mul-2 in 1 <129530> out 1 <129531> # join
add in 2 <129314 129531> out 1 <129532>  # join source bit 26
const-mul-2 in 1 <129532> out 1 <129533> # join
add in 2 <129313 129533> out 1 <129534>  # join source bit 25
const-mul-2 in 1 <129534> out 1 <129535> # join
add in 2 <129312 129535> out 1 <129536>  # join source bit 24
const-mul-2 in 1 <129536> out 1 <129537> # join
add in 2 <129311 129537> out 1 <129538>  # join source bit 23
const-mul-2 in 1 <129538> out 1 <129539> # join
add in 2 <129310 129539> out 1 <129540>  # join source bit 22
const-mul-2 in 1 <129540> out 1 <129541> # join
add in 2 <129309 129541> out 1 <129542>  # join source bit 21
const-mul-2 in 1 <129542> out 1 <129543> # join
add in 2 <129308 129543> out 1 <129544>  # join source bit 20
const-mul-2 in 1 <129544> out 1 <129545> # join
add in 2 <129307 129545> out 1 <129546>  # join source bit 19
const-mul-2 in 1 <129546> out 1 <129547> # join
add in 2 <129306 129547> out 1 <129548>  # join source bit 18
const-mul-2 in 1 <129548> out 1 <129549> # join
add in 2 <129305 129549> out 1 <129550>  # join source bit 17
const-mul-2 in 1 <129550> out 1 <129551> # join
add in 2 <129304 129551> out 1 <129552>  # join source bit 16
const-mul-2 in 1 <129552> out 1 <129553> # join
add in 2 <129303 129553> out 1 <129554>  # join source bit 15
const-mul-2 in 1 <129554> out 1 <129555> # join
add in 2 <129302 129555> out 1 <129556>  # join source bit 14
const-mul-2 in 1 <129556> out 1 <129557> # join
add in 2 <129301 129557> out 1 <129558>  # join source bit 13
const-mul-2 in 1 <129558> out 1 <129559> # join
add in 2 <129300 129559> out 1 <129560>  # join source bit 12
const-mul-2 in 1 <129560> out 1 <129561> # join
add in 2 <129299 129561> out 1 <129562>  # join source bit 11
const-mul-2 in 1 <129562> out 1 <129563> # join
add in 2 <129298 129563> out 1 <129564>  # join source bit 10
const-mul-2 in 1 <129564> out 1 <129565> # join
add in 2 <129297 129565> out 1 <129566>  # join source bit 9
const-mul-2 in 1 <129566> out 1 <129567> # join
add in 2 <129296 129567> out 1 <129568>  # join source bit 8
const-mul-2 in 1 <129568> out 1 <129569> # join
add in 2 <129295 129569> out 1 <129570>  # join source bit 7
const-mul-2 in 1 <129570> out 1 <129571> # join
add in 2 <129294 129571> out 1 <129572>  # join source bit 6
const-mul-2 in 1 <129572> out 1 <129573> # join
add in 2 <129293 129573> out 1 <129574>  # join source bit 5
const-mul-2 in 1 <129574> out 1 <129575> # join
add in 2 <129292 129575> out 1 <129576>  # join source bit 4
const-mul-2 in 1 <129576> out 1 <129577> # join
add in 2 <129291 129577> out 1 <129578>  # join source bit 3
const-mul-2 in 1 <129578> out 1 <129579> # join
add in 2 <129290 129579> out 1 <129580>  # join source bit 2
const-mul-2 in 1 <129580> out 1 <129581> # join
add in 2 <129289 129581> out 1 <129582>  # join source bit 1
const-mul-2 in 1 <129582> out 1 <129583> # join
add in 2 <129288 129583> out 1 <129584>  # join source bit 0
add in 2 <129584 129584> out 1 <129585>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <129585> out 1 <129586> # multiply-by-constant 4294967295
add in 2 <129287 129586> out 1 <129587>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <129285> out 1 <129588> # multiply-by-constant 4294967295
add in 2 <129063 129588> out 1 <129589>  # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <129589> out 267 <129590 129591 129592 129593 129594 129595 129596 129597 129598 129599 129600 129601 129602 129603 129604 129605 129606 129607 129608 129609 129610 129611 129612 129613 129614 129615 129616 129617 129618 129619 129620 129621 129622 129623 129624 129625 129626 129627 129628 129629 129630 129631 129632 129633 129634 129635 129636 129637 129638 129639 129640 129641 129642 129643 129644 129645 129646 129647 129648 129649 129650 129651 129652 129653 129654 129655 129656 129657 129658 129659 129660 129661 129662 129663 129664 129665 129666 129667 129668 129669 129670 129671 129672 129673 129674 129675 129676 129677 129678 129679 129680 129681 129682 129683 129684 129685 129686 129687 129688 129689 129690 129691 129692 129693 129694 129695 129696 129697 129698 129699 129700 129701 129702 129703 129704 129705 129706 129707 129708 129709 129710 129711 129712 129713 129714 129715 129716 129717 129718 129719 129720 129721 129722 129723 129724 129725 129726 129727 129728 129729 129730 129731 129732 129733 129734 129735 129736 129737 129738 129739 129740 129741 129742 129743 129744 129745 129746 129747 129748 129749 129750 129751 129752 129753 129754 129755 129756 129757 129758 129759 129760 129761 129762 129763 129764 129765 129766 129767 129768 129769 129770 129771 129772 129773 129774 129775 129776 129777 129778 129779 129780 129781 129782 129783 129784 129785 129786 129787 129788 129789 129790 129791 129792 129793 129794 129795 129796 129797 129798 129799 129800 129801 129802 129803 129804 129805 129806 129807 129808 129809 129810 129811 129812 129813 129814 129815 129816 129817 129818 129819 129820 129821 129822 129823 129824 129825 129826 129827 129828 129829 129830 129831 129832 129833 129834 129835 129836 129837 129838 129839 129840 129841 129842 129843 129844 129845 129846 129847 129848 129849 129850 129851 129852 129853 129854 129855 129856> # SplitBus
mul in 2 <129621 129587> out 1 <129857>  # cond trueterm
const-mul-neg-1 in 1 <129621> out 1 <129858> # cond minuscond
add in 2 <100 129858> out 1 <129859>     # cond negcond
mul in 2 <129859 129063> out 1 <129860>  # cond falseterm
add in 2 <129857 129860> out 1 <129861>  # cond result
add in 2 <129861 104> out 1 <129862>     # ArithBusReq.AddReq(DFG.Conditional,DFG.Constant)
const-mul-ffffffff in 1 <41> out 1 <129863> # multiply-by-constant 4294967295
add in 2 <129862 129863> out 1 <129864>  # 'CmpLT DFG.Add - DFG.Input'
split in 1 <129864> out 238 <129865 129866 129867 129868 129869 129870 129871 129872 129873 129874 129875 129876 129877 129878 129879 129880 129881 129882 129883 129884 129885 129886 129887 129888 129889 129890 129891 129892 129893 129894 129895 129896 129897 129898 129899 129900 129901 129902 129903 129904 129905 129906 129907 129908 129909 129910 129911 129912 129913 129914 129915 129916 129917 129918 129919 129920 129921 129922 129923 129924 129925 129926 129927 129928 129929 129930 129931 129932 129933 129934 129935 129936 129937 129938 129939 129940 129941 129942 129943 129944 129945 129946 129947 129948 129949 129950 129951 129952 129953 129954 129955 129956 129957 129958 129959 129960 129961 129962 129963 129964 129965 129966 129967 129968 129969 129970 129971 129972 129973 129974 129975 129976 129977 129978 129979 129980 129981 129982 129983 129984 129985 129986 129987 129988 129989 129990 129991 129992 129993 129994 129995 129996 129997 129998 129999 130000 130001 130002 130003 130004 130005 130006 130007 130008 130009 130010 130011 130012 130013 130014 130015 130016 130017 130018 130019 130020 130021 130022 130023 130024 130025 130026 130027 130028 130029 130030 130031 130032 130033 130034 130035 130036 130037 130038 130039 130040 130041 130042 130043 130044 130045 130046 130047 130048 130049 130050 130051 130052 130053 130054 130055 130056 130057 130058 130059 130060 130061 130062 130063 130064 130065 130066 130067 130068 130069 130070 130071 130072 130073 130074 130075 130076 130077 130078 130079 130080 130081 130082 130083 130084 130085 130086 130087 130088 130089 130090 130091 130092 130093 130094 130095 130096 130097 130098 130099 130100 130101 130102> # SplitBus
mul in 2 <129896 103> out 1 <130103>     # cond trueterm
const-mul-neg-1 in 1 <129896> out 1 <130104> # cond minuscond
add in 2 <100 130104> out 1 <130105>     # cond negcond
mul in 2 <130105 102> out 1 <130106>     # cond falseterm
add in 2 <130103 130106> out 1 <130107>  # cond result
add in 2 <129861 3084> out 1 <130108>    # ArithBusReq.AddReq(DFG.Conditional,DFG.Negate)
const-mul-ffffffff in 1 <130108> out 1 <130109> # multiply-by-constant 4294967295
add in 2 <41 130109> out 1 <130110>      # 'CmpLT DFG.Input - DFG.Subtract'
split in 1 <130110> outplitBus
mul in 2 <130142 103> out 1 <130381>     # cond trueterm
const-mul-neg-1 in 1 <130142> out 1 <130382> # cond minuscond
add in 2 <100 130382> out 1 <130383>     # cond negcond
mul in 2 <130383 130107> out 1 <130384>  # cond falseterm
add in 2 <130381 130384> out 1 <130385>  # cond result
const-mul-ffffffff in 1 <40> out 1 <130386> # multiply-by-constant 4294967295
add in 2 <40 41> out 1 <130387>          # ArithBusReq.AddReq(DFG.Input,DFG.Input)
add in 2 <130387 130386> out 1 <130388>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <130388> out 1 <130389> # multiply-by-constant 4294967295
add in 2 <130387 130389> out 1 <130390>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <40> out 1 <130391> # multiply-by-constant 4294967295
add in 2 <41 130391> out 1 <130392>      # 'CmpLT DFG.Input - DFG.Input'
split in 1 <130392> out 65 <130393 130394 130395 130396 130397 130398 130399 130400 130401 130402 130403 130404 130405 130406 130407 130408 130409 130410 130411 130412 130413 130414 130415 130416 130417 130418 130419 130420 130421 130422 130423 130424 130425 130426 130427 130428 130429 130430 130431 130432 130433 130434 130435 130436 130437 130438 130439 130440 130441 130442 130443 130444 130445 130446 130447 130448 130449 130450 130451 130452 130453 130454 130455 130456 130457> # SplitBus
mul in 2 <130424 130390> out 1 <130458>  # cond trueterm
const-mul-neg-1 in 1 <130424> out 1 <130459> # cond minuscond
add in 2 <100 130459> out 1 <130460>     # cond negcond
mul in 2 <130460 41> out 1 <130461>      # cond falseterm
add in 2 <130458 130461> out 1 <130462>  # cond result
const-mul-ffffffff in 1 <130462> out 1 <130463> # multiply-by-constant 4294967295
add in 2 <130462 42> out 1 <130464>      # ArithBusReq.AddReq(DFG.Conditional,DFG.Input)
add in 2 <130464 130463> out 1 <130465>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <130465> out 1 <130466> # multiply-by-constant 4294967295
add in 2 <130464 130466> out 1 <130467>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <130462> out 1 <130468> # multiply-by-constant 4294967295
add in 2 <42 130468> out 1 <130469>      # 'CmpLT DFG.Input - DFG.Conditional'
split in 1 <130469> out 131 <130470 130471 130472 130473 130474 130475 130476 130477 130478 130479 130480 130481 130482 130483 130484 130485 130486 130487 130488 130489 130490 130491 130492 130493 130494 130495 130496 130497 130498 130499 130500 130501 130502 130503 130504 130505 130506 130507 130508 130509 130510 130511 130512 130513 130514 130515 130516 130517 130518 130519 130520 130521 130522 130523 130524 130525 130526 130527 130528 130529 130530 130531 130532 130533 130534 130535 130536 130537 130538 130539 130540 130541 130542 130543 130544 130545 130546 130547 130548 130549 130550 130551 130552 130553 130554 130555 130556 130557 130558 130559 130560 130561 130562 130563 130564 130565 130566 130567 130568 130569 130570 130571 130572 130573 130574 130575 130576 130577 130578 130579 130580 130581 130582 130583 130584 130585 130586 130587 130588 130589 130590 130591 130592 130593 130594 130595 130596 130597 130598 130599 130600> # SplitBus
mul in 2 <130501 130467> out 1 <130601>  # cond trueterm
const-mul-neg-1 in 1 <130501> out 1 <130602> # cond minuscond
add in 2 <100 130602> out 1 <130603>     # cond negcond
mul in 2 <130603 42> out 1 <130604>      # cond falseterm
add in 2 <130601 130604> out 1 <130605>  # cond result
const-mul-ffffffff in 1 <130605> out 1 <130606> # multiply-by-constant 4294967295
add in 2 <130605 43> out 1 <130607>      # ArithBusReq.AddReq(DFG.Conditional,DFG.Input)
add in 2 <130607 130606> out 1 <130608>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <130605> out 1 <130609> # multiply-by-constant 4294967295
add in 2 <43 130609> out 1 <130610>      # 'CmpLT DFG.Input - DFG.Conditional'
split in 1 <130610> out 197 <130611 130612 130613 130614 130615 130616 130617 130618 130619 130620 130621 130622 130623 130624 130625 130626 130627 130628 130629 130630 130631 130632 130633 130634 130635 130636 130637 130638 130639 130640 130641 130642 130643 130644 130645 130646 130647 130648 130649 130650 130651 130652 130653 130654 130655 130656 130657 130658 130659 130660 130661 130662 130663 130664 130665 130666 130667 130668 130669 130670 130671 130672 130673 130674 130675 130676 130677 130678 130679 130680 130681 130682 130683 130684 130685 130686 130687 130688 130689 130690 130691 130692 130693 130694 130695 130696 130697 130698 130699 130700 130701 130702 130703 130704 130705 130706 130707 130708 130709 130710 130711 130712 130713 130714 130715 130716 130717 130718 130719 130720 130721 130722 130723 130724 130725 130726 130727 130728 130729 130730 130731 130732 130733 130734 130735 130736 130737 130738 130739 130740 130741 130742 130743 130744 130745 130746 130747 130748 130749 130750 130751 130752 130753 130754 130755 130756 130757 130758 130759 130760 130761 130762 130763 130764 130765 130766 130767 130768 130769 130770 130771 130772 130773 130774 130775 130776 130777 130778 130779 130780 130781 130782 130783 130784 130785 130786 130787 130788 130789 130790 130791 130792 130793 130794 130795 130796 130797 130798 130799 130800 130801 130802 130803 130804 130805 130806 130807> # SplitBus
mul in 2 <130642 130608> out 1 <130808>  # cond trueterm
const-mul-neg-1 in 1 <130642> out 1 <130809> # cond minuscond
add in 2 <100 130809> out 1 <130810>     # cond negcond
mul in 2 <130810 130605> out 1 <130811>  # cond falseterm
add in 2 <130808 130811> out 1 <130812>  # cond result
mul in 2 <130501 130465> out 1 <130813>  # cond trueterm
const-mul-neg-1 in 1 <130501> out 1 <130814> # cond minuscond
add in 2 <100 130814> out 1 <130815>     # cond negcond
mul in 2 <130815 130462> out 1 <130816>  # cond falseterm
add in 2 <130813 130816> out 1 <130817>  # cond result
mul in 2 <130424 130388> out 1 <130818>  # cond trueterm
const-mul-neg-1 in 1 <130424> out 1 <130819> # cond minuscond
add in 2 <100 130819> out 1 <130820>     # cond negcond
mul in 2 <130820 40> out 1 <130821>      # cond falseterm
add in 2 <130818 130821> out 1 <130822>  # cond result
const-mul-ffffffff in 1 <130822> out 1 <130823> # multiply-by-constant 4294967295
add in 2 <130822 130817> out 1 <130824>  # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
add in 2 <130824 130823> out 1 <130825>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <130825> out 1 <130826> # multiply-by-constant 4294967295
add in 2 <130824 130826> out 1 <130827>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <130822> out 1 <130828> # multiply-by-constant 4294967295
add in 2 <130817 130828> out 1 <130829>  # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <130829> out 132 <130830 130831 130832 130833 130834 130835 130836 130837 130838 130839 130840 130841 130842 130843 130844 130845 130846 130847 130848 130849 130850 130851 130852 130853 130854 130855 130856 130857 130858 130859 130860 130861 130862 130863 130864 130865 130866 130867 130868 130869 130870 130871 130872 130873 130874 130875 130876 130877 130878 130879 130880 130881 130882 130883 130884 130885 130886 130887 130888 130889 130890 130891 130892 130893 130894 130895 130896 130897 130898 130899 130900 130901 130902 130903 130904 130905 130906 130907 130908 130909 130910 130911 130912 130913 130914 130915 130916 130917 130918 130919 130920 130921 130922 130923 130924 130925 130926 130927 130928 130929 130930 130931 130932 130933 130934 130935 130936 130937 130938 130939 130940 130941 130942 130943 130944 130945 130946 130947 130948 130949 130950 130951 130952 130953 130954 130955 130956 130957 130958 130959 130960 130961> # SplitBus
mul in 2 <130861 130827> out 1 <130962>  # cond trueterm
const-mul-neg-1 in 1 <130861> out 1 <130963> # cond minuscond
add in 2 <100 130963> out 1 <130964>     # cond negcond
mul in 2 <130964 130817> out 1 <130965>  # cond falseterm
add in 2 <130962 130965> out 1 <130966>  # cond result
const-mul-ffffffff in 1 <130966> out 1 <130967> # multiply-by-constant 4294967295
add in 2 <130966 130812> out 1 <130968>  # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
add in 2 <130968 130967> out 1 <130969>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <130969> out 1 <130970> # multiply-by-constant 4294967295
add in 2 <130968 130970> out 1 <130971>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <130966> out 1 <130972> # multiply-by-constant 4294967295
add in 2 <130812 130972> out 1 <130973>  # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <130973> out 199 <130974 130975 130976 130977 130978 130979 130980 130981 130982 130983 130984 130985 130986 130987 130988 130989 130990 130991 130992 130993 130994 130995 130996 130997 130998 130999 131000 131001 131002 131003 131004 131005 131006 131007 131008 131009 131010 131011 131012 131013 131014 131015 131016 131017 131018 131019 131020 131021 131022 131023 131024 131025 131026 131027 131028 131029 131030 131031 131032 131033 131034 131035 131036 131037 131038 131039 131040 131041 131042 131043 131044 131045 131046 131047 131048 131049 131050 131051 131052 131053 131054 131055 131056 131057 131058 131059 131060 131061 131062 131063 131064 131065 131066 131067 131068 131069 131070 131071 131072 131073 131074 131075 131076 131077 131078 131079 131080 131081 131082 131083 131084 131085 131086 131087 131088 131089 131090 131091 131092 131093 131094 131095 131096 131097 131098 131099 131100 131101 131102 131103 131104 131105 131106 131107 131108 131109 131110 131111 131112 131113 131114 131115 131116 131117 131118 131119 131120 131121 131122 131123 131124 131125 131126 131127 131128 131129 131130 131131 131132 131133 131134 131135 131136 131137 131138 131139 131140 131141 131142 131143 131144 131145 131146 131147 131148 131149 131150 131151 131152 131153 131154 131155 131156 131157 131158 131159 131160 131161 131162 131163 131164 131165 131166 131167 131168 131169 131170 131171 131172> # SplitBus
mul in 2 <131005 130971> out 1 <131173>  # cond trueterm
const-mul-neg-1 in 1 <131005> out 1 <131174> # cond minuscond
add in 2 <100 131174> out 1 <131175>     # cond negcond
mul in 2 <131175 130812> out 1 <131176>  # cond falseterm
add in 2 <131173 131176> out 1 <131177>  # cond result
const-mul-ffffffff in 1 <131177> out 1 <131178> # multiply-by-constant 4294967295
const-mul-ffffffff in 1 <130608> out 1 <131179> # multiply-by-constant 4294967295
add in 2 <130607 131179> out 1 <131180>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
mul in 2 <130642 131180> out 1 <131181>  # cond trueterm
const-mul-neg-1 in 1 <130642> out 1 <131182> # cond minuscond
add in 2 <100 131182> out 1 <131183>     # cond negcond
mul in 2 <131183 43> out 1 <131184>      # cond falseterm
add in 2 <131181 131184> out 1 <131185>  # cond result
const-mul-ffffffff in 1 <131185> out 1 <131186> # multiply-by-constant 4294967295
add in 2 <131185 44> out 1 <131187>      # ArithBusReq.AddReq(DFG.Conditional,DFG.Input)
split in 1 <131187> out 231 <131188 131189 131190 131191 131192 131193 131194 131195 131196 131197 131198 131199 131200 131201 131202 131203 131204 131205 131206 131207 131208 131209 131210 131211 131212 131213 131214 131215 131216 131217 131218 131219 131220 131221 131222 131223 131224 131225 131226 131227 131228 131229 131230 131231 131232 131233 131234 131235 131236 131237 131238 131239 131240 131241 131242 131243 131244 131245 131246 131247 131248 131249 131250 131251 131252 131253 131254 131255 131256 131257 131258 131259 131260 131261 131262 131263 131264 131265 131266 131267 131268 131269 131270 131271 131272 131273 131274 131275 131276 131277 131278 131279 131280 131281 131282 131283 131284 131285 131286 131287 131288 131289 131290 131291 131292 131293 131294 131295 131296 131297 131298 131299 131300 131301 131302 131303 131304 131305 131306 131307 131308 131309 131310 131311 131312 131313 131314 131315 131316 131317 131318 131319 131320 131321 131322 131323 131324 131325 131326 131327 131328 131329 131330 131331 131332 131333 131334 131335 131336 131337 131338 131339 131340 131341 131342 131343 131344 131345 131346 131347 131348 131349 131350 131351 131352 131353 131354 131355 131356 131357 131358 131359 131360 131361 131362 131363 131364 131365 131366 131367 131368 131369 131370 131371 131372 131373 131374 131375 131376 131377 131378 131379 131380 131381 131382 131383 131384 131385 131386 131387 131388 131389 131390 131391 131392 131393 131394 131395 131396 131397 131398 131399 131400 131401 131402 131403 131404 131405 131406 131407 131408 131409 131410 131411 131412 131413 131414 131415 131416 131417 131418> # SplitBus
const-mul-2 in 1 <131219> out 1 <131419> # join source bit 31
add in 2 <131218 131419> out 1 <131420>  # join source bit 30
const-mul-2 in 1 <131420> out 1 <131421> # join
add in 2 <131217 131421> out 1 <131422>  # join source bit 29
const-mul-2 in 1 <131422> out 1 <131423> # join
add in 2 <131216 131423> out 1 <131424>  # join source bit 28
const-mul-2 in 1 <131424> out 1 <131425> # join
add in 2 <131215 131425> out 1 <131426>  # join source bit 27
const-mul-2 in 1 <131426> out 1 <131427> # join
add in 2 <131214 131427> out 1 <131428>  # join source bit 26
const-mul-2 in 1 <131428> out 1 <131429> # join
add in 2 <131213 131429> out 1 <131430>  # join source bit 25
const-mul-2 in 1 <131430> out 1 <131431> # join
add in 2 <131212 131431> out 1 <131432>  # join source bit 24
const-mul-2 in 1 <131432> out 1 <131433> # join
add in 2 <131211 131433> out 1 <131434>  # join source bit 23
const-mul-2 in 1 <131434> out 1 <131435> # join
add in 2 <131210 131435> out 1 <131436>  # join source bit 22
const-mul-2 in 1 <131436> out 1 <131437> # join
add in 2 <131209 131437> out 1 <131438>  # join source bit 21
const-mul-2 in 1 <131438> out 1 <131439> # join
add in 2 <131208 131439> out 1 <131440>  # join source bit 20
const-mul-2 in 1 <131440> out 1 <131441> # join
add in 2 <131207 131441> out 1 <131442>  # join source bit 19
const-mul-2 in 1 <131442> out 1 <131443> # join
add in 2 <131206 131443> out 1 <131444>  # join source bit 18
const-mul-2 in 1 <131444> out 1 <131445> # join
add in 2 <131205 131445> out 1 <131446>  # join source bit 17
const-mul-2 in 1 <131446> out 1 <131447> # join
add in 2 <131204 131447> out 1 <131448>  # join source bit 16
const-mul-2 in 1 <131448> out 1 <131449> # join
add in 2 <131203 131449> out 1 <131450>  # join source bit 15
const-mul-2 in 1 <131450> out 1 <131451> # join
add in 2 <131202 131451> out 1 <131452>  # join source bit 14
const-mul-2 in 1 <131452> out 1 <131453> # join
add in 2 <131201 131453> out 1 <131454>  # join source bit 13
const-mul-2 in 1 <131454> out 1 <131455> # join
add in 2 <131200 131455> out 1 <131456>  # join source bit 12
const-mul-2 in 1 <131456> out 1 <131457> # join
add in 2 <131199 131457> out 1 <131458>  # join source bit 11
const-mul-2 in 1 <131458> out 1 <131459> # join
add in 2 <131198 131459> out 1 <131460>  # join source bit 10
const-mul-2 in 1 <131460> out 1 <131461> # join
add in 2 <131197 131461> out 1 <131462>  # join source bit 9
const-mul-2 in 1 <131462> out 1 <131463> # join
add in 2 <131196 131463> out 1 <131464>  # join source bit 8
const-mul-2 in 1 <131464> out 1 <131465> # join
add in 2 <131195 131465> out 1 <131466>  # join source bit 7
const-mul-2 in 1 <131466> out 1 <131467> # join
add in 2 <131194 131467> out 1 <131468>  # join source bit 6
const-mul-2 in 1 <131468> out 1 <131469> # join
add in 2 <131193 131469> out 1 <131470>  # join source bit 5
const-mul-2 in 1 <131470> out 1 <131471> # join
add in 2 <131192 131471> out 1 <131472>  # join source bit 4
const-mul-2 in 1 <131472> out 1 <131473> # join
add in 2 <131191 131473> out 1 <131474>  # join source bit 3
const-mul-2 in 1 <131474> out 1 <131475> # join
add in 2 <131190 131475> out 1 <131476>  # join source bit 2
const-mul-2 in 1 <131476> out 1 <131477> # join
add in 2 <131189 131477> out 1 <131478>  # join source bit 1
const-mul-2 in 1 <131478> out 1 <131479> # join
add in 2 <131188 131479> out 1 <131480>  # join source bit 0
add in 2 <131480 131480> out 1 <131481>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <131185> out 1 <131482> # multiply-by-constant 4294967295
add in 2 <44 131482> out 1 <131483>      # 'CmpLT DFG.Input - DFG.Conditional'
split in 1 <131483> out 263 <131484 131485 131486 131487 131488 131489 131490 131491 131492 131493 131494 131495 131496 131497 131498 131499 131500 131501 131502 131503 131504 131505 131506 131507 131508 131509 131510 131511 131512 131513 131514 131515 131516 131517 131518 131519 131520 131521 131522 131523 131524 131525 131526 131527 131528 131529 131530 131531 131532 131533 131534 131535 131536 131537 131538 131539 131540 131541 131542 131543 131544 131545 131546 131547 131548 131549 131550 131551 131552 131553 131554 131555 131556 131557 131558 131559 131560 131561 131562 131563 131564 131565 131566 131567 131568 131569 131570 131571 131572 131573 131574 131575 131576 131577 131578 131579 131580 131581 131582 131583 131584 131585 131586 131587 131588 131589 131590 131591 131592 131593 131594 131595 131596 131597 131598 131599 131600 131601 131602 131603 131604 131605 131606 131607 131608 131609 131610 131611 131612 131613 131614 131615 131616 131617 131618 131619 131620 131621 131622 131623 131624 131625 131626 131627 131628 131629 131630 131631 131632 131633 131634 131635 131636 131637 131638 131639 131640 131641 131642 131643 131644 131645 131646 131647 131648 131649 131650 131651 131652 131653 131654 131655 131656 131657 131658 131659 131660 131661 131662 131663 131664 131665 131666 131667 131668 131669 131670 131671 131672 131673 131674 131675 131676 131677 131678 131679 131680 131681 131682 131683 131684 131685 131686 131687 131688 131689 131690 131691 131692 131693 131694 131695 131696 131697 131698 131699 131700 131701 131702 131703 131704 131705 131706 131707 131708 131709 131710 131711 131712 131713 131714 131715 131716 131717 131718 131719 131720 131721 131722 131723 131724 131725 131726 131727 131728 131729 131730 131731 131732 131733 131734 131735 131736 131737 131738 131739 131740 131741 131742 131743 131744 131745 131746> # SplitBus
mul in 2 <131515 131481> out 1 <131747>  # cond trueterm
const-mul-neg-1 in 1 <131515> out 1 <131748> # cond minuscond
add in 2 <100 131748> out 1 <131749>     # cond negcond
mul in 2 <131749 131185> out 1 <131750>  # cond falseterm
add in 2 <131747 131750> out 1 <131751>  # cond result
add in 2 <131177 131751> out 1 <131752>  # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
split in 1 <131752> out 233 <131753 131754 131755 131756 131757 131758 131759 131760 131761 131762 131763 131764 131765 131766 131767 131768 131769 131770 131771 131772 131773 131774 131775 131776 131777 131778 131779 131780 131781 131782 131783 131784 131785 131786 131787 131788 131789 131790 131791 131792 131793 131794 131795 131796 131797 131798 131799 131800 131801 131802 131803 131804 131805 131806 131807 131808 131809 131810 131811 131812 131813 131814 131815 131816 131817 131818 131819 131820 131821 131822 131823 131824 131825 131826 131827 131828 131829 131830 131831 131832 131833 131834 131835 131836 131837 131838 131839 131840 131841 131842 131843 131844 131845 131846 131847 131848 131849 131850 131851 131852 131853 131854 131855 131856 131857 131858 131859 131860 131861 131862 131863 131864 131865 131866 131867 131868 131869 131870 131871 131872 131873 131874 131875 131876 131877 131878 131879 131880 131881 131882 131883 131884 131885 131886 131887 131888 131889 131890 131891 131892 131893 131894 131895 131896 131897 131898 131899 131900 131901 131902 131903 131904 131905 131906 131907 131908 131909 131910 131911 131912 131913 131914 131915 131916 131917 131918 131919 131920 131921 131922 131923 131924 131925 131926 131927 131928 131929 131930 131931 131932 131933 131934 131935 131936 131937 131938 131939 131940 131941 131942 131943 131944 131945 131946 131947 131948 131949 131950 131951 131952 131953 131954 131955 131956 131957 131958 131959 131960 131961 131962 131963 131964 131965 131966 131967 131968 131969 131970 131971 131972 131973 131974 131975 131976 131977 131978 131979 131980 131981 131982 131983 131984 131985> # SplitBus
const-mul-2 in 1 <131784> out 1 <131986> # join source bit 31
add in 2 <131783 131986> out 1 <131987>  # join source bit 30
const-mul-2 in 1 <131987> out 1 <131988> # join
add in 2 <131782 131988> out 1 <131989>  # join source bit 29
const-mul-2 in 1 <131989> out 1 <131990> # join
add in 2 <131781 131990> out 1 <131991>  # join source bit 28
const-mul-2 in 1 <131991> out 1 <131992> # join
add in 2 <131780 131992> out 1 <131993>  # join source bit 27
const-mul-2 in 1 <131993> out 1 <131994> # join
add in 2 <131779 131994> out 1 <131995>  # join source bit 26
const-mul-2 in 1 <131995> out 1 <131996> # join
add in 2 <131778 131996> out 1 <131997>  # join source bit 25
const-mul-2 in 1 <131997> out 1 <131998> # join
add in 2 <131777 131998> out 1 <131999>  # join source bit 24
const-mul-2 in 1 <131999> out 1 <132000> # join
add in 2 <131776 132000> out 1 <132001>  # join source bit 23
const-mul-2 in 1 <132001> out 1 <132002> # join
add in 2 <131775 132002> out 1 <132003>  # join source bit 22
const-mul-2 in 1 <132003> out 1 <132004> # join
add in 2 <131774 132004> out 1 <132005>  # join source bit 21
const-mul-2 in 1 <132005> out 1 <132006> # join
add in 2 <131773 132006> out 1 <132007>  # join source bit 20
const-mul-2 in 1 <132007> out 1 <132008> # join
add in 2 <131772 132008> out 1 <132009>  # join source bit 19
const-mul-2 in 1 <132009> out 1 <132010> # join
add in 2 <131771 132010> out 1 <132011>  # join source bit 18
const-mul-2 in 1 <132011> out 1 <132012> # join
add in 2 <131770 132012> out 1 <132013>  # join source bit 17
const-mul-2 in 1 <132013> out 1 <132014> # join
add in 2 <131769 132014> out 1 <132015>  # join source bit 16
const-mul-2 in 1 <132015> out 1 <132016> # join
add in 2 <131768 132016> out 1 <132017>  # join source bit 15
const-mul-2 in 1 <132017> out 1 <132018> # join
add in 2 <131767 132018> out 1 <132019>  # join source bit 14
const-mul-2 in 1 <132019> out 1 <132020> # join
add in 2 <131766 132020> out 1 <132021>  # join source bit 13
const-mul-2 in 1 <132021> out 1 <132022> # join
add in 2 <131765 132022> out 1 <132023>  # join source bit 12
const-mul-2 in 1 <132023> out 1 <132024> # join
add in 2 <131764 132024> out 1 <132025>  # join source bit 11
const-mul-2 in 1 <132025> out 1 <132026> # join
add in 2 <131763 132026> out 1 <132027>  # join source bit 10
const-mul-2 in 1 <132027> out 1 <132028> # join
add in 2 <131762 132028> out 1 <132029>  # join source bit 9
const-mul-2 in 1 <132029> out 1 <132030> # join
add in 2 <131761 132030> out 1 <132031>  # join source bit 8
const-mul-2 in 1 <132031> out 1 <132032> # join
add in 2 <131760 132032> out 1 <132033>  # join source bit 7
const-mul-2 in 1 <132033> out 1 <132034> # join
add in 2 <131759 132034> out 1 <132035>  # join source bit 6
const-mul-2 in 1 <132035> out 1 <132036> # join
add in 2 <131758 132036> out 1 <132037>  # join source bit 5
const-mul-2 in 1 <132037> out 1 <132038> # join
add in 2 <131757 132038> out 1 <132039>  # join source bit 4
const-mul-2 in 1 <132039> out 1 <132040> # join
add in 2 <131756 132040> out 1 <132041>  # join source bit 3
const-mul-2 in 1 <132041> out 1 <132042> # join
add in 2 <131755 132042> out 1 <132043>  # join source bit 2
const-mul-2 in 1 <132043> out 1 <132044> # join
add in 2 <131754 132044> out 1 <132045>  # join source bit 1
const-mul-2 in 1 <132045> out 1 <132046> # join
add in 2 <131753 132046> out 1 <132047>  # join source bit 0
add in 2 <132047 132047> out 1 <132048>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <131177> out 1 <132049> # multiply-by-constant 4294967295
add in 2 <131751 132049> out 1 <132050>  # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <132050> out 265 <132051 132052 132053 132054 132055 132056 132057 132058 132059 132060 132061 132062 132063 132064 132065 132066 132067 132068 132069 132070 132071 132072 132073 132074 132075 132076 132077 132078 132079 132080 132081 132082 132083 132084 132085 132086 132087 132088 132089 132090 132091 132092 132093 132094 132095 132096 132097 132098 132099 132100 132101 132102 132103 132104 132105 132106 132107 132108 132109 132110 132111 132112 132113 132114 132115 132116 132117 132118 132119 132120 132121 132122 132123 132124 132125 132126 132127 132128 132129 132130 132131 132132 132133 132134 132135 132136 132137 132138 132139 132140 132141 132142 132143 132144 132145 132146 132147 132148 132149 132150 132151 132152 132153 132154 132155 132156 132157 132158 132159 132160 132161 132162 132163 132164 132165 132166 132167 132168 132169 132170 132171 132172 132173 132174 132175 132176 132177 132178 132179 132180 132181 132182 132183 132184 132185 132186 132187 132188 132189 132190 132191 132192 132193 132194 132195 132196 132197 132198 132199 132200 132201 132202 132203 132204 132205 132206 132207 132208 132209 132210 132211 132212 132213 132214 132215 132216 132217 132218 132219 132220 132221 132222 132223 132224 132225 132226 132227 132228 132229 132230 132231 132232 132233 132234 132235 132236 132237 132238 132239 132240 132241 132242 132243 132244 132245 132246 132247 132248 132249 132250 132251 132252 132253 132254 132255 132256 132257 132258 132259 132260 132261 132262 132263 132264 132265 132266 132267 132268 132269 132270 132271 132272 132273 132274 132275 132276 132277 132278 132279 132280 132281 132282 132283 132284 132285 132286 132287 132288 132289 132290 132291 132292 132293 132294 132295 132296 132297 132298 132299 132300 132301 132302 132303 132304 132305 132306 132307 132308 132309 132310 132311 132312 132313 132314 132315> # SplitBus
mul in 2 <132082 132048> out 1 <132316>  # cond trueterm
const-mul-neg-1 in 1 <132082> out 1 <132317> # cond minuscond
add in 2 <100 132317> out 1 <132318>     # cond negcond
mul in 2 <132318 131177> out 1 <132319>  # cond falseterm
add in 2 <132316 132319> out 1 <132320>  # cond result
mul in 2 <131005 130969> out 1 <132321>  # cond trueterm
const-mul-neg-1 in 1 <131005> out 1 <132322> # cond minuscond
add in 2 <100 132322> out 1 <132323>     # cond negcond
mul in 2 <132323 130966> out 1 <132324>  # cond falseterm
add in 2 <132321 132324> out 1 <132325>  # cond result
mul in 2 <130861 130825> out 1 <132326>  # cond trueterm
const-mul-neg-1 in 1 <130861> out 1 <132327> # cond minuscond
add in 2 <100 132327> out 1 <132328>     # cond negcond
mul in 2 <132328 130822> out 1 <132329>  # cond falseterm
add in 2 <132326 132329> out 1 <132330>  # cond result
const-mul-ffffffff in 1 <132330> out 1 <132331> # multiply-by-constant 4294967295
add in 2 <132330 132325> out 1 <132332>  # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
add in 2 <132332 132331> out 1 <132333>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <132333> out 1 <132334> # multiply-by-constant 4294967295
add in 2 <132332 132334> out 1 <132335>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <132330> out 1 <132336> # multiply-by-constant 4294967295
add in 2 <132325 132336> out 1 <132337>  # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <132337> out 200 <132338 132339 132340 132341 132342 132343 132344 132345 132346 132347 132348 132349 132350 132351 132352 132353 132354 132355 132356 132357 132358 132359 132360 132361 132362 132363 132364 132365 132366 132367 132368 132369 132370 132371 132372 132373 132374 132375 132376 132377 132378 132379 132380 132381 132382 132383 132384 132385 132386 132387 132388 132389 132390 132391 132392 132393 132394 132395 132396 132397 132398 132399 132400 132401 132402 132403 132404 132405 132406 132407 132408 132409 132410 132411 132412 132413 132414 132415 132416 132417 132418 132419 132420 132421 132422 132423 132424 132425 132426 132427 132428 132429 132430 132431 132432 132433 132434 132435 132436 132437 132438 132439 132440 132441 132442 132443 132444 132445 132446 132447 132448 132449 132450 132451 132452 132453 132454 132455 132456 132457 132458 132459 132460 132461 132462 132463 132464 132465 132466 132467 132468 132469 132470 132471 132472 132473 132474 132475 132476 132477 132478 132479 132480 132481 132482 132483 132484 132485 132486 132487 132488 132489 132490 132491 132492 132493 132494 132495 132496 132497 132498 132499 132500 132501 132502 132503 132504 132505 132506 132507 132508 132509 132510 132511 132512 132513 132514 132515 132516 132517 132518 132519 132520 132521 132522 132523 132524 132525 132526 132527 132528 132529 132530 132531 132532 132533 132534 132535 132536 132537> # SplitBus
mul in 2 <132369 132335> out 1 <132538>  # cond trueterm
const-mul-neg-1 in 1 <132369> out 1 <132539> # cond minuscond
add in 2 <100 132539> out 1 <132540>     # cond negcond
mul in 2 <132540 132325> out 1 <132541>  # cond falseterm
add in 2 <132538 132541> out 1 <132542>  # cond result
const-mul-ffffffff in 1 <132542> out 1 <132543> # multiply-by-constant 4294967295
add in 2 <132542 132320> out 1 <132544>  # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
split in 1 <132544> out 235 <132545 132546 132547 132548 132549 132550 132551 132552 132553 132554 132555 132556 132557 132558 132559 132560 132561 132562 132563 132564 132565 132566 132567 132568 132569 132570 132571 132572 132573 132574 132575 132576 132577 132578 132579 132580 132581 132582 132583 132584 132585 132586 132587 132588 132589 132590 132591 132592 132593 132594 132595 132596 132597 132598 132599 132600 132601 132602 132603 132604 132605 132606 132607 132608 132609 132610 132611 132612 132613 132614 132615 132616 132617 132618 132619 132620 132621 132622 132623 132624 132625 132626 132627 132628 132629 132630 132631 132632 132633 132634 132635 132636 132637 132638 132639 132640 132641 132642 132643 132644 132645 132646 132647 132648 132649 132650 132651 132652 132653 132654 132655 132656 132657 132658 132659 132660 132661 132662 132663 132664 132665 132666 132667 132668 132669 132670 132671 132672 132673 132674 132675 132676 132677 132678 132679 132680 132681 132682 132683 132684 132685 132686 132687 132688 132689 132690 132691 132692 132693 132694 132695 132696 132697 132698 132699 132700 132701 132702 132703 132704 132705 132706 132707 132708 132709 132710 132711 132712 132713 132714 132715 132716 132717 132718 132719 132720 132721 132722 132723 132724 132725 132726 132727 132728 132729 132730 132731 132732 132733 132734 132735 132736 132737 132738 132739 132740 132741 132742 132743 132744 132745 132746 132747 132748 132749 132750 132751 132752 132753 132754 132755 132756 132757 132758 132759 132760 132761 132762 132763 132764 132765 132766 132767 132768 132769 132770 132771 132772 132773 132774 132775 132776 132777 132778 132779> # SplitBus
const-mul-2 in 1 <132576> out 1 <132780> # join source bit 31
add in 2 <132575 132780> out 1 <132781>  # join source bit 30
const-mul-2 in 1 <132781> out 1 <132782> # join
add in 2 <132574 132782> out 1 <132783>  # join source bit 29
const-mul-2 in 1 <132783> out 1 <132784> # join
add in 2 <132573 132784> out 1 <132785>  # join source bit 28
const-mul-2 in 1 <132785> out 1 <132786> # join
add in 2 <132572 132786> out 1 <132787>  # join source bit 27
const-mul-2 in 1 <132787> out 1 <132788> # join
add in 2 <132571 132788> out 1 <132789>  # join source bit 26
const-mul-2 in 1 <132789> out 1 <132790> # join
add in 2 <132570 132790> out 1 <132791>  # join source bit 25
const-mul-2 in 1 <132791> out 1 <132792> # join
add in 2 <132569 132792> out 1 <132793>  # join source bit 24
const-mul-2 in 1 <132793> out 1 <132794> # join
add in 2 <132568 132794> out 1 <132795>  # join source bit 23
const-mul-2 in 1 <132795> out 1 <132796> # join
add in 2 <132567 132796> out 1 <132797>  # join source bit 22
const-mul-2 in 1 <132797> out 1 <132798> # join
add in 2 <132566 132798> out 1 <132799>  # join source bit 21
const-mul-2 in 1 <132799> out 1 <132800> # join
add in 2 <132565 132800> out 1 <132801>  # join source bit 20
const-mul-2 in 1 <132801> out 1 <132802> # join
add in 2 <132564 132802> out 1 <132803>  # join source bit 19
const-mul-2 in 1 <132803> out 1 <132804> # join
add in 2 <132563 132804> out 1 <132805>  # join source bit 18
const-mul-2 in 1 <132805> out 1 <132806> # join
add in 2 <132562 132806> out 1 <132807>  # join source bit 17
const-mul-2 in 1 <132807> out 1 <132808> # join
add in 2 <132561 132808> out 1 <132809>  # join source bit 16
const-mul-2 in 1 <132809> out 1 <132810> # join
add in 2 <132560 132810> out 1 <132811>  # join source bit 15
const-mul-2 in 1 <132811> out 1 <132812> # join
add in 2 <132559 132812> out 1 <132813>  # join source bit 14
const-mul-2 in 1 <132813> out 1 <132814> # join
add in 2 <132558 132814> out 1 <132815>  # join source bit 13
const-mul-2 in 1 <132815> out 1 <132816> # join
add in 2 <132557 132816> out 1 <132817>  # join source bit 12
const-mul-2 in 1 <132817> out 1 <132818> # join
add in 2 <132556 132818> out 1 <132819>  # join source bit 11
const-mul-2 in 1 <132819> out 1 <132820> # join
add in 2 <132555 132820> out 1 <132821>  # join source bit 10
const-mul-2 in 1 <132821> out 1 <132822> # join
add in 2 <132554 132822> out 1 <132823>  # join source bit 9
const-mul-2 in 1 <132823> out 1 <132824> # join
add in 2 <132553 132824> out 1 <132825>  # join source bit 8
const-mul-2 in 1 <132825> out 1 <132826> # join
add in 2 <132552 132826> out 1 <132827>  # join source bit 7
const-mul-2 in 1 <132827> out 1 <132828> # join
add in 2 <132551 132828> out 1 <132829>  # join source bit 6
const-mul-2 in 1 <132829> out 1 <132830> # join
add in 2 <132550 132830> out 1 <132831>  # join source bit 5
const-mul-2 in 1 <132831> out 1 <132832> # join
add in 2 <132549 132832> out 1 <132833>  # join source bit 4
const-mul-2 in 1 <132833> out 1 <132834> # join
add in 2 <132548 132834> out 1 <132835>  # join source bit 3
const-mul-2 in 1 <132835> out 1 <132836> # join
add in 2 <132547 132836> out 1 <132837>  # join source bit 2
const-mul-2 in 1 <132837> out 1 <132838> # join
add in 2 <132546 132838> out 1 <132839>  # join source bit 1
const-mul-2 in 1 <132839> out 1 <132840> # join
add in 2 <132545 132840> out 1 <132841>  # join source bit 0
add in 2 <132841 132841> out 1 <132842>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <132842> out 1 <132843> # multiply-by-constant 4294967295
add in 2 <132544 132843> out 1 <132844>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <132542> out 1 <132845> # multiply-by-constant 4294967295
add in 2 <132320 132845> out 1 <132846>  # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <132846> out 267 <132847 132848 132849 132850 132851 132852 132853 132854 132855 132856 132857 132858 132859 132860 132861 132862 132863 132864 132865 132866 132867 132868 132869 132870 132871 132872 132873 132874 132875 132876 132877 132878 132879 132880 132881 132882 132883 132884 132885 132886 132887 132888 132889 132890 132891 132892 132893 132894 132895 132896 132897 132898 132899 132900 132901 132902 132903 132904 132905 132906 132907 132908 132909 132910 132911 132912 132913 132914 132915 132916 132917 132918 132919 132920 132921 132922 132923 132924 132925 132926 132927 132928 132929 132930 132931 132932 132933 132934 132935 132936 132937 132938 132939 132940 132941 132942 132943 132944 132945 132946 132947 132948 132949 132950 132951 132952 132953 132954 132955 132956 132957 132958 132959 132960 132961 132962 132963 132964 132965 132966 132967 132968 132969 132970 132971 132972 132973 132974 132975 132976 132977 132978 132979 132980 132981 132982 132983 132984 132985 132986 132987 132988 132989 132990 132991 132992 132993 132994 132995 132996 132997 132998 132999 133000 133001 133002 133003 133004 133005 133006 133007 133008 133009 133010 133011 133012 133013 133014 133015 133016 133017 133018 133019 133020 133021 133022 133023 133024 133025 133026 133027 133028 133029 133030 133031 133032 133033 133034 133035 133036 133037 133038 133039 133040 133041 133042 133043 133044 133045 133046 133047 133048 133049 133050 133051 133052 133053 133054 133055 133056 133057 133058 133059 133060 133061 133062 133063 133064 133065 133066 133067 133068 133069 133070 133071 133072 133073 133074 133075 133076 133077 133078 133079 133080 133081 133082 133083 133084 133085 133086 133087 133088 133089 133090 133091 133092 133093 133094 133095 133096 133097 133098 133099 133100 133101 133102 133103 133104 133105 133106 133107 133108 133109 133110 133111 133112 133113> # SplitBus
mul in 2 <132878 132844> out 1 <133114>  # cond trueterm
const-mul-neg-1 in 1 <132878> out 1 <133115> # cond minuscond
add in 2 <100 133115> out 1 <133116>     # cond negcond
mul in 2 <133116 132320> out 1 <133117>  # cond falseterm
add in 2 <133114 133117> out 1 <133118>  # cond result
add in 2 <133118 104> out 1 <133119>     # ArithBusReq.AddReq(DFG.Conditional,DFG.Constant)
const-mul-ffffffff in 1 <42> out 1 <133120> # multiply-by-constant 4294967295
add in 2 <133119 133120> out 1 <133121>  # 'CmpLT DFG.Add - DFG.Input'
split in 1 <133121> outplitBus
mul in 2 <133153 103> out 1 <133360>     # cond trueterm
const-mul-neg-1 in 1 <133153> out 1 <133361> # cond minuscond
add in 2 <100 133361> out 1 <133362>     # cond negcond
mul in 2 <133362 102> out 1 <133363>     # cond falseterm
add in 2 <133360 133363> out 1 <133364>  # cond result
add in 2 <133118 3084> out 1 <133365>    # ArithBusReq.AddReq(DFG.Conditional,DFG.Negate)
const-mul-ffffffff in 1 <133365> out 1 <133366> # multiply-by-constant 4294967295
add in 2 <42 133366> out 1 <133367>      # 'CmpLT DFG.Input - DFG.Subtract'
split in 1 <133367> out 270 <133368 133369 133370 133371 133372 133373 133374 133375 133376 133377 133378 133379 133380 133381 133382 133383 133384 133385 133386 133387 133388 133389 133390 133391 133392 133393 133394 133395 133396 133397 133398 133399 133400 133401 133402 133403 133404 133405 133406 133407 133408 133409 133410 133411 133412 133413 133414 133415 133416 133417 133418 133419 133420 133421 133422 133423 133424 133425 133426 133427 133428 133429 133430 133431 133432 133433 133434 133435 133436 133437 133438 133439 133440 133441 133442 133443 133444 133445 133446 133447 133448 133449 133450 133451 133452 133453 133454 133455 133456 133457 133458 133459 133460 133461 133462 133463 133464 133465 133466 133467 133468 133469 133470 133471 133472 133473 133474 133475 133476 133477 133478 133479 133480 133481 133482 133483 133484 133485 133486 133487 133488 133489 133490 133491 133492 133493 133494 133495 133496 133497 133498 133499 133500 133501 133502 133503 133504 133505 133506 133507 133508 133509 133510 133511 133512 133513 133514 133515 133516 133517 133518 133519 133520 133521 133522 133523 133524 133525 133526 133527 133528 133529 133530 133531 133532 133533 133534 133535 133536 133537 133538 133539 133540 133541 133542 133543 133544 133545 133546 133547 133548 133549 133550 133551 133552 133553 133554 133555 133556 133557 133558 133559 133560 133561 133562 133563 133564 133565 133566 133567 133568 133569 133570 133571 133572 133573 133574 133575 133576 133577 133578 133579 133580 133581 133582 133583 133584 133585 133586 133587 133588 133589 133590 133591 133592 133593 133594 133595 133596 133597 133598 133599 133600 133601 133602 133603 133604 133605 133606 133607 133608 133609 133610 133611 133612 133613 133614 133615 133616 133617 133618 133619 133620 133621 133622 133623 133624 133625 133626 133627 133628 133629 133630 133631 133632 133633 133634 133635 133636 133637> # SplitBus
mul in 2 <133399 103> out 1 <133638>     # cond trueterm
const-mul-neg-1 in 1 <133399> out 1 <133639> # cond minuscond
add in 2 <100 133639> out 1 <133640>     # cond negcond
mul in 2 <133640 133364> out 1 <133641>  # cond falseterm
add in 2 <133638 133641> out 1 <133642>  # cond result
const-mul-ffffffff in 1 <41> out 1 <133643> # multiply-by-constant 4294967295
add in 2 <41 42> out 1 <133644>          # ArithBusReq.AddReq(DFG.Input,DFG.Input)
add in 2 <133644 133643> out 1 <133645>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <133645> out 1 <133646> # multiply-by-constant 4294967295
add in 2 <133644 133646> out 1 <133647>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <41> out 1 <133648> # multiply-by-constant 4294967295
add in 2 <42 133648> out 1 <133649>      # 'CmpLT DFG.Input - DFG.Input'
split in 1 <133649> out 65 <133650 133651 133652 133653 133654 133655 133656 133657 133658 133659 133660 133661 133662 133663 133664 133665 133666 133667 133668 133669 133670 133671 133672 133673 133674 133675 133676 133677 133678 133679 133680 133681 133682 133683 133684 133685 133686 133687 133688 133689 133690 133691 133692 133693 133694 133695 133696 133697 133698 133699 133700 133701 133702 133703 133704 133705 133706 133707 133708 133709 133710 133711 133712 133713 133714> # SplitBus
mul in 2 <133681 133647> out 1 <133715>  # cond trueterm
const-mul-neg-1 in 1 <133681> out 1 <133716> # cond minuscond
add in 2 <100 133716> out 1 <133717>     # cond negcond
mul in 2 <133717 42> out 1 <133718>      # cond falseterm
add in 2 <133715 133718> out 1 <133719>  # cond result
const-mul-ffffffff in 1 <133719> out 1 <133720> # multiply-by-constant 4294967295
add in 2 <133719 43> out 1 <133721>      # ArithBusReq.AddReq(DFG.Conditional,DFG.Input)
add in 2 <133721 133720> out 1 <133722>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <133722> out 1 <133723> # multiply-by-constant 4294967295
add in 2 <133721 133723> out 1 <133724>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <133719> out 1 <133725> # multiply-by-constant 4294967295
add in 2 <43 133725> out 1 <133726>      # 'CmpLT DFG.Input - DFG.Conditional'
split in 1 <133726> out 131 <133727 133728 133729 133730 133731 133732 133733 133734 133735 133736 133737 133738 133739 133740 133741 133742 133743 133744 133745 133746 133747 133748 133749 133750 133751 133752 133753 133754 133755 133756 133757 133758 133759 133760 133761 133762 133763 133764 133765 133766 133767 133768 133769 133770 133771 133772 133773 133774 133775 133776 133777 133778 133779 133780 133781 133782 133783 133784 133785 133786 133787 133788 133789 133790 133791 133792 133793 133794 133795 133796 133797 133798 133799 133800 133801 133802 133803 133804 133805 133806 133807 133808 133809 133810 133811 133812 133813 133814 133815 133816 133817 133818 133819 133820 133821 133822 133823 133824 133825 133826 133827 133828 133829 133830 133831 133832 133833 133834 133835 133836 133837 133838 133839 133840 133841 133842 133843 133844 133845 133846 133847 133848 133849 133850 133851 133852 133853 133854 133855 133856 133857> # SplitBus
mul in 2 <133758 133724> out 1 <133858>  # cond trueterm
const-mul-neg-1 in 1 <133758> out 1 <133859> # cond minuscond
add in 2 <100 133859> out 1 <133860>     # cond negcond
mul in 2 <133860 43> out 1 <133861>      # cond falseterm
add in 2 <133858 133861> out 1 <133862>  # cond result
const-mul-ffffffff in 1 <133862> out 1 <133863> # multiply-by-constant 4294967295
add in 2 <133862 44> out 1 <133864>      # ArithBusReq.AddReq(DFG.Conditional,DFG.Input)
add in 2 <133864 133863> out 1 <133865>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <133862> out 1 <133866> # multiply-by-constant 4294967295
add in 2 <44 133866> out 1 <133867>      # 'CmpLT DFG.Input - DFG.Conditional'
split in 1 <133867> out 197 <133868 133869 133870 133871 133872 133873 133874 133875 133876 133877 133878 133879 133880 133881 133882 133883 133884 133885 133886 133887 133888 133889 133890 133891 133892 133893 133894 133895 133896 133897 133898 133899 133900 133901 133902 133903 133904 133905 133906 133907 133908 133909 133910 133911 133912 133913 133914 133915 133916 133917 133918 133919 133920 133921 133922 133923 133924 133925 133926 133927 133928 133929 133930 133931 133932 133933 133934 133935 133936 133937 133938 133939 133940 133941 133942 133943 133944 133945 133946 133947 133948 133949 133950 133951 133952 133953 133954 133955 133956 133957 133958 133959 133960 133961 133962 133963 133964 133965 133966 133967 133968 133969 133970 133971 133972 133973 133974 133975 133976 133977 133978 133979 133980 133981 133982 133983 133984 133985 133986 133987 133988 133989 133990 133991 133992 133993 133994 133995 133996 133997 133998 133999 134000 134001 134002 134003 134004 134005 134006 134007 134008 134009 134010 134011 134012 134013 134014 134015 134016 134017 134018 134019 134020 134021 134022 134023 134024 134025 134026 134027 134028 134029 134030 134031 134032 134033 134034 134035 134036 134037 134038 134039 134040 134041 134042 134043 134044 134045 134046 134047 134048 134049 134050 134051 134052 134053 134054 134055 134056 134057 134058 134059 134060 134061 134062 134063 134064> # SplitBus
mul in 2 <133899 133865> out 1 <134065>  # cond trueterm
const-mul-neg-1 in 1 <133899> out 1 <134066> # cond minuscond
add in 2 <100 134066> out 1 <134067>     # cond negcond
mul in 2 <134067 133862> out 1 <134068>  # cond falseterm
add in 2 <134065 134068> out 1 <134069>  # cond result
mul in 2 <133758 133722> out 1 <134070>  # cond trueterm
const-mul-neg-1 in 1 <133758> out 1 <134071> # cond minuscond
add in 2 <100 134071> out 1 <134072>     # cond negcond
mul in 2 <134072 133719> out 1 <134073>  # cond falseterm
add in 2 <134070 134073> out 1 <134074>  # cond result
mul in 2 <133681 133645> out 1 <134075>  # cond trueterm
const-mul-neg-1 in 1 <133681> out 1 <134076> # cond minuscond
add in 2 <100 134076> out 1 <134077>     # cond negcond
mul in 2 <134077 41> out 1 <134078>      # cond falseterm
add in 2 <134075 134078> out 1 <134079>  # cond result
const-mul-ffffffff in 1 <134079> out 1 <134080> # multiply-by-constant 4294967295
add in 2 <134079 134074> out 1 <134081>  # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
add in 2 <134081 134080> out 1 <134082>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <134082> out 1 <134083> # multiply-by-constant 4294967295
add in 2 <134081 134083> out 1 <134084>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <134079> out 1 <134085> # multiply-by-constant 4294967295
add in 2 <134074 134085> out 1 <134086>  # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <134086> out 132 <134087 134088 134089 134090 134091 134092 134093 134094 134095 134096 134097 134098 134099 134100 134101 134102 134103 134104 134105 134106 134107 134108 134109 134110 134111 134112 134113 134114 134115 134116 134117 134118 134119 134120 134121 134122 134123 134124 134125 134126 134127 134128 134129 134130 134131 134132 134133 134134 134135 134136 134137 134138 134139 134140 134141 134142 134143 134144 134145 134146 134147 134148 134149 134150 134151 134152 134153 134154 134155 134156 134157 134158 134159 134160 134161 134162 134163 134164 134165 134166 134167 134168 134169 134170 134171 134172 134173 134174 134175 134176 134177 134178 134179 134180 134181 134182 134183 134184 134185 134186 134187 134188 134189 134190 134191 134192 134193 134194 134195 134196 134197 134198 134199 134200 134201 134202 134203 134204 134205 134206 134207 134208 134209 134210 134211 134212 134213 134214 134215 134216 134217 134218> # SplitBus
mul in 2 <134118 134084> out 1 <134219>  # cond trueterm
const-mul-neg-1 in 1 <134118> out 1 <134220> # cond minuscond
add in 2 <100 134220> out 1 <134221>     # cond negcond
mul in 2 <134221 134074> out 1 <134222>  # cond falseterm
add in 2 <134219 134222> out 1 <134223>  # cond result
const-mul-ffffffff in 1 <134223> out 1 <134224> # multiply-by-constant 4294967295
add in 2 <134223 134069> out 1 <134225>  # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
add in 2 <134225 134224> out 1 <134226>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <134226> out 1 <134227> # multiply-by-constant 4294967295
add in 2 <134225 134227> out 1 <134228>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <134223> out 1 <134229> # multiply-by-constant 4294967295
add in 2 <134069 134229> out 1 <134230>  # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <134230> out 199 <134231 134232 134233 134234 134235 134236 134237 134238 134239 134240 134241 134242 134243 134244 134245 134246 134247 134248 134249 134250 134251 134252 134253 134254 134255 134256 134257 134258 134259 134260 134261 134262 134263 134264 134265 134266 134267 134268 134269 134270 134271 134272 134273 134274 134275 134276 134277 134278 134279 134280 134281 134282 134283 134284 134285 134286 134287 134288 134289 134290 134291 134292 134293 134294 134295 134296 134297 134298 134299 134300 134301 134302 134303 134304 134305 134306 134307 134308 134309 134310 134311 134312 134313 134314 134315 134316 134317 134318 134319 134320 134321 134322 134323 134324 134325 134326 134327 134328 134329 134330 134331 134332 134333 134334 134335 134336 134337 134338 134339 134340 134341 134342 134343 134344 134345 134346 134347 134348 134349 134350 134351 134352 134353 134354 134355 134356 134357 134358 134359 134360 134361 134362 134363 134364 134365 134366 134367 134368 134369 134370 134371 134372 134373 134374 134375 134376 134377 134378 134379 134380 134381 134382 134383 134384 134385 134386 134387 134388 134389 134390 134391 134392 134393 134394 134395 134396 134397 134398 134399 134400 134401 134402 134403 134404 134405 134406 134407 134408 134409 134410 134411 134412 134413 134414 134415 134416 134417 134418 134419 134420 134421 134422 134423 134424 134425 134426 134427 134428 134429> # SplitBus
mul in 2 <134262 134228> out 1 <134430>  # cond trueterm
const-mul-neg-1 in 1 <134262> out 1 <134431> # cond minuscond
add in 2 <100 134431> out 1 <134432>     # cond negcond
mul in 2 <134432 134069> out 1 <134433>  # cond falseterm
add in 2 <134430 134433> out 1 <134434>  # cond result
const-mul-ffffffff in 1 <134434> out 1 <134435> # multiply-by-constant 4294967295
const-mul-ffffffff in 1 <133865> out 1 <134436> # multiply-by-constant 4294967295
add in 2 <133864 134436> out 1 <134437>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
mul in 2 <133899 134437> out 1 <134438>  # cond trueterm
const-mul-neg-1 in 1 <133899> out 1 <134439> # cond minuscond
add in 2 <100 134439> out 1 <134440>     # cond negcond
mul in 2 <134440 44> out 1 <134441>      # cond falseterm
add in 2 <134438 134441> out 1 <134442>  # cond result
const-mul-ffffffff in 1 <134442> out 1 <134443> # multiply-by-constant 4294967295
add in 2 <134442 45> out 1 <134444>      # ArithBusReq.AddReq(DFG.Conditional,DFG.Input)
split in 1 <134444> out 231 <134445 134446 134447 134448 134449 134450 134451 134452 134453 134454 134455 134456 134457 134458 134459 134460 134461 134462 134463 134464 134465 134466 134467 134468 134469 134470 134471 134472 134473 134474 134475 134476 134477 134478 134479 134480 134481 134482 134483 134484 134485 134486 134487 134488 134489 134490 134491 134492 134493 134494 134495 134496 134497 134498 134499 134500 134501 134502 134503 134504 134505 134506 134507 134508 134509 134510 134511 134512 134513 134514 134515 134516 134517 134518 134519 134520 134521 134522 134523 134524 134525 134526 134527 134528 134529 134530 134531 134532 134533 134534 134535 134536 134537 134538 134539 134540 134541 134542 134543 134544 134545 134546 134547 134548 134549 134550 134551 134552 134553 134554 134555 134556 134557 134558 134559 134560 134561 134562 134563 134564 134565 134566 134567 134568 134569 134570 134571 134572 134573 134574 134575 134576 134577 134578 134579 134580 134581 134582 134583 134584 134585 134586 134587 134588 134589 134590 134591 134592 134593 134594 134595 134596 134597 134598 134599 134600 134601 134602 134603 134604 134605 134606 134607 134608 134609 134610 134611 134612 134613 134614 134615 134616 134617 134618 134619 134620 134621 134622 134623 134624 134625 134626 134627 134628 134629 134630 134631 134632 134633 134634 134635 134636 134637 134638 134639 134640 134641 134642 134643 134644 134645 134646 134647 134648 134649 134650 134651 134652 134653 134654 134655 134656 134657 134658 134659 134660 134661 134662 134663 134664 134665 134666 134667 134668 134669 134670 134671 134672 134673 134674 134675> # SplitBus
const-mul-2 in 1 <134476> out 1 <134676> # join source bit 31
add in 2 <134475 134676> out 1 <134677>  # join source bit 30
const-mul-2 in 1 <134677> out 1 <134678> # join
add in 2 <134474 134678> out 1 <134679>  # join source bit 29
const-mul-2 in 1 <134679> out 1 <134680> # join
add in 2 <134473 134680> out 1 <134681>  # join source bit 28
const-mul-2 in 1 <134681> out 1 <134682> # join
add in 2 <134472 134682> out 1 <134683>  # join source bit 27
const-mul-2 in 1 <134683> out 1 <134684> # join
add in 2 <134471 134684> out 1 <134685>  # join source bit 26
const-mul-2 in 1 <134685> out 1 <134686> # join
add in 2 <134470 134686> out 1 <134687>  # join source bit 25
const-mul-2 in 1 <134687> out 1 <134688> # join
add in 2 <134469 134688> out 1 <134689>  # join source bit 24
const-mul-2 in 1 <134689> out 1 <134690> # join
add in 2 <134468 134690> out 1 <134691>  # join source bit 23
const-mul-2 in 1 <134691> out 1 <134692> # join
add in 2 <134467 134692> out 1 <134693>  # join source bit 22
const-mul-2 in 1 <134693> out 1 <134694> # join
add in 2 <134466 134694> out 1 <134695>  # join source bit 21
const-mul-2 in 1 <134695> out 1 <134696> # join
add in 2 <134465 134696> out 1 <134697>  # join source bit 20
const-mul-2 in 1 <134697> out 1 <134698> # join
add in 2 <134464 134698> out 1 <134699>  # join source bit 19
const-mul-2 in 1 <134699> out 1 <134700> # join
add in 2 <134463 134700> out 1 <134701>  # join source bit 18
const-mul-2 in 1 <134701> out 1 <134702> # join
add in 2 <134462 134702> out 1 <134703>  # join source bit 17
const-mul-2 in 1 <134703> out 1 <134704> # join
add in 2 <134461 134704> out 1 <134705>  # join source bit 16
const-mul-2 in 1 <134705> out 1 <134706> # join
add in 2 <134460 134706> out 1 <134707>  # join source bit 15
const-mul-2 in 1 <134707> out 1 <134708> # join
add in 2 <134459 134708> out 1 <134709>  # join source bit 14
const-mul-2 in 1 <134709> out 1 <134710> # join
add in 2 <134458 134710> out 1 <134711>  # join source bit 13
const-mul-2 in 1 <134711> out 1 <134712> # join
add in 2 <134457 134712> out 1 <134713>  # join source bit 12
const-mul-2 in 1 <134713> out 1 <134714> # join
add in 2 <134456 134714> out 1 <134715>  # join source bit 11
const-mul-2 in 1 <134715> out 1 <134716> # join
add in 2 <134455 134716> out 1 <134717>  # join source bit 10
const-mul-2 in 1 <134717> out 1 <134718> # join
add in 2 <134454 134718> out 1 <134719>  # join source bit 9
const-mul-2 in 1 <134719> out 1 <134720> # join
add in 2 <134453 134720> out 1 <134721>  # join source bit 8
const-mul-2 in 1 <134721> out 1 <134722> # join
add in 2 <134452 134722> out 1 <134723>  # join source bit 7
const-mul-2 in 1 <134723> out 1 <134724> # join
add in 2 <134451 134724> out 1 <134725>  # join source bit 6
const-mul-2 in 1 <134725> out 1 <134726> # join
add in 2 <134450 134726> out 1 <134727>  # join source bit 5
const-mul-2 in 1 <134727> out 1 <134728> # join
add in 2 <134449 134728> out 1 <134729>  # join source bit 4
const-mul-2 in 1 <134729> out 1 <134730> # join
add in 2 <134448 134730> out 1 <134731>  # join source bit 3
const-mul-2 in 1 <134731> out 1 <134732> # join
add in 2 <134447 134732> out 1 <134733>  # join source bit 2
const-mul-2 in 1 <134733> out 1 <134734> # join
add in 2 <134446 134734> out 1 <134735>  # join source bit 1
const-mul-2 in 1 <134735> out 1 <134736> # join
add in 2 <134445 134736> out 1 <134737>  # join source bit 0
add in 2 <134737 134737> out 1 <134738>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <134442> out 1 <134739> # multiply-by-constant 4294967295
add in 2 <45 134739> out 1 <134740>      # 'CmpLT DFG.Input - DFG.Conditional'
split in 1 <134740> out 263 <134741 134742 134743 134744 134745 134746 134747 134748 134749 134750 134751 134752 134753 134754 134755 134756 134757 134758 134759 134760 134761 134762 134763 134764 134765 134766 134767 134768 134769 134770 134771 134772 134773 134774 134775 134776 134777 134778 134779 134780 134781 134782 134783 134784 134785 134786 134787 134788 134789 134790 134791 134792 134793 134794 134795 134796 134797 134798 134799 134800 134801 134802 134803 134804 134805 134806 134807 134808 134809 134810 134811 134812 134813 134814 134815 134816 134817 134818 134819 134820 134821 134822 134823 134824 134825 134826 134827 134828 134829 134830 134831 134832 134833 134834 134835 134836 134837 134838 134839 134840 134841 134842 134843 134844 134845 134846 134847 134848 134849 134850 134851 134852 134853 134854 134855 134856 134857 134858 134859 134860 134861 134862 134863 134864 134865 134866 134867 134868 134869 134870 134871 134872 134873 134874 134875 134876 134877 134878 134879 134880 134881 134882 134883 134884 134885 134886 134887 134888 134889 134890 134891 134892 134893 134894 134895 134896 134897 134898 134899 134900 134901 134902 134903 134904 134905 134906 134907 134908 134909 134910 134911 134912 134913 134914 134915 134916 134917 134918 134919 134920 134921 134922 134923 134924 134925 134926 134927 134928 134929 134930 134931 134932 134933 134934 134935 134936 134937 134938 134939 134940 134941 134942 134943 134944 134945 134946 134947 134948 134949 134950 134951 134952 134953 134954 134955 134956 134957 134958 134959 134960 134961 134962 134963 134964 134965 134966 134967 134968 134969 134970 134971 134972 134973 134974 134975 134976 134977 134978 134979 134980 134981 134982 134983 134984 134985 134986 134987 134988 134989 134990 134991 134992 134993 134994 134995 134996 134997 134998 134999 135000 135001 135002 135003> # SplitBus
mul in 2 <134772 134738> out 1 <135004>  # cond trueterm
const-mul-neg-1 in 1 <134772> out 1 <135005> # cond minuscond
add in 2 <100 135005> out 1 <135006>     # cond negcond
mul in 2 <135006 134442> out 1 <135007>  # cond falseterm
add in 2 <135004 135007> out 1 <135008>  # cond result
add in 2 <134434 135008> out 1 <135009>  # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
split in 1 <135009> outplitBus
const-mul-2 in 1 <135041> out 1 <135243> # join source bit 31
add in 2 <135040 135243> out 1 <135244>  # join source bit 30
const-mul-2 in 1 <135244> out 1 <135245> # join
add in 2 <135039 135245> out 1 <135246>  # join source bit 29
const-mul-2 in 1 <135246> out 1 <135247> # join
add in 2 <135038 135247> out 1 <135248>  # join source bit 28
const-mul-2 in 1 <135248> out 1 <135249> # join
add in 2 <135037 135249> out 1 <135250>  # join source bit 27
const-mul-2 in 1 <135250> out 1 <135251> # join
add in 2 <135036 135251> out 1 <135252>  # join source bit 26
const-mul-2 in 1 <135252> out 1 <135253> # join
add in 2 <135035 135253> out 1 <135254>  # join source bit 25
const-mul-2 in 1 <135254> out 1 <135255> # join
add in 2 <135034 135255> out 1 <135256>  # join source bit 24
const-mul-2 in 1 <135256> out 1 <135257> # join
add in 2 <135033 135257> out 1 <135258>  # join source bit 23
const-mul-2 in 1 <135258> out 1 <135259> # join
add in 2 <135032 135259> out 1 <135260>  # join source bit 22
const-mul-2 in 1 <135260> out 1 <135261> # join
add in 2 <135031 135261> out 1 <135262>  # join source bit 21
const-mul-2 in 1 <135262> out 1 <135263> # join
add in 2 <135030 135263> out 1 <135264>  # join source bit 20
const-mul-2 in 1 <135264> out 1 <135265> # join
add in 2 <135029 135265> out 1 <135266>  # join source bit 19
const-mul-2 in 1 <135266> out 1 <135267> # join
add in 2 <135028 135267> out 1 <135268>  # join source bit 18
const-mul-2 in 1 <135268> out 1 <135269> # join
add in 2 <135027 135269> out 1 <135270>  # join source bit 17
const-mul-2 in 1 <135270> out 1 <135271> # join
add in 2 <135026 135271> out 1 <135272>  # join source bit 16
const-mul-2 in 1 <135272> out 1 <135273> # join
add in 2 <135025 135273> out 1 <135274>  # join source bit 15
const-mul-2 in 1 <135274> out 1 <135275> # join
add in 2 <135024 135275> out 1 <135276>  # join source bit 14
const-mul-2 in 1 <135276> out 1 <135277> # join
add in 2 <135023 135277> out 1 <135278>  # join source bit 13
const-mul-2 in 1 <135278> out 1 <135279> # join
add in 2 <135022 135279> out 1 <135280>  # join source bit 12
const-mul-2 in 1 <135280> out 1 <135281> # join
add in 2 <135021 135281> out 1 <135282>  # join source bit 11
const-mul-2 in 1 <135282> out 1 <135283> # join
add in 2 <135020 135283> out 1 <135284>  # join source bit 10
const-mul-2 in 1 <135284> out 1 <135285> # join
add in 2 <135019 135285> out 1 <135286>  # join source bit 9
const-mul-2 in 1 <135286> out 1 <135287> # join
add in 2 <135018 135287> out 1 <135288>  # join source bit 8
const-mul-2 in 1 <135288> out 1 <135289> # join
add in 2 <135017 135289> out 1 <135290>  # join source bit 7
const-mul-2 in 1 <135290> out 1 <135291> # join
add in 2 <135016 135291> out 1 <135292>  # join source bit 6
const-mul-2 in 1 <135292> out 1 <135293> # join
add in 2 <135015 135293> out 1 <135294>  # join source bit 5
const-mul-2 in 1 <135294> out 1 <135295> # join
add in 2 <135014 135295> out 1 <135296>  # join source bit 4
const-mul-2 in 1 <135296> out 1 <135297> # join
add in 2 <135013 135297> out 1 <135298>  # join source bit 3
const-mul-2 in 1 <135298> out 1 <135299> # join
add in 2 <135012 135299> out 1 <135300>  # join source bit 2
const-mul-2 in 1 <135300> out 1 <135301> # join
add in 2 <135011 135301> out 1 <135302>  # join source bit 1
const-mul-2 in 1 <135302> out 1 <135303> # join
add in 2 <135010 135303> out 1 <135304>  # join source bit 0
add in 2 <135304 135304> out 1 <135305>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <134434> out 1 <135306> # multiply-by-constant 4294967295
add in 2 <135008 135306> out 1 <135307>  # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <135307> outplitBus
mul in 2 <135339 135305> out 1 <135573>  # cond trueterm
const-mul-neg-1 in 1 <135339> out 1 <135574> # cond minuscond
add in 2 <100 135574> out 1 <135575>     # cond negcond
mul in 2 <135575 134434> out 1 <135576>  # cond falseterm
add in 2 <135573 135576> out 1 <135577>  # cond result
mul in 2 <134262 134226> out 1 <135578>  # cond trueterm
const-mul-neg-1 in 1 <134262> out 1 <135579> # cond minuscond
add in 2 <100 135579> out 1 <135580>     # cond negcond
mul in 2 <135580 134223> out 1 <135581>  # cond falseterm
add in 2 <135578 135581> out 1 <135582>  # cond result
mul in 2 <134118 134082> out 1 <135583>  # cond trueterm
const-mul-neg-1 in 1 <134118> out 1 <135584> # cond minuscond
add in 2 <100 135584> out 1 <135585>     # cond negcond
mul in 2 <135585 134079> out 1 <135586>  # cond falseterm
add in 2 <135583 135586> out 1 <135587>  # cond result
const-mul-ffffffff in 1 <135587> out 1 <135588> # multiply-by-constant 4294967295
add in 2 <135587 135582> out 1 <135589>  # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
add in 2 <135589 135588> out 1 <135590>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <135590> out 1 <135591> # multiply-by-constant 4294967295
add in 2 <135589 135591> out 1 <135592>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <135587> out 1 <135593> # multiply-by-constant 4294967295
add in 2 <135582 135593> out 1 <135594>  # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <135594> out 200 <135595 135596 135597 135598 135599 135600 135601 135602 135603 135604 135605 135606 135607 135608 135609 135610 135611 135612 135613 135614 135615 135616 135617 135618 135619 135620 135621 135622 135623 135624 135625 135626 135627 135628 135629 135630 135631 135632 135633 135634 135635 135636 135637 135638 135639 135640 135641 135642 135643 135644 135645 135646 135647 135648 135649 135650 135651 135652 135653 135654 135655 135656 135657 135658 135659 135660 135661 135662 135663 135664 135665 135666 135667 135668 135669 135670 135671 135672 135673 135674 135675 135676 135677 135678 135679 135680 135681 135682 135683 135684 135685 135686 135687 135688 135689 135690 135691 135692 135693 135694 135695 135696 135697 135698 135699 135700 135701 135702 135703 135704 135705 135706 135707 135708 135709 135710 135711 135712 135713 135714 135715 135716 135717 135718 135719 135720 135721 135722 135723 135724 135725 135726 135727 135728 135729 135730 135731 135732 135733 135734 135735 135736 135737 135738 135739 135740 135741 135742 135743 135744 135745 135746 135747 135748 135749 135750 135751 135752 135753 135754 135755 135756 135757 135758 135759 135760 135761 135762 135763 135764 135765 135766 135767 135768 135769 135770 135771 135772 135773 135774 135775 135776 135777 135778 135779 135780 135781 135782 135783 135784 135785 135786 135787 135788 135789 135790 135791 135792 135793 135794> # SplitBus
mul in 2 <135626 135592> out 1 <135795>  # cond trueterm
const-mul-neg-1 in 1 <135626> out 1 <135796> # cond minuscond
add in 2 <100 135796> out 1 <135797>     # cond negcond
mul in 2 <135797 135582> out 1 <135798>  # cond falseterm
add in 2 <135795 135798> out 1 <135799>  # cond result
const-mul-ffffffff in 1 <135799> out 1 <135800> # multiply-by-constant 4294967295
add in 2 <135799 135577> out 1 <135801>  # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
split in 1 <135801> outplitBus
const-mul-2 in 1 <135833> out 1 <136037> # join source bit 31
add in 2 <135832 136037> out 1 <136038>  # join source bit 30
const-mul-2 in 1 <136038> out 1 <136039> # join
add in 2 <135831 136039> out 1 <136040>  # join source bit 29
const-mul-2 in 1 <136040> out 1 <136041> # join
add in 2 <135830 136041> out 1 <136042>  # join source bit 28
const-mul-2 in 1 <136042> out 1 <136043> # join
add in 2 <135829 136043> out 1 <136044>  # join source bit 27
const-mul-2 in 1 <136044> out 1 <136045> # join
add in 2 <135828 136045> out 1 <136046>  # join source bit 26
const-mul-2 in 1 <136046> out 1 <136047> # join
add in 2 <135827 136047> out 1 <136048>  # join source bit 25
const-mul-2 in 1 <136048> out 1 <136049> # join
add in 2 <135826 136049> out 1 <136050>  # join source bit 24
const-mul-2 in 1 <136050> out 1 <136051> # join
add in 2 <135825 136051> out 1 <136052>  # join source bit 23
const-mul-2 in 1 <136052> out 1 <136053> # join
add in 2 <135824 136053> out 1 <136054>  # join source bit 22
const-mul-2 in 1 <136054> out 1 <136055> # join
add in 2 <135823 136055> out 1 <136056>  # join source bit 21
const-mul-2 in 1 <136056> out 1 <136057> # join
add in 2 <135822 136057> out 1 <136058>  # join source bit 20
const-mul-2 in 1 <136058> out 1 <136059> # join
add in 2 <135821 136059> out 1 <136060>  # join source bit 19
const-mul-2 in 1 <136060> out 1 <136061> # join
add in 2 <135820 136061> out 1 <136062>  # join source bit 18
const-mul-2 in 1 <136062> out 1 <136063> # join
add in 2 <135819 136063> out 1 <136064>  # join source bit 17
const-mul-2 in 1 <136064> out 1 <136065> # join
add in 2 <135818 136065> out 1 <136066>  # join source bit 16
const-mul-2 in 1 <136066> out 1 <136067> # join
add in 2 <135817 136067> out 1 <136068>  # join source bit 15
const-mul-2 in 1 <136068> out 1 <136069> # join
add in 2 <135816 136069> out 1 <136070>  # join source bit 14
const-mul-2 in 1 <136070> out 1 <136071> # join
add in 2 <135815 136071> out 1 <136072>  # join source bit 13
const-mul-2 in 1 <136072> out 1 <136073> # join
add in 2 <135814 136073> out 1 <136074>  # join source bit 12
const-mul-2 in 1 <136074> out 1 <136075> # join
add in 2 <135813 136075> out 1 <136076>  # join source bit 11
const-mul-2 in 1 <136076> out 1 <136077> # join
add in 2 <135812 136077> out 1 <136078>  # join source bit 10
const-mul-2 in 1 <136078> out 1 <136079> # join
add in 2 <135811 136079> out 1 <136080>  # join source bit 9
const-mul-2 in 1 <136080> out 1 <136081> # join
add in 2 <135810 136081> out 1 <136082>  # join source bit 8
const-mul-2 in 1 <136082> out 1 <136083> # join
add in 2 <135809 136083> out 1 <136084>  # join source bit 7
const-mul-2 in 1 <136084> out 1 <136085> # join
add in 2 <135808 136085> out 1 <136086>  # join source bit 6
const-mul-2 in 1 <136086> out 1 <136087> # join
add in 2 <135807 136087> out 1 <136088>  # join source bit 5
const-mul-2 in 1 <136088> out 1 <136089> # join
add in 2 <135806 136089> out 1 <136090>  # join source bit 4
const-mul-2 in 1 <136090> out 1 <136091> # join
add in 2 <135805 136091> out 1 <136092>  # join source bit 3
const-mul-2 in 1 <136092> out 1 <136093> # join
add in 2 <135804 136093> out 1 <136094>  # join source bit 2
const-mul-2 in 1 <136094> out 1 <136095> # join
add in 2 <135803 136095> out 1 <136096>  # join source bit 1
const-mul-2 in 1 <136096> out 1 <136097> # join
add in 2 <135802 136097> out 1 <136098>  # join source bit 0
add in 2 <136098 136098> out 1 <136099>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <136099> out 1 <136100> # multiply-by-constant 4294967295
add in 2 <135801 136100> out 1 <136101>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <135799> out 1 <136102> # multiply-by-constant 4294967295
add in 2 <135577 136102> out 1 <136103>  # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <136103> outplitBus
mul in 2 <136135 136101> out 1 <136371>  # cond trueterm
const-mul-neg-1 in 1 <136135> out 1 <136372> # cond minuscond
add in 2 <100 136372> out 1 <136373>     # cond negcond
mul in 2 <136373 135577> out 1 <136374>  # cond falseterm
add in 2 <136371 136374> out 1 <136375>  # cond result
add in 2 <136375 104> out 1 <136376>     # ArithBusReq.AddReq(DFG.Conditional,DFG.Constant)
const-mul-ffffffff in 1 <43> out 1 <136377> # multiply-by-constant 4294967295
add in 2 <136376 136377> out 1 <136378>  # 'CmpLT DFG.Add - DFG.Input'
split in 1 <136378> out 238 <136379 136380 136381 136382 136383 136384 136385 136386 136387 136388 136389 136390 136391 136392 136393 136394 136395 136396 136397 136398 136399 136400 136401 136402 136403 136404 136405 136406 136407 136408 136409 136410 136411 136412 136413 136414 136415 136416 136417 136418 136419 136420 136421 136422 136423 136424 136425 136426 136427 136428 136429 136430 136431 136432 136433 136434 136435 136436 136437 136438 136439 136440 136441 136442 136443 136444 136445 136446 136447 136448 136449 136450 136451 136452 136453 136454 136455 136456 136457 136458 136459 136460 136461 136462 136463 136464 136465 136466 136467 136468 136469 136470 136471 136472 136473 136474 136475 136476 136477 136478 136479 136480 136481 136482 136483 136484 136485 136486 136487 136488 136489 136490 136491 136492 136493 136494 136495 136496 136497 136498 136499 136500 136501 136502 136503 136504 136505 136506 136507 136508 136509 136510 136511 136512 136513 136514 136515 136516 136517 136518 136519 136520 136521 136522 136523 136524 136525 136526 136527 136528 136529 136530 136531 136532 136533 136534 136535 136536 136537 136538 136539 136540 136541 136542 136543 136544 136545 136546 136547 136548 136549 136550 136551 136552 136553 136554 136555 136556 136557 136558 136559 136560 136561 136562 136563 136564 136565 136566 136567 136568 136569 136570 136571 136572 136573 136574 136575 136576 136577 136578 136579 136580 136581 136582 136583 136584 136585 136586 136587 136588 136589 136590 136591 136592 136593 136594 136595 136596 136597 136598 136599 136600 136601 136602 136603 136604 136605 136606 136607 136608 136609 136610 136611 136612 136613 136614 136615 136616> # SplitBus
mul in 2 <136410 103> out 1 <136617>     # cond trueterm
const-mul-neg-1 in 1 <136410> out 1 <136618> # cond minuscond
add in 2 <100 136618> out 1 <136619>     # cond negcond
mul in 2 <136619 102> out 1 <136620>     # cond falseterm
add in 2 <136617 136620> out 1 <136621>  # cond result
add in 2 <136375 3084> out 1 <136622>    # ArithBusReq.AddReq(DFG.Conditional,DFG.Negate)
const-mul-ffffffff in 1 <136622> out 1 <136623> # multiply-by-constant 4294967295
add in 2 <43 136623> out 1 <136624>      # 'CmpLT DFG.Input - DFG.Subtract'
split in 1 <136624> outplitBus
mul in 2 <136656 103> out 1 <136895>     # cond trueterm
const-mul-neg-1 in 1 <136656> out 1 <136896> # cond minuscond
add in 2 <100 136896> out 1 <136897>     # cond negcond
mul in 2 <136897 136621> out 1 <136898>  # cond falseterm
add in 2 <136895 136898> out 1 <136899>  # cond result
const-mul-ffffffff in 1 <42> out 1 <136900> # multiply-by-constant 4294967295
add in 2 <42 43> out 1 <136901>          # ArithBusReq.AddReq(DFG.Input,DFG.Input)
add in 2 <136901 136900> out 1 <136902>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <136902> out 1 <136903> # multiply-by-constant 4294967295
add in 2 <136901 136903> out 1 <136904>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <42> out 1 <136905> # multiply-by-constant 4294967295
add in 2 <43 136905> out 1 <136906>      # 'CmpLT DFG.Input - DFG.Input'
split in 1 <136906> out 65 <136907 136908 136909 136910 136911 136912 136913 136914 136915 136916 136917 136918 136919 136920 136921 136922 136923 136924 136925 136926 136927 136928 136929 136930 136931 136932 136933 136934 136935 136936 136937 136938 136939 136940 136941 136942 136943 136944 136945 136946 136947 136948 136949 136950 136951 136952 136953 136954 136955 136956 136957 136958 136959 136960 136961 136962 136963 136964 136965 136966 136967 136968 136969 136970 136971> # SplitBus
mul in 2 <136938 136904> out 1 <136972>  # cond trueterm
const-mul-neg-1 in 1 <136938> out 1 <136973> # cond minuscond
add in 2 <100 136973> out 1 <136974>     # cond negcond
mul in 2 <136974 43> out 1 <136975>      # cond falseterm
add in 2 <136972 136975> out 1 <136976>  # cond result
const-mul-ffffffff in 1 <136976> out 1 <136977> # multiply-by-constant 4294967295
add in 2 <136976 44> out 1 <136978>      # ArithBusReq.AddReq(DFG.Conditional,DFG.Input)
add in 2 <136978 136977> out 1 <136979>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <136979> out 1 <136980> # multiply-by-constant 4294967295
add in 2 <136978 136980> out 1 <136981>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <136976> out 1 <136982> # multiply-by-constant 4294967295
add in 2 <44 136982> out 1 <136983>      # 'CmpLT DFG.Input - DFG.Conditional'
split in 1 <136983> out 131 <136984 136985 136986 136987 136988 136989 136990 136991 136992 136993 136994 136995 136996 136997 136998 136999 137000 137001 137002 137003 137004 137005 137006 137007 137008 137009 137010 137011 137012 137013 137014 137015 137016 137017 137018 137019 137020 137021 137022 137023 137024 137025 137026 137027 137028 137029 137030 137031 137032 137033 137034 137035 137036 137037 137038 137039 137040 137041 137042 137043 137044 137045 137046 137047 137048 137049 137050 137051 137052 137053 137054 137055 137056 137057 137058 137059 137060 137061 137062 137063 137064 137065 137066 137067 137068 137069 137070 137071 137072 137073 137074 137075 137076 137077 137078 137079 137080 137081 137082 137083 137084 137085 137086 137087 137088 137089 137090 137091 137092 137093 137094 137095 137096 137097 137098 137099 137100 137101 137102 137103 137104 137105 137106 137107 137108 137109 137110 137111 137112 137113 137114> # SplitBus
mul in 2 <137015 136981> out 1 <137115>  # cond trueterm
const-mul-neg-1 in 1 <137015> out 1 <137116> # cond minuscond
add in 2 <100 137116> out 1 <137117>     # cond negcond
mul in 2 <137117 44> out 1 <137118>      # cond falseterm
add in 2 <137115 137118> out 1 <137119>  # cond result
const-mul-ffffffff in 1 <137119> out 1 <137120> # multiply-by-constant 4294967295
add in 2 <137119 45> out 1 <137121>      # ArithBusReq.AddReq(DFG.Conditional,DFG.Input)
add in 2 <137121 137120> out 1 <137122>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <137119> out 1 <137123> # multiply-by-constant 4294967295
add in 2 <45 137123> out 1 <137124>      # 'CmpLT DFG.Input - DFG.Conditional'
split in 1 <137124> out 197 <137125 137126 137127 137128 137129 137130 137131 137132 137133 137134 137135 137136 137137 137138 137139 137140 137141 137142 137143 137144 137145 137146 137147 137148 137149 137150 137151 137152 137153 137154 137155 137156 137157 137158 137159 137160 137161 137162 137163 137164 137165 137166 137167 137168 137169 137170 137171 137172 137173 137174 137175 137176 137177 137178 137179 137180 137181 137182 137183 137184 137185 137186 137187 137188 137189 137190 137191 137192 137193 137194 137195 137196 137197 137198 137199 137200 137201 137202 137203 137204 137205 137206 137207 137208 137209 137210 137211 137212 137213 137214 137215 137216 137217 137218 137219 137220 137221 137222 137223 137224 137225 137226 137227 137228 137229 137230 137231 137232 137233 137234 137235 137236 137237 137238 137239 137240 137241 137242 137243 137244 137245 137246 137247 137248 137249 137250 137251 137252 137253 137254 137255 137256 137257 137258 137259 137260 137261 137262 137263 137264 137265 137266 137267 137268 137269 137270 137271 137272 137273 137274 137275 137276 137277 137278 137279 137280 137281 137282 137283 137284 137285 137286 137287 137288 137289 137290 137291 137292 137293 137294 137295 137296 137297 137298 137299 137300 137301 137302 137303 137304 137305 137306 137307 137308 137309 137310 137311 137312 137313 137314 137315 137316 137317 137318 137319 137320 137321> # SplitBus
mul in 2 <137156 137122> out 1 <137322>  # cond trueterm
const-mul-neg-1 in 1 <137156> out 1 <137323> # cond minuscond
add in 2 <100 137323> out 1 <137324>     # cond negcond
mul in 2 <137324 137119> out 1 <137325>  # cond falseterm
add in 2 <137322 137325> out 1 <137326>  # cond result
mul in 2 <137015 136979> out 1 <137327>  # cond trueterm
const-mul-neg-1 in 1 <137015> out 1 <137328> # cond minuscond
add in 2 <100 137328> out 1 <137329>     # cond negcond
mul in 2 <137329 136976> out 1 <137330>  # cond falseterm
add in 2 <137327 137330> out 1 <137331>  # cond result
mul in 2 <136938 136902> out 1 <137332>  # cond trueterm
const-mul-neg-1 in 1 <136938> out 1 <137333> # cond minuscond
add in 2 <100 137333> out 1 <137334>     # cond negcond
mul in 2 <137334 42> out 1 <137335>      # cond falseterm
add in 2 <137332 137335> out 1 <137336>  # cond result
const-mul-ffffffff in 1 <137336> out 1 <137337> # multiply-by-constant 4294967295
add in 2 <137336 137331> out 1 <137338>  # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
add in 2 <137338 137337> out 1 <137339>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <137339> out 1 <137340> # multiply-by-constant 4294967295
add in 2 <137338 137340> out 1 <137341>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <137336> out 1 <137342> # multiply-by-constant 4294967295
add in 2 <137331 137342> out 1 <137343>  # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <137343> out 132 <137344 137345 137346 137347 137348 137349 137350 137351 137352 137353 137354 137355 137356 137357 137358 137359 137360 137361 137362 137363 137364 137365 137366 137367 137368 137369 137370 137371 137372 137373 137374 137375 137376 137377 137378 137379 137380 137381 137382 137383 137384 137385 137386 137387 137388 137389 137390 137391 137392 137393 137394 137395 137396 137397 137398 137399 137400 137401 137402 137403 137404 137405 137406 137407 137408 137409 137410 137411 137412 137413 137414 137415 137416 137417 137418 137419 137420 137421 137422 137423 137424 137425 137426 137427 137428 137429 137430 137431 137432 137433 137434 137435 137436 137437 137438 137439 137440 137441 137442 137443 137444 137445 137446 137447 137448 137449 137450 137451 137452 137453 137454 137455 137456 137457 137458 137459 137460 137461 137462 137463 137464 137465 137466 137467 137468 137469 137470 137471 137472 137473 137474 137475> # SplitBus
mul in 2 <137375 137341> out 1 <137476>  # cond trueterm
const-mul-neg-1 in 1 <137375> out 1 <137477> # cond minuscond
add in 2 <100 137477> out 1 <137478>     # cond negcond
mul in 2 <137478 137331> out 1 <137479>  # cond falseterm
add in 2 <137476 137479> out 1 <137480>  # cond result
const-mul-ffffffff in 1 <137480> out 1 <137481> # multiply-by-constant 4294967295
add in 2 <137480 137326> out 1 <137482>  # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
add in 2 <137482 137481> out 1 <137483>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <137483> out 1 <137484> # multiply-by-constant 4294967295
add in 2 <137482 137484> out 1 <137485>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <137480> out 1 <137486> # multiply-by-constant 4294967295
add in 2 <137326 137486> out 1 <137487>  # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <137487> out 199 <137488 137489 137490 137491 137492 137493 137494 137495 137496 137497 137498 137499 137500 137501 137502 137503 137504 137505 137506 137507 137508 137509 137510 137511 137512 137513 137514 137515 137516 137517 137518 137519 137520 137521 137522 137523 137524 137525 137526 137527 137528 137529 137530 137531 137532 137533 137534 137535 137536 137537 137538 137539 137540 137541 137542 137543 137544 137545 137546 137547 137548 137549 137550 137551 137552 137553 137554 137555 137556 137557 137558 137559 137560 137561 137562 137563 137564 137565 137566 137567 137568 137569 137570 137571 137572 137573 137574 137575 137576 137577 137578 137579 137580 137581 137582 137583 137584 137585 137586 137587 137588 137589 137590 137591 137592 137593 137594 137595 137596 137597 137598 137599 137600 137601 137602 137603 137604 137605 137606 137607 137608 137609 137610 137611 137612 137613 137614 137615 137616 137617 137618 137619 137620 137621 137622 137623 137624 137625 137626 137627 137628 137629 137630 137631 137632 137633 137634 137635 137636 137637 137638 137639 137640 137641 137642 137643 137644 137645 137646 137647 137648 137649 137650 137651 137652 137653 137654 137655 137656 137657 137658 137659 137660 137661 137662 137663 137664 137665 137666 137667 137668 137669 137670 137671 137672 137673 137674 137675 137676 137677 137678 137679 137680 137681 137682 137683 137684 137685 137686> # SplitBus
mul in 2 <137519 137485> out 1 <137687>  # cond trueterm
const-mul-neg-1 in 1 <137519> out 1 <137688> # cond minuscond
add in 2 <100 137688> out 1 <137689>     # cond negcond
mul in 2 <137689 137326> out 1 <137690>  # cond falseterm
add in 2 <137687 137690> out 1 <137691>  # cond result
const-mul-ffffffff in 1 <137691> out 1 <137692> # multiply-by-constant 4294967295
const-mul-ffffffff in 1 <137122> out 1 <137693> # multiply-by-constant 4294967295
add in 2 <137121 137693> out 1 <137694>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
mul in 2 <137156 137694> out 1 <137695>  # cond trueterm
const-mul-neg-1 in 1 <137156> out 1 <137696> # cond minuscond
add in 2 <100 137696> out 1 <137697>     # cond negcond
mul in 2 <137697 45> out 1 <137698>      # cond falseterm
add in 2 <137695 137698> out 1 <137699>  # cond result
const-mul-ffffffff in 1 <137699> out 1 <137700> # multiply-by-constant 4294967295
add in 2 <137699 46> out 1 <137701>      # ArithBusReq.AddReq(DFG.Conditional,DFG.Input)
split in 1 <137701> outplitBus
const-mul-2 in 1 <137733> out 1 <137933> # join source bit 31
add in 2 <137732 137933> out 1 <137934>  # join source bit 30
const-mul-2 in 1 <137934> out 1 <137935> # join
add in 2 <137731 137935> out 1 <137936>  # join source bit 29
const-mul-2 in 1 <137936> out 1 <137937> # join
add in 2 <137730 137937> out 1 <137938>  # join source bit 28
const-mul-2 in 1 <137938> out 1 <137939> # join
add in 2 <137729 137939> out 1 <137940>  # join source bit 27
const-mul-2 in 1 <137940> out 1 <137941> # join
add in 2 <137728 137941> out 1 <137942>  # join source bit 26
const-mul-2 in 1 <137942> out 1 <137943> # join
add in 2 <137727 137943> out 1 <137944>  # join source bit 25
const-mul-2 in 1 <137944> out 1 <137945> # join
add in 2 <137726 137945> out 1 <137946>  # join source bit 24
const-mul-2 in 1 <137946> out 1 <137947> # join
add in 2 <137725 137947> out 1 <137948>  # join source bit 23
const-mul-2 in 1 <137948> out 1 <137949> # join
add in 2 <137724 137949> out 1 <137950>  # join source bit 22
const-mul-2 in 1 <137950> out 1 <137951> # join
add in 2 <137723 137951> out 1 <137952>  # join source bit 21
const-mul-2 in 1 <137952> out 1 <137953> # join
add in 2 <137722 137953> out 1 <137954>  # join source bit 20
const-mul-2 in 1 <137954> out 1 <137955> # join
add in 2 <137721 137955> out 1 <137956>  # join source bit 19
const-mul-2 in 1 <137956> out 1 <137957> # join
add in 2 <137720 137957> out 1 <137958>  # join source bit 18
const-mul-2 in 1 <137958> out 1 <137959> # join
add in 2 <137719 137959> out 1 <137960>  # join source bit 17
const-mul-2 in 1 <137960> out 1 <137961> # join
add in 2 <137718 137961> out 1 <137962>  # join source bit 16
const-mul-2 in 1 <137962> out 1 <137963> # join
add in 2 <137717 137963> out 1 <137964>  # join source bit 15
const-mul-2 in 1 <137964> out 1 <137965> # join
add in 2 <137716 137965> out 1 <137966>  # join source bit 14
const-mul-2 in 1 <137966> out 1 <137967> # join
add in 2 <137715 137967> out 1 <137968>  # join source bit 13
const-mul-2 in 1 <137968> out 1 <137969> # join
add in 2 <137714 137969> out 1 <137970>  # join source bit 12
const-mul-2 in 1 <137970> out 1 <137971> # join
add in 2 <137713 137971> out 1 <137972>  # join source bit 11
const-mul-2 in 1 <137972> out 1 <137973> # join
add in 2 <137712 137973> out 1 <137974>  # join source bit 10
const-mul-2 in 1 <137974> out 1 <137975> # join
add in 2 <137711 137975> out 1 <137976>  # join source bit 9
const-mul-2 in 1 <137976> out 1 <137977> # join
add in 2 <137710 137977> out 1 <137978>  # join source bit 8
const-mul-2 in 1 <137978> out 1 <137979> # join
add in 2 <137709 137979> out 1 <137980>  # join source bit 7
const-mul-2 in 1 <137980> out 1 <137981> # join
add in 2 <137708 137981> out 1 <137982>  # join source bit 6
const-mul-2 in 1 <137982> out 1 <137983> # join
add in 2 <137707 137983> out 1 <137984>  # join source bit 5
const-mul-2 in 1 <137984> out 1 <137985> # join
add in 2 <137706 137985> out 1 <137986>  # join source bit 4
const-mul-2 in 1 <137986> out 1 <137987> # join
add in 2 <137705 137987> out 1 <137988>  # join source bit 3
const-mul-2 in 1 <137988> out 1 <137989> # join
add in 2 <137704 137989> out 1 <137990>  # join source bit 2
const-mul-2 in 1 <137990> out 1 <137991> # join
add in 2 <137703 137991> out 1 <137992>  # join source bit 1
const-mul-2 in 1 <137992> out 1 <137993> # join
add in 2 <137702 137993> out 1 <137994>  # join source bit 0
add in 2 <137994 137994> out 1 <137995>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <137699> out 1 <137996> # multiply-by-constant 4294967295
add in 2 <46 137996> out 1 <137997>      # 'CmpLT DFG.Input - DFG.Conditional'
split in 1 <137997> outplitBus
mul in 2 <138029 137995> out 1 <138261>  # cond trueterm
const-mul-neg-1 in 1 <138029> out 1 <138262> # cond minuscond
add in 2 <100 138262> out 1 <138263>     # cond negcond
mul in 2 <138263 137699> out 1 <138264>  # cond falseterm
add in 2 <138261 138264> out 1 <138265>  # cond result
add in 2 <137691 138265> out 1 <138266>  # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
split in 1 <138266> out 233 <138267 138268 138269 138270 138271 138272 138273 138274 138275 138276 138277 138278 138279 138280 138281 138282 138283 138284 138285 138286 138287 138288 138289 138290 138291 138292 138293 138294 138295 138296 138297 138298 138299 138300 138301 138302 138303 138304 138305 138306 138307 138308 138309 138310 138311 138312 138313 138314 138315 138316 138317 138318 138319 138320 138321 138322 138323 138324 138325 138326 138327 138328 138329 138330 138331 138332 138333 138334 138335 138336 138337 138338 138339 138340 138341 138342 138343 138344 138345 138346 138347 138348 138349 138350 138351 138352 138353 138354 138355 138356 138357 138358 138359 138360 138361 138362 138363 138364 138365 138366 138367 138368 138369 138370 138371 138372 138373 138374 138375 138376 138377 138378 138379 138380 138381 138382 138383 138384 138385 138386 138387 138388 138389 138390 138391 138392 138393 138394 138395 138396 138397 138398 138399 138400 138401 138402 138403 138404 138405 138406 138407 138408 138409 138410 138411 138412 138413 138414 138415 138416 138417 138418 138419 138420 138421 138422 138423 138424 138425 138426 138427 138428 138429 138430 138431 138432 138433 138434 138435 138436 138437 138438 138439 138440 138441 138442 138443 138444 138445 138446 138447 138448 138449 138450 138451 138452 138453 138454 138455 138456 138457 138458 138459 138460 138461 138462 138463 138464 138465 138466 138467 138468 138469 138470 138471 138472 138473 138474 138475 138476 138477 138478 138479 138480 138481 138482 138483 138484 138485 138486 138487 138488 138489 138490 138491 138492 138493 138494 138495 138496 138497 138498 138499> # SplitBus
const-mul-2 in 1 <138298> out 1 <138500> # join source bit 31
add in 2 <138297 138500> out 1 <138501>  # join source bit 30
const-mul-2 in 1 <138501> out 1 <138502> # join
add in 2 <138296 138502> out 1 <138503>  # join source bit 29
const-mul-2 in 1 <138503> out 1 <138504> # join
add in 2 <138295 138504> out 1 <138505>  # join source bit 28
const-mul-2 in 1 <138505> out 1 <138506> # join
add in 2 <138294 138506> out 1 <138507>  # join source bit 27
const-mul-2 in 1 <138507> out 1 <138508> # join
add in 2 <138293 138508> out 1 <138509>  # join source bit 26
const-mul-2 in 1 <138509> out 1 <138510> # join
add in 2 <138292 138510> out 1 <138511>  # join source bit 25
const-mul-2 in 1 <138511> out 1 <138512> # join
add in 2 <138291 138512> out 1 <138513>  # join source bit 24
const-mul-2 in 1 <138513> out 1 <138514> # join
add in 2 <138290 138514> out 1 <138515>  # join source bit 23
const-mul-2 in 1 <138515> out 1 <138516> # join
add in 2 <138289 138516> out 1 <138517>  # join source bit 22
const-mul-2 in 1 <138517> out 1 <138518> # join
add in 2 <138288 138518> out 1 <138519>  # join source bit 21
const-mul-2 in 1 <138519> out 1 <138520> # join
add in 2 <138287 138520> out 1 <138521>  # join source bit 20
const-mul-2 in 1 <138521> out 1 <138522> # join
add in 2 <138286 138522> out 1 <138523>  # join source bit 19
const-mul-2 in 1 <138523> out 1 <138524> # join
add in 2 <138285 138524> out 1 <138525>  # join source bit 18
const-mul-2 in 1 <138525> out 1 <138526> # join
add in 2 <138284 138526> out 1 <138527>  # join source bit 17
const-mul-2 in 1 <138527> out 1 <138528> # join
add in 2 <138283 138528> out 1 <138529>  # join source bit 16
const-mul-2 in 1 <138529> out 1 <138530> # join
add in 2 <138282 138530> out 1 <138531>  # join source bit 15
const-mul-2 in 1 <138531> out 1 <138532> # join
add in 2 <138281 138532> out 1 <138533>  # join source bit 14
const-mul-2 in 1 <138533> out 1 <138534> # join
add in 2 <138280 138534> out 1 <138535>  # join source bit 13
const-mul-2 in 1 <138535> out 1 <138536> # join
add in 2 <138279 138536> out 1 <138537>  # join source bit 12
const-mul-2 in 1 <138537> out 1 <138538> # join
add in 2 <138278 138538> out 1 <138539>  # join source bit 11
const-mul-2 in 1 <138539> out 1 <138540> # join
add in 2 <138277 138540> out 1 <138541>  # join source bit 10
const-mul-2 in 1 <138541> out 1 <138542> # join
add in 2 <138276 138542> out 1 <138543>  # join source bit 9
const-mul-2 in 1 <138543> out 1 <138544> # join
add in 2 <138275 138544> out 1 <138545>  # join source bit 8
const-mul-2 in 1 <138545> out 1 <138546> # join
add in 2 <138274 138546> out 1 <138547>  # join source bit 7
const-mul-2 in 1 <138547> out 1 <138548> # join
add in 2 <138273 138548> out 1 <138549>  # join source bit 6
const-mul-2 in 1 <138549> out 1 <138550> # join
add in 2 <138272 138550> out 1 <138551>  # join source bit 5
const-mul-2 in 1 <138551> out 1 <138552> # join
add in 2 <138271 138552> out 1 <138553>  # join source bit 4
const-mul-2 in 1 <138553> out 1 <138554> # join
add in 2 <138270 138554> out 1 <138555>  # join source bit 3
const-mul-2 in 1 <138555> out 1 <138556> # join
add in 2 <138269 138556> out 1 <138557>  # join source bit 2
const-mul-2 in 1 <138557> out 1 <138558> # join
add in 2 <138268 138558> out 1 <138559>  # join source bit 1
const-mul-2 in 1 <138559> out 1 <138560> # join
add in 2 <138267 138560> out 1 <138561>  # join source bit 0
add in 2 <138561 138561> out 1 <138562>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <137691> out 1 <138563> # multiply-by-constant 4294967295
add in 2 <138265 138563> out 1 <138564>  # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <138564> out 265 <138565 138566 138567 138568 138569 138570 138571 138572 138573 138574 138575 138576 138577 138578 138579 138580 138581 138582 138583 138584 138585 138586 138587 138588 138589 138590 138591 138592 138593 138594 138595 138596 138597 138598 138599 138600 138601 138602 138603 138604 138605 138606 138607 138608 138609 138610 138611 138612 138613 138614 138615 138616 138617 138618 138619 138620 138621 138622 138623 138624 138625 138626 138627 138628 138629 138630 138631 138632 138633 138634 138635 138636 138637 138638 138639 138640 138641 138642 138643 138644 138645 138646 138647 138648 138649 138650 138651 138652 138653 138654 138655 138656 138657 138658 138659 138660 138661 138662 138663 138664 138665 138666 138667 138668 138669 138670 138671 138672 138673 138674 138675 138676 138677 138678 138679 138680 138681 138682 138683 138684 138685 138686 138687 138688 138689 138690 138691 138692 138693 138694 138695 138696 138697 138698 138699 138700 138701 138702 138703 138704 138705 138706 138707 138708 138709 138710 138711 138712 138713 138714 138715 138716 138717 138718 138719 138720 138721 138722 138723 138724 138725 138726 138727 138728 138729 138730 138731 138732 138733 138734 138735 138736 138737 138738 138739 138740 138741 138742 138743 138744 138745 138746 138747 138748 138749 138750 138751 138752 138753 138754 138755 138756 138757 138758 138759 138760 138761 138762 138763 138764 138765 138766 138767 138768 138769 138770 138771 138772 138773 138774 138775 138776 138777 138778 138779 138780 138781 138782 138783 138784 138785 138786 138787 138788 138789 138790 138791 138792 138793 138794 138795 138796 138797 138798 138799 138800 138801 138802 138803 138804 138805 138806 138807 138808 138809 138810 138811 138812 138813 138814 138815 138816 138817 138818 138819 138820 138821 138822 138823 138824 138825 138826 138827 138828 138829> # SplitBus
mul in 2 <138596 138562> out 1 <138830>  # cond trueterm
const-mul-neg-1 in 1 <138596> out 1 <138831> # cond minuscond
add in 2 <100 138831> out 1 <138832>     # cond negcond
mul in 2 <138832 137691> out 1 <138833>  # cond falseterm
add in 2 <138830 138833> out 1 <138834>  # cond result
mul in 2 <137519 137483> out 1 <138835>  # cond trueterm
const-mul-neg-1 in 1 <137519> out 1 <138836> # cond minuscond
add in 2 <100 138836> out 1 <138837>     # cond negcond
mul in 2 <138837 137480> out 1 <138838>  # cond falseterm
add in 2 <138835 138838> out 1 <138839>  # cond result
mul in 2 <137375 137339> out 1 <138840>  # cond trueterm
const-mul-neg-1 in 1 <137375> out 1 <138841> # cond minuscond
add in 2 <100 138841> out 1 <138842>     # cond negcond
mul in 2 <138842 137336> out 1 <138843>  # cond falseterm
add in 2 <138840 138843> out 1 <138844>  # cond result
const-mul-ffffffff in 1 <138844> out 1 <138845> # multiply-by-constant 4294967295
add in 2 <138844 138839> out 1 <138846>  # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
add in 2 <138846 138845> out 1 <138847>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <138847> out 1 <138848> # multiply-by-constant 4294967295
add in 2 <138846 138848> out 1 <138849>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <138844> out 1 <138850> # multiply-by-constant 4294967295
add in 2 <138839 138850> out 1 <138851>  # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <138851> out 200 <138852 138853 138854 138855 138856 138857 138858 138859 138860 138861 138862 138863 138864 138865 138866 138867 138868 138869 138870 138871 138872 138873 138874 138875 138876 138877 138878 138879 138880 138881 138882 138883 138884 138885 138886 138887 138888 138889 138890 138891 138892 138893 138894 138895 138896 138897 138898 138899 138900 138901 138902 138903 138904 138905 138906 138907 138908 138909 138910 138911 138912 138913 138914 138915 138916 138917 138918 138919 138920 138921 138922 138923 138924 138925 138926 138927 138928 138929 138930 138931 138932 138933 138934 138935 138936 138937 138938 138939 138940 138941 138942 138943 138944 138945 138946 138947 138948 138949 138950 138951 138952 138953 138954 138955 138956 138957 138958 138959 138960 138961 138962 138963 138964 138965 138966 138967 138968 138969 138970 138971 138972 138973 138974 138975 138976 138977 138978 138979 138980 138981 138982 138983 138984 138985 138986 138987 138988 138989 138990 138991 138992 138993 138994 138995 138996 138997 138998 138999 139000 139001 139002 139003 139004 139005 139006 139007 139008 139009 139010 139011 139012 139013 139014 139015 139016 139017 139018 139019 139020 139021 139022 139023 139024 139025 139026 139027 139028 139029 139030 139031 139032 139033 139034 139035 139036 139037 139038 139039 139040 139041 139042 139043 139044 139045 139046 139047 139048 139049 139050 139051> # SplitBus
mul in 2 <138883 138849> out 1 <139052>  # cond trueterm
const-mul-neg-1 in 1 <138883> out 1 <139053> # cond minuscond
add in 2 <100 139053> out 1 <139054>     # cond negcond
mul in 2 <139054 138839> out 1 <139055>  # cond falseterm
add in 2 <139052 139055> out 1 <139056>  # cond result
const-mul-ffffffff in 1 <139056> out 1 <139057> # multiply-by-constant 4294967295
add in 2 <139056 138834> out 1 <139058>  # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
split in 1 <139058> out 235 <139059 139060 139061 139062 139063 139064 139065 139066 139067 139068 139069 139070 139071 139072 139073 139074 139075 139076 139077 139078 139079 139080 139081 139082 139083 139084 139085 139086 139087 139088 139089 139090 139091 139092 139093 139094 139095 139096 139097 139098 139099 139100 139101 139102 139103 139104 139105 139106 139107 139108 139109 139110 139111 139112 139113 139114 139115 139116 139117 139118 139119 139120 139121 139122 139123 139124 139125 139126 139127 139128 139129 139130 139131 139132 139133 139134 139135 139136 139137 139138 139139 139140 139141 139142 139143 139144 139145 139146 139147 139148 139149 139150 139151 139152 139153 139154 139155 139156 139157 139158 139159 139160 139161 139162 139163 139164 139165 139166 139167 139168 139169 139170 139171 139172 139173 139174 139175 139176 139177 139178 139179 139180 139181 139182 139183 139184 139185 139186 139187 139188 139189 139190 139191 139192 139193 139194 139195 139196 139197 139198 139199 139200 139201 139202 139203 139204 139205 139206 139207 139208 139209 139210 139211 139212 139213 139214 139215 139216 139217 139218 139219 139220 139221 139222 139223 139224 139225 139226 139227 139228 139229 139230 139231 139232 139233 139234 139235 139236 139237 139238 139239 139240 139241 139242 139243 139244 139245 139246 139247 139248 139249 139250 139251 139252 139253 139254 139255 139256 139257 139258 139259 139260 139261 139262 139263 139264 139265 139266 139267 139268 139269 139270 139271 139272 139273 139274 139275 139276 139277 139278 139279 139280 139281 139282 139283 139284 139285 139286 139287 139288 139289 139290 139291 139292 139293> # SplitBus
const-mul-2 in 1 <139090> out 1 <139294> # join source bit 31
add in 2 <139089 139294> out 1 <139295>  # join source bit 30
const-mul-2 in 1 <139295> out 1 <139296> # join
add in 2 <139088 139296> out 1 <139297>  # join source bit 29
const-mul-2 in 1 <139297> out 1 <139298> # join
add in 2 <139087 139298> out 1 <139299>  # join source bit 28
const-mul-2 in 1 <139299> out 1 <139300> # join
add in 2 <139086 139300> out 1 <139301>  # join source bit 27
const-mul-2 in 1 <139301> out 1 <139302> # join
add in 2 <139085 139302> out 1 <139303>  # join source bit 26
const-mul-2 in 1 <139303> out 1 <139304> # join
add in 2 <139084 139304> out 1 <139305>  # join source bit 25
const-mul-2 in 1 <139305> out 1 <139306> # join
add in 2 <139083 139306> out 1 <139307>  # join source bit 24
const-mul-2 in 1 <139307> out 1 <139308> # join
add in 2 <139082 139308> out 1 <139309>  # join source bit 23
const-mul-2 in 1 <139309> out 1 <139310> # join
add in 2 <139081 139310> out 1 <139311>  # join source bit 22
const-mul-2 in 1 <139311> out 1 <139312> # join
add in 2 <139080 139312> out 1 <139313>  # join source bit 21
const-mul-2 in 1 <139313> out 1 <139314> # join
add in 2 <139079 139314> out 1 <139315>  # join source bit 20
const-mul-2 in 1 <139315> out 1 <139316> # join
add in 2 <139078 139316> out 1 <139317>  # join source bit 19
const-mul-2 in 1 <139317> out 1 <139318> # join
add in 2 <139077 139318> out 1 <139319>  # join source bit 18
const-mul-2 in 1 <139319> out 1 <139320> # join
add in 2 <139076 139320> out 1 <139321>  # join source bit 17
const-mul-2 in 1 <139321> out 1 <139322> # join
add in 2 <139075 139322> out 1 <139323>  # join source bit 16
const-mul-2 in 1 <139323> out 1 <139324> # join
add in 2 <139074 139324> out 1 <139325>  # join source bit 15
const-mul-2 in 1 <139325> out 1 <139326> # join
add in 2 <139073 139326> out 1 <139327>  # join source bit 14
const-mul-2 in 1 <139327> out 1 <139328> # join
add in 2 <139072 139328> out 1 <139329>  # join source bit 13
const-mul-2 in 1 <139329> out 1 <139330> # join
add in 2 <139071 139330> out 1 <139331>  # join source bit 12
const-mul-2 in 1 <139331> out 1 <139332> # join
add in 2 <139070 139332> out 1 <139333>  # join source bit 11
const-mul-2 in 1 <139333> out 1 <139334> # join
add in 2 <139069 139334> out 1 <139335>  # join source bit 10
const-mul-2 in 1 <139335> out 1 <139336> # join
add in 2 <139068 139336> out 1 <139337>  # join source bit 9
const-mul-2 in 1 <139337> out 1 <139338> # join
add in 2 <139067 139338> out 1 <139339>  # join source bit 8
const-mul-2 in 1 <139339> out 1 <139340> # join
add in 2 <139066 139340> out 1 <139341>  # join source bit 7
const-mul-2 in 1 <139341> out 1 <139342> # join
add in 2 <139065 139342> out 1 <139343>  # join source bit 6
const-mul-2 in 1 <139343> out 1 <139344> # join
add in 2 <139064 139344> out 1 <139345>  # join source bit 5
const-mul-2 in 1 <139345> out 1 <139346> # join
add in 2 <139063 139346> out 1 <139347>  # join source bit 4
const-mul-2 in 1 <139347> out 1 <139348> # join
add in 2 <139062 139348> out 1 <139349>  # join source bit 3
const-mul-2 in 1 <139349> out 1 <139350> # join
add in 2 <139061 139350> out 1 <139351>  # join source bit 2
const-mul-2 in 1 <139351> out 1 <139352> # join
add in 2 <139060 139352> out 1 <139353>  # join source bit 1
const-mul-2 in 1 <139353> out 1 <139354> # join
add in 2 <139059 139354> out 1 <139355>  # join source bit 0
add in 2 <139355 139355> out 1 <139356>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <139356> out 1 <139357> # multiply-by-constant 4294967295
add in 2 <139058 139357> out 1 <139358>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <139056> out 1 <139359> # multiply-by-constant 4294967295
add in 2 <138834 139359> out 1 <139360>  # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <139360> out 267 <139361 139362 139363 139364 139365 139366 139367 139368 139369 139370 139371 139372 139373 139374 139375 139376 139377 139378 139379 139380 139381 139382 139383 139384 139385 139386 139387 139388 139389 139390 139391 139392 139393 139394 139395 139396 139397 139398 139399 139400 139401 139402 139403 139404 139405 139406 139407 139408 139409 139410 139411 139412 139413 139414 139415 139416 139417 139418 139419 139420 139421 139422 139423 139424 139425 139426 139427 139428 139429 139430 139431 139432 139433 139434 139435 139436 139437 139438 139439 139440 139441 139442 139443 139444 139445 139446 139447 139448 139449 139450 139451 139452 139453 139454 139455 139456 139457 139458 139459 139460 139461 139462 139463 139464 139465 139466 139467 139468 139469 139470 139471 139472 139473 139474 139475 139476 139477 139478 139479 139480 139481 139482 139483 139484 139485 139486 139487 139488 139489 139490 139491 139492 139493 139494 139495 139496 139497 139498 139499 139500 139501 139502 139503 139504 139505 139506 139507 139508 139509 139510 139511 139512 139513 139514 139515 139516 139517 139518 139519 139520 139521 139522 139523 139524 139525 139526 139527 139528 139529 139530 139531 139532 139533 139534 139535 139536 139537 139538 139539 139540 139541 139542 139543 139544 139545 139546 139547 139548 139549 139550 139551 139552 139553 139554 139555 139556 139557 139558 139559 139560 139561 139562 139563 139564 139565 139566 139567 139568 139569 139570 139571 139572 139573 139574 139575 139576 139577 139578 139579 139580 139581 139582 139583 139584 139585 139586 139587 139588 139589 139590 139591 139592 139593 139594 139595 139596 139597 139598 139599 139600 139601 139602 139603 139604 139605 139606 139607 139608 139609 139610 139611 139612 139613 139614 139615 139616 139617 139618 139619 139620 139621 139622 139623 139624 139625 139626 139627> # SplitBus
mul in 2 <139392 139358> out 1 <139628>  # cond trueterm
const-mul-neg-1 in 1 <139392> out 1 <139629> # cond minuscond
add in 2 <100 139629> out 1 <139630>     # cond negcond
mul in 2 <139630 138834> out 1 <139631>  # cond falseterm
add in 2 <139628 139631> out 1 <139632>  # cond result
add in 2 <139632 104> out 1 <139633>     # ArithBusReq.AddReq(DFG.Conditional,DFG.Constant)
const-mul-ffffffff in 1 <44> out 1 <139634> # multiply-by-constant 4294967295
add in 2 <139633 139634> out 1 <139635>  # 'CmpLT DFG.Add - DFG.Input'
split in 1 <139635> out 238 <139636 139637 139638 139639 139640 139641 139642 139643 139644 139645 139646 139647 139648 139649 139650 139651 139652 139653 139654 139655 139656 139657 139658 139659 139660 139661 139662 139663 139664 139665 139666 139667 139668 139669 139670 139671 139672 139673 139674 139675 139676 139677 139678 139679 139680 139681 139682 139683 139684 139685 139686 139687 139688 139689 139690 139691 139692 139693 139694 139695 139696 139697 139698 139699 139700 139701 139702 139703 139704 139705 139706 139707 139708 139709 139710 139711 139712 139713 139714 139715 139716 139717 139718 139719 139720 139721 139722 139723 139724 139725 139726 139727 139728 139729 139730 139731 139732 139733 139734 139735 139736 139737 139738 139739 139740 139741 139742 139743 139744 139745 139746 139747 139748 139749 139750 139751 139752 139753 139754 139755 139756 139757 139758 139759 139760 139761 139762 139763 139764 139765 139766 139767 139768 139769 139770 139771 139772 139773 139774 139775 139776 139777 139778 139779 139780 139781 139782 139783 139784 139785 139786 139787 139788 139789 139790 139791 139792 139793 139794 139795 139796 139797 139798 139799 139800 139801 139802 139803 139804 139805 139806 139807 139808 139809 139810 139811 139812 139813 139814 139815 139816 139817 139818 139819 139820 139821 139822 139823 139824 139825 139826 139827 139828 139829 139830 139831 139832 139833 139834 139835 139836 139837 139838 139839 139840 139841 139842 139843 139844 139845 139846 139847 139848 139849 139850 139851 139852 139853 139854 139855 139856 139857 139858 139859 139860 139861 139862 139863 139864 139865 139866 139867 139868 139869 139870 139871 139872 139873> # SplitBus
mul in 2 <139667 103> out 1 <139874>     # cond trueterm
const-mul-neg-1 in 1 <139667> out 1 <139875> # cond minuscond
add in 2 <100 139875> out 1 <139876>     # cond negcond
mul in 2 <139876 102> out 1 <139877>     # cond falseterm
add in 2 <139874 139877> out 1 <139878>  # cond result
add in 2 <139632 3084> out 1 <139879>    # ArithBusReq.AddReq(DFG.Conditional,DFG.Negate)
const-mul-ffffffff in 1 <139879> out 1 <139880> # multiply-by-constant 4294967295
add in 2 <44 139880> out 1 <139881>      # 'CmpLT DFG.Input - DFG.Subtract'
split in 1 <139881> out 270 <139882 139883 139884 139885 139886 139887 139888 139889 139890 139891 139892 139893 139894 139895 139896 139897 139898 139899 139900 139901 139902 139903 139904 139905 139906 139907 139908 139909 139910 139911 139912 139913 139914 139915 139916 139917 139918 139919 139920 139921 139922 139923 139924 139925 139926 139927 139928 139929 139930 139931 139932 139933 139934 139935 139936 139937 139938 139939 139940 139941 139942 139943 139944 139945 139946 139947 139948 139949 139950 139951 139952 139953 139954 139955 139956 139957 139958 139959 139960 139961 139962 139963 139964 139965 139966 139967 139968 139969 139970 139971 139972 139973 139974 139975 139976 139977 139978 139979 139980 139981 139982 139983 139984 139985 139986 139987 139988 139989 139990 139991 139992 139993 139994 139995 139996 139997 139998 139999 140000 140001 140002 140003 140004 140005 140006 140007 140008 140009 140010 140011 140012 140013 140014 140015 140016 140017 140018 140019 140020 140021 140022 140023 140024 140025 140026 140027 140028 140029 140030 140031 140032 140033 140034 140035 140036 140037 140038 140039 140040 140041 140042 140043 140044 140045 140046 140047 140048 140049 140050 140051 140052 140053 140054 140055 140056 140057 140058 140059 140060 140061 140062 140063 140064 140065 140066 140067 140068 140069 140070 140071 140072 140073 140074 140075 140076 140077 140078 140079 140080 140081 140082 140083 140084 140085 140086 140087 140088 140089 140090 140091 140092 140093 140094 140095 140096 140097 140098 140099 140100 140101 140102 140103 140104 140105 140106 140107 140108 140109 140110 140111 140112 140113 140114 140115 140116 140117 140118 140119 140120 140121 140122 140123 140124 140125 140126 140127 140128 140129 140130 140131 140132 140133 140134 140135 140136 140137 140138 140139 140140 140141 140142 140143 140144 140145 140146 140147 140148 140149 140150 140151> # SplitBus
mul in 2 <139913 103> out 1 <140152>     # cond trueterm
const-mul-neg-1 in 1 <139913> out 1 <140153> # cond minuscond
add in 2 <100 140153> out 1 <140154>     # cond negcond
mul in 2 <140154 139878> out 1 <140155>  # cond falseterm
add in 2 <140152 140155> out 1 <140156>  # cond result
const-mul-ffffffff in 1 <43> out 1 <140157> # multiply-by-constant 4294967295
add in 2 <43 44> out 1 <140158>          # ArithBusReq.AddReq(DFG.Input,DFG.Input)
add in 2 <140158 140157> out 1 <140159>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <140159> out 1 <140160> # multiply-by-constant 4294967295
add in 2 <140158 140160> out 1 <140161>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <43> out 1 <140162> # multiply-by-constant 4294967295
add in 2 <44 140162> out 1 <140163>      # 'CmpLT DFG.Input - DFG.Input'
split in 1 <140163> out 65 <140164 140165 140166 140167 140168 140169 140170 140171 140172 140173 140174 140175 140176 140177 140178 140179 140180 140181 140182 140183 140184 140185 140186 140187 140188 140189 140190 140191 140192 140193 140194 140195 140196 140197 140198 140199 140200 140201 140202 140203 140204 140205 140206 140207 140208 140209 140210 140211 140212 140213 140214 140215 140216 140217 140218 140219 140220 140221 140222 140223 140224 140225 140226 140227 140228> # SplitBus
mul in 2 <140195 140161> out 1 <140229>  # cond trueterm
const-mul-neg-1 in 1 <140195> out 1 <140230> # cond minuscond
add in 2 <100 140230> out 1 <140231>     # cond negcond
mul in 2 <140231 44> out 1 <140232>      # cond falseterm
add in 2 <140229 140232> out 1 <140233>  # cond result
const-mul-ffffffff in 1 <140233> out 1 <140234> # multiply-by-constant 4294967295
add in 2 <140233 45> out 1 <140235>      # ArithBusReq.AddReq(DFG.Conditional,DFG.Input)
add in 2 <140235 140234> out 1 <140236>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <140236> out 1 <140237> # multiply-by-constant 4294967295
add in 2 <140235 140237> out 1 <140238>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <140233> out 1 <140239> # multiply-by-constant 4294967295
add in 2 <45 140239> out 1 <140240>      # 'CmpLT DFG.Input - DFG.Conditional'
split in 1 <140240> out 131 <140241 140242 140243 140244 140245 140246 140247 140248 140249 140250 140251 140252 140253 140254 140255 140256 140257 140258 140259 140260 140261 140262 140263 140264 140265 140266 140267 140268 140269 140270 140271 140272 140273 140274 140275 140276 140277 140278 140279 140280 140281 140282 140283 140284 140285 140286 140287 140288 140289 140290 140291 140292 140293 140294 140295 140296 140297 140298 140299 140300 140301 140302 140303 140304 140305 140306 140307 140308 140309 140310 140311 140312 140313 140314 140315 140316 140317 140318 140319 140320 140321 140322 140323 140324 140325 140326 140327 140328 140329 140330 140331 140332 140333 140334 140335 140336 140337 140338 140339 140340 140341 140342 140343 140344 140345 140346 140347 140348 140349 140350 140351 140352 140353 140354 140355 140356 140357 140358 140359 140360 140361 140362 140363 140364 140365 140366 140367 140368 140369 140370 140371> # SplitBus
mul in 2 <140272 140238> out 1 <140372>  # cond trueterm
const-mul-neg-1 in 1 <140272> out 1 <140373> # cond minuscond
add in 2 <100 140373> out 1 <140374>     # cond negcond
mul in 2 <140374 45> out 1 <140375>      # cond falseterm
add in 2 <140372 140375> out 1 <140376>  # cond result
const-mul-ffffffff in 1 <140376> out 1 <140377> # multiply-by-constant 4294967295
add in 2 <140376 46> out 1 <140378>      # ArithBusReq.AddReq(DFG.Conditional,DFG.Input)
add in 2 <140378 140377> out 1 <140379>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <140376> out 1 <140380> # multiply-by-constant 4294967295
add in 2 <46 140380> out 1 <140381>      # 'CmpLT DFG.Input - DFG.Conditional'
split in 1 <140381> out 197 <140382 140383 140384 140385 140386 140387 140388 140389 140390 140391 140392 140393 140394 140395 140396 140397 140398 140399 140400 140401 140402 140403 140404 140405 140406 140407 140408 140409 140410 140411 140412 140413 140414 140415 140416 140417 140418 140419 140420 140421 140422 140423 140424 140425 140426 140427 140428 140429 140430 140431 140432 140433 140434 140435 140436 140437 140438 140439 140440 140441 140442 140443 140444 140445 140446 140447 140448 140449 140450 140451 140452 140453 140454 140455 140456 140457 140458 140459 140460 140461 140462 140463 140464 140465 140466 140467 140468 140469 140470 140471 140472 140473 140474 140475 140476 140477 140478 140479 140480 140481 140482 140483 140484 140485 140486 140487 140488 140489 140490 140491 140492 140493 140494 140495 140496 140497 140498 140499 140500 140501 140502 140503 140504 140505 140506 140507 140508 140509 140510 140511 140512 140513 140514 140515 140516 140517 140518 140519 140520 140521 140522 140523 140524 140525 140526 140527 140528 140529 140530 140531 140532 140533 140534 140535 140536 140537 140538 140539 140540 140541 140542 140543 140544 140545 140546 140547 140548 140549 140550 140551 140552 140553 140554 140555 140556 140557 140558 140559 140560 140561 140562 140563 140564 140565 140566 140567 140568 140569 140570 140571 140572 140573 140574 140575 140576 140577 140578> # SplitBus
mul in 2 <140413 140379> out 1 <140579>  # cond trueterm
const-mul-neg-1 in 1 <140413> out 1 <140580> # cond minuscond
add in 2 <100 140580> out 1 <140581>     # cond negcond
mul in 2 <140581 140376> out 1 <140582>  # cond falseterm
add in 2 <140579 140582> out 1 <140583>  # cond result
mul in 2 <140272 140236> out 1 <140584>  # cond trueterm
const-mul-neg-1 in 1 <140272> out 1 <140585> # cond minuscond
add in 2 <100 140585> out 1 <140586>     # cond negcond
mul in 2 <140586 140233> out 1 <140587>  # cond falseterm
add in 2 <140584 140587> out 1 <140588>  # cond result
mul in 2 <140195 140159> out 1 <140589>  # cond trueterm
const-mul-neg-1 in 1 <140195> out 1 <140590> # cond minuscond
add in 2 <100 140590> out 1 <140591>     # cond negcond
mul in 2 <140591 43> out 1 <140592>      # cond falseterm
add in 2 <140589 140592> out 1 <140593>  # cond result
const-mul-ffffffff in 1 <140593> out 1 <140594> # multiply-by-constant 4294967295
add in 2 <140593 140588> out 1 <140595>  # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
add in 2 <140595 140594> out 1 <140596>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <140596> out 1 <140597> # multiply-by-constant 4294967295
add in 2 <140595 140597> out 1 <140598>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <140593> out 1 <140599> # multiply-by-constant 4294967295
add in 2 <140588 140599> out 1 <140600>  # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <140600> out 132 <140601 140602 140603 140604 140605 140606 140607 140608 140609 140610 140611 140612 140613 140614 140615 140616 140617 140618 140619 140620 140621 140622 140623 140624 140625 140626 140627 140628 140629 140630 140631 140632 140633 140634 140635 140636 140637 140638 140639 140640 140641 140642 140643 140644 140645 140646 140647 140648 140649 140650 140651 140652 140653 140654 140655 140656 140657 140658 140659 140660 140661 140662 140663 140664 140665 140666 140667 140668 140669 140670 140671 140672 140673 140674 140675 140676 140677 140678 140679 140680 140681 140682 140683 140684 140685 140686 140687 140688 140689 140690 140691 140692 140693 140694 140695 140696 140697 140698 140699 140700 140701 140702 140703 140704 140705 140706 140707 140708 140709 140710 140711 140712 140713 140714 140715 140716 140717 140718 140719 140720 140721 140722 140723 140724 140725 140726 140727 140728 140729 140730 140731 140732> # SplitBus
mul in 2 <140632 140598> out 1 <140733>  # cond trueterm
const-mul-neg-1 in 1 <140632> out 1 <140734> # cond minuscond
add in 2 <100 140734> out 1 <140735>     # cond negcond
mul in 2 <140735 140588> out 1 <140736>  # cond falseterm
add in 2 <140733 140736> out 1 <140737>  # cond result
const-mul-ffffffff in 1 <140737> out 1 <140738> # multiply-by-constant 4294967295
add in 2 <140737 140583> out 1 <140739>  # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
add in 2 <140739 140738> out 1 <140740>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <140740> out 1 <140741> # multiply-by-constant 4294967295
add in 2 <140739 140741> out 1 <140742>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <140737> out 1 <140743> # multiply-by-constant 4294967295
add in 2 <140583 140743> out 1 <140744>  # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <140744> out 199 <140745 140746 140747 140748 140749 140750 140751 140752 140753 140754 140755 140756 140757 140758 140759 140760 140761 140762 140763 140764 140765 140766 140767 140768 140769 140770 140771 140772 140773 140774 140775 140776 140777 140778 140779 140780 140781 140782 140783 140784 140785 140786 140787 140788 140789 140790 140791 140792 140793 140794 140795 140796 140797 140798 140799 140800 140801 140802 140803 140804 140805 140806 140807 140808 140809 140810 140811 140812 140813 140814 140815 140816 140817 140818 140819 140820 140821 140822 140823 140824 140825 140826 140827 140828 140829 140830 140831 140832 140833 140834 140835 140836 140837 140838 140839 140840 140841 140842 140843 140844 140845 140846 140847 140848 140849 140850 140851 140852 140853 140854 140855 140856 140857 140858 140859 140860 140861 140862 140863 140864 140865 140866 140867 140868 140869 140870 140871 140872 140873 140874 140875 140876 140877 140878 140879 140880 140881 140882 140883 140884 140885 140886 140887 140888 140889 140890 140891 140892 140893 140894 140895 140896 140897 140898 140899 140900 140901 140902 140903 140904 140905 140906 140907 140908 140909 140910 140911 140912 140913 140914 140915 140916 140917 140918 140919 140920 140921 140922 140923 140924 140925 140926 140927 140928 140929 140930 140931 140932 140933 140934 140935 140936 140937 140938 140939 140940 140941 140942 140943> # SplitBus
mul in 2 <140776 140742> out 1 <140944>  # cond trueterm
const-mul-neg-1 in 1 <140776> out 1 <140945> # cond minuscond
add in 2 <100 140945> out 1 <140946>     # cond negcond
mul in 2 <140946 140583> out 1 <140947>  # cond falseterm
add in 2 <140944 140947> out 1 <140948>  # cond result
const-mul-ffffffff in 1 <140948> out 1 <140949> # multiply-by-constant 4294967295
const-mul-ffffffff in 1 <140379> out 1 <140950> # multiply-by-constant 4294967295
add in 2 <140378 140950> out 1 <140951>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
mul in 2 <140413 140951> out 1 <140952>  # cond trueterm
const-mul-neg-1 in 1 <140413> out 1 <140953> # cond minuscond
add in 2 <100 140953> out 1 <140954>     # cond negcond
mul in 2 <140954 46> out 1 <140955>      # cond falseterm
add in 2 <140952 140955> out 1 <140956>  # cond result
const-mul-ffffffff in 1 <140956> out 1 <140957> # multiply-by-constant 4294967295
add in 2 <140956 47> out 1 <140958>      # ArithBusReq.AddReq(DFG.Conditional,DFG.Input)
split in 1 <140958> out 231 <140959 140960 140961 140962 140963 140964 140965 140966 140967 140968 140969 140970 140971 140972 140973 140974 140975 140976 140977 140978 140979 140980 140981 140982 140983 140984 140985 140986 140987 140988 140989 140990 140991 140992 140993 140994 140995 140996 140997 140998 140999 141000 141001 141002 141003 141004 141005 141006 141007 141008 141009 141010 141011 141012 141013 141014 141015 141016 141017 141018 141019 141020 141021 141022 141023 141024 141025 141026 141027 141028 141029 141030 141031 141032 141033 141034 141035 141036 141037 141038 141039 141040 141041 141042 141043 141044 141045 141046 141047 141048 141049 141050 141051 141052 141053 141054 141055 141056 141057 141058 141059 141060 141061 141062 141063 141064 141065 141066 141067 141068 141069 141070 141071 141072 141073 141074 141075 141076 141077 141078 141079 141080 141081 141082 141083 141084 141085 141086 141087 141088 141089 141090 141091 141092 141093 141094 141095 141096 141097 141098 141099 141100 141101 141102 141103 141104 141105 141106 141107 141108 141109 141110 141111 141112 141113 141114 141115 141116 141117 141118 141119 141120 141121 141122 141123 141124 141125 141126 141127 141128 141129 141130 141131 141132 141133 141134 141135 141136 141137 141138 141139 141140 141141 141142 141143 141144 141145 141146 141147 141148 141149 141150 141151 141152 141153 141154 141155 141156 141157 141158 141159 141160 141161 141162 141163 141164 141165 141166 141167 141168 141169 141170 141171 141172 141173 141174 141175 141176 141177 141178 141179 141180 141181 141182 141183 141184 141185 141186 141187 141188 141189> # SplitBus
const-mul-2 in 1 <140990> out 1 <141190> # join source bit 31
add in 2 <140989 141190> out 1 <141191>  # join source bit 30
const-mul-2 in 1 <141191> out 1 <141192> # join
add in 2 <140988 141192> out 1 <141193>  # join source bit 29
const-mul-2 in 1 <141193> out 1 <141194> # join
add in 2 <140987 141194> out 1 <141195>  # join source bit 28
const-mul-2 in 1 <141195> out 1 <141196> # join
add in 2 <140986 141196> out 1 <141197>  # join source bit 27
const-mul-2 in 1 <141197> out 1 <141198> # join
add in 2 <140985 141198> out 1 <141199>  # join source bit 26
const-mul-2 in 1 <141199> out 1 <141200> # join
add in 2 <140984 141200> out 1 <141201>  # join source bit 25
const-mul-2 in 1 <141201> out 1 <141202> # join
add in 2 <140983 141202> out 1 <141203>  # join source bit 24
const-mul-2 in 1 <141203> out 1 <141204> # join
add in 2 <140982 141204> out 1 <141205>  # join source bit 23
const-mul-2 in 1 <141205> out 1 <141206> # join
add in 2 <140981 141206> out 1 <141207>  # join source bit 22
const-mul-2 in 1 <141207> out 1 <141208> # join
add in 2 <140980 141208> out 1 <141209>  # join source bit 21
const-mul-2 in 1 <141209> out 1 <141210> # join
add in 2 <140979 141210> out 1 <141211>  # join source bit 20
const-mul-2 in 1 <141211> out 1 <141212> # join
add in 2 <140978 141212> out 1 <141213>  # join source bit 19
const-mul-2 in 1 <141213> out 1 <141214> # join
add in 2 <140977 141214> out 1 <141215>  # join source bit 18
const-mul-2 in 1 <141215> out 1 <141216> # join
add in 2 <140976 141216> out 1 <141217>  # join source bit 17
const-mul-2 in 1 <141217> out 1 <141218> # join
add in 2 <140975 141218> out 1 <141219>  # join source bit 16
const-mul-2 in 1 <141219> out 1 <141220> # join
add in 2 <140974 141220> out 1 <141221>  # join source bit 15
const-mul-2 in 1 <141221> out 1 <141222> # join
add in 2 <140973 141222> out 1 <141223>  # join source bit 14
const-mul-2 in 1 <141223> out 1 <141224> # join
add in 2 <140972 141224> out 1 <141225>  # join source bit 13
const-mul-2 in 1 <141225> out 1 <141226> # join
add in 2 <140971 141226> out 1 <141227>  # join source bit 12
const-mul-2 in 1 <141227> out 1 <141228> # join
add in 2 <140970 141228> out 1 <141229>  # join source bit 11
const-mul-2 in 1 <141229> out 1 <141230> # join
add in 2 <140969 141230> out 1 <141231>  # join source bit 10
const-mul-2 in 1 <141231> out 1 <141232> # join
add in 2 <140968 141232> out 1 <141233>  # join source bit 9
const-mul-2 in 1 <141233> out 1 <141234> # join
add in 2 <140967 141234> out 1 <141235>  # join source bit 8
const-mul-2 in 1 <141235> out 1 <141236> # join
add in 2 <140966 141236> out 1 <141237>  # join source bit 7
const-mul-2 in 1 <141237> out 1 <141238> # join
add in 2 <140965 141238> out 1 <141239>  # join source bit 6
const-mul-2 in 1 <141239> out 1 <141240> # join
add in 2 <140964 141240> out 1 <141241>  # join source bit 5
const-mul-2 in 1 <141241> out 1 <141242> # join
add in 2 <140963 141242> out 1 <141243>  # join source bit 4
const-mul-2 in 1 <141243> out 1 <141244> # join
add in 2 <140962 141244> out 1 <141245>  # join source bit 3
const-mul-2 in 1 <141245> out 1 <141246> # join
add in 2 <140961 141246> out 1 <141247>  # join source bit 2
const-mul-2 in 1 <141247> out 1 <141248> # join
add in 2 <140960 141248> out 1 <141249>  # join source bit 1
const-mul-2 in 1 <141249> out 1 <141250> # join
add in 2 <140959 141250> out 1 <141251>  # join source bit 0
add in 2 <141251 141251> out 1 <141252>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <140956> out 1 <141253> # multiply-by-constant 4294967295
add in 2 <47 141253> out 1 <141254>      # 'CmpLT DFG.Input - DFG.Conditional'
split in 1 <141254> out 263 <141255 141256 141257 141258 141259 141260 141261 141262 141263 141264 141265 141266 141267 141268 141269 141270 141271 141272 141273 141274 141275 141276 141277 141278 141279 141280 141281 141282 141283 141284 141285 141286 141287 141288 141289 141290 141291 141292 141293 141294 141295 141296 141297 141298 141299 141300 141301 141302 141303 141304 141305 141306 141307 141308 141309 141310 141311 141312 141313 141314 141315 141316 141317 141318 141319 141320 141321 141322 141323 141324 141325 141326 141327 141328 141329 141330 141331 141332 141333 141334 141335 141336 141337 141338 141339 141340 141341 141342 141343 141344 141345 141346 141347 141348 141349 141350 141351 141352 141353 141354 141355 141356 141357 141358 141359 141360 141361 141362 141363 141364 141365 141366 141367 141368 141369 141370 141371 141372 141373 141374 141375 141376 141377 141378 141379 141380 141381 141382 141383 141384 141385 141386 141387 141388 141389 141390 141391 141392 141393 141394 141395 141396 141397 141398 141399 141400 141401 141402 141403 141404 141405 141406 141407 141408 141409 141410 141411 141412 141413 141414 141415 141416 141417 141418 141419 141420 141421 141422 141423 141424 141425 141426 141427 141428 141429 141430 141431 141432 141433 141434 141435 141436 141437 141438 141439 141440 141441 141442 141443 141444 141445 141446 141447 141448 141449 141450 141451 141452 141453 141454 141455 141456 141457 141458 141459 141460 141461 141462 141463 141464 141465 141466 141467 141468 141469 141470 141471 141472 141473 141474 141475 141476 141477 141478 141479 141480 141481 141482 141483 141484 141485 141486 141487 141488 141489 141490 141491 141492 141493 141494 141495 141496 141497 141498 141499 141500 141501 141502 141503 141504 141505 141506 141507 141508 141509 141510 141511 141512 141513 141514 141515 141516 141517> # SplitBus
mul in 2 <141286 141252> out 1 <141518>  # cond trueterm
const-mul-neg-1 in 1 <141286> out 1 <141519> # cond minuscond
add in 2 <100 141519> out 1 <141520>     # cond negcond
mul in 2 <141520 140956> out 1 <141521>  # cond falseterm
add in 2 <141518 141521> out 1 <141522>  # cond result
add in 2 <140948 141522> out 1 <141523>  # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
split in 1 <141523> outplitBus
const-mul-2 in 1 <141555> out 1 <141757> # join source bit 31
add in 2 <141554 141757> out 1 <141758>  # join source bit 30
const-mul-2 in 1 <141758> out 1 <141759> # join
add in 2 <141553 141759> out 1 <141760>  # join source bit 29
const-mul-2 in 1 <141760> out 1 <141761> # join
add in 2 <141552 141761> out 1 <141762>  # join source bit 28
const-mul-2 in 1 <141762> out 1 <141763> # join
add in 2 <141551 141763> out 1 <141764>  # join source bit 27
const-mul-2 in 1 <141764> out 1 <141765> # join
add in 2 <141550 141765> out 1 <141766>  # join source bit 26
const-mul-2 in 1 <141766> out 1 <141767> # join
add in 2 <141549 141767> out 1 <141768>  # join source bit 25
const-mul-2 in 1 <141768> out 1 <141769> # join
add in 2 <141548 141769> out 1 <141770>  # join source bit 24
const-mul-2 in 1 <141770> out 1 <141771> # join
add in 2 <141547 141771> out 1 <141772>  # join source bit 23
const-mul-2 in 1 <141772> out 1 <141773> # join
add in 2 <141546 141773> out 1 <141774>  # join source bit 22
const-mul-2 in 1 <141774> out 1 <141775> # join
add in 2 <141545 141775> out 1 <141776>  # join source bit 21
const-mul-2 in 1 <141776> out 1 <141777> # join
add in 2 <141544 141777> out 1 <141778>  # join source bit 20
const-mul-2 in 1 <141778> out 1 <141779> # join
add in 2 <141543 141779> out 1 <141780>  # join source bit 19
const-mul-2 in 1 <141780> out 1 <141781> # join
add in 2 <141542 141781> out 1 <141782>  # join source bit 18
const-mul-2 in 1 <141782> out 1 <141783> # join
add in 2 <141541 141783> out 1 <141784>  # join source bit 17
const-mul-2 in 1 <141784> out 1 <141785> # join
add in 2 <141540 141785> out 1 <141786>  # join source bit 16
const-mul-2 in 1 <141786> out 1 <141787> # join
add in 2 <141539 141787> out 1 <141788>  # join source bit 15
const-mul-2 in 1 <141788> out 1 <141789> # join
add in 2 <141538 141789> out 1 <141790>  # join source bit 14
const-mul-2 in 1 <141790> out 1 <141791> # join
add in 2 <141537 141791> out 1 <141792>  # join source bit 13
const-mul-2 in 1 <141792> out 1 <141793> # join
add in 2 <141536 141793> out 1 <141794>  # join source bit 12
const-mul-2 in 1 <141794> out 1 <141795> # join
add in 2 <141535 141795> out 1 <141796>  # join source bit 11
const-mul-2 in 1 <141796> out 1 <141797> # join
add in 2 <141534 141797> out 1 <141798>  # join source bit 10
const-mul-2 in 1 <141798> out 1 <141799> # join
add in 2 <141533 141799> out 1 <141800>  # join source bit 9
const-mul-2 in 1 <141800> out 1 <141801> # join
add in 2 <141532 141801> out 1 <141802>  # join source bit 8
const-mul-2 in 1 <141802> out 1 <141803> # join
add in 2 <141531 141803> out 1 <141804>  # join source bit 7
const-mul-2 in 1 <141804> out 1 <141805> # join
add in 2 <141530 141805> out 1 <141806>  # join source bit 6
const-mul-2 in 1 <141806> out 1 <141807> # join
add in 2 <141529 141807> out 1 <141808>  # join source bit 5
const-mul-2 in 1 <141808> out 1 <141809> # join
add in 2 <141528 141809> out 1 <141810>  # join source bit 4
const-mul-2 in 1 <141810> out 1 <141811> # join
add in 2 <141527 141811> out 1 <141812>  # join source bit 3
const-mul-2 in 1 <141812> out 1 <141813> # join
add in 2 <141526 141813> out 1 <141814>  # join source bit 2
const-mul-2 in 1 <141814> out 1 <141815> # join
add in 2 <141525 141815> out 1 <141816>  # join source bit 1
const-mul-2 in 1 <141816> out 1 <141817> # join
add in 2 <141524 141817> out 1 <141818>  # join source bit 0
add in 2 <141818 141818> out 1 <141819>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <140948> out 1 <141820> # multiply-by-constant 4294967295
add in 2 <141522 141820> out 1 <141821>  # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <141821> outplitBus
mul in 2 <141853 141819> out 1 <142087>  # cond trueterm
const-mul-neg-1 in 1 <141853> out 1 <142088> # cond minuscond
add in 2 <100 142088> out 1 <142089>     # cond negcond
mul in 2 <142089 140948> out 1 <142090>  # cond falseterm
add in 2 <142087 142090> out 1 <142091>  # cond result
mul in 2 <140776 140740> out 1 <142092>  # cond trueterm
const-mul-neg-1 in 1 <140776> out 1 <142093> # cond minuscond
add in 2 <100 142093> out 1 <142094>     # cond negcond
mul in 2 <142094 140737> out 1 <142095>  # cond falseterm
add in 2 <142092 142095> out 1 <142096>  # cond result
mul in 2 <140632 140596> out 1 <142097>  # cond trueterm
const-mul-neg-1 in 1 <140632> out 1 <142098> # cond minuscond
add in 2 <100 142098> out 1 <142099>     # cond negcond
mul in 2 <142099 140593> out 1 <142100>  # cond falseterm
add in 2 <142097 142100> out 1 <142101>  # cond result
const-mul-ffffffff in 1 <142101> out 1 <142102> # multiply-by-constant 4294967295
add in 2 <142101 142096> out 1 <142103>  # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
add in 2 <142103 142102> out 1 <142104>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <142104> out 1 <142105> # multiply-by-constant 4294967295
add in 2 <142103 142105> out 1 <142106>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <142101> out 1 <142107> # multiply-by-constant 4294967295
add in 2 <142096 142107> out 1 <142108>  # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <142108> out 200 <142109 142110 142111 142112 142113 142114 142115 142116 142117 142118 142119 142120 142121 142122 142123 142124 142125 142126 142127 142128 142129 142130 142131 142132 142133 142134 142135 142136 142137 142138 142139 142140 142141 142142 142143 142144 142145 142146 142147 142148 142149 142150 142151 142152 142153 142154 142155 142156 142157 142158 142159 142160 142161 142162 142163 142164 142165 142166 142167 142168 142169 142170 142171 142172 142173 142174 142175 142176 142177 142178 142179 142180 142181 142182 142183 142184 142185 142186 142187 142188 142189 142190 142191 142192 142193 142194 142195 142196 142197 142198 142199 142200 142201 142202 142203 142204 142205 142206 142207 142208 142209 142210 142211 142212 142213 142214 142215 142216 142217 142218 142219 142220 142221 142222 142223 142224 142225 142226 142227 142228 142229 142230 142231 142232 142233 142234 142235 142236 142237 142238 142239 142240 142241 142242 142243 142244 142245 142246 142247 142248 142249 142250 142251 142252 142253 142254 142255 142256 142257 142258 142259 142260 142261 142262 142263 142264 142265 142266 142267 142268 142269 142270 142271 142272 142273 142274 142275 142276 142277 142278 142279 142280 142281 142282 142283 142284 142285 142286 142287 142288 142289 142290 142291 142292 142293 142294 142295 142296 142297 142298 142299 142300 142301 142302 142303 142304 142305 142306 142307 142308> # SplitBus
mul in 2 <142140 142106> out 1 <142309>  # cond trueterm
const-mul-neg-1 in 1 <142140> out 1 <142310> # cond minuscond
add in 2 <100 142310> out 1 <142311>     # cond negcond
mul in 2 <142311 142096> out 1 <142312>  # cond falseterm
add in 2 <142309 142312> out 1 <142313>  # cond result
const-mul-ffffffff in 1 <142313> out 1 <142314> # multiply-by-constant 4294967295
add in 2 <142313 142091> out 1 <142315>  # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
split in 1 <142315> outplitBus
const-mul-2 in 1 <142347> out 1 <142551> # join source bit 31
add in 2 <142346 142551> out 1 <142552>  # join source bit 30
const-mul-2 in 1 <142552> out 1 <142553> # join
add in 2 <142345 142553> out 1 <142554>  # join source bit 29
const-mul-2 in 1 <142554> out 1 <142555> # join
add in 2 <142344 142555> out 1 <142556>  # join source bit 28
const-mul-2 in 1 <142556> out 1 <142557> # join
add in 2 <142343 142557> out 1 <142558>  # join source bit 27
const-mul-2 in 1 <142558> out 1 <142559> # join
add in 2 <142342 142559> out 1 <142560>  # join source bit 26
const-mul-2 in 1 <142560> out 1 <142561> # join
add in 2 <142341 142561> out 1 <142562>  # join source bit 25
const-mul-2 in 1 <142562> out 1 <142563> # join
add in 2 <142340 142563> out 1 <142564>  # join source bit 24
const-mul-2 in 1 <142564> out 1 <142565> # join
add in 2 <142339 142565> out 1 <142566>  # join source bit 23
const-mul-2 in 1 <142566> out 1 <142567> # join
add in 2 <142338 142567> out 1 <142568>  # join source bit 22
const-mul-2 in 1 <142568> out 1 <142569> # join
add in 2 <142337 142569> out 1 <142570>  # join source bit 21
const-mul-2 in 1 <142570> out 1 <142571> # join
add in 2 <142336 142571> out 1 <142572>  # join source bit 20
const-mul-2 in 1 <142572> out 1 <142573> # join
add in 2 <142335 142573> out 1 <142574>  # join source bit 19
const-mul-2 in 1 <142574> out 1 <142575> # join
add in 2 <142334 142575> out 1 <142576>  # join source bit 18
const-mul-2 in 1 <142576> out 1 <142577> # join
add in 2 <142333 142577> out 1 <142578>  # join source bit 17
const-mul-2 in 1 <142578> out 1 <142579> # join
add in 2 <142332 142579> out 1 <142580>  # join source bit 16
const-mul-2 in 1 <142580> out 1 <142581> # join
add in 2 <142331 142581> out 1 <142582>  # join source bit 15
const-mul-2 in 1 <142582> out 1 <142583> # join
add in 2 <142330 142583> out 1 <142584>  # join source bit 14
const-mul-2 in 1 <142584> out 1 <142585> # join
add in 2 <142329 142585> out 1 <142586>  # join source bit 13
const-mul-2 in 1 <142586> out 1 <142587> # join
add in 2 <142328 142587> out 1 <142588>  # join source bit 12
const-mul-2 in 1 <142588> out 1 <142589> # join
add in 2 <142327 142589> out 1 <142590>  # join source bit 11
const-mul-2 in 1 <142590> out 1 <142591> # join
add in 2 <142326 142591> out 1 <142592>  # join source bit 10
const-mul-2 in 1 <142592> out 1 <142593> # join
add in 2 <142325 142593> out 1 <142594>  # join source bit 9
const-mul-2 in 1 <142594> out 1 <142595> # join
add in 2 <142324 142595> out 1 <142596>  # join source bit 8
const-mul-2 in 1 <142596> out 1 <142597> # join
add in 2 <142323 142597> out 1 <142598>  # join source bit 7
const-mul-2 in 1 <142598> out 1 <142599> # join
add in 2 <142322 142599> out 1 <142600>  # join source bit 6
const-mul-2 in 1 <142600> out 1 <142601> # join
add in 2 <142321 142601> out 1 <142602>  # join source bit 5
const-mul-2 in 1 <142602> out 1 <142603> # join
add in 2 <142320 142603> out 1 <142604>  # join source bit 4
const-mul-2 in 1 <142604> out 1 <142605> # join
add in 2 <142319 142605> out 1 <142606>  # join source bit 3
const-mul-2 in 1 <142606> out 1 <142607> # join
add in 2 <142318 142607> out 1 <142608>  # join source bit 2
const-mul-2 in 1 <142608> out 1 <142609> # join
add in 2 <142317 142609> out 1 <142610>  # join source bit 1
const-mul-2 in 1 <142610> out 1 <142611> # join
add in 2 <142316 142611> out 1 <142612>  # join source bit 0
add in 2 <142612 142612> out 1 <142613>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <142613> out 1 <142614> # multiply-by-constant 4294967295
add in 2 <142315 142614> out 1 <142615>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <142313> out 1 <142616> # multiply-by-constant 4294967295
add in 2 <142091 142616> out 1 <142617>  # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <142617> outplitBus
mul in 2 <142649 142615> out 1 <142885>  # cond trueterm
const-mul-neg-1 in 1 <142649> out 1 <142886> # cond minuscond
add in 2 <100 142886> out 1 <142887>     # cond negcond
mul in 2 <142887 142091> out 1 <142888>  # cond falseterm
add in 2 <142885 142888> out 1 <142889>  # cond result
add in 2 <142889 104> out 1 <142890>     # ArithBusReq.AddReq(DFG.Conditional,DFG.Constant)
const-mul-ffffffff in 1 <45> out 1 <142891> # multiply-by-constant 4294967295
add in 2 <142890 142891> out 1 <142892>  # 'CmpLT DFG.Add - DFG.Input'
split in 1 <142892> outplitBus
mul in 2 <142924 103> out 1 <143131>     # cond trueterm
const-mul-neg-1 in 1 <142924> out 1 <143132> # cond minuscond
add in 2 <100 143132> out 1 <143133>     # cond negcond
mul in 2 <143133 102> out 1 <143134>     # cond falseterm
add in 2 <143131 143134> out 1 <143135>  # cond result
add in 2 <142889 3084> out 1 <143136>    # ArithBusReq.AddReq(DFG.Conditional,DFG.Negate)
const-mul-ffffffff in 1 <143136> out 1 <143137> # multiply-by-constant 4294967295
add in 2 <45 143137> out 1 <143138>      # 'CmpLT DFG.Input - DFG.Subtract'
split in 1 <143138> out 270 <143139 143140 143141 143142 143143 143144 143145 143146 143147 143148 143149 143150 143151 143152 143153 143154 143155 143156 143157 143158 143159 143160 143161 143162 143163 143164 143165 143166 143167 143168 143169 143170 143171 143172 143173 143174 143175 143176 143177 143178 143179 143180 143181 143182 143183 143184 143185 143186 143187 143188 143189 143190 143191 143192 143193 143194 143195 143196 143197 143198 143199 143200 143201 143202 143203 143204 143205 143206 143207 143208 143209 143210 143211 143212 143213 143214 143215 143216 143217 143218 143219 143220 143221 143222 143223 143224 143225 143226 143227 143228 143229 143230 143231 143232 143233 143234 143235 143236 143237 143238 143239 143240 143241 143242 143243 143244 143245 143246 143247 143248 143249 143250 143251 143252 143253 143254 143255 143256 143257 143258 143259 143260 143261 143262 143263 143264 143265 143266 143267 143268 143269 143270 143271 143272 143273 143274 143275 143276 143277 143278 143279 143280 143281 143282 143283 143284 143285 143286 143287 143288 143289 143290 143291 143292 143293 143294 143295 143296 143297 143298 143299 143300 143301 143302 143303 143304 143305 143306 143307 143308 143309 143310 143311 143312 143313 143314 143315 143316 143317 143318 143319 143320 143321 143322 143323 143324 143325 143326 143327 143328 143329 143330 143331 143332 143333 143334 143335 143336 143337 143338 143339 143340 143341 143342 143343 143344 143345 143346 143347 143348 143349 143350 143351 143352 143353 143354 143355 143356 143357 143358 143359 143360 143361 143362 143363 143364 143365 143366 143367 143368 143369 143370 143371 143372 143373 143374 143375 143376 143377 143378 143379 143380 143381 143382 143383 143384 143385 143386 143387 143388 143389 143390 143391 143392 143393 143394 143395 143396 143397 143398 143399 143400 143401 143402 143403 143404 143405 143406 143407 143408> # SplitBus
mul in 2 <143170 103> out 1 <143409>     # cond trueterm
const-mul-neg-1 in 1 <143170> out 1 <143410> # cond minuscond
add in 2 <100 143410> out 1 <143411>     # cond negcond
mul in 2 <143411 143135> out 1 <143412>  # cond falseterm
add in 2 <143409 143412> out 1 <143413>  # cond result
const-mul-ffffffff in 1 <44> out 1 <143414> # multiply-by-constant 4294967295
add in 2 <44 45> out 1 <143415>          # ArithBusReq.AddReq(DFG.Input,DFG.Input)
add in 2 <143415 143414> out 1 <143416>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <143416> out 1 <143417> # multiply-by-constant 4294967295
add in 2 <143415 143417> out 1 <143418>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <44> out 1 <143419> # multiply-by-constant 4294967295
add in 2 <45 143419> out 1 <143420>      # 'CmpLT DFG.Input - DFG.Input'
split in 1 <143420> out 65 <143421 143422 143423 143424 143425 143426 143427 143428 143429 143430 143431 143432 143433 143434 143435 143436 143437 143438 143439 143440 143441 143442 143443 143444 143445 143446 143447 143448 143449 143450 143451 143452 143453 143454 143455 143456 143457 143458 143459 143460 143461 143462 143463 143464 143465 143466 143467 143468 143469 143470 143471 143472 143473 143474 143475 143476 143477 143478 143479 143480 143481 143482 143483 143484 143485> # SplitBus
mul in 2 <143452 143418> out 1 <143486>  # cond trueterm
const-mul-neg-1 in 1 <143452> out 1 <143487> # cond minuscond
add in 2 <100 143487> out 1 <143488>     # cond negcond
mul in 2 <143488 45> out 1 <143489>      # cond falseterm
add in 2 <143486 143489> out 1 <143490>  # cond result
const-mul-ffffffff in 1 <143490> out 1 <143491> # multiply-by-constant 4294967295
add in 2 <143490 46> out 1 <143492>      # ArithBusReq.AddReq(DFG.Conditional,DFG.Input)
add in 2 <143492 143491> out 1 <143493>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <143493> out 1 <143494> # multiply-by-constant 4294967295
add in 2 <143492 143494> out 1 <143495>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <143490> out 1 <143496> # multiply-by-constant 4294967295
add in 2 <46 143496> out 1 <143497>      # 'CmpLT DFG.Input - DFG.Conditional'
split in 1 <143497> out 131 <143498 143499 143500 143501 143502 143503 143504 143505 143506 143507 143508 143509 143510 143511 143512 143513 143514 143515 143516 143517 143518 143519 143520 143521 143522 143523 143524 143525 143526 143527 143528 143529 143530 143531 143532 143533 143534 143535 143536 143537 143538 143539 143540 143541 143542 143543 143544 143545 143546 143547 143548 143549 143550 143551 143552 143553 143554 143555 143556 143557 143558 143559 143560 143561 143562 143563 143564 143565 143566 143567 143568 143569 143570 143571 143572 143573 143574 143575 143576 143577 143578 143579 143580 143581 143582 143583 143584 143585 143586 143587 143588 143589 143590 143591 143592 143593 143594 143595 143596 143597 143598 143599 143600 143601 143602 143603 143604 143605 143606 143607 143608 143609 143610 143611 143612 143613 143614 143615 143616 143617 143618 143619 143620 143621 143622 143623 143624 143625 143626 143627 143628> # SplitBus
mul in 2 <143529 143495> out 1 <143629>  # cond trueterm
const-mul-neg-1 in 1 <143529> out 1 <143630> # cond minuscond
add in 2 <100 143630> out 1 <143631>     # cond negcond
mul in 2 <143631 46> out 1 <143632>      # cond falseterm
add in 2 <143629 143632> out 1 <143633>  # cond result
const-mul-ffffffff in 1 <143633> out 1 <143634> # multiply-by-constant 4294967295
add in 2 <143633 47> out 1 <143635>      # ArithBusReq.AddReq(DFG.Conditional,DFG.Input)
add in 2 <143635 143634> out 1 <143636>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <143633> out 1 <143637> # multiply-by-constant 4294967295
add in 2 <47 143637> out 1 <143638>      # 'CmpLT DFG.Input - DFG.Conditional'
split in 1 <143638> out 197 <143639 143640 143641 143642 143643 143644 143645 143646 143647 143648 143649 143650 143651 143652 143653 143654 143655 143656 143657 143658 143659 143660 143661 143662 143663 143664 143665 143666 143667 143668 143669 143670 143671 143672 143673 143674 143675 143676 143677 143678 143679 143680 143681 143682 143683 143684 143685 143686 143687 143688 143689 143690 143691 143692 143693 143694 143695 143696 143697 143698 143699 143700 143701 143702 143703 143704 143705 143706 143707 143708 143709 143710 143711 143712 143713 143714 143715 143716 143717 143718 143719 143720 143721 143722 143723 143724 143725 143726 143727 143728 143729 143730 143731 143732 143733 143734 143735 143736 143737 143738 143739 143740 143741 143742 143743 143744 143745 143746 143747 143748 143749 143750 143751 143752 143753 143754 143755 143756 143757 143758 143759 143760 143761 143762 143763 143764 143765 143766 143767 143768 143769 143770 143771 143772 143773 143774 143775 143776 143777 143778 143779 143780 143781 143782 143783 143784 143785 143786 143787 143788 143789 143790 143791 143792 143793 143794 143795 143796 143797 143798 143799 143800 143801 143802 143803 143804 143805 143806 143807 143808 143809 143810 143811 143812 143813 143814 143815 143816 143817 143818 143819 143820 143821 143822 143823 143824 143825 143826 143827 143828 143829 143830 143831 143832 143833 143834 143835> # SplitBus
mul in 2 <143670 143636> out 1 <143836>  # cond trueterm
const-mul-neg-1 in 1 <143670> out 1 <143837> # cond minuscond
add in 2 <100 143837> out 1 <143838>     # cond negcond
mul in 2 <143838 143633> out 1 <143839>  # cond falseterm
add in 2 <143836 143839> out 1 <143840>  # cond result
mul in 2 <143529 143493> out 1 <143841>  # cond trueterm
const-mul-neg-1 in 1 <143529> out 1 <143842> # cond minuscond
add in 2 <100 143842> out 1 <143843>     # cond negcond
mul in 2 <143843 143490> out 1 <143844>  # cond falseterm
add in 2 <143841 143844> out 1 <143845>  # cond result
mul in 2 <143452 143416> out 1 <143846>  # cond trueterm
const-mul-neg-1 in 1 <143452> out 1 <143847> # cond minuscond
add in 2 <100 143847> out 1 <143848>     # cond negcond
mul in 2 <143848 44> out 1 <143849>      # cond falseterm
add in 2 <143846 143849> out 1 <143850>  # cond result
const-mul-ffffffff in 1 <143850> out 1 <143851> # multiply-by-constant 4294967295
add in 2 <143850 143845> out 1 <143852>  # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
add in 2 <143852 143851> out 1 <143853>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <143853> out 1 <143854> # multiply-by-constant 4294967295
add in 2 <143852 143854> out 1 <143855>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <143850> out 1 <143856> # multiply-by-constant 4294967295
add in 2 <143845 143856> out 1 <143857>  # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <143857> out 132 <143858 143859 143860 143861 143862 143863 143864 143865 143866 143867 143868 143869 143870 143871 143872 143873 143874 143875 143876 143877 143878 143879 143880 143881 143882 143883 143884 143885 143886 143887 143888 143889 143890 143891 143892 143893 143894 143895 143896 143897 143898 143899 143900 143901 143902 143903 143904 143905 143906 143907 143908 143909 143910 143911 143912 143913 143914 143915 143916 143917 143918 143919 143920 143921 143922 143923 143924 143925 143926 143927 143928 143929 143930 143931 143932 143933 143934 143935 143936 143937 143938 143939 143940 143941 143942 143943 143944 143945 143946 143947 143948 143949 143950 143951 143952 143953 143954 143955 143956 143957 143958 143959 143960 143961 143962 143963 143964 143965 143966 143967 143968 143969 143970 143971 143972 143973 143974 143975 143976 143977 143978 143979 143980 143981 143982 143983 143984 143985 143986 143987 143988 143989> # SplitBus
mul in 2 <143889 143855> out 1 <143990>  # cond trueterm
const-mul-neg-1 in 1 <143889> out 1 <143991> # cond minuscond
add in 2 <100 143991> out 1 <143992>     # cond negcond
mul in 2 <143992 143845> out 1 <143993>  # cond falseterm
add in 2 <143990 143993> out 1 <143994>  # cond result
const-mul-ffffffff in 1 <143994> out 1 <143995> # multiply-by-constant 4294967295
add in 2 <143994 143840> out 1 <143996>  # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
add in 2 <143996 143995> out 1 <143997>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <143997> out 1 <143998> # multiply-by-constant 4294967295
add in 2 <143996 143998> out 1 <143999>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <143994> out 1 <144000> # multiply-by-constant 4294967295
add in 2 <143840 144000> out 1 <144001>  # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <144001> out 199 <144002 144003 144004 144005 144006 144007 144008 144009 144010 144011 144012 144013 144014 144015 144016 144017 144018 144019 144020 144021 144022 144023 144024 144025 144026 144027 144028 144029 144030 144031 144032 144033 144034 144035 144036 144037 144038 144039 144040 144041 144042 144043 144044 144045 144046 144047 144048 144049 144050 144051 144052 144053 144054 144055 144056 144057 144058 144059 144060 144061 144062 144063 144064 144065 144066 144067 144068 144069 144070 144071 144072 144073 144074 144075 144076 144077 144078 144079 144080 144081 144082 144083 144084 144085 144086 144087 144088 144089 144090 144091 144092 144093 144094 144095 144096 144097 144098 144099 144100 144101 144102 144103 144104 144105 144106 144107 144108 144109 144110 144111 144112 144113 144114 144115 144116 144117 144118 144119 144120 144121 144122 144123 144124 144125 144126 144127 144128 144129 144130 144131 144132 144133 144134 144135 144136 144137 144138 144139 144140 144141 144142 144143 144144 144145 144146 144147 144148 144149 144150 144151 144152 144153 144154 144155 144156 144157 144158 144159 144160 144161 144162 144163 144164 144165 144166 144167 144168 144169 144170 144171 144172 144173 144174 144175 144176 144177 144178 144179 144180 144181 144182 144183 144184 144185 144186 144187 144188 144189 144190 144191 144192 144193 144194 144195 144196 144197 144198 144199 144200> # SplitBus
mul in 2 <144033 143999> out 1 <144201>  # cond trueterm
const-mul-neg-1 in 1 <144033> out 1 <144202> # cond minuscond
add in 2 <100 144202> out 1 <144203>     # cond negcond
mul in 2 <144203 143840> out 1 <144204>  # cond falseterm
add in 2 <144201 144204> out 1 <144205>  # cond result
const-mul-ffffffff in 1 <144205> out 1 <144206> # multiply-by-constant 4294967295
const-mul-ffffffff in 1 <143636> out 1 <144207> # multiply-by-constant 4294967295
add in 2 <143635 144207> out 1 <144208>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
mul in 2 <143670 144208> out 1 <144209>  # cond trueterm
const-mul-neg-1 in 1 <143670> out 1 <144210> # cond minuscond
add in 2 <100 144210> out 1 <144211>     # cond negcond
mul in 2 <144211 47> out 1 <144212>      # cond falseterm
add in 2 <144209 144212> out 1 <144213>  # cond result
const-mul-ffffffff in 1 <144213> out 1 <144214> # multiply-by-constant 4294967295
add in 2 <144213 48> out 1 <144215>      # ArithBusReq.AddReq(DFG.Conditional,DFG.Input)
split in 1 <144215> outplitBus
const-mul-2 in 1 <144247> out 1 <144447> # join source bit 31
add in 2 <144246 144447> out 1 <144448>  # join source bit 30
const-mul-2 in 1 <144448> out 1 <144449> # join
add in 2 <144245 144449> out 1 <144450>  # join source bit 29
const-mul-2 in 1 <144450> out 1 <144451> # join
add in 2 <144244 144451> out 1 <144452>  # join source bit 28
const-mul-2 in 1 <144452> out 1 <144453> # join
add in 2 <144243 144453> out 1 <144454>  # join source bit 27
const-mul-2 in 1 <144454> out 1 <144455> # join
add in 2 <144242 144455> out 1 <144456>  # join source bit 26
const-mul-2 in 1 <144456> out 1 <144457> # join
add in 2 <144241 144457> out 1 <144458>  # join source bit 25
const-mul-2 in 1 <144458> out 1 <144459> # join
add in 2 <144240 144459> out 1 <144460>  # join source bit 24
const-mul-2 in 1 <144460> out 1 <144461> # join
add in 2 <144239 144461> out 1 <144462>  # join source bit 23
const-mul-2 in 1 <144462> out 1 <144463> # join
add in 2 <144238 144463> out 1 <144464>  # join source bit 22
const-mul-2 in 1 <144464> out 1 <144465> # join
add in 2 <144237 144465> out 1 <144466>  # join source bit 21
const-mul-2 in 1 <144466> out 1 <144467> # join
add in 2 <144236 144467> out 1 <144468>  # join source bit 20
const-mul-2 in 1 <144468> out 1 <144469> # join
add in 2 <144235 144469> out 1 <144470>  # join source bit 19
const-mul-2 in 1 <144470> out 1 <144471> # join
add in 2 <144234 144471> out 1 <144472>  # join source bit 18
const-mul-2 in 1 <144472> out 1 <144473> # join
add in 2 <144233 144473> out 1 <144474>  # join source bit 17
const-mul-2 in 1 <144474> out 1 <144475> # join
add in 2 <144232 144475> out 1 <144476>  # join source bit 16
const-mul-2 in 1 <144476> out 1 <144477> # join
add in 2 <144231 144477> out 1 <144478>  # join source bit 15
const-mul-2 in 1 <144478> out 1 <144479> # join
add in 2 <144230 144479> out 1 <144480>  # join source bit 14
const-mul-2 in 1 <144480> out 1 <144481> # join
add in 2 <144229 144481> out 1 <144482>  # join source bit 13
const-mul-2 in 1 <144482> out 1 <144483> # join
add in 2 <144228 144483> out 1 <144484>  # join source bit 12
const-mul-2 in 1 <144484> out 1 <144485> # join
add in 2 <144227 144485> out 1 <144486>  # join source bit 11
const-mul-2 in 1 <144486> out 1 <144487> # join
add in 2 <144226 144487> out 1 <144488>  # join source bit 10
const-mul-2 in 1 <144488> out 1 <144489> # join
add in 2 <144225 144489> out 1 <144490>  # join source bit 9
const-mul-2 in 1 <144490> out 1 <144491> # join
add in 2 <144224 144491> out 1 <144492>  # join source bit 8
const-mul-2 in 1 <144492> out 1 <144493> # join
add in 2 <144223 144493> out 1 <144494>  # join source bit 7
const-mul-2 in 1 <144494> out 1 <144495> # join
add in 2 <144222 144495> out 1 <144496>  # join source bit 6
const-mul-2 in 1 <144496> out 1 <144497> # join
add in 2 <144221 144497> out 1 <144498>  # join source bit 5
const-mul-2 in 1 <144498> out 1 <144499> # join
add in 2 <144220 144499> out 1 <144500>  # join source bit 4
const-mul-2 in 1 <144500> out 1 <144501> # join
add in 2 <144219 144501> out 1 <144502>  # join source bit 3
const-mul-2 in 1 <144502> out 1 <144503> # join
add in 2 <144218 144503> out 1 <144504>  # join source bit 2
const-mul-2 in 1 <144504> out 1 <144505> # join
add in 2 <144217 144505> out 1 <144506>  # join source bit 1
const-mul-2 in 1 <144506> out 1 <144507> # join
add in 2 <144216 144507> out 1 <144508>  # join source bit 0
add in 2 <144508 144508> out 1 <144509>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <144213> out 1 <144510> # multiply-by-constant 4294967295
add in 2 <48 144510> out 1 <144511>      # 'CmpLT DFG.Input - DFG.Conditional'
split in 1 <144511> outplitBus
mul in 2 <144543 144509> out 1 <144775>  # cond trueterm
const-mul-neg-1 in 1 <144543> out 1 <144776> # cond minuscond
add in 2 <100 144776> out 1 <144777>     # cond negcond
mul in 2 <144777 144213> out 1 <144778>  # cond falseterm
add in 2 <144775 144778> out 1 <144779>  # cond result
add in 2 <144205 144779> out 1 <144780>  # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
split in 1 <144780> out 233 <144781 144782 144783 144784 144785 144786 144787 144788 144789 144790 144791 144792 144793 144794 144795 144796 144797 144798 144799 144800 144801 144802 144803 144804 144805 144806 144807 144808 144809 144810 144811 144812 144813 144814 144815 144816 144817 144818 144819 144820 144821 144822 144823 144824 144825 144826 144827 144828 144829 144830 144831 144832 144833 144834 144835 144836 144837 144838 144839 144840 144841 144842 144843 144844 144845 144846 144847 144848 144849 144850 144851 144852 144853 144854 144855 144856 144857 144858 144859 144860 144861 144862 144863 144864 144865 144866 144867 144868 144869 144870 144871 144872 144873 144874 144875 144876 144877 144878 144879 144880 144881 144882 144883 144884 144885 144886 144887 144888 144889 144890 144891 144892 144893 144894 144895 144896 144897 144898 144899 144900 144901 144902 144903 144904 144905 144906 144907 144908 144909 144910 144911 144912 144913 144914 144915 144916 144917 144918 144919 144920 144921 144922 144923 144924 144925 144926 144927 144928 144929 144930 144931 144932 144933 144934 144935 144936 144937 144938 144939 144940 144941 144942 144943 144944 144945 144946 144947 144948 144949 144950 144951 144952 144953 144954 144955 144956 144957 144958 144959 144960 144961 144962 144963 144964 144965 144966 144967 144968 144969 144970 144971 144972 144973 144974 144975 144976 144977 144978 144979 144980 144981 144982 144983 144984 144985 144986 144987 144988 144989 144990 144991 144992 144993 144994 144995 144996 144997 144998 144999 145000 145001 145002 145003 145004 145005 145006 145007 145008 145009 145010 145011 145012 145013> # SplitBus
const-mul-2 in 1 <144812> out 1 <145014> # join source bit 31
add in 2 <144811 145014> out 1 <145015>  # join source bit 30
const-mul-2 in 1 <145015> out 1 <145016> # join
add in 2 <144810 145016> out 1 <145017>  # join source bit 29
const-mul-2 in 1 <145017> out 1 <145018> # join
add in 2 <144809 145018> out 1 <145019>  # join source bit 28
const-mul-2 in 1 <145019> out 1 <145020> # join
add in 2 <144808 145020> out 1 <145021>  # join source bit 27
const-mul-2 in 1 <145021> out 1 <145022> # join
add in 2 <144807 145022> out 1 <145023>  # join source bit 26
const-mul-2 in 1 <145023> out 1 <145024> # join
add in 2 <144806 145024> out 1 <145025>  # join source bit 25
const-mul-2 in 1 <145025> out 1 <145026> # join
add in 2 <144805 145026> out 1 <145027>  # join source bit 24
const-mul-2 in 1 <145027> out 1 <145028> # join
add in 2 <144804 145028> out 1 <145029>  # join source bit 23
const-mul-2 in 1 <145029> out 1 <145030> # join
add in 2 <144803 145030> out 1 <145031>  # join source bit 22
const-mul-2 in 1 <145031> out 1 <145032> # join
add in 2 <144802 145032> out 1 <145033>  # join source bit 21
const-mul-2 in 1 <145033> out 1 <145034> # join
add in 2 <144801 145034> out 1 <145035>  # join source bit 20
const-mul-2 in 1 <145035> out 1 <145036> # join
add in 2 <144800 145036> out 1 <145037>  # join source bit 19
const-mul-2 in 1 <145037> out 1 <145038> # join
add in 2 <144799 145038> out 1 <145039>  # join source bit 18
const-mul-2 in 1 <145039> out 1 <145040> # join
add in 2 <144798 145040> out 1 <145041>  # join source bit 17
const-mul-2 in 1 <145041> out 1 <145042> # join
add in 2 <144797 145042> out 1 <145043>  # join source bit 16
const-mul-2 in 1 <145043> out 1 <145044> # join
add in 2 <144796 145044> out 1 <145045>  # join source bit 15
const-mul-2 in 1 <145045> out 1 <145046> # join
add in 2 <144795 145046> out 1 <145047>  # join source bit 14
const-mul-2 in 1 <145047> out 1 <145048> # join
add in 2 <144794 145048> out 1 <145049>  # join source bit 13
const-mul-2 in 1 <145049> out 1 <145050> # join
add in 2 <144793 145050> out 1 <145051>  # join source bit 12
const-mul-2 in 1 <145051> out 1 <145052> # join
add in 2 <144792 145052> out 1 <145053>  # join source bit 11
const-mul-2 in 1 <145053> out 1 <145054> # join
add in 2 <144791 145054> out 1 <145055>  # join source bit 10
const-mul-2 in 1 <145055> out 1 <145056> # join
add in 2 <144790 145056> out 1 <145057>  # join source bit 9
const-mul-2 in 1 <145057> out 1 <145058> # join
add in 2 <144789 145058> out 1 <145059>  # join source bit 8
const-mul-2 in 1 <145059> out 1 <145060> # join
add in 2 <144788 145060> out 1 <145061>  # join source bit 7
const-mul-2 in 1 <145061> out 1 <145062> # join
add in 2 <144787 145062> out 1 <145063>  # join source bit 6
const-mul-2 in 1 <145063> out 1 <145064> # join
add in 2 <144786 145064> out 1 <145065>  # join source bit 5
const-mul-2 in 1 <145065> out 1 <145066> # join
add in 2 <144785 145066> out 1 <145067>  # join source bit 4
const-mul-2 in 1 <145067> out 1 <145068> # join
add in 2 <144784 145068> out 1 <145069>  # join source bit 3
const-mul-2 in 1 <145069> out 1 <145070> # join
add in 2 <144783 145070> out 1 <145071>  # join source bit 2
const-mul-2 in 1 <145071> out 1 <145072> # join
add in 2 <144782 145072> out 1 <145073>  # join source bit 1
const-mul-2 in 1 <145073> out 1 <145074> # join
add in 2 <144781 145074> out 1 <145075>  # join source bit 0
add in 2 <145075 145075> out 1 <145076>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <144205> out 1 <145077> # multiply-by-constant 4294967295
add in 2 <144779 145077> out 1 <145078>  # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <145078> out 265 <145079 145080 145081 145082 145083 145084 145085 145086 145087 145088 145089 145090 145091 145092 145093 145094 145095 145096 145097 145098 145099 145100 145101 145102 145103 145104 145105 145106 145107 145108 145109 145110 145111 145112 145113 145114 145115 145116 145117 145118 145119 145120 145121 145122 145123 145124 145125 145126 145127 145128 145129 145130 145131 145132 145133 145134 145135 145136 145137 145138 145139 145140 145141 145142 145143 145144 145145 145146 145147 145148 145149 145150 145151 145152 145153 145154 145155 145156 145157 145158 145159 145160 145161 145162 145163 145164 145165 145166 145167 145168 145169 145170 145171 145172 145173 145174 145175 145176 145177 145178 145179 145180 145181 145182 145183 145184 145185 145186 145187 145188 145189 145190 145191 145192 145193 145194 145195 145196 145197 145198 145199 145200 145201 145202 145203 145204 145205 145206 145207 145208 145209 145210 145211 145212 145213 145214 145215 145216 145217 145218 145219 145220 145221 145222 145223 145224 145225 145226 145227 145228 145229 145230 145231 145232 145233 145234 145235 145236 145237 145238 145239 145240 145241 145242 145243 145244 145245 145246 145247 145248 145249 145250 145251 145252 145253 145254 145255 145256 145257 145258 145259 145260 145261 145262 145263 145264 145265 145266 145267 145268 145269 145270 145271 145272 145273 145274 145275 145276 145277 145278 145279 145280 145281 145282 145283 145284 145285 145286 145287 145288 145289 145290 145291 145292 145293 145294 145295 145296 145297 145298 145299 145300 145301 145302 145303 145304 145305 145306 145307 145308 145309 145310 145311 145312 145313 145314 145315 145316 145317 145318 145319 145320 145321 145322 145323 145324 145325 145326 145327 145328 145329 145330 145331 145332 145333 145334 145335 145336 145337 145338 145339 145340 145341 145342 145343> # SplitBus
mul in 2 <145110 145076> out 1 <145344>  # cond trueterm
const-mul-neg-1 in 1 <145110> out 1 <145345> # cond minuscond
add in 2 <100 145345> out 1 <145346>     # cond negcond
mul in 2 <145346 144205> out 1 <145347>  # cond falseterm
add in 2 <145344 145347> out 1 <145348>  # cond result
mul in 2 <144033 143997> out 1 <145349>  # cond trueterm
const-mul-neg-1 in 1 <144033> out 1 <145350> # cond minuscond
add in 2 <100 145350> out 1 <145351>     # cond negcond
mul in 2 <145351 143994> out 1 <145352>  # cond falseterm
add in 2 <145349 145352> out 1 <145353>  # cond result
mul in 2 <143889 143853> out 1 <145354>  # cond trueterm
const-mul-neg-1 in 1 <143889> out 1 <145355> # cond minuscond
add in 2 <100 145355> out 1 <145356>     # cond negcond
mul in 2 <145356 143850> out 1 <145357>  # cond falseterm
add in 2 <145354 145357> out 1 <145358>  # cond result
const-mul-ffffffff in 1 <145358> out 1 <145359> # multiply-by-constant 4294967295
add in 2 <145358 145353> out 1 <145360>  # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
add in 2 <145360 145359> out 1 <145361>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <145361> out 1 <145362> # multiply-by-constant 4294967295
add in 2 <145360 145362> out 1 <145363>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <145358> out 1 <145364> # multiply-by-constant 4294967295
add in 2 <145353 145364> out 1 <145365>  # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <145365> out 200 <145366 145367 145368 145369 145370 145371 145372 145373 145374 145375 145376 145377 145378 145379 145380 145381 145382 145383 145384 145385 145386 145387 145388 145389 145390 145391 145392 145393 145394 145395 145396 145397 145398 145399 145400 145401 145402 145403 145404 145405 145406 145407 145408 145409 145410 145411 145412 145413 145414 145415 145416 145417 145418 145419 145420 145421 145422 145423 145424 145425 145426 145427 145428 145429 145430 145431 145432 145433 145434 145435 145436 145437 145438 145439 145440 145441 145442 145443 145444 145445 145446 145447 145448 145449 145450 145451 145452 145453 145454 145455 145456 145457 145458 145459 145460 145461 145462 145463 145464 145465 145466 145467 145468 145469 145470 145471 145472 145473 145474 145475 145476 145477 145478 145479 145480 145481 145482 145483 145484 145485 145486 145487 145488 145489 145490 145491 145492 145493 145494 145495 145496 145497 145498 145499 145500 145501 145502 145503 145504 145505 145506 145507 145508 145509 145510 145511 145512 145513 145514 145515 145516 145517 145518 145519 145520 145521 145522 145523 145524 145525 145526 145527 145528 145529 145530 145531 145532 145533 145534 145535 145536 145537 145538 145539 145540 145541 145542 145543 145544 145545 145546 145547 145548 145549 145550 145551 145552 145553 145554 145555 145556 145557 145558 145559 145560 145561 145562 145563 145564 145565> # SplitBus
mul in 2 <145397 145363> out 1 <145566>  # cond trueterm
const-mul-neg-1 in 1 <145397> out 1 <145567> # cond minuscond
add in 2 <100 145567> out 1 <145568>     # cond negcond
mul in 2 <145568 145353> out 1 <145569>  # cond falseterm
add in 2 <145566 145569> out 1 <145570>  # cond result
const-mul-ffffffff in 1 <145570> out 1 <145571> # multiply-by-constant 4294967295
add in 2 <145570 145348> out 1 <145572>  # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
split in 1 <145572> out 235 <145573 145574 145575 145576 145577 145578 145579 145580 145581 145582 145583 145584 145585 145586 145587 145588 145589 145590 145591 145592 145593 145594 145595 145596 145597 145598 145599 145600 145601 145602 145603 145604 145605 145606 145607 145608 145609 145610 145611 145612 145613 145614 145615 145616 145617 145618 145619 145620 145621 145622 145623 145624 145625 145626 145627 145628 145629 145630 145631 145632 145633 145634 145635 145636 145637 145638 145639 145640 145641 145642 145643 145644 145645 145646 145647 145648 145649 145650 145651 145652 145653 145654 145655 145656 145657 145658 145659 145660 145661 145662 145663 145664 145665 145666 145667 145668 145669 145670 145671 145672 145673 145674 145675 145676 145677 145678 145679 145680 145681 145682 145683 145684 145685 145686 145687 145688 145689 145690 145691 145692 145693 145694 145695 145696 145697 145698 145699 145700 145701 145702 145703 145704 145705 145706 145707 145708 145709 145710 145711 145712 145713 145714 145715 145716 145717 145718 145719 145720 145721 145722 145723 145724 145725 145726 145727 145728 145729 145730 145731 145732 145733 145734 145735 145736 145737 145738 145739 145740 145741 145742 145743 145744 145745 145746 145747 145748 145749 145750 145751 145752 145753 145754 145755 145756 145757 145758 145759 145760 145761 145762 145763 145764 145765 145766 145767 145768 145769 145770 145771 145772 145773 145774 145775 145776 145777 145778 145779 145780 145781 145782 145783 145784 145785 145786 145787 145788 145789 145790 145791 145792 145793 145794 145795 145796 145797 145798 145799 145800 145801 145802 145803 145804 145805 145806 145807> # SplitBus
const-mul-2 in 1 <145604> out 1 <145808> # join source bit 31
add in 2 <145603 145808> out 1 <145809>  # join source bit 30
const-mul-2 in 1 <145809> out 1 <145810> # join
add in 2 <145602 145810> out 1 <145811>  # join source bit 29
const-mul-2 in 1 <145811> out 1 <145812> # join
add in 2 <145601 145812> out 1 <145813>  # join source bit 28
const-mul-2 in 1 <145813> out 1 <145814> # join
add in 2 <145600 145814> out 1 <145815>  # join source bit 27
const-mul-2 in 1 <145815> out 1 <145816> # join
add in 2 <145599 145816> out 1 <145817>  # join source bit 26
const-mul-2 in 1 <145817> out 1 <145818> # join
add in 2 <145598 145818> out 1 <145819>  # join source bit 25
const-mul-2 in 1 <145819> out 1 <145820> # join
add in 2 <145597 145820> out 1 <145821>  # join source bit 24
const-mul-2 in 1 <145821> out 1 <145822> # join
add in 2 <145596 145822> out 1 <145823>  # join source bit 23
const-mul-2 in 1 <145823> out 1 <145824> # join
add in 2 <145595 145824> out 1 <145825>  # join source bit 22
const-mul-2 in 1 <145825> out 1 <145826> # join
add in 2 <145594 145826> out 1 <145827>  # join source bit 21
const-mul-2 in 1 <145827> out 1 <145828> # join
add in 2 <145593 145828> out 1 <145829>  # join source bit 20
const-mul-2 in 1 <145829> out 1 <145830> # join
add in 2 <145592 145830> out 1 <145831>  # join source bit 19
const-mul-2 in 1 <145831> out 1 <145832> # join
add in 2 <145591 145832> out 1 <145833>  # join source bit 18
const-mul-2 in 1 <145833> out 1 <145834> # join
add in 2 <145590 145834> out 1 <145835>  # join source bit 17
const-mul-2 in 1 <145835> out 1 <145836> # join
add in 2 <145589 145836> out 1 <145837>  # join source bit 16
const-mul-2 in 1 <145837> out 1 <145838> # join
add in 2 <145588 145838> out 1 <145839>  # join source bit 15
const-mul-2 in 1 <145839> out 1 <145840> # join
add in 2 <145587 145840> out 1 <145841>  # join source bit 14
const-mul-2 in 1 <145841> out 1 <145842> # join
add in 2 <145586 145842> out 1 <145843>  # join source bit 13
const-mul-2 in 1 <145843> out 1 <145844> # join
add in 2 <145585 145844> out 1 <145845>  # join source bit 12
const-mul-2 in 1 <145845> out 1 <145846> # join
add in 2 <145584 145846> out 1 <145847>  # join source bit 11
const-mul-2 in 1 <145847> out 1 <145848> # join
add in 2 <145583 145848> out 1 <145849>  # join source bit 10
const-mul-2 in 1 <145849> out 1 <145850> # join
add in 2 <145582 145850> out 1 <145851>  # join source bit 9
const-mul-2 in 1 <145851> out 1 <145852> # join
add in 2 <145581 145852> out 1 <145853>  # join source bit 8
const-mul-2 in 1 <145853> out 1 <145854> # join
add in 2 <145580 145854> out 1 <145855>  # join source bit 7
const-mul-2 in 1 <145855> out 1 <145856> # join
add in 2 <145579 145856> out 1 <145857>  # join source bit 6
const-mul-2 in 1 <145857> out 1 <145858> # join
add in 2 <145578 145858> out 1 <145859>  # join source bit 5
const-mul-2 in 1 <145859> out 1 <145860> # join
add in 2 <145577 145860> out 1 <145861>  # join source bit 4
const-mul-2 in 1 <145861> out 1 <145862> # join
add in 2 <145576 145862> out 1 <145863>  # join source bit 3
const-mul-2 in 1 <145863> out 1 <145864> # join
add in 2 <145575 145864> out 1 <145865>  # join source bit 2
const-mul-2 in 1 <145865> out 1 <145866> # join
add in 2 <145574 145866> out 1 <145867>  # join source bit 1
const-mul-2 in 1 <145867> out 1 <145868> # join
add in 2 <145573 145868> out 1 <145869>  # join source bit 0
add in 2 <145869 145869> out 1 <145870>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <145870> out 1 <145871> # multiply-by-constant 4294967295
add in 2 <145572 145871> out 1 <145872>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <145570> out 1 <145873> # multiply-by-constant 4294967295
add in 2 <145348 145873> out 1 <145874>  # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <145874> out 267 <145875 145876 145877 145878 145879 145880 145881 145882 145883 145884 145885 145886 145887 145888 145889 145890 145891 145892 145893 145894 145895 145896 145897 145898 145899 145900 145901 145902 145903 145904 145905 145906 145907 145908 145909 145910 145911 145912 145913 145914 145915 145916 145917 145918 145919 145920 145921 145922 145923 145924 145925 145926 145927 145928 145929 145930 145931 145932 145933 145934 145935 145936 145937 145938 145939 145940 145941 145942 145943 145944 145945 145946 145947 145948 145949 145950 145951 145952 145953 145954 145955 145956 145957 145958 145959 145960 145961 145962 145963 145964 145965 145966 145967 145968 145969 145970 145971 145972 145973 145974 145975 145976 145977 145978 145979 145980 145981 145982 145983 145984 145985 145986 145987 145988 145989 145990 145991 145992 145993 145994 145995 145996 145997 145998 145999 146000 146001 146002 146003 146004 146005 146006 146007 146008 146009 146010 146011 146012 146013 146014 146015 146016 146017 146018 146019 146020 146021 146022 146023 146024 146025 146026 146027 146028 146029 146030 146031 146032 146033 146034 146035 146036 146037 146038 146039 146040 146041 146042 146043 146044 146045 146046 146047 146048 146049 146050 146051 146052 146053 146054 146055 146056 146057 146058 146059 146060 146061 146062 146063 146064 146065 146066 146067 146068 146069 146070 146071 146072 146073 146074 146075 146076 146077 146078 146079 146080 146081 146082 146083 146084 146085 146086 146087 146088 146089 146090 146091 146092 146093 146094 146095 146096 146097 146098 146099 146100 146101 146102 146103 146104 146105 146106 146107 146108 146109 146110 146111 146112 146113 146114 146115 146116 146117 146118 146119 146120 146121 146122 146123 146124 146125 146126 146127 146128 146129 146130 146131 146132 146133 146134 146135 146136 146137 146138 146139 146140 146141> # SplitBus
mul in 2 <145906 145872> out 1 <146142>  # cond trueterm
const-mul-neg-1 in 1 <145906> out 1 <146143> # cond minuscond
add in 2 <100 146143> out 1 <146144>     # cond negcond
mul in 2 <146144 145348> out 1 <146145>  # cond falseterm
add in 2 <146142 146145> out 1 <146146>  # cond result
add in 2 <146146 104> out 1 <146147>     # ArithBusReq.AddReq(DFG.Conditional,DFG.Constant)
const-mul-ffffffff in 1 <46> out 1 <146148> # multiply-by-constant 4294967295
add in 2 <146147 146148> out 1 <146149>  # 'CmpLT DFG.Add - DFG.Input'
split in 1 <146149> out 238 <146150 146151 146152 146153 146154 146155 146156 146157 146158 146159 146160 146161 146162 146163 146164 146165 146166 146167 146168 146169 146170 146171 146172 146173 146174 146175 146176 146177 146178 146179 146180 146181 146182 146183 146184 146185 146186 146187 146188 146189 146190 146191 146192 146193 146194 146195 146196 146197 146198 146199 146200 146201 146202 146203 146204 146205 146206 146207 146208 146209 146210 146211 146212 146213 146214 146215 146216 146217 146218 146219 146220 146221 146222 146223 146224 146225 146226 146227 146228 146229 146230 146231 146232 146233 146234 146235 146236 146237 146238 146239 146240 146241 146242 146243 146244 146245 146246 146247 146248 146249 146250 146251 146252 146253 146254 146255 146256 146257 146258 146259 146260 146261 146262 146263 146264 146265 146266 146267 146268 146269 146270 146271 146272 146273 146274 146275 146276 146277 146278 146279 146280 146281 146282 146283 146284 146285 146286 146287 146288 146289 146290 146291 146292 146293 146294 146295 146296 146297 146298 146299 146300 146301 146302 146303 146304 146305 146306 146307 146308 146309 146310 146311 146312 146313 146314 146315 146316 146317 146318 146319 146320 146321 146322 146323 146324 146325 146326 146327 146328 146329 146330 146331 146332 146333 146334 146335 146336 146337 146338 146339 146340 146341 146342 146343 146344 146345 146346 146347 146348 146349 146350 146351 146352 146353 146354 146355 146356 146357 146358 146359 146360 146361 146362 146363 146364 146365 146366 146367 146368 146369 146370 146371 146372 146373 146374 146375 146376 146377 146378 146379 146380 146381 146382 146383 146384 146385 146386 146387> # SplitBus
mul in 2 <146181 103> out 1 <146388>     # cond trueterm
const-mul-neg-1 in 1 <146181> out 1 <146389> # cond minuscond
add in 2 <100 146389> out 1 <146390>     # cond negcond
mul in 2 <146390 102> out 1 <146391>     # cond falseterm
add in 2 <146388 146391> out 1 <146392>  # cond result
add in 2 <146146 3084> out 1 <146393>    # ArithBusReq.AddReq(DFG.Conditional,DFG.Negate)
const-mul-ffffffff in 1 <146393> out 1 <146394> # multiply-by-constant 4294967295
add in 2 <46 146394> out 1 <146395>      # 'CmpLT DFG.Input - DFG.Subtract'
split in 1 <146395> outplitBus
mul in 2 <146427 103> out 1 <146666>     # cond trueterm
const-mul-neg-1 in 1 <146427> out 1 <146667> # cond minuscond
add in 2 <100 146667> out 1 <146668>     # cond negcond
mul in 2 <146668 146392> out 1 <146669>  # cond falseterm
add in 2 <146666 146669> out 1 <146670>  # cond result
const-mul-ffffffff in 1 <45> out 1 <146671> # multiply-by-constant 4294967295
add in 2 <45 46> out 1 <146672>          # ArithBusReq.AddReq(DFG.Input,DFG.Input)
add in 2 <146672 146671> out 1 <146673>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <146673> out 1 <146674> # multiply-by-constant 4294967295
add in 2 <146672 146674> out 1 <146675>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <45> out 1 <146676> # multiply-by-constant 4294967295
add in 2 <46 146676> out 1 <146677>      # 'CmpLT DFG.Input - DFG.Input'
split in 1 <146677> out 65 <146678 146679 146680 146681 146682 146683 146684 146685 146686 146687 146688 146689 146690 146691 146692 146693 146694 146695 146696 146697 146698 146699 146700 146701 146702 146703 146704 146705 146706 146707 146708 146709 146710 146711 146712 146713 146714 146715 146716 146717 146718 146719 146720 146721 146722 146723 146724 146725 146726 146727 146728 146729 146730 146731 146732 146733 146734 146735 146736 146737 146738 146739 146740 146741 146742> # SplitBus
mul in 2 <146709 146675> out 1 <146743>  # cond trueterm
const-mul-neg-1 in 1 <146709> out 1 <146744> # cond minuscond
add in 2 <100 146744> out 1 <146745>     # cond negcond
mul in 2 <146745 46> out 1 <146746>      # cond falseterm
add in 2 <146743 146746> out 1 <146747>  # cond result
const-mul-ffffffff in 1 <146747> out 1 <146748> # multiply-by-constant 4294967295
add in 2 <146747 47> out 1 <146749>      # ArithBusReq.AddReq(DFG.Conditional,DFG.Input)
add in 2 <146749 146748> out 1 <146750>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <146750> out 1 <146751> # multiply-by-constant 4294967295
add in 2 <146749 146751> out 1 <146752>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <146747> out 1 <146753> # multiply-by-constant 4294967295
add in 2 <47 146753> out 1 <146754>      # 'CmpLT DFG.Input - DFG.Conditional'
split in 1 <146754> out 131 <146755 146756 146757 146758 146759 146760 146761 146762 146763 146764 146765 146766 146767 146768 146769 146770 146771 146772 146773 146774 146775 146776 146777 146778 146779 146780 146781 146782 146783 146784 146785 146786 146787 146788 146789 146790 146791 146792 146793 146794 146795 146796 146797 146798 146799 146800 146801 146802 146803 146804 146805 146806 146807 146808 146809 146810 146811 146812 146813 146814 146815 146816 146817 146818 146819 146820 146821 146822 146823 146824 146825 146826 146827 146828 146829 146830 146831 146832 146833 146834 146835 146836 146837 146838 146839 146840 146841 146842 146843 146844 146845 146846 146847 146848 146849 146850 146851 146852 146853 146854 146855 146856 146857 146858 146859 146860 146861 146862 146863 146864 146865 146866 146867 146868 146869 146870 146871 146872 146873 146874 146875 146876 146877 146878 146879 146880 146881 146882 146883 146884 146885> # SplitBus
mul in 2 <146786 146752> out 1 <146886>  # cond trueterm
const-mul-neg-1 in 1 <146786> out 1 <146887> # cond minuscond
add in 2 <100 146887> out 1 <146888>     # cond negcond
mul in 2 <146888 47> out 1 <146889>      # cond falseterm
add in 2 <146886 146889> out 1 <146890>  # cond result
const-mul-ffffffff in 1 <146890> out 1 <146891> # multiply-by-constant 4294967295
add in 2 <146890 48> out 1 <146892>      # ArithBusReq.AddReq(DFG.Conditional,DFG.Input)
add in 2 <146892 146891> out 1 <146893>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <146890> out 1 <146894> # multiply-by-constant 4294967295
add in 2 <48 146894> out 1 <146895>      # 'CmpLT DFG.Input - DFG.Conditional'
split in 1 <146895> out 197 <146896 146897 146898 146899 146900 146901 146902 146903 146904 146905 146906 146907 146908 146909 146910 146911 146912 146913 146914 146915 146916 146917 146918 146919 146920 146921 146922 146923 146924 146925 146926 146927 146928 146929 146930 146931 146932 146933 146934 146935 146936 146937 146938 146939 146940 146941 146942 146943 146944 146945 146946 146947 146948 146949 146950 146951 146952 146953 146954 146955 146956 146957 146958 146959 146960 146961 146962 146963 146964 146965 146966 146967 146968 146969 146970 146971 146972 146973 146974 146975 146976 146977 146978 146979 146980 146981 146982 146983 146984 146985 146986 146987 146988 146989 146990 146991 146992 146993 146994 146995 146996 146997 146998 146999 147000 147001 147002 147003 147004 147005 147006 147007 147008 147009 147010 147011 147012 147013 147014 147015 147016 147017 147018 147019 147020 147021 147022 147023 147024 147025 147026 147027 147028 147029 147030 147031 147032 147033 147034 147035 147036 147037 147038 147039 147040 147041 147042 147043 147044 147045 147046 147047 147048 147049 147050 147051 147052 147053 147054 147055 147056 147057 147058 147059 147060 147061 147062 147063 147064 147065 147066 147067 147068 147069 147070 147071 147072 147073 147074 147075 147076 147077 147078 147079 147080 147081 147082 147083 147084 147085 147086 147087 147088 147089 147090 147091 147092> # SplitBus
mul in 2 <146927 146893> out 1 <147093>  # cond trueterm
const-mul-neg-1 in 1 <146927> out 1 <147094> # cond minuscond
add in 2 <100 147094> out 1 <147095>     # cond negcond
mul in 2 <147095 146890> out 1 <147096>  # cond falseterm
add in 2 <147093 147096> out 1 <147097>  # cond result
mul in 2 <146786 146750> out 1 <147098>  # cond trueterm
const-mul-neg-1 in 1 <146786> out 1 <147099> # cond minuscond
add in 2 <100 147099> out 1 <147100>     # cond negcond
mul in 2 <147100 146747> out 1 <147101>  # cond falseterm
add in 2 <147098 147101> out 1 <147102>  # cond result
mul in 2 <146709 146673> out 1 <147103>  # cond trueterm
const-mul-neg-1 in 1 <146709> out 1 <147104> # cond minuscond
add in 2 <100 147104> out 1 <147105>     # cond negcond
mul in 2 <147105 45> out 1 <147106>      # cond falseterm
add in 2 <147103 147106> out 1 <147107>  # cond result
const-mul-ffffffff in 1 <147107> out 1 <147108> # multiply-by-constant 4294967295
add in 2 <147107 147102> out 1 <147109>  # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
add in 2 <147109 147108> out 1 <147110>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <147110> out 1 <147111> # multiply-by-constant 4294967295
add in 2 <147109 147111> out 1 <147112>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <147107> out 1 <147113> # multiply-by-constant 4294967295
add in 2 <147102 147113> out 1 <147114>  # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <147114> out 132 <147115 147116 147117 147118 147119 147120 147121 147122 147123 147124 147125 147126 147127 147128 147129 147130 147131 147132 147133 147134 147135 147136 147137 147138 147139 147140 147141 147142 147143 147144 147145 147146 147147 147148 147149 147150 147151 147152 147153 147154 147155 147156 147157 147158 147159 147160 147161 147162 147163 147164 147165 147166 147167 147168 147169 147170 147171 147172 147173 147174 147175 147176 147177 147178 147179 147180 147181 147182 147183 147184 147185 147186 147187 147188 147189 147190 147191 147192 147193 147194 147195 147196 147197 147198 147199 147200 147201 147202 147203 147204 147205 147206 147207 147208 147209 147210 147211 147212 147213 147214 147215 147216 147217 147218 147219 147220 147221 147222 147223 147224 147225 147226 147227 147228 147229 147230 147231 147232 147233 147234 147235 147236 147237 147238 147239 147240 147241 147242 147243 147244 147245 147246> # SplitBus
mul in 2 <147146 147112> out 1 <147247>  # cond trueterm
const-mul-neg-1 in 1 <147146> out 1 <147248> # cond minuscond
add in 2 <100 147248> out 1 <147249>     # cond negcond
mul in 2 <147249 147102> out 1 <147250>  # cond falseterm
add in 2 <147247 147250> out 1 <147251>  # cond result
const-mul-ffffffff in 1 <147251> out 1 <147252> # multiply-by-constant 4294967295
add in 2 <147251 147097> out 1 <147253>  # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
add in 2 <147253 147252> out 1 <147254>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <147254> out 1 <147255> # multiply-by-constant 4294967295
add in 2 <147253 147255> out 1 <147256>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <147251> out 1 <147257> # multiply-by-constant 4294967295
add in 2 <147097 147257> out 1 <147258>  # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <147258> out 199 <147259 147260 147261 147262 147263 147264 147265 147266 147267 147268 147269 147270 147271 147272 147273 147274 147275 147276 147277 147278 147279 147280 147281 147282 147283 147284 147285 147286 147287 147288 147289 147290 147291 147292 147293 147294 147295 147296 147297 147298 147299 147300 147301 147302 147303 147304 147305 147306 147307 147308 147309 147310 147311 147312 147313 147314 147315 147316 147317 147318 147319 147320 147321 147322 147323 147324 147325 147326 147327 147328 147329 147330 147331 147332 147333 147334 147335 147336 147337 147338 147339 147340 147341 147342 147343 147344 147345 147346 147347 147348 147349 147350 147351 147352 147353 147354 147355 147356 147357 147358 147359 147360 147361 147362 147363 147364 147365 147366 147367 147368 147369 147370 147371 147372 147373 147374 147375 147376 147377 147378 147379 147380 147381 147382 147383 147384 147385 147386 147387 147388 147389 147390 147391 147392 147393 147394 147395 147396 147397 147398 147399 147400 147401 147402 147403 147404 147405 147406 147407 147408 147409 147410 147411 147412 147413 147414 147415 147416 147417 147418 147419 147420 147421 147422 147423 147424 147425 147426 147427 147428 147429 147430 147431 147432 147433 147434 147435 147436 147437 147438 147439 147440 147441 147442 147443 147444 147445 147446 147447 147448 147449 147450 147451 147452 147453 147454 147455 147456 147457> # SplitBus
mul in 2 <147290 147256> out 1 <147458>  # cond trueterm
const-mul-neg-1 in 1 <147290> out 1 <147459> # cond minuscond
add in 2 <100 147459> out 1 <147460>     # cond negcond
mul in 2 <147460 147097> out 1 <147461>  # cond falseterm
add in 2 <147458 147461> out 1 <147462>  # cond result
const-mul-ffffffff in 1 <147462> out 1 <147463> # multiply-by-constant 4294967295
const-mul-ffffffff in 1 <146893> out 1 <147464> # multiply-by-constant 4294967295
add in 2 <146892 147464> out 1 <147465>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
mul in 2 <146927 147465> out 1 <147466>  # cond trueterm
const-mul-neg-1 in 1 <146927> out 1 <147467> # cond minuscond
add in 2 <100 147467> out 1 <147468>     # cond negcond
mul in 2 <147468 48> out 1 <147469>      # cond falseterm
add in 2 <147466 147469> out 1 <147470>  # cond result
const-mul-ffffffff in 1 <147470> out 1 <147471> # multiply-by-constant 4294967295
add in 2 <147470 49> out 1 <147472>      # ArithBusReq.AddReq(DFG.Conditional,DFG.Input)
split in 1 <147472> out 231 <147473 147474 147475 147476 147477 147478 147479 147480 147481 147482 147483 147484 147485 147486 147487 147488 147489 147490 147491 147492 147493 147494 147495 147496 147497 147498 147499 147500 147501 147502 147503 147504 147505 147506 147507 147508 147509 147510 147511 147512 147513 147514 147515 147516 147517 147518 147519 147520 147521 147522 147523 147524 147525 147526 147527 147528 147529 147530 147531 147532 147533 147534 147535 147536 147537 147538 147539 147540 147541 147542 147543 147544 147545 147546 147547 147548 147549 147550 147551 147552 147553 147554 147555 147556 147557 147558 147559 147560 147561 147562 147563 147564 147565 147566 147567 147568 147569 147570 147571 147572 147573 147574 147575 147576 147577 147578 147579 147580 147581 147582 147583 147584 147585 147586 147587 147588 147589 147590 147591 147592 147593 147594 147595 147596 147597 147598 147599 147600 147601 147602 147603 147604 147605 147606 147607 147608 147609 147610 147611 147612 147613 147614 147615 147616 147617 147618 147619 147620 147621 147622 147623 147624 147625 147626 147627 147628 147629 147630 147631 147632 147633 147634 147635 147636 147637 147638 147639 147640 147641 147642 147643 147644 147645 147646 147647 147648 147649 147650 147651 147652 147653 147654 147655 147656 147657 147658 147659 147660 147661 147662 147663 147664 147665 147666 147667 147668 147669 147670 147671 147672 147673 147674 147675 147676 147677 147678 147679 147680 147681 147682 147683 147684 147685 147686 147687 147688 147689 147690 147691 147692 147693 147694 147695 147696 147697 147698 147699 147700 147701 147702 147703> # SplitBus
const-mul-2 in 1 <147504> out 1 <147704> # join source bit 31
add in 2 <147503 147704> out 1 <147705>  # join source bit 30
const-mul-2 in 1 <147705> out 1 <147706> # join
add in 2 <147502 147706> out 1 <147707>  # join source bit 29
const-mul-2 in 1 <147707> out 1 <147708> # join
add in 2 <147501 147708> out 1 <147709>  # join source bit 28
const-mul-2 in 1 <147709> out 1 <147710> # join
add in 2 <147500 147710> out 1 <147711>  # join source bit 27
const-mul-2 in 1 <147711> out 1 <147712> # join
add in 2 <147499 147712> out 1 <147713>  # join source bit 26
const-mul-2 in 1 <147713> out 1 <147714> # join
add in 2 <147498 147714> out 1 <147715>  # join source bit 25
const-mul-2 in 1 <147715> out 1 <147716> # join
add in 2 <147497 147716> out 1 <147717>  # join source bit 24
const-mul-2 in 1 <147717> out 1 <147718> # join
add in 2 <147496 147718> out 1 <147719>  # join source bit 23
const-mul-2 in 1 <147719> out 1 <147720> # join
add in 2 <147495 147720> out 1 <147721>  # join source bit 22
const-mul-2 in 1 <147721> out 1 <147722> # join
add in 2 <147494 147722> out 1 <147723>  # join source bit 21
const-mul-2 in 1 <147723> out 1 <147724> # join
add in 2 <147493 147724> out 1 <147725>  # join source bit 20
const-mul-2 in 1 <147725> out 1 <147726> # join
add in 2 <147492 147726> out 1 <147727>  # join source bit 19
const-mul-2 in 1 <147727> out 1 <147728> # join
add in 2 <147491 147728> out 1 <147729>  # join source bit 18
const-mul-2 in 1 <147729> out 1 <147730> # join
add in 2 <147490 147730> out 1 <147731>  # join source bit 17
const-mul-2 in 1 <147731> out 1 <147732> # join
add in 2 <147489 147732> out 1 <147733>  # join source bit 16
const-mul-2 in 1 <147733> out 1 <147734> # join
add in 2 <147488 147734> out 1 <147735>  # join source bit 15
const-mul-2 in 1 <147735> out 1 <147736> # join
add in 2 <147487 147736> out 1 <147737>  # join source bit 14
const-mul-2 in 1 <147737> out 1 <147738> # join
add in 2 <147486 147738> out 1 <147739>  # join source bit 13
const-mul-2 in 1 <147739> out 1 <147740> # join
add in 2 <147485 147740> out 1 <147741>  # join source bit 12
const-mul-2 in 1 <147741> out 1 <147742> # join
add in 2 <147484 147742> out 1 <147743>  # join source bit 11
const-mul-2 in 1 <147743> out 1 <147744> # join
add in 2 <147483 147744> out 1 <147745>  # join source bit 10
const-mul-2 in 1 <147745> out 1 <147746> # join
add in 2 <147482 147746> out 1 <147747>  # join source bit 9
const-mul-2 in 1 <147747> out 1 <147748> # join
add in 2 <147481 147748> out 1 <147749>  # join source bit 8
const-mul-2 in 1 <147749> out 1 <147750> # join
add in 2 <147480 147750> out 1 <147751>  # join source bit 7
const-mul-2 in 1 <147751> out 1 <147752> # join
add in 2 <147479 147752> out 1 <147753>  # join source bit 6
const-mul-2 in 1 <147753> out 1 <147754> # join
add in 2 <147478 147754> out 1 <147755>  # join source bit 5
const-mul-2 in 1 <147755> out 1 <147756> # join
add in 2 <147477 147756> out 1 <147757>  # join source bit 4
const-mul-2 in 1 <147757> out 1 <147758> # join
add in 2 <147476 147758> out 1 <147759>  # join source bit 3
const-mul-2 in 1 <147759> out 1 <147760> # join
add in 2 <147475 147760> out 1 <147761>  # join source bit 2
const-mul-2 in 1 <147761> out 1 <147762> # join
add in 2 <147474 147762> out 1 <147763>  # join source bit 1
const-mul-2 in 1 <147763> out 1 <147764> # join
add in 2 <147473 147764> out 1 <147765>  # join source bit 0
add in 2 <147765 147765> out 1 <147766>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <147470> out 1 <147767> # multiply-by-constant 4294967295
add in 2 <49 147767> out 1 <147768>      # 'CmpLT DFG.Input - DFG.Conditional'
split in 1 <147768> out 263 <147769 147770 147771 147772 147773 147774 147775 147776 147777 147778 147779 147780 147781 147782 147783 147784 147785 147786 147787 147788 147789 147790 147791 147792 147793 147794 147795 147796 147797 147798 147799 147800 147801 147802 147803 147804 147805 147806 147807 147808 147809 147810 147811 147812 147813 147814 147815 147816 147817 147818 147819 147820 147821 147822 147823 147824 147825 147826 147827 147828 147829 147830 147831 147832 147833 147834 147835 147836 147837 147838 147839 147840 147841 147842 147843 147844 147845 147846 147847 147848 147849 147850 147851 147852 147853 147854 147855 147856 147857 147858 147859 147860 147861 147862 147863 147864 147865 147866 147867 147868 147869 147870 147871 147872 147873 147874 147875 147876 147877 147878 147879 147880 147881 147882 147883 147884 147885 147886 147887 147888 147889 147890 147891 147892 147893 147894 147895 147896 147897 147898 147899 147900 147901 147902 147903 147904 147905 147906 147907 147908 147909 147910 147911 147912 147913 147914 147915 147916 147917 147918 147919 147920 147921 147922 147923 147924 147925 147926 147927 147928 147929 147930 147931 147932 147933 147934 147935 147936 147937 147938 147939 147940 147941 147942 147943 147944 147945 147946 147947 147948 147949 147950 147951 147952 147953 147954 147955 147956 147957 147958 147959 147960 147961 147962 147963 147964 147965 147966 147967 147968 147969 147970 147971 147972 147973 147974 147975 147976 147977 147978 147979 147980 147981 147982 147983 147984 147985 147986 147987 147988 147989 147990 147991 147992 147993 147994 147995 147996 147997 147998 147999 148000 148001 148002 148003 148004 148005 148006 148007 148008 148009 148010 148011 148012 148013 148014 148015 148016 148017 148018 148019 148020 148021 148022 148023 148024 148025 148026 148027 148028 148029 148030 148031> # SplitBus
mul in 2 <147800 147766> out 1 <148032>  # cond trueterm
const-mul-neg-1 in 1 <147800> out 1 <148033> # cond minuscond
add in 2 <100 148033> out 1 <148034>     # cond negcond
mul in 2 <148034 147470> out 1 <148035>  # cond falseterm
add in 2 <148032 148035> out 1 <148036>  # cond result
add in 2 <147462 148036> out 1 <148037>  # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
split in 1 <148037> out 233 <148038 148039 148040 148041 148042 148043 148044 148045 148046 148047 148048 148049 148050 148051 148052 148053 148054 148055 148056 148057 148058 148059 148060 148061 148062 148063 148064 148065 148066 148067 148068 148069 148070 148071 148072 148073 148074 148075 148076 148077 148078 148079 148080 148081 148082 148083 148084 148085 148086 148087 148088 148089 148090 148091 148092 148093 148094 148095 148096 148097 148098 148099 148100 148101 148102 148103 148104 148105 148106 148107 148108 148109 148110 148111 148112 148113 148114 148115 148116 148117 148118 148119 148120 148121 148122 148123 148124 148125 148126 148127 148128 148129 148130 148131 148132 148133 148134 148135 148136 148137 148138 148139 148140 148141 148142 148143 148144 148145 148146 148147 148148 148149 148150 148151 148152 148153 148154 148155 148156 148157 148158 148159 148160 148161 148162 148163 148164 148165 148166 148167 148168 148169 148170 148171 148172 148173 148174 148175 148176 148177 148178 148179 148180 148181 148182 148183 148184 148185 148186 148187 148188 148189 148190 148191 148192 148193 148194 148195 148196 148197 148198 148199 148200 148201 148202 148203 148204 148205 148206 148207 148208 148209 148210 148211 148212 148213 148214 148215 148216 148217 148218 148219 148220 148221 148222 148223 148224 148225 148226 148227 148228 148229 148230 148231 148232 148233 148234 148235 148236 148237 148238 148239 148240 148241 148242 148243 148244 148245 148246 148247 148248 148249 148250 148251 148252 148253 148254 148255 148256 148257 148258 148259 148260 148261 148262 148263 148264 148265 148266 148267 148268 148269 148270> # SplitBus
const-mul-2 in 1 <148069> out 1 <148271> # join source bit 31
add in 2 <148068 148271> out 1 <148272>  # join source bit 30
const-mul-2 in 1 <148272> out 1 <148273> # join
add in 2 <148067 148273> out 1 <148274>  # join source bit 29
const-mul-2 in 1 <148274> out 1 <148275> # join
add in 2 <148066 148275> out 1 <148276>  # join source bit 28
const-mul-2 in 1 <148276> out 1 <148277> # join
add in 2 <148065 148277> out 1 <148278>  # join source bit 27
const-mul-2 in 1 <148278> out 1 <148279> # join
add in 2 <148064 148279> out 1 <148280>  # join source bit 26
const-mul-2 in 1 <148280> out 1 <148281> # join
add in 2 <148063 148281> out 1 <148282>  # join source bit 25
const-mul-2 in 1 <148282> out 1 <148283> # join
add in 2 <148062 148283> out 1 <148284>  # join source bit 24
const-mul-2 in 1 <148284> out 1 <148285> # join
add in 2 <148061 148285> out 1 <148286>  # join source bit 23
const-mul-2 in 1 <148286> out 1 <148287> # join
add in 2 <148060 148287> out 1 <148288>  # join source bit 22
const-mul-2 in 1 <148288> out 1 <148289> # join
add in 2 <148059 148289> out 1 <148290>  # join source bit 21
const-mul-2 in 1 <148290> out 1 <148291> # join
add in 2 <148058 148291> out 1 <148292>  # join source bit 20
const-mul-2 in 1 <148292> out 1 <148293> # join
add in 2 <148057 148293> out 1 <148294>  # join source bit 19
const-mul-2 in 1 <148294> out 1 <148295> # join
add in 2 <148056 148295> out 1 <148296>  # join source bit 18
const-mul-2 in 1 <148296> out 1 <148297> # join
add in 2 <148055 148297> out 1 <148298>  # join source bit 17
const-mul-2 in 1 <148298> out 1 <148299> # join
add in 2 <148054 148299> out 1 <148300>  # join source bit 16
const-mul-2 in 1 <148300> out 1 <148301> # join
add in 2 <148053 148301> out 1 <148302>  # join source bit 15
const-mul-2 in 1 <148302> out 1 <148303> # join
add in 2 <148052 148303> out 1 <148304>  # join source bit 14
const-mul-2 in 1 <148304> out 1 <148305> # join
add in 2 <148051 148305> out 1 <148306>  # join source bit 13
const-mul-2 in 1 <148306> out 1 <148307> # join
add in 2 <148050 148307> out 1 <148308>  # join source bit 12
const-mul-2 in 1 <148308> out 1 <148309> # join
add in 2 <148049 148309> out 1 <148310>  # join source bit 11
const-mul-2 in 1 <148310> out 1 <148311> # join
add in 2 <148048 148311> out 1 <148312>  # join source bit 10
const-mul-2 in 1 <148312> out 1 <148313> # join
add in 2 <148047 148313> out 1 <148314>  # join source bit 9
const-mul-2 in 1 <148314> out 1 <148315> # join
add in 2 <148046 148315> out 1 <148316>  # join source bit 8
const-mul-2 in 1 <148316> out 1 <148317> # join
add in 2 <148045 148317> out 1 <148318>  # join source bit 7
const-mul-2 in 1 <148318> out 1 <148319> # join
add in 2 <148044 148319> out 1 <148320>  # join source bit 6
const-mul-2 in 1 <148320> out 1 <148321> # join
add in 2 <148043 148321> out 1 <148322>  # join source bit 5
const-mul-2 in 1 <148322> out 1 <148323> # join
add in 2 <148042 148323> out 1 <148324>  # join source bit 4
const-mul-2 in 1 <148324> out 1 <148325> # join
add in 2 <148041 148325> out 1 <148326>  # join source bit 3
const-mul-2 in 1 <148326> out 1 <148327> # join
add in 2 <148040 148327> out 1 <148328>  # join source bit 2
const-mul-2 in 1 <148328> out 1 <148329> # join
add in 2 <148039 148329> out 1 <148330>  # join source bit 1
const-mul-2 in 1 <148330> out 1 <148331> # join
add in 2 <148038 148331> out 1 <148332>  # join source bit 0
add in 2 <148332 148332> out 1 <148333>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <147462> out 1 <148334> # multiply-by-constant 4294967295
add in 2 <148036 148334> out 1 <148335>  # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <148335> out 265 <148336 148337 148338 148339 148340 148341 148342 148343 148344 148345 148346 148347 148348 148349 148350 148351 148352 148353 148354 148355 148356 148357 148358 148359 148360 148361 148362 148363 148364 148365 148366 148367 148368 148369 148370 148371 148372 148373 148374 148375 148376 148377 148378 148379 148380 148381 148382 148383 148384 148385 148386 148387 148388 148389 148390 148391 148392 148393 148394 148395 148396 148397 148398 148399 148400 148401 148402 148403 148404 148405 148406 148407 148408 148409 148410 148411 148412 148413 148414 148415 148416 148417 148418 148419 148420 148421 148422 148423 148424 148425 148426 148427 148428 148429 148430 148431 148432 148433 148434 148435 148436 148437 148438 148439 148440 148441 148442 148443 148444 148445 148446 148447 148448 148449 148450 148451 148452 148453 148454 148455 148456 148457 148458 148459 148460 148461 148462 148463 148464 148465 148466 148467 148468 148469 148470 148471 148472 148473 148474 148475 148476 148477 148478 148479 148480 148481 148482 148483 148484 148485 148486 148487 148488 148489 148490 148491 148492 148493 148494 148495 148496 148497 148498 148499 148500 148501 148502 148503 148504 148505 148506 148507 148508 148509 148510 148511 148512 148513 148514 148515 148516 148517 148518 148519 148520 148521 148522 148523 148524 148525 148526 148527 148528 148529 148530 148531 148532 148533 148534 148535 148536 148537 148538 148539 148540 148541 148542 148543 148544 148545 148546 148547 148548 148549 148550 148551 148552 148553 148554 148555 148556 148557 148558 148559 148560 148561 148562 148563 148564 148565 148566 148567 148568 148569 148570 148571 148572 148573 148574 148575 148576 148577 148578 148579 148580 148581 148582 148583 148584 148585 148586 148587 148588 148589 148590 148591 148592 148593 148594 148595 148596 148597 148598 148599 148600> # SplitBus
mul in 2 <148367 148333> out 1 <148601>  # cond trueterm
const-mul-neg-1 in 1 <148367> out 1 <148602> # cond minuscond
add in 2 <100 148602> out 1 <148603>     # cond negcond
mul in 2 <148603 147462> out 1 <148604>  # cond falseterm
add in 2 <148601 148604> out 1 <148605>  # cond result
mul in 2 <147290 147254> out 1 <148606>  # cond trueterm
const-mul-neg-1 in 1 <147290> out 1 <148607> # cond minuscond
add in 2 <100 148607> out 1 <148608>     # cond negcond
mul in 2 <148608 147251> out 1 <148609>  # cond falseterm
add in 2 <148606 148609> out 1 <148610>  # cond result
mul in 2 <147146 147110> out 1 <148611>  # cond trueterm
const-mul-neg-1 in 1 <147146> out 1 <148612> # cond minuscond
add in 2 <100 148612> out 1 <148613>     # cond negcond
mul in 2 <148613 147107> out 1 <148614>  # cond falseterm
add in 2 <148611 148614> out 1 <148615>  # cond result
const-mul-ffffffff in 1 <148615> out 1 <148616> # multiply-by-constant 4294967295
add in 2 <148615 148610> out 1 <148617>  # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
add in 2 <148617 148616> out 1 <148618>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <148618> out 1 <148619> # multiply-by-constant 4294967295
add in 2 <148617 148619> out 1 <148620>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <148615> out 1 <148621> # multiply-by-constant 4294967295
add in 2 <148610 148621> out 1 <148622>  # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <148622> out 200 <148623 148624 148625 148626 148627 148628 148629 148630 148631 148632 148633 148634 148635 148636 148637 148638 148639 148640 148641 148642 148643 148644 148645 148646 148647 148648 148649 148650 148651 148652 148653 148654 148655 148656 148657 148658 148659 148660 148661 148662 148663 148664 148665 148666 148667 148668 148669 148670 148671 148672 148673 148674 148675 148676 148677 148678 148679 148680 148681 148682 148683 148684 148685 148686 148687 148688 148689 148690 148691 148692 148693 148694 148695 148696 148697 148698 148699 148700 148701 148702 148703 148704 148705 148706 148707 148708 148709 148710 148711 148712 148713 148714 148715 148716 148717 148718 148719 148720 148721 148722 148723 148724 148725 148726 148727 148728 148729 148730 148731 148732 148733 148734 148735 148736 148737 148738 148739 148740 148741 148742 148743 148744 148745 148746 148747 148748 148749 148750 148751 148752 148753 148754 148755 148756 148757 148758 148759 148760 148761 148762 148763 148764 148765 148766 148767 148768 148769 148770 148771 148772 148773 148774 148775 148776 148777 148778 148779 148780 148781 148782 148783 148784 148785 148786 148787 148788 148789 148790 148791 148792 148793 148794 148795 148796 148797 148798 148799 148800 148801 148802 148803 148804 148805 148806 148807 148808 148809 148810 148811 148812 148813 148814 148815 148816 148817 148818 148819 148820 148821 148822> # SplitBus
mul in 2 <148654 148620> out 1 <148823>  # cond trueterm
const-mul-neg-1 in 1 <148654> out 1 <148824> # cond minuscond
add in 2 <100 148824> out 1 <148825>     # cond negcond
mul in 2 <148825 148610> out 1 <148826>  # cond falseterm
add in 2 <148823 148826> out 1 <148827>  # cond result
const-mul-ffffffff in 1 <148827> out 1 <148828> # multiply-by-constant 4294967295
add in 2 <148827 148605> out 1 <148829>  # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
split in 1 <148829> outplitBus
const-mul-2 in 1 <148861> out 1 <149065> # join source bit 31
add in 2 <148860 149065> out 1 <149066>  # join source bit 30
const-mul-2 in 1 <149066> out 1 <149067> # join
add in 2 <148859 149067> out 1 <149068>  # join source bit 29
const-mul-2 in 1 <149068> out 1 <149069> # join
add in 2 <148858 149069> out 1 <149070>  # join source bit 28
const-mul-2 in 1 <149070> out 1 <149071> # join
add in 2 <148857 149071> out 1 <149072>  # join source bit 27
const-mul-2 in 1 <149072> out 1 <149073> # join
add in 2 <148856 149073> out 1 <149074>  # join source bit 26
const-mul-2 in 1 <149074> out 1 <149075> # join
add in 2 <148855 149075> out 1 <149076>  # join source bit 25
const-mul-2 in 1 <149076> out 1 <149077> # join
add in 2 <148854 149077> out 1 <149078>  # join source bit 24
const-mul-2 in 1 <149078> out 1 <149079> # join
add in 2 <148853 149079> out 1 <149080>  # join source bit 23
const-mul-2 in 1 <149080> out 1 <149081> # join
add in 2 <148852 149081> out 1 <149082>  # join source bit 22
const-mul-2 in 1 <149082> out 1 <149083> # join
add in 2 <148851 149083> out 1 <149084>  # join source bit 21
const-mul-2 in 1 <149084> out 1 <149085> # join
add in 2 <148850 149085> out 1 <149086>  # join source bit 20
const-mul-2 in 1 <149086> out 1 <149087> # join
add in 2 <148849 149087> out 1 <149088>  # join source bit 19
const-mul-2 in 1 <149088> out 1 <149089> # join
add in 2 <148848 149089> out 1 <149090>  # join source bit 18
const-mul-2 in 1 <149090> out 1 <149091> # join
add in 2 <148847 149091> out 1 <149092>  # join source bit 17
const-mul-2 in 1 <149092> out 1 <149093> # join
add in 2 <148846 149093> out 1 <149094>  # join source bit 16
const-mul-2 in 1 <149094> out 1 <149095> # join
add in 2 <148845 149095> out 1 <149096>  # join source bit 15
const-mul-2 in 1 <149096> out 1 <149097> # join
add in 2 <148844 149097> out 1 <149098>  # join source bit 14
const-mul-2 in 1 <149098> out 1 <149099> # join
add in 2 <148843 149099> out 1 <149100>  # join source bit 13
const-mul-2 in 1 <149100> out 1 <149101> # join
add in 2 <148842 149101> out 1 <149102>  # join source bit 12
const-mul-2 in 1 <149102> out 1 <149103> # join
add in 2 <148841 149103> out 1 <149104>  # join source bit 11
const-mul-2 in 1 <149104> out 1 <149105> # join
add in 2 <148840 149105> out 1 <149106>  # join source bit 10
const-mul-2 in 1 <149106> out 1 <149107> # join
add in 2 <148839 149107> out 1 <149108>  # join source bit 9
const-mul-2 in 1 <149108> out 1 <149109> # join
add in 2 <148838 149109> out 1 <149110>  # join source bit 8
const-mul-2 in 1 <149110> out 1 <149111> # join
add in 2 <148837 149111> out 1 <149112>  # join source bit 7
const-mul-2 in 1 <149112> out 1 <149113> # join
add in 2 <148836 149113> out 1 <149114>  # join source bit 6
const-mul-2 in 1 <149114> out 1 <149115> # join
add in 2 <148835 149115> out 1 <149116>  # join source bit 5
const-mul-2 in 1 <149116> out 1 <149117> # join
add in 2 <148834 149117> out 1 <149118>  # join source bit 4
const-mul-2 in 1 <149118> out 1 <149119> # join
add in 2 <148833 149119> out 1 <149120>  # join source bit 3
const-mul-2 in 1 <149120> out 1 <149121> # join
add in 2 <148832 149121> out 1 <149122>  # join source bit 2
const-mul-2 in 1 <149122> out 1 <149123> # join
add in 2 <148831 149123> out 1 <149124>  # join source bit 1
const-mul-2 in 1 <149124> out 1 <149125> # join
add in 2 <148830 149125> out 1 <149126>  # join source bit 0
add in 2 <149126 149126> out 1 <149127>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <149127> out 1 <149128> # multiply-by-constant 4294967295
add in 2 <148829 149128> out 1 <149129>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <148827> out 1 <149130> # multiply-by-constant 4294967295
add in 2 <148605 149130> out 1 <149131>  # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <149131> out 267 <149132 149133 149134 149135 149136 149137 149138 149139 149140 149141 149142 149143 149144 149145 149146 149147 149148 149149 149150 149151 149152 149153 149154 149155 149156 149157 149158 149159 149160 149161 149162 149163 149164 149165 149166 149167 149168 149169 149170 149171 149172 149173 149174 149175 149176 149177 149178 149179 149180 149181 149182 149183 149184 149185 149186 149187 149188 149189 149190 149191 149192 149193 149194 149195 149196 149197 149198 149199 149200 149201 149202 149203 149204 149205 149206 149207 149208 149209 149210 149211 149212 149213 149214 149215 149216 149217 149218 149219 149220 149221 149222 149223 149224 149225 149226 149227 149228 149229 149230 149231 149232 149233 149234 149235 149236 149237 149238 149239 149240 149241 149242 149243 149244 149245 149246 149247 149248 149249 149250 149251 149252 149253 149254 149255 149256 149257 149258 149259 149260 149261 149262 149263 149264 149265 149266 149267 149268 149269 149270 149271 149272 149273 149274 149275 149276 149277 149278 149279 149280 149281 149282 149283 149284 149285 149286 149287 149288 149289 149290 149291 149292 149293 149294 149295 149296 149297 149298 149299 149300 149301 149302 149303 149304 149305 149306 149307 149308 149309 149310 149311 149312 149313 149314 149315 149316 149317 149318 149319 149320 149321 149322 149323 149324 149325 149326 149327 149328 149329 149330 149331 149332 149333 149334 149335 149336 149337 149338 149339 149340 149341 149342 149343 149344 149345 149346 149347 149348 149349 149350 149351 149352 149353 149354 149355 149356 149357 149358 149359 149360 149361 149362 149363 149364 149365 149366 149367 149368 149369 149370 149371 149372 149373 149374 149375 149376 149377 149378 149379 149380 149381 149382 149383 149384 149385 149386 149387 149388 149389 149390 149391 149392 149393 149394 149395 149396 149397 149398> # SplitBus
mul in 2 <149163 149129> out 1 <149399>  # cond trueterm
const-mul-neg-1 in 1 <149163> out 1 <149400> # cond minuscond
add in 2 <100 149400> out 1 <149401>     # cond negcond
mul in 2 <149401 148605> out 1 <149402>  # cond falseterm
add in 2 <149399 149402> out 1 <149403>  # cond result
add in 2 <149403 104> out 1 <149404>     # ArithBusReq.AddReq(DFG.Conditional,DFG.Constant)
const-mul-ffffffff in 1 <47> out 1 <149405> # multiply-by-constant 4294967295
add in 2 <149404 149405> out 1 <149406>  # 'CmpLT DFG.Add - DFG.Input'
split in 1 <149406> outplitBus
mul in 2 <149438 103> out 1 <149645>     # cond trueterm
const-mul-neg-1 in 1 <149438> out 1 <149646> # cond minuscond
add in 2 <100 149646> out 1 <149647>     # cond negcond
mul in 2 <149647 102> out 1 <149648>     # cond falseterm
add in 2 <149645 149648> out 1 <149649>  # cond result
add in 2 <149403 3084> out 1 <149650>    # ArithBusReq.AddReq(DFG.Conditional,DFG.Negate)
const-mul-ffffffff in 1 <149650> out 1 <149651> # multiply-by-constant 4294967295
add in 2 <47 149651> out 1 <149652>      # 'CmpLT DFG.Input - DFG.Subtract'
split in 1 <149652> out 270 <149653 149654 149655 149656 149657 149658 149659 149660 149661 149662 149663 149664 149665 149666 149667 149668 149669 149670 149671 149672 149673 149674 149675 149676 149677 149678 149679 149680 149681 149682 149683 149684 149685 149686 149687 149688 149689 149690 149691 149692 149693 149694 149695 149696 149697 149698 149699 149700 149701 149702 149703 149704 149705 149706 149707 149708 149709 149710 149711 149712 149713 149714 149715 149716 149717 149718 149719 149720 149721 149722 149723 149724 149725 149726 149727 149728 149729 149730 149731 149732 149733 149734 149735 149736 149737 149738 149739 149740 149741 149742 149743 149744 149745 149746 149747 149748 149749 149750 149751 149752 149753 149754 149755 149756 149757 149758 149759 149760 149761 149762 149763 149764 149765 149766 149767 149768 149769 149770 149771 149772 149773 149774 149775 149776 149777 149778 149779 149780 149781 149782 149783 149784 149785 149786 149787 149788 149789 149790 149791 149792 149793 149794 149795 149796 149797 149798 149799 149800 149801 149802 149803 149804 149805 149806 149807 149808 149809 149810 149811 149812 149813 149814 149815 149816 149817 149818 149819 149820 149821 149822 149823 149824 149825 149826 149827 149828 149829 149830 149831 149832 149833 149834 149835 149836 149837 149838 149839 149840 149841 149842 149843 149844 149845 149846 149847 149848 149849 149850 149851 149852 149853 149854 149855 149856 149857 149858 149859 149860 149861 149862 149863 149864 149865 149866 149867 149868 149869 149870 149871 149872 149873 149874 149875 149876 149877 149878 149879 149880 149881 149882 149883 149884 149885 149886 149887 149888 149889 149890 149891 149892 149893 149894 149895 149896 149897 149898 149899 149900 149901 149902 149903 149904 149905 149906 149907 149908 149909 149910 149911 149912 149913 149914 149915 149916 149917 149918 149919 149920 149921 149922> # SplitBus
mul in 2 <149684 103> out 1 <149923>     # cond trueterm
const-mul-neg-1 in 1 <149684> out 1 <149924> # cond minuscond
add in 2 <100 149924> out 1 <149925>     # cond negcond
mul in 2 <149925 149649> out 1 <149926>  # cond falseterm
add in 2 <149923 149926> out 1 <149927>  # cond result
const-mul-ffffffff in 1 <46> out 1 <149928> # multiply-by-constant 4294967295
add in 2 <46 47> out 1 <149929>          # ArithBusReq.AddReq(DFG.Input,DFG.Input)
add in 2 <149929 149928> out 1 <149930>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <149930> out 1 <149931> # multiply-by-constant 4294967295
add in 2 <149929 149931> out 1 <149932>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <46> out 1 <149933> # multiply-by-constant 4294967295
add in 2 <47 149933> out 1 <149934>      # 'CmpLT DFG.Input - DFG.Input'
split in 1 <149934> out 65 <149935 149936 149937 149938 149939 149940 149941 149942 149943 149944 149945 149946 149947 149948 149949 149950 149951 149952 149953 149954 149955 149956 149957 149958 149959 149960 149961 149962 149963 149964 149965 149966 149967 149968 149969 149970 149971 149972 149973 149974 149975 149976 149977 149978 149979 149980 149981 149982 149983 149984 149985 149986 149987 149988 149989 149990 149991 149992 149993 149994 149995 149996 149997 149998 149999> # SplitBus
mul in 2 <149966 149932> out 1 <150000>  # cond trueterm
const-mul-neg-1 in 1 <149966> out 1 <150001> # cond minuscond
add in 2 <100 150001> out 1 <150002>     # cond negcond
mul in 2 <150002 47> out 1 <150003>      # cond falseterm
add in 2 <150000 150003> out 1 <150004>  # cond result
const-mul-ffffffff in 1 <150004> out 1 <150005> # multiply-by-constant 4294967295
add in 2 <150004 48> out 1 <150006>      # ArithBusReq.AddReq(DFG.Conditional,DFG.Input)
add in 2 <150006 150005> out 1 <150007>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <150007> out 1 <150008> # multiply-by-constant 4294967295
add in 2 <150006 150008> out 1 <150009>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <150004> out 1 <150010> # multiply-by-constant 4294967295
add in 2 <48 150010> out 1 <150011>      # 'CmpLT DFG.Input - DFG.Conditional'
split in 1 <150011> out 131 <150012 150013 150014 150015 150016 150017 150018 150019 150020 150021 150022 150023 150024 150025 150026 150027 150028 150029 150030 150031 150032 150033 150034 150035 150036 150037 150038 150039 150040 150041 150042 150043 150044 150045 150046 150047 150048 150049 150050 150051 150052 150053 150054 150055 150056 150057 150058 150059 150060 150061 150062 150063 150064 150065 150066 150067 150068 150069 150070 150071 150072 150073 150074 150075 150076 150077 150078 150079 150080 150081 150082 150083 150084 150085 150086 150087 150088 150089 150090 150091 150092 150093 150094 150095 150096 150097 150098 150099 150100 150101 150102 150103 150104 150105 150106 150107 150108 150109 150110 150111 150112 150113 150114 150115 150116 150117 150118 150119 150120 150121 150122 150123 150124 150125 150126 150127 150128 150129 150130 150131 150132 150133 150134 150135 150136 150137 150138 150139 150140 150141 150142> # SplitBus
mul in 2 <150043 150009> out 1 <150143>  # cond trueterm
const-mul-neg-1 in 1 <150043> out 1 <150144> # cond minuscond
add in 2 <100 150144> out 1 <150145>     # cond negcond
mul in 2 <150145 48> out 1 <150146>      # cond falseterm
add in 2 <150143 150146> out 1 <150147>  # cond result
const-mul-ffffffff in 1 <150147> out 1 <150148> # multiply-by-constant 4294967295
add in 2 <150147 49> out 1 <150149>      # ArithBusReq.AddReq(DFG.Conditional,DFG.Input)
add in 2 <150149 150148> out 1 <150150>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <150147> out 1 <150151> # multiply-by-constant 4294967295
add in 2 <49 150151> out 1 <150152>      # 'CmpLT DFG.Input - DFG.Conditional'
split in 1 <150152> out 197 <150153 150154 150155 150156 150157 150158 150159 150160 150161 150162 150163 150164 150165 150166 150167 150168 150169 150170 150171 150172 150173 150174 150175 150176 150177 150178 150179 150180 150181 150182 150183 150184 150185 150186 150187 150188 150189 150190 150191 150192 150193 150194 150195 150196 150197 150198 150199 150200 150201 150202 150203 150204 150205 150206 150207 150208 150209 150210 150211 150212 150213 150214 150215 150216 150217 150218 150219 150220 150221 150222 150223 150224 150225 150226 150227 150228 150229 150230 150231 150232 150233 150234 150235 150236 150237 150238 150239 150240 150241 150242 150243 150244 150245 150246 150247 150248 150249 150250 150251 150252 150253 150254 150255 150256 150257 150258 150259 150260 150261 150262 150263 150264 150265 150266 150267 150268 150269 150270 150271 150272 150273 150274 150275 150276 150277 150278 150279 150280 150281 150282 150283 150284 150285 150286 150287 150288 150289 150290 150291 150292 150293 150294 150295 150296 150297 150298 150299 150300 150301 150302 150303 150304 150305 150306 150307 150308 150309 150310 150311 150312 150313 150314 150315 150316 150317 150318 150319 150320 150321 150322 150323 150324 150325 150326 150327 150328 150329 150330 150331 150332 150333 150334 150335 150336 150337 150338 150339 150340 150341 150342 150343 150344 150345 150346 150347 150348 150349> # SplitBus
mul in 2 <150184 150150> out 1 <150350>  # cond trueterm
const-mul-neg-1 in 1 <150184> out 1 <150351> # cond minuscond
add in 2 <100 150351> out 1 <150352>     # cond negcond
mul in 2 <150352 150147> out 1 <150353>  # cond falseterm
add in 2 <150350 150353> out 1 <150354>  # cond result
mul in 2 <150043 150007> out 1 <150355>  # cond trueterm
const-mul-neg-1 in 1 <150043> out 1 <150356> # cond minuscond
add in 2 <100 150356> out 1 <150357>     # cond negcond
mul in 2 <150357 150004> out 1 <150358>  # cond falseterm
add in 2 <150355 150358> out 1 <150359>  # cond result
mul in 2 <149966 149930> out 1 <150360>  # cond trueterm
const-mul-neg-1 in 1 <149966> out 1 <150361> # cond minuscond
add in 2 <100 150361> out 1 <150362>     # cond negcond
mul in 2 <150362 46> out 1 <150363>      # cond falseterm
add in 2 <150360 150363> out 1 <150364>  # cond result
const-mul-ffffffff in 1 <150364> out 1 <150365> # multiply-by-constant 4294967295
add in 2 <150364 150359> out 1 <150366>  # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
add in 2 <150366 150365> out 1 <150367>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <150367> out 1 <150368> # multiply-by-constant 4294967295
add in 2 <150366 150368> out 1 <150369>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <150364> out 1 <150370> # multiply-by-constant 4294967295
add in 2 <150359 150370> out 1 <150371>  # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <150371> out 132 <150372 150373 150374 150375 150376 150377 150378 150379 150380 150381 150382 150383 150384 150385 150386 150387 150388 150389 150390 150391 150392 150393 150394 150395 150396 150397 150398 150399 150400 150401 150402 150403 150404 150405 150406 150407 150408 150409 150410 150411 150412 150413 150414 150415 150416 150417 150418 150419 150420 150421 150422 150423 150424 150425 150426 150427 150428 150429 150430 150431 150432 150433 150434 150435 150436 150437 150438 150439 150440 150441 150442 150443 150444 150445 150446 150447 150448 150449 150450 150451 150452 150453 150454 150455 150456 150457 150458 150459 150460 150461 150462 150463 150464 150465 150466 150467 150468 150469 150470 150471 150472 150473 150474 150475 150476 150477 150478 150479 150480 150481 150482 150483 150484 150485 150486 150487 150488 150489 150490 150491 150492 150493 150494 150495 150496 150497 150498 150499 150500 150501 150502 150503> # SplitBus
mul in 2 <150403 150369> out 1 <150504>  # cond trueterm
const-mul-neg-1 in 1 <150403> out 1 <150505> # cond minuscond
add in 2 <100 150505> out 1 <150506>     # cond negcond
mul in 2 <150506 150359> out 1 <150507>  # cond falseterm
add in 2 <150504 150507> out 1 <150508>  # cond result
const-mul-ffffffff in 1 <150508> out 1 <150509> # multiply-by-constant 4294967295
add in 2 <150508 150354> out 1 <150510>  # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
add in 2 <150510 150509> out 1 <150511>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <150511> out 1 <150512> # multiply-by-constant 4294967295
add in 2 <150510 150512> out 1 <150513>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <150508> out 1 <150514> # multiply-by-constant 4294967295
add in 2 <150354 150514> out 1 <150515>  # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <150515> out 199 <150516 150517 150518 150519 150520 150521 150522 150523 150524 150525 150526 150527 150528 150529 150530 150531 150532 150533 150534 150535 150536 150537 150538 150539 150540 150541 150542 150543 150544 150545 150546 150547 150548 150549 150550 150551 150552 150553 150554 150555 150556 150557 150558 150559 150560 150561 150562 150563 150564 150565 150566 150567 150568 150569 150570 150571 150572 150573 150574 150575 150576 150577 150578 150579 150580 150581 150582 150583 150584 150585 150586 150587 150588 150589 150590 150591 150592 150593 150594 150595 150596 150597 150598 150599 150600 150601 150602 150603 150604 150605 150606 150607 150608 150609 150610 150611 150612 150613 150614 150615 150616 150617 150618 150619 150620 150621 150622 150623 150624 150625 150626 150627 150628 150629 150630 150631 150632 150633 150634 150635 150636 150637 150638 150639 150640 150641 150642 150643 150644 150645 150646 150647 150648 150649 150650 150651 150652 150653 150654 150655 150656 150657 150658 150659 150660 150661 150662 150663 150664 150665 150666 150667 150668 150669 150670 150671 150672 150673 150674 150675 150676 150677 150678 150679 150680 150681 150682 150683 150684 150685 150686 150687 150688 150689 150690 150691 150692 150693 150694 150695 150696 150697 150698 150699 150700 150701 150702 150703 150704 150705 150706 150707 150708 150709 150710 150711 150712 150713 150714> # SplitBus
mul in 2 <150547 150513> out 1 <150715>  # cond trueterm
const-mul-neg-1 in 1 <150547> out 1 <150716> # cond minuscond
add in 2 <100 150716> out 1 <150717>     # cond negcond
mul in 2 <150717 150354> out 1 <150718>  # cond falseterm
add in 2 <150715 150718> out 1 <150719>  # cond result
const-mul-ffffffff in 1 <150719> out 1 <150720> # multiply-by-constant 4294967295
const-mul-ffffffff in 1 <150150> out 1 <150721> # multiply-by-constant 4294967295
add in 2 <150149 150721> out 1 <150722>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
mul in 2 <150184 150722> out 1 <150723>  # cond trueterm
const-mul-neg-1 in 1 <150184> out 1 <150724> # cond minuscond
add in 2 <100 150724> out 1 <150725>     # cond negcond
mul in 2 <150725 49> out 1 <150726>      # cond falseterm
add in 2 <150723 150726> out 1 <150727>  # cond result
const-mul-ffffffff in 1 <150727> out 1 <150728> # multiply-by-constant 4294967295
add in 2 <150727 50> out 1 <150729>      # ArithBusReq.AddReq(DFG.Conditional,DFG.Input)
split in 1 <150729> outplitBus
const-mul-2 in 1 <150761> out 1 <150961> # join source bit 31
add in 2 <150760 150961> out 1 <150962>  # join source bit 30
const-mul-2 in 1 <150962> out 1 <150963> # join
add in 2 <150759 150963> out 1 <150964>  # join source bit 29
const-mul-2 in 1 <150964> out 1 <150965> # join
add in 2 <150758 150965> out 1 <150966>  # join source bit 28
const-mul-2 in 1 <150966> out 1 <150967> # join
add in 2 <150757 150967> out 1 <150968>  # join source bit 27
const-mul-2 in 1 <150968> out 1 <150969> # join
add in 2 <150756 150969> out 1 <150970>  # join source bit 26
const-mul-2 in 1 <150970> out 1 <150971> # join
add in 2 <150755 150971> out 1 <150972>  # join source bit 25
const-mul-2 in 1 <150972> out 1 <150973> # join
add in 2 <150754 150973> out 1 <150974>  # join source bit 24
const-mul-2 in 1 <150974> out 1 <150975> # join
add in 2 <150753 150975> out 1 <150976>  # join source bit 23
const-mul-2 in 1 <150976> out 1 <150977> # join
add in 2 <150752 150977> out 1 <150978>  # join source bit 22
const-mul-2 in 1 <150978> out 1 <150979> # join
add in 2 <150751 150979> out 1 <150980>  # join source bit 21
const-mul-2 in 1 <150980> out 1 <150981> # join
add in 2 <150750 150981> out 1 <150982>  # join source bit 20
const-mul-2 in 1 <150982> out 1 <150983> # join
add in 2 <150749 150983> out 1 <150984>  # join source bit 19
const-mul-2 in 1 <150984> out 1 <150985> # join
add in 2 <150748 150985> out 1 <150986>  # join source bit 18
const-mul-2 in 1 <150986> out 1 <150987> # join
add in 2 <150747 150987> out 1 <150988>  # join source bit 17
const-mul-2 in 1 <150988> out 1 <150989> # join
add in 2 <150746 150989> out 1 <150990>  # join source bit 16
const-mul-2 in 1 <150990> out 1 <150991> # join
add in 2 <150745 150991> out 1 <150992>  # join source bit 15
const-mul-2 in 1 <150992> out 1 <150993> # join
add in 2 <150744 150993> out 1 <150994>  # join source bit 14
const-mul-2 in 1 <150994> out 1 <150995> # join
add in 2 <150743 150995> out 1 <150996>  # join source bit 13
const-mul-2 in 1 <150996> out 1 <150997> # join
add in 2 <150742 150997> out 1 <150998>  # join source bit 12
const-mul-2 in 1 <150998> out 1 <150999> # join
add in 2 <150741 150999> out 1 <151000>  # join source bit 11
const-mul-2 in 1 <151000> out 1 <151001> # join
add in 2 <150740 151001> out 1 <151002>  # join source bit 10
const-mul-2 in 1 <151002> out 1 <151003> # join
add in 2 <150739 151003> out 1 <151004>  # join source bit 9
const-mul-2 in 1 <151004> out 1 <151005> # join
add in 2 <150738 151005> out 1 <151006>  # join source bit 8
const-mul-2 in 1 <151006> out 1 <151007> # join
add in 2 <150737 151007> out 1 <151008>  # join source bit 7
const-mul-2 in 1 <151008> out 1 <151009> # join
add in 2 <150736 151009> out 1 <151010>  # join source bit 6
const-mul-2 in 1 <151010> out 1 <151011> # join
add in 2 <150735 151011> out 1 <151012>  # join source bit 5
const-mul-2 in 1 <151012> out 1 <151013> # join
add in 2 <150734 151013> out 1 <151014>  # join source bit 4
const-mul-2 in 1 <151014> out 1 <151015> # join
add in 2 <150733 151015> out 1 <151016>  # join source bit 3
const-mul-2 in 1 <151016> out 1 <151017> # join
add in 2 <150732 151017> out 1 <151018>  # join source bit 2
const-mul-2 in 1 <151018> out 1 <151019> # join
add in 2 <150731 151019> out 1 <151020>  # join source bit 1
const-mul-2 in 1 <151020> out 1 <151021> # join
add in 2 <150730 151021> out 1 <151022>  # join source bit 0
add in 2 <151022 151022> out 1 <151023>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <150727> out 1 <151024> # multiply-by-constant 4294967295
add in 2 <50 151024> out 1 <151025>      # 'CmpLT DFG.Input - DFG.Conditional'
split in 1 <151025> outplitBus
mul in 2 <151057 151023> out 1 <151289>  # cond trueterm
const-mul-neg-1 in 1 <151057> out 1 <151290> # cond minuscond
add in 2 <100 151290> out 1 <151291>     # cond negcond
mul in 2 <151291 150727> out 1 <151292>  # cond falseterm
add in 2 <151289 151292> out 1 <151293>  # cond result
add in 2 <150719 151293> out 1 <151294>  # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
split in 1 <151294> outplitBus
const-mul-2 in 1 <151326> out 1 <151528> # join source bit 31
add in 2 <151325 151528> out 1 <151529>  # join source bit 30
const-mul-2 in 1 <151529> out 1 <151530> # join
add in 2 <151324 151530> out 1 <151531>  # join source bit 29
const-mul-2 in 1 <151531> out 1 <151532> # join
add in 2 <151323 151532> out 1 <151533>  # join source bit 28
const-mul-2 in 1 <151533> out 1 <151534> # join
add in 2 <151322 151534> out 1 <151535>  # join source bit 27
const-mul-2 in 1 <151535> out 1 <151536> # join
add in 2 <151321 151536> out 1 <151537>  # join source bit 26
const-mul-2 in 1 <151537> out 1 <151538> # join
add in 2 <151320 151538> out 1 <151539>  # join source bit 25
const-mul-2 in 1 <151539> out 1 <151540> # join
add in 2 <151319 151540> out 1 <151541>  # join source bit 24
const-mul-2 in 1 <151541> out 1 <151542> # join
add in 2 <151318 151542> out 1 <151543>  # join source bit 23
const-mul-2 in 1 <151543> out 1 <151544> # join
add in 2 <151317 151544> out 1 <151545>  # join source bit 22
const-mul-2 in 1 <151545> out 1 <151546> # join
add in 2 <151316 151546> out 1 <151547>  # join source bit 21
const-mul-2 in 1 <151547> out 1 <151548> # join
add in 2 <151315 151548> out 1 <151549>  # join source bit 20
const-mul-2 in 1 <151549> out 1 <151550> # join
add in 2 <151314 151550> out 1 <151551>  # join source bit 19
const-mul-2 in 1 <151551> out 1 <151552> # join
add in 2 <151313 151552> out 1 <151553>  # join source bit 18
const-mul-2 in 1 <151553> out 1 <151554> # join
add in 2 <151312 151554> out 1 <151555>  # join source bit 17
const-mul-2 in 1 <151555> out 1 <151556> # join
add in 2 <151311 151556> out 1 <151557>  # join source bit 16
const-mul-2 in 1 <151557> out 1 <151558> # join
add in 2 <151310 151558> out 1 <151559>  # join source bit 15
const-mul-2 in 1 <151559> out 1 <151560> # join
add in 2 <151309 151560> out 1 <151561>  # join source bit 14
const-mul-2 in 1 <151561> out 1 <151562> # join
add in 2 <151308 151562> out 1 <151563>  # join source bit 13
const-mul-2 in 1 <151563> out 1 <151564> # join
add in 2 <151307 151564> out 1 <151565>  # join source bit 12
const-mul-2 in 1 <151565> out 1 <151566> # join
add in 2 <151306 151566> out 1 <151567>  # join source bit 11
const-mul-2 in 1 <151567> out 1 <151568> # join
add in 2 <151305 151568> out 1 <151569>  # join source bit 10
const-mul-2 in 1 <151569> out 1 <151570> # join
add in 2 <151304 151570> out 1 <151571>  # join source bit 9
const-mul-2 in 1 <151571> out 1 <151572> # join
add in 2 <151303 151572> out 1 <151573>  # join source bit 8
const-mul-2 in 1 <151573> out 1 <151574> # join
add in 2 <151302 151574> out 1 <151575>  # join source bit 7
const-mul-2 in 1 <151575> out 1 <151576> # join
add in 2 <151301 151576> out 1 <151577>  # join source bit 6
const-mul-2 in 1 <151577> out 1 <151578> # join
add in 2 <151300 151578> out 1 <151579>  # join source bit 5
const-mul-2 in 1 <151579> out 1 <151580> # join
add in 2 <151299 151580> out 1 <151581>  # join source bit 4
const-mul-2 in 1 <151581> out 1 <151582> # join
add in 2 <151298 151582> out 1 <151583>  # join source bit 3
const-mul-2 in 1 <151583> out 1 <151584> # join
add in 2 <151297 151584> out 1 <151585>  # join source bit 2
const-mul-2 in 1 <151585> out 1 <151586> # join
add in 2 <151296 151586> out 1 <151587>  # join source bit 1
const-mul-2 in 1 <151587> out 1 <151588> # join
add in 2 <151295 151588> out 1 <151589>  # join source bit 0
add in 2 <151589 151589> out 1 <151590>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <150719> out 1 <151591> # multiply-by-constant 4294967295
add in 2 <151293 151591> out 1 <151592>  # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <151592> out 265 <151593 151594 151595 151596 151597 151598 151599 151600 151601 151602 151603 151604 151605 151606 151607 151608 151609 151610 151611 151612 151613 151614 151615 151616 151617 151618 151619 151620 151621 151622 151623 151624 151625 151626 151627 151628 151629 151630 151631 151632 151633 151634 151635 151636 151637 151638 151639 151640 151641 151642 151643 151644 151645 151646 151647 151648 151649 151650 151651 151652 151653 151654 151655 151656 151657 151658 151659 151660 151661 151662 151663 151664 151665 151666 151667 151668 151669 151670 151671 151672 151673 151674 151675 151676 151677 151678 151679 151680 151681 151682 151683 151684 151685 151686 151687 151688 151689 151690 151691 151692 151693 151694 151695 151696 151697 151698 151699 151700 151701 151702 151703 151704 151705 151706 151707 151708 151709 151710 151711 151712 151713 151714 151715 151716 151717 151718 151719 151720 151721 151722 151723 151724 151725 151726 151727 151728 151729 151730 151731 151732 151733 151734 151735 151736 151737 151738 151739 151740 151741 151742 151743 151744 151745 151746 151747 151748 151749 151750 151751 151752 151753 151754 151755 151756 151757 151758 151759 151760 151761 151762 151763 151764 151765 151766 151767 151768 151769 151770 151771 151772 151773 151774 151775 151776 151777 151778 151779 151780 151781 151782 151783 151784 151785 151786 151787 151788 151789 151790 151791 151792 151793 151794 151795 151796 151797 151798 151799 151800 151801 151802 151803 151804 151805 151806 151807 151808 151809 151810 151811 151812 151813 151814 151815 151816 151817 151818 151819 151820 151821 151822 151823 151824 151825 151826 151827 151828 151829 151830 151831 151832 151833 151834 151835 151836 151837 151838 151839 151840 151841 151842 151843 151844 151845 151846 151847 151848 151849 151850 151851 151852 151853 151854 151855 151856 151857> # SplitBus
mul in 2 <151624 151590> out 1 <151858>  # cond trueterm
const-mul-neg-1 in 1 <151624> out 1 <151859> # cond minuscond
add in 2 <100 151859> out 1 <151860>     # cond negcond
mul in 2 <151860 150719> out 1 <151861>  # cond falseterm
add in 2 <151858 151861> out 1 <151862>  # cond result
mul in 2 <150547 150511> out 1 <151863>  # cond trueterm
const-mul-neg-1 in 1 <150547> out 1 <151864> # cond minuscond
add in 2 <100 151864> out 1 <151865>     # cond negcond
mul in 2 <151865 150508> out 1 <151866>  # cond falseterm
add in 2 <151863 151866> out 1 <151867>  # cond result
mul in 2 <150403 150367> out 1 <151868>  # cond trueterm
const-mul-neg-1 in 1 <150403> out 1 <151869> # cond minuscond
add in 2 <100 151869> out 1 <151870>     # cond negcond
mul in 2 <151870 150364> out 1 <151871>  # cond falseterm
add in 2 <151868 151871> out 1 <151872>  # cond result
const-mul-ffffffff in 1 <151872> out 1 <151873> # multiply-by-constant 4294967295
add in 2 <151872 151867> out 1 <151874>  # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
add in 2 <151874 151873> out 1 <151875>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <151875> out 1 <151876> # multiply-by-constant 4294967295
add in 2 <151874 151876> out 1 <151877>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <151872> out 1 <151878> # multiply-by-constant 4294967295
add in 2 <151867 151878> out 1 <151879>  # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <151879> out 200 <151880 151881 151882 151883 151884 151885 151886 151887 151888 151889 151890 151891 151892 151893 151894 151895 151896 151897 151898 151899 151900 151901 151902 151903 151904 151905 151906 151907 151908 151909 151910 151911 151912 151913 151914 151915 151916 151917 151918 151919 151920 151921 151922 151923 151924 151925 151926 151927 151928 151929 151930 151931 151932 151933 151934 151935 151936 151937 151938 151939 151940 151941 151942 151943 151944 151945 151946 151947 151948 151949 151950 151951 151952 151953 151954 151955 151956 151957 151958 151959 151960 151961 151962 151963 151964 151965 151966 151967 151968 151969 151970 151971 151972 151973 151974 151975 151976 151977 151978 151979 151980 151981 151982 151983 151984 151985 151986 151987 151988 151989 151990 151991 151992 151993 151994 151995 151996 151997 151998 151999 152000 152001 152002 152003 152004 152005 152006 152007 152008 152009 152010 152011 152012 152013 152014 152015 152016 152017 152018 152019 152020 152021 152022 152023 152024 152025 152026 152027 152028 152029 152030 152031 152032 152033 152034 152035 152036 152037 152038 152039 152040 152041 152042 152043 152044 152045 152046 152047 152048 152049 152050 152051 152052 152053 152054 152055 152056 152057 152058 152059 152060 152061 152062 152063 152064 152065 152066 152067 152068 152069 152070 152071 152072 152073 152074 152075 152076 152077 152078 152079> # SplitBus
mul in 2 <151911 151877> out 1 <152080>  # cond trueterm
const-mul-neg-1 in 1 <151911> out 1 <152081> # cond minuscond
add in 2 <100 152081> out 1 <152082>     # cond negcond
mul in 2 <152082 151867> out 1 <152083>  # cond falseterm
add in 2 <152080 152083> out 1 <152084>  # cond result
const-mul-ffffffff in 1 <152084> out 1 <152085> # multiply-by-constant 4294967295
add in 2 <152084 151862> out 1 <152086>  # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
split in 1 <152086> out 235 <152087 152088 152089 152090 152091 152092 152093 152094 152095 152096 152097 152098 152099 152100 152101 152102 152103 152104 152105 152106 152107 152108 152109 152110 152111 152112 152113 152114 152115 152116 152117 152118 152119 152120 152121 152122 152123 152124 152125 152126 152127 152128 152129 152130 152131 152132 152133 152134 152135 152136 152137 152138 152139 152140 152141 152142 152143 152144 152145 152146 152147 152148 152149 152150 152151 152152 152153 152154 152155 152156 152157 152158 152159 152160 152161 152162 152163 152164 152165 152166 152167 152168 152169 152170 152171 152172 152173 152174 152175 152176 152177 152178 152179 152180 152181 152182 152183 152184 152185 152186 152187 152188 152189 152190 152191 152192 152193 152194 152195 152196 152197 152198 152199 152200 152201 152202 152203 152204 152205 152206 152207 152208 152209 152210 152211 152212 152213 152214 152215 152216 152217 152218 152219 152220 152221 152222 152223 152224 152225 152226 152227 152228 152229 152230 152231 152232 152233 152234 152235 152236 152237 152238 152239 152240 152241 152242 152243 152244 152245 152246 152247 152248 152249 152250 152251 152252 152253 152254 152255 152256 152257 152258 152259 152260 152261 152262 152263 152264 152265 152266 152267 152268 152269 152270 152271 152272 152273 152274 152275 152276 152277 152278 152279 152280 152281 152282 152283 152284 152285 152286 152287 152288 152289 152290 152291 152292 152293 152294 152295 152296 152297 152298 152299 152300 152301 152302 152303 152304 152305 152306 152307 152308 152309 152310 152311 152312 152313 152314 152315 152316 152317 152318 152319 152320 152321> # SplitBus
const-mul-2 in 1 <152118> out 1 <152322> # join source bit 31
add in 2 <152117 152322> out 1 <152323>  # join source bit 30
const-mul-2 in 1 <152323> out 1 <152324> # join
add in 2 <152116 152324> out 1 <152325>  # join source bit 29
const-mul-2 in 1 <152325> out 1 <152326> # join
add in 2 <152115 152326> out 1 <152327>  # join source bit 28
const-mul-2 in 1 <152327> out 1 <152328> # join
add in 2 <152114 152328> out 1 <152329>  # join source bit 27
const-mul-2 in 1 <152329> out 1 <152330> # join
add in 2 <152113 152330> out 1 <152331>  # join source bit 26
const-mul-2 in 1 <152331> out 1 <152332> # join
add in 2 <152112 152332> out 1 <152333>  # join source bit 25
const-mul-2 in 1 <152333> out 1 <152334> # join
add in 2 <152111 152334> out 1 <152335>  # join source bit 24
const-mul-2 in 1 <152335> out 1 <152336> # join
add in 2 <152110 152336> out 1 <152337>  # join source bit 23
const-mul-2 in 1 <152337> out 1 <152338> # join
add in 2 <152109 152338> out 1 <152339>  # join source bit 22
const-mul-2 in 1 <152339> out 1 <152340> # join
add in 2 <152108 152340> out 1 <152341>  # join source bit 21
const-mul-2 in 1 <152341> out 1 <152342> # join
add in 2 <152107 152342> out 1 <152343>  # join source bit 20
const-mul-2 in 1 <152343> out 1 <152344> # join
add in 2 <152106 152344> out 1 <152345>  # join source bit 19
const-mul-2 in 1 <152345> out 1 <152346> # join
add in 2 <152105 152346> out 1 <152347>  # join source bit 18
const-mul-2 in 1 <152347> out 1 <152348> # join
add in 2 <152104 152348> out 1 <152349>  # join source bit 17
const-mul-2 in 1 <152349> out 1 <152350> # join
add in 2 <152103 152350> out 1 <152351>  # join source bit 16
const-mul-2 in 1 <152351> out 1 <152352> # join
add in 2 <152102 152352> out 1 <152353>  # join source bit 15
const-mul-2 in 1 <152353> out 1 <152354> # join
add in 2 <152101 152354> out 1 <152355>  # join source bit 14
const-mul-2 in 1 <152355> out 1 <152356> # join
add in 2 <152100 152356> out 1 <152357>  # join source bit 13
const-mul-2 in 1 <152357> out 1 <152358> # join
add in 2 <152099 152358> out 1 <152359>  # join source bit 12
const-mul-2 in 1 <152359> out 1 <152360> # join
add in 2 <152098 152360> out 1 <152361>  # join source bit 11
const-mul-2 in 1 <152361> out 1 <152362> # join
add in 2 <152097 152362> out 1 <152363>  # join source bit 10
const-mul-2 in 1 <152363> out 1 <152364> # join
add in 2 <152096 152364> out 1 <152365>  # join source bit 9
const-mul-2 in 1 <152365> out 1 <152366> # join
add in 2 <152095 152366> out 1 <152367>  # join source bit 8
const-mul-2 in 1 <152367> out 1 <152368> # join
add in 2 <152094 152368> out 1 <152369>  # join source bit 7
const-mul-2 in 1 <152369> out 1 <152370> # join
add in 2 <152093 152370> out 1 <152371>  # join source bit 6
const-mul-2 in 1 <152371> out 1 <152372> # join
add in 2 <152092 152372> out 1 <152373>  # join source bit 5
const-mul-2 in 1 <152373> out 1 <152374> # join
add in 2 <152091 152374> out 1 <152375>  # join source bit 4
const-mul-2 in 1 <152375> out 1 <152376> # join
add in 2 <152090 152376> out 1 <152377>  # join source bit 3
const-mul-2 in 1 <152377> out 1 <152378> # join
add in 2 <152089 152378> out 1 <152379>  # join source bit 2
const-mul-2 in 1 <152379> out 1 <152380> # join
add in 2 <152088 152380> out 1 <152381>  # join source bit 1
const-mul-2 in 1 <152381> out 1 <152382> # join
add in 2 <152087 152382> out 1 <152383>  # join source bit 0
add in 2 <152383 152383> out 1 <152384>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <152384> out 1 <152385> # multiply-by-constant 4294967295
add in 2 <152086 152385> out 1 <152386>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <152084> out 1 <152387> # multiply-by-constant 4294967295
add in 2 <151862 152387> out 1 <152388>  # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <152388> out 267 <152389 152390 152391 152392 152393 152394 152395 152396 152397 152398 152399 152400 152401 152402 152403 152404 152405 152406 152407 152408 152409 152410 152411 152412 152413 152414 152415 152416 152417 152418 152419 152420 152421 152422 152423 152424 152425 152426 152427 152428 152429 152430 152431 152432 152433 152434 152435 152436 152437 152438 152439 152440 152441 152442 152443 152444 152445 152446 152447 152448 152449 152450 152451 152452 152453 152454 152455 152456 152457 152458 152459 152460 152461 152462 152463 152464 152465 152466 152467 152468 152469 152470 152471 152472 152473 152474 152475 152476 152477 152478 152479 152480 152481 152482 152483 152484 152485 152486 152487 152488 152489 152490 152491 152492 152493 152494 152495 152496 152497 152498 152499 152500 152501 152502 152503 152504 152505 152506 152507 152508 152509 152510 152511 152512 152513 152514 152515 152516 152517 152518 152519 152520 152521 152522 152523 152524 152525 152526 152527 152528 152529 152530 152531 152532 152533 152534 152535 152536 152537 152538 152539 152540 152541 152542 152543 152544 152545 152546 152547 152548 152549 152550 152551 152552 152553 152554 152555 152556 152557 152558 152559 152560 152561 152562 152563 152564 152565 152566 152567 152568 152569 152570 152571 152572 152573 152574 152575 152576 152577 152578 152579 152580 152581 152582 152583 152584 152585 152586 152587 152588 152589 152590 152591 152592 152593 152594 152595 152596 152597 152598 152599 152600 152601 152602 152603 152604 152605 152606 152607 152608 152609 152610 152611 152612 152613 152614 152615 152616 152617 152618 152619 152620 152621 152622 152623 152624 152625 152626 152627 152628 152629 152630 152631 152632 152633 152634 152635 152636 152637 152638 152639 152640 152641 152642 152643 152644 152645 152646 152647 152648 152649 152650 152651 152652 152653 152654 152655> # SplitBus
mul in 2 <152420 152386> out 1 <152656>  # cond trueterm
const-mul-neg-1 in 1 <152420> out 1 <152657> # cond minuscond
add in 2 <100 152657> out 1 <152658>     # cond negcond
mul in 2 <152658 151862> out 1 <152659>  # cond falseterm
add in 2 <152656 152659> out 1 <152660>  # cond result
add in 2 <152660 104> out 1 <152661>     # ArithBusReq.AddReq(DFG.Conditional,DFG.Constant)
const-mul-ffffffff in 1 <48> out 1 <152662> # multiply-by-constant 4294967295
add in 2 <152661 152662> out 1 <152663>  # 'CmpLT DFG.Add - DFG.Input'
split in 1 <152663> out 238 <152664 152665 152666 152667 152668 152669 152670 152671 152672 152673 152674 152675 152676 152677 152678 152679 152680 152681 152682 152683 152684 152685 152686 152687 152688 152689 152690 152691 152692 152693 152694 152695 152696 152697 152698 152699 152700 152701 152702 152703 152704 152705 152706 152707 152708 152709 152710 152711 152712 152713 152714 152715 152716 152717 152718 152719 152720 152721 152722 152723 152724 152725 152726 152727 152728 152729 152730 152731 152732 152733 152734 152735 152736 152737 152738 152739 152740 152741 152742 152743 152744 152745 152746 152747 152748 152749 152750 152751 152752 152753 152754 152755 152756 152757 152758 152759 152760 152761 152762 152763 152764 152765 152766 152767 152768 152769 152770 152771 152772 152773 152774 152775 152776 152777 152778 152779 152780 152781 152782 152783 152784 152785 152786 152787 152788 152789 152790 152791 152792 152793 152794 152795 152796 152797 152798 152799 152800 152801 152802 152803 152804 152805 152806 152807 152808 152809 152810 152811 152812 152813 152814 152815 152816 152817 152818 152819 152820 152821 152822 152823 152824 152825 152826 152827 152828 152829 152830 152831 152832 152833 152834 152835 152836 152837 152838 152839 152840 152841 152842 152843 152844 152845 152846 152847 152848 152849 152850 152851 152852 152853 152854 152855 152856 152857 152858 152859 152860 152861 152862 152863 152864 152865 152866 152867 152868 152869 152870 152871 152872 152873 152874 152875 152876 152877 152878 152879 152880 152881 152882 152883 152884 152885 152886 152887 152888 152889 152890 152891 152892 152893 152894 152895 152896 152897 152898 152899 152900 152901> # SplitBus
mul in 2 <152695 103> out 1 <152902>     # cond trueterm
const-mul-neg-1 in 1 <152695> out 1 <152903> # cond minuscond
add in 2 <100 152903> out 1 <152904>     # cond negcond
mul in 2 <152904 102> out 1 <152905>     # cond falseterm
add in 2 <152902 152905> out 1 <152906>  # cond result
add in 2 <152660 3084> out 1 <152907>    # ArithBusReq.AddReq(DFG.Conditional,DFG.Negate)
const-mul-ffffffff in 1 <152907> out 1 <152908> # multiply-by-constant 4294967295
add in 2 <48 152908> out 1 <152909>      # 'CmpLT DFG.Input - DFG.Subtract'
split in 1 <152909> outplitBus
mul in 2 <152941 103> out 1 <153180>     # cond trueterm
const-mul-neg-1 in 1 <152941> out 1 <153181> # cond minuscond
add in 2 <100 153181> out 1 <153182>     # cond negcond
mul in 2 <153182 152906> out 1 <153183>  # cond falseterm
add in 2 <153180 153183> out 1 <153184>  # cond result
const-mul-ffffffff in 1 <47> out 1 <153185> # multiply-by-constant 4294967295
add in 2 <47 48> out 1 <153186>          # ArithBusReq.AddReq(DFG.Input,DFG.Input)
add in 2 <153186 153185> out 1 <153187>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <153187> out 1 <153188> # multiply-by-constant 4294967295
add in 2 <153186 153188> out 1 <153189>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <47> out 1 <153190> # multiply-by-constant 4294967295
add in 2 <48 153190> out 1 <153191>      # 'CmpLT DFG.Input - DFG.Input'
split in 1 <153191> out 65 <153192 153193 153194 153195 153196 153197 153198 153199 153200 153201 153202 153203 153204 153205 153206 153207 153208 153209 153210 153211 153212 153213 153214 153215 153216 153217 153218 153219 153220 153221 153222 153223 153224 153225 153226 153227 153228 153229 153230 153231 153232 153233 153234 153235 153236 153237 153238 153239 153240 153241 153242 153243 153244 153245 153246 153247 153248 153249 153250 153251 153252 153253 153254 153255 153256> # SplitBus
mul in 2 <153223 153189> out 1 <153257>  # cond trueterm
const-mul-neg-1 in 1 <153223> out 1 <153258> # cond minuscond
add in 2 <100 153258> out 1 <153259>     # cond negcond
mul in 2 <153259 48> out 1 <153260>      # cond falseterm
add in 2 <153257 153260> out 1 <153261>  # cond result
const-mul-ffffffff in 1 <153261> out 1 <153262> # multiply-by-constant 4294967295
add in 2 <153261 49> out 1 <153263>      # ArithBusReq.AddReq(DFG.Conditional,DFG.Input)
add in 2 <153263 153262> out 1 <153264>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <153264> out 1 <153265> # multiply-by-constant 4294967295
add in 2 <153263 153265> out 1 <153266>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <153261> out 1 <153267> # multiply-by-constant 4294967295
add in 2 <49 153267> out 1 <153268>      # 'CmpLT DFG.Input - DFG.Conditional'
split in 1 <153268> out 131 <153269 153270 153271 153272 153273 153274 153275 153276 153277 153278 153279 153280 153281 153282 153283 153284 153285 153286 153287 153288 153289 153290 153291 153292 153293 153294 153295 153296 153297 153298 153299 153300 153301 153302 153303 153304 153305 153306 153307 153308 153309 153310 153311 153312 153313 153314 153315 153316 153317 153318 153319 153320 153321 153322 153323 153324 153325 153326 153327 153328 153329 153330 153331 153332 153333 153334 153335 153336 153337 153338 153339 153340 153341 153342 153343 153344 153345 153346 153347 153348 153349 153350 153351 153352 153353 153354 153355 153356 153357 153358 153359 153360 153361 153362 153363 153364 153365 153366 153367 153368 153369 153370 153371 153372 153373 153374 153375 153376 153377 153378 153379 153380 153381 153382 153383 153384 153385 153386 153387 153388 153389 153390 153391 153392 153393 153394 153395 153396 153397 153398 153399> # SplitBus
mul in 2 <153300 153266> out 1 <153400>  # cond trueterm
const-mul-neg-1 in 1 <153300> out 1 <153401> # cond minuscond
add in 2 <100 153401> out 1 <153402>     # cond negcond
mul in 2 <153402 49> out 1 <153403>      # cond falseterm
add in 2 <153400 153403> out 1 <153404>  # cond result
const-mul-ffffffff in 1 <153404> out 1 <153405> # multiply-by-constant 4294967295
add in 2 <153404 50> out 1 <153406>      # ArithBusReq.AddReq(DFG.Conditional,DFG.Input)
add in 2 <153406 153405> out 1 <153407>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <153404> out 1 <153408> # multiply-by-constant 4294967295
add in 2 <50 153408> out 1 <153409>      # 'CmpLT DFG.Input - DFG.Conditional'
split in 1 <153409> out 197 <153410 153411 153412 153413 153414 153415 153416 153417 153418 153419 153420 153421 153422 153423 153424 153425 153426 153427 153428 153429 153430 153431 153432 153433 153434 153435 153436 153437 153438 153439 153440 153441 153442 153443 153444 153445 153446 153447 153448 153449 153450 153451 153452 153453 153454 153455 153456 153457 153458 153459 153460 153461 153462 153463 153464 153465 153466 153467 153468 153469 153470 153471 153472 153473 153474 153475 153476 153477 153478 153479 153480 153481 153482 153483 153484 153485 153486 153487 153488 153489 153490 153491 153492 153493 153494 153495 153496 153497 153498 153499 153500 153501 153502 153503 153504 153505 153506 153507 153508 153509 153510 153511 153512 153513 153514 153515 153516 153517 153518 153519 153520 153521 153522 153523 153524 153525 153526 153527 153528 153529 153530 153531 153532 153533 153534 153535 153536 153537 153538 153539 153540 153541 153542 153543 153544 153545 153546 153547 153548 153549 153550 153551 153552 153553 153554 153555 153556 153557 153558 153559 153560 153561 153562 153563 153564 153565 153566 153567 153568 153569 153570 153571 153572 153573 153574 153575 153576 153577 153578 153579 153580 153581 153582 153583 153584 153585 153586 153587 153588 153589 153590 153591 153592 153593 153594 153595 153596 153597 153598 153599 153600 153601 153602 153603 153604 153605 153606> # SplitBus
mul in 2 <153441 153407> out 1 <153607>  # cond trueterm
const-mul-neg-1 in 1 <153441> out 1 <153608> # cond minuscond
add in 2 <100 153608> out 1 <153609>     # cond negcond
mul in 2 <153609 153404> out 1 <153610>  # cond falseterm
add in 2 <153607 153610> out 1 <153611>  # cond result
mul in 2 <153300 153264> out 1 <153612>  # cond trueterm
const-mul-neg-1 in 1 <153300> out 1 <153613> # cond minuscond
add in 2 <100 153613> out 1 <153614>     # cond negcond
mul in 2 <153614 153261> out 1 <153615>  # cond falseterm
add in 2 <153612 153615> out 1 <153616>  # cond result
mul in 2 <153223 153187> out 1 <153617>  # cond trueterm
const-mul-neg-1 in 1 <153223> out 1 <153618> # cond minuscond
add in 2 <100 153618> out 1 <153619>     # cond negcond
mul in 2 <153619 47> out 1 <153620>      # cond falseterm
add in 2 <153617 153620> out 1 <153621>  # cond result
const-mul-ffffffff in 1 <153621> out 1 <153622> # multiply-by-constant 4294967295
add in 2 <153621 153616> out 1 <153623>  # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
add in 2 <153623 153622> out 1 <153624>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <153624> out 1 <153625> # multiply-by-constant 4294967295
add in 2 <153623 153625> out 1 <153626>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <153621> out 1 <153627> # multiply-by-constant 4294967295
add in 2 <153616 153627> out 1 <153628>  # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <153628> out 132 <153629 153630 153631 153632 153633 153634 153635 153636 153637 153638 153639 153640 153641 153642 153643 153644 153645 153646 153647 153648 153649 153650 153651 153652 153653 153654 153655 153656 153657 153658 153659 153660 153661 153662 153663 153664 153665 153666 153667 153668 153669 153670 153671 153672 153673 153674 153675 153676 153677 153678 153679 153680 153681 153682 153683 153684 153685 153686 153687 153688 153689 153690 153691 153692 153693 153694 153695 153696 153697 153698 153699 153700 153701 153702 153703 153704 153705 153706 153707 153708 153709 153710 153711 153712 153713 153714 153715 153716 153717 153718 153719 153720 153721 153722 153723 153724 153725 153726 153727 153728 153729 153730 153731 153732 153733 153734 153735 153736 153737 153738 153739 153740 153741 153742 153743 153744 153745 153746 153747 153748 153749 153750 153751 153752 153753 153754 153755 153756 153757 153758 153759 153760> # SplitBus
mul in 2 <153660 153626> out 1 <153761>  # cond trueterm
const-mul-neg-1 in 1 <153660> out 1 <153762> # cond minuscond
add in 2 <100 153762> out 1 <153763>     # cond negcond
mul in 2 <153763 153616> out 1 <153764>  # cond falseterm
add in 2 <153761 153764> out 1 <153765>  # cond result
const-mul-ffffffff in 1 <153765> out 1 <153766> # multiply-by-constant 4294967295
add in 2 <153765 153611> out 1 <153767>  # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
add in 2 <153767 153766> out 1 <153768>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <153768> out 1 <153769> # multiply-by-constant 4294967295
add in 2 <153767 153769> out 1 <153770>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <153765> out 1 <153771> # multiply-by-constant 4294967295
add in 2 <153611 153771> out 1 <153772>  # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <153772> out 199 <153773 153774 153775 153776 153777 153778 153779 153780 153781 153782 153783 153784 153785 153786 153787 153788 153789 153790 153791 153792 153793 153794 153795 153796 153797 153798 153799 153800 153801 153802 153803 153804 153805 153806 153807 153808 153809 153810 153811 153812 153813 153814 153815 153816 153817 153818 153819 153820 153821 153822 153823 153824 153825 153826 153827 153828 153829 153830 153831 153832 153833 153834 153835 153836 153837 153838 153839 153840 153841 153842 153843 153844 153845 153846 153847 153848 153849 153850 153851 153852 153853 153854 153855 153856 153857 153858 153859 153860 153861 153862 153863 153864 153865 153866 153867 153868 153869 153870 153871 153872 153873 153874 153875 153876 153877 153878 153879 153880 153881 153882 153883 153884 153885 153886 153887 153888 153889 153890 153891 153892 153893 153894 153895 153896 153897 153898 153899 153900 153901 153902 153903 153904 153905 153906 153907 153908 153909 153910 153911 153912 153913 153914 153915 153916 153917 153918 153919 153920 153921 153922 153923 153924 153925 153926 153927 153928 153929 153930 153931 153932 153933 153934 153935 153936 153937 153938 153939 153940 153941 153942 153943 153944 153945 153946 153947 153948 153949 153950 153951 153952 153953 153954 153955 153956 153957 153958 153959 153960 153961 153962 153963 153964 153965 153966 153967 153968 153969 153970 153971> # SplitBus
mul in 2 <153804 153770> out 1 <153972>  # cond trueterm
const-mul-neg-1 in 1 <153804> out 1 <153973> # cond minuscond
add in 2 <100 153973> out 1 <153974>     # cond negcond
mul in 2 <153974 153611> out 1 <153975>  # cond falseterm
add in 2 <153972 153975> out 1 <153976>  # cond result
const-mul-ffffffff in 1 <153976> out 1 <153977> # multiply-by-constant 4294967295
const-mul-ffffffff in 1 <153407> out 1 <153978> # multiply-by-constant 4294967295
add in 2 <153406 153978> out 1 <153979>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
mul in 2 <153441 153979> out 1 <153980>  # cond trueterm
const-mul-neg-1 in 1 <153441> out 1 <153981> # cond minuscond
add in 2 <100 153981> out 1 <153982>     # cond negcond
mul in 2 <153982 50> out 1 <153983>      # cond falseterm
add in 2 <153980 153983> out 1 <153984>  # cond result
const-mul-ffffffff in 1 <153984> out 1 <153985> # multiply-by-constant 4294967295
add in 2 <153984 51> out 1 <153986>      # ArithBusReq.AddReq(DFG.Conditional,DFG.Input)
split in 1 <153986> out 231 <153987 153988 153989 153990 153991 153992 153993 153994 153995 153996 153997 153998 153999 154000 154001 154002 154003 154004 154005 154006 154007 154008 154009 154010 154011 154012 154013 154014 154015 154016 154017 154018 154019 154020 154021 154022 154023 154024 154025 154026 154027 154028 154029 154030 154031 154032 154033 154034 154035 154036 154037 154038 154039 154040 154041 154042 154043 154044 154045 154046 154047 154048 154049 154050 154051 154052 154053 154054 154055 154056 154057 154058 154059 154060 154061 154062 154063 154064 154065 154066 154067 154068 154069 154070 154071 154072 154073 154074 154075 154076 154077 154078 154079 154080 154081 154082 154083 154084 154085 154086 154087 154088 154089 154090 154091 154092 154093 154094 154095 154096 154097 154098 154099 154100 154101 154102 154103 154104 154105 154106 154107 154108 154109 154110 154111 154112 154113 154114 154115 154116 154117 154118 154119 154120 154121 154122 154123 154124 154125 154126 154127 154128 154129 154130 154131 154132 154133 154134 154135 154136 154137 154138 154139 154140 154141 154142 154143 154144 154145 154146 154147 154148 154149 154150 154151 154152 154153 154154 154155 154156 154157 154158 154159 154160 154161 154162 154163 154164 154165 154166 154167 154168 154169 154170 154171 154172 154173 154174 154175 154176 154177 154178 154179 154180 154181 154182 154183 154184 154185 154186 154187 154188 154189 154190 154191 154192 154193 154194 154195 154196 154197 154198 154199 154200 154201 154202 154203 154204 154205 154206 154207 154208 154209 154210 154211 154212 154213 154214 154215 154216 154217> # SplitBus
const-mul-2 in 1 <154018> out 1 <154218> # join source bit 31
add in 2 <154017 154218> out 1 <154219>  # join source bit 30
const-mul-2 in 1 <154219> out 1 <154220> # join
add in 2 <154016 154220> out 1 <154221>  # join source bit 29
const-mul-2 in 1 <154221> out 1 <154222> # join
add in 2 <154015 154222> out 1 <154223>  # join source bit 28
const-mul-2 in 1 <154223> out 1 <154224> # join
add in 2 <154014 154224> out 1 <154225>  # join source bit 27
const-mul-2 in 1 <154225> out 1 <154226> # join
add in 2 <154013 154226> out 1 <154227>  # join source bit 26
const-mul-2 in 1 <154227> out 1 <154228> # join
add in 2 <154012 154228> out 1 <154229>  # join source bit 25
const-mul-2 in 1 <154229> out 1 <154230> # join
add in 2 <154011 154230> out 1 <154231>  # join source bit 24
const-mul-2 in 1 <154231> out 1 <154232> # join
add in 2 <154010 154232> out 1 <154233>  # join source bit 23
const-mul-2 in 1 <154233> out 1 <154234> # join
add in 2 <154009 154234> out 1 <154235>  # join source bit 22
const-mul-2 in 1 <154235> out 1 <154236> # join
add in 2 <154008 154236> out 1 <154237>  # join source bit 21
const-mul-2 in 1 <154237> out 1 <154238> # join
add in 2 <154007 154238> out 1 <154239>  # join source bit 20
const-mul-2 in 1 <154239> out 1 <154240> # join
add in 2 <154006 154240> out 1 <154241>  # join source bit 19
const-mul-2 in 1 <154241> out 1 <154242> # join
add in 2 <154005 154242> out 1 <154243>  # join source bit 18
const-mul-2 in 1 <154243> out 1 <154244> # join
add in 2 <154004 154244> out 1 <154245>  # join source bit 17
const-mul-2 in 1 <154245> out 1 <154246> # join
add in 2 <154003 154246> out 1 <154247>  # join source bit 16
const-mul-2 in 1 <154247> out 1 <154248> # join
add in 2 <154002 154248> out 1 <154249>  # join source bit 15
const-mul-2 in 1 <154249> out 1 <154250> # join
add in 2 <154001 154250> out 1 <154251>  # join source bit 14
const-mul-2 in 1 <154251> out 1 <154252> # join
add in 2 <154000 154252> out 1 <154253>  # join source bit 13
const-mul-2 in 1 <154253> out 1 <154254> # join
add in 2 <153999 154254> out 1 <154255>  # join source bit 12
const-mul-2 in 1 <154255> out 1 <154256> # join
add in 2 <153998 154256> out 1 <154257>  # join source bit 11
const-mul-2 in 1 <154257> out 1 <154258> # join
add in 2 <153997 154258> out 1 <154259>  # join source bit 10
const-mul-2 in 1 <154259> out 1 <154260> # join
add in 2 <153996 154260> out 1 <154261>  # join source bit 9
const-mul-2 in 1 <154261> out 1 <154262> # join
add in 2 <153995 154262> out 1 <154263>  # join source bit 8
const-mul-2 in 1 <154263> out 1 <154264> # join
add in 2 <153994 154264> out 1 <154265>  # join source bit 7
const-mul-2 in 1 <154265> out 1 <154266> # join
add in 2 <153993 154266> out 1 <154267>  # join source bit 6
const-mul-2 in 1 <154267> out 1 <154268> # join
add in 2 <153992 154268> out 1 <154269>  # join source bit 5
const-mul-2 in 1 <154269> out 1 <154270> # join
add in 2 <153991 154270> out 1 <154271>  # join source bit 4
const-mul-2 in 1 <154271> out 1 <154272> # join
add in 2 <153990 154272> out 1 <154273>  # join source bit 3
const-mul-2 in 1 <154273> out 1 <154274> # join
add in 2 <153989 154274> out 1 <154275>  # join source bit 2
const-mul-2 in 1 <154275> out 1 <154276> # join
add in 2 <153988 154276> out 1 <154277>  # join source bit 1
const-mul-2 in 1 <154277> out 1 <154278> # join
add in 2 <153987 154278> out 1 <154279>  # join source bit 0
add in 2 <154279 154279> out 1 <154280>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <153984> out 1 <154281> # multiply-by-constant 4294967295
add in 2 <51 154281> out 1 <154282>      # 'CmpLT DFG.Input - DFG.Conditional'
split in 1 <154282> out 263 <154283 154284 154285 154286 154287 154288 154289 154290 154291 154292 154293 154294 154295 154296 154297 154298 154299 154300 154301 154302 154303 154304 154305 154306 154307 154308 154309 154310 154311 154312 154313 154314 154315 154316 154317 154318 154319 154320 154321 154322 154323 154324 154325 154326 154327 154328 154329 154330 154331 154332 154333 154334 154335 154336 154337 154338 154339 154340 154341 154342 154343 154344 154345 154346 154347 154348 154349 154350 154351 154352 154353 154354 154355 154356 154357 154358 154359 154360 154361 154362 154363 154364 154365 154366 154367 154368 154369 154370 154371 154372 154373 154374 154375 154376 154377 154378 154379 154380 154381 154382 154383 154384 154385 154386 154387 154388 154389 154390 154391 154392 154393 154394 154395 154396 154397 154398 154399 154400 154401 154402 154403 154404 154405 154406 154407 154408 154409 154410 154411 154412 154413 154414 154415 154416 154417 154418 154419 154420 154421 154422 154423 154424 154425 154426 154427 154428 154429 154430 154431 154432 154433 154434 154435 154436 154437 154438 154439 154440 154441 154442 154443 154444 154445 154446 154447 154448 154449 154450 154451 154452 154453 154454 154455 154456 154457 154458 154459 154460 154461 154462 154463 154464 154465 154466 154467 154468 154469 154470 154471 154472 154473 154474 154475 154476 154477 154478 154479 154480 154481 154482 154483 154484 154485 154486 154487 154488 154489 154490 154491 154492 154493 154494 154495 154496 154497 154498 154499 154500 154501 154502 154503 154504 154505 154506 154507 154508 154509 154510 154511 154512 154513 154514 154515 154516 154517 154518 154519 154520 154521 154522 154523 154524 154525 154526 154527 154528 154529 154530 154531 154532 154533 154534 154535 154536 154537 154538 154539 154540 154541 154542 154543 154544 154545> # SplitBus
mul in 2 <154314 154280> out 1 <154546>  # cond trueterm
const-mul-neg-1 in 1 <154314> out 1 <154547> # cond minuscond
add in 2 <100 154547> out 1 <154548>     # cond negcond
mul in 2 <154548 153984> out 1 <154549>  # cond falseterm
add in 2 <154546 154549> out 1 <154550>  # cond result
add in 2 <153976 154550> out 1 <154551>  # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
split in 1 <154551> out 233 <154552 154553 154554 154555 154556 154557 154558 154559 154560 154561 154562 154563 154564 154565 154566 154567 154568 154569 154570 154571 154572 154573 154574 154575 154576 154577 154578 154579 154580 154581 154582 154583 154584 154585 154586 154587 154588 154589 154590 154591 154592 154593 154594 154595 154596 154597 154598 154599 154600 154601 154602 154603 154604 154605 154606 154607 154608 154609 154610 154611 154612 154613 154614 154615 154616 154617 154618 154619 154620 154621 154622 154623 154624 154625 154626 154627 154628 154629 154630 154631 154632 154633 154634 154635 154636 154637 154638 154639 154640 154641 154642 154643 154644 154645 154646 154647 154648 154649 154650 154651 154652 154653 154654 154655 154656 154657 154658 154659 154660 154661 154662 154663 154664 154665 154666 154667 154668 154669 154670 154671 154672 154673 154674 154675 154676 154677 154678 154679 154680 154681 154682 154683 154684 154685 154686 154687 154688 154689 154690 154691 154692 154693 154694 154695 154696 154697 154698 154699 154700 154701 154702 154703 154704 154705 154706 154707 154708 154709 154710 154711 154712 154713 154714 154715 154716 154717 154718 154719 154720 154721 154722 154723 154724 154725 154726 154727 154728 154729 154730 154731 154732 154733 154734 154735 154736 154737 154738 154739 154740 154741 154742 154743 154744 154745 154746 154747 154748 154749 154750 154751 154752 154753 154754 154755 154756 154757 154758 154759 154760 154761 154762 154763 154764 154765 154766 154767 154768 154769 154770 154771 154772 154773 154774 154775 154776 154777 154778 154779 154780 154781 154782 154783 154784> # SplitBus
const-mul-2 in 1 <154583> out 1 <154785> # join source bit 31
add in 2 <154582 154785> out 1 <154786>  # join source bit 30
const-mul-2 in 1 <154786> out 1 <154787> # join
add in 2 <154581 154787> out 1 <154788>  # join source bit 29
const-mul-2 in 1 <154788> out 1 <154789> # join
add in 2 <154580 154789> out 1 <154790>  # join source bit 28
const-mul-2 in 1 <154790> out 1 <154791> # join
add in 2 <154579 154791> out 1 <154792>  # join source bit 27
const-mul-2 in 1 <154792> out 1 <154793> # join
add in 2 <154578 154793> out 1 <154794>  # join source bit 26
const-mul-2 in 1 <154794> out 1 <154795> # join
add in 2 <154577 154795> out 1 <154796>  # join source bit 25
const-mul-2 in 1 <154796> out 1 <154797> # join
add in 2 <154576 154797> out 1 <154798>  # join source bit 24
const-mul-2 in 1 <154798> out 1 <154799> # join
add in 2 <154575 154799> out 1 <154800>  # join source bit 23
const-mul-2 in 1 <154800> out 1 <154801> # join
add in 2 <154574 154801> out 1 <154802>  # join source bit 22
const-mul-2 in 1 <154802> out 1 <154803> # join
add in 2 <154573 154803> out 1 <154804>  # join source bit 21
const-mul-2 in 1 <154804> out 1 <154805> # join
add in 2 <154572 154805> out 1 <154806>  # join source bit 20
const-mul-2 in 1 <154806> out 1 <154807> # join
add in 2 <154571 154807> out 1 <154808>  # join source bit 19
const-mul-2 in 1 <154808> out 1 <154809> # join
add in 2 <154570 154809> out 1 <154810>  # join source bit 18
const-mul-2 in 1 <154810> out 1 <154811> # join
add in 2 <154569 154811> out 1 <154812>  # join source bit 17
const-mul-2 in 1 <154812> out 1 <154813> # join
add in 2 <154568 154813> out 1 <154814>  # join source bit 16
const-mul-2 in 1 <154814> out 1 <154815> # join
add in 2 <154567 154815> out 1 <154816>  # join source bit 15
const-mul-2 in 1 <154816> out 1 <154817> # join
add in 2 <154566 154817> out 1 <154818>  # join source bit 14
const-mul-2 in 1 <154818> out 1 <154819> # join
add in 2 <154565 154819> out 1 <154820>  # join source bit 13
const-mul-2 in 1 <154820> out 1 <154821> # join
add in 2 <154564 154821> out 1 <154822>  # join source bit 12
const-mul-2 in 1 <154822> out 1 <154823> # join
add in 2 <154563 154823> out 1 <154824>  # join source bit 11
const-mul-2 in 1 <154824> out 1 <154825> # join
add in 2 <154562 154825> out 1 <154826>  # join source bit 10
const-mul-2 in 1 <154826> out 1 <154827> # join
add in 2 <154561 154827> out 1 <154828>  # join source bit 9
const-mul-2 in 1 <154828> out 1 <154829> # join
add in 2 <154560 154829> out 1 <154830>  # join source bit 8
const-mul-2 in 1 <154830> out 1 <154831> # join
add in 2 <154559 154831> out 1 <154832>  # join source bit 7
const-mul-2 in 1 <154832> out 1 <154833> # join
add in 2 <154558 154833> out 1 <154834>  # join source bit 6
const-mul-2 in 1 <154834> out 1 <154835> # join
add in 2 <154557 154835> out 1 <154836>  # join source bit 5
const-mul-2 in 1 <154836> out 1 <154837> # join
add in 2 <154556 154837> out 1 <154838>  # join source bit 4
const-mul-2 in 1 <154838> out 1 <154839> # join
add in 2 <154555 154839> out 1 <154840>  # join source bit 3
const-mul-2 in 1 <154840> out 1 <154841> # join
add in 2 <154554 154841> out 1 <154842>  # join source bit 2
const-mul-2 in 1 <154842> out 1 <154843> # join
add in 2 <154553 154843> out 1 <154844>  # join source bit 1
const-mul-2 in 1 <154844> out 1 <154845> # join
add in 2 <154552 154845> out 1 <154846>  # join source bit 0
add in 2 <154846 154846> out 1 <154847>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <153976> out 1 <154848> # multiply-by-constant 4294967295
add in 2 <154550 154848> out 1 <154849>  # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <154849> out 265 <154850 154851 154852 154853 154854 154855 154856 154857 154858 154859 154860 154861 154862 154863 154864 154865 154866 154867 154868 154869 154870 154871 154872 154873 154874 154875 154876 154877 154878 154879 154880 154881 154882 154883 154884 154885 154886 154887 154888 154889 154890 154891 154892 154893 154894 154895 154896 154897 154898 154899 154900 154901 154902 154903 154904 154905 154906 154907 154908 154909 154910 154911 154912 154913 154914 154915 154916 154917 154918 154919 154920 154921 154922 154923 154924 154925 154926 154927 154928 154929 154930 154931 154932 154933 154934 154935 154936 154937 154938 154939 154940 154941 154942 154943 154944 154945 154946 154947 154948 154949 154950 154951 154952 154953 154954 154955 154956 154957 154958 154959 154960 154961 154962 154963 154964 154965 154966 154967 154968 154969 154970 154971 154972 154973 154974 154975 154976 154977 154978 154979 154980 154981 154982 154983 154984 154985 154986 154987 154988 154989 154990 154991 154992 154993 154994 154995 154996 154997 154998 154999 155000 155001 155002 155003 155004 155005 155006 155007 155008 155009 155010 155011 155012 155013 155014 155015 155016 155017 155018 155019 155020 155021 155022 155023 155024 155025 155026 155027 155028 155029 155030 155031 155032 155033 155034 155035 155036 155037 155038 155039 155040 155041 155042 155043 155044 155045 155046 155047 155048 155049 155050 155051 155052 155053 155054 155055 155056 155057 155058 155059 155060 155061 155062 155063 155064 155065 155066 155067 155068 155069 155070 155071 155072 155073 155074 155075 155076 155077 155078 155079 155080 155081 155082 155083 155084 155085 155086 155087 155088 155089 155090 155091 155092 155093 155094 155095 155096 155097 155098 155099 155100 155101 155102 155103 155104 155105 155106 155107 155108 155109 155110 155111 155112 155113 155114> # SplitBus
mul in 2 <154881 154847> out 1 <155115>  # cond trueterm
const-mul-neg-1 in 1 <154881> out 1 <155116> # cond minuscond
add in 2 <100 155116> out 1 <155117>     # cond negcond
mul in 2 <155117 153976> out 1 <155118>  # cond falseterm
add in 2 <155115 155118> out 1 <155119>  # cond result
mul in 2 <153804 153768> out 1 <155120>  # cond trueterm
const-mul-neg-1 in 1 <153804> out 1 <155121> # cond minuscond
add in 2 <100 155121> out 1 <155122>     # cond negcond
mul in 2 <155122 153765> out 1 <155123>  # cond falseterm
add in 2 <155120 155123> out 1 <155124>  # cond result
mul in 2 <153660 153624> out 1 <155125>  # cond trueterm
const-mul-neg-1 in 1 <153660> out 1 <155126> # cond minuscond
add in 2 <100 155126> out 1 <155127>     # cond negcond
mul in 2 <155127 153621> out 1 <155128>  # cond falseterm
add in 2 <155125 155128> out 1 <155129>  # cond result
const-mul-ffffffff in 1 <155129> out 1 <155130> # multiply-by-constant 4294967295
add in 2 <155129 155124> out 1 <155131>  # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
add in 2 <155131 155130> out 1 <155132>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <155132> out 1 <155133> # multiply-by-constant 4294967295
add in 2 <155131 155133> out 1 <155134>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <155129> out 1 <155135> # multiply-by-constant 4294967295
add in 2 <155124 155135> out 1 <155136>  # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <155136> out 200 <155137 155138 155139 155140 155141 155142 155143 155144 155145 155146 155147 155148 155149 155150 155151 155152 155153 155154 155155 155156 155157 155158 155159 155160 155161 155162 155163 155164 155165 155166 155167 155168 155169 155170 155171 155172 155173 155174 155175 155176 155177 155178 155179 155180 155181 155182 155183 155184 155185 155186 155187 155188 155189 155190 155191 155192 155193 155194 155195 155196 155197 155198 155199 155200 155201 155202 155203 155204 155205 155206 155207 155208 155209 155210 155211 155212 155213 155214 155215 155216 155217 155218 155219 155220 155221 155222 155223 155224 155225 155226 155227 155228 155229 155230 155231 155232 155233 155234 155235 155236 155237 155238 155239 155240 155241 155242 155243 155244 155245 155246 155247 155248 155249 155250 155251 155252 155253 155254 155255 155256 155257 155258 155259 155260 155261 155262 155263 155264 155265 155266 155267 155268 155269 155270 155271 155272 155273 155274 155275 155276 155277 155278 155279 155280 155281 155282 155283 155284 155285 155286 155287 155288 155289 155290 155291 155292 155293 155294 155295 155296 155297 155298 155299 155300 155301 155302 155303 155304 155305 155306 155307 155308 155309 155310 155311 155312 155313 155314 155315 155316 155317 155318 155319 155320 155321 155322 155323 155324 155325 155326 155327 155328 155329 155330 155331 155332 155333 155334 155335 155336> # SplitBus
mul in 2 <155168 155134> out 1 <155337>  # cond trueterm
const-mul-neg-1 in 1 <155168> out 1 <155338> # cond minuscond
add in 2 <100 155338> out 1 <155339>     # cond negcond
mul in 2 <155339 155124> out 1 <155340>  # cond falseterm
add in 2 <155337 155340> out 1 <155341>  # cond result
const-mul-ffffffff in 1 <155341> out 1 <155342> # multiply-by-constant 4294967295
add in 2 <155341 155119> out 1 <155343>  # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
split in 1 <155343> out 235 <155344 155345 155346 155347 155348 155349 155350 155351 155352 155353 155354 155355 155356 155357 155358 155359 155360 155361 155362 155363 155364 155365 155366 155367 155368 155369 155370 155371 155372 155373 155374 155375 155376 155377 155378 155379 155380 155381 155382 155383 155384 155385 155386 155387 155388 155389 155390 155391 155392 155393 155394 155395 155396 155397 155398 155399 155400 155401 155402 155403 155404 155405 155406 155407 155408 155409 155410 155411 155412 155413 155414 155415 155416 155417 155418 155419 155420 155421 155422 155423 155424 155425 155426 155427 155428 155429 155430 155431 155432 155433 155434 155435 155436 155437 155438 155439 155440 155441 155442 155443 155444 155445 155446 155447 155448 155449 155450 155451 155452 155453 155454 155455 155456 155457 155458 155459 155460 155461 155462 155463 155464 155465 155466 155467 155468 155469 155470 155471 155472 155473 155474 155475 155476 155477 155478 155479 155480 155481 155482 155483 155484 155485 155486 155487 155488 155489 155490 155491 155492 155493 155494 155495 155496 155497 155498 155499 155500 155501 155502 155503 155504 155505 155506 155507 155508 155509 155510 155511 155512 155513 155514 155515 155516 155517 155518 155519 155520 155521 155522 155523 155524 155525 155526 155527 155528 155529 155530 155531 155532 155533 155534 155535 155536 155537 155538 155539 155540 155541 155542 155543 155544 155545 155546 155547 155548 155549 155550 155551 155552 155553 155554 155555 155556 155557 155558 155559 155560 155561 155562 155563 155564 155565 155566 155567 155568 155569 155570 155571 155572 155573 155574 155575 155576 155577 155578> # SplitBus
const-mul-2 in 1 <155375> out 1 <155579> # join source bit 31
add in 2 <155374 155579> out 1 <155580>  # join source bit 30
const-mul-2 in 1 <155580> out 1 <155581> # join
add in 2 <155373 155581> out 1 <155582>  # join source bit 29
const-mul-2 in 1 <155582> out 1 <155583> # join
add in 2 <155372 155583> out 1 <155584>  # join source bit 28
const-mul-2 in 1 <155584> out 1 <155585> # join
add in 2 <155371 155585> out 1 <155586>  # join source bit 27
const-mul-2 in 1 <155586> out 1 <155587> # join
add in 2 <155370 155587> out 1 <155588>  # join source bit 26
const-mul-2 in 1 <155588> out 1 <155589> # join
add in 2 <155369 155589> out 1 <155590>  # join source bit 25
const-mul-2 in 1 <155590> out 1 <155591> # join
add in 2 <155368 155591> out 1 <155592>  # join source bit 24
const-mul-2 in 1 <155592> out 1 <155593> # join
add in 2 <155367 155593> out 1 <155594>  # join source bit 23
const-mul-2 in 1 <155594> out 1 <155595> # join
add in 2 <155366 155595> out 1 <155596>  # join source bit 22
const-mul-2 in 1 <155596> out 1 <155597> # join
add in 2 <155365 155597> out 1 <155598>  # join source bit 21
const-mul-2 in 1 <155598> out 1 <155599> # join
add in 2 <155364 155599> out 1 <155600>  # join source bit 20
const-mul-2 in 1 <155600> out 1 <155601> # join
add in 2 <155363 155601> out 1 <155602>  # join source bit 19
const-mul-2 in 1 <155602> out 1 <155603> # join
add in 2 <155362 155603> out 1 <155604>  # join source bit 18
const-mul-2 in 1 <155604> out 1 <155605> # join
add in 2 <155361 155605> out 1 <155606>  # join source bit 17
const-mul-2 in 1 <155606> out 1 <155607> # join
add in 2 <155360 155607> out 1 <155608>  # join source bit 16
const-mul-2 in 1 <155608> out 1 <155609> # join
add in 2 <155359 155609> out 1 <155610>  # join source bit 15
const-mul-2 in 1 <155610> out 1 <155611> # join
add in 2 <155358 155611> out 1 <155612>  # join source bit 14
const-mul-2 in 1 <155612> out 1 <155613> # join
add in 2 <155357 155613> out 1 <155614>  # join source bit 13
const-mul-2 in 1 <155614> out 1 <155615> # join
add in 2 <155356 155615> out 1 <155616>  # join source bit 12
const-mul-2 in 1 <155616> out 1 <155617> # join
add in 2 <155355 155617> out 1 <155618>  # join source bit 11
const-mul-2 in 1 <155618> out 1 <155619> # join
add in 2 <155354 155619> out 1 <155620>  # join source bit 10
const-mul-2 in 1 <155620> out 1 <155621> # join
add in 2 <155353 155621> out 1 <155622>  # join source bit 9
const-mul-2 in 1 <155622> out 1 <155623> # join
add in 2 <155352 155623> out 1 <155624>  # join source bit 8
const-mul-2 in 1 <155624> out 1 <155625> # join
add in 2 <155351 155625> out 1 <155626>  # join source bit 7
const-mul-2 in 1 <155626> out 1 <155627> # join
add in 2 <155350 155627> out 1 <155628>  # join source bit 6
const-mul-2 in 1 <155628> out 1 <155629> # join
add in 2 <155349 155629> out 1 <155630>  # join source bit 5
const-mul-2 in 1 <155630> out 1 <155631> # join
add in 2 <155348 155631> out 1 <155632>  # join source bit 4
const-mul-2 in 1 <155632> out 1 <155633> # join
add in 2 <155347 155633> out 1 <155634>  # join source bit 3
const-mul-2 in 1 <155634> out 1 <155635> # join
add in 2 <155346 155635> out 1 <155636>  # join source bit 2
const-mul-2 in 1 <155636> out 1 <155637> # join
add in 2 <155345 155637> out 1 <155638>  # join source bit 1
const-mul-2 in 1 <155638> out 1 <155639> # join
add in 2 <155344 155639> out 1 <155640>  # join source bit 0
add in 2 <155640 155640> out 1 <155641>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <155641> out 1 <155642> # multiply-by-constant 4294967295
add in 2 <155343 155642> out 1 <155643>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <155341> out 1 <155644> # multiply-by-constant 4294967295
add in 2 <155119 155644> out 1 <155645>  # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <155645> out 267 <155646 155647 155648 155649 155650 155651 155652 155653 155654 155655 155656 155657 155658 155659 155660 155661 155662 155663 155664 155665 155666 155667 155668 155669 155670 155671 155672 155673 155674 155675 155676 155677 155678 155679 155680 155681 155682 155683 155684 155685 155686 155687 155688 155689 155690 155691 155692 155693 155694 155695 155696 155697 155698 155699 155700 155701 155702 155703 155704 155705 155706 155707 155708 155709 155710 155711 155712 155713 155714 155715 155716 155717 155718 155719 155720 155721 155722 155723 155724 155725 155726 155727 155728 155729 155730 155731 155732 155733 155734 155735 155736 155737 155738 155739 155740 155741 155742 155743 155744 155745 155746 155747 155748 155749 155750 155751 155752 155753 155754 155755 155756 155757 155758 155759 155760 155761 155762 155763 155764 155765 155766 155767 155768 155769 155770 155771 155772 155773 155774 155775 155776 155777 155778 155779 155780 155781 155782 155783 155784 155785 155786 155787 155788 155789 155790 155791 155792 155793 155794 155795 155796 155797 155798 155799 155800 155801 155802 155803 155804 155805 155806 155807 155808 155809 155810 155811 155812 155813 155814 155815 155816 155817 155818 155819 155820 155821 155822 155823 155824 155825 155826 155827 155828 155829 155830 155831 155832 155833 155834 155835 155836 155837 155838 155839 155840 155841 155842 155843 155844 155845 155846 155847 155848 155849 155850 155851 155852 155853 155854 155855 155856 155857 155858 155859 155860 155861 155862 155863 155864 155865 155866 155867 155868 155869 155870 155871 155872 155873 155874 155875 155876 155877 155878 155879 155880 155881 155882 155883 155884 155885 155886 155887 155888 155889 155890 155891 155892 155893 155894 155895 155896 155897 155898 155899 155900 155901 155902 155903 155904 155905 155906 155907 155908 155909 155910 155911 155912> # SplitBus
mul in 2 <155677 155643> out 1 <155913>  # cond trueterm
const-mul-neg-1 in 1 <155677> out 1 <155914> # cond minuscond
add in 2 <100 155914> out 1 <155915>     # cond negcond
mul in 2 <155915 155119> out 1 <155916>  # cond falseterm
add in 2 <155913 155916> out 1 <155917>  # cond result
add in 2 <155917 104> out 1 <155918>     # ArithBusReq.AddReq(DFG.Conditional,DFG.Constant)
const-mul-ffffffff in 1 <49> out 1 <155919> # multiply-by-constant 4294967295
add in 2 <155918 155919> out 1 <155920>  # 'CmpLT DFG.Add - DFG.Input'
split in 1 <155920> outplitBus
mul in 2 <155952 103> out 1 <156159>     # cond trueterm
const-mul-neg-1 in 1 <155952> out 1 <156160> # cond minuscond
add in 2 <100 156160> out 1 <156161>     # cond negcond
mul in 2 <156161 102> out 1 <156162>     # cond falseterm
add in 2 <156159 156162> out 1 <156163>  # cond result
add in 2 <155917 3084> out 1 <156164>    # ArithBusReq.AddReq(DFG.Conditional,DFG.Negate)
const-mul-ffffffff in 1 <156164> out 1 <156165> # multiply-by-constant 4294967295
add in 2 <49 156165> out 1 <156166>      # 'CmpLT DFG.Input - DFG.Subtract'
split in 1 <156166> out 270 <156167 156168 156169 156170 156171 156172 156173 156174 156175 156176 156177 156178 156179 156180 156181 156182 156183 156184 156185 156186 156187 156188 156189 156190 156191 156192 156193 156194 156195 156196 156197 156198 156199 156200 156201 156202 156203 156204 156205 156206 156207 156208 156209 156210 156211 156212 156213 156214 156215 156216 156217 156218 156219 156220 156221 156222 156223 156224 156225 156226 156227 156228 156229 156230 156231 156232 156233 156234 156235 156236 156237 156238 156239 156240 156241 156242 156243 156244 156245 156246 156247 156248 156249 156250 156251 156252 156253 156254 156255 156256 156257 156258 156259 156260 156261 156262 156263 156264 156265 156266 156267 156268 156269 156270 156271 156272 156273 156274 156275 156276 156277 156278 156279 156280 156281 156282 156283 156284 156285 156286 156287 156288 156289 156290 156291 156292 156293 156294 156295 156296 156297 156298 156299 156300 156301 156302 156303 156304 156305 156306 156307 156308 156309 156310 156311 156312 156313 156314 156315 156316 156317 156318 156319 156320 156321 156322 156323 156324 156325 156326 156327 156328 156329 156330 156331 156332 156333 156334 156335 156336 156337 156338 156339 156340 156341 156342 156343 156344 156345 156346 156347 156348 156349 156350 156351 156352 156353 156354 156355 156356 156357 156358 156359 156360 156361 156362 156363 156364 156365 156366 156367 156368 156369 156370 156371 156372 156373 156374 156375 156376 156377 156378 156379 156380 156381 156382 156383 156384 156385 156386 156387 156388 156389 156390 156391 156392 156393 156394 156395 156396 156397 156398 156399 156400 156401 156402 156403 156404 156405 156406 156407 156408 156409 156410 156411 156412 156413 156414 156415 156416 156417 156418 156419 156420 156421 156422 156423 156424 156425 156426 156427 156428 156429 156430 156431 156432 156433 156434 156435 156436> # SplitBus
mul in 2 <156198 103> out 1 <156437>     # cond trueterm
const-mul-neg-1 in 1 <156198> out 1 <156438> # cond minuscond
add in 2 <100 156438> out 1 <156439>     # cond negcond
mul in 2 <156439 156163> out 1 <156440>  # cond falseterm
add in 2 <156437 156440> out 1 <156441>  # cond result
const-mul-ffffffff in 1 <48> out 1 <156442> # multiply-by-constant 4294967295
add in 2 <48 49> out 1 <156443>          # ArithBusReq.AddReq(DFG.Input,DFG.Input)
add in 2 <156443 156442> out 1 <156444>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <156444> out 1 <156445> # multiply-by-constant 4294967295
add in 2 <156443 156445> out 1 <156446>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <48> out 1 <156447> # multiply-by-constant 4294967295
add in 2 <49 156447> out 1 <156448>      # 'CmpLT DFG.Input - DFG.Input'
split in 1 <156448> out 65 <156449 156450 156451 156452 156453 156454 156455 156456 156457 156458 156459 156460 156461 156462 156463 156464 156465 156466 156467 156468 156469 156470 156471 156472 156473 156474 156475 156476 156477 156478 156479 156480 156481 156482 156483 156484 156485 156486 156487 156488 156489 156490 156491 156492 156493 156494 156495 156496 156497 156498 156499 156500 156501 156502 156503 156504 156505 156506 156507 156508 156509 156510 156511 156512 156513> # SplitBus
mul in 2 <156480 156446> out 1 <156514>  # cond trueterm
const-mul-neg-1 in 1 <156480> out 1 <156515> # cond minuscond
add in 2 <100 156515> out 1 <156516>     # cond negcond
mul in 2 <156516 49> out 1 <156517>      # cond falseterm
add in 2 <156514 156517> out 1 <156518>  # cond result
const-mul-ffffffff in 1 <156518> out 1 <156519> # multiply-by-constant 4294967295
add in 2 <156518 50> out 1 <156520>      # ArithBusReq.AddReq(DFG.Conditional,DFG.Input)
add in 2 <156520 156519> out 1 <156521>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <156521> out 1 <156522> # multiply-by-constant 4294967295
add in 2 <156520 156522> out 1 <156523>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <156518> out 1 <156524> # multiply-by-constant 4294967295
add in 2 <50 156524> out 1 <156525>      # 'CmpLT DFG.Input - DFG.Conditional'
split in 1 <156525> out 131 <156526 156527 156528 156529 156530 156531 156532 156533 156534 156535 156536 156537 156538 156539 156540 156541 156542 156543 156544 156545 156546 156547 156548 156549 156550 156551 156552 156553 156554 156555 156556 156557 156558 156559 156560 156561 156562 156563 156564 156565 156566 156567 156568 156569 156570 156571 156572 156573 156574 156575 156576 156577 156578 156579 156580 156581 156582 156583 156584 156585 156586 156587 156588 156589 156590 156591 156592 156593 156594 156595 156596 156597 156598 156599 156600 156601 156602 156603 156604 156605 156606 156607 156608 156609 156610 156611 156612 156613 156614 156615 156616 156617 156618 156619 156620 156621 156622 156623 156624 156625 156626 156627 156628 156629 156630 156631 156632 156633 156634 156635 156636 156637 156638 156639 156640 156641 156642 156643 156644 156645 156646 156647 156648 156649 156650 156651 156652 156653 156654 156655 156656> # SplitBus
mul in 2 <156557 156523> out 1 <156657>  # cond trueterm
const-mul-neg-1 in 1 <156557> out 1 <156658> # cond minuscond
add in 2 <100 156658> out 1 <156659>     # cond negcond
mul in 2 <156659 50> out 1 <156660>      # cond falseterm
add in 2 <156657 156660> out 1 <156661>  # cond result
const-mul-ffffffff in 1 <156661> out 1 <156662> # multiply-by-constant 4294967295
add in 2 <156661 51> out 1 <156663>      # ArithBusReq.AddReq(DFG.Conditional,DFG.Input)
add in 2 <156663 156662> out 1 <156664>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <156661> out 1 <156665> # multiply-by-constant 4294967295
add in 2 <51 156665> out 1 <156666>      # 'CmpLT DFG.Input - DFG.Conditional'
split in 1 <156666> out 197 <156667 156668 156669 156670 156671 156672 156673 156674 156675 156676 156677 156678 156679 156680 156681 156682 156683 156684 156685 156686 156687 156688 156689 156690 156691 156692 156693 156694 156695 156696 156697 156698 156699 156700 156701 156702 156703 156704 156705 156706 156707 156708 156709 156710 156711 156712 156713 156714 156715 156716 156717 156718 156719 156720 156721 156722 156723 156724 156725 156726 156727 156728 156729 156730 156731 156732 156733 156734 156735 156736 156737 156738 156739 156740 156741 156742 156743 156744 156745 156746 156747 156748 156749 156750 156751 156752 156753 156754 156755 156756 156757 156758 156759 156760 156761 156762 156763 156764 156765 156766 156767 156768 156769 156770 156771 156772 156773 156774 156775 156776 156777 156778 156779 156780 156781 156782 156783 156784 156785 156786 156787 156788 156789 156790 156791 156792 156793 156794 156795 156796 156797 156798 156799 156800 156801 156802 156803 156804 156805 156806 156807 156808 156809 156810 156811 156812 156813 156814 156815 156816 156817 156818 156819 156820 156821 156822 156823 156824 156825 156826 156827 156828 156829 156830 156831 156832 156833 156834 156835 156836 156837 156838 156839 156840 156841 156842 156843 156844 156845 156846 156847 156848 156849 156850 156851 156852 156853 156854 156855 156856 156857 156858 156859 156860 156861 156862 156863> # SplitBus
mul in 2 <156698 156664> out 1 <156864>  # cond trueterm
const-mul-neg-1 in 1 <156698> out 1 <156865> # cond minuscond
add in 2 <100 156865> out 1 <156866>     # cond negcond
mul in 2 <156866 156661> out 1 <156867>  # cond falseterm
add in 2 <156864 156867> out 1 <156868>  # cond result
mul in 2 <156557 156521> out 1 <156869>  # cond trueterm
const-mul-neg-1 in 1 <156557> out 1 <156870> # cond minuscond
add in 2 <100 156870> out 1 <156871>     # cond negcond
mul in 2 <156871 156518> out 1 <156872>  # cond falseterm
add in 2 <156869 156872> out 1 <156873>  # cond result
mul in 2 <156480 156444> out 1 <156874>  # cond trueterm
const-mul-neg-1 in 1 <156480> out 1 <156875> # cond minuscond
add in 2 <100 156875> out 1 <156876>     # cond negcond
mul in 2 <156876 48> out 1 <156877>      # cond falseterm
add in 2 <156874 156877> out 1 <156878>  # cond result
const-mul-ffffffff in 1 <156878> out 1 <156879> # multiply-by-constant 4294967295
add in 2 <156878 156873> out 1 <156880>  # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
add in 2 <156880 156879> out 1 <156881>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <156881> out 1 <156882> # multiply-by-constant 4294967295
add in 2 <156880 156882> out 1 <156883>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <156878> out 1 <156884> # multiply-by-constant 4294967295
add in 2 <156873 156884> out 1 <156885>  # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <156885> out 132 <156886 156887 156888 156889 156890 156891 156892 156893 156894 156895 156896 156897 156898 156899 156900 156901 156902 156903 156904 156905 156906 156907 156908 156909 156910 156911 156912 156913 156914 156915 156916 156917 156918 156919 156920 156921 156922 156923 156924 156925 156926 156927 156928 156929 156930 156931 156932 156933 156934 156935 156936 156937 156938 156939 156940 156941 156942 156943 156944 156945 156946 156947 156948 156949 156950 156951 156952 156953 156954 156955 156956 156957 156958 156959 156960 156961 156962 156963 156964 156965 156966 156967 156968 156969 156970 156971 156972 156973 156974 156975 156976 156977 156978 156979 156980 156981 156982 156983 156984 156985 156986 156987 156988 156989 156990 156991 156992 156993 156994 156995 156996 156997 156998 156999 157000 157001 157002 157003 157004 157005 157006 157007 157008 157009 157010 157011 157012 157013 157014 157015 157016 157017> # SplitBus
mul in 2 <156917 156883> out 1 <157018>  # cond trueterm
const-mul-neg-1 in 1 <156917> out 1 <157019> # cond minuscond
add in 2 <100 157019> out 1 <157020>     # cond negcond
mul in 2 <157020 156873> out 1 <157021>  # cond falseterm
add in 2 <157018 157021> out 1 <157022>  # cond result
const-mul-ffffffff in 1 <157022> out 1 <157023> # multiply-by-constant 4294967295
add in 2 <157022 156868> out 1 <157024>  # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
add in 2 <157024 157023> out 1 <157025>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <157025> out 1 <157026> # multiply-by-constant 4294967295
add in 2 <157024 157026> out 1 <157027>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <157022> out 1 <157028> # multiply-by-constant 4294967295
add in 2 <156868 157028> out 1 <157029>  # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <157029> out 199 <157030 157031 157032 157033 157034 157035 157036 157037 157038 157039 157040 157041 157042 157043 157044 157045 157046 157047 157048 157049 157050 157051 157052 157053 157054 157055 157056 157057 157058 157059 157060 157061 157062 157063 157064 157065 157066 157067 157068 157069 157070 157071 157072 157073 157074 157075 157076 157077 157078 157079 157080 157081 157082 157083 157084 157085 157086 157087 157088 157089 157090 157091 157092 157093 157094 157095 157096 157097 157098 157099 157100 157101 157102 157103 157104 157105 157106 157107 157108 157109 157110 157111 157112 157113 157114 157115 157116 157117 157118 157119 157120 157121 157122 157123 157124 157125 157126 157127 157128 157129 157130 157131 157132 157133 157134 157135 157136 157137 157138 157139 157140 157141 157142 157143 157144 157145 157146 157147 157148 157149 157150 157151 157152 157153 157154 157155 157156 157157 157158 157159 157160 157161 157162 157163 157164 157165 157166 157167 157168 157169 157170 157171 157172 157173 157174 157175 157176 157177 157178 157179 157180 157181 157182 157183 157184 157185 157186 157187 157188 157189 157190 157191 157192 157193 157194 157195 157196 157197 157198 157199 157200 157201 157202 157203 157204 157205 157206 157207 157208 157209 157210 157211 157212 157213 157214 157215 157216 157217 157218 157219 157220 157221 157222 157223 157224 157225 157226 157227 157228> # SplitBus
mul in 2 <157061 157027> out 1 <157229>  # cond trueterm
const-mul-neg-1 in 1 <157061> out 1 <157230> # cond minuscond
add in 2 <100 157230> out 1 <157231>     # cond negcond
mul in 2 <157231 156868> out 1 <157232>  # cond falseterm
add in 2 <157229 157232> out 1 <157233>  # cond result
const-mul-ffffffff in 1 <157233> out 1 <157234> # multiply-by-constant 4294967295
const-mul-ffffffff in 1 <156664> out 1 <157235> # multiply-by-constant 4294967295
add in 2 <156663 157235> out 1 <157236>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
mul in 2 <156698 157236> out 1 <157237>  # cond trueterm
const-mul-neg-1 in 1 <156698> out 1 <157238> # cond minuscond
add in 2 <100 157238> out 1 <157239>     # cond negcond
mul in 2 <157239 51> out 1 <157240>      # cond falseterm
add in 2 <157237 157240> out 1 <157241>  # cond result
const-mul-ffffffff in 1 <157241> out 1 <157242> # multiply-by-constant 4294967295
add in 2 <157241 52> out 1 <157243>      # ArithBusReq.AddReq(DFG.Conditional,DFG.Input)
split in 1 <157243> out 231 <157244 157245 157246 157247 157248 157249 157250 157251 157252 157253 157254 157255 157256 157257 157258 157259 157260 157261 157262 157263 157264 157265 157266 157267 157268 157269 157270 157271 157272 157273 157274 157275 157276 157277 157278 157279 157280 157281 157282 157283 157284 157285 157286 157287 157288 157289 157290 157291 157292 157293 157294 157295 157296 157297 157298 157299 157300 157301 157302 157303 157304 157305 157306 157307 157308 157309 157310 157311 157312 157313 157314 157315 157316 157317 157318 157319 157320 157321 157322 157323 157324 157325 157326 157327 157328 157329 157330 157331 157332 157333 157334 157335 157336 157337 157338 157339 157340 157341 157342 157343 157344 157345 157346 157347 157348 157349 157350 157351 157352 157353 157354 157355 157356 157357 157358 157359 157360 157361 157362 157363 157364 157365 157366 157367 157368 157369 157370 157371 157372 157373 157374 157375 157376 157377 157378 157379 157380 157381 157382 157383 157384 157385 157386 157387 157388 157389 157390 157391 157392 157393 157394 157395 157396 157397 157398 157399 157400 157401 157402 157403 157404 157405 157406 157407 157408 157409 157410 157411 157412 157413 157414 157415 157416 157417 157418 157419 157420 157421 157422 157423 157424 157425 157426 157427 157428 157429 157430 157431 157432 157433 157434 157435 157436 157437 157438 157439 157440 157441 157442 157443 157444 157445 157446 157447 157448 157449 157450 157451 157452 157453 157454 157455 157456 157457 157458 157459 157460 157461 157462 157463 157464 157465 157466 157467 157468 157469 157470 157471 157472 157473 157474> # SplitBus
const-mul-2 in 1 <157275> out 1 <157475> # join source bit 31
add in 2 <157274 157475> out 1 <157476>  # join source bit 30
const-mul-2 in 1 <157476> out 1 <157477> # join
add in 2 <157273 157477> out 1 <157478>  # join source bit 29
const-mul-2 in 1 <157478> out 1 <157479> # join
add in 2 <157272 157479> out 1 <157480>  # join source bit 28
const-mul-2 in 1 <157480> out 1 <157481> # join
add in 2 <157271 157481> out 1 <157482>  # join source bit 27
const-mul-2 in 1 <157482> out 1 <157483> # join
add in 2 <157270 157483> out 1 <157484>  # join source bit 26
const-mul-2 in 1 <157484> out 1 <157485> # join
add in 2 <157269 157485> out 1 <157486>  # join source bit 25
const-mul-2 in 1 <157486> out 1 <157487> # join
add in 2 <157268 157487> out 1 <157488>  # join source bit 24
const-mul-2 in 1 <157488> out 1 <157489> # join
add in 2 <157267 157489> out 1 <157490>  # join source bit 23
const-mul-2 in 1 <157490> out 1 <157491> # join
add in 2 <157266 157491> out 1 <157492>  # join source bit 22
const-mul-2 in 1 <157492> out 1 <157493> # join
add in 2 <157265 157493> out 1 <157494>  # join source bit 21
const-mul-2 in 1 <157494> out 1 <157495> # join
add in 2 <157264 157495> out 1 <157496>  # join source bit 20
const-mul-2 in 1 <157496> out 1 <157497> # join
add in 2 <157263 157497> out 1 <157498>  # join source bit 19
const-mul-2 in 1 <157498> out 1 <157499> # join
add in 2 <157262 157499> out 1 <157500>  # join source bit 18
const-mul-2 in 1 <157500> out 1 <157501> # join
add in 2 <157261 157501> out 1 <157502>  # join source bit 17
const-mul-2 in 1 <157502> out 1 <157503> # join
add in 2 <157260 157503> out 1 <157504>  # join source bit 16
const-mul-2 in 1 <157504> out 1 <157505> # join
add in 2 <157259 157505> out 1 <157506>  # join source bit 15
const-mul-2 in 1 <157506> out 1 <157507> # join
add in 2 <157258 157507> out 1 <157508>  # join source bit 14
const-mul-2 in 1 <157508> out 1 <157509> # join
add in 2 <157257 157509> out 1 <157510>  # join source bit 13
const-mul-2 in 1 <157510> out 1 <157511> # join
add in 2 <157256 157511> out 1 <157512>  # join source bit 12
const-mul-2 in 1 <157512> out 1 <157513> # join
add in 2 <157255 157513> out 1 <157514>  # join source bit 11
const-mul-2 in 1 <157514> out 1 <157515> # join
add in 2 <157254 157515> out 1 <157516>  # join source bit 10
const-mul-2 in 1 <157516> out 1 <157517> # join
add in 2 <157253 157517> out 1 <157518>  # join source bit 9
const-mul-2 in 1 <157518> out 1 <157519> # join
add in 2 <157252 157519> out 1 <157520>  # join source bit 8
const-mul-2 in 1 <157520> out 1 <157521> # join
add in 2 <157251 157521> out 1 <157522>  # join source bit 7
const-mul-2 in 1 <157522> out 1 <157523> # join
add in 2 <157250 157523> out 1 <157524>  # join source bit 6
const-mul-2 in 1 <157524> out 1 <157525> # join
add in 2 <157249 157525> out 1 <157526>  # join source bit 5
const-mul-2 in 1 <157526> out 1 <157527> # join
add in 2 <157248 157527> out 1 <157528>  # join source bit 4
const-mul-2 in 1 <157528> out 1 <157529> # join
add in 2 <157247 157529> out 1 <157530>  # join source bit 3
const-mul-2 in 1 <157530> out 1 <157531> # join
add in 2 <157246 157531> out 1 <157532>  # join source bit 2
const-mul-2 in 1 <157532> out 1 <157533> # join
add in 2 <157245 157533> out 1 <157534>  # join source bit 1
const-mul-2 in 1 <157534> out 1 <157535> # join
add in 2 <157244 157535> out 1 <157536>  # join source bit 0
add in 2 <157536 157536> out 1 <157537>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <157241> out 1 <157538> # multiply-by-constant 4294967295
add in 2 <52 157538> out 1 <157539>      # 'CmpLT DFG.Input - DFG.Conditional'
split in 1 <157539> out 263 <157540 157541 157542 157543 157544 157545 157546 157547 157548 157549 157550 157551 157552 157553 157554 157555 157556 157557 157558 157559 157560 157561 157562 157563 157564 157565 157566 157567 157568 157569 157570 157571 157572 157573 157574 157575 157576 157577 157578 157579 157580 157581 157582 157583 157584 157585 157586 157587 157588 157589 157590 157591 157592 157593 157594 157595 157596 157597 157598 157599 157600 157601 157602 157603 157604 157605 157606 157607 157608 157609 157610 157611 157612 157613 157614 157615 157616 157617 157618 157619 157620 157621 157622 157623 157624 157625 157626 157627 157628 157629 157630 157631 157632 157633 157634 157635 157636 157637 157638 157639 157640 157641 157642 157643 157644 157645 157646 157647 157648 157649 157650 157651 157652 157653 157654 157655 157656 157657 157658 157659 157660 157661 157662 157663 157664 157665 157666 157667 157668 157669 157670 157671 157672 157673 157674 157675 157676 157677 157678 157679 157680 157681 157682 157683 157684 157685 157686 157687 157688 157689 157690 157691 157692 157693 157694 157695 157696 157697 157698 157699 157700 157701 157702 157703 157704 157705 157706 157707 157708 157709 157710 157711 157712 157713 157714 157715 157716 157717 157718 157719 157720 157721 157722 157723 157724 157725 157726 157727 157728 157729 157730 157731 157732 157733 157734 157735 157736 157737 157738 157739 157740 157741 157742 157743 157744 157745 157746 157747 157748 157749 157750 157751 157752 157753 157754 157755 157756 157757 157758 157759 157760 157761 157762 157763 157764 157765 157766 157767 157768 157769 157770 157771 157772 157773 157774 157775 157776 157777 157778 157779 157780 157781 157782 157783 157784 157785 157786 157787 157788 157789 157790 157791 157792 157793 157794 157795 157796 157797 157798 157799 157800 157801 157802> # SplitBus
mul in 2 <157571 157537> out 1 <157803>  # cond trueterm
const-mul-neg-1 in 1 <157571> out 1 <157804> # cond minuscond
add in 2 <100 157804> out 1 <157805>     # cond negcond
mul in 2 <157805 157241> out 1 <157806>  # cond falseterm
add in 2 <157803 157806> out 1 <157807>  # cond result
add in 2 <157233 157807> out 1 <157808>  # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
split in 1 <157808> outplitBus
const-mul-2 in 1 <157840> out 1 <158042> # join source bit 31
add in 2 <157839 158042> out 1 <158043>  # join source bit 30
const-mul-2 in 1 <158043> out 1 <158044> # join
add in 2 <157838 158044> out 1 <158045>  # join source bit 29
const-mul-2 in 1 <158045> out 1 <158046> # join
add in 2 <157837 158046> out 1 <158047>  # join source bit 28
const-mul-2 in 1 <158047> out 1 <158048> # join
add in 2 <157836 158048> out 1 <158049>  # join source bit 27
const-mul-2 in 1 <158049> out 1 <158050> # join
add in 2 <157835 158050> out 1 <158051>  # join source bit 26
const-mul-2 in 1 <158051> out 1 <158052> # join
add in 2 <157834 158052> out 1 <158053>  # join source bit 25
const-mul-2 in 1 <158053> out 1 <158054> # join
add in 2 <157833 158054> out 1 <158055>  # join source bit 24
const-mul-2 in 1 <158055> out 1 <158056> # join
add in 2 <157832 158056> out 1 <158057>  # join source bit 23
const-mul-2 in 1 <158057> out 1 <158058> # join
add in 2 <157831 158058> out 1 <158059>  # join source bit 22
const-mul-2 in 1 <158059> out 1 <158060> # join
add in 2 <157830 158060> out 1 <158061>  # join source bit 21
const-mul-2 in 1 <158061> out 1 <158062> # join
add in 2 <157829 158062> out 1 <158063>  # join source bit 20
const-mul-2 in 1 <158063> out 1 <158064> # join
add in 2 <157828 158064> out 1 <158065>  # join source bit 19
const-mul-2 in 1 <158065> out 1 <158066> # join
add in 2 <157827 158066> out 1 <158067>  # join source bit 18
const-mul-2 in 1 <158067> out 1 <158068> # join
add in 2 <157826 158068> out 1 <158069>  # join source bit 17
const-mul-2 in 1 <158069> out 1 <158070> # join
add in 2 <157825 158070> out 1 <158071>  # join source bit 16
const-mul-2 in 1 <158071> out 1 <158072> # join
add in 2 <157824 158072> out 1 <158073>  # join source bit 15
const-mul-2 in 1 <158073> out 1 <158074> # join
add in 2 <157823 158074> out 1 <158075>  # join source bit 14
const-mul-2 in 1 <158075> out 1 <158076> # join
add in 2 <157822 158076> out 1 <158077>  # join source bit 13
const-mul-2 in 1 <158077> out 1 <158078> # join
add in 2 <157821 158078> out 1 <158079>  # join source bit 12
const-mul-2 in 1 <158079> out 1 <158080> # join
add in 2 <157820 158080> out 1 <158081>  # join source bit 11
const-mul-2 in 1 <158081> out 1 <158082> # join
add in 2 <157819 158082> out 1 <158083>  # join source bit 10
const-mul-2 in 1 <158083> out 1 <158084> # join
add in 2 <157818 158084> out 1 <158085>  # join source bit 9
const-mul-2 in 1 <158085> out 1 <158086> # join
add in 2 <157817 158086> out 1 <158087>  # join source bit 8
const-mul-2 in 1 <158087> out 1 <158088> # join
add in 2 <157816 158088> out 1 <158089>  # join source bit 7
const-mul-2 in 1 <158089> out 1 <158090> # join
add in 2 <157815 158090> out 1 <158091>  # join source bit 6
const-mul-2 in 1 <158091> out 1 <158092> # join
add in 2 <157814 158092> out 1 <158093>  # join source bit 5
const-mul-2 in 1 <158093> out 1 <158094> # join
add in 2 <157813 158094> out 1 <158095>  # join source bit 4
const-mul-2 in 1 <158095> out 1 <158096> # join
add in 2 <157812 158096> out 1 <158097>  # join source bit 3
const-mul-2 in 1 <158097> out 1 <158098> # join
add in 2 <157811 158098> out 1 <158099>  # join source bit 2
const-mul-2 in 1 <158099> out 1 <158100> # join
add in 2 <157810 158100> out 1 <158101>  # join source bit 1
const-mul-2 in 1 <158101> out 1 <158102> # join
add in 2 <157809 158102> out 1 <158103>  # join source bit 0
add in 2 <158103 158103> out 1 <158104>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <157233> out 1 <158105> # multiply-by-constant 4294967295
add in 2 <157807 158105> out 1 <158106>  # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <158106> outplitBus
mul in 2 <158138 158104> out 1 <158372>  # cond trueterm
const-mul-neg-1 in 1 <158138> out 1 <158373> # cond minuscond
add in 2 <100 158373> out 1 <158374>     # cond negcond
mul in 2 <158374 157233> out 1 <158375>  # cond falseterm
add in 2 <158372 158375> out 1 <158376>  # cond result
mul in 2 <157061 157025> out 1 <158377>  # cond trueterm
const-mul-neg-1 in 1 <157061> out 1 <158378> # cond minuscond
add in 2 <100 158378> out 1 <158379>     # cond negcond
mul in 2 <158379 157022> out 1 <158380>  # cond falseterm
add in 2 <158377 158380> out 1 <158381>  # cond result
mul in 2 <156917 156881> out 1 <158382>  # cond trueterm
const-mul-neg-1 in 1 <156917> out 1 <158383> # cond minuscond
add in 2 <100 158383> out 1 <158384>     # cond negcond
mul in 2 <158384 156878> out 1 <158385>  # cond falseterm
add in 2 <158382 158385> out 1 <158386>  # cond result
const-mul-ffffffff in 1 <158386> out 1 <158387> # multiply-by-constant 4294967295
add in 2 <158386 158381> out 1 <158388>  # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
add in 2 <158388 158387> out 1 <158389>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <158389> out 1 <158390> # multiply-by-constant 4294967295
add in 2 <158388 158390> out 1 <158391>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <158386> out 1 <158392> # multiply-by-constant 4294967295
add in 2 <158381 158392> out 1 <158393>  # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <158393> out 200 <158394 158395 158396 158397 158398 158399 158400 158401 158402 158403 158404 158405 158406 158407 158408 158409 158410 158411 158412 158413 158414 158415 158416 158417 158418 158419 158420 158421 158422 158423 158424 158425 158426 158427 158428 158429 158430 158431 158432 158433 158434 158435 158436 158437 158438 158439 158440 158441 158442 158443 158444 158445 158446 158447 158448 158449 158450 158451 158452 158453 158454 158455 158456 158457 158458 158459 158460 158461 158462 158463 158464 158465 158466 158467 158468 158469 158470 158471 158472 158473 158474 158475 158476 158477 158478 158479 158480 158481 158482 158483 158484 158485 158486 158487 158488 158489 158490 158491 158492 158493 158494 158495 158496 158497 158498 158499 158500 158501 158502 158503 158504 158505 158506 158507 158508 158509 158510 158511 158512 158513 158514 158515 158516 158517 158518 158519 158520 158521 158522 158523 158524 158525 158526 158527 158528 158529 158530 158531 158532 158533 158534 158535 158536 158537 158538 158539 158540 158541 158542 158543 158544 158545 158546 158547 158548 158549 158550 158551 158552 158553 158554 158555 158556 158557 158558 158559 158560 158561 158562 158563 158564 158565 158566 158567 158568 158569 158570 158571 158572 158573 158574 158575 158576 158577 158578 158579 158580 158581 158582 158583 158584 158585 158586 158587 158588 158589 158590 158591 158592 158593> # SplitBus
mul in 2 <158425 158391> out 1 <158594>  # cond trueterm
const-mul-neg-1 in 1 <158425> out 1 <158595> # cond minuscond
add in 2 <100 158595> out 1 <158596>     # cond negcond
mul in 2 <158596 158381> out 1 <158597>  # cond falseterm
add in 2 <158594 158597> out 1 <158598>  # cond result
const-mul-ffffffff in 1 <158598> out 1 <158599> # multiply-by-constant 4294967295
add in 2 <158598 158376> out 1 <158600>  # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
split in 1 <158600> out 235 <158601 158602 158603 158604 158605 158606 158607 158608 158609 158610 158611 158612 158613 158614 158615 158616 158617 158618 158619 158620 158621 158622 158623 158624 158625 158626 158627 158628 158629 158630 158631 158632 158633 158634 158635 158636 158637 158638 158639 158640 158641 158642 158643 158644 158645 158646 158647 158648 158649 158650 158651 158652 158653 158654 158655 158656 158657 158658 158659 158660 158661 158662 158663 158664 158665 158666 158667 158668 158669 158670 158671 158672 158673 158674 158675 158676 158677 158678 158679 158680 158681 158682 158683 158684 158685 158686 158687 158688 158689 158690 158691 158692 158693 158694 158695 158696 158697 158698 158699 158700 158701 158702 158703 158704 158705 158706 158707 158708 158709 158710 158711 158712 158713 158714 158715 158716 158717 158718 158719 158720 158721 158722 158723 158724 158725 158726 158727 158728 158729 158730 158731 158732 158733 158734 158735 158736 158737 158738 158739 158740 158741 158742 158743 158744 158745 158746 158747 158748 158749 158750 158751 158752 158753 158754 158755 158756 158757 158758 158759 158760 158761 158762 158763 158764 158765 158766 158767 158768 158769 158770 158771 158772 158773 158774 158775 158776 158777 158778 158779 158780 158781 158782 158783 158784 158785 158786 158787 158788 158789 158790 158791 158792 158793 158794 158795 158796 158797 158798 158799 158800 158801 158802 158803 158804 158805 158806 158807 158808 158809 158810 158811 158812 158813 158814 158815 158816 158817 158818 158819 158820 158821 158822 158823 158824 158825 158826 158827 158828 158829 158830 158831 158832 158833 158834 158835> # SplitBus
const-mul-2 in 1 <158632> out 1 <158836> # join source bit 31
add in 2 <158631 158836> out 1 <158837>  # join source bit 30
const-mul-2 in 1 <158837> out 1 <158838> # join
add in 2 <158630 158838> out 1 <158839>  # join source bit 29
const-mul-2 in 1 <158839> out 1 <158840> # join
add in 2 <158629 158840> out 1 <158841>  # join source bit 28
const-mul-2 in 1 <158841> out 1 <158842> # join
add in 2 <158628 158842> out 1 <158843>  # join source bit 27
const-mul-2 in 1 <158843> out 1 <158844> # join
add in 2 <158627 158844> out 1 <158845>  # join source bit 26
const-mul-2 in 1 <158845> out 1 <158846> # join
add in 2 <158626 158846> out 1 <158847>  # join source bit 25
const-mul-2 in 1 <158847> out 1 <158848> # join
add in 2 <158625 158848> out 1 <158849>  # join source bit 24
const-mul-2 in 1 <158849> out 1 <158850> # join
add in 2 <158624 158850> out 1 <158851>  # join source bit 23
const-mul-2 in 1 <158851> out 1 <158852> # join
add in 2 <158623 158852> out 1 <158853>  # join source bit 22
const-mul-2 in 1 <158853> out 1 <158854> # join
add in 2 <158622 158854> out 1 <158855>  # join source bit 21
const-mul-2 in 1 <158855> out 1 <158856> # join
add in 2 <158621 158856> out 1 <158857>  # join source bit 20
const-mul-2 in 1 <158857> out 1 <158858> # join
add in 2 <158620 158858> out 1 <158859>  # join source bit 19
const-mul-2 in 1 <158859> out 1 <158860> # join
add in 2 <158619 158860> out 1 <158861>  # join source bit 18
const-mul-2 in 1 <158861> out 1 <158862> # join
add in 2 <158618 158862> out 1 <158863>  # join source bit 17
const-mul-2 in 1 <158863> out 1 <158864> # join
add in 2 <158617 158864> out 1 <158865>  # join source bit 16
const-mul-2 in 1 <158865> out 1 <158866> # join
add in 2 <158616 158866> out 1 <158867>  # join source bit 15
const-mul-2 in 1 <158867> out 1 <158868> # join
add in 2 <158615 158868> out 1 <158869>  # join source bit 14
const-mul-2 in 1 <158869> out 1 <158870> # join
add in 2 <158614 158870> out 1 <158871>  # join source bit 13
const-mul-2 in 1 <158871> out 1 <158872> # join
add in 2 <158613 158872> out 1 <158873>  # join source bit 12
const-mul-2 in 1 <158873> out 1 <158874> # join
add in 2 <158612 158874> out 1 <158875>  # join source bit 11
const-mul-2 in 1 <158875> out 1 <158876> # join
add in 2 <158611 158876> out 1 <158877>  # join source bit 10
const-mul-2 in 1 <158877> out 1 <158878> # join
add in 2 <158610 158878> out 1 <158879>  # join source bit 9
const-mul-2 in 1 <158879> out 1 <158880> # join
add in 2 <158609 158880> out 1 <158881>  # join source bit 8
const-mul-2 in 1 <158881> out 1 <158882> # join
add in 2 <158608 158882> out 1 <158883>  # join source bit 7
const-mul-2 in 1 <158883> out 1 <158884> # join
add in 2 <158607 158884> out 1 <158885>  # join source bit 6
const-mul-2 in 1 <158885> out 1 <158886> # join
add in 2 <158606 158886> out 1 <158887>  # join source bit 5
const-mul-2 in 1 <158887> out 1 <158888> # join
add in 2 <158605 158888> out 1 <158889>  # join source bit 4
const-mul-2 in 1 <158889> out 1 <158890> # join
add in 2 <158604 158890> out 1 <158891>  # join source bit 3
const-mul-2 in 1 <158891> out 1 <158892> # join
add in 2 <158603 158892> out 1 <158893>  # join source bit 2
const-mul-2 in 1 <158893> out 1 <158894> # join
add in 2 <158602 158894> out 1 <158895>  # join source bit 1
const-mul-2 in 1 <158895> out 1 <158896> # join
add in 2 <158601 158896> out 1 <158897>  # join source bit 0
add in 2 <158897 158897> out 1 <158898>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <158898> out 1 <158899> # multiply-by-constant 4294967295
add in 2 <158600 158899> out 1 <158900>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <158598> out 1 <158901> # multiply-by-constant 4294967295
add in 2 <158376 158901> out 1 <158902>  # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <158902> outplitBus
mul in 2 <158934 158900> out 1 <159170>  # cond trueterm
const-mul-neg-1 in 1 <158934> out 1 <159171> # cond minuscond
add in 2 <100 159171> out 1 <159172>     # cond negcond
mul in 2 <159172 158376> out 1 <159173>  # cond falseterm
add in 2 <159170 159173> out 1 <159174>  # cond result
add in 2 <159174 104> out 1 <159175>     # ArithBusReq.AddReq(DFG.Conditional,DFG.Constant)
const-mul-ffffffff in 1 <50> out 1 <159176> # multiply-by-constant 4294967295
add in 2 <159175 159176> out 1 <159177>  # 'CmpLT DFG.Add - DFG.Input'
split in 1 <159177> out 238 <159178 159179 159180 159181 159182 159183 159184 159185 159186 159187 159188 159189 159190 159191 159192 159193 159194 159195 159196 159197 159198 159199 159200 159201 159202 159203 159204 159205 159206 159207 159208 159209 159210 159211 159212 159213 159214 159215 159216 159217 159218 159219 159220 159221 159222 159223 159224 159225 159226 159227 159228 159229 159230 159231 159232 159233 159234 159235 159236 159237 159238 159239 159240 159241 159242 159243 159244 159245 159246 159247 159248 159249 159250 159251 159252 159253 159254 159255 159256 159257 159258 159259 159260 159261 159262 159263 159264 159265 159266 159267 159268 159269 159270 159271 159272 159273 159274 159275 159276 159277 159278 159279 159280 159281 159282 159283 159284 159285 159286 159287 159288 159289 159290 159291 159292 159293 159294 159295 159296 159297 159298 159299 159300 159301 159302 159303 159304 159305 159306 159307 159308 159309 159310 159311 159312 159313 159314 159315 159316 159317 159318 159319 159320 159321 159322 159323 159324 159325 159326 159327 159328 159329 159330 159331 159332 159333 159334 159335 159336 159337 159338 159339 159340 159341 159342 159343 159344 159345 159346 159347 159348 159349 159350 159351 159352 159353 159354 159355 159356 159357 159358 159359 159360 159361 159362 159363 159364 159365 159366 159367 159368 159369 159370 159371 159372 159373 159374 159375 159376 159377 159378 159379 159380 159381 159382 159383 159384 159385 159386 159387 159388 159389 159390 159391 159392 159393 159394 159395 159396 159397 159398 159399 159400 159401 159402 159403 159404 159405 159406 159407 159408 159409 159410 159411 159412 159413 159414 159415> # SplitBus
mul in 2 <159209 103> out 1 <159416>     # cond trueterm
const-mul-neg-1 in 1 <159209> out 1 <159417> # cond minuscond
add in 2 <100 159417> out 1 <159418>     # cond negcond
mul in 2 <159418 102> out 1 <159419>     # cond falseterm
add in 2 <159416 159419> out 1 <159420>  # cond result
add in 2 <159174 3084> out 1 <159421>    # ArithBusReq.AddReq(DFG.Conditional,DFG.Negate)
const-mul-ffffffff in 1 <159421> out 1 <159422> # multiply-by-constant 4294967295
add in 2 <50 159422> out 1 <159423>      # 'CmpLT DFG.Input - DFG.Subtract'
split in 1 <159423> outplitBus
mul in 2 <159455 103> out 1 <159694>     # cond trueterm
const-mul-neg-1 in 1 <159455> out 1 <159695> # cond minuscond
add in 2 <100 159695> out 1 <159696>     # cond negcond
mul in 2 <159696 159420> out 1 <159697>  # cond falseterm
add in 2 <159694 159697> out 1 <159698>  # cond result
const-mul-ffffffff in 1 <49> out 1 <159699> # multiply-by-constant 4294967295
add in 2 <49 50> out 1 <159700>          # ArithBusReq.AddReq(DFG.Input,DFG.Input)
add in 2 <159700 159699> out 1 <159701>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <159701> out 1 <159702> # multiply-by-constant 4294967295
add in 2 <159700 159702> out 1 <159703>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <49> out 1 <159704> # multiply-by-constant 4294967295
add in 2 <50 159704> out 1 <159705>      # 'CmpLT DFG.Input - DFG.Input'
split in 1 <159705> out 65 <159706 159707 159708 159709 159710 159711 159712 159713 159714 159715 159716 159717 159718 159719 159720 159721 159722 159723 159724 159725 159726 159727 159728 159729 159730 159731 159732 159733 159734 159735 159736 159737 159738 159739 159740 159741 159742 159743 159744 159745 159746 159747 159748 159749 159750 159751 159752 159753 159754 159755 159756 159757 159758 159759 159760 159761 159762 159763 159764 159765 159766 159767 159768 159769 159770> # SplitBus
mul in 2 <159737 159703> out 1 <159771>  # cond trueterm
const-mul-neg-1 in 1 <159737> out 1 <159772> # cond minuscond
add in 2 <100 159772> out 1 <159773>     # cond negcond
mul in 2 <159773 50> out 1 <159774>      # cond falseterm
add in 2 <159771 159774> out 1 <159775>  # cond result
const-mul-ffffffff in 1 <159775> out 1 <159776> # multiply-by-constant 4294967295
add in 2 <159775 51> out 1 <159777>      # ArithBusReq.AddReq(DFG.Conditional,DFG.Input)
add in 2 <159777 159776> out 1 <159778>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <159778> out 1 <159779> # multiply-by-constant 4294967295
add in 2 <159777 159779> out 1 <159780>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <159775> out 1 <159781> # multiply-by-constant 4294967295
add in 2 <51 159781> out 1 <159782>      # 'CmpLT DFG.Input - DFG.Conditional'
split in 1 <159782> out 131 <159783 159784 159785 159786 159787 159788 159789 159790 159791 159792 159793 159794 159795 159796 159797 159798 159799 159800 159801 159802 159803 159804 159805 159806 159807 159808 159809 159810 159811 159812 159813 159814 159815 159816 159817 159818 159819 159820 159821 159822 159823 159824 159825 159826 159827 159828 159829 159830 159831 159832 159833 159834 159835 159836 159837 159838 159839 159840 159841 159842 159843 159844 159845 159846 159847 159848 159849 159850 159851 159852 159853 159854 159855 159856 159857 159858 159859 159860 159861 159862 159863 159864 159865 159866 159867 159868 159869 159870 159871 159872 159873 159874 159875 159876 159877 159878 159879 159880 159881 159882 159883 159884 159885 159886 159887 159888 159889 159890 159891 159892 159893 159894 159895 159896 159897 159898 159899 159900 159901 159902 159903 159904 159905 159906 159907 159908 159909 159910 159911 159912 159913> # SplitBus
mul in 2 <159814 159780> out 1 <159914>  # cond trueterm
const-mul-neg-1 in 1 <159814> out 1 <159915> # cond minuscond
add in 2 <100 159915> out 1 <159916>     # cond negcond
mul in 2 <159916 51> out 1 <159917>      # cond falseterm
add in 2 <159914 159917> out 1 <159918>  # cond result
const-mul-ffffffff in 1 <159918> out 1 <159919> # multiply-by-constant 4294967295
add in 2 <159918 52> out 1 <159920>      # ArithBusReq.AddReq(DFG.Conditional,DFG.Input)
add in 2 <159920 159919> out 1 <159921>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <159918> out 1 <159922> # multiply-by-constant 4294967295
add in 2 <52 159922> out 1 <159923>      # 'CmpLT DFG.Input - DFG.Conditional'
split in 1 <159923> out 197 <159924 159925 159926 159927 159928 159929 159930 159931 159932 159933 159934 159935 159936 159937 159938 159939 159940 159941 159942 159943 159944 159945 159946 159947 159948 159949 159950 159951 159952 159953 159954 159955 159956 159957 159958 159959 159960 159961 159962 159963 159964 159965 159966 159967 159968 159969 159970 159971 159972 159973 159974 159975 159976 159977 159978 159979 159980 159981 159982 159983 159984 159985 159986 159987 159988 159989 159990 159991 159992 159993 159994 159995 159996 159997 159998 159999 160000 160001 160002 160003 160004 160005 160006 160007 160008 160009 160010 160011 160012 160013 160014 160015 160016 160017 160018 160019 160020 160021 160022 160023 160024 160025 160026 160027 160028 160029 160030 160031 160032 160033 160034 160035 160036 160037 160038 160039 160040 160041 160042 160043 160044 160045 160046 160047 160048 160049 160050 160051 160052 160053 160054 160055 160056 160057 160058 160059 160060 160061 160062 160063 160064 160065 160066 160067 160068 160069 160070 160071 160072 160073 160074 160075 160076 160077 160078 160079 160080 160081 160082 160083 160084 160085 160086 160087 160088 160089 160090 160091 160092 160093 160094 160095 160096 160097 160098 160099 160100 160101 160102 160103 160104 160105 160106 160107 160108 160109 160110 160111 160112 160113 160114 160115 160116 160117 160118 160119 160120> # SplitBus
mul in 2 <159955 159921> out 1 <160121>  # cond trueterm
const-mul-neg-1 in 1 <159955> out 1 <160122> # cond minuscond
add in 2 <100 160122> out 1 <160123>     # cond negcond
mul in 2 <160123 159918> out 1 <160124>  # cond falseterm
add in 2 <160121 160124> out 1 <160125>  # cond result
mul in 2 <159814 159778> out 1 <160126>  # cond trueterm
const-mul-neg-1 in 1 <159814> out 1 <160127> # cond minuscond
add in 2 <100 160127> out 1 <160128>     # cond negcond
mul in 2 <160128 159775> out 1 <160129>  # cond falseterm
add in 2 <160126 160129> out 1 <160130>  # cond result
mul in 2 <159737 159701> out 1 <160131>  # cond trueterm
const-mul-neg-1 in 1 <159737> out 1 <160132> # cond minuscond
add in 2 <100 160132> out 1 <160133>     # cond negcond
mul in 2 <160133 49> out 1 <160134>      # cond falseterm
add in 2 <160131 160134> out 1 <160135>  # cond result
const-mul-ffffffff in 1 <160135> out 1 <160136> # multiply-by-constant 4294967295
add in 2 <160135 160130> out 1 <160137>  # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
add in 2 <160137 160136> out 1 <160138>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <160138> out 1 <160139> # multiply-by-constant 4294967295
add in 2 <160137 160139> out 1 <160140>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <160135> out 1 <160141> # multiply-by-constant 4294967295
add in 2 <160130 160141> out 1 <160142>  # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <160142> out 132 <160143 160144 160145 160146 160147 160148 160149 160150 160151 160152 160153 160154 160155 160156 160157 160158 160159 160160 160161 160162 160163 160164 160165 160166 160167 160168 160169 160170 160171 160172 160173 160174 160175 160176 160177 160178 160179 160180 160181 160182 160183 160184 160185 160186 160187 160188 160189 160190 160191 160192 160193 160194 160195 160196 160197 160198 160199 160200 160201 160202 160203 160204 160205 160206 160207 160208 160209 160210 160211 160212 160213 160214 160215 160216 160217 160218 160219 160220 160221 160222 160223 160224 160225 160226 160227 160228 160229 160230 160231 160232 160233 160234 160235 160236 160237 160238 160239 160240 160241 160242 160243 160244 160245 160246 160247 160248 160249 160250 160251 160252 160253 160254 160255 160256 160257 160258 160259 160260 160261 160262 160263 160264 160265 160266 160267 160268 160269 160270 160271 160272 160273 160274> # SplitBus
mul in 2 <160174 160140> out 1 <160275>  # cond trueterm
const-mul-neg-1 in 1 <160174> out 1 <160276> # cond minuscond
add in 2 <100 160276> out 1 <160277>     # cond negcond
mul in 2 <160277 160130> out 1 <160278>  # cond falseterm
add in 2 <160275 160278> out 1 <160279>  # cond result
const-mul-ffffffff in 1 <160279> out 1 <160280> # multiply-by-constant 4294967295
add in 2 <160279 160125> out 1 <160281>  # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
add in 2 <160281 160280> out 1 <160282>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <160282> out 1 <160283> # multiply-by-constant 4294967295
add in 2 <160281 160283> out 1 <160284>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <160279> out 1 <160285> # multiply-by-constant 4294967295
add in 2 <160125 160285> out 1 <160286>  # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <160286> out 199 <160287 160288 160289 160290 160291 160292 160293 160294 160295 160296 160297 160298 160299 160300 160301 160302 160303 160304 160305 160306 160307 160308 160309 160310 160311 160312 160313 160314 160315 160316 160317 160318 160319 160320 160321 160322 160323 160324 160325 160326 160327 160328 160329 160330 160331 160332 160333 160334 160335 160336 160337 160338 160339 160340 160341 160342 160343 160344 160345 160346 160347 160348 160349 160350 160351 160352 160353 160354 160355 160356 160357 160358 160359 160360 160361 160362 160363 160364 160365 160366 160367 160368 160369 160370 160371 160372 160373 160374 160375 160376 160377 160378 160379 160380 160381 160382 160383 160384 160385 160386 160387 160388 160389 160390 160391 160392 160393 160394 160395 160396 160397 160398 160399 160400 160401 160402 160403 160404 160405 160406 160407 160408 160409 160410 160411 160412 160413 160414 160415 160416 160417 160418 160419 160420 160421 160422 160423 160424 160425 160426 160427 160428 160429 160430 160431 160432 160433 160434 160435 160436 160437 160438 160439 160440 160441 160442 160443 160444 160445 160446 160447 160448 160449 160450 160451 160452 160453 160454 160455 160456 160457 160458 160459 160460 160461 160462 160463 160464 160465 160466 160467 160468 160469 160470 160471 160472 160473 160474 160475 160476 160477 160478 160479 160480 160481 160482 160483 160484 160485> # SplitBus
mul in 2 <160318 160284> out 1 <160486>  # cond trueterm
const-mul-neg-1 in 1 <160318> out 1 <160487> # cond minuscond
add in 2 <100 160487> out 1 <160488>     # cond negcond
mul in 2 <160488 160125> out 1 <160489>  # cond falseterm
add in 2 <160486 160489> out 1 <160490>  # cond result
const-mul-ffffffff in 1 <160490> out 1 <160491> # multiply-by-constant 4294967295
const-mul-ffffffff in 1 <159921> out 1 <160492> # multiply-by-constant 4294967295
add in 2 <159920 160492> out 1 <160493>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
mul in 2 <159955 160493> out 1 <160494>  # cond trueterm
const-mul-neg-1 in 1 <159955> out 1 <160495> # cond minuscond
add in 2 <100 160495> out 1 <160496>     # cond negcond
mul in 2 <160496 52> out 1 <160497>      # cond falseterm
add in 2 <160494 160497> out 1 <160498>  # cond result
const-mul-ffffffff in 1 <160498> out 1 <160499> # multiply-by-constant 4294967295
add in 2 <160498 53> out 1 <160500>      # ArithBusReq.AddReq(DFG.Conditional,DFG.Input)
split in 1 <160500> out 231 <160501 160502 160503 160504 160505 160506 160507 160508 160509 160510 160511 160512 160513 160514 160515 160516 160517 160518 160519 160520 160521 160522 160523 160524 160525 160526 160527 160528 160529 160530 160531 160532 160533 160534 160535 160536 160537 160538 160539 160540 160541 160542 160543 160544 160545 160546 160547 160548 160549 160550 160551 160552 160553 160554 160555 160556 160557 160558 160559 160560 160561 160562 160563 160564 160565 160566 160567 160568 160569 160570 160571 160572 160573 160574 160575 160576 160577 160578 160579 160580 160581 160582 160583 160584 160585 160586 160587 160588 160589 160590 160591 160592 160593 160594 160595 160596 160597 160598 160599 160600 160601 160602 160603 160604 160605 160606 160607 160608 160609 160610 160611 160612 160613 160614 160615 160616 160617 160618 160619 160620 160621 160622 160623 160624 160625 160626 160627 160628 160629 160630 160631 160632 160633 160634 160635 160636 160637 160638 160639 160640 160641 160642 160643 160644 160645 160646 160647 160648 160649 160650 160651 160652 160653 160654 160655 160656 160657 160658 160659 160660 160661 160662 160663 160664 160665 160666 160667 160668 160669 160670 160671 160672 160673 160674 160675 160676 160677 160678 160679 160680 160681 160682 160683 160684 160685 160686 160687 160688 160689 160690 160691 160692 160693 160694 160695 160696 160697 160698 160699 160700 160701 160702 160703 160704 160705 160706 160707 160708 160709 160710 160711 160712 160713 160714 160715 160716 160717 160718 160719 160720 160721 160722 160723 160724 160725 160726 160727 160728 160729 160730 160731> # SplitBus
const-mul-2 in 1 <160532> out 1 <160732> # join source bit 31
add in 2 <160531 160732> out 1 <160733>  # join source bit 30
const-mul-2 in 1 <160733> out 1 <160734> # join
add in 2 <160530 160734> out 1 <160735>  # join source bit 29
const-mul-2 in 1 <160735> out 1 <160736> # join
add in 2 <160529 160736> out 1 <160737>  # join source bit 28
const-mul-2 in 1 <160737> out 1 <160738> # join
add in 2 <160528 160738> out 1 <160739>  # join source bit 27
const-mul-2 in 1 <160739> out 1 <160740> # join
add in 2 <160527 160740> out 1 <160741>  # join source bit 26
const-mul-2 in 1 <160741> out 1 <160742> # join
add in 2 <160526 160742> out 1 <160743>  # join source bit 25
const-mul-2 in 1 <160743> out 1 <160744> # join
add in 2 <160525 160744> out 1 <160745>  # join source bit 24
const-mul-2 in 1 <160745> out 1 <160746> # join
add in 2 <160524 160746> out 1 <160747>  # join source bit 23
const-mul-2 in 1 <160747> out 1 <160748> # join
add in 2 <160523 160748> out 1 <160749>  # join source bit 22
const-mul-2 in 1 <160749> out 1 <160750> # join
add in 2 <160522 160750> out 1 <160751>  # join source bit 21
const-mul-2 in 1 <160751> out 1 <160752> # join
add in 2 <160521 160752> out 1 <160753>  # join source bit 20
const-mul-2 in 1 <160753> out 1 <160754> # join
add in 2 <160520 160754> out 1 <160755>  # join source bit 19
const-mul-2 in 1 <160755> out 1 <160756> # join
add in 2 <160519 160756> out 1 <160757>  # join source bit 18
const-mul-2 in 1 <160757> out 1 <160758> # join
add in 2 <160518 160758> out 1 <160759>  # join source bit 17
const-mul-2 in 1 <160759> out 1 <160760> # join
add in 2 <160517 160760> out 1 <160761>  # join source bit 16
const-mul-2 in 1 <160761> out 1 <160762> # join
add in 2 <160516 160762> out 1 <160763>  # join source bit 15
const-mul-2 in 1 <160763> out 1 <160764> # join
add in 2 <160515 160764> out 1 <160765>  # join source bit 14
const-mul-2 in 1 <160765> out 1 <160766> # join
add in 2 <160514 160766> out 1 <160767>  # join source bit 13
const-mul-2 in 1 <160767> out 1 <160768> # join
add in 2 <160513 160768> out 1 <160769>  # join source bit 12
const-mul-2 in 1 <160769> out 1 <160770> # join
add in 2 <160512 160770> out 1 <160771>  # join source bit 11
const-mul-2 in 1 <160771> out 1 <160772> # join
add in 2 <160511 160772> out 1 <160773>  # join source bit 10
const-mul-2 in 1 <160773> out 1 <160774> # join
add in 2 <160510 160774> out 1 <160775>  # join source bit 9
const-mul-2 in 1 <160775> out 1 <160776> # join
add in 2 <160509 160776> out 1 <160777>  # join source bit 8
const-mul-2 in 1 <160777> out 1 <160778> # join
add in 2 <160508 160778> out 1 <160779>  # join source bit 7
const-mul-2 in 1 <160779> out 1 <160780> # join
add in 2 <160507 160780> out 1 <160781>  # join source bit 6
const-mul-2 in 1 <160781> out 1 <160782> # join
add in 2 <160506 160782> out 1 <160783>  # join source bit 5
const-mul-2 in 1 <160783> out 1 <160784> # join
add in 2 <160505 160784> out 1 <160785>  # join source bit 4
const-mul-2 in 1 <160785> out 1 <160786> # join
add in 2 <160504 160786> out 1 <160787>  # join source bit 3
const-mul-2 in 1 <160787> out 1 <160788> # join
add in 2 <160503 160788> out 1 <160789>  # join source bit 2
const-mul-2 in 1 <160789> out 1 <160790> # join
add in 2 <160502 160790> out 1 <160791>  # join source bit 1
const-mul-2 in 1 <160791> out 1 <160792> # join
add in 2 <160501 160792> out 1 <160793>  # join source bit 0
add in 2 <160793 160793> out 1 <160794>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <160498> out 1 <160795> # multiply-by-constant 4294967295
add in 2 <53 160795> out 1 <160796>      # 'CmpLT DFG.Input - DFG.Conditional'
split in 1 <160796> outplitBus
mul in 2 <160828 160794> out 1 <161060>  # cond trueterm
const-mul-neg-1 in 1 <160828> out 1 <161061> # cond minuscond
add in 2 <100 161061> out 1 <161062>     # cond negcond
mul in 2 <161062 160498> out 1 <161063>  # cond falseterm
add in 2 <161060 161063> out 1 <161064>  # cond result
add in 2 <160490 161064> out 1 <161065>  # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
split in 1 <161065> out 233 <161066 161067 161068 161069 161070 161071 161072 161073 161074 161075 161076 161077 161078 161079 161080 161081 161082 161083 161084 161085 161086 161087 161088 161089 161090 161091 161092 161093 161094 161095 161096 161097 161098 161099 161100 161101 161102 161103 161104 161105 161106 161107 161108 161109 161110 161111 161112 161113 161114 161115 161116 161117 161118 161119 161120 161121 161122 161123 161124 161125 161126 161127 161128 161129 161130 161131 161132 161133 161134 161135 161136 161137 161138 161139 161140 161141 161142 161143 161144 161145 161146 161147 161148 161149 161150 161151 161152 161153 161154 161155 161156 161157 161158 161159 161160 161161 161162 161163 161164 161165 161166 161167 161168 161169 161170 161171 161172 161173 161174 161175 161176 161177 161178 161179 161180 161181 161182 161183 161184 161185 161186 161187 161188 161189 161190 161191 161192 161193 161194 161195 161196 161197 161198 161199 161200 161201 161202 161203 161204 161205 161206 161207 161208 161209 161210 161211 161212 161213 161214 161215 161216 161217 161218 161219 161220 161221 161222 161223 161224 161225 161226 161227 161228 161229 161230 161231 161232 161233 161234 161235 161236 161237 161238 161239 161240 161241 161242 161243 161244 161245 161246 161247 161248 161249 161250 161251 161252 161253 161254 161255 161256 161257 161258 161259 161260 161261 161262 161263 161264 161265 161266 161267 161268 161269 161270 161271 161272 161273 161274 161275 161276 161277 161278 161279 161280 161281 161282 161283 161284 161285 161286 161287 161288 161289 161290 161291 161292 161293 161294 161295 161296 161297 161298> # SplitBus
const-mul-2 in 1 <161097> out 1 <161299> # join source bit 31
add in 2 <161096 161299> out 1 <161300>  # join source bit 30
const-mul-2 in 1 <161300> out 1 <161301> # join
add in 2 <161095 161301> out 1 <161302>  # join source bit 29
const-mul-2 in 1 <161302> out 1 <161303> # join
add in 2 <161094 161303> out 1 <161304>  # join source bit 28
const-mul-2 in 1 <161304> out 1 <161305> # join
add in 2 <161093 161305> out 1 <161306>  # join source bit 27
const-mul-2 in 1 <161306> out 1 <161307> # join
add in 2 <161092 161307> out 1 <161308>  # join source bit 26
const-mul-2 in 1 <161308> out 1 <161309> # join
add in 2 <161091 161309> out 1 <161310>  # join source bit 25
const-mul-2 in 1 <161310> out 1 <161311> # join
add in 2 <161090 161311> out 1 <161312>  # join source bit 24
const-mul-2 in 1 <161312> out 1 <161313> # join
add in 2 <161089 161313> out 1 <161314>  # join source bit 23
const-mul-2 in 1 <161314> out 1 <161315> # join
add in 2 <161088 161315> out 1 <161316>  # join source bit 22
const-mul-2 in 1 <161316> out 1 <161317> # join
add in 2 <161087 161317> out 1 <161318>  # join source bit 21
const-mul-2 in 1 <161318> out 1 <161319> # join
add in 2 <161086 161319> out 1 <161320>  # join source bit 20
const-mul-2 in 1 <161320> out 1 <161321> # join
add in 2 <161085 161321> out 1 <161322>  # join source bit 19
const-mul-2 in 1 <161322> out 1 <161323> # join
add in 2 <161084 161323> out 1 <161324>  # join source bit 18
const-mul-2 in 1 <161324> out 1 <161325> # join
add in 2 <161083 161325> out 1 <161326>  # join source bit 17
const-mul-2 in 1 <161326> out 1 <161327> # join
add in 2 <161082 161327> out 1 <161328>  # join source bit 16
const-mul-2 in 1 <161328> out 1 <161329> # join
add in 2 <161081 161329> out 1 <161330>  # join source bit 15
const-mul-2 in 1 <161330> out 1 <161331> # join
add in 2 <161080 161331> out 1 <161332>  # join source bit 14
const-mul-2 in 1 <161332> out 1 <161333> # join
add in 2 <161079 161333> out 1 <161334>  # join source bit 13
const-mul-2 in 1 <161334> out 1 <161335> # join
add in 2 <161078 161335> out 1 <161336>  # join source bit 12
const-mul-2 in 1 <161336> out 1 <161337> # join
add in 2 <161077 161337> out 1 <161338>  # join source bit 11
const-mul-2 in 1 <161338> out 1 <161339> # join
add in 2 <161076 161339> out 1 <161340>  # join source bit 10
const-mul-2 in 1 <161340> out 1 <161341> # join
add in 2 <161075 161341> out 1 <161342>  # join source bit 9
const-mul-2 in 1 <161342> out 1 <161343> # join
add in 2 <161074 161343> out 1 <161344>  # join source bit 8
const-mul-2 in 1 <161344> out 1 <161345> # join
add in 2 <161073 161345> out 1 <161346>  # join source bit 7
const-mul-2 in 1 <161346> out 1 <161347> # join
add in 2 <161072 161347> out 1 <161348>  # join source bit 6
const-mul-2 in 1 <161348> out 1 <161349> # join
add in 2 <161071 161349> out 1 <161350>  # join source bit 5
const-mul-2 in 1 <161350> out 1 <161351> # join
add in 2 <161070 161351> out 1 <161352>  # join source bit 4
const-mul-2 in 1 <161352> out 1 <161353> # join
add in 2 <161069 161353> out 1 <161354>  # join source bit 3
const-mul-2 in 1 <161354> out 1 <161355> # join
add in 2 <161068 161355> out 1 <161356>  # join source bit 2
const-mul-2 in 1 <161356> out 1 <161357> # join
add in 2 <161067 161357> out 1 <161358>  # join source bit 1
const-mul-2 in 1 <161358> out 1 <161359> # join
add in 2 <161066 161359> out 1 <161360>  # join source bit 0
add in 2 <161360 161360> out 1 <161361>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <160490> out 1 <161362> # multiply-by-constant 4294967295
add in 2 <161064 161362> out 1 <161363>  # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <161363> out 265 <161364 161365 161366 161367 161368 161369 161370 161371 161372 161373 161374 161375 161376 161377 161378 161379 161380 161381 161382 161383 161384 161385 161386 161387 161388 161389 161390 161391 161392 161393 161394 161395 161396 161397 161398 161399 161400 161401 161402 161403 161404 161405 161406 161407 161408 161409 161410 161411 161412 161413 161414 161415 161416 161417 161418 161419 161420 161421 161422 161423 161424 161425 161426 161427 161428 161429 161430 161431 161432 161433 161434 161435 161436 161437 161438 161439 161440 161441 161442 161443 161444 161445 161446 161447 161448 161449 161450 161451 161452 161453 161454 161455 161456 161457 161458 161459 161460 161461 161462 161463 161464 161465 161466 161467 161468 161469 161470 161471 161472 161473 161474 161475 161476 161477 161478 161479 161480 161481 161482 161483 161484 161485 161486 161487 161488 161489 161490 161491 161492 161493 161494 161495 161496 161497 161498 161499 161500 161501 161502 161503 161504 161505 161506 161507 161508 161509 161510 161511 161512 161513 161514 161515 161516 161517 161518 161519 161520 161521 161522 161523 161524 161525 161526 161527 161528 161529 161530 161531 161532 161533 161534 161535 161536 161537 161538 161539 161540 161541 161542 161543 161544 161545 161546 161547 161548 161549 161550 161551 161552 161553 161554 161555 161556 161557 161558 161559 161560 161561 161562 161563 161564 161565 161566 161567 161568 161569 161570 161571 161572 161573 161574 161575 161576 161577 161578 161579 161580 161581 161582 161583 161584 161585 161586 161587 161588 161589 161590 161591 161592 161593 161594 161595 161596 161597 161598 161599 161600 161601 161602 161603 161604 161605 161606 161607 161608 161609 161610 161611 161612 161613 161614 161615 161616 161617 161618 161619 161620 161621 161622 161623 161624 161625 161626 161627 161628> # SplitBus
mul in 2 <161395 161361> out 1 <161629>  # cond trueterm
const-mul-neg-1 in 1 <161395> out 1 <161630> # cond minuscond
add in 2 <100 161630> out 1 <161631>     # cond negcond
mul in 2 <161631 160490> out 1 <161632>  # cond falseterm
add in 2 <161629 161632> out 1 <161633>  # cond result
mul in 2 <160318 160282> out 1 <161634>  # cond trueterm
const-mul-neg-1 in 1 <160318> out 1 <161635> # cond minuscond
add in 2 <100 161635> out 1 <161636>     # cond negcond
mul in 2 <161636 160279> out 1 <161637>  # cond falseterm
add in 2 <161634 161637> out 1 <161638>  # cond result
mul in 2 <160174 160138> out 1 <161639>  # cond trueterm
const-mul-neg-1 in 1 <160174> out 1 <161640> # cond minuscond
add in 2 <100 161640> out 1 <161641>     # cond negcond
mul in 2 <161641 160135> out 1 <161642>  # cond falseterm
add in 2 <161639 161642> out 1 <161643>  # cond result
const-mul-ffffffff in 1 <161643> out 1 <161644> # multiply-by-constant 4294967295
add in 2 <161643 161638> out 1 <161645>  # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
add in 2 <161645 161644> out 1 <161646>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <161646> out 1 <161647> # multiply-by-constant 4294967295
add in 2 <161645 161647> out 1 <161648>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <161643> out 1 <161649> # multiply-by-constant 4294967295
add in 2 <161638 161649> out 1 <161650>  # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <161650> out 200 <161651 161652 161653 161654 161655 161656 161657 161658 161659 161660 161661 161662 161663 161664 161665 161666 161667 161668 161669 161670 161671 161672 161673 161674 161675 161676 161677 161678 161679 161680 161681 161682 161683 161684 161685 161686 161687 161688 161689 161690 161691 161692 161693 161694 161695 161696 161697 161698 161699 161700 161701 161702 161703 161704 161705 161706 161707 161708 161709 161710 161711 161712 161713 161714 161715 161716 161717 161718 161719 161720 161721 161722 161723 161724 161725 161726 161727 161728 161729 161730 161731 161732 161733 161734 161735 161736 161737 161738 161739 161740 161741 161742 161743 161744 161745 161746 161747 161748 161749 161750 161751 161752 161753 161754 161755 161756 161757 161758 161759 161760 161761 161762 161763 161764 161765 161766 161767 161768 161769 161770 161771 161772 161773 161774 161775 161776 161777 161778 161779 161780 161781 161782 161783 161784 161785 161786 161787 161788 161789 161790 161791 161792 161793 161794 161795 161796 161797 161798 161799 161800 161801 161802 161803 161804 161805 161806 161807 161808 161809 161810 161811 161812 161813 161814 161815 161816 161817 161818 161819 161820 161821 161822 161823 161824 161825 161826 161827 161828 161829 161830 161831 161832 161833 161834 161835 161836 161837 161838 161839 161840 161841 161842 161843 161844 161845 161846 161847 161848 161849 161850> # SplitBus
mul in 2 <161682 161648> out 1 <161851>  # cond trueterm
const-mul-neg-1 in 1 <161682> out 1 <161852> # cond minuscond
add in 2 <100 161852> out 1 <161853>     # cond negcond
mul in 2 <161853 161638> out 1 <161854>  # cond falseterm
add in 2 <161851 161854> out 1 <161855>  # cond result
const-mul-ffffffff in 1 <161855> out 1 <161856> # multiply-by-constant 4294967295
add in 2 <161855 161633> out 1 <161857>  # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
split in 1 <161857> out 235 <161858 161859 161860 161861 161862 161863 161864 161865 161866 161867 161868 161869 161870 161871 161872 161873 161874 161875 161876 161877 161878 161879 161880 161881 161882 161883 161884 161885 161886 161887 161888 161889 161890 161891 161892 161893 161894 161895 161896 161897 161898 161899 161900 161901 161902 161903 161904 161905 161906 161907 161908 161909 161910 161911 161912 161913 161914 161915 161916 161917 161918 161919 161920 161921 161922 161923 161924 161925 161926 161927 161928 161929 161930 161931 161932 161933 161934 161935 161936 161937 161938 161939 161940 161941 161942 161943 161944 161945 161946 161947 161948 161949 161950 161951 161952 161953 161954 161955 161956 161957 161958 161959 161960 161961 161962 161963 161964 161965 161966 161967 161968 161969 161970 161971 161972 161973 161974 161975 161976 161977 161978 161979 161980 161981 161982 161983 161984 161985 161986 161987 161988 161989 161990 161991 161992 161993 161994 161995 161996 161997 161998 161999 162000 162001 162002 162003 162004 162005 162006 162007 162008 162009 162010 162011 162012 162013 162014 162015 162016 162017 162018 162019 162020 162021 162022 162023 162024 162025 162026 162027 162028 162029 162030 162031 162032 162033 162034 162035 162036 162037 162038 162039 162040 162041 162042 162043 162044 162045 162046 162047 162048 162049 162050 162051 162052 162053 162054 162055 162056 162057 162058 162059 162060 162061 162062 162063 162064 162065 162066 162067 162068 162069 162070 162071 162072 162073 162074 162075 162076 162077 162078 162079 162080 162081 162082 162083 162084 162085 162086 162087 162088 162089 162090 162091 162092> # SplitBus
const-mul-2 in 1 <161889> out 1 <162093> # join source bit 31
add in 2 <161888 162093> out 1 <162094>  # join source bit 30
const-mul-2 in 1 <162094> out 1 <162095> # join
add in 2 <161887 162095> out 1 <162096>  # join source bit 29
const-mul-2 in 1 <162096> out 1 <162097> # join
add in 2 <161886 162097> out 1 <162098>  # join source bit 28
const-mul-2 in 1 <162098> out 1 <162099> # join
add in 2 <161885 162099> out 1 <162100>  # join source bit 27
const-mul-2 in 1 <162100> out 1 <162101> # join
add in 2 <161884 162101> out 1 <162102>  # join source bit 26
const-mul-2 in 1 <162102> out 1 <162103> # join
add in 2 <161883 162103> out 1 <162104>  # join source bit 25
const-mul-2 in 1 <162104> out 1 <162105> # join
add in 2 <161882 162105> out 1 <162106>  # join source bit 24
const-mul-2 in 1 <162106> out 1 <162107> # join
add in 2 <161881 162107> out 1 <162108>  # join source bit 23
const-mul-2 in 1 <162108> out 1 <162109> # join
add in 2 <161880 162109> out 1 <162110>  # join source bit 22
const-mul-2 in 1 <162110> out 1 <162111> # join
add in 2 <161879 162111> out 1 <162112>  # join source bit 21
const-mul-2 in 1 <162112> out 1 <162113> # join
add in 2 <161878 162113> out 1 <162114>  # join source bit 20
const-mul-2 in 1 <162114> out 1 <162115> # join
add in 2 <161877 162115> out 1 <162116>  # join source bit 19
const-mul-2 in 1 <162116> out 1 <162117> # join
add in 2 <161876 162117> out 1 <162118>  # join source bit 18
const-mul-2 in 1 <162118> out 1 <162119> # join
add in 2 <161875 162119> out 1 <162120>  # join source bit 17
const-mul-2 in 1 <162120> out 1 <162121> # join
add in 2 <161874 162121> out 1 <162122>  # join source bit 16
const-mul-2 in 1 <162122> out 1 <162123> # join
add in 2 <161873 162123> out 1 <162124>  # join source bit 15
const-mul-2 in 1 <162124> out 1 <162125> # join
add in 2 <161872 162125> out 1 <162126>  # join source bit 14
const-mul-2 in 1 <162126> out 1 <162127> # join
add in 2 <161871 162127> out 1 <162128>  # join source bit 13
const-mul-2 in 1 <162128> out 1 <162129> # join
add in 2 <161870 162129> out 1 <162130>  # join source bit 12
const-mul-2 in 1 <162130> out 1 <162131> # join
add in 2 <161869 162131> out 1 <162132>  # join source bit 11
const-mul-2 in 1 <162132> out 1 <162133> # join
add in 2 <161868 162133> out 1 <162134>  # join source bit 10
const-mul-2 in 1 <162134> out 1 <162135> # join
add in 2 <161867 162135> out 1 <162136>  # join source bit 9
const-mul-2 in 1 <162136> out 1 <162137> # join
add in 2 <161866 162137> out 1 <162138>  # join source bit 8
const-mul-2 in 1 <162138> out 1 <162139> # join
add in 2 <161865 162139> out 1 <162140>  # join source bit 7
const-mul-2 in 1 <162140> out 1 <162141> # join
add in 2 <161864 162141> out 1 <162142>  # join source bit 6
const-mul-2 in 1 <162142> out 1 <162143> # join
add in 2 <161863 162143> out 1 <162144>  # join source bit 5
const-mul-2 in 1 <162144> out 1 <162145> # join
add in 2 <161862 162145> out 1 <162146>  # join source bit 4
const-mul-2 in 1 <162146> out 1 <162147> # join
add in 2 <161861 162147> out 1 <162148>  # join source bit 3
const-mul-2 in 1 <162148> out 1 <162149> # join
add in 2 <161860 162149> out 1 <162150>  # join source bit 2
const-mul-2 in 1 <162150> out 1 <162151> # join
add in 2 <161859 162151> out 1 <162152>  # join source bit 1
const-mul-2 in 1 <162152> out 1 <162153> # join
add in 2 <161858 162153> out 1 <162154>  # join source bit 0
add in 2 <162154 162154> out 1 <162155>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <162155> out 1 <162156> # multiply-by-constant 4294967295
add in 2 <161857 162156> out 1 <162157>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <161855> out 1 <162158> # multiply-by-constant 4294967295
add in 2 <161633 162158> out 1 <162159>  # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <162159> out 267 <162160 162161 162162 162163 162164 162165 162166 162167 162168 162169 162170 162171 162172 162173 162174 162175 162176 162177 162178 162179 162180 162181 162182 162183 162184 162185 162186 162187 162188 162189 162190 162191 162192 162193 162194 162195 162196 162197 162198 162199 162200 162201 162202 162203 162204 162205 162206 162207 162208 162209 162210 162211 162212 162213 162214 162215 162216 162217 162218 162219 162220 162221 162222 162223 162224 162225 162226 162227 162228 162229 162230 162231 162232 162233 162234 162235 162236 162237 162238 162239 162240 162241 162242 162243 162244 162245 162246 162247 162248 162249 162250 162251 162252 162253 162254 162255 162256 162257 162258 162259 162260 162261 162262 162263 162264 162265 162266 162267 162268 162269 162270 162271 162272 162273 162274 162275 162276 162277 162278 162279 162280 162281 162282 162283 162284 162285 162286 162287 162288 162289 162290 162291 162292 162293 162294 162295 162296 162297 162298 162299 162300 162301 162302 162303 162304 162305 162306 162307 162308 162309 162310 162311 162312 162313 162314 162315 162316 162317 162318 162319 162320 162321 162322 162323 162324 162325 162326 162327 162328 162329 162330 162331 162332 162333 162334 162335 162336 162337 162338 162339 162340 162341 162342 162343 162344 162345 162346 162347 162348 162349 162350 162351 162352 162353 162354 162355 162356 162357 162358 162359 162360 162361 162362 162363 162364 162365 162366 162367 162368 162369 162370 162371 162372 162373 162374 162375 162376 162377 162378 162379 162380 162381 162382 162383 162384 162385 162386 162387 162388 162389 162390 162391 162392 162393 162394 162395 162396 162397 162398 162399 162400 162401 162402 162403 162404 162405 162406 162407 162408 162409 162410 162411 162412 162413 162414 162415 162416 162417 162418 162419 162420 162421 162422 162423 162424 162425 162426> # SplitBus
mul in 2 <162191 162157> out 1 <162427>  # cond trueterm
const-mul-neg-1 in 1 <162191> out 1 <162428> # cond minuscond
add in 2 <100 162428> out 1 <162429>     # cond negcond
mul in 2 <162429 161633> out 1 <162430>  # cond falseterm
add in 2 <162427 162430> out 1 <162431>  # cond result
add in 2 <162431 104> out 1 <162432>     # ArithBusReq.AddReq(DFG.Conditional,DFG.Constant)
const-mul-ffffffff in 1 <51> out 1 <162433> # multiply-by-constant 4294967295
add in 2 <162432 162433> out 1 <162434>  # 'CmpLT DFG.Add - DFG.Input'
split in 1 <162434> outplitBus
mul in 2 <162466 103> out 1 <162673>     # cond trueterm
const-mul-neg-1 in 1 <162466> out 1 <162674> # cond minuscond
add in 2 <100 162674> out 1 <162675>     # cond negcond
mul in 2 <162675 102> out 1 <162676>     # cond falseterm
add in 2 <162673 162676> out 1 <162677>  # cond result
add in 2 <162431 3084> out 1 <162678>    # ArithBusReq.AddReq(DFG.Conditional,DFG.Negate)
const-mul-ffffffff in 1 <162678> out 1 <162679> # multiply-by-constant 4294967295
add in 2 <51 162679> out 1 <162680>      # 'CmpLT DFG.Input - DFG.Subtract'
split in 1 <162680> out 270 <162681 162682 162683 162684 162685 162686 162687 162688 162689 162690 162691 162692 162693 162694 162695 162696 162697 162698 162699 162700 162701 162702 162703 162704 162705 162706 162707 162708 162709 162710 162711 162712 162713 162714 162715 162716 162717 162718 162719 162720 162721 162722 162723 162724 162725 162726 162727 162728 162729 162730 162731 162732 162733 162734 162735 162736 162737 162738 162739 162740 162741 162742 162743 162744 162745 162746 162747 162748 162749 162750 162751 162752 162753 162754 162755 162756 162757 162758 162759 162760 162761 162762 162763 162764 162765 162766 162767 162768 162769 162770 162771 162772 162773 162774 162775 162776 162777 162778 162779 162780 162781 162782 162783 162784 162785 162786 162787 162788 162789 162790 162791 162792 162793 162794 162795 162796 162797 162798 162799 162800 162801 162802 162803 162804 162805 162806 162807 162808 162809 162810 162811 162812 162813 162814 162815 162816 162817 162818 162819 162820 162821 162822 162823 162824 162825 162826 162827 162828 162829 162830 162831 162832 162833 162834 162835 162836 162837 162838 162839 162840 162841 162842 162843 162844 162845 162846 162847 162848 162849 162850 162851 162852 162853 162854 162855 162856 162857 162858 162859 162860 162861 162862 162863 162864 162865 162866 162867 162868 162869 162870 162871 162872 162873 162874 162875 162876 162877 162878 162879 162880 162881 162882 162883 162884 162885 162886 162887 162888 162889 162890 162891 162892 162893 162894 162895 162896 162897 162898 162899 162900 162901 162902 162903 162904 162905 162906 162907 162908 162909 162910 162911 162912 162913 162914 162915 162916 162917 162918 162919 162920 162921 162922 162923 162924 162925 162926 162927 162928 162929 162930 162931 162932 162933 162934 162935 162936 162937 162938 162939 162940 162941 162942 162943 162944 162945 162946 162947 162948 162949 162950> # SplitBus
mul in 2 <162712 103> out 1 <162951>     # cond trueterm
const-mul-neg-1 in 1 <162712> out 1 <162952> # cond minuscond
add in 2 <100 162952> out 1 <162953>     # cond negcond
mul in 2 <162953 162677> out 1 <162954>  # cond falseterm
add in 2 <162951 162954> out 1 <162955>  # cond result
const-mul-ffffffff in 1 <50> out 1 <162956> # multiply-by-constant 4294967295
add in 2 <50 51> out 1 <162957>          # ArithBusReq.AddReq(DFG.Input,DFG.Input)
add in 2 <162957 162956> out 1 <162958>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <162958> out 1 <162959> # multiply-by-constant 4294967295
add in 2 <162957 162959> out 1 <162960>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <50> out 1 <162961> # multiply-by-constant 4294967295
add in 2 <51 162961> out 1 <162962>      # 'CmpLT DFG.Input - DFG.Input'
split in 1 <162962> out 65 <162963 162964 162965 162966 162967 162968 162969 162970 162971 162972 162973 162974 162975 162976 162977 162978 162979 162980 162981 162982 162983 162984 162985 162986 162987 162988 162989 162990 162991 162992 162993 162994 162995 162996 162997 162998 162999 163000 163001 163002 163003 163004 163005 163006 163007 163008 163009 163010 163011 163012 163013 163014 163015 163016 163017 163018 163019 163020 163021 163022 163023 163024 163025 163026 163027> # SplitBus
mul in 2 <162994 162960> out 1 <163028>  # cond trueterm
const-mul-neg-1 in 1 <162994> out 1 <163029> # cond minuscond
add in 2 <100 163029> out 1 <163030>     # cond negcond
mul in 2 <163030 51> out 1 <163031>      # cond falseterm
add in 2 <163028 163031> out 1 <163032>  # cond result
const-mul-ffffffff in 1 <163032> out 1 <163033> # multiply-by-constant 4294967295
add in 2 <163032 52> out 1 <163034>      # ArithBusReq.AddReq(DFG.Conditional,DFG.Input)
add in 2 <163034 163033> out 1 <163035>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <163035> out 1 <163036> # multiply-by-constant 4294967295
add in 2 <163034 163036> out 1 <163037>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <163032> out 1 <163038> # multiply-by-constant 4294967295
add in 2 <52 163038> out 1 <163039>      # 'CmpLT DFG.Input - DFG.Conditional'
split in 1 <163039> out 131 <163040 163041 163042 163043 163044 163045 163046 163047 163048 163049 163050 163051 163052 163053 163054 163055 163056 163057 163058 163059 163060 163061 163062 163063 163064 163065 163066 163067 163068 163069 163070 163071 163072 163073 163074 163075 163076 163077 163078 163079 163080 163081 163082 163083 163084 163085 163086 163087 163088 163089 163090 163091 163092 163093 163094 163095 163096 163097 163098 163099 163100 163101 163102 163103 163104 163105 163106 163107 163108 163109 163110 163111 163112 163113 163114 163115 163116 163117 163118 163119 163120 163121 163122 163123 163124 163125 163126 163127 163128 163129 163130 163131 163132 163133 163134 163135 163136 163137 163138 163139 163140 163141 163142 163143 163144 163145 163146 163147 163148 163149 163150 163151 163152 163153 163154 163155 163156 163157 163158 163159 163160 163161 163162 163163 163164 163165 163166 163167 163168 163169 163170> # SplitBus
mul in 2 <163071 163037> out 1 <163171>  # cond trueterm
const-mul-neg-1 in 1 <163071> out 1 <163172> # cond minuscond
add in 2 <100 163172> out 1 <163173>     # cond negcond
mul in 2 <163173 52> out 1 <163174>      # cond falseterm
add in 2 <163171 163174> out 1 <163175>  # cond result
const-mul-ffffffff in 1 <163175> out 1 <163176> # multiply-by-constant 4294967295
add in 2 <163175 53> out 1 <163177>      # ArithBusReq.AddReq(DFG.Conditional,DFG.Input)
add in 2 <163177 163176> out 1 <163178>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <163175> out 1 <163179> # multiply-by-constant 4294967295
add in 2 <53 163179> out 1 <163180>      # 'CmpLT DFG.Input - DFG.Conditional'
split in 1 <163180> out 197 <163181 163182 163183 163184 163185 163186 163187 163188 163189 163190 163191 163192 163193 163194 163195 163196 163197 163198 163199 163200 163201 163202 163203 163204 163205 163206 163207 163208 163209 163210 163211 163212 163213 163214 163215 163216 163217 163218 163219 163220 163221 163222 163223 163224 163225 163226 163227 163228 163229 163230 163231 163232 163233 163234 163235 163236 163237 163238 163239 163240 163241 163242 163243 163244 163245 163246 163247 163248 163249 163250 163251 163252 163253 163254 163255 163256 163257 163258 163259 163260 163261 163262 163263 163264 163265 163266 163267 163268 163269 163270 163271 163272 163273 163274 163275 163276 163277 163278 163279 163280 163281 163282 163283 163284 163285 163286 163287 163288 163289 163290 163291 163292 163293 163294 163295 163296 163297 163298 163299 163300 163301 163302 163303 163304 163305 163306 163307 163308 163309 163310 163311 163312 163313 163314 163315 163316 163317 163318 163319 163320 163321 163322 163323 163324 163325 163326 163327 163328 163329 163330 163331 163332 163333 163334 163335 163336 163337 163338 163339 163340 163341 163342 163343 163344 163345 163346 163347 163348 163349 163350 163351 163352 163353 163354 163355 163356 163357 163358 163359 163360 163361 163362 163363 163364 163365 163366 163367 163368 163369 163370 163371 163372 163373 163374 163375 163376 163377> # SplitBus
mul in 2 <163212 163178> out 1 <163378>  # cond trueterm
const-mul-neg-1 in 1 <163212> out 1 <163379> # cond minuscond
add in 2 <100 163379> out 1 <163380>     # cond negcond
mul in 2 <163380 163175> out 1 <163381>  # cond falseterm
add in 2 <163378 163381> out 1 <163382>  # cond result
mul in 2 <163071 163035> out 1 <163383>  # cond trueterm
const-mul-neg-1 in 1 <163071> out 1 <163384> # cond minuscond
add in 2 <100 163384> out 1 <163385>     # cond negcond
mul in 2 <163385 163032> out 1 <163386>  # cond falseterm
add in 2 <163383 163386> out 1 <163387>  # cond result
mul in 2 <162994 162958> out 1 <163388>  # cond trueterm
const-mul-neg-1 in 1 <162994> out 1 <163389> # cond minuscond
add in 2 <100 163389> out 1 <163390>     # cond negcond
mul in 2 <163390 50> out 1 <163391>      # cond falseterm
add in 2 <163388 163391> out 1 <163392>  # cond result
const-mul-ffffffff in 1 <163392> out 1 <163393> # multiply-by-constant 4294967295
add in 2 <163392 163387> out 1 <163394>  # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
add in 2 <163394 163393> out 1 <163395>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <163395> out 1 <163396> # multiply-by-constant 4294967295
add in 2 <163394 163396> out 1 <163397>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <163392> out 1 <163398> # multiply-by-constant 4294967295
add in 2 <163387 163398> out 1 <163399>  # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <163399> out 132 <163400 163401 163402 163403 163404 163405 163406 163407 163408 163409 163410 163411 163412 163413 163414 163415 163416 163417 163418 163419 163420 163421 163422 163423 163424 163425 163426 163427 163428 163429 163430 163431 163432 163433 163434 163435 163436 163437 163438 163439 163440 163441 163442 163443 163444 163445 163446 163447 163448 163449 163450 163451 163452 163453 163454 163455 163456 163457 163458 163459 163460 163461 163462 163463 163464 163465 163466 163467 163468 163469 163470 163471 163472 163473 163474 163475 163476 163477 163478 163479 163480 163481 163482 163483 163484 163485 163486 163487 163488 163489 163490 163491 163492 163493 163494 163495 163496 163497 163498 163499 163500 163501 163502 163503 163504 163505 163506 163507 163508 163509 163510 163511 163512 163513 163514 163515 163516 163517 163518 163519 163520 163521 163522 163523 163524 163525 163526 163527 163528 163529 163530 163531> # SplitBus
mul in 2 <163431 163397> out 1 <163532>  # cond trueterm
const-mul-neg-1 in 1 <163431> out 1 <163533> # cond minuscond
add in 2 <100 163533> out 1 <163534>     # cond negcond
mul in 2 <163534 163387> out 1 <163535>  # cond falseterm
add in 2 <163532 163535> out 1 <163536>  # cond result
const-mul-ffffffff in 1 <163536> out 1 <163537> # multiply-by-constant 4294967295
add in 2 <163536 163382> out 1 <163538>  # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
add in 2 <163538 163537> out 1 <163539>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <163539> out 1 <163540> # multiply-by-constant 4294967295
add in 2 <163538 163540> out 1 <163541>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <163536> out 1 <163542> # multiply-by-constant 4294967295
add in 2 <163382 163542> out 1 <163543>  # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <163543> out 199 <163544 163545 163546 163547 163548 163549 163550 163551 163552 163553 163554 163555 163556 163557 163558 163559 163560 163561 163562 163563 163564 163565 163566 163567 163568 163569 163570 163571 163572 163573 163574 163575 163576 163577 163578 163579 163580 163581 163582 163583 163584 163585 163586 163587 163588 163589 163590 163591 163592 163593 163594 163595 163596 163597 163598 163599 163600 163601 163602 163603 163604 163605 163606 163607 163608 163609 163610 163611 163612 163613 163614 163615 163616 163617 163618 163619 163620 163621 163622 163623 163624 163625 163626 163627 163628 163629 163630 163631 163632 163633 163634 163635 163636 163637 163638 163639 163640 163641 163642 163643 163644 163645 163646 163647 163648 163649 163650 163651 163652 163653 163654 163655 163656 163657 163658 163659 163660 163661 163662 163663 163664 163665 163666 163667 163668 163669 163670 163671 163672 163673 163674 163675 163676 163677 163678 163679 163680 163681 163682 163683 163684 163685 163686 163687 163688 163689 163690 163691 163692 163693 163694 163695 163696 163697 163698 163699 163700 163701 163702 163703 163704 163705 163706 163707 163708 163709 163710 163711 163712 163713 163714 163715 163716 163717 163718 163719 163720 163721 163722 163723 163724 163725 163726 163727 163728 163729 163730 163731 163732 163733 163734 163735 163736 163737 163738 163739 163740 163741 163742> # SplitBus
mul in 2 <163575 163541> out 1 <163743>  # cond trueterm
const-mul-neg-1 in 1 <163575> out 1 <163744> # cond minuscond
add in 2 <100 163744> out 1 <163745>     # cond negcond
mul in 2 <163745 163382> out 1 <163746>  # cond falseterm
add in 2 <163743 163746> out 1 <163747>  # cond result
const-mul-ffffffff in 1 <163747> out 1 <163748> # multiply-by-constant 4294967295
const-mul-ffffffff in 1 <163178> out 1 <163749> # multiply-by-constant 4294967295
add in 2 <163177 163749> out 1 <163750>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
mul in 2 <163212 163750> out 1 <163751>  # cond trueterm
const-mul-neg-1 in 1 <163212> out 1 <163752> # cond minuscond
add in 2 <100 163752> out 1 <163753>     # cond negcond
mul in 2 <163753 53> out 1 <163754>      # cond falseterm
add in 2 <163751 163754> out 1 <163755>  # cond result
const-mul-ffffffff in 1 <163755> out 1 <163756> # multiply-by-constant 4294967295
add in 2 <163755 54> out 1 <163757>      # ArithBusReq.AddReq(DFG.Conditional,DFG.Input)
split in 1 <163757> out 231 <163758 163759 163760 163761 163762 163763 163764 163765 163766 163767 163768 163769 163770 163771 163772 163773 163774 163775 163776 163777 163778 163779 163780 163781 163782 163783 163784 163785 163786 163787 163788 163789 163790 163791 163792 163793 163794 163795 163796 163797 163798 163799 163800 163801 163802 163803 163804 163805 163806 163807 163808 163809 163810 163811 163812 163813 163814 163815 163816 163817 163818 163819 163820 163821 163822 163823 163824 163825 163826 163827 163828 163829 163830 163831 163832 163833 163834 163835 163836 163837 163838 163839 163840 163841 163842 163843 163844 163845 163846 163847 163848 163849 163850 163851 163852 163853 163854 163855 163856 163857 163858 163859 163860 163861 163862 163863 163864 163865 163866 163867 163868 163869 163870 163871 163872 163873 163874 163875 163876 163877 163878 163879 163880 163881 163882 163883 163884 163885 163886 163887 163888 163889 163890 163891 163892 163893 163894 163895 163896 163897 163898 163899 163900 163901 163902 163903 163904 163905 163906 163907 163908 163909 163910 163911 163912 163913 163914 163915 163916 163917 163918 163919 163920 163921 163922 163923 163924 163925 163926 163927 163928 163929 163930 163931 163932 163933 163934 163935 163936 163937 163938 163939 163940 163941 163942 163943 163944 163945 163946 163947 163948 163949 163950 163951 163952 163953 163954 163955 163956 163957 163958 163959 163960 163961 163962 163963 163964 163965 163966 163967 163968 163969 163970 163971 163972 163973 163974 163975 163976 163977 163978 163979 163980 163981 163982 163983 163984 163985 163986 163987 163988> # SplitBus
const-mul-2 in 1 <163789> out 1 <163989> # join source bit 31
add in 2 <163788 163989> out 1 <163990>  # join source bit 30
const-mul-2 in 1 <163990> out 1 <163991> # join
add in 2 <163787 163991> out 1 <163992>  # join source bit 29
const-mul-2 in 1 <163992> out 1 <163993> # join
add in 2 <163786 163993> out 1 <163994>  # join source bit 28
const-mul-2 in 1 <163994> out 1 <163995> # join
add in 2 <163785 163995> out 1 <163996>  # join source bit 27
const-mul-2 in 1 <163996> out 1 <163997> # join
add in 2 <163784 163997> out 1 <163998>  # join source bit 26
const-mul-2 in 1 <163998> out 1 <163999> # join
add in 2 <163783 163999> out 1 <164000>  # join source bit 25
const-mul-2 in 1 <164000> out 1 <164001> # join
add in 2 <163782 164001> out 1 <164002>  # join source bit 24
const-mul-2 in 1 <164002> out 1 <164003> # join
add in 2 <163781 164003> out 1 <164004>  # join source bit 23
const-mul-2 in 1 <164004> out 1 <164005> # join
add in 2 <163780 164005> out 1 <164006>  # join source bit 22
const-mul-2 in 1 <164006> out 1 <164007> # join
add in 2 <163779 164007> out 1 <164008>  # join source bit 21
const-mul-2 in 1 <164008> out 1 <164009> # join
add in 2 <163778 164009> out 1 <164010>  # join source bit 20
const-mul-2 in 1 <164010> out 1 <164011> # join
add in 2 <163777 164011> out 1 <164012>  # join source bit 19
const-mul-2 in 1 <164012> out 1 <164013> # join
add in 2 <163776 164013> out 1 <164014>  # join source bit 18
const-mul-2 in 1 <164014> out 1 <164015> # join
add in 2 <163775 164015> out 1 <164016>  # join source bit 17
const-mul-2 in 1 <164016> out 1 <164017> # join
add in 2 <163774 164017> out 1 <164018>  # join source bit 16
const-mul-2 in 1 <164018> out 1 <164019> # join
add in 2 <163773 164019> out 1 <164020>  # join source bit 15
const-mul-2 in 1 <164020> out 1 <164021> # join
add in 2 <163772 164021> out 1 <164022>  # join source bit 14
const-mul-2 in 1 <164022> out 1 <164023> # join
add in 2 <163771 164023> out 1 <164024>  # join source bit 13
const-mul-2 in 1 <164024> out 1 <164025> # join
add in 2 <163770 164025> out 1 <164026>  # join source bit 12
const-mul-2 in 1 <164026> out 1 <164027> # join
add in 2 <163769 164027> out 1 <164028>  # join source bit 11
const-mul-2 in 1 <164028> out 1 <164029> # join
add in 2 <163768 164029> out 1 <164030>  # join source bit 10
const-mul-2 in 1 <164030> out 1 <164031> # join
add in 2 <163767 164031> out 1 <164032>  # join source bit 9
const-mul-2 in 1 <164032> out 1 <164033> # join
add in 2 <163766 164033> out 1 <164034>  # join source bit 8
const-mul-2 in 1 <164034> out 1 <164035> # join
add in 2 <163765 164035> out 1 <164036>  # join source bit 7
const-mul-2 in 1 <164036> out 1 <164037> # join
add in 2 <163764 164037> out 1 <164038>  # join source bit 6
const-mul-2 in 1 <164038> out 1 <164039> # join
add in 2 <163763 164039> out 1 <164040>  # join source bit 5
const-mul-2 in 1 <164040> out 1 <164041> # join
add in 2 <163762 164041> out 1 <164042>  # join source bit 4
const-mul-2 in 1 <164042> out 1 <164043> # join
add in 2 <163761 164043> out 1 <164044>  # join source bit 3
const-mul-2 in 1 <164044> out 1 <164045> # join
add in 2 <163760 164045> out 1 <164046>  # join source bit 2
const-mul-2 in 1 <164046> out 1 <164047> # join
add in 2 <163759 164047> out 1 <164048>  # join source bit 1
const-mul-2 in 1 <164048> out 1 <164049> # join
add in 2 <163758 164049> out 1 <164050>  # join source bit 0
add in 2 <164050 164050> out 1 <164051>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <163755> out 1 <164052> # multiply-by-constant 4294967295
add in 2 <54 164052> out 1 <164053>      # 'CmpLT DFG.Input - DFG.Conditional'
split in 1 <164053> out 263 <164054 164055 164056 164057 164058 164059 164060 164061 164062 164063 164064 164065 164066 164067 164068 164069 164070 164071 164072 164073 164074 164075 164076 164077 164078 164079 164080 164081 164082 164083 164084 164085 164086 164087 164088 164089 164090 164091 164092 164093 164094 164095 164096 164097 164098 164099 164100 164101 164102 164103 164104 164105 164106 164107 164108 164109 164110 164111 164112 164113 164114 164115 164116 164117 164118 164119 164120 164121 164122 164123 164124 164125 164126 164127 164128 164129 164130 164131 164132 164133 164134 164135 164136 164137 164138 164139 164140 164141 164142 164143 164144 164145 164146 164147 164148 164149 164150 164151 164152 164153 164154 164155 164156 164157 164158 164159 164160 164161 164162 164163 164164 164165 164166 164167 164168 164169 164170 164171 164172 164173 164174 164175 164176 164177 164178 164179 164180 164181 164182 164183 164184 164185 164186 164187 164188 164189 164190 164191 164192 164193 164194 164195 164196 164197 164198 164199 164200 164201 164202 164203 164204 164205 164206 164207 164208 164209 164210 164211 164212 164213 164214 164215 164216 164217 164218 164219 164220 164221 164222 164223 164224 164225 164226 164227 164228 164229 164230 164231 164232 164233 164234 164235 164236 164237 164238 164239 164240 164241 164242 164243 164244 164245 164246 164247 164248 164249 164250 164251 164252 164253 164254 164255 164256 164257 164258 164259 164260 164261 164262 164263 164264 164265 164266 164267 164268 164269 164270 164271 164272 164273 164274 164275 164276 164277 164278 164279 164280 164281 164282 164283 164284 164285 164286 164287 164288 164289 164290 164291 164292 164293 164294 164295 164296 164297 164298 164299 164300 164301 164302 164303 164304 164305 164306 164307 164308 164309 164310 164311 164312 164313 164314 164315 164316> # SplitBus
mul in 2 <164085 164051> out 1 <164317>  # cond trueterm
const-mul-neg-1 in 1 <164085> out 1 <164318> # cond minuscond
add in 2 <100 164318> out 1 <164319>     # cond negcond
mul in 2 <164319 163755> out 1 <164320>  # cond falseterm
add in 2 <164317 164320> out 1 <164321>  # cond result
add in 2 <163747 164321> out 1 <164322>  # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
split in 1 <164322> outplitBus
const-mul-2 in 1 <164354> out 1 <164556> # join source bit 31
add in 2 <164353 164556> out 1 <164557>  # join source bit 30
const-mul-2 in 1 <164557> out 1 <164558> # join
add in 2 <164352 164558> out 1 <164559>  # join source bit 29
const-mul-2 in 1 <164559> out 1 <164560> # join
add in 2 <164351 164560> out 1 <164561>  # join source bit 28
const-mul-2 in 1 <164561> out 1 <164562> # join
add in 2 <164350 164562> out 1 <164563>  # join source bit 27
const-mul-2 in 1 <164563> out 1 <164564> # join
add in 2 <164349 164564> out 1 <164565>  # join source bit 26
const-mul-2 in 1 <164565> out 1 <164566> # join
add in 2 <164348 164566> out 1 <164567>  # join source bit 25
const-mul-2 in 1 <164567> out 1 <164568> # join
add in 2 <164347 164568> out 1 <164569>  # join source bit 24
const-mul-2 in 1 <164569> out 1 <164570> # join
add in 2 <164346 164570> out 1 <164571>  # join source bit 23
const-mul-2 in 1 <164571> out 1 <164572> # join
add in 2 <164345 164572> out 1 <164573>  # join source bit 22
const-mul-2 in 1 <164573> out 1 <164574> # join
add in 2 <164344 164574> out 1 <164575>  # join source bit 21
const-mul-2 in 1 <164575> out 1 <164576> # join
add in 2 <164343 164576> out 1 <164577>  # join source bit 20
const-mul-2 in 1 <164577> out 1 <164578> # join
add in 2 <164342 164578> out 1 <164579>  # join source bit 19
const-mul-2 in 1 <164579> out 1 <164580> # join
add in 2 <164341 164580> out 1 <164581>  # join source bit 18
const-mul-2 in 1 <164581> out 1 <164582> # join
add in 2 <164340 164582> out 1 <164583>  # join source bit 17
const-mul-2 in 1 <164583> out 1 <164584> # join
add in 2 <164339 164584> out 1 <164585>  # join source bit 16
const-mul-2 in 1 <164585> out 1 <164586> # join
add in 2 <164338 164586> out 1 <164587>  # join source bit 15
const-mul-2 in 1 <164587> out 1 <164588> # join
add in 2 <164337 164588> out 1 <164589>  # join source bit 14
const-mul-2 in 1 <164589> out 1 <164590> # join
add in 2 <164336 164590> out 1 <164591>  # join source bit 13
const-mul-2 in 1 <164591> out 1 <164592> # join
add in 2 <164335 164592> out 1 <164593>  # join source bit 12
const-mul-2 in 1 <164593> out 1 <164594> # join
add in 2 <164334 164594> out 1 <164595>  # join source bit 11
const-mul-2 in 1 <164595> out 1 <164596> # join
add in 2 <164333 164596> out 1 <164597>  # join source bit 10
const-mul-2 in 1 <164597> out 1 <164598> # join
add in 2 <164332 164598> out 1 <164599>  # join source bit 9
const-mul-2 in 1 <164599> out 1 <164600> # join
add in 2 <164331 164600> out 1 <164601>  # join source bit 8
const-mul-2 in 1 <164601> out 1 <164602> # join
add in 2 <164330 164602> out 1 <164603>  # join source bit 7
const-mul-2 in 1 <164603> out 1 <164604> # join
add in 2 <164329 164604> out 1 <164605>  # join source bit 6
const-mul-2 in 1 <164605> out 1 <164606> # join
add in 2 <164328 164606> out 1 <164607>  # join source bit 5
const-mul-2 in 1 <164607> out 1 <164608> # join
add in 2 <164327 164608> out 1 <164609>  # join source bit 4
const-mul-2 in 1 <164609> out 1 <164610> # join
add in 2 <164326 164610> out 1 <164611>  # join source bit 3
const-mul-2 in 1 <164611> out 1 <164612> # join
add in 2 <164325 164612> out 1 <164613>  # join source bit 2
const-mul-2 in 1 <164613> out 1 <164614> # join
add in 2 <164324 164614> out 1 <164615>  # join source bit 1
const-mul-2 in 1 <164615> out 1 <164616> # join
add in 2 <164323 164616> out 1 <164617>  # join source bit 0
add in 2 <164617 164617> out 1 <164618>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <163747> out 1 <164619> # multiply-by-constant 4294967295
add in 2 <164321 164619> out 1 <164620>  # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <164620> outplitBus
mul in 2 <164652 164618> out 1 <164886>  # cond trueterm
const-mul-neg-1 in 1 <164652> out 1 <164887> # cond minuscond
add in 2 <100 164887> out 1 <164888>     # cond negcond
mul in 2 <164888 163747> out 1 <164889>  # cond falseterm
add in 2 <164886 164889> out 1 <164890>  # cond result
mul in 2 <163575 163539> out 1 <164891>  # cond trueterm
const-mul-neg-1 in 1 <163575> out 1 <164892> # cond minuscond
add in 2 <100 164892> out 1 <164893>     # cond negcond
mul in 2 <164893 163536> out 1 <164894>  # cond falseterm
add in 2 <164891 164894> out 1 <164895>  # cond result
mul in 2 <163431 163395> out 1 <164896>  # cond trueterm
const-mul-neg-1 in 1 <163431> out 1 <164897> # cond minuscond
add in 2 <100 164897> out 1 <164898>     # cond negcond
mul in 2 <164898 163392> out 1 <164899>  # cond falseterm
add in 2 <164896 164899> out 1 <164900>  # cond result
const-mul-ffffffff in 1 <164900> out 1 <164901> # multiply-by-constant 4294967295
add in 2 <164900 164895> out 1 <164902>  # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
add in 2 <164902 164901> out 1 <164903>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <164903> out 1 <164904> # multiply-by-constant 4294967295
add in 2 <164902 164904> out 1 <164905>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <164900> out 1 <164906> # multiply-by-constant 4294967295
add in 2 <164895 164906> out 1 <164907>  # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <164907> out 200 <164908 164909 164910 164911 164912 164913 164914 164915 164916 164917 164918 164919 164920 164921 164922 164923 164924 164925 164926 164927 164928 164929 164930 164931 164932 164933 164934 164935 164936 164937 164938 164939 164940 164941 164942 164943 164944 164945 164946 164947 164948 164949 164950 164951 164952 164953 164954 164955 164956 164957 164958 164959 164960 164961 164962 164963 164964 164965 164966 164967 164968 164969 164970 164971 164972 164973 164974 164975 164976 164977 164978 164979 164980 164981 164982 164983 164984 164985 164986 164987 164988 164989 164990 164991 164992 164993 164994 164995 164996 164997 164998 164999 165000 165001 165002 165003 165004 165005 165006 165007 165008 165009 165010 165011 165012 165013 165014 165015 165016 165017 165018 165019 165020 165021 165022 165023 165024 165025 165026 165027 165028 165029 165030 165031 165032 165033 165034 165035 165036 165037 165038 165039 165040 165041 165042 165043 165044 165045 165046 165047 165048 165049 165050 165051 165052 165053 165054 165055 165056 165057 165058 165059 165060 165061 165062 165063 165064 165065 165066 165067 165068 165069 165070 165071 165072 165073 165074 165075 165076 165077 165078 165079 165080 165081 165082 165083 165084 165085 165086 165087 165088 165089 165090 165091 165092 165093 165094 165095 165096 165097 165098 165099 165100 165101 165102 165103 165104 165105 165106 165107> # SplitBus
mul in 2 <164939 164905> out 1 <165108>  # cond trueterm
const-mul-neg-1 in 1 <164939> out 1 <165109> # cond minuscond
add in 2 <100 165109> out 1 <165110>     # cond negcond
mul in 2 <165110 164895> out 1 <165111>  # cond falseterm
add in 2 <165108 165111> out 1 <165112>  # cond result
const-mul-ffffffff in 1 <165112> out 1 <165113> # multiply-by-constant 4294967295
add in 2 <165112 164890> out 1 <165114>  # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
split in 1 <165114> outplitBus
const-mul-2 in 1 <165146> out 1 <165350> # join source bit 31
add in 2 <165145 165350> out 1 <165351>  # join source bit 30
const-mul-2 in 1 <165351> out 1 <165352> # join
add in 2 <165144 165352> out 1 <165353>  # join source bit 29
const-mul-2 in 1 <165353> out 1 <165354> # join
add in 2 <165143 165354> out 1 <165355>  # join source bit 28
const-mul-2 in 1 <165355> out 1 <165356> # join
add in 2 <165142 165356> out 1 <165357>  # join source bit 27
const-mul-2 in 1 <165357> out 1 <165358> # join
add in 2 <165141 165358> out 1 <165359>  # join source bit 26
const-mul-2 in 1 <165359> out 1 <165360> # join
add in 2 <165140 165360> out 1 <165361>  # join source bit 25
const-mul-2 in 1 <165361> out 1 <165362> # join
add in 2 <165139 165362> out 1 <165363>  # join source bit 24
const-mul-2 in 1 <165363> out 1 <165364> # join
add in 2 <165138 165364> out 1 <165365>  # join source bit 23
const-mul-2 in 1 <165365> out 1 <165366> # join
add in 2 <165137 165366> out 1 <165367>  # join source bit 22
const-mul-2 in 1 <165367> out 1 <165368> # join
add in 2 <165136 165368> out 1 <165369>  # join source bit 21
const-mul-2 in 1 <165369> out 1 <165370> # join
add in 2 <165135 165370> out 1 <165371>  # join source bit 20
const-mul-2 in 1 <165371> out 1 <165372> # join
add in 2 <165134 165372> out 1 <165373>  # join source bit 19
const-mul-2 in 1 <165373> out 1 <165374> # join
add in 2 <165133 165374> out 1 <165375>  # join source bit 18
const-mul-2 in 1 <165375> out 1 <165376> # join
add in 2 <165132 165376> out 1 <165377>  # join source bit 17
const-mul-2 in 1 <165377> out 1 <165378> # join
add in 2 <165131 165378> out 1 <165379>  # join source bit 16
const-mul-2 in 1 <165379> out 1 <165380> # join
add in 2 <165130 165380> out 1 <165381>  # join source bit 15
const-mul-2 in 1 <165381> out 1 <165382> # join
add in 2 <165129 165382> out 1 <165383>  # join source bit 14
const-mul-2 in 1 <165383> out 1 <165384> # join
add in 2 <165128 165384> out 1 <165385>  # join source bit 13
const-mul-2 in 1 <165385> out 1 <165386> # join
add in 2 <165127 165386> out 1 <165387>  # join source bit 12
const-mul-2 in 1 <165387> out 1 <165388> # join
add in 2 <165126 165388> out 1 <165389>  # join source bit 11
const-mul-2 in 1 <165389> out 1 <165390> # join
add in 2 <165125 165390> out 1 <165391>  # join source bit 10
const-mul-2 in 1 <165391> out 1 <165392> # join
add in 2 <165124 165392> out 1 <165393>  # join source bit 9
const-mul-2 in 1 <165393> out 1 <165394> # join
add in 2 <165123 165394> out 1 <165395>  # join source bit 8
const-mul-2 in 1 <165395> out 1 <165396> # join
add in 2 <165122 165396> out 1 <165397>  # join source bit 7
const-mul-2 in 1 <165397> out 1 <165398> # join
add in 2 <165121 165398> out 1 <165399>  # join source bit 6
const-mul-2 in 1 <165399> out 1 <165400> # join
add in 2 <165120 165400> out 1 <165401>  # join source bit 5
const-mul-2 in 1 <165401> out 1 <165402> # join
add in 2 <165119 165402> out 1 <165403>  # join source bit 4
const-mul-2 in 1 <165403> out 1 <165404> # join
add in 2 <165118 165404> out 1 <165405>  # join source bit 3
const-mul-2 in 1 <165405> out 1 <165406> # join
add in 2 <165117 165406> out 1 <165407>  # join source bit 2
const-mul-2 in 1 <165407> out 1 <165408> # join
add in 2 <165116 165408> out 1 <165409>  # join source bit 1
const-mul-2 in 1 <165409> out 1 <165410> # join
add in 2 <165115 165410> out 1 <165411>  # join source bit 0
add in 2 <165411 165411> out 1 <165412>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <165412> out 1 <165413> # multiply-by-constant 4294967295
add in 2 <165114 165413> out 1 <165414>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <165112> out 1 <165415> # multiply-by-constant 4294967295
add in 2 <164890 165415> out 1 <165416>  # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <165416> outplitBus
mul in 2 <165448 165414> out 1 <165684>  # cond trueterm
const-mul-neg-1 in 1 <165448> out 1 <165685> # cond minuscond
add in 2 <100 165685> out 1 <165686>     # cond negcond
mul in 2 <165686 164890> out 1 <165687>  # cond falseterm
add in 2 <165684 165687> out 1 <165688>  # cond result
add in 2 <165688 104> out 1 <165689>     # ArithBusReq.AddReq(DFG.Conditional,DFG.Constant)
const-mul-ffffffff in 1 <52> out 1 <165690> # multiply-by-constant 4294967295
add in 2 <165689 165690> out 1 <165691>  # 'CmpLT DFG.Add - DFG.Input'
split in 1 <165691> out 238 <165692 165693 165694 165695 165696 165697 165698 165699 165700 165701 165702 165703 165704 165705 165706 165707 165708 165709 165710 165711 165712 165713 165714 165715 165716 165717 165718 165719 165720 165721 165722 165723 165724 165725 165726 165727 165728 165729 165730 165731 165732 165733 165734 165735 165736 165737 165738 165739 165740 165741 165742 165743 165744 165745 165746 165747 165748 165749 165750 165751 165752 165753 165754 165755 165756 165757 165758 165759 165760 165761 165762 165763 165764 165765 165766 165767 165768 165769 165770 165771 165772 165773 165774 165775 165776 165777 165778 165779 165780 165781 165782 165783 165784 165785 165786 165787 165788 165789 165790 165791 165792 165793 165794 165795 165796 165797 165798 165799 165800 165801 165802 165803 165804 165805 165806 165807 165808 165809 165810 165811 165812 165813 165814 165815 165816 165817 165818 165819 165820 165821 165822 165823 165824 165825 165826 165827 165828 165829 165830 165831 165832 165833 165834 165835 165836 165837 165838 165839 165840 165841 165842 165843 165844 165845 165846 165847 165848 165849 165850 165851 165852 165853 165854 165855 165856 165857 165858 165859 165860 165861 165862 165863 165864 165865 165866 165867 165868 165869 165870 165871 165872 165873 165874 165875 165876 165877 165878 165879 165880 165881 165882 165883 165884 165885 165886 165887 165888 165889 165890 165891 165892 165893 165894 165895 165896 165897 165898 165899 165900 165901 165902 165903 165904 165905 165906 165907 165908 165909 165910 165911 165912 165913 165914 165915 165916 165917 165918 165919 165920 165921 165922 165923 165924 165925 165926 165927 165928 165929> # SplitBus
mul in 2 <165723 103> out 1 <165930>     # cond trueterm
const-mul-neg-1 in 1 <165723> out 1 <165931> # cond minuscond
add in 2 <100 165931> out 1 <165932>     # cond negcond
mul in 2 <165932 102> out 1 <165933>     # cond falseterm
add in 2 <165930 165933> out 1 <165934>  # cond result
add in 2 <165688 3084> out 1 <165935>    # ArithBusReq.AddReq(DFG.Conditional,DFG.Negate)
const-mul-ffffffff in 1 <165935> out 1 <165936> # multiply-by-constant 4294967295
add in 2 <52 165936> out 1 <165937>      # 'CmpLT DFG.Input - DFG.Subtract'
split in 1 <165937> out 270 <165938 165939 165940 165941 165942 165943 165944 165945 165946 165947 165948 165949 165950 165951 165952 165953 165954 165955 165956 165957 165958 165959 165960 165961 165962 165963 165964 165965 165966 165967 165968 165969 165970 165971 165972 165973 165974 165975 165976 165977 165978 165979 165980 165981 165982 165983 165984 165985 165986 165987 165988 165989 165990 165991 165992 165993 165994 165995 165996 165997 165998 165999 166000 166001 166002 166003 166004 166005 166006 166007 166008 166009 166010 166011 166012 166013 166014 166015 166016 166017 166018 166019 166020 166021 166022 166023 166024 166025 166026 166027 166028 166029 166030 166031 166032 166033 166034 166035 166036 166037 166038 166039 166040 166041 166042 166043 166044 166045 166046 166047 166048 166049 166050 166051 166052 166053 166054 166055 166056 166057 166058 166059 166060 166061 166062 166063 166064 166065 166066 166067 166068 166069 166070 166071 166072 166073 166074 166075 166076 166077 166078 166079 166080 166081 166082 166083 166084 166085 166086 166087 166088 166089 166090 166091 166092 166093 166094 166095 166096 166097 166098 166099 166100 166101 166102 166103 166104 166105 166106 166107 166108 166109 166110 166111 166112 166113 166114 166115 166116 166117 166118 166119 166120 166121 166122 166123 166124 166125 166126 166127 166128 166129 166130 166131 166132 166133 166134 166135 166136 166137 166138 166139 166140 166141 166142 166143 166144 166145 166146 166147 166148 166149 166150 166151 166152 166153 166154 166155 166156 166157 166158 166159 166160 166161 166162 166163 166164 166165 166166 166167 166168 166169 166170 166171 166172 166173 166174 166175 166176 166177 166178 166179 166180 166181 166182 166183 166184 166185 166186 166187 166188 166189 166190 166191 166192 166193 166194 166195 166196 166197 166198 166199 166200 166201 166202 166203 166204 166205 166206 166207> # SplitBus
mul in 2 <165969 103> out 1 <166208>     # cond trueterm
const-mul-neg-1 in 1 <165969> out 1 <166209> # cond minuscond
add in 2 <100 166209> out 1 <166210>     # cond negcond
mul in 2 <166210 165934> out 1 <166211>  # cond falseterm
add in 2 <166208 166211> out 1 <166212>  # cond result
const-mul-ffffffff in 1 <51> out 1 <166213> # multiply-by-constant 4294967295
add in 2 <51 52> out 1 <166214>          # ArithBusReq.AddReq(DFG.Input,DFG.Input)
add in 2 <166214 166213> out 1 <166215>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <166215> out 1 <166216> # multiply-by-constant 4294967295
add in 2 <166214 166216> out 1 <166217>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <51> out 1 <166218> # multiply-by-constant 4294967295
add in 2 <52 166218> out 1 <166219>      # 'CmpLT DFG.Input - DFG.Input'
split in 1 <166219> out 65 <166220 166221 166222 166223 166224 166225 166226 166227 166228 166229 166230 166231 166232 166233 166234 166235 166236 166237 166238 166239 166240 166241 166242 166243 166244 166245 166246 166247 166248 166249 166250 166251 166252 166253 166254 166255 166256 166257 166258 166259 166260 166261 166262 166263 166264 166265 166266 166267 166268 166269 166270 166271 166272 166273 166274 166275 166276 166277 166278 166279 166280 166281 166282 166283 166284> # SplitBus
mul in 2 <166251 166217> out 1 <166285>  # cond trueterm
const-mul-neg-1 in 1 <166251> out 1 <166286> # cond minuscond
add in 2 <100 166286> out 1 <166287>     # cond negcond
mul in 2 <166287 52> out 1 <166288>      # cond falseterm
add in 2 <166285 166288> out 1 <166289>  # cond result
const-mul-ffffffff in 1 <166289> out 1 <166290> # multiply-by-constant 4294967295
add in 2 <166289 53> out 1 <166291>      # ArithBusReq.AddReq(DFG.Conditional,DFG.Input)
add in 2 <166291 166290> out 1 <166292>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <166292> out 1 <166293> # multiply-by-constant 4294967295
add in 2 <166291 166293> out 1 <166294>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <166289> out 1 <166295> # multiply-by-constant 4294967295
add in 2 <53 166295> out 1 <166296>      # 'CmpLT DFG.Input - DFG.Conditional'
split in 1 <166296> out 131 <166297 166298 166299 166300 166301 166302 166303 166304 166305 166306 166307 166308 166309 166310 166311 166312 166313 166314 166315 166316 166317 166318 166319 166320 166321 166322 166323 166324 166325 166326 166327 166328 166329 166330 166331 166332 166333 166334 166335 166336 166337 166338 166339 166340 166341 166342 166343 166344 166345 166346 166347 166348 166349 166350 166351 166352 166353 166354 166355 166356 166357 166358 166359 166360 166361 166362 166363 166364 166365 166366 166367 166368 166369 166370 166371 166372 166373 166374 166375 166376 166377 166378 166379 166380 166381 166382 166383 166384 166385 166386 166387 166388 166389 166390 166391 166392 166393 166394 166395 166396 166397 166398 166399 166400 166401 166402 166403 166404 166405 166406 166407 166408 166409 166410 166411 166412 166413 166414 166415 166416 166417 166418 166419 166420 166421 166422 166423 166424 166425 166426 166427> # SplitBus
mul in 2 <166328 166294> out 1 <166428>  # cond trueterm
const-mul-neg-1 in 1 <166328> out 1 <166429> # cond minuscond
add in 2 <100 166429> out 1 <166430>     # cond negcond
mul in 2 <166430 53> out 1 <166431>      # cond falseterm
add in 2 <166428 166431> out 1 <166432>  # cond result
const-mul-ffffffff in 1 <166432> out 1 <166433> # multiply-by-constant 4294967295
add in 2 <166432 54> out 1 <166434>      # ArithBusReq.AddReq(DFG.Conditional,DFG.Input)
add in 2 <166434 166433> out 1 <166435>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <166432> out 1 <166436> # multiply-by-constant 4294967295
add in 2 <54 166436> out 1 <166437>      # 'CmpLT DFG.Input - DFG.Conditional'
split in 1 <166437> out 197 <166438 166439 166440 166441 166442 166443 166444 166445 166446 166447 166448 166449 166450 166451 166452 166453 166454 166455 166456 166457 166458 166459 166460 166461 166462 166463 166464 166465 166466 166467 166468 166469 166470 166471 166472 166473 166474 166475 166476 166477 166478 166479 166480 166481 166482 166483 166484 166485 166486 166487 166488 166489 166490 166491 166492 166493 166494 166495 166496 166497 166498 166499 166500 166501 166502 166503 166504 166505 166506 166507 166508 166509 166510 166511 166512 166513 166514 166515 166516 166517 166518 166519 166520 166521 166522 166523 166524 166525 166526 166527 166528 166529 166530 166531 166532 166533 166534 166535 166536 166537 166538 166539 166540 166541 166542 166543 166544 166545 166546 166547 166548 166549 166550 166551 166552 166553 166554 166555 166556 166557 166558 166559 166560 166561 166562 166563 166564 166565 166566 166567 166568 166569 166570 166571 166572 166573 166574 166575 166576 166577 166578 166579 166580 166581 166582 166583 166584 166585 166586 166587 166588 166589 166590 166591 166592 166593 166594 166595 166596 166597 166598 166599 166600 166601 166602 166603 166604 166605 166606 166607 166608 166609 166610 166611 166612 166613 166614 166615 166616 166617 166618 166619 166620 166621 166622 166623 166624 166625 166626 166627 166628 166629 166630 166631 166632 166633 166634> # SplitBus
mul in 2 <166469 166435> out 1 <166635>  # cond trueterm
const-mul-neg-1 in 1 <166469> out 1 <166636> # cond minuscond
add in 2 <100 166636> out 1 <166637>     # cond negcond
mul in 2 <166637 166432> out 1 <166638>  # cond falseterm
add in 2 <166635 166638> out 1 <166639>  # cond result
mul in 2 <166328 166292> out 1 <166640>  # cond trueterm
const-mul-neg-1 in 1 <166328> out 1 <166641> # cond minuscond
add in 2 <100 166641> out 1 <166642>     # cond negcond
mul in 2 <166642 166289> out 1 <166643>  # cond falseterm
add in 2 <166640 166643> out 1 <166644>  # cond result
mul in 2 <166251 166215> out 1 <166645>  # cond trueterm
const-mul-neg-1 in 1 <166251> out 1 <166646> # cond minuscond
add in 2 <100 166646> out 1 <166647>     # cond negcond
mul in 2 <166647 51> out 1 <166648>      # cond falseterm
add in 2 <166645 166648> out 1 <166649>  # cond result
const-mul-ffffffff in 1 <166649> out 1 <166650> # multiply-by-constant 4294967295
add in 2 <166649 166644> out 1 <166651>  # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
add in 2 <166651 166650> out 1 <166652>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <166652> out 1 <166653> # multiply-by-constant 4294967295
add in 2 <166651 166653> out 1 <166654>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <166649> out 1 <166655> # multiply-by-constant 4294967295
add in 2 <166644 166655> out 1 <166656>  # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <166656> out 132 <166657 166658 166659 166660 166661 166662 166663 166664 166665 166666 166667 166668 166669 166670 166671 166672 166673 166674 166675 166676 166677 166678 166679 166680 166681 166682 166683 166684 166685 166686 166687 166688 166689 166690 166691 166692 166693 166694 166695 166696 166697 166698 166699 166700 166701 166702 166703 166704 166705 166706 166707 166708 166709 166710 166711 166712 166713 166714 166715 166716 166717 166718 166719 166720 166721 166722 166723 166724 166725 166726 166727 166728 166729 166730 166731 166732 166733 166734 166735 166736 166737 166738 166739 166740 166741 166742 166743 166744 166745 166746 166747 166748 166749 166750 166751 166752 166753 166754 166755 166756 166757 166758 166759 166760 166761 166762 166763 166764 166765 166766 166767 166768 166769 166770 166771 166772 166773 166774 166775 166776 166777 166778 166779 166780 166781 166782 166783 166784 166785 166786 166787 166788> # SplitBus
mul in 2 <166688 166654> out 1 <166789>  # cond trueterm
const-mul-neg-1 in 1 <166688> out 1 <166790> # cond minuscond
add in 2 <100 166790> out 1 <166791>     # cond negcond
mul in 2 <166791 166644> out 1 <166792>  # cond falseterm
add in 2 <166789 166792> out 1 <166793>  # cond result
const-mul-ffffffff in 1 <166793> out 1 <166794> # multiply-by-constant 4294967295
add in 2 <166793 166639> out 1 <166795>  # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
add in 2 <166795 166794> out 1 <166796>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <166796> out 1 <166797> # multiply-by-constant 4294967295
add in 2 <166795 166797> out 1 <166798>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <166793> out 1 <166799> # multiply-by-constant 4294967295
add in 2 <166639 166799> out 1 <166800>  # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <166800> out 199 <166801 166802 166803 166804 166805 166806 166807 166808 166809 166810 166811 166812 166813 166814 166815 166816 166817 166818 166819 166820 166821 166822 166823 166824 166825 166826 166827 166828 166829 166830 166831 166832 166833 166834 166835 166836 166837 166838 166839 166840 166841 166842 166843 166844 166845 166846 166847 166848 166849 166850 166851 166852 166853 166854 166855 166856 166857 166858 166859 166860 166861 166862 166863 166864 166865 166866 166867 166868 166869 166870 166871 166872 166873 166874 166875 166876 166877 166878 166879 166880 166881 166882 166883 166884 166885 166886 166887 166888 166889 166890 166891 166892 166893 166894 166895 166896 166897 166898 166899 166900 166901 166902 166903 166904 166905 166906 166907 166908 166909 166910 166911 166912 166913 166914 166915 166916 166917 166918 166919 166920 166921 166922 166923 166924 166925 166926 166927 166928 166929 166930 166931 166932 166933 166934 166935 166936 166937 166938 166939 166940 166941 166942 166943 166944 166945 166946 166947 166948 166949 166950 166951 166952 166953 166954 166955 166956 166957 166958 166959 166960 166961 166962 166963 166964 166965 166966 166967 166968 166969 166970 166971 166972 166973 166974 166975 166976 166977 166978 166979 166980 166981 166982 166983 166984 166985 166986 166987 166988 166989 166990 166991 166992 166993 166994 166995 166996 166997 166998 166999> # SplitBus
mul in 2 <166832 166798> out 1 <167000>  # cond trueterm
const-mul-neg-1 in 1 <166832> out 1 <167001> # cond minuscond
add in 2 <100 167001> out 1 <167002>     # cond negcond
mul in 2 <167002 166639> out 1 <167003>  # cond falseterm
add in 2 <167000 167003> out 1 <167004>  # cond result
const-mul-ffffffff in 1 <167004> out 1 <167005> # multiply-by-constant 4294967295
const-mul-ffffffff in 1 <166435> out 1 <167006> # multiply-by-constant 4294967295
add in 2 <166434 167006> out 1 <167007>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
mul in 2 <166469 167007> out 1 <167008>  # cond trueterm
const-mul-neg-1 in 1 <166469> out 1 <167009> # cond minuscond
add in 2 <100 167009> out 1 <167010>     # cond negcond
mul in 2 <167010 54> out 1 <167011>      # cond falseterm
add in 2 <167008 167011> out 1 <167012>  # cond result
const-mul-ffffffff in 1 <167012> out 1 <167013> # multiply-by-constant 4294967295
add in 2 <167012 55> out 1 <167014>      # ArithBusReq.AddReq(DFG.Conditional,DFG.Input)
split in 1 <167014> outplitBus
const-mul-2 in 1 <167046> out 1 <167246> # join source bit 31
add in 2 <167045 167246> out 1 <167247>  # join source bit 30
const-mul-2 in 1 <167247> out 1 <167248> # join
add in 2 <167044 167248> out 1 <167249>  # join source bit 29
const-mul-2 in 1 <167249> out 1 <167250> # join
add in 2 <167043 167250> out 1 <167251>  # join source bit 28
const-mul-2 in 1 <167251> out 1 <167252> # join
add in 2 <167042 167252> out 1 <167253>  # join source bit 27
const-mul-2 in 1 <167253> out 1 <167254> # join
add in 2 <167041 167254> out 1 <167255>  # join source bit 26
const-mul-2 in 1 <167255> out 1 <167256> # join
add in 2 <167040 167256> out 1 <167257>  # join source bit 25
const-mul-2 in 1 <167257> out 1 <167258> # join
add in 2 <167039 167258> out 1 <167259>  # join source bit 24
const-mul-2 in 1 <167259> out 1 <167260> # join
add in 2 <167038 167260> out 1 <167261>  # join source bit 23
const-mul-2 in 1 <167261> out 1 <167262> # join
add in 2 <167037 167262> out 1 <167263>  # join source bit 22
const-mul-2 in 1 <167263> out 1 <167264> # join
add in 2 <167036 167264> out 1 <167265>  # join source bit 21
const-mul-2 in 1 <167265> out 1 <167266> # join
add in 2 <167035 167266> out 1 <167267>  # join source bit 20
const-mul-2 in 1 <167267> out 1 <167268> # join
add in 2 <167034 167268> out 1 <167269>  # join source bit 19
const-mul-2 in 1 <167269> out 1 <167270> # join
add in 2 <167033 167270> out 1 <167271>  # join source bit 18
const-mul-2 in 1 <167271> out 1 <167272> # join
add in 2 <167032 167272> out 1 <167273>  # join source bit 17
const-mul-2 in 1 <167273> out 1 <167274> # join
add in 2 <167031 167274> out 1 <167275>  # join source bit 16
const-mul-2 in 1 <167275> out 1 <167276> # join
add in 2 <167030 167276> out 1 <167277>  # join source bit 15
const-mul-2 in 1 <167277> out 1 <167278> # join
add in 2 <167029 167278> out 1 <167279>  # join source bit 14
const-mul-2 in 1 <167279> out 1 <167280> # join
add in 2 <167028 167280> out 1 <167281>  # join source bit 13
const-mul-2 in 1 <167281> out 1 <167282> # join
add in 2 <167027 167282> out 1 <167283>  # join source bit 12
const-mul-2 in 1 <167283> out 1 <167284> # join
add in 2 <167026 167284> out 1 <167285>  # join source bit 11
const-mul-2 in 1 <167285> out 1 <167286> # join
add in 2 <167025 167286> out 1 <167287>  # join source bit 10
const-mul-2 in 1 <167287> out 1 <167288> # join
add in 2 <167024 167288> out 1 <167289>  # join source bit 9
const-mul-2 in 1 <167289> out 1 <167290> # join
add in 2 <167023 167290> out 1 <167291>  # join source bit 8
const-mul-2 in 1 <167291> out 1 <167292> # join
add in 2 <167022 167292> out 1 <167293>  # join source bit 7
const-mul-2 in 1 <167293> out 1 <167294> # join
add in 2 <167021 167294> out 1 <167295>  # join source bit 6
const-mul-2 in 1 <167295> out 1 <167296> # join
add in 2 <167020 167296> out 1 <167297>  # join source bit 5
const-mul-2 in 1 <167297> out 1 <167298> # join
add in 2 <167019 167298> out 1 <167299>  # join source bit 4
const-mul-2 in 1 <167299> out 1 <167300> # join
add in 2 <167018 167300> out 1 <167301>  # join source bit 3
const-mul-2 in 1 <167301> out 1 <167302> # join
add in 2 <167017 167302> out 1 <167303>  # join source bit 2
const-mul-2 in 1 <167303> out 1 <167304> # join
add in 2 <167016 167304> out 1 <167305>  # join source bit 1
const-mul-2 in 1 <167305> out 1 <167306> # join
add in 2 <167015 167306> out 1 <167307>  # join source bit 0
add in 2 <167307 167307> out 1 <167308>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <167012> out 1 <167309> # multiply-by-constant 4294967295
add in 2 <55 167309> out 1 <167310>      # 'CmpLT DFG.Input - DFG.Conditional'
split in 1 <167310> outplitBus
mul in 2 <167342 167308> out 1 <167574>  # cond trueterm
const-mul-neg-1 in 1 <167342> out 1 <167575> # cond minuscond
add in 2 <100 167575> out 1 <167576>     # cond negcond
mul in 2 <167576 167012> out 1 <167577>  # cond falseterm
add in 2 <167574 167577> out 1 <167578>  # cond result
add in 2 <167004 167578> out 1 <167579>  # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
split in 1 <167579> out 233 <167580 167581 167582 167583 167584 167585 167586 167587 167588 167589 167590 167591 167592 167593 167594 167595 167596 167597 167598 167599 167600 167601 167602 167603 167604 167605 167606 167607 167608 167609 167610 167611 167612 167613 167614 167615 167616 167617 167618 167619 167620 167621 167622 167623 167624 167625 167626 167627 167628 167629 167630 167631 167632 167633 167634 167635 167636 167637 167638 167639 167640 167641 167642 167643 167644 167645 167646 167647 167648 167649 167650 167651 167652 167653 167654 167655 167656 167657 167658 167659 167660 167661 167662 167663 167664 167665 167666 167667 167668 167669 167670 167671 167672 167673 167674 167675 167676 167677 167678 167679 167680 167681 167682 167683 167684 167685 167686 167687 167688 167689 167690 167691 167692 167693 167694 167695 167696 167697 167698 167699 167700 167701 167702 167703 167704 167705 167706 167707 167708 167709 167710 167711 167712 167713 167714 167715 167716 167717 167718 167719 167720 167721 167722 167723 167724 167725 167726 167727 167728 167729 167730 167731 167732 167733 167734 167735 167736 167737 167738 167739 167740 167741 167742 167743 167744 167745 167746 167747 167748 167749 167750 167751 167752 167753 167754 167755 167756 167757 167758 167759 167760 167761 167762 167763 167764 167765 167766 167767 167768 167769 167770 167771 167772 167773 167774 167775 167776 167777 167778 167779 167780 167781 167782 167783 167784 167785 167786 167787 167788 167789 167790 167791 167792 167793 167794 167795 167796 167797 167798 167799 167800 167801 167802 167803 167804 167805 167806 167807 167808 167809 167810 167811 167812> # SplitBus
const-mul-2 in 1 <167611> out 1 <167813> # join source bit 31
add in 2 <167610 167813> out 1 <167814>  # join source bit 30
const-mul-2 in 1 <167814> out 1 <167815> # join
add in 2 <167609 167815> out 1 <167816>  # join source bit 29
const-mul-2 in 1 <167816> out 1 <167817> # join
add in 2 <167608 167817> out 1 <167818>  # join source bit 28
const-mul-2 in 1 <167818> out 1 <167819> # join
add in 2 <167607 167819> out 1 <167820>  # join source bit 27
const-mul-2 in 1 <167820> out 1 <167821> # join
add in 2 <167606 167821> out 1 <167822>  # join source bit 26
const-mul-2 in 1 <167822> out 1 <167823> # join
add in 2 <167605 167823> out 1 <167824>  # join source bit 25
const-mul-2 in 1 <167824> out 1 <167825> # join
add in 2 <167604 167825> out 1 <167826>  # join source bit 24
const-mul-2 in 1 <167826> out 1 <167827> # join
add in 2 <167603 167827> out 1 <167828>  # join source bit 23
const-mul-2 in 1 <167828> out 1 <167829> # join
add in 2 <167602 167829> out 1 <167830>  # join source bit 22
const-mul-2 in 1 <167830> out 1 <167831> # join
add in 2 <167601 167831> out 1 <167832>  # join source bit 21
const-mul-2 in 1 <167832> out 1 <167833> # join
add in 2 <167600 167833> out 1 <167834>  # join source bit 20
const-mul-2 in 1 <167834> out 1 <167835> # join
add in 2 <167599 167835> out 1 <167836>  # join source bit 19
const-mul-2 in 1 <167836> out 1 <167837> # join
add in 2 <167598 167837> out 1 <167838>  # join source bit 18
const-mul-2 in 1 <167838> out 1 <167839> # join
add in 2 <167597 167839> out 1 <167840>  # join source bit 17
const-mul-2 in 1 <167840> out 1 <167841> # join
add in 2 <167596 167841> out 1 <167842>  # join source bit 16
const-mul-2 in 1 <167842> out 1 <167843> # join
add in 2 <167595 167843> out 1 <167844>  # join source bit 15
const-mul-2 in 1 <167844> out 1 <167845> # join
add in 2 <167594 167845> out 1 <167846>  # join source bit 14
const-mul-2 in 1 <167846> out 1 <167847> # join
add in 2 <167593 167847> out 1 <167848>  # join source bit 13
const-mul-2 in 1 <167848> out 1 <167849> # join
add in 2 <167592 167849> out 1 <167850>  # join source bit 12
const-mul-2 in 1 <167850> out 1 <167851> # join
add in 2 <167591 167851> out 1 <167852>  # join source bit 11
const-mul-2 in 1 <167852> out 1 <167853> # join
add in 2 <167590 167853> out 1 <167854>  # join source bit 10
const-mul-2 in 1 <167854> out 1 <167855> # join
add in 2 <167589 167855> out 1 <167856>  # join source bit 9
const-mul-2 in 1 <167856> out 1 <167857> # join
add in 2 <167588 167857> out 1 <167858>  # join source bit 8
const-mul-2 in 1 <167858> out 1 <167859> # join
add in 2 <167587 167859> out 1 <167860>  # join source bit 7
const-mul-2 in 1 <167860> out 1 <167861> # join
add in 2 <167586 167861> out 1 <167862>  # join source bit 6
const-mul-2 in 1 <167862> out 1 <167863> # join
add in 2 <167585 167863> out 1 <167864>  # join source bit 5
const-mul-2 in 1 <167864> out 1 <167865> # join
add in 2 <167584 167865> out 1 <167866>  # join source bit 4
const-mul-2 in 1 <167866> out 1 <167867> # join
add in 2 <167583 167867> out 1 <167868>  # join source bit 3
const-mul-2 in 1 <167868> out 1 <167869> # join
add in 2 <167582 167869> out 1 <167870>  # join source bit 2
const-mul-2 in 1 <167870> out 1 <167871> # join
add in 2 <167581 167871> out 1 <167872>  # join source bit 1
const-mul-2 in 1 <167872> out 1 <167873> # join
add in 2 <167580 167873> out 1 <167874>  # join source bit 0
add in 2 <167874 167874> out 1 <167875>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <167004> out 1 <167876> # multiply-by-constant 4294967295
add in 2 <167578 167876> out 1 <167877>  # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <167877> out 265 <167878 167879 167880 167881 167882 167883 167884 167885 167886 167887 167888 167889 167890 167891 167892 167893 167894 167895 167896 167897 167898 167899 167900 167901 167902 167903 167904 167905 167906 167907 167908 167909 167910 167911 167912 167913 167914 167915 167916 167917 167918 167919 167920 167921 167922 167923 167924 167925 167926 167927 167928 167929 167930 167931 167932 167933 167934 167935 167936 167937 167938 167939 167940 167941 167942 167943 167944 167945 167946 167947 167948 167949 167950 167951 167952 167953 167954 167955 167956 167957 167958 167959 167960 167961 167962 167963 167964 167965 167966 167967 167968 167969 167970 167971 167972 167973 167974 167975 167976 167977 167978 167979 167980 167981 167982 167983 167984 167985 167986 167987 167988 167989 167990 167991 167992 167993 167994 167995 167996 167997 167998 167999 168000 168001 168002 168003 168004 168005 168006 168007 168008 168009 168010 168011 168012 168013 168014 168015 168016 168017 168018 168019 168020 168021 168022 168023 168024 168025 168026 168027 168028 168029 168030 168031 168032 168033 168034 168035 168036 168037 168038 168039 168040 168041 168042 168043 168044 168045 168046 168047 168048 168049 168050 168051 168052 168053 168054 168055 168056 168057 168058 168059 168060 168061 168062 168063 168064 168065 168066 168067 168068 168069 168070 168071 168072 168073 168074 168075 168076 168077 168078 168079 168080 168081 168082 168083 168084 168085 168086 168087 168088 168089 168090 168091 168092 168093 168094 168095 168096 168097 168098 168099 168100 168101 168102 168103 168104 168105 168106 168107 168108 168109 168110 168111 168112 168113 168114 168115 168116 168117 168118 168119 168120 168121 168122 168123 168124 168125 168126 168127 168128 168129 168130 168131 168132 168133 168134 168135 168136 168137 168138 168139 168140 168141 168142> # SplitBus
mul in 2 <167909 167875> out 1 <168143>  # cond trueterm
const-mul-neg-1 in 1 <167909> out 1 <168144> # cond minuscond
add in 2 <100 168144> out 1 <168145>     # cond negcond
mul in 2 <168145 167004> out 1 <168146>  # cond falseterm
add in 2 <168143 168146> out 1 <168147>  # cond result
mul in 2 <166832 166796> out 1 <168148>  # cond trueterm
const-mul-neg-1 in 1 <166832> out 1 <168149> # cond minuscond
add in 2 <100 168149> out 1 <168150>     # cond negcond
mul in 2 <168150 166793> out 1 <168151>  # cond falseterm
add in 2 <168148 168151> out 1 <168152>  # cond result
mul in 2 <166688 166652> out 1 <168153>  # cond trueterm
const-mul-neg-1 in 1 <166688> out 1 <168154> # cond minuscond
add in 2 <100 168154> out 1 <168155>     # cond negcond
mul in 2 <168155 166649> out 1 <168156>  # cond falseterm
add in 2 <168153 168156> out 1 <168157>  # cond result
const-mul-ffffffff in 1 <168157> out 1 <168158> # multiply-by-constant 4294967295
add in 2 <168157 168152> out 1 <168159>  # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
add in 2 <168159 168158> out 1 <168160>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <168160> out 1 <168161> # multiply-by-constant 4294967295
add in 2 <168159 168161> out 1 <168162>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <168157> out 1 <168163> # multiply-by-constant 4294967295
add in 2 <168152 168163> out 1 <168164>  # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <168164> out 200 <168165 168166 168167 168168 168169 168170 168171 168172 168173 168174 168175 168176 168177 168178 168179 168180 168181 168182 168183 168184 168185 168186 168187 168188 168189 168190 168191 168192 168193 168194 168195 168196 168197 168198 168199 168200 168201 168202 168203 168204 168205 168206 168207 168208 168209 168210 168211 168212 168213 168214 168215 168216 168217 168218 168219 168220 168221 168222 168223 168224 168225 168226 168227 168228 168229 168230 168231 168232 168233 168234 168235 168236 168237 168238 168239 168240 168241 168242 168243 168244 168245 168246 168247 168248 168249 168250 168251 168252 168253 168254 168255 168256 168257 168258 168259 168260 168261 168262 168263 168264 168265 168266 168267 168268 168269 168270 168271 168272 168273 168274 168275 168276 168277 168278 168279 168280 168281 168282 168283 168284 168285 168286 168287 168288 168289 168290 168291 168292 168293 168294 168295 168296 168297 168298 168299 168300 168301 168302 168303 168304 168305 168306 168307 168308 168309 168310 168311 168312 168313 168314 168315 168316 168317 168318 168319 168320 168321 168322 168323 168324 168325 168326 168327 168328 168329 168330 168331 168332 168333 168334 168335 168336 168337 168338 168339 168340 168341 168342 168343 168344 168345 168346 168347 168348 168349 168350 168351 168352 168353 168354 168355 168356 168357 168358 168359 168360 168361 168362 168363 168364> # SplitBus
mul in 2 <168196 168162> out 1 <168365>  # cond trueterm
const-mul-neg-1 in 1 <168196> out 1 <168366> # cond minuscond
add in 2 <100 168366> out 1 <168367>     # cond negcond
mul in 2 <168367 168152> out 1 <168368>  # cond falseterm
add in 2 <168365 168368> out 1 <168369>  # cond result
const-mul-ffffffff in 1 <168369> out 1 <168370> # multiply-by-constant 4294967295
add in 2 <168369 168147> out 1 <168371>  # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
split in 1 <168371> out 235 <168372 168373 168374 168375 168376 168377 168378 168379 168380 168381 168382 168383 168384 168385 168386 168387 168388 168389 168390 168391 168392 168393 168394 168395 168396 168397 168398 168399 168400 168401 168402 168403 168404 168405 168406 168407 168408 168409 168410 168411 168412 168413 168414 168415 168416 168417 168418 168419 168420 168421 168422 168423 168424 168425 168426 168427 168428 168429 168430 168431 168432 168433 168434 168435 168436 168437 168438 168439 168440 168441 168442 168443 168444 168445 168446 168447 168448 168449 168450 168451 168452 168453 168454 168455 168456 168457 168458 168459 168460 168461 168462 168463 168464 168465 168466 168467 168468 168469 168470 168471 168472 168473 168474 168475 168476 168477 168478 168479 168480 168481 168482 168483 168484 168485 168486 168487 168488 168489 168490 168491 168492 168493 168494 168495 168496 168497 168498 168499 168500 168501 168502 168503 168504 168505 168506 168507 168508 168509 168510 168511 168512 168513 168514 168515 168516 168517 168518 168519 168520 168521 168522 168523 168524 168525 168526 168527 168528 168529 168530 168531 168532 168533 168534 168535 168536 168537 168538 168539 168540 168541 168542 168543 168544 168545 168546 168547 168548 168549 168550 168551 168552 168553 168554 168555 168556 168557 168558 168559 168560 168561 168562 168563 168564 168565 168566 168567 168568 168569 168570 168571 168572 168573 168574 168575 168576 168577 168578 168579 168580 168581 168582 168583 168584 168585 168586 168587 168588 168589 168590 168591 168592 168593 168594 168595 168596 168597 168598 168599 168600 168601 168602 168603 168604 168605 168606> # SplitBus
const-mul-2 in 1 <168403> out 1 <168607> # join source bit 31
add in 2 <168402 168607> out 1 <168608>  # join source bit 30
const-mul-2 in 1 <168608> out 1 <168609> # join
add in 2 <168401 168609> out 1 <168610>  # join source bit 29
const-mul-2 in 1 <168610> out 1 <168611> # join
add in 2 <168400 168611> out 1 <168612>  # join source bit 28
const-mul-2 in 1 <168612> out 1 <168613> # join
add in 2 <168399 168613> out 1 <168614>  # join source bit 27
const-mul-2 in 1 <168614> out 1 <168615> # join
add in 2 <168398 168615> out 1 <168616>  # join source bit 26
const-mul-2 in 1 <168616> out 1 <168617> # join
add in 2 <168397 168617> out 1 <168618>  # join source bit 25
const-mul-2 in 1 <168618> out 1 <168619> # join
add in 2 <168396 168619> out 1 <168620>  # join source bit 24
const-mul-2 in 1 <168620> out 1 <168621> # join
add in 2 <168395 168621> out 1 <168622>  # join source bit 23
const-mul-2 in 1 <168622> out 1 <168623> # join
add in 2 <168394 168623> out 1 <168624>  # join source bit 22
const-mul-2 in 1 <168624> out 1 <168625> # join
add in 2 <168393 168625> out 1 <168626>  # join source bit 21
const-mul-2 in 1 <168626> out 1 <168627> # join
add in 2 <168392 168627> out 1 <168628>  # join source bit 20
const-mul-2 in 1 <168628> out 1 <168629> # join
add in 2 <168391 168629> out 1 <168630>  # join source bit 19
const-mul-2 in 1 <168630> out 1 <168631> # join
add in 2 <168390 168631> out 1 <168632>  # join source bit 18
const-mul-2 in 1 <168632> out 1 <168633> # join
add in 2 <168389 168633> out 1 <168634>  # join source bit 17
const-mul-2 in 1 <168634> out 1 <168635> # join
add in 2 <168388 168635> out 1 <168636>  # join source bit 16
const-mul-2 in 1 <168636> out 1 <168637> # join
add in 2 <168387 168637> out 1 <168638>  # join source bit 15
const-mul-2 in 1 <168638> out 1 <168639> # join
add in 2 <168386 168639> out 1 <168640>  # join source bit 14
const-mul-2 in 1 <168640> out 1 <168641> # join
add in 2 <168385 168641> out 1 <168642>  # join source bit 13
const-mul-2 in 1 <168642> out 1 <168643> # join
add in 2 <168384 168643> out 1 <168644>  # join source bit 12
const-mul-2 in 1 <168644> out 1 <168645> # join
add in 2 <168383 168645> out 1 <168646>  # join source bit 11
const-mul-2 in 1 <168646> out 1 <168647> # join
add in 2 <168382 168647> out 1 <168648>  # join source bit 10
const-mul-2 in 1 <168648> out 1 <168649> # join
add in 2 <168381 168649> out 1 <168650>  # join source bit 9
const-mul-2 in 1 <168650> out 1 <168651> # join
add in 2 <168380 168651> out 1 <168652>  # join source bit 8
const-mul-2 in 1 <168652> out 1 <168653> # join
add in 2 <168379 168653> out 1 <168654>  # join source bit 7
const-mul-2 in 1 <168654> out 1 <168655> # join
add in 2 <168378 168655> out 1 <168656>  # join source bit 6
const-mul-2 in 1 <168656> out 1 <168657> # join
add in 2 <168377 168657> out 1 <168658>  # join source bit 5
const-mul-2 in 1 <168658> out 1 <168659> # join
add in 2 <168376 168659> out 1 <168660>  # join source bit 4
const-mul-2 in 1 <168660> out 1 <168661> # join
add in 2 <168375 168661> out 1 <168662>  # join source bit 3
const-mul-2 in 1 <168662> out 1 <168663> # join
add in 2 <168374 168663> out 1 <168664>  # join source bit 2
const-mul-2 in 1 <168664> out 1 <168665> # join
add in 2 <168373 168665> out 1 <168666>  # join source bit 1
const-mul-2 in 1 <168666> out 1 <168667> # join
add in 2 <168372 168667> out 1 <168668>  # join source bit 0
add in 2 <168668 168668> out 1 <168669>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <168669> out 1 <168670> # multiply-by-constant 4294967295
add in 2 <168371 168670> out 1 <168671>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <168369> out 1 <168672> # multiply-by-constant 4294967295
add in 2 <168147 168672> out 1 <168673>  # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <168673> out 267 <168674 168675 168676 168677 168678 168679 168680 168681 168682 168683 168684 168685 168686 168687 168688 168689 168690 168691 168692 168693 168694 168695 168696 168697 168698 168699 168700 168701 168702 168703 168704 168705 168706 168707 168708 168709 168710 168711 168712 168713 168714 168715 168716 168717 168718 168719 168720 168721 168722 168723 168724 168725 168726 168727 168728 168729 168730 168731 168732 168733 168734 168735 168736 168737 168738 168739 168740 168741 168742 168743 168744 168745 168746 168747 168748 168749 168750 168751 168752 168753 168754 168755 168756 168757 168758 168759 168760 168761 168762 168763 168764 168765 168766 168767 168768 168769 168770 168771 168772 168773 168774 168775 168776 168777 168778 168779 168780 168781 168782 168783 168784 168785 168786 168787 168788 168789 168790 168791 168792 168793 168794 168795 168796 168797 168798 168799 168800 168801 168802 168803 168804 168805 168806 168807 168808 168809 168810 168811 168812 168813 168814 168815 168816 168817 168818 168819 168820 168821 168822 168823 168824 168825 168826 168827 168828 168829 168830 168831 168832 168833 168834 168835 168836 168837 168838 168839 168840 168841 168842 168843 168844 168845 168846 168847 168848 168849 168850 168851 168852 168853 168854 168855 168856 168857 168858 168859 168860 168861 168862 168863 168864 168865 168866 168867 168868 168869 168870 168871 168872 168873 168874 168875 168876 168877 168878 168879 168880 168881 168882 168883 168884 168885 168886 168887 168888 168889 168890 168891 168892 168893 168894 168895 168896 168897 168898 168899 168900 168901 168902 168903 168904 168905 168906 168907 168908 168909 168910 168911 168912 168913 168914 168915 168916 168917 168918 168919 168920 168921 168922 168923 168924 168925 168926 168927 168928 168929 168930 168931 168932 168933 168934 168935 168936 168937 168938 168939 168940> # SplitBus
mul in 2 <168705 168671> out 1 <168941>  # cond trueterm
const-mul-neg-1 in 1 <168705> out 1 <168942> # cond minuscond
add in 2 <100 168942> out 1 <168943>     # cond negcond
mul in 2 <168943 168147> out 1 <168944>  # cond falseterm
add in 2 <168941 168944> out 1 <168945>  # cond result
add in 2 <168945 104> out 1 <168946>     # ArithBusReq.AddReq(DFG.Conditional,DFG.Constant)
const-mul-ffffffff in 1 <53> out 1 <168947> # multiply-by-constant 4294967295
add in 2 <168946 168947> out 1 <168948>  # 'CmpLT DFG.Add - DFG.Input'
split in 1 <168948> out 238 <168949 168950 168951 168952 168953 168954 168955 168956 168957 168958 168959 168960 168961 168962 168963 168964 168965 168966 168967 168968 168969 168970 168971 168972 168973 168974 168975 168976 168977 168978 168979 168980 168981 168982 168983 168984 168985 168986 168987 168988 168989 168990 168991 168992 168993 168994 168995 168996 168997 168998 168999 169000 169001 169002 169003 169004 169005 169006 169007 169008 169009 169010 169011 169012 169013 169014 169015 169016 169017 169018 169019 169020 169021 169022 169023 169024 169025 169026 169027 169028 169029 169030 169031 169032 169033 169034 169035 169036 169037 169038 169039 169040 169041 169042 169043 169044 169045 169046 169047 169048 169049 169050 169051 169052 169053 169054 169055 169056 169057 169058 169059 169060 169061 169062 169063 169064 169065 169066 169067 169068 169069 169070 169071 169072 169073 169074 169075 169076 169077 169078 169079 169080 169081 169082 169083 169084 169085 169086 169087 169088 169089 169090 169091 169092 169093 169094 169095 169096 169097 169098 169099 169100 169101 169102 169103 169104 169105 169106 169107 169108 169109 169110 169111 169112 169113 169114 169115 169116 169117 169118 169119 169120 169121 169122 169123 169124 169125 169126 169127 169128 169129 169130 169131 169132 169133 169134 169135 169136 169137 169138 169139 169140 169141 169142 169143 169144 169145 169146 169147 169148 169149 169150 169151 169152 169153 169154 169155 169156 169157 169158 169159 169160 169161 169162 169163 169164 169165 169166 169167 169168 169169 169170 169171 169172 169173 169174 169175 169176 169177 169178 169179 169180 169181 169182 169183 169184 169185 169186> # SplitBus
mul in 2 <168980 103> out 1 <169187>     # cond trueterm
const-mul-neg-1 in 1 <168980> out 1 <169188> # cond minuscond
add in 2 <100 169188> out 1 <169189>     # cond negcond
mul in 2 <169189 102> out 1 <169190>     # cond falseterm
add in 2 <169187 169190> out 1 <169191>  # cond result
add in 2 <168945 3084> out 1 <169192>    # ArithBusReq.AddReq(DFG.Conditional,DFG.Negate)
const-mul-ffffffff in 1 <169192> out 1 <169193> # multiply-by-constant 4294967295
add in 2 <53 169193> out 1 <169194>      # 'CmpLT DFG.Input - DFG.Subtract'
split in 1 <169194> outplitBus
mul in 2 <169226 103> out 1 <169465>     # cond trueterm
const-mul-neg-1 in 1 <169226> out 1 <169466> # cond minuscond
add in 2 <100 169466> out 1 <169467>     # cond negcond
mul in 2 <169467 169191> out 1 <169468>  # cond falseterm
add in 2 <169465 169468> out 1 <169469>  # cond result
const-mul-ffffffff in 1 <52> out 1 <169470> # multiply-by-constant 4294967295
add in 2 <52 53> out 1 <169471>          # ArithBusReq.AddReq(DFG.Input,DFG.Input)
add in 2 <169471 169470> out 1 <169472>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <169472> out 1 <169473> # multiply-by-constant 4294967295
add in 2 <169471 169473> out 1 <169474>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <52> out 1 <169475> # multiply-by-constant 4294967295
add in 2 <53 169475> out 1 <169476>      # 'CmpLT DFG.Input - DFG.Input'
split in 1 <169476> out 65 <169477 169478 169479 169480 169481 169482 169483 169484 169485 169486 169487 169488 169489 169490 169491 169492 169493 169494 169495 169496 169497 169498 169499 169500 169501 169502 169503 169504 169505 169506 169507 169508 169509 169510 169511 169512 169513 169514 169515 169516 169517 169518 169519 169520 169521 169522 169523 169524 169525 169526 169527 169528 169529 169530 169531 169532 169533 169534 169535 169536 169537 169538 169539 169540 169541> # SplitBus
mul in 2 <169508 169474> out 1 <169542>  # cond trueterm
const-mul-neg-1 in 1 <169508> out 1 <169543> # cond minuscond
add in 2 <100 169543> out 1 <169544>     # cond negcond
mul in 2 <169544 53> out 1 <169545>      # cond falseterm
add in 2 <169542 169545> out 1 <169546>  # cond result
const-mul-ffffffff in 1 <169546> out 1 <169547> # multiply-by-constant 4294967295
add in 2 <169546 54> out 1 <169548>      # ArithBusReq.AddReq(DFG.Conditional,DFG.Input)
add in 2 <169548 169547> out 1 <169549>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <169549> out 1 <169550> # multiply-by-constant 4294967295
add in 2 <169548 169550> out 1 <169551>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <169546> out 1 <169552> # multiply-by-constant 4294967295
add in 2 <54 169552> out 1 <169553>      # 'CmpLT DFG.Input - DFG.Conditional'
split in 1 <169553> out 131 <169554 169555 169556 169557 169558 169559 169560 169561 169562 169563 169564 169565 169566 169567 169568 169569 169570 169571 169572 169573 169574 169575 169576 169577 169578 169579 169580 169581 169582 169583 169584 169585 169586 169587 169588 169589 169590 169591 169592 169593 169594 169595 169596 169597 169598 169599 169600 169601 169602 169603 169604 169605 169606 169607 169608 169609 169610 169611 169612 169613 169614 169615 169616 169617 169618 169619 169620 169621 169622 169623 169624 169625 169626 169627 169628 169629 169630 169631 169632 169633 169634 169635 169636 169637 169638 169639 169640 169641 169642 169643 169644 169645 169646 169647 169648 169649 169650 169651 169652 169653 169654 169655 169656 169657 169658 169659 169660 169661 169662 169663 169664 169665 169666 169667 169668 169669 169670 169671 169672 169673 169674 169675 169676 169677 169678 169679 169680 169681 169682 169683 169684> # SplitBus
mul in 2 <169585 169551> out 1 <169685>  # cond trueterm
const-mul-neg-1 in 1 <169585> out 1 <169686> # cond minuscond
add in 2 <100 169686> out 1 <169687>     # cond negcond
mul in 2 <169687 54> out 1 <169688>      # cond falseterm
add in 2 <169685 169688> out 1 <169689>  # cond result
const-mul-ffffffff in 1 <169689> out 1 <169690> # multiply-by-constant 4294967295
add in 2 <169689 55> out 1 <169691>      # ArithBusReq.AddReq(DFG.Conditional,DFG.Input)
add in 2 <169691 169690> out 1 <169692>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <169689> out 1 <169693> # multiply-by-constant 4294967295
add in 2 <55 169693> out 1 <169694>      # 'CmpLT DFG.Input - DFG.Conditional'
split in 1 <169694> out 197 <169695 169696 169697 169698 169699 169700 169701 169702 169703 169704 169705 169706 169707 169708 169709 169710 169711 169712 169713 169714 169715 169716 169717 169718 169719 169720 169721 169722 169723 169724 169725 169726 169727 169728 169729 169730 169731 169732 169733 169734 169735 169736 169737 169738 169739 169740 169741 169742 169743 169744 169745 169746 169747 169748 169749 169750 169751 169752 169753 169754 169755 169756 169757 169758 169759 169760 169761 169762 169763 169764 169765 169766 169767 169768 169769 169770 169771 169772 169773 169774 169775 169776 169777 169778 169779 169780 169781 169782 169783 169784 169785 169786 169787 169788 169789 169790 169791 169792 169793 169794 169795 169796 169797 169798 169799 169800 169801 169802 169803 169804 169805 169806 169807 169808 169809 169810 169811 169812 169813 169814 169815 169816 169817 169818 169819 169820 169821 169822 169823 169824 169825 169826 169827 169828 169829 169830 169831 169832 169833 169834 169835 169836 169837 169838 169839 169840 169841 169842 169843 169844 169845 169846 169847 169848 169849 169850 169851 169852 169853 169854 169855 169856 169857 169858 169859 169860 169861 169862 169863 169864 169865 169866 169867 169868 169869 169870 169871 169872 169873 169874 169875 169876 169877 169878 169879 169880 169881 169882 169883 169884 169885 169886 169887 169888 169889 169890 169891> # SplitBus
mul in 2 <169726 169692> out 1 <169892>  # cond trueterm
const-mul-neg-1 in 1 <169726> out 1 <169893> # cond minuscond
add in 2 <100 169893> out 1 <169894>     # cond negcond
mul in 2 <169894 169689> out 1 <169895>  # cond falseterm
add in 2 <169892 169895> out 1 <169896>  # cond result
mul in 2 <169585 169549> out 1 <169897>  # cond trueterm
const-mul-neg-1 in 1 <169585> out 1 <169898> # cond minuscond
add in 2 <100 169898> out 1 <169899>     # cond negcond
mul in 2 <169899 169546> out 1 <169900>  # cond falseterm
add in 2 <169897 169900> out 1 <169901>  # cond result
mul in 2 <169508 169472> out 1 <169902>  # cond trueterm
const-mul-neg-1 in 1 <169508> out 1 <169903> # cond minuscond
add in 2 <100 169903> out 1 <169904>     # cond negcond
mul in 2 <169904 52> out 1 <169905>      # cond falseterm
add in 2 <169902 169905> out 1 <169906>  # cond result
const-mul-ffffffff in 1 <169906> out 1 <169907> # multiply-by-constant 4294967295
add in 2 <169906 169901> out 1 <169908>  # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
add in 2 <169908 169907> out 1 <169909>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <169909> out 1 <169910> # multiply-by-constant 4294967295
add in 2 <169908 169910> out 1 <169911>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <169906> out 1 <169912> # multiply-by-constant 4294967295
add in 2 <169901 169912> out 1 <169913>  # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <169913> out 132 <169914 169915 169916 169917 169918 169919 169920 169921 169922 169923 169924 169925 169926 169927 169928 169929 169930 169931 169932 169933 169934 169935 169936 169937 169938 169939 169940 169941 169942 169943 169944 169945 169946 169947 169948 169949 169950 169951 169952 169953 169954 169955 169956 169957 169958 169959 169960 169961 169962 169963 169964 169965 169966 169967 169968 169969 169970 169971 169972 169973 169974 169975 169976 169977 169978 169979 169980 169981 169982 169983 169984 169985 169986 169987 169988 169989 169990 169991 169992 169993 169994 169995 169996 169997 169998 169999 170000 170001 170002 170003 170004 170005 170006 170007 170008 170009 170010 170011 170012 170013 170014 170015 170016 170017 170018 170019 170020 170021 170022 170023 170024 170025 170026 170027 170028 170029 170030 170031 170032 170033 170034 170035 170036 170037 170038 170039 170040 170041 170042 170043 170044 170045> # SplitBus
mul in 2 <169945 169911> out 1 <170046>  # cond trueterm
const-mul-neg-1 in 1 <169945> out 1 <170047> # cond minuscond
add in 2 <100 170047> out 1 <170048>     # cond negcond
mul in 2 <170048 169901> out 1 <170049>  # cond falseterm
add in 2 <170046 170049> out 1 <170050>  # cond result
const-mul-ffffffff in 1 <170050> out 1 <170051> # multiply-by-constant 4294967295
add in 2 <170050 169896> out 1 <170052>  # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
add in 2 <170052 170051> out 1 <170053>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <170053> out 1 <170054> # multiply-by-constant 4294967295
add in 2 <170052 170054> out 1 <170055>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <170050> out 1 <170056> # multiply-by-constant 4294967295
add in 2 <169896 170056> out 1 <170057>  # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <170057> out 199 <170058 170059 170060 170061 170062 170063 170064 170065 170066 170067 170068 170069 170070 170071 170072 170073 170074 170075 170076 170077 170078 170079 170080 170081 170082 170083 170084 170085 170086 170087 170088 170089 170090 170091 170092 170093 170094 170095 170096 170097 170098 170099 170100 170101 170102 170103 170104 170105 170106 170107 170108 170109 170110 170111 170112 170113 170114 170115 170116 170117 170118 170119 170120 170121 170122 170123 170124 170125 170126 170127 170128 170129 170130 170131 170132 170133 170134 170135 170136 170137 170138 170139 170140 170141 170142 170143 170144 170145 170146 170147 170148 170149 170150 170151 170152 170153 170154 170155 170156 170157 170158 170159 170160 170161 170162 170163 170164 170165 170166 170167 170168 170169 170170 170171 170172 170173 170174 170175 170176 170177 170178 170179 170180 170181 170182 170183 170184 170185 170186 170187 170188 170189 170190 170191 170192 170193 170194 170195 170196 170197 170198 170199 170200 170201 170202 170203 170204 170205 170206 170207 170208 170209 170210 170211 170212 170213 170214 170215 170216 170217 170218 170219 170220 170221 170222 170223 170224 170225 170226 170227 170228 170229 170230 170231 170232 170233 170234 170235 170236 170237 170238 170239 170240 170241 170242 170243 170244 170245 170246 170247 170248 170249 170250 170251 170252 170253 170254 170255 170256> # SplitBus
mul in 2 <170089 170055> out 1 <170257>  # cond trueterm
const-mul-neg-1 in 1 <170089> out 1 <170258> # cond minuscond
add in 2 <100 170258> out 1 <170259>     # cond negcond
mul in 2 <170259 169896> out 1 <170260>  # cond falseterm
add in 2 <170257 170260> out 1 <170261>  # cond result
const-mul-ffffffff in 1 <170261> out 1 <170262> # multiply-by-constant 4294967295
const-mul-ffffffff in 1 <169692> out 1 <170263> # multiply-by-constant 4294967295
add in 2 <169691 170263> out 1 <170264>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
mul in 2 <169726 170264> out 1 <170265>  # cond trueterm
const-mul-neg-1 in 1 <169726> out 1 <170266> # cond minuscond
add in 2 <100 170266> out 1 <170267>     # cond negcond
mul in 2 <170267 55> out 1 <170268>      # cond falseterm
add in 2 <170265 170268> out 1 <170269>  # cond result
const-mul-ffffffff in 1 <170269> out 1 <170270> # multiply-by-constant 4294967295
add in 2 <170269 56> out 1 <170271>      # ArithBusReq.AddReq(DFG.Conditional,DFG.Input)
split in 1 <170271> out 231 <170272 170273 170274 170275 170276 170277 170278 170279 170280 170281 170282 170283 170284 170285 170286 170287 170288 170289 170290 170291 170292 170293 170294 170295 170296 170297 170298 170299 170300 170301 170302 170303 170304 170305 170306 170307 170308 170309 170310 170311 170312 170313 170314 170315 170316 170317 170318 170319 170320 170321 170322 170323 170324 170325 170326 170327 170328 170329 170330 170331 170332 170333 170334 170335 170336 170337 170338 170339 170340 170341 170342 170343 170344 170345 170346 170347 170348 170349 170350 170351 170352 170353 170354 170355 170356 170357 170358 170359 170360 170361 170362 170363 170364 170365 170366 170367 170368 170369 170370 170371 170372 170373 170374 170375 170376 170377 170378 170379 170380 170381 170382 170383 170384 170385 170386 170387 170388 170389 170390 170391 170392 170393 170394 170395 170396 170397 170398 170399 170400 170401 170402 170403 170404 170405 170406 170407 170408 170409 170410 170411 170412 170413 170414 170415 170416 170417 170418 170419 170420 170421 170422 170423 170424 170425 170426 170427 170428 170429 170430 170431 170432 170433 170434 170435 170436 170437 170438 170439 170440 170441 170442 170443 170444 170445 170446 170447 170448 170449 170450 170451 170452 170453 170454 170455 170456 170457 170458 170459 170460 170461 170462 170463 170464 170465 170466 170467 170468 170469 170470 170471 170472 170473 170474 170475 170476 170477 170478 170479 170480 170481 170482 170483 170484 170485 170486 170487 170488 170489 170490 170491 170492 170493 170494 170495 170496 170497 170498 170499 170500 170501 170502> # SplitBus
const-mul-2 in 1 <170303> out 1 <170503> # join source bit 31
add in 2 <170302 170503> out 1 <170504>  # join source bit 30
const-mul-2 in 1 <170504> out 1 <170505> # join
add in 2 <170301 170505> out 1 <170506>  # join source bit 29
const-mul-2 in 1 <170506> out 1 <170507> # join
add in 2 <170300 170507> out 1 <170508>  # join source bit 28
const-mul-2 in 1 <170508> out 1 <170509> # join
add in 2 <170299 170509> out 1 <170510>  # join source bit 27
const-mul-2 in 1 <170510> out 1 <170511> # join
add in 2 <170298 170511> out 1 <170512>  # join source bit 26
const-mul-2 in 1 <170512> out 1 <170513> # join
add in 2 <170297 170513> out 1 <170514>  # join source bit 25
const-mul-2 in 1 <170514> out 1 <170515> # join
add in 2 <170296 170515> out 1 <170516>  # join source bit 24
const-mul-2 in 1 <170516> out 1 <170517> # join
add in 2 <170295 170517> out 1 <170518>  # join source bit 23
const-mul-2 in 1 <170518> out 1 <170519> # join
add in 2 <170294 170519> out 1 <170520>  # join source bit 22
const-mul-2 in 1 <170520> out 1 <170521> # join
add in 2 <170293 170521> out 1 <170522>  # join source bit 21
const-mul-2 in 1 <170522> out 1 <170523> # join
add in 2 <170292 170523> out 1 <170524>  # join source bit 20
const-mul-2 in 1 <170524> out 1 <170525> # join
add in 2 <170291 170525> out 1 <170526>  # join source bit 19
const-mul-2 in 1 <170526> out 1 <170527> # join
add in 2 <170290 170527> out 1 <170528>  # join source bit 18
const-mul-2 in 1 <170528> out 1 <170529> # join
add in 2 <170289 170529> out 1 <170530>  # join source bit 17
const-mul-2 in 1 <170530> out 1 <170531> # join
add in 2 <170288 170531> out 1 <170532>  # join source bit 16
const-mul-2 in 1 <170532> out 1 <170533> # join
add in 2 <170287 170533> out 1 <170534>  # join source bit 15
const-mul-2 in 1 <170534> out 1 <170535> # join
add in 2 <170286 170535> out 1 <170536>  # join source bit 14
const-mul-2 in 1 <170536> out 1 <170537> # join
add in 2 <170285 170537> out 1 <170538>  # join source bit 13
const-mul-2 in 1 <170538> out 1 <170539> # join
add in 2 <170284 170539> out 1 <170540>  # join source bit 12
const-mul-2 in 1 <170540> out 1 <170541> # join
add in 2 <170283 170541> out 1 <170542>  # join source bit 11
const-mul-2 in 1 <170542> out 1 <170543> # join
add in 2 <170282 170543> out 1 <170544>  # join source bit 10
const-mul-2 in 1 <170544> out 1 <170545> # join
add in 2 <170281 170545> out 1 <170546>  # join source bit 9
const-mul-2 in 1 <170546> out 1 <170547> # join
add in 2 <170280 170547> out 1 <170548>  # join source bit 8
const-mul-2 in 1 <170548> out 1 <170549> # join
add in 2 <170279 170549> out 1 <170550>  # join source bit 7
const-mul-2 in 1 <170550> out 1 <170551> # join
add in 2 <170278 170551> out 1 <170552>  # join source bit 6
const-mul-2 in 1 <170552> out 1 <170553> # join
add in 2 <170277 170553> out 1 <170554>  # join source bit 5
const-mul-2 in 1 <170554> out 1 <170555> # join
add in 2 <170276 170555> out 1 <170556>  # join source bit 4
const-mul-2 in 1 <170556> out 1 <170557> # join
add in 2 <170275 170557> out 1 <170558>  # join source bit 3
const-mul-2 in 1 <170558> out 1 <170559> # join
add in 2 <170274 170559> out 1 <170560>  # join source bit 2
const-mul-2 in 1 <170560> out 1 <170561> # join
add in 2 <170273 170561> out 1 <170562>  # join source bit 1
const-mul-2 in 1 <170562> out 1 <170563> # join
add in 2 <170272 170563> out 1 <170564>  # join source bit 0
add in 2 <170564 170564> out 1 <170565>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <170269> out 1 <170566> # multiply-by-constant 4294967295
add in 2 <56 170566> out 1 <170567>      # 'CmpLT DFG.Input - DFG.Conditional'
split in 1 <170567> out 263 <170568 170569 170570 170571 170572 170573 170574 170575 170576 170577 170578 170579 170580 170581 170582 170583 170584 170585 170586 170587 170588 170589 170590 170591 170592 170593 170594 170595 170596 170597 170598 170599 170600 170601 170602 170603 170604 170605 170606 170607 170608 170609 170610 170611 170612 170613 170614 170615 170616 170617 170618 170619 170620 170621 170622 170623 170624 170625 170626 170627 170628 170629 170630 170631 170632 170633 170634 170635 170636 170637 170638 170639 170640 170641 170642 170643 170644 170645 170646 170647 170648 170649 170650 170651 170652 170653 170654 170655 170656 170657 170658 170659 170660 170661 170662 170663 170664 170665 170666 170667 170668 170669 170670 170671 170672 170673 170674 170675 170676 170677 170678 170679 170680 170681 170682 170683 170684 170685 170686 170687 170688 170689 170690 170691 170692 170693 170694 170695 170696 170697 170698 170699 170700 170701 170702 170703 170704 170705 170706 170707 170708 170709 170710 170711 170712 170713 170714 170715 170716 170717 170718 170719 170720 170721 170722 170723 170724 170725 170726 170727 170728 170729 170730 170731 170732 170733 170734 170735 170736 170737 170738 170739 170740 170741 170742 170743 170744 170745 170746 170747 170748 170749 170750 170751 170752 170753 170754 170755 170756 170757 170758 170759 170760 170761 170762 170763 170764 170765 170766 170767 170768 170769 170770 170771 170772 170773 170774 170775 170776 170777 170778 170779 170780 170781 170782 170783 170784 170785 170786 170787 170788 170789 170790 170791 170792 170793 170794 170795 170796 170797 170798 170799 170800 170801 170802 170803 170804 170805 170806 170807 170808 170809 170810 170811 170812 170813 170814 170815 170816 170817 170818 170819 170820 170821 170822 170823 170824 170825 170826 170827 170828 170829 170830> # SplitBus
mul in 2 <170599 170565> out 1 <170831>  # cond trueterm
const-mul-neg-1 in 1 <170599> out 1 <170832> # cond minuscond
add in 2 <100 170832> out 1 <170833>     # cond negcond
mul in 2 <170833 170269> out 1 <170834>  # cond falseterm
add in 2 <170831 170834> out 1 <170835>  # cond result
add in 2 <170261 170835> out 1 <170836>  # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
split in 1 <170836> out 233 <170837 170838 170839 170840 170841 170842 170843 170844 170845 170846 170847 170848 170849 170850 170851 170852 170853 170854 170855 170856 170857 170858 170859 170860 170861 170862 170863 170864 170865 170866 170867 170868 170869 170870 170871 170872 170873 170874 170875 170876 170877 170878 170879 170880 170881 170882 170883 170884 170885 170886 170887 170888 170889 170890 170891 170892 170893 170894 170895 170896 170897 170898 170899 170900 170901 170902 170903 170904 170905 170906 170907 170908 170909 170910 170911 170912 170913 170914 170915 170916 170917 170918 170919 170920 170921 170922 170923 170924 170925 170926 170927 170928 170929 170930 170931 170932 170933 170934 170935 170936 170937 170938 170939 170940 170941 170942 170943 170944 170945 170946 170947 170948 170949 170950 170951 170952 170953 170954 170955 170956 170957 170958 170959 170960 170961 170962 170963 170964 170965 170966 170967 170968 170969 170970 170971 170972 170973 170974 170975 170976 170977 170978 170979 170980 170981 170982 170983 170984 170985 170986 170987 170988 170989 170990 170991 170992 170993 170994 170995 170996 170997 170998 170999 171000 171001 171002 171003 171004 171005 171006 171007 171008 171009 171010 171011 171012 171013 171014 171015 171016 171017 171018 171019 171020 171021 171022 171023 171024 171025 171026 171027 171028 171029 171030 171031 171032 171033 171034 171035 171036 171037 171038 171039 171040 171041 171042 171043 171044 171045 171046 171047 171048 171049 171050 171051 171052 171053 171054 171055 171056 171057 171058 171059 171060 171061 171062 171063 171064 171065 171066 171067 171068 171069> # SplitBus
const-mul-2 in 1 <170868> out 1 <171070> # join source bit 31
add in 2 <170867 171070> out 1 <171071>  # join source bit 30
const-mul-2 in 1 <171071> out 1 <171072> # join
add in 2 <170866 171072> out 1 <171073>  # join source bit 29
const-mul-2 in 1 <171073> out 1 <171074> # join
add in 2 <170865 171074> out 1 <171075>  # join source bit 28
const-mul-2 in 1 <171075> out 1 <171076> # join
add in 2 <170864 171076> out 1 <171077>  # join source bit 27
const-mul-2 in 1 <171077> out 1 <171078> # join
add in 2 <170863 171078> out 1 <171079>  # join source bit 26
const-mul-2 in 1 <171079> out 1 <171080> # join
add in 2 <170862 171080> out 1 <171081>  # join source bit 25
const-mul-2 in 1 <171081> out 1 <171082> # join
add in 2 <170861 171082> out 1 <171083>  # join source bit 24
const-mul-2 in 1 <171083> out 1 <171084> # join
add in 2 <170860 171084> out 1 <171085>  # join source bit 23
const-mul-2 in 1 <171085> out 1 <171086> # join
add in 2 <170859 171086> out 1 <171087>  # join source bit 22
const-mul-2 in 1 <171087> out 1 <171088> # join
add in 2 <170858 171088> out 1 <171089>  # join source bit 21
const-mul-2 in 1 <171089> out 1 <171090> # join
add in 2 <170857 171090> out 1 <171091>  # join source bit 20
const-mul-2 in 1 <171091> out 1 <171092> # join
add in 2 <170856 171092> out 1 <171093>  # join source bit 19
const-mul-2 in 1 <171093> out 1 <171094> # join
add in 2 <170855 171094> out 1 <171095>  # join source bit 18
const-mul-2 in 1 <171095> out 1 <171096> # join
add in 2 <170854 171096> out 1 <171097>  # join source bit 17
const-mul-2 in 1 <171097> out 1 <171098> # join
add in 2 <170853 171098> out 1 <171099>  # join source bit 16
const-mul-2 in 1 <171099> out 1 <171100> # join
add in 2 <170852 171100> out 1 <171101>  # join source bit 15
const-mul-2 in 1 <171101> out 1 <171102> # join
add in 2 <170851 171102> out 1 <171103>  # join source bit 14
const-mul-2 in 1 <171103> out 1 <171104> # join
add in 2 <170850 171104> out 1 <171105>  # join source bit 13
const-mul-2 in 1 <171105> out 1 <171106> # join
add in 2 <170849 171106> out 1 <171107>  # join source bit 12
const-mul-2 in 1 <171107> out 1 <171108> # join
add in 2 <170848 171108> out 1 <171109>  # join source bit 11
const-mul-2 in 1 <171109> out 1 <171110> # join
add in 2 <170847 171110> out 1 <171111>  # join source bit 10
const-mul-2 in 1 <171111> out 1 <171112> # join
add in 2 <170846 171112> out 1 <171113>  # join source bit 9
const-mul-2 in 1 <171113> out 1 <171114> # join
add in 2 <170845 171114> out 1 <171115>  # join source bit 8
const-mul-2 in 1 <171115> out 1 <171116> # join
add in 2 <170844 171116> out 1 <171117>  # join source bit 7
const-mul-2 in 1 <171117> out 1 <171118> # join
add in 2 <170843 171118> out 1 <171119>  # join source bit 6
const-mul-2 in 1 <171119> out 1 <171120> # join
add in 2 <170842 171120> out 1 <171121>  # join source bit 5
const-mul-2 in 1 <171121> out 1 <171122> # join
add in 2 <170841 171122> out 1 <171123>  # join source bit 4
const-mul-2 in 1 <171123> out 1 <171124> # join
add in 2 <170840 171124> out 1 <171125>  # join source bit 3
const-mul-2 in 1 <171125> out 1 <171126> # join
add in 2 <170839 171126> out 1 <171127>  # join source bit 2
const-mul-2 in 1 <171127> out 1 <171128> # join
add in 2 <170838 171128> out 1 <171129>  # join source bit 1
const-mul-2 in 1 <171129> out 1 <171130> # join
add in 2 <170837 171130> out 1 <171131>  # join source bit 0
add in 2 <171131 171131> out 1 <171132>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <170261> out 1 <171133> # multiply-by-constant 4294967295
add in 2 <170835 171133> out 1 <171134>  # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <171134> outplitBus
mul in 2 <171166 171132> out 1 <171400>  # cond trueterm
const-mul-neg-1 in 1 <171166> out 1 <171401> # cond minuscond
add in 2 <100 171401> out 1 <171402>     # cond negcond
mul in 2 <171402 170261> out 1 <171403>  # cond falseterm
add in 2 <171400 171403> out 1 <171404>  # cond result
mul in 2 <170089 170053> out 1 <171405>  # cond trueterm
const-mul-neg-1 in 1 <170089> out 1 <171406> # cond minuscond
add in 2 <100 171406> out 1 <171407>     # cond negcond
mul in 2 <171407 170050> out 1 <171408>  # cond falseterm
add in 2 <171405 171408> out 1 <171409>  # cond result
mul in 2 <169945 169909> out 1 <171410>  # cond trueterm
const-mul-neg-1 in 1 <169945> out 1 <171411> # cond minuscond
add in 2 <100 171411> out 1 <171412>     # cond negcond
mul in 2 <171412 169906> out 1 <171413>  # cond falseterm
add in 2 <171410 171413> out 1 <171414>  # cond result
const-mul-ffffffff in 1 <171414> out 1 <171415> # multiply-by-constant 4294967295
add in 2 <171414 171409> out 1 <171416>  # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
add in 2 <171416 171415> out 1 <171417>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <171417> out 1 <171418> # multiply-by-constant 4294967295
add in 2 <171416 171418> out 1 <171419>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <171414> out 1 <171420> # multiply-by-constant 4294967295
add in 2 <171409 171420> out 1 <171421>  # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <171421> out 200 <171422 171423 171424 171425 171426 171427 171428 171429 171430 171431 171432 171433 171434 171435 171436 171437 171438 171439 171440 171441 171442 171443 171444 171445 171446 171447 171448 171449 171450 171451 171452 171453 171454 171455 171456 171457 171458 171459 171460 171461 171462 171463 171464 171465 171466 171467 171468 171469 171470 171471 171472 171473 171474 171475 171476 171477 171478 171479 171480 171481 171482 171483 171484 171485 171486 171487 171488 171489 171490 171491 171492 171493 171494 171495 171496 171497 171498 171499 171500 171501 171502 171503 171504 171505 171506 171507 171508 171509 171510 171511 171512 171513 171514 171515 171516 171517 171518 171519 171520 171521 171522 171523 171524 171525 171526 171527 171528 171529 171530 171531 171532 171533 171534 171535 171536 171537 171538 171539 171540 171541 171542 171543 171544 171545 171546 171547 171548 171549 171550 171551 171552 171553 171554 171555 171556 171557 171558 171559 171560 171561 171562 171563 171564 171565 171566 171567 171568 171569 171570 171571 171572 171573 171574 171575 171576 171577 171578 171579 171580 171581 171582 171583 171584 171585 171586 171587 171588 171589 171590 171591 171592 171593 171594 171595 171596 171597 171598 171599 171600 171601 171602 171603 171604 171605 171606 171607 171608 171609 171610 171611 171612 171613 171614 171615 171616 171617 171618 171619 171620 171621> # SplitBus
mul in 2 <171453 171419> out 1 <171622>  # cond trueterm
const-mul-neg-1 in 1 <171453> out 1 <171623> # cond minuscond
add in 2 <100 171623> out 1 <171624>     # cond negcond
mul in 2 <171624 171409> out 1 <171625>  # cond falseterm
add in 2 <171622 171625> out 1 <171626>  # cond result
const-mul-ffffffff in 1 <171626> out 1 <171627> # multiply-by-constant 4294967295
add in 2 <171626 171404> out 1 <171628>  # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
split in 1 <171628> outplitBus
const-mul-2 in 1 <171660> out 1 <171864> # join source bit 31
add in 2 <171659 171864> out 1 <171865>  # join source bit 30
const-mul-2 in 1 <171865> out 1 <171866> # join
add in 2 <171658 171866> out 1 <171867>  # join source bit 29
const-mul-2 in 1 <171867> out 1 <171868> # join
add in 2 <171657 171868> out 1 <171869>  # join source bit 28
const-mul-2 in 1 <171869> out 1 <171870> # join
add in 2 <171656 171870> out 1 <171871>  # join source bit 27
const-mul-2 in 1 <171871> out 1 <171872> # join
add in 2 <171655 171872> out 1 <171873>  # join source bit 26
const-mul-2 in 1 <171873> out 1 <171874> # join
add in 2 <171654 171874> out 1 <171875>  # join source bit 25
const-mul-2 in 1 <171875> out 1 <171876> # join
add in 2 <171653 171876> out 1 <171877>  # join source bit 24
const-mul-2 in 1 <171877> out 1 <171878> # join
add in 2 <171652 171878> out 1 <171879>  # join source bit 23
const-mul-2 in 1 <171879> out 1 <171880> # join
add in 2 <171651 171880> out 1 <171881>  # join source bit 22
const-mul-2 in 1 <171881> out 1 <171882> # join
add in 2 <171650 171882> out 1 <171883>  # join source bit 21
const-mul-2 in 1 <171883> out 1 <171884> # join
add in 2 <171649 171884> out 1 <171885>  # join source bit 20
const-mul-2 in 1 <171885> out 1 <171886> # join
add in 2 <171648 171886> out 1 <171887>  # join source bit 19
const-mul-2 in 1 <171887> out 1 <171888> # join
add in 2 <171647 171888> out 1 <171889>  # join source bit 18
const-mul-2 in 1 <171889> out 1 <171890> # join
add in 2 <171646 171890> out 1 <171891>  # join source bit 17
const-mul-2 in 1 <171891> out 1 <171892> # join
add in 2 <171645 171892> out 1 <171893>  # join source bit 16
const-mul-2 in 1 <171893> out 1 <171894> # join
add in 2 <171644 171894> out 1 <171895>  # join source bit 15
const-mul-2 in 1 <171895> out 1 <171896> # join
add in 2 <171643 171896> out 1 <171897>  # join source bit 14
const-mul-2 in 1 <171897> out 1 <171898> # join
add in 2 <171642 171898> out 1 <171899>  # join source bit 13
const-mul-2 in 1 <171899> out 1 <171900> # join
add in 2 <171641 171900> out 1 <171901>  # join source bit 12
const-mul-2 in 1 <171901> out 1 <171902> # join
add in 2 <171640 171902> out 1 <171903>  # join source bit 11
const-mul-2 in 1 <171903> out 1 <171904> # join
add in 2 <171639 171904> out 1 <171905>  # join source bit 10
const-mul-2 in 1 <171905> out 1 <171906> # join
add in 2 <171638 171906> out 1 <171907>  # join source bit 9
const-mul-2 in 1 <171907> out 1 <171908> # join
add in 2 <171637 171908> out 1 <171909>  # join source bit 8
const-mul-2 in 1 <171909> out 1 <171910> # join
add in 2 <171636 171910> out 1 <171911>  # join source bit 7
const-mul-2 in 1 <171911> out 1 <171912> # join
add in 2 <171635 171912> out 1 <171913>  # join source bit 6
const-mul-2 in 1 <171913> out 1 <171914> # join
add in 2 <171634 171914> out 1 <171915>  # join source bit 5
const-mul-2 in 1 <171915> out 1 <171916> # join
add in 2 <171633 171916> out 1 <171917>  # join source bit 4
const-mul-2 in 1 <171917> out 1 <171918> # join
add in 2 <171632 171918> out 1 <171919>  # join source bit 3
const-mul-2 in 1 <171919> out 1 <171920> # join
add in 2 <171631 171920> out 1 <171921>  # join source bit 2
const-mul-2 in 1 <171921> out 1 <171922> # join
add in 2 <171630 171922> out 1 <171923>  # join source bit 1
const-mul-2 in 1 <171923> out 1 <171924> # join
add in 2 <171629 171924> out 1 <171925>  # join source bit 0
add in 2 <171925 171925> out 1 <171926>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <171926> out 1 <171927> # multiply-by-constant 4294967295
add in 2 <171628 171927> out 1 <171928>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <171626> out 1 <171929> # multiply-by-constant 4294967295
add in 2 <171404 171929> out 1 <171930>  # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <171930> outplitBus
mul in 2 <171962 171928> out 1 <172198>  # cond trueterm
const-mul-neg-1 in 1 <171962> out 1 <172199> # cond minuscond
add in 2 <100 172199> out 1 <172200>     # cond negcond
mul in 2 <172200 171404> out 1 <172201>  # cond falseterm
add in 2 <172198 172201> out 1 <172202>  # cond result
add in 2 <172202 104> out 1 <172203>     # ArithBusReq.AddReq(DFG.Conditional,DFG.Constant)
const-mul-ffffffff in 1 <54> out 1 <172204> # multiply-by-constant 4294967295
add in 2 <172203 172204> out 1 <172205>  # 'CmpLT DFG.Add - DFG.Input'
split in 1 <172205> outplitBus
mul in 2 <172237 103> out 1 <172444>     # cond trueterm
const-mul-neg-1 in 1 <172237> out 1 <172445> # cond minuscond
add in 2 <100 172445> out 1 <172446>     # cond negcond
mul in 2 <172446 102> out 1 <172447>     # cond falseterm
add in 2 <172444 172447> out 1 <172448>  # cond result
add in 2 <172202 3084> out 1 <172449>    # ArithBusReq.AddReq(DFG.Conditional,DFG.Negate)
const-mul-ffffffff in 1 <172449> out 1 <172450> # multiply-by-constant 4294967295
add in 2 <54 172450> out 1 <172451>      # 'CmpLT DFG.Input - DFG.Subtract'
split in 1 <172451> out 270 <172452 172453 172454 172455 172456 172457 172458 172459 172460 172461 172462 172463 172464 172465 172466 172467 172468 172469 172470 172471 172472 172473 172474 172475 172476 172477 172478 172479 172480 172481 172482 172483 172484 172485 172486 172487 172488 172489 172490 172491 172492 172493 172494 172495 172496 172497 172498 172499 172500 172501 172502 172503 172504 172505 172506 172507 172508 172509 172510 172511 172512 172513 172514 172515 172516 172517 172518 172519 172520 172521 172522 172523 172524 172525 172526 172527 172528 172529 172530 172531 172532 172533 172534 172535 172536 172537 172538 172539 172540 172541 172542 172543 172544 172545 172546 172547 172548 172549 172550 172551 172552 172553 172554 172555 172556 172557 172558 172559 172560 172561 172562 172563 172564 172565 172566 172567 172568 172569 172570 172571 172572 172573 172574 172575 172576 172577 172578 172579 172580 172581 172582 172583 172584 172585 172586 172587 172588 172589 172590 172591 172592 172593 172594 172595 172596 172597 172598 172599 172600 172601 172602 172603 172604 172605 172606 172607 172608 172609 172610 172611 172612 172613 172614 172615 172616 172617 172618 172619 172620 172621 172622 172623 172624 172625 172626 172627 172628 172629 172630 172631 172632 172633 172634 172635 172636 172637 172638 172639 172640 172641 172642 172643 172644 172645 172646 172647 172648 172649 172650 172651 172652 172653 172654 172655 172656 172657 172658 172659 172660 172661 172662 172663 172664 172665 172666 172667 172668 172669 172670 172671 172672 172673 172674 172675 172676 172677 172678 172679 172680 172681 172682 172683 172684 172685 172686 172687 172688 172689 172690 172691 172692 172693 172694 172695 172696 172697 172698 172699 172700 172701 172702 172703 172704 172705 172706 172707 172708 172709 172710 172711 172712 172713 172714 172715 172716 172717 172718 172719 172720 172721> # SplitBus
mul in 2 <172483 103> out 1 <172722>     # cond trueterm
const-mul-neg-1 in 1 <172483> out 1 <172723> # cond minuscond
add in 2 <100 172723> out 1 <172724>     # cond negcond
mul in 2 <172724 172448> out 1 <172725>  # cond falseterm
add in 2 <172722 172725> out 1 <172726>  # cond result
const-mul-ffffffff in 1 <53> out 1 <172727> # multiply-by-constant 4294967295
add in 2 <53 54> out 1 <172728>          # ArithBusReq.AddReq(DFG.Input,DFG.Input)
add in 2 <172728 172727> out 1 <172729>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <172729> out 1 <172730> # multiply-by-constant 4294967295
add in 2 <172728 172730> out 1 <172731>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <53> out 1 <172732> # multiply-by-constant 4294967295
add in 2 <54 172732> out 1 <172733>      # 'CmpLT DFG.Input - DFG.Input'
split in 1 <172733> out 65 <172734 172735 172736 172737 172738 172739 172740 172741 172742 172743 172744 172745 172746 172747 172748 172749 172750 172751 172752 172753 172754 172755 172756 172757 172758 172759 172760 172761 172762 172763 172764 172765 172766 172767 172768 172769 172770 172771 172772 172773 172774 172775 172776 172777 172778 172779 172780 172781 172782 172783 172784 172785 172786 172787 172788 172789 172790 172791 172792 172793 172794 172795 172796 172797 172798> # SplitBus
mul in 2 <172765 172731> out 1 <172799>  # cond trueterm
const-mul-neg-1 in 1 <172765> out 1 <172800> # cond minuscond
add in 2 <100 172800> out 1 <172801>     # cond negcond
mul in 2 <172801 54> out 1 <172802>      # cond falseterm
add in 2 <172799 172802> out 1 <172803>  # cond result
const-mul-ffffffff in 1 <172803> out 1 <172804> # multiply-by-constant 4294967295
add in 2 <172803 55> out 1 <172805>      # ArithBusReq.AddReq(DFG.Conditional,DFG.Input)
add in 2 <172805 172804> out 1 <172806>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <172806> out 1 <172807> # multiply-by-constant 4294967295
add in 2 <172805 172807> out 1 <172808>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <172803> out 1 <172809> # multiply-by-constant 4294967295
add in 2 <55 172809> out 1 <172810>      # 'CmpLT DFG.Input - DFG.Conditional'
split in 1 <172810> out 131 <172811 172812 172813 172814 172815 172816 172817 172818 172819 172820 172821 172822 172823 172824 172825 172826 172827 172828 172829 172830 172831 172832 172833 172834 172835 172836 172837 172838 172839 172840 172841 172842 172843 172844 172845 172846 172847 172848 172849 172850 172851 172852 172853 172854 172855 172856 172857 172858 172859 172860 172861 172862 172863 172864 172865 172866 172867 172868 172869 172870 172871 172872 172873 172874 172875 172876 172877 172878 172879 172880 172881 172882 172883 172884 172885 172886 172887 172888 172889 172890 172891 172892 172893 172894 172895 172896 172897 172898 172899 172900 172901 172902 172903 172904 172905 172906 172907 172908 172909 172910 172911 172912 172913 172914 172915 172916 172917 172918 172919 172920 172921 172922 172923 172924 172925 172926 172927 172928 172929 172930 172931 172932 172933 172934 172935 172936 172937 172938 172939 172940 172941> # SplitBus
mul in 2 <172842 172808> out 1 <172942>  # cond trueterm
const-mul-neg-1 in 1 <172842> out 1 <172943> # cond minuscond
add in 2 <100 172943> out 1 <172944>     # cond negcond
mul in 2 <172944 55> out 1 <172945>      # cond falseterm
add in 2 <172942 172945> out 1 <172946>  # cond result
const-mul-ffffffff in 1 <172946> out 1 <172947> # multiply-by-constant 4294967295
add in 2 <172946 56> out 1 <172948>      # ArithBusReq.AddReq(DFG.Conditional,DFG.Input)
add in 2 <172948 172947> out 1 <172949>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <172946> out 1 <172950> # multiply-by-constant 4294967295
add in 2 <56 172950> out 1 <172951>      # 'CmpLT DFG.Input - DFG.Conditional'
split in 1 <172951> out 197 <172952 172953 172954 172955 172956 172957 172958 172959 172960 172961 172962 172963 172964 172965 172966 172967 172968 172969 172970 172971 172972 172973 172974 172975 172976 172977 172978 172979 172980 172981 172982 172983 172984 172985 172986 172987 172988 172989 172990 172991 172992 172993 172994 172995 172996 172997 172998 172999 173000 173001 173002 173003 173004 173005 173006 173007 173008 173009 173010 173011 173012 173013 173014 173015 173016 173017 173018 173019 173020 173021 173022 173023 173024 173025 173026 173027 173028 173029 173030 173031 173032 173033 173034 173035 173036 173037 173038 173039 173040 173041 173042 173043 173044 173045 173046 173047 173048 173049 173050 173051 173052 173053 173054 173055 173056 173057 173058 173059 173060 173061 173062 173063 173064 173065 173066 173067 173068 173069 173070 173071 173072 173073 173074 173075 173076 173077 173078 173079 173080 173081 173082 173083 173084 173085 173086 173087 173088 173089 173090 173091 173092 173093 173094 173095 173096 173097 173098 173099 173100 173101 173102 173103 173104 173105 173106 173107 173108 173109 173110 173111 173112 173113 173114 173115 173116 173117 173118 173119 173120 173121 173122 173123 173124 173125 173126 173127 173128 173129 173130 173131 173132 173133 173134 173135 173136 173137 173138 173139 173140 173141 173142 173143 173144 173145 173146 173147 173148> # SplitBus
mul in 2 <172983 172949> out 1 <173149>  # cond trueterm
const-mul-neg-1 in 1 <172983> out 1 <173150> # cond minuscond
add in 2 <100 173150> out 1 <173151>     # cond negcond
mul in 2 <173151 172946> out 1 <173152>  # cond falseterm
add in 2 <173149 173152> out 1 <173153>  # cond result
mul in 2 <172842 172806> out 1 <173154>  # cond trueterm
const-mul-neg-1 in 1 <172842> out 1 <173155> # cond minuscond
add in 2 <100 173155> out 1 <173156>     # cond negcond
mul in 2 <173156 172803> out 1 <173157>  # cond falseterm
add in 2 <173154 173157> out 1 <173158>  # cond result
mul in 2 <172765 172729> out 1 <173159>  # cond trueterm
const-mul-neg-1 in 1 <172765> out 1 <173160> # cond minuscond
add in 2 <100 173160> out 1 <173161>     # cond negcond
mul in 2 <173161 53> out 1 <173162>      # cond falseterm
add in 2 <173159 173162> out 1 <173163>  # cond result
const-mul-ffffffff in 1 <173163> out 1 <173164> # multiply-by-constant 4294967295
add in 2 <173163 173158> out 1 <173165>  # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
add in 2 <173165 173164> out 1 <173166>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <173166> out 1 <173167> # multiply-by-constant 4294967295
add in 2 <173165 173167> out 1 <173168>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <173163> out 1 <173169> # multiply-by-constant 4294967295
add in 2 <173158 173169> out 1 <173170>  # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <173170> out 132 <173171 173172 173173 173174 173175 173176 173177 173178 173179 173180 173181 173182 173183 173184 173185 173186 173187 173188 173189 173190 173191 173192 173193 173194 173195 173196 173197 173198 173199 173200 173201 173202 173203 173204 173205 173206 173207 173208 173209 173210 173211 173212 173213 173214 173215 173216 173217 173218 173219 173220 173221 173222 173223 173224 173225 173226 173227 173228 173229 173230 173231 173232 173233 173234 173235 173236 173237 173238 173239 173240 173241 173242 173243 173244 173245 173246 173247 173248 173249 173250 173251 173252 173253 173254 173255 173256 173257 173258 173259 173260 173261 173262 173263 173264 173265 173266 173267 173268 173269 173270 173271 173272 173273 173274 173275 173276 173277 173278 173279 173280 173281 173282 173283 173284 173285 173286 173287 173288 173289 173290 173291 173292 173293 173294 173295 173296 173297 173298 173299 173300 173301 173302> # SplitBus
mul in 2 <173202 173168> out 1 <173303>  # cond trueterm
const-mul-neg-1 in 1 <173202> out 1 <173304> # cond minuscond
add in 2 <100 173304> out 1 <173305>     # cond negcond
mul in 2 <173305 173158> out 1 <173306>  # cond falseterm
add in 2 <173303 173306> out 1 <173307>  # cond result
const-mul-ffffffff in 1 <173307> out 1 <173308> # multiply-by-constant 4294967295
add in 2 <173307 173153> out 1 <173309>  # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
add in 2 <173309 173308> out 1 <173310>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <173310> out 1 <173311> # multiply-by-constant 4294967295
add in 2 <173309 173311> out 1 <173312>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <173307> out 1 <173313> # multiply-by-constant 4294967295
add in 2 <173153 173313> out 1 <173314>  # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <173314> out 199 <173315 173316 173317 173318 173319 173320 173321 173322 173323 173324 173325 173326 173327 173328 173329 173330 173331 173332 173333 173334 173335 173336 173337 173338 173339 173340 173341 173342 173343 173344 173345 173346 173347 173348 173349 173350 173351 173352 173353 173354 173355 173356 173357 173358 173359 173360 173361 173362 173363 173364 173365 173366 173367 173368 173369 173370 173371 173372 173373 173374 173375 173376 173377 173378 173379 173380 173381 173382 173383 173384 173385 173386 173387 173388 173389 173390 173391 173392 173393 173394 173395 173396 173397 173398 173399 173400 173401 173402 173403 173404 173405 173406 173407 173408 173409 173410 173411 173412 173413 173414 173415 173416 173417 173418 173419 173420 173421 173422 173423 173424 173425 173426 173427 173428 173429 173430 173431 173432 173433 173434 173435 173436 173437 173438 173439 173440 173441 173442 173443 173444 173445 173446 173447 173448 173449 173450 173451 173452 173453 173454 173455 173456 173457 173458 173459 173460 173461 173462 173463 173464 173465 173466 173467 173468 173469 173470 173471 173472 173473 173474 173475 173476 173477 173478 173479 173480 173481 173482 173483 173484 173485 173486 173487 173488 173489 173490 173491 173492 173493 173494 173495 173496 173497 173498 173499 173500 173501 173502 173503 173504 173505 173506 173507 173508 173509 173510 173511 173512 173513> # SplitBus
mul in 2 <173346 173312> out 1 <173514>  # cond trueterm
const-mul-neg-1 in 1 <173346> out 1 <173515> # cond minuscond
add in 2 <100 173515> out 1 <173516>     # cond negcond
mul in 2 <173516 173153> out 1 <173517>  # cond falseterm
add in 2 <173514 173517> out 1 <173518>  # cond result
const-mul-ffffffff in 1 <173518> out 1 <173519> # multiply-by-constant 4294967295
const-mul-ffffffff in 1 <172949> out 1 <173520> # multiply-by-constant 4294967295
add in 2 <172948 173520> out 1 <173521>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
mul in 2 <172983 173521> out 1 <173522>  # cond trueterm
const-mul-neg-1 in 1 <172983> out 1 <173523> # cond minuscond
add in 2 <100 173523> out 1 <173524>     # cond negcond
mul in 2 <173524 56> out 1 <173525>      # cond falseterm
add in 2 <173522 173525> out 1 <173526>  # cond result
const-mul-ffffffff in 1 <173526> out 1 <173527> # multiply-by-constant 4294967295
add in 2 <173526 57> out 1 <173528>      # ArithBusReq.AddReq(DFG.Conditional,DFG.Input)
split in 1 <173528> outplitBus
const-mul-2 in 1 <173560> out 1 <173760> # join source bit 31
add in 2 <173559 173760> out 1 <173761>  # join source bit 30
const-mul-2 in 1 <173761> out 1 <173762> # join
add in 2 <173558 173762> out 1 <173763>  # join source bit 29
const-mul-2 in 1 <173763> out 1 <173764> # join
add in 2 <173557 173764> out 1 <173765>  # join source bit 28
const-mul-2 in 1 <173765> out 1 <173766> # join
add in 2 <173556 173766> out 1 <173767>  # join source bit 27
const-mul-2 in 1 <173767> out 1 <173768> # join
add in 2 <173555 173768> out 1 <173769>  # join source bit 26
const-mul-2 in 1 <173769> out 1 <173770> # join
add in 2 <173554 173770> out 1 <173771>  # join source bit 25
const-mul-2 in 1 <173771> out 1 <173772> # join
add in 2 <173553 173772> out 1 <173773>  # join source bit 24
const-mul-2 in 1 <173773> out 1 <173774> # join
add in 2 <173552 173774> out 1 <173775>  # join source bit 23
const-mul-2 in 1 <173775> out 1 <173776> # join
add in 2 <173551 173776> out 1 <173777>  # join source bit 22
const-mul-2 in 1 <173777> out 1 <173778> # join
add in 2 <173550 173778> out 1 <173779>  # join source bit 21
const-mul-2 in 1 <173779> out 1 <173780> # join
add in 2 <173549 173780> out 1 <173781>  # join source bit 20
const-mul-2 in 1 <173781> out 1 <173782> # join
add in 2 <173548 173782> out 1 <173783>  # join source bit 19
const-mul-2 in 1 <173783> out 1 <173784> # join
add in 2 <173547 173784> out 1 <173785>  # join source bit 18
const-mul-2 in 1 <173785> out 1 <173786> # join
add in 2 <173546 173786> out 1 <173787>  # join source bit 17
const-mul-2 in 1 <173787> out 1 <173788> # join
add in 2 <173545 173788> out 1 <173789>  # join source bit 16
const-mul-2 in 1 <173789> out 1 <173790> # join
add in 2 <173544 173790> out 1 <173791>  # join source bit 15
const-mul-2 in 1 <173791> out 1 <173792> # join
add in 2 <173543 173792> out 1 <173793>  # join source bit 14
const-mul-2 in 1 <173793> out 1 <173794> # join
add in 2 <173542 173794> out 1 <173795>  # join source bit 13
const-mul-2 in 1 <173795> out 1 <173796> # join
add in 2 <173541 173796> out 1 <173797>  # join source bit 12
const-mul-2 in 1 <173797> out 1 <173798> # join
add in 2 <173540 173798> out 1 <173799>  # join source bit 11
const-mul-2 in 1 <173799> out 1 <173800> # join
add in 2 <173539 173800> out 1 <173801>  # join source bit 10
const-mul-2 in 1 <173801> out 1 <173802> # join
add in 2 <173538 173802> out 1 <173803>  # join source bit 9
const-mul-2 in 1 <173803> out 1 <173804> # join
add in 2 <173537 173804> out 1 <173805>  # join source bit 8
const-mul-2 in 1 <173805> out 1 <173806> # join
add in 2 <173536 173806> out 1 <173807>  # join source bit 7
const-mul-2 in 1 <173807> out 1 <173808> # join
add in 2 <173535 173808> out 1 <173809>  # join source bit 6
const-mul-2 in 1 <173809> out 1 <173810> # join
add in 2 <173534 173810> out 1 <173811>  # join source bit 5
const-mul-2 in 1 <173811> out 1 <173812> # join
add in 2 <173533 173812> out 1 <173813>  # join source bit 4
const-mul-2 in 1 <173813> out 1 <173814> # join
add in 2 <173532 173814> out 1 <173815>  # join source bit 3
const-mul-2 in 1 <173815> out 1 <173816> # join
add in 2 <173531 173816> out 1 <173817>  # join source bit 2
const-mul-2 in 1 <173817> out 1 <173818> # join
add in 2 <173530 173818> out 1 <173819>  # join source bit 1
const-mul-2 in 1 <173819> out 1 <173820> # join
add in 2 <173529 173820> out 1 <173821>  # join source bit 0
add in 2 <173821 173821> out 1 <173822>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <173526> out 1 <173823> # multiply-by-constant 4294967295
add in 2 <57 173823> out 1 <173824>      # 'CmpLT DFG.Input - DFG.Conditional'
split in 1 <173824> outplitBus
mul in 2 <173856 173822> out 1 <174088>  # cond trueterm
const-mul-neg-1 in 1 <173856> out 1 <174089> # cond minuscond
add in 2 <100 174089> out 1 <174090>     # cond negcond
mul in 2 <174090 173526> out 1 <174091>  # cond falseterm
add in 2 <174088 174091> out 1 <174092>  # cond result
add in 2 <173518 174092> out 1 <174093>  # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
split in 1 <174093> outplitBus
const-mul-2 in 1 <174125> out 1 <174327> # join source bit 31
add in 2 <174124 174327> out 1 <174328>  # join source bit 30
const-mul-2 in 1 <174328> out 1 <174329> # join
add in 2 <174123 174329> out 1 <174330>  # join source bit 29
const-mul-2 in 1 <174330> out 1 <174331> # join
add in 2 <174122 174331> out 1 <174332>  # join source bit 28
const-mul-2 in 1 <174332> out 1 <174333> # join
add in 2 <174121 174333> out 1 <174334>  # join source bit 27
const-mul-2 in 1 <174334> out 1 <174335> # join
add in 2 <174120 174335> out 1 <174336>  # join source bit 26
const-mul-2 in 1 <174336> out 1 <174337> # join
add in 2 <174119 174337> out 1 <174338>  # join source bit 25
const-mul-2 in 1 <174338> out 1 <174339> # join
add in 2 <174118 174339> out 1 <174340>  # join source bit 24
const-mul-2 in 1 <174340> out 1 <174341> # join
add in 2 <174117 174341> out 1 <174342>  # join source bit 23
const-mul-2 in 1 <174342> out 1 <174343> # join
add in 2 <174116 174343> out 1 <174344>  # join source bit 22
const-mul-2 in 1 <174344> out 1 <174345> # join
add in 2 <174115 174345> out 1 <174346>  # join source bit 21
const-mul-2 in 1 <174346> out 1 <174347> # join
add in 2 <174114 174347> out 1 <174348>  # join source bit 20
const-mul-2 in 1 <174348> out 1 <174349> # join
add in 2 <174113 174349> out 1 <174350>  # join source bit 19
const-mul-2 in 1 <174350> out 1 <174351> # join
add in 2 <174112 174351> out 1 <174352>  # join source bit 18
const-mul-2 in 1 <174352> out 1 <174353> # join
add in 2 <174111 174353> out 1 <174354>  # join source bit 17
const-mul-2 in 1 <174354> out 1 <174355> # join
add in 2 <174110 174355> out 1 <174356>  # join source bit 16
const-mul-2 in 1 <174356> out 1 <174357> # join
add in 2 <174109 174357> out 1 <174358>  # join source bit 15
const-mul-2 in 1 <174358> out 1 <174359> # join
add in 2 <174108 174359> out 1 <174360>  # join source bit 14
const-mul-2 in 1 <174360> out 1 <174361> # join
add in 2 <174107 174361> out 1 <174362>  # join source bit 13
const-mul-2 in 1 <174362> out 1 <174363> # join
add in 2 <174106 174363> out 1 <174364>  # join source bit 12
const-mul-2 in 1 <174364> out 1 <174365> # join
add in 2 <174105 174365> out 1 <174366>  # join source bit 11
const-mul-2 in 1 <174366> out 1 <174367> # join
add in 2 <174104 174367> out 1 <174368>  # join source bit 10
const-mul-2 in 1 <174368> out 1 <174369> # join
add in 2 <174103 174369> out 1 <174370>  # join source bit 9
const-mul-2 in 1 <174370> out 1 <174371> # join
add in 2 <174102 174371> out 1 <174372>  # join source bit 8
const-mul-2 in 1 <174372> out 1 <174373> # join
add in 2 <174101 174373> out 1 <174374>  # join source bit 7
const-mul-2 in 1 <174374> out 1 <174375> # join
add in 2 <174100 174375> out 1 <174376>  # join source bit 6
const-mul-2 in 1 <174376> out 1 <174377> # join
add in 2 <174099 174377> out 1 <174378>  # join source bit 5
const-mul-2 in 1 <174378> out 1 <174379> # join
add in 2 <174098 174379> out 1 <174380>  # join source bit 4
const-mul-2 in 1 <174380> out 1 <174381> # join
add in 2 <174097 174381> out 1 <174382>  # join source bit 3
const-mul-2 in 1 <174382> out 1 <174383> # join
add in 2 <174096 174383> out 1 <174384>  # join source bit 2
const-mul-2 in 1 <174384> out 1 <174385> # join
add in 2 <174095 174385> out 1 <174386>  # join source bit 1
const-mul-2 in 1 <174386> out 1 <174387> # join
add in 2 <174094 174387> out 1 <174388>  # join source bit 0
add in 2 <174388 174388> out 1 <174389>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <173518> out 1 <174390> # multiply-by-constant 4294967295
add in 2 <174092 174390> out 1 <174391>  # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <174391> out 265 <174392 174393 174394 174395 174396 174397 174398 174399 174400 174401 174402 174403 174404 174405 174406 174407 174408 174409 174410 174411 174412 174413 174414 174415 174416 174417 174418 174419 174420 174421 174422 174423 174424 174425 174426 174427 174428 174429 174430 174431 174432 174433 174434 174435 174436 174437 174438 174439 174440 174441 174442 174443 174444 174445 174446 174447 174448 174449 174450 174451 174452 174453 174454 174455 174456 174457 174458 174459 174460 174461 174462 174463 174464 174465 174466 174467 174468 174469 174470 174471 174472 174473 174474 174475 174476 174477 174478 174479 174480 174481 174482 174483 174484 174485 174486 174487 174488 174489 174490 174491 174492 174493 174494 174495 174496 174497 174498 174499 174500 174501 174502 174503 174504 174505 174506 174507 174508 174509 174510 174511 174512 174513 174514 174515 174516 174517 174518 174519 174520 174521 174522 174523 174524 174525 174526 174527 174528 174529 174530 174531 174532 174533 174534 174535 174536 174537 174538 174539 174540 174541 174542 174543 174544 174545 174546 174547 174548 174549 174550 174551 174552 174553 174554 174555 174556 174557 174558 174559 174560 174561 174562 174563 174564 174565 174566 174567 174568 174569 174570 174571 174572 174573 174574 174575 174576 174577 174578 174579 174580 174581 174582 174583 174584 174585 174586 174587 174588 174589 174590 174591 174592 174593 174594 174595 174596 174597 174598 174599 174600 174601 174602 174603 174604 174605 174606 174607 174608 174609 174610 174611 174612 174613 174614 174615 174616 174617 174618 174619 174620 174621 174622 174623 174624 174625 174626 174627 174628 174629 174630 174631 174632 174633 174634 174635 174636 174637 174638 174639 174640 174641 174642 174643 174644 174645 174646 174647 174648 174649 174650 174651 174652 174653 174654 174655 174656> # SplitBus
mul in 2 <174423 174389> out 1 <174657>  # cond trueterm
const-mul-neg-1 in 1 <174423> out 1 <174658> # cond minuscond
add in 2 <100 174658> out 1 <174659>     # cond negcond
mul in 2 <174659 173518> out 1 <174660>  # cond falseterm
add in 2 <174657 174660> out 1 <174661>  # cond result
mul in 2 <173346 173310> out 1 <174662>  # cond trueterm
const-mul-neg-1 in 1 <173346> out 1 <174663> # cond minuscond
add in 2 <100 174663> out 1 <174664>     # cond negcond
mul in 2 <174664 173307> out 1 <174665>  # cond falseterm
add in 2 <174662 174665> out 1 <174666>  # cond result
mul in 2 <173202 173166> out 1 <174667>  # cond trueterm
const-mul-neg-1 in 1 <173202> out 1 <174668> # cond minuscond
add in 2 <100 174668> out 1 <174669>     # cond negcond
mul in 2 <174669 173163> out 1 <174670>  # cond falseterm
add in 2 <174667 174670> out 1 <174671>  # cond result
const-mul-ffffffff in 1 <174671> out 1 <174672> # multiply-by-constant 4294967295
add in 2 <174671 174666> out 1 <174673>  # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
add in 2 <174673 174672> out 1 <174674>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <174674> out 1 <174675> # multiply-by-constant 4294967295
add in 2 <174673 174675> out 1 <174676>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <174671> out 1 <174677> # multiply-by-constant 4294967295
add in 2 <174666 174677> out 1 <174678>  # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <174678> out 200 <174679 174680 174681 174682 174683 174684 174685 174686 174687 174688 174689 174690 174691 174692 174693 174694 174695 174696 174697 174698 174699 174700 174701 174702 174703 174704 174705 174706 174707 174708 174709 174710 174711 174712 174713 174714 174715 174716 174717 174718 174719 174720 174721 174722 174723 174724 174725 174726 174727 174728 174729 174730 174731 174732 174733 174734 174735 174736 174737 174738 174739 174740 174741 174742 174743 174744 174745 174746 174747 174748 174749 174750 174751 174752 174753 174754 174755 174756 174757 174758 174759 174760 174761 174762 174763 174764 174765 174766 174767 174768 174769 174770 174771 174772 174773 174774 174775 174776 174777 174778 174779 174780 174781 174782 174783 174784 174785 174786 174787 174788 174789 174790 174791 174792 174793 174794 174795 174796 174797 174798 174799 174800 174801 174802 174803 174804 174805 174806 174807 174808 174809 174810 174811 174812 174813 174814 174815 174816 174817 174818 174819 174820 174821 174822 174823 174824 174825 174826 174827 174828 174829 174830 174831 174832 174833 174834 174835 174836 174837 174838 174839 174840 174841 174842 174843 174844 174845 174846 174847 174848 174849 174850 174851 174852 174853 174854 174855 174856 174857 174858 174859 174860 174861 174862 174863 174864 174865 174866 174867 174868 174869 174870 174871 174872 174873 174874 174875 174876 174877 174878> # SplitBus
mul in 2 <174710 174676> out 1 <174879>  # cond trueterm
const-mul-neg-1 in 1 <174710> out 1 <174880> # cond minuscond
add in 2 <100 174880> out 1 <174881>     # cond negcond
mul in 2 <174881 174666> out 1 <174882>  # cond falseterm
add in 2 <174879 174882> out 1 <174883>  # cond result
const-mul-ffffffff in 1 <174883> out 1 <174884> # multiply-by-constant 4294967295
add in 2 <174883 174661> out 1 <174885>  # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
split in 1 <174885> out 235 <174886 174887 174888 174889 174890 174891 174892 174893 174894 174895 174896 174897 174898 174899 174900 174901 174902 174903 174904 174905 174906 174907 174908 174909 174910 174911 174912 174913 174914 174915 174916 174917 174918 174919 174920 174921 174922 174923 174924 174925 174926 174927 174928 174929 174930 174931 174932 174933 174934 174935 174936 174937 174938 174939 174940 174941 174942 174943 174944 174945 174946 174947 174948 174949 174950 174951 174952 174953 174954 174955 174956 174957 174958 174959 174960 174961 174962 174963 174964 174965 174966 174967 174968 174969 174970 174971 174972 174973 174974 174975 174976 174977 174978 174979 174980 174981 174982 174983 174984 174985 174986 174987 174988 174989 174990 174991 174992 174993 174994 174995 174996 174997 174998 174999 175000 175001 175002 175003 175004 175005 175006 175007 175008 175009 175010 175011 175012 175013 175014 175015 175016 175017 175018 175019 175020 175021 175022 175023 175024 175025 175026 175027 175028 175029 175030 175031 175032 175033 175034 175035 175036 175037 175038 175039 175040 175041 175042 175043 175044 175045 175046 175047 175048 175049 175050 175051 175052 175053 175054 175055 175056 175057 175058 175059 175060 175061 175062 175063 175064 175065 175066 175067 175068 175069 175070 175071 175072 175073 175074 175075 175076 175077 175078 175079 175080 175081 175082 175083 175084 175085 175086 175087 175088 175089 175090 175091 175092 175093 175094 175095 175096 175097 175098 175099 175100 175101 175102 175103 175104 175105 175106 175107 175108 175109 175110 175111 175112 175113 175114 175115 175116 175117 175118 175119 175120> # SplitBus
const-mul-2 in 1 <174917> out 1 <175121> # join source bit 31
add in 2 <174916 175121> out 1 <175122>  # join source bit 30
const-mul-2 in 1 <175122> out 1 <175123> # join
add in 2 <174915 175123> out 1 <175124>  # join source bit 29
const-mul-2 in 1 <175124> out 1 <175125> # join
add in 2 <174914 175125> out 1 <175126>  # join source bit 28
const-mul-2 in 1 <175126> out 1 <175127> # join
add in 2 <174913 175127> out 1 <175128>  # join source bit 27
const-mul-2 in 1 <175128> out 1 <175129> # join
add in 2 <174912 175129> out 1 <175130>  # join source bit 26
const-mul-2 in 1 <175130> out 1 <175131> # join
add in 2 <174911 175131> out 1 <175132>  # join source bit 25
const-mul-2 in 1 <175132> out 1 <175133> # join
add in 2 <174910 175133> out 1 <175134>  # join source bit 24
const-mul-2 in 1 <175134> out 1 <175135> # join
add in 2 <174909 175135> out 1 <175136>  # join source bit 23
const-mul-2 in 1 <175136> out 1 <175137> # join
add in 2 <174908 175137> out 1 <175138>  # join source bit 22
const-mul-2 in 1 <175138> out 1 <175139> # join
add in 2 <174907 175139> out 1 <175140>  # join source bit 21
const-mul-2 in 1 <175140> out 1 <175141> # join
add in 2 <174906 175141> out 1 <175142>  # join source bit 20
const-mul-2 in 1 <175142> out 1 <175143> # join
add in 2 <174905 175143> out 1 <175144>  # join source bit 19
const-mul-2 in 1 <175144> out 1 <175145> # join
add in 2 <174904 175145> out 1 <175146>  # join source bit 18
const-mul-2 in 1 <175146> out 1 <175147> # join
add in 2 <174903 175147> out 1 <175148>  # join source bit 17
const-mul-2 in 1 <175148> out 1 <175149> # join
add in 2 <174902 175149> out 1 <175150>  # join source bit 16
const-mul-2 in 1 <175150> out 1 <175151> # join
add in 2 <174901 175151> out 1 <175152>  # join source bit 15
const-mul-2 in 1 <175152> out 1 <175153> # join
add in 2 <174900 175153> out 1 <175154>  # join source bit 14
const-mul-2 in 1 <175154> out 1 <175155> # join
add in 2 <174899 175155> out 1 <175156>  # join source bit 13
const-mul-2 in 1 <175156> out 1 <175157> # join
add in 2 <174898 175157> out 1 <175158>  # join source bit 12
const-mul-2 in 1 <175158> out 1 <175159> # join
add in 2 <174897 175159> out 1 <175160>  # join source bit 11
const-mul-2 in 1 <175160> out 1 <175161> # join
add in 2 <174896 175161> out 1 <175162>  # join source bit 10
const-mul-2 in 1 <175162> out 1 <175163> # join
add in 2 <174895 175163> out 1 <175164>  # join source bit 9
const-mul-2 in 1 <175164> out 1 <175165> # join
add in 2 <174894 175165> out 1 <175166>  # join source bit 8
const-mul-2 in 1 <175166> out 1 <175167> # join
add in 2 <174893 175167> out 1 <175168>  # join source bit 7
const-mul-2 in 1 <175168> out 1 <175169> # join
add in 2 <174892 175169> out 1 <175170>  # join source bit 6
const-mul-2 in 1 <175170> out 1 <175171> # join
add in 2 <174891 175171> out 1 <175172>  # join source bit 5
const-mul-2 in 1 <175172> out 1 <175173> # join
add in 2 <174890 175173> out 1 <175174>  # join source bit 4
const-mul-2 in 1 <175174> out 1 <175175> # join
add in 2 <174889 175175> out 1 <175176>  # join source bit 3
const-mul-2 in 1 <175176> out 1 <175177> # join
add in 2 <174888 175177> out 1 <175178>  # join source bit 2
const-mul-2 in 1 <175178> out 1 <175179> # join
add in 2 <174887 175179> out 1 <175180>  # join source bit 1
const-mul-2 in 1 <175180> out 1 <175181> # join
add in 2 <174886 175181> out 1 <175182>  # join source bit 0
add in 2 <175182 175182> out 1 <175183>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <175183> out 1 <175184> # multiply-by-constant 4294967295
add in 2 <174885 175184> out 1 <175185>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <174883> out 1 <175186> # multiply-by-constant 4294967295
add in 2 <174661 175186> out 1 <175187>  # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <175187> out 267 <175188 175189 175190 175191 175192 175193 175194 175195 175196 175197 175198 175199 175200 175201 175202 175203 175204 175205 175206 175207 175208 175209 175210 175211 175212 175213 175214 175215 175216 175217 175218 175219 175220 175221 175222 175223 175224 175225 175226 175227 175228 175229 175230 175231 175232 175233 175234 175235 175236 175237 175238 175239 175240 175241 175242 175243 175244 175245 175246 175247 175248 175249 175250 175251 175252 175253 175254 175255 175256 175257 175258 175259 175260 175261 175262 175263 175264 175265 175266 175267 175268 175269 175270 175271 175272 175273 175274 175275 175276 175277 175278 175279 175280 175281 175282 175283 175284 175285 175286 175287 175288 175289 175290 175291 175292 175293 175294 175295 175296 175297 175298 175299 175300 175301 175302 175303 175304 175305 175306 175307 175308 175309 175310 175311 175312 175313 175314 175315 175316 175317 175318 175319 175320 175321 175322 175323 175324 175325 175326 175327 175328 175329 175330 175331 175332 175333 175334 175335 175336 175337 175338 175339 175340 175341 175342 175343 175344 175345 175346 175347 175348 175349 175350 175351 175352 175353 175354 175355 175356 175357 175358 175359 175360 175361 175362 175363 175364 175365 175366 175367 175368 175369 175370 175371 175372 175373 175374 175375 175376 175377 175378 175379 175380 175381 175382 175383 175384 175385 175386 175387 175388 175389 175390 175391 175392 175393 175394 175395 175396 175397 175398 175399 175400 175401 175402 175403 175404 175405 175406 175407 175408 175409 175410 175411 175412 175413 175414 175415 175416 175417 175418 175419 175420 175421 175422 175423 175424 175425 175426 175427 175428 175429 175430 175431 175432 175433 175434 175435 175436 175437 175438 175439 175440 175441 175442 175443 175444 175445 175446 175447 175448 175449 175450 175451 175452 175453 175454> # SplitBus
mul in 2 <175219 175185> out 1 <175455>  # cond trueterm
const-mul-neg-1 in 1 <175219> out 1 <175456> # cond minuscond
add in 2 <100 175456> out 1 <175457>     # cond negcond
mul in 2 <175457 174661> out 1 <175458>  # cond falseterm
add in 2 <175455 175458> out 1 <175459>  # cond result
add in 2 <175459 104> out 1 <175460>     # ArithBusReq.AddReq(DFG.Conditional,DFG.Constant)
const-mul-ffffffff in 1 <55> out 1 <175461> # multiply-by-constant 4294967295
add in 2 <175460 175461> out 1 <175462>  # 'CmpLT DFG.Add - DFG.Input'
split in 1 <175462> out 238 <175463 175464 175465 175466 175467 175468 175469 175470 175471 175472 175473 175474 175475 175476 175477 175478 175479 175480 175481 175482 175483 175484 175485 175486 175487 175488 175489 175490 175491 175492 175493 175494 175495 175496 175497 175498 175499 175500 175501 175502 175503 175504 175505 175506 175507 175508 175509 175510 175511 175512 175513 175514 175515 175516 175517 175518 175519 175520 175521 175522 175523 175524 175525 175526 175527 175528 175529 175530 175531 175532 175533 175534 175535 175536 175537 175538 175539 175540 175541 175542 175543 175544 175545 175546 175547 175548 175549 175550 175551 175552 175553 175554 175555 175556 175557 175558 175559 175560 175561 175562 175563 175564 175565 175566 175567 175568 175569 175570 175571 175572 175573 175574 175575 175576 175577 175578 175579 175580 175581 175582 175583 175584 175585 175586 175587 175588 175589 175590 175591 175592 175593 175594 175595 175596 175597 175598 175599 175600 175601 175602 175603 175604 175605 175606 175607 175608 175609 175610 175611 175612 175613 175614 175615 175616 175617 175618 175619 175620 175621 175622 175623 175624 175625 175626 175627 175628 175629 175630 175631 175632 175633 175634 175635 175636 175637 175638 175639 175640 175641 175642 175643 175644 175645 175646 175647 175648 175649 175650 175651 175652 175653 175654 175655 175656 175657 175658 175659 175660 175661 175662 175663 175664 175665 175666 175667 175668 175669 175670 175671 175672 175673 175674 175675 175676 175677 175678 175679 175680 175681 175682 175683 175684 175685 175686 175687 175688 175689 175690 175691 175692 175693 175694 175695 175696 175697 175698 175699 175700> # SplitBus
mul in 2 <175494 103> out 1 <175701>     # cond trueterm
const-mul-neg-1 in 1 <175494> out 1 <175702> # cond minuscond
add in 2 <100 175702> out 1 <175703>     # cond negcond
mul in 2 <175703 102> out 1 <175704>     # cond falseterm
add in 2 <175701 175704> out 1 <175705>  # cond result
add in 2 <175459 3084> out 1 <175706>    # ArithBusReq.AddReq(DFG.Conditional,DFG.Negate)
const-mul-ffffffff in 1 <175706> out 1 <175707> # multiply-by-constant 4294967295
add in 2 <55 175707> out 1 <175708>      # 'CmpLT DFG.Input - DFG.Subtract'
split in 1 <175708> outplitBus
mul in 2 <175740 103> out 1 <175979>     # cond trueterm
const-mul-neg-1 in 1 <175740> out 1 <175980> # cond minuscond
add in 2 <100 175980> out 1 <175981>     # cond negcond
mul in 2 <175981 175705> out 1 <175982>  # cond falseterm
add in 2 <175979 175982> out 1 <175983>  # cond result
const-mul-ffffffff in 1 <54> out 1 <175984> # multiply-by-constant 4294967295
add in 2 <54 55> out 1 <175985>          # ArithBusReq.AddReq(DFG.Input,DFG.Input)
add in 2 <175985 175984> out 1 <175986>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <175986> out 1 <175987> # multiply-by-constant 4294967295
add in 2 <175985 175987> out 1 <175988>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <54> out 1 <175989> # multiply-by-constant 4294967295
add in 2 <55 175989> out 1 <175990>      # 'CmpLT DFG.Input - DFG.Input'
split in 1 <175990> out 65 <175991 175992 175993 175994 175995 175996 175997 175998 175999 176000 176001 176002 176003 176004 176005 176006 176007 176008 176009 176010 176011 176012 176013 176014 176015 176016 176017 176018 176019 176020 176021 176022 176023 176024 176025 176026 176027 176028 176029 176030 176031 176032 176033 176034 176035 176036 176037 176038 176039 176040 176041 176042 176043 176044 176045 176046 176047 176048 176049 176050 176051 176052 176053 176054 176055> # SplitBus
mul in 2 <176022 175988> out 1 <176056>  # cond trueterm
const-mul-neg-1 in 1 <176022> out 1 <176057> # cond minuscond
add in 2 <100 176057> out 1 <176058>     # cond negcond
mul in 2 <176058 55> out 1 <176059>      # cond falseterm
add in 2 <176056 176059> out 1 <176060>  # cond result
const-mul-ffffffff in 1 <176060> out 1 <176061> # multiply-by-constant 4294967295
add in 2 <176060 56> out 1 <176062>      # ArithBusReq.AddReq(DFG.Conditional,DFG.Input)
add in 2 <176062 176061> out 1 <176063>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <176063> out 1 <176064> # multiply-by-constant 4294967295
add in 2 <176062 176064> out 1 <176065>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <176060> out 1 <176066> # multiply-by-constant 4294967295
add in 2 <56 176066> out 1 <176067>      # 'CmpLT DFG.Input - DFG.Conditional'
split in 1 <176067> out 131 <176068 176069 176070 176071 176072 176073 176074 176075 176076 176077 176078 176079 176080 176081 176082 176083 176084 176085 176086 176087 176088 176089 176090 176091 176092 176093 176094 176095 176096 176097 176098 176099 176100 176101 176102 176103 176104 176105 176106 176107 176108 176109 176110 176111 176112 176113 176114 176115 176116 176117 176118 176119 176120 176121 176122 176123 176124 176125 176126 176127 176128 176129 176130 176131 176132 176133 176134 176135 176136 176137 176138 176139 176140 176141 176142 176143 176144 176145 176146 176147 176148 176149 176150 176151 176152 176153 176154 176155 176156 176157 176158 176159 176160 176161 176162 176163 176164 176165 176166 176167 176168 176169 176170 176171 176172 176173 176174 176175 176176 176177 176178 176179 176180 176181 176182 176183 176184 176185 176186 176187 176188 176189 176190 176191 176192 176193 176194 176195 176196 176197 176198> # SplitBus
mul in 2 <176099 176065> out 1 <176199>  # cond trueterm
const-mul-neg-1 in 1 <176099> out 1 <176200> # cond minuscond
add in 2 <100 176200> out 1 <176201>     # cond negcond
mul in 2 <176201 56> out 1 <176202>      # cond falseterm
add in 2 <176199 176202> out 1 <176203>  # cond result
const-mul-ffffffff in 1 <176203> out 1 <176204> # multiply-by-constant 4294967295
add in 2 <176203 57> out 1 <176205>      # ArithBusReq.AddReq(DFG.Conditional,DFG.Input)
add in 2 <176205 176204> out 1 <176206>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <176203> out 1 <176207> # multiply-by-constant 4294967295
add in 2 <57 176207> out 1 <176208>      # 'CmpLT DFG.Input - DFG.Conditional'
split in 1 <176208> out 197 <176209 176210 176211 176212 176213 176214 176215 176216 176217 176218 176219 176220 176221 176222 176223 176224 176225 176226 176227 176228 176229 176230 176231 176232 176233 176234 176235 176236 176237 176238 176239 176240 176241 176242 176243 176244 176245 176246 176247 176248 176249 176250 176251 176252 176253 176254 176255 176256 176257 176258 176259 176260 176261 176262 176263 176264 176265 176266 176267 176268 176269 176270 176271 176272 176273 176274 176275 176276 176277 176278 176279 176280 176281 176282 176283 176284 176285 176286 176287 176288 176289 176290 176291 176292 176293 176294 176295 176296 176297 176298 176299 176300 176301 176302 176303 176304 176305 176306 176307 176308 176309 176310 176311 176312 176313 176314 176315 176316 176317 176318 176319 176320 176321 176322 176323 176324 176325 176326 176327 176328 176329 176330 176331 176332 176333 176334 176335 176336 176337 176338 176339 176340 176341 176342 176343 176344 176345 176346 176347 176348 176349 176350 176351 176352 176353 176354 176355 176356 176357 176358 176359 176360 176361 176362 176363 176364 176365 176366 176367 176368 176369 176370 176371 176372 176373 176374 176375 176376 176377 176378 176379 176380 176381 176382 176383 176384 176385 176386 176387 176388 176389 176390 176391 176392 176393 176394 176395 176396 176397 176398 176399 176400 176401 176402 176403 176404 176405> # SplitBus
mul in 2 <176240 176206> out 1 <176406>  # cond trueterm
const-mul-neg-1 in 1 <176240> out 1 <176407> # cond minuscond
add in 2 <100 176407> out 1 <176408>     # cond negcond
mul in 2 <176408 176203> out 1 <176409>  # cond falseterm
add in 2 <176406 176409> out 1 <176410>  # cond result
mul in 2 <176099 176063> out 1 <176411>  # cond trueterm
const-mul-neg-1 in 1 <176099> out 1 <176412> # cond minuscond
add in 2 <100 176412> out 1 <176413>     # cond negcond
mul in 2 <176413 176060> out 1 <176414>  # cond falseterm
add in 2 <176411 176414> out 1 <176415>  # cond result
mul in 2 <176022 175986> out 1 <176416>  # cond trueterm
const-mul-neg-1 in 1 <176022> out 1 <176417> # cond minuscond
add in 2 <100 176417> out 1 <176418>     # cond negcond
mul in 2 <176418 54> out 1 <176419>      # cond falseterm
add in 2 <176416 176419> out 1 <176420>  # cond result
const-mul-ffffffff in 1 <176420> out 1 <176421> # multiply-by-constant 4294967295
add in 2 <176420 176415> out 1 <176422>  # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
add in 2 <176422 176421> out 1 <176423>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <176423> out 1 <176424> # multiply-by-constant 4294967295
add in 2 <176422 176424> out 1 <176425>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <176420> out 1 <176426> # multiply-by-constant 4294967295
add in 2 <176415 176426> out 1 <176427>  # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <176427> out 132 <176428 176429 176430 176431 176432 176433 176434 176435 176436 176437 176438 176439 176440 176441 176442 176443 176444 176445 176446 176447 176448 176449 176450 176451 176452 176453 176454 176455 176456 176457 176458 176459 176460 176461 176462 176463 176464 176465 176466 176467 176468 176469 176470 176471 176472 176473 176474 176475 176476 176477 176478 176479 176480 176481 176482 176483 176484 176485 176486 176487 176488 176489 176490 176491 176492 176493 176494 176495 176496 176497 176498 176499 176500 176501 176502 176503 176504 176505 176506 176507 176508 176509 176510 176511 176512 176513 176514 176515 176516 176517 176518 176519 176520 176521 176522 176523 176524 176525 176526 176527 176528 176529 176530 176531 176532 176533 176534 176535 176536 176537 176538 176539 176540 176541 176542 176543 176544 176545 176546 176547 176548 176549 176550 176551 176552 176553 176554 176555 176556 176557 176558 176559> # SplitBus
mul in 2 <176459 176425> out 1 <176560>  # cond trueterm
const-mul-neg-1 in 1 <176459> out 1 <176561> # cond minuscond
add in 2 <100 176561> out 1 <176562>     # cond negcond
mul in 2 <176562 176415> out 1 <176563>  # cond falseterm
add in 2 <176560 176563> out 1 <176564>  # cond result
const-mul-ffffffff in 1 <176564> out 1 <176565> # multiply-by-constant 4294967295
add in 2 <176564 176410> out 1 <176566>  # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
add in 2 <176566 176565> out 1 <176567>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <176567> out 1 <176568> # multiply-by-constant 4294967295
add in 2 <176566 176568> out 1 <176569>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <176564> out 1 <176570> # multiply-by-constant 4294967295
add in 2 <176410 176570> out 1 <176571>  # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <176571> out 199 <176572 176573 176574 176575 176576 176577 176578 176579 176580 176581 176582 176583 176584 176585 176586 176587 176588 176589 176590 176591 176592 176593 176594 176595 176596 176597 176598 176599 176600 176601 176602 176603 176604 176605 176606 176607 176608 176609 176610 176611 176612 176613 176614 176615 176616 176617 176618 176619 176620 176621 176622 176623 176624 176625 176626 176627 176628 176629 176630 176631 176632 176633 176634 176635 176636 176637 176638 176639 176640 176641 176642 176643 176644 176645 176646 176647 176648 176649 176650 176651 176652 176653 176654 176655 176656 176657 176658 176659 176660 176661 176662 176663 176664 176665 176666 176667 176668 176669 176670 176671 176672 176673 176674 176675 176676 176677 176678 176679 176680 176681 176682 176683 176684 176685 176686 176687 176688 176689 176690 176691 176692 176693 176694 176695 176696 176697 176698 176699 176700 176701 176702 176703 176704 176705 176706 176707 176708 176709 176710 176711 176712 176713 176714 176715 176716 176717 176718 176719 176720 176721 176722 176723 176724 176725 176726 176727 176728 176729 176730 176731 176732 176733 176734 176735 176736 176737 176738 176739 176740 176741 176742 176743 176744 176745 176746 176747 176748 176749 176750 176751 176752 176753 176754 176755 176756 176757 176758 176759 176760 176761 176762 176763 176764 176765 176766 176767 176768 176769 176770> # SplitBus
mul in 2 <176603 176569> out 1 <176771>  # cond trueterm
const-mul-neg-1 in 1 <176603> out 1 <176772> # cond minuscond
add in 2 <100 176772> out 1 <176773>     # cond negcond
mul in 2 <176773 176410> out 1 <176774>  # cond falseterm
add in 2 <176771 176774> out 1 <176775>  # cond result
const-mul-ffffffff in 1 <176775> out 1 <176776> # multiply-by-constant 4294967295
const-mul-ffffffff in 1 <176206> out 1 <176777> # multiply-by-constant 4294967295
add in 2 <176205 176777> out 1 <176778>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
mul in 2 <176240 176778> out 1 <176779>  # cond trueterm
const-mul-neg-1 in 1 <176240> out 1 <176780> # cond minuscond
add in 2 <100 176780> out 1 <176781>     # cond negcond
mul in 2 <176781 57> out 1 <176782>      # cond falseterm
add in 2 <176779 176782> out 1 <176783>  # cond result
const-mul-ffffffff in 1 <176783> out 1 <176784> # multiply-by-constant 4294967295
add in 2 <176783 58> out 1 <176785>      # ArithBusReq.AddReq(DFG.Conditional,DFG.Input)
split in 1 <176785> out 231 <176786 176787 176788 176789 176790 176791 176792 176793 176794 176795 176796 176797 176798 176799 176800 176801 176802 176803 176804 176805 176806 176807 176808 176809 176810 176811 176812 176813 176814 176815 176816 176817 176818 176819 176820 176821 176822 176823 176824 176825 176826 176827 176828 176829 176830 176831 176832 176833 176834 176835 176836 176837 176838 176839 176840 176841 176842 176843 176844 176845 176846 176847 176848 176849 176850 176851 176852 176853 176854 176855 176856 176857 176858 176859 176860 176861 176862 176863 176864 176865 176866 176867 176868 176869 176870 176871 176872 176873 176874 176875 176876 176877 176878 176879 176880 176881 176882 176883 176884 176885 176886 176887 176888 176889 176890 176891 176892 176893 176894 176895 176896 176897 176898 176899 176900 176901 176902 176903 176904 176905 176906 176907 176908 176909 176910 176911 176912 176913 176914 176915 176916 176917 176918 176919 176920 176921 176922 176923 176924 176925 176926 176927 176928 176929 176930 176931 176932 176933 176934 176935 176936 176937 176938 176939 176940 176941 176942 176943 176944 176945 176946 176947 176948 176949 176950 176951 176952 176953 176954 176955 176956 176957 176958 176959 176960 176961 176962 176963 176964 176965 176966 176967 176968 176969 176970 176971 176972 176973 176974 176975 176976 176977 176978 176979 176980 176981 176982 176983 176984 176985 176986 176987 176988 176989 176990 176991 176992 176993 176994 176995 176996 176997 176998 176999 177000 177001 177002 177003 177004 177005 177006 177007 177008 177009 177010 177011 177012 177013 177014 177015 177016> # SplitBus
const-mul-2 in 1 <176817> out 1 <177017> # join source bit 31
add in 2 <176816 177017> out 1 <177018>  # join source bit 30
const-mul-2 in 1 <177018> out 1 <177019> # join
add in 2 <176815 177019> out 1 <177020>  # join source bit 29
const-mul-2 in 1 <177020> out 1 <177021> # join
add in 2 <176814 177021> out 1 <177022>  # join source bit 28
const-mul-2 in 1 <177022> out 1 <177023> # join
add in 2 <176813 177023> out 1 <177024>  # join source bit 27
const-mul-2 in 1 <177024> out 1 <177025> # join
add in 2 <176812 177025> out 1 <177026>  # join source bit 26
const-mul-2 in 1 <177026> out 1 <177027> # join
add in 2 <176811 177027> out 1 <177028>  # join source bit 25
const-mul-2 in 1 <177028> out 1 <177029> # join
add in 2 <176810 177029> out 1 <177030>  # join source bit 24
const-mul-2 in 1 <177030> out 1 <177031> # join
add in 2 <176809 177031> out 1 <177032>  # join source bit 23
const-mul-2 in 1 <177032> out 1 <177033> # join
add in 2 <176808 177033> out 1 <177034>  # join source bit 22
const-mul-2 in 1 <177034> out 1 <177035> # join
add in 2 <176807 177035> out 1 <177036>  # join source bit 21
const-mul-2 in 1 <177036> out 1 <177037> # join
add in 2 <176806 177037> out 1 <177038>  # join source bit 20
const-mul-2 in 1 <177038> out 1 <177039> # join
add in 2 <176805 177039> out 1 <177040>  # join source bit 19
const-mul-2 in 1 <177040> out 1 <177041> # join
add in 2 <176804 177041> out 1 <177042>  # join source bit 18
const-mul-2 in 1 <177042> out 1 <177043> # join
add in 2 <176803 177043> out 1 <177044>  # join source bit 17
const-mul-2 in 1 <177044> out 1 <177045> # join
add in 2 <176802 177045> out 1 <177046>  # join source bit 16
const-mul-2 in 1 <177046> out 1 <177047> # join
add in 2 <176801 177047> out 1 <177048>  # join source bit 15
const-mul-2 in 1 <177048> out 1 <177049> # join
add in 2 <176800 177049> out 1 <177050>  # join source bit 14
const-mul-2 in 1 <177050> out 1 <177051> # join
add in 2 <176799 177051> out 1 <177052>  # join source bit 13
const-mul-2 in 1 <177052> out 1 <177053> # join
add in 2 <176798 177053> out 1 <177054>  # join source bit 12
const-mul-2 in 1 <177054> out 1 <177055> # join
add in 2 <176797 177055> out 1 <177056>  # join source bit 11
const-mul-2 in 1 <177056> out 1 <177057> # join
add in 2 <176796 177057> out 1 <177058>  # join source bit 10
const-mul-2 in 1 <177058> out 1 <177059> # join
add in 2 <176795 177059> out 1 <177060>  # join source bit 9
const-mul-2 in 1 <177060> out 1 <177061> # join
add in 2 <176794 177061> out 1 <177062>  # join source bit 8
const-mul-2 in 1 <177062> out 1 <177063> # join
add in 2 <176793 177063> out 1 <177064>  # join source bit 7
const-mul-2 in 1 <177064> out 1 <177065> # join
add in 2 <176792 177065> out 1 <177066>  # join source bit 6
const-mul-2 in 1 <177066> out 1 <177067> # join
add in 2 <176791 177067> out 1 <177068>  # join source bit 5
const-mul-2 in 1 <177068> out 1 <177069> # join
add in 2 <176790 177069> out 1 <177070>  # join source bit 4
const-mul-2 in 1 <177070> out 1 <177071> # join
add in 2 <176789 177071> out 1 <177072>  # join source bit 3
const-mul-2 in 1 <177072> out 1 <177073> # join
add in 2 <176788 177073> out 1 <177074>  # join source bit 2
const-mul-2 in 1 <177074> out 1 <177075> # join
add in 2 <176787 177075> out 1 <177076>  # join source bit 1
const-mul-2 in 1 <177076> out 1 <177077> # join
add in 2 <176786 177077> out 1 <177078>  # join source bit 0
add in 2 <177078 177078> out 1 <177079>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <176783> out 1 <177080> # multiply-by-constant 4294967295
add in 2 <58 177080> out 1 <177081>      # 'CmpLT DFG.Input - DFG.Conditional'
split in 1 <177081> out 263 <177082 177083 177084 177085 177086 177087 177088 177089 177090 177091 177092 177093 177094 177095 177096 177097 177098 177099 177100 177101 177102 177103 177104 177105 177106 177107 177108 177109 177110 177111 177112 177113 177114 177115 177116 177117 177118 177119 177120 177121 177122 177123 177124 177125 177126 177127 177128 177129 177130 177131 177132 177133 177134 177135 177136 177137 177138 177139 177140 177141 177142 177143 177144 177145 177146 177147 177148 177149 177150 177151 177152 177153 177154 177155 177156 177157 177158 177159 177160 177161 177162 177163 177164 177165 177166 177167 177168 177169 177170 177171 177172 177173 177174 177175 177176 177177 177178 177179 177180 177181 177182 177183 177184 177185 177186 177187 177188 177189 177190 177191 177192 177193 177194 177195 177196 177197 177198 177199 177200 177201 177202 177203 177204 177205 177206 177207 177208 177209 177210 177211 177212 177213 177214 177215 177216 177217 177218 177219 177220 177221 177222 177223 177224 177225 177226 177227 177228 177229 177230 177231 177232 177233 177234 177235 177236 177237 177238 177239 177240 177241 177242 177243 177244 177245 177246 177247 177248 177249 177250 177251 177252 177253 177254 177255 177256 177257 177258 177259 177260 177261 177262 177263 177264 177265 177266 177267 177268 177269 177270 177271 177272 177273 177274 177275 177276 177277 177278 177279 177280 177281 177282 177283 177284 177285 177286 177287 177288 177289 177290 177291 177292 177293 177294 177295 177296 177297 177298 177299 177300 177301 177302 177303 177304 177305 177306 177307 177308 177309 177310 177311 177312 177313 177314 177315 177316 177317 177318 177319 177320 177321 177322 177323 177324 177325 177326 177327 177328 177329 177330 177331 177332 177333 177334 177335 177336 177337 177338 177339 177340 177341 177342 177343 177344> # SplitBus
mul in 2 <177113 177079> out 1 <177345>  # cond trueterm
const-mul-neg-1 in 1 <177113> out 1 <177346> # cond minuscond
add in 2 <100 177346> out 1 <177347>     # cond negcond
mul in 2 <177347 176783> out 1 <177348>  # cond falseterm
add in 2 <177345 177348> out 1 <177349>  # cond result
add in 2 <176775 177349> out 1 <177350>  # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
split in 1 <177350> out 233 <177351 177352 177353 177354 177355 177356 177357 177358 177359 177360 177361 177362 177363 177364 177365 177366 177367 177368 177369 177370 177371 177372 177373 177374 177375 177376 177377 177378 177379 177380 177381 177382 177383 177384 177385 177386 177387 177388 177389 177390 177391 177392 177393 177394 177395 177396 177397 177398 177399 177400 177401 177402 177403 177404 177405 177406 177407 177408 177409 177410 177411 177412 177413 177414 177415 177416 177417 177418 177419 177420 177421 177422 177423 177424 177425 177426 177427 177428 177429 177430 177431 177432 177433 177434 177435 177436 177437 177438 177439 177440 177441 177442 177443 177444 177445 177446 177447 177448 177449 177450 177451 177452 177453 177454 177455 177456 177457 177458 177459 177460 177461 177462 177463 177464 177465 177466 177467 177468 177469 177470 177471 177472 177473 177474 177475 177476 177477 177478 177479 177480 177481 177482 177483 177484 177485 177486 177487 177488 177489 177490 177491 177492 177493 177494 177495 177496 177497 177498 177499 177500 177501 177502 177503 177504 177505 177506 177507 177508 177509 177510 177511 177512 177513 177514 177515 177516 177517 177518 177519 177520 177521 177522 177523 177524 177525 177526 177527 177528 177529 177530 177531 177532 177533 177534 177535 177536 177537 177538 177539 177540 177541 177542 177543 177544 177545 177546 177547 177548 177549 177550 177551 177552 177553 177554 177555 177556 177557 177558 177559 177560 177561 177562 177563 177564 177565 177566 177567 177568 177569 177570 177571 177572 177573 177574 177575 177576 177577 177578 177579 177580 177581 177582 177583> # SplitBus
const-mul-2 in 1 <177382> out 1 <177584> # join source bit 31
add in 2 <177381 177584> out 1 <177585>  # join source bit 30
const-mul-2 in 1 <177585> out 1 <177586> # join
add in 2 <177380 177586> out 1 <177587>  # join source bit 29
const-mul-2 in 1 <177587> out 1 <177588> # join
add in 2 <177379 177588> out 1 <177589>  # join source bit 28
const-mul-2 in 1 <177589> out 1 <177590> # join
add in 2 <177378 177590> out 1 <177591>  # join source bit 27
const-mul-2 in 1 <177591> out 1 <177592> # join
add in 2 <177377 177592> out 1 <177593>  # join source bit 26
const-mul-2 in 1 <177593> out 1 <177594> # join
add in 2 <177376 177594> out 1 <177595>  # join source bit 25
const-mul-2 in 1 <177595> out 1 <177596> # join
add in 2 <177375 177596> out 1 <177597>  # join source bit 24
const-mul-2 in 1 <177597> out 1 <177598> # join
add in 2 <177374 177598> out 1 <177599>  # join source bit 23
const-mul-2 in 1 <177599> out 1 <177600> # join
add in 2 <177373 177600> out 1 <177601>  # join source bit 22
const-mul-2 in 1 <177601> out 1 <177602> # join
add in 2 <177372 177602> out 1 <177603>  # join source bit 21
const-mul-2 in 1 <177603> out 1 <177604> # join
add in 2 <177371 177604> out 1 <177605>  # join source bit 20
const-mul-2 in 1 <177605> out 1 <177606> # join
add in 2 <177370 177606> out 1 <177607>  # join source bit 19
const-mul-2 in 1 <177607> out 1 <177608> # join
add in 2 <177369 177608> out 1 <177609>  # join source bit 18
const-mul-2 in 1 <177609> out 1 <177610> # join
add in 2 <177368 177610> out 1 <177611>  # join source bit 17
const-mul-2 in 1 <177611> out 1 <177612> # join
add in 2 <177367 177612> out 1 <177613>  # join source bit 16
const-mul-2 in 1 <177613> out 1 <177614> # join
add in 2 <177366 177614> out 1 <177615>  # join source bit 15
const-mul-2 in 1 <177615> out 1 <177616> # join
add in 2 <177365 177616> out 1 <177617>  # join source bit 14
const-mul-2 in 1 <177617> out 1 <177618> # join
add in 2 <177364 177618> out 1 <177619>  # join source bit 13
const-mul-2 in 1 <177619> out 1 <177620> # join
add in 2 <177363 177620> out 1 <177621>  # join source bit 12
const-mul-2 in 1 <177621> out 1 <177622> # join
add in 2 <177362 177622> out 1 <177623>  # join source bit 11
const-mul-2 in 1 <177623> out 1 <177624> # join
add in 2 <177361 177624> out 1 <177625>  # join source bit 10
const-mul-2 in 1 <177625> out 1 <177626> # join
add in 2 <177360 177626> out 1 <177627>  # join source bit 9
const-mul-2 in 1 <177627> out 1 <177628> # join
add in 2 <177359 177628> out 1 <177629>  # join source bit 8
const-mul-2 in 1 <177629> out 1 <177630> # join
add in 2 <177358 177630> out 1 <177631>  # join source bit 7
const-mul-2 in 1 <177631> out 1 <177632> # join
add in 2 <177357 177632> out 1 <177633>  # join source bit 6
const-mul-2 in 1 <177633> out 1 <177634> # join
add in 2 <177356 177634> out 1 <177635>  # join source bit 5
const-mul-2 in 1 <177635> out 1 <177636> # join
add in 2 <177355 177636> out 1 <177637>  # join source bit 4
const-mul-2 in 1 <177637> out 1 <177638> # join
add in 2 <177354 177638> out 1 <177639>  # join source bit 3
const-mul-2 in 1 <177639> out 1 <177640> # join
add in 2 <177353 177640> out 1 <177641>  # join source bit 2
const-mul-2 in 1 <177641> out 1 <177642> # join
add in 2 <177352 177642> out 1 <177643>  # join source bit 1
const-mul-2 in 1 <177643> out 1 <177644> # join
add in 2 <177351 177644> out 1 <177645>  # join source bit 0
add in 2 <177645 177645> out 1 <177646>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <176775> out 1 <177647> # multiply-by-constant 4294967295
add in 2 <177349 177647> out 1 <177648>  # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <177648> out 265 <177649 177650 177651 177652 177653 177654 177655 177656 177657 177658 177659 177660 177661 177662 177663 177664 177665 177666 177667 177668 177669 177670 177671 177672 177673 177674 177675 177676 177677 177678 177679 177680 177681 177682 177683 177684 177685 177686 177687 177688 177689 177690 177691 177692 177693 177694 177695 177696 177697 177698 177699 177700 177701 177702 177703 177704 177705 177706 177707 177708 177709 177710 177711 177712 177713 177714 177715 177716 177717 177718 177719 177720 177721 177722 177723 177724 177725 177726 177727 177728 177729 177730 177731 177732 177733 177734 177735 177736 177737 177738 177739 177740 177741 177742 177743 177744 177745 177746 177747 177748 177749 177750 177751 177752 177753 177754 177755 177756 177757 177758 177759 177760 177761 177762 177763 177764 177765 177766 177767 177768 177769 177770 177771 177772 177773 177774 177775 177776 177777 177778 177779 177780 177781 177782 177783 177784 177785 177786 177787 177788 177789 177790 177791 177792 177793 177794 177795 177796 177797 177798 177799 177800 177801 177802 177803 177804 177805 177806 177807 177808 177809 177810 177811 177812 177813 177814 177815 177816 177817 177818 177819 177820 177821 177822 177823 177824 177825 177826 177827 177828 177829 177830 177831 177832 177833 177834 177835 177836 177837 177838 177839 177840 177841 177842 177843 177844 177845 177846 177847 177848 177849 177850 177851 177852 177853 177854 177855 177856 177857 177858 177859 177860 177861 177862 177863 177864 177865 177866 177867 177868 177869 177870 177871 177872 177873 177874 177875 177876 177877 177878 177879 177880 177881 177882 177883 177884 177885 177886 177887 177888 177889 177890 177891 177892 177893 177894 177895 177896 177897 177898 177899 177900 177901 177902 177903 177904 177905 177906 177907 177908 177909 177910 177911 177912 177913> # SplitBus
mul in 2 <177680 177646> out 1 <177914>  # cond trueterm
const-mul-neg-1 in 1 <177680> out 1 <177915> # cond minuscond
add in 2 <100 177915> out 1 <177916>     # cond negcond
mul in 2 <177916 176775> out 1 <177917>  # cond falseterm
add in 2 <177914 177917> out 1 <177918>  # cond result
mul in 2 <176603 176567> out 1 <177919>  # cond trueterm
const-mul-neg-1 in 1 <176603> out 1 <177920> # cond minuscond
add in 2 <100 177920> out 1 <177921>     # cond negcond
mul in 2 <177921 176564> out 1 <177922>  # cond falseterm
add in 2 <177919 177922> out 1 <177923>  # cond result
mul in 2 <176459 176423> out 1 <177924>  # cond trueterm
const-mul-neg-1 in 1 <176459> out 1 <177925> # cond minuscond
add in 2 <100 177925> out 1 <177926>     # cond negcond
mul in 2 <177926 176420> out 1 <177927>  # cond falseterm
add in 2 <177924 177927> out 1 <177928>  # cond result
const-mul-ffffffff in 1 <177928> out 1 <177929> # multiply-by-constant 4294967295
add in 2 <177928 177923> out 1 <177930>  # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
add in 2 <177930 177929> out 1 <177931>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <177931> out 1 <177932> # multiply-by-constant 4294967295
add in 2 <177930 177932> out 1 <177933>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <177928> out 1 <177934> # multiply-by-constant 4294967295
add in 2 <177923 177934> out 1 <177935>  # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <177935> out 200 <177936 177937 177938 177939 177940 177941 177942 177943 177944 177945 177946 177947 177948 177949 177950 177951 177952 177953 177954 177955 177956 177957 177958 177959 177960 177961 177962 177963 177964 177965 177966 177967 177968 177969 177970 177971 177972 177973 177974 177975 177976 177977 177978 177979 177980 177981 177982 177983 177984 177985 177986 177987 177988 177989 177990 177991 177992 177993 177994 177995 177996 177997 177998 177999 178000 178001 178002 178003 178004 178005 178006 178007 178008 178009 178010 178011 178012 178013 178014 178015 178016 178017 178018 178019 178020 178021 178022 178023 178024 178025 178026 178027 178028 178029 178030 178031 178032 178033 178034 178035 178036 178037 178038 178039 178040 178041 178042 178043 178044 178045 178046 178047 178048 178049 178050 178051 178052 178053 178054 178055 178056 178057 178058 178059 178060 178061 178062 178063 178064 178065 178066 178067 178068 178069 178070 178071 178072 178073 178074 178075 178076 178077 178078 178079 178080 178081 178082 178083 178084 178085 178086 178087 178088 178089 178090 178091 178092 178093 178094 178095 178096 178097 178098 178099 178100 178101 178102 178103 178104 178105 178106 178107 178108 178109 178110 178111 178112 178113 178114 178115 178116 178117 178118 178119 178120 178121 178122 178123 178124 178125 178126 178127 178128 178129 178130 178131 178132 178133 178134 178135> # SplitBus
mul in 2 <177967 177933> out 1 <178136>  # cond trueterm
const-mul-neg-1 in 1 <177967> out 1 <178137> # cond minuscond
add in 2 <100 178137> out 1 <178138>     # cond negcond
mul in 2 <178138 177923> out 1 <178139>  # cond falseterm
add in 2 <178136 178139> out 1 <178140>  # cond result
const-mul-ffffffff in 1 <178140> out 1 <178141> # multiply-by-constant 4294967295
add in 2 <178140 177918> out 1 <178142>  # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
split in 1 <178142> out 235 <178143 178144 178145 178146 178147 178148 178149 178150 178151 178152 178153 178154 178155 178156 178157 178158 178159 178160 178161 178162 178163 178164 178165 178166 178167 178168 178169 178170 178171 178172 178173 178174 178175 178176 178177 178178 178179 178180 178181 178182 178183 178184 178185 178186 178187 178188 178189 178190 178191 178192 178193 178194 178195 178196 178197 178198 178199 178200 178201 178202 178203 178204 178205 178206 178207 178208 178209 178210 178211 178212 178213 178214 178215 178216 178217 178218 178219 178220 178221 178222 178223 178224 178225 178226 178227 178228 178229 178230 178231 178232 178233 178234 178235 178236 178237 178238 178239 178240 178241 178242 178243 178244 178245 178246 178247 178248 178249 178250 178251 178252 178253 178254 178255 178256 178257 178258 178259 178260 178261 178262 178263 178264 178265 178266 178267 178268 178269 178270 178271 178272 178273 178274 178275 178276 178277 178278 178279 178280 178281 178282 178283 178284 178285 178286 178287 178288 178289 178290 178291 178292 178293 178294 178295 178296 178297 178298 178299 178300 178301 178302 178303 178304 178305 178306 178307 178308 178309 178310 178311 178312 178313 178314 178315 178316 178317 178318 178319 178320 178321 178322 178323 178324 178325 178326 178327 178328 178329 178330 178331 178332 178333 178334 178335 178336 178337 178338 178339 178340 178341 178342 178343 178344 178345 178346 178347 178348 178349 178350 178351 178352 178353 178354 178355 178356 178357 178358 178359 178360 178361 178362 178363 178364 178365 178366 178367 178368 178369 178370 178371 178372 178373 178374 178375 178376 178377> # SplitBus
const-mul-2 in 1 <178174> out 1 <178378> # join source bit 31
add in 2 <178173 178378> out 1 <178379>  # join source bit 30
const-mul-2 in 1 <178379> out 1 <178380> # join
add in 2 <178172 178380> out 1 <178381>  # join source bit 29
const-mul-2 in 1 <178381> out 1 <178382> # join
add in 2 <178171 178382> out 1 <178383>  # join source bit 28
const-mul-2 in 1 <178383> out 1 <178384> # join
add in 2 <178170 178384> out 1 <178385>  # join source bit 27
const-mul-2 in 1 <178385> out 1 <178386> # join
add in 2 <178169 178386> out 1 <178387>  # join source bit 26
const-mul-2 in 1 <178387> out 1 <178388> # join
add in 2 <178168 178388> out 1 <178389>  # join source bit 25
const-mul-2 in 1 <178389> out 1 <178390> # join
add in 2 <178167 178390> out 1 <178391>  # join source bit 24
const-mul-2 in 1 <178391> out 1 <178392> # join
add in 2 <178166 178392> out 1 <178393>  # join source bit 23
const-mul-2 in 1 <178393> out 1 <178394> # join
add in 2 <178165 178394> out 1 <178395>  # join source bit 22
const-mul-2 in 1 <178395> out 1 <178396> # join
add in 2 <178164 178396> out 1 <178397>  # join source bit 21
const-mul-2 in 1 <178397> out 1 <178398> # join
add in 2 <178163 178398> out 1 <178399>  # join source bit 20
const-mul-2 in 1 <178399> out 1 <178400> # join
add in 2 <178162 178400> out 1 <178401>  # join source bit 19
const-mul-2 in 1 <178401> out 1 <178402> # join
add in 2 <178161 178402> out 1 <178403>  # join source bit 18
const-mul-2 in 1 <178403> out 1 <178404> # join
add in 2 <178160 178404> out 1 <178405>  # join source bit 17
const-mul-2 in 1 <178405> out 1 <178406> # join
add in 2 <178159 178406> out 1 <178407>  # join source bit 16
const-mul-2 in 1 <178407> out 1 <178408> # join
add in 2 <178158 178408> out 1 <178409>  # join source bit 15
const-mul-2 in 1 <178409> out 1 <178410> # join
add in 2 <178157 178410> out 1 <178411>  # join source bit 14
const-mul-2 in 1 <178411> out 1 <178412> # join
add in 2 <178156 178412> out 1 <178413>  # join source bit 13
const-mul-2 in 1 <178413> out 1 <178414> # join
add in 2 <178155 178414> out 1 <178415>  # join source bit 12
const-mul-2 in 1 <178415> out 1 <178416> # join
add in 2 <178154 178416> out 1 <178417>  # join source bit 11
const-mul-2 in 1 <178417> out 1 <178418> # join
add in 2 <178153 178418> out 1 <178419>  # join source bit 10
const-mul-2 in 1 <178419> out 1 <178420> # join
add in 2 <178152 178420> out 1 <178421>  # join source bit 9
const-mul-2 in 1 <178421> out 1 <178422> # join
add in 2 <178151 178422> out 1 <178423>  # join source bit 8
const-mul-2 in 1 <178423> out 1 <178424> # join
add in 2 <178150 178424> out 1 <178425>  # join source bit 7
const-mul-2 in 1 <178425> out 1 <178426> # join
add in 2 <178149 178426> out 1 <178427>  # join source bit 6
const-mul-2 in 1 <178427> out 1 <178428> # join
add in 2 <178148 178428> out 1 <178429>  # join source bit 5
const-mul-2 in 1 <178429> out 1 <178430> # join
add in 2 <178147 178430> out 1 <178431>  # join source bit 4
const-mul-2 in 1 <178431> out 1 <178432> # join
add in 2 <178146 178432> out 1 <178433>  # join source bit 3
const-mul-2 in 1 <178433> out 1 <178434> # join
add in 2 <178145 178434> out 1 <178435>  # join source bit 2
const-mul-2 in 1 <178435> out 1 <178436> # join
add in 2 <178144 178436> out 1 <178437>  # join source bit 1
const-mul-2 in 1 <178437> out 1 <178438> # join
add in 2 <178143 178438> out 1 <178439>  # join source bit 0
add in 2 <178439 178439> out 1 <178440>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <178440> out 1 <178441> # multiply-by-constant 4294967295
add in 2 <178142 178441> out 1 <178442>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <178140> out 1 <178443> # multiply-by-constant 4294967295
add in 2 <177918 178443> out 1 <178444>  # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <178444> out 267 <178445 178446 178447 178448 178449 178450 178451 178452 178453 178454 178455 178456 178457 178458 178459 178460 178461 178462 178463 178464 178465 178466 178467 178468 178469 178470 178471 178472 178473 178474 178475 178476 178477 178478 178479 178480 178481 178482 178483 178484 178485 178486 178487 178488 178489 178490 178491 178492 178493 178494 178495 178496 178497 178498 178499 178500 178501 178502 178503 178504 178505 178506 178507 178508 178509 178510 178511 178512 178513 178514 178515 178516 178517 178518 178519 178520 178521 178522 178523 178524 178525 178526 178527 178528 178529 178530 178531 178532 178533 178534 178535 178536 178537 178538 178539 178540 178541 178542 178543 178544 178545 178546 178547 178548 178549 178550 178551 178552 178553 178554 178555 178556 178557 178558 178559 178560 178561 178562 178563 178564 178565 178566 178567 178568 178569 178570 178571 178572 178573 178574 178575 178576 178577 178578 178579 178580 178581 178582 178583 178584 178585 178586 178587 178588 178589 178590 178591 178592 178593 178594 178595 178596 178597 178598 178599 178600 178601 178602 178603 178604 178605 178606 178607 178608 178609 178610 178611 178612 178613 178614 178615 178616 178617 178618 178619 178620 178621 178622 178623 178624 178625 178626 178627 178628 178629 178630 178631 178632 178633 178634 178635 178636 178637 178638 178639 178640 178641 178642 178643 178644 178645 178646 178647 178648 178649 178650 178651 178652 178653 178654 178655 178656 178657 178658 178659 178660 178661 178662 178663 178664 178665 178666 178667 178668 178669 178670 178671 178672 178673 178674 178675 178676 178677 178678 178679 178680 178681 178682 178683 178684 178685 178686 178687 178688 178689 178690 178691 178692 178693 178694 178695 178696 178697 178698 178699 178700 178701 178702 178703 178704 178705 178706 178707 178708 178709 178710 178711> # SplitBus
mul in 2 <178476 178442> out 1 <178712>  # cond trueterm
const-mul-neg-1 in 1 <178476> out 1 <178713> # cond minuscond
add in 2 <100 178713> out 1 <178714>     # cond negcond
mul in 2 <178714 177918> out 1 <178715>  # cond falseterm
add in 2 <178712 178715> out 1 <178716>  # cond result
add in 2 <178716 104> out 1 <178717>     # ArithBusReq.AddReq(DFG.Conditional,DFG.Constant)
const-mul-ffffffff in 1 <56> out 1 <178718> # multiply-by-constant 4294967295
add in 2 <178717 178718> out 1 <178719>  # 'CmpLT DFG.Add - DFG.Input'
split in 1 <178719> outplitBus
mul in 2 <178751 103> out 1 <178958>     # cond trueterm
const-mul-neg-1 in 1 <178751> out 1 <178959> # cond minuscond
add in 2 <100 178959> out 1 <178960>     # cond negcond
mul in 2 <178960 102> out 1 <178961>     # cond falseterm
add in 2 <178958 178961> out 1 <178962>  # cond result
add in 2 <178716 3084> out 1 <178963>    # ArithBusReq.AddReq(DFG.Conditional,DFG.Negate)
const-mul-ffffffff in 1 <178963> out 1 <178964> # multiply-by-constant 4294967295
add in 2 <56 178964> out 1 <178965>      # 'CmpLT DFG.Input - DFG.Subtract'
split in 1 <178965> out 270 <178966 178967 178968 178969 178970 178971 178972 178973 178974 178975 178976 178977 178978 178979 178980 178981 178982 178983 178984 178985 178986 178987 178988 178989 178990 178991 178992 178993 178994 178995 178996 178997 178998 178999 179000 179001 179002 179003 179004 179005 179006 179007 179008 179009 179010 179011 179012 179013 179014 179015 179016 179017 179018 179019 179020 179021 179022 179023 179024 179025 179026 179027 179028 179029 179030 179031 179032 179033 179034 179035 179036 179037 179038 179039 179040 179041 179042 179043 179044 179045 179046 179047 179048 179049 179050 179051 179052 179053 179054 179055 179056 179057 179058 179059 179060 179061 179062 179063 179064 179065 179066 179067 179068 179069 179070 179071 179072 179073 179074 179075 179076 179077 179078 179079 179080 179081 179082 179083 179084 179085 179086 179087 179088 179089 179090 179091 179092 179093 179094 179095 179096 179097 179098 179099 179100 179101 179102 179103 179104 179105 179106 179107 179108 179109 179110 179111 179112 179113 179114 179115 179116 179117 179118 179119 179120 179121 179122 179123 179124 179125 179126 179127 179128 179129 179130 179131 179132 179133 179134 179135 179136 179137 179138 179139 179140 179141 179142 179143 179144 179145 179146 179147 179148 179149 179150 179151 179152 179153 179154 179155 179156 179157 179158 179159 179160 179161 179162 179163 179164 179165 179166 179167 179168 179169 179170 179171 179172 179173 179174 179175 179176 179177 179178 179179 179180 179181 179182 179183 179184 179185 179186 179187 179188 179189 179190 179191 179192 179193 179194 179195 179196 179197 179198 179199 179200 179201 179202 179203 179204 179205 179206 179207 179208 179209 179210 179211 179212 179213 179214 179215 179216 179217 179218 179219 179220 179221 179222 179223 179224 179225 179226 179227 179228 179229 179230 179231 179232 179233 179234 179235> # SplitBus
mul in 2 <178997 103> out 1 <179236>     # cond trueterm
const-mul-neg-1 in 1 <178997> out 1 <179237> # cond minuscond
add in 2 <100 179237> out 1 <179238>     # cond negcond
mul in 2 <179238 178962> out 1 <179239>  # cond falseterm
add in 2 <179236 179239> out 1 <179240>  # cond result
const-mul-ffffffff in 1 <55> out 1 <179241> # multiply-by-constant 4294967295
add in 2 <55 56> out 1 <179242>          # ArithBusReq.AddReq(DFG.Input,DFG.Input)
add in 2 <179242 179241> out 1 <179243>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <179243> out 1 <179244> # multiply-by-constant 4294967295
add in 2 <179242 179244> out 1 <179245>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <55> out 1 <179246> # multiply-by-constant 4294967295
add in 2 <56 179246> out 1 <179247>      # 'CmpLT DFG.Input - DFG.Input'
split in 1 <179247> out 65 <179248 179249 179250 179251 179252 179253 179254 179255 179256 179257 179258 179259 179260 179261 179262 179263 179264 179265 179266 179267 179268 179269 179270 179271 179272 179273 179274 179275 179276 179277 179278 179279 179280 179281 179282 179283 179284 179285 179286 179287 179288 179289 179290 179291 179292 179293 179294 179295 179296 179297 179298 179299 179300 179301 179302 179303 179304 179305 179306 179307 179308 179309 179310 179311 179312> # SplitBus
mul in 2 <179279 179245> out 1 <179313>  # cond trueterm
const-mul-neg-1 in 1 <179279> out 1 <179314> # cond minuscond
add in 2 <100 179314> out 1 <179315>     # cond negcond
mul in 2 <179315 56> out 1 <179316>      # cond falseterm
add in 2 <179313 179316> out 1 <179317>  # cond result
const-mul-ffffffff in 1 <179317> out 1 <179318> # multiply-by-constant 4294967295
add in 2 <179317 57> out 1 <179319>      # ArithBusReq.AddReq(DFG.Conditional,DFG.Input)
add in 2 <179319 179318> out 1 <179320>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <179320> out 1 <179321> # multiply-by-constant 4294967295
add in 2 <179319 179321> out 1 <179322>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <179317> out 1 <179323> # multiply-by-constant 4294967295
add in 2 <57 179323> out 1 <179324>      # 'CmpLT DFG.Input - DFG.Conditional'
split in 1 <179324> out 131 <179325 179326 179327 179328 179329 179330 179331 179332 179333 179334 179335 179336 179337 179338 179339 179340 179341 179342 179343 179344 179345 179346 179347 179348 179349 179350 179351 179352 179353 179354 179355 179356 179357 179358 179359 179360 179361 179362 179363 179364 179365 179366 179367 179368 179369 179370 179371 179372 179373 179374 179375 179376 179377 179378 179379 179380 179381 179382 179383 179384 179385 179386 179387 179388 179389 179390 179391 179392 179393 179394 179395 179396 179397 179398 179399 179400 179401 179402 179403 179404 179405 179406 179407 179408 179409 179410 179411 179412 179413 179414 179415 179416 179417 179418 179419 179420 179421 179422 179423 179424 179425 179426 179427 179428 179429 179430 179431 179432 179433 179434 179435 179436 179437 179438 179439 179440 179441 179442 179443 179444 179445 179446 179447 179448 179449 179450 179451 179452 179453 179454 179455> # SplitBus
mul in 2 <179356 179322> out 1 <179456>  # cond trueterm
const-mul-neg-1 in 1 <179356> out 1 <179457> # cond minuscond
add in 2 <100 179457> out 1 <179458>     # cond negcond
mul in 2 <179458 57> out 1 <179459>      # cond falseterm
add in 2 <179456 179459> out 1 <179460>  # cond result
const-mul-ffffffff in 1 <179460> out 1 <179461> # multiply-by-constant 4294967295
add in 2 <179460 58> out 1 <179462>      # ArithBusReq.AddReq(DFG.Conditional,DFG.Input)
add in 2 <179462 179461> out 1 <179463>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <179460> out 1 <179464> # multiply-by-constant 4294967295
add in 2 <58 179464> out 1 <179465>      # 'CmpLT DFG.Input - DFG.Conditional'
split in 1 <179465> out 197 <179466 179467 179468 179469 179470 179471 179472 179473 179474 179475 179476 179477 179478 179479 179480 179481 179482 179483 179484 179485 179486 179487 179488 179489 179490 179491 179492 179493 179494 179495 179496 179497 179498 179499 179500 179501 179502 179503 179504 179505 179506 179507 179508 179509 179510 179511 179512 179513 179514 179515 179516 179517 179518 179519 179520 179521 179522 179523 179524 179525 179526 179527 179528 179529 179530 179531 179532 179533 179534 179535 179536 179537 179538 179539 179540 179541 179542 179543 179544 179545 179546 179547 179548 179549 179550 179551 179552 179553 179554 179555 179556 179557 179558 179559 179560 179561 179562 179563 179564 179565 179566 179567 179568 179569 179570 179571 179572 179573 179574 179575 179576 179577 179578 179579 179580 179581 179582 179583 179584 179585 179586 179587 179588 179589 179590 179591 179592 179593 179594 179595 179596 179597 179598 179599 179600 179601 179602 179603 179604 179605 179606 179607 179608 179609 179610 179611 179612 179613 179614 179615 179616 179617 179618 179619 179620 179621 179622 179623 179624 179625 179626 179627 179628 179629 179630 179631 179632 179633 179634 179635 179636 179637 179638 179639 179640 179641 179642 179643 179644 179645 179646 179647 179648 179649 179650 179651 179652 179653 179654 179655 179656 179657 179658 179659 179660 179661 179662> # SplitBus
mul in 2 <179497 179463> out 1 <179663>  # cond trueterm
const-mul-neg-1 in 1 <179497> out 1 <179664> # cond minuscond
add in 2 <100 179664> out 1 <179665>     # cond negcond
mul in 2 <179665 179460> out 1 <179666>  # cond falseterm
add in 2 <179663 179666> out 1 <179667>  # cond result
mul in 2 <179356 179320> out 1 <179668>  # cond trueterm
const-mul-neg-1 in 1 <179356> out 1 <179669> # cond minuscond
add in 2 <100 179669> out 1 <179670>     # cond negcond
mul in 2 <179670 179317> out 1 <179671>  # cond falseterm
add in 2 <179668 179671> out 1 <179672>  # cond result
mul in 2 <179279 179243> out 1 <179673>  # cond trueterm
const-mul-neg-1 in 1 <179279> out 1 <179674> # cond minuscond
add in 2 <100 179674> out 1 <179675>     # cond negcond
mul in 2 <179675 55> out 1 <179676>      # cond falseterm
add in 2 <179673 179676> out 1 <179677>  # cond result
const-mul-ffffffff in 1 <179677> out 1 <179678> # multiply-by-constant 4294967295
add in 2 <179677 179672> out 1 <179679>  # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
add in 2 <179679 179678> out 1 <179680>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <179680> out 1 <179681> # multiply-by-constant 4294967295
add in 2 <179679 179681> out 1 <179682>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <179677> out 1 <179683> # multiply-by-constant 4294967295
add in 2 <179672 179683> out 1 <179684>  # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <179684> out 132 <179685 179686 179687 179688 179689 179690 179691 179692 179693 179694 179695 179696 179697 179698 179699 179700 179701 179702 179703 179704 179705 179706 179707 179708 179709 179710 179711 179712 179713 179714 179715 179716 179717 179718 179719 179720 179721 179722 179723 179724 179725 179726 179727 179728 179729 179730 179731 179732 179733 179734 179735 179736 179737 179738 179739 179740 179741 179742 179743 179744 179745 179746 179747 179748 179749 179750 179751 179752 179753 179754 179755 179756 179757 179758 179759 179760 179761 179762 179763 179764 179765 179766 179767 179768 179769 179770 179771 179772 179773 179774 179775 179776 179777 179778 179779 179780 179781 179782 179783 179784 179785 179786 179787 179788 179789 179790 179791 179792 179793 179794 179795 179796 179797 179798 179799 179800 179801 179802 179803 179804 179805 179806 179807 179808 179809 179810 179811 179812 179813 179814 179815 179816> # SplitBus
mul in 2 <179716 179682> out 1 <179817>  # cond trueterm
const-mul-neg-1 in 1 <179716> out 1 <179818> # cond minuscond
add in 2 <100 179818> out 1 <179819>     # cond negcond
mul in 2 <179819 179672> out 1 <179820>  # cond falseterm
add in 2 <179817 179820> out 1 <179821>  # cond result
const-mul-ffffffff in 1 <179821> out 1 <179822> # multiply-by-constant 4294967295
add in 2 <179821 179667> out 1 <179823>  # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
add in 2 <179823 179822> out 1 <179824>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <179824> out 1 <179825> # multiply-by-constant 4294967295
add in 2 <179823 179825> out 1 <179826>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <179821> out 1 <179827> # multiply-by-constant 4294967295
add in 2 <179667 179827> out 1 <179828>  # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <179828> out 199 <179829 179830 179831 179832 179833 179834 179835 179836 179837 179838 179839 179840 179841 179842 179843 179844 179845 179846 179847 179848 179849 179850 179851 179852 179853 179854 179855 179856 179857 179858 179859 179860 179861 179862 179863 179864 179865 179866 179867 179868 179869 179870 179871 179872 179873 179874 179875 179876 179877 179878 179879 179880 179881 179882 179883 179884 179885 179886 179887 179888 179889 179890 179891 179892 179893 179894 179895 179896 179897 179898 179899 179900 179901 179902 179903 179904 179905 179906 179907 179908 179909 179910 179911 179912 179913 179914 179915 179916 179917 179918 179919 179920 179921 179922 179923 179924 179925 179926 179927 179928 179929 179930 179931 179932 179933 179934 179935 179936 179937 179938 179939 179940 179941 179942 179943 179944 179945 179946 179947 179948 179949 179950 179951 179952 179953 179954 179955 179956 179957 179958 179959 179960 179961 179962 179963 179964 179965 179966 179967 179968 179969 179970 179971 179972 179973 179974 179975 179976 179977 179978 179979 179980 179981 179982 179983 179984 179985 179986 179987 179988 179989 179990 179991 179992 179993 179994 179995 179996 179997 179998 179999 180000 180001 180002 180003 180004 180005 180006 180007 180008 180009 180010 180011 180012 180013 180014 180015 180016 180017 180018 180019 180020 180021 180022 180023 180024 180025 180026 180027> # SplitBus
mul in 2 <179860 179826> out 1 <180028>  # cond trueterm
const-mul-neg-1 in 1 <179860> out 1 <180029> # cond minuscond
add in 2 <100 180029> out 1 <180030>     # cond negcond
mul in 2 <180030 179667> out 1 <180031>  # cond falseterm
add in 2 <180028 180031> out 1 <180032>  # cond result
const-mul-ffffffff in 1 <180032> out 1 <180033> # multiply-by-constant 4294967295
const-mul-ffffffff in 1 <179463> out 1 <180034> # multiply-by-constant 4294967295
add in 2 <179462 180034> out 1 <180035>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
mul in 2 <179497 180035> out 1 <180036>  # cond trueterm
const-mul-neg-1 in 1 <179497> out 1 <180037> # cond minuscond
add in 2 <100 180037> out 1 <180038>     # cond negcond
mul in 2 <180038 58> out 1 <180039>      # cond falseterm
add in 2 <180036 180039> out 1 <180040>  # cond result
const-mul-ffffffff in 1 <180040> out 1 <180041> # multiply-by-constant 4294967295
add in 2 <180040 59> out 1 <180042>      # ArithBusReq.AddReq(DFG.Conditional,DFG.Input)
split in 1 <180042> out 231 <180043 180044 180045 180046 180047 180048 180049 180050 180051 180052 180053 180054 180055 180056 180057 180058 180059 180060 180061 180062 180063 180064 180065 180066 180067 180068 180069 180070 180071 180072 180073 180074 180075 180076 180077 180078 180079 180080 180081 180082 180083 180084 180085 180086 180087 180088 180089 180090 180091 180092 180093 180094 180095 180096 180097 180098 180099 180100 180101 180102 180103 180104 180105 180106 180107 180108 180109 180110 180111 180112 180113 180114 180115 180116 180117 180118 180119 180120 180121 180122 180123 180124 180125 180126 180127 180128 180129 180130 180131 180132 180133 180134 180135 180136 180137 180138 180139 180140 180141 180142 180143 180144 180145 180146 180147 180148 180149 180150 180151 180152 180153 180154 180155 180156 180157 180158 180159 180160 180161 180162 180163 180164 180165 180166 180167 180168 180169 180170 180171 180172 180173 180174 180175 180176 180177 180178 180179 180180 180181 180182 180183 180184 180185 180186 180187 180188 180189 180190 180191 180192 180193 180194 180195 180196 180197 180198 180199 180200 180201 180202 180203 180204 180205 180206 180207 180208 180209 180210 180211 180212 180213 180214 180215 180216 180217 180218 180219 180220 180221 180222 180223 180224 180225 180226 180227 180228 180229 180230 180231 180232 180233 180234 180235 180236 180237 180238 180239 180240 180241 180242 180243 180244 180245 180246 180247 180248 180249 180250 180251 180252 180253 180254 180255 180256 180257 180258 180259 180260 180261 180262 180263 180264 180265 180266 180267 180268 180269 180270 180271 180272 180273> # SplitBus
const-mul-2 in 1 <180074> out 1 <180274> # join source bit 31
add in 2 <180073 180274> out 1 <180275>  # join source bit 30
const-mul-2 in 1 <180275> out 1 <180276> # join
add in 2 <180072 180276> out 1 <180277>  # join source bit 29
const-mul-2 in 1 <180277> out 1 <180278> # join
add in 2 <180071 180278> out 1 <180279>  # join source bit 28
const-mul-2 in 1 <180279> out 1 <180280> # join
add in 2 <180070 180280> out 1 <180281>  # join source bit 27
const-mul-2 in 1 <180281> out 1 <180282> # join
add in 2 <180069 180282> out 1 <180283>  # join source bit 26
const-mul-2 in 1 <180283> out 1 <180284> # join
add in 2 <180068 180284> out 1 <180285>  # join source bit 25
const-mul-2 in 1 <180285> out 1 <180286> # join
add in 2 <180067 180286> out 1 <180287>  # join source bit 24
const-mul-2 in 1 <180287> out 1 <180288> # join
add in 2 <180066 180288> out 1 <180289>  # join source bit 23
const-mul-2 in 1 <180289> out 1 <180290> # join
add in 2 <180065 180290> out 1 <180291>  # join source bit 22
const-mul-2 in 1 <180291> out 1 <180292> # join
add in 2 <180064 180292> out 1 <180293>  # join source bit 21
const-mul-2 in 1 <180293> out 1 <180294> # join
add in 2 <180063 180294> out 1 <180295>  # join source bit 20
const-mul-2 in 1 <180295> out 1 <180296> # join
add in 2 <180062 180296> out 1 <180297>  # join source bit 19
const-mul-2 in 1 <180297> out 1 <180298> # join
add in 2 <180061 180298> out 1 <180299>  # join source bit 18
const-mul-2 in 1 <180299> out 1 <180300> # join
add in 2 <180060 180300> out 1 <180301>  # join source bit 17
const-mul-2 in 1 <180301> out 1 <180302> # join
add in 2 <180059 180302> out 1 <180303>  # join source bit 16
const-mul-2 in 1 <180303> out 1 <180304> # join
add in 2 <180058 180304> out 1 <180305>  # join source bit 15
const-mul-2 in 1 <180305> out 1 <180306> # join
add in 2 <180057 180306> out 1 <180307>  # join source bit 14
const-mul-2 in 1 <180307> out 1 <180308> # join
add in 2 <180056 180308> out 1 <180309>  # join source bit 13
const-mul-2 in 1 <180309> out 1 <180310> # join
add in 2 <180055 180310> out 1 <180311>  # join source bit 12
const-mul-2 in 1 <180311> out 1 <180312> # join
add in 2 <180054 180312> out 1 <180313>  # join source bit 11
const-mul-2 in 1 <180313> out 1 <180314> # join
add in 2 <180053 180314> out 1 <180315>  # join source bit 10
const-mul-2 in 1 <180315> out 1 <180316> # join
add in 2 <180052 180316> out 1 <180317>  # join source bit 9
const-mul-2 in 1 <180317> out 1 <180318> # join
add in 2 <180051 180318> out 1 <180319>  # join source bit 8
const-mul-2 in 1 <180319> out 1 <180320> # join
add in 2 <180050 180320> out 1 <180321>  # join source bit 7
const-mul-2 in 1 <180321> out 1 <180322> # join
add in 2 <180049 180322> out 1 <180323>  # join source bit 6
const-mul-2 in 1 <180323> out 1 <180324> # join
add in 2 <180048 180324> out 1 <180325>  # join source bit 5
const-mul-2 in 1 <180325> out 1 <180326> # join
add in 2 <180047 180326> out 1 <180327>  # join source bit 4
const-mul-2 in 1 <180327> out 1 <180328> # join
add in 2 <180046 180328> out 1 <180329>  # join source bit 3
const-mul-2 in 1 <180329> out 1 <180330> # join
add in 2 <180045 180330> out 1 <180331>  # join source bit 2
const-mul-2 in 1 <180331> out 1 <180332> # join
add in 2 <180044 180332> out 1 <180333>  # join source bit 1
const-mul-2 in 1 <180333> out 1 <180334> # join
add in 2 <180043 180334> out 1 <180335>  # join source bit 0
add in 2 <180335 180335> out 1 <180336>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <180040> out 1 <180337> # multiply-by-constant 4294967295
add in 2 <59 180337> out 1 <180338>      # 'CmpLT DFG.Input - DFG.Conditional'
split in 1 <180338> out 263 <180339 180340 180341 180342 180343 180344 180345 180346 180347 180348 180349 180350 180351 180352 180353 180354 180355 180356 180357 180358 180359 180360 180361 180362 180363 180364 180365 180366 180367 180368 180369 180370 180371 180372 180373 180374 180375 180376 180377 180378 180379 180380 180381 180382 180383 180384 180385 180386 180387 180388 180389 180390 180391 180392 180393 180394 180395 180396 180397 180398 180399 180400 180401 180402 180403 180404 180405 180406 180407 180408 180409 180410 180411 180412 180413 180414 180415 180416 180417 180418 180419 180420 180421 180422 180423 180424 180425 180426 180427 180428 180429 180430 180431 180432 180433 180434 180435 180436 180437 180438 180439 180440 180441 180442 180443 180444 180445 180446 180447 180448 180449 180450 180451 180452 180453 180454 180455 180456 180457 180458 180459 180460 180461 180462 180463 180464 180465 180466 180467 180468 180469 180470 180471 180472 180473 180474 180475 180476 180477 180478 180479 180480 180481 180482 180483 180484 180485 180486 180487 180488 180489 180490 180491 180492 180493 180494 180495 180496 180497 180498 180499 180500 180501 180502 180503 180504 180505 180506 180507 180508 180509 180510 180511 180512 180513 180514 180515 180516 180517 180518 180519 180520 180521 180522 180523 180524 180525 180526 180527 180528 180529 180530 180531 180532 180533 180534 180535 180536 180537 180538 180539 180540 180541 180542 180543 180544 180545 180546 180547 180548 180549 180550 180551 180552 180553 180554 180555 180556 180557 180558 180559 180560 180561 180562 180563 180564 180565 180566 180567 180568 180569 180570 180571 180572 180573 180574 180575 180576 180577 180578 180579 180580 180581 180582 180583 180584 180585 180586 180587 180588 180589 180590 180591 180592 180593 180594 180595 180596 180597 180598 180599 180600 180601> # SplitBus
mul in 2 <180370 180336> out 1 <180602>  # cond trueterm
const-mul-neg-1 in 1 <180370> out 1 <180603> # cond minuscond
add in 2 <100 180603> out 1 <180604>     # cond negcond
mul in 2 <180604 180040> out 1 <180605>  # cond falseterm
add in 2 <180602 180605> out 1 <180606>  # cond result
add in 2 <180032 180606> out 1 <180607>  # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
split in 1 <180607> outplitBus
const-mul-2 in 1 <180639> out 1 <180841> # join source bit 31
add in 2 <180638 180841> out 1 <180842>  # join source bit 30
const-mul-2 in 1 <180842> out 1 <180843> # join
add in 2 <180637 180843> out 1 <180844>  # join source bit 29
const-mul-2 in 1 <180844> out 1 <180845> # join
add in 2 <180636 180845> out 1 <180846>  # join source bit 28
const-mul-2 in 1 <180846> out 1 <180847> # join
add in 2 <180635 180847> out 1 <180848>  # join source bit 27
const-mul-2 in 1 <180848> out 1 <180849> # join
add in 2 <180634 180849> out 1 <180850>  # join source bit 26
const-mul-2 in 1 <180850> out 1 <180851> # join
add in 2 <180633 180851> out 1 <180852>  # join source bit 25
const-mul-2 in 1 <180852> out 1 <180853> # join
add in 2 <180632 180853> out 1 <180854>  # join source bit 24
const-mul-2 in 1 <180854> out 1 <180855> # join
add in 2 <180631 180855> out 1 <180856>  # join source bit 23
const-mul-2 in 1 <180856> out 1 <180857> # join
add in 2 <180630 180857> out 1 <180858>  # join source bit 22
const-mul-2 in 1 <180858> out 1 <180859> # join
add in 2 <180629 180859> out 1 <180860>  # join source bit 21
const-mul-2 in 1 <180860> out 1 <180861> # join
add in 2 <180628 180861> out 1 <180862>  # join source bit 20
const-mul-2 in 1 <180862> out 1 <180863> # join
add in 2 <180627 180863> out 1 <180864>  # join source bit 19
const-mul-2 in 1 <180864> out 1 <180865> # join
add in 2 <180626 180865> out 1 <180866>  # join source bit 18
const-mul-2 in 1 <180866> out 1 <180867> # join
add in 2 <180625 180867> out 1 <180868>  # join source bit 17
const-mul-2 in 1 <180868> out 1 <180869> # join
add in 2 <180624 180869> out 1 <180870>  # join source bit 16
const-mul-2 in 1 <180870> out 1 <180871> # join
add in 2 <180623 180871> out 1 <180872>  # join source bit 15
const-mul-2 in 1 <180872> out 1 <180873> # join
add in 2 <180622 180873> out 1 <180874>  # join source bit 14
const-mul-2 in 1 <180874> out 1 <180875> # join
add in 2 <180621 180875> out 1 <180876>  # join source bit 13
const-mul-2 in 1 <180876> out 1 <180877> # join
add in 2 <180620 180877> out 1 <180878>  # join source bit 12
const-mul-2 in 1 <180878> out 1 <180879> # join
add in 2 <180619 180879> out 1 <180880>  # join source bit 11
const-mul-2 in 1 <180880> out 1 <180881> # join
add in 2 <180618 180881> out 1 <180882>  # join source bit 10
const-mul-2 in 1 <180882> out 1 <180883> # join
add in 2 <180617 180883> out 1 <180884>  # join source bit 9
const-mul-2 in 1 <180884> out 1 <180885> # join
add in 2 <180616 180885> out 1 <180886>  # join source bit 8
const-mul-2 in 1 <180886> out 1 <180887> # join
add in 2 <180615 180887> out 1 <180888>  # join source bit 7
const-mul-2 in 1 <180888> out 1 <180889> # join
add in 2 <180614 180889> out 1 <180890>  # join source bit 6
const-mul-2 in 1 <180890> out 1 <180891> # join
add in 2 <180613 180891> out 1 <180892>  # join source bit 5
const-mul-2 in 1 <180892> out 1 <180893> # join
add in 2 <180612 180893> out 1 <180894>  # join source bit 4
const-mul-2 in 1 <180894> out 1 <180895> # join
add in 2 <180611 180895> out 1 <180896>  # join source bit 3
const-mul-2 in 1 <180896> out 1 <180897> # join
add in 2 <180610 180897> out 1 <180898>  # join source bit 2
const-mul-2 in 1 <180898> out 1 <180899> # join
add in 2 <180609 180899> out 1 <180900>  # join source bit 1
const-mul-2 in 1 <180900> out 1 <180901> # join
add in 2 <180608 180901> out 1 <180902>  # join source bit 0
add in 2 <180902 180902> out 1 <180903>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <180032> out 1 <180904> # multiply-by-constant 4294967295
add in 2 <180606 180904> out 1 <180905>  # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <180905> outplitBus
mul in 2 <180937 180903> out 1 <181171>  # cond trueterm
const-mul-neg-1 in 1 <180937> out 1 <181172> # cond minuscond
add in 2 <100 181172> out 1 <181173>     # cond negcond
mul in 2 <181173 180032> out 1 <181174>  # cond falseterm
add in 2 <181171 181174> out 1 <181175>  # cond result
mul in 2 <179860 179824> out 1 <181176>  # cond trueterm
const-mul-neg-1 in 1 <179860> out 1 <181177> # cond minuscond
add in 2 <100 181177> out 1 <181178>     # cond negcond
mul in 2 <181178 179821> out 1 <181179>  # cond falseterm
add in 2 <181176 181179> out 1 <181180>  # cond result
mul in 2 <179716 179680> out 1 <181181>  # cond trueterm
const-mul-neg-1 in 1 <179716> out 1 <181182> # cond minuscond
add in 2 <100 181182> out 1 <181183>     # cond negcond
mul in 2 <181183 179677> out 1 <181184>  # cond falseterm
add in 2 <181181 181184> out 1 <181185>  # cond result
const-mul-ffffffff in 1 <181185> out 1 <181186> # multiply-by-constant 4294967295
add in 2 <181185 181180> out 1 <181187>  # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
add in 2 <181187 181186> out 1 <181188>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <181188> out 1 <181189> # multiply-by-constant 4294967295
add in 2 <181187 181189> out 1 <181190>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <181185> out 1 <181191> # multiply-by-constant 4294967295
add in 2 <181180 181191> out 1 <181192>  # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <181192> out 200 <181193 181194 181195 181196 181197 181198 181199 181200 181201 181202 181203 181204 181205 181206 181207 181208 181209 181210 181211 181212 181213 181214 181215 181216 181217 181218 181219 181220 181221 181222 181223 181224 181225 181226 181227 181228 181229 181230 181231 181232 181233 181234 181235 181236 181237 181238 181239 181240 181241 181242 181243 181244 181245 181246 181247 181248 181249 181250 181251 181252 181253 181254 181255 181256 181257 181258 181259 181260 181261 181262 181263 181264 181265 181266 181267 181268 181269 181270 181271 181272 181273 181274 181275 181276 181277 181278 181279 181280 181281 181282 181283 181284 181285 181286 181287 181288 181289 181290 181291 181292 181293 181294 181295 181296 181297 181298 181299 181300 181301 181302 181303 181304 181305 181306 181307 181308 181309 181310 181311 181312 181313 181314 181315 181316 181317 181318 181319 181320 181321 181322 181323 181324 181325 181326 181327 181328 181329 181330 181331 181332 181333 181334 181335 181336 181337 181338 181339 181340 181341 181342 181343 181344 181345 181346 181347 181348 181349 181350 181351 181352 181353 181354 181355 181356 181357 181358 181359 181360 181361 181362 181363 181364 181365 181366 181367 181368 181369 181370 181371 181372 181373 181374 181375 181376 181377 181378 181379 181380 181381 181382 181383 181384 181385 181386 181387 181388 181389 181390 181391 181392> # SplitBus
mul in 2 <181224 181190> out 1 <181393>  # cond trueterm
const-mul-neg-1 in 1 <181224> out 1 <181394> # cond minuscond
add in 2 <100 181394> out 1 <181395>     # cond negcond
mul in 2 <181395 181180> out 1 <181396>  # cond falseterm
add in 2 <181393 181396> out 1 <181397>  # cond result
const-mul-ffffffff in 1 <181397> out 1 <181398> # multiply-by-constant 4294967295
add in 2 <181397 181175> out 1 <181399>  # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
split in 1 <181399> out 235 <181400 181401 181402 181403 181404 181405 181406 181407 181408 181409 181410 181411 181412 181413 181414 181415 181416 181417 181418 181419 181420 181421 181422 181423 181424 181425 181426 181427 181428 181429 181430 181431 181432 181433 181434 181435 181436 181437 181438 181439 181440 181441 181442 181443 181444 181445 181446 181447 181448 181449 181450 181451 181452 181453 181454 181455 181456 181457 181458 181459 181460 181461 181462 181463 181464 181465 181466 181467 181468 181469 181470 181471 181472 181473 181474 181475 181476 181477 181478 181479 181480 181481 181482 181483 181484 181485 181486 181487 181488 181489 181490 181491 181492 181493 181494 181495 181496 181497 181498 181499 181500 181501 181502 181503 181504 181505 181506 181507 181508 181509 181510 181511 181512 181513 181514 181515 181516 181517 181518 181519 181520 181521 181522 181523 181524 181525 181526 181527 181528 181529 181530 181531 181532 181533 181534 181535 181536 181537 181538 181539 181540 181541 181542 181543 181544 181545 181546 181547 181548 181549 181550 181551 181552 181553 181554 181555 181556 181557 181558 181559 181560 181561 181562 181563 181564 181565 181566 181567 181568 181569 181570 181571 181572 181573 181574 181575 181576 181577 181578 181579 181580 181581 181582 181583 181584 181585 181586 181587 181588 181589 181590 181591 181592 181593 181594 181595 181596 181597 181598 181599 181600 181601 181602 181603 181604 181605 181606 181607 181608 181609 181610 181611 181612 181613 181614 181615 181616 181617 181618 181619 181620 181621 181622 181623 181624 181625 181626 181627 181628 181629 181630 181631 181632 181633 181634> # SplitBus
const-mul-2 in 1 <181431> out 1 <181635> # join source bit 31
add in 2 <181430 181635> out 1 <181636>  # join source bit 30
const-mul-2 in 1 <181636> out 1 <181637> # join
add in 2 <181429 181637> out 1 <181638>  # join source bit 29
const-mul-2 in 1 <181638> out 1 <181639> # join
add in 2 <181428 181639> out 1 <181640>  # join source bit 28
const-mul-2 in 1 <181640> out 1 <181641> # join
add in 2 <181427 181641> out 1 <181642>  # join source bit 27
const-mul-2 in 1 <181642> out 1 <181643> # join
add in 2 <181426 181643> out 1 <181644>  # join source bit 26
const-mul-2 in 1 <181644> out 1 <181645> # join
add in 2 <181425 181645> out 1 <181646>  # join source bit 25
const-mul-2 in 1 <181646> out 1 <181647> # join
add in 2 <181424 181647> out 1 <181648>  # join source bit 24
const-mul-2 in 1 <181648> out 1 <181649> # join
add in 2 <181423 181649> out 1 <181650>  # join source bit 23
const-mul-2 in 1 <181650> out 1 <181651> # join
add in 2 <181422 181651> out 1 <181652>  # join source bit 22
const-mul-2 in 1 <181652> out 1 <181653> # join
add in 2 <181421 181653> out 1 <181654>  # join source bit 21
const-mul-2 in 1 <181654> out 1 <181655> # join
add in 2 <181420 181655> out 1 <181656>  # join source bit 20
const-mul-2 in 1 <181656> out 1 <181657> # join
add in 2 <181419 181657> out 1 <181658>  # join source bit 19
const-mul-2 in 1 <181658> out 1 <181659> # join
add in 2 <181418 181659> out 1 <181660>  # join source bit 18
const-mul-2 in 1 <181660> out 1 <181661> # join
add in 2 <181417 181661> out 1 <181662>  # join source bit 17
const-mul-2 in 1 <181662> out 1 <181663> # join
add in 2 <181416 181663> out 1 <181664>  # join source bit 16
const-mul-2 in 1 <181664> out 1 <181665> # join
add in 2 <181415 181665> out 1 <181666>  # join source bit 15
const-mul-2 in 1 <181666> out 1 <181667> # join
add in 2 <181414 181667> out 1 <181668>  # join source bit 14
const-mul-2 in 1 <181668> out 1 <181669> # join
add in 2 <181413 181669> out 1 <181670>  # join source bit 13
const-mul-2 in 1 <181670> out 1 <181671> # join
add in 2 <181412 181671> out 1 <181672>  # join source bit 12
const-mul-2 in 1 <181672> out 1 <181673> # join
add in 2 <181411 181673> out 1 <181674>  # join source bit 11
const-mul-2 in 1 <181674> out 1 <181675> # join
add in 2 <181410 181675> out 1 <181676>  # join source bit 10
const-mul-2 in 1 <181676> out 1 <181677> # join
add in 2 <181409 181677> out 1 <181678>  # join source bit 9
const-mul-2 in 1 <181678> out 1 <181679> # join
add in 2 <181408 181679> out 1 <181680>  # join source bit 8
const-mul-2 in 1 <181680> out 1 <181681> # join
add in 2 <181407 181681> out 1 <181682>  # join source bit 7
const-mul-2 in 1 <181682> out 1 <181683> # join
add in 2 <181406 181683> out 1 <181684>  # join source bit 6
const-mul-2 in 1 <181684> out 1 <181685> # join
add in 2 <181405 181685> out 1 <181686>  # join source bit 5
const-mul-2 in 1 <181686> out 1 <181687> # join
add in 2 <181404 181687> out 1 <181688>  # join source bit 4
const-mul-2 in 1 <181688> out 1 <181689> # join
add in 2 <181403 181689> out 1 <181690>  # join source bit 3
const-mul-2 in 1 <181690> out 1 <181691> # join
add in 2 <181402 181691> out 1 <181692>  # join source bit 2
const-mul-2 in 1 <181692> out 1 <181693> # join
add in 2 <181401 181693> out 1 <181694>  # join source bit 1
const-mul-2 in 1 <181694> out 1 <181695> # join
add in 2 <181400 181695> out 1 <181696>  # join source bit 0
add in 2 <181696 181696> out 1 <181697>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <181697> out 1 <181698> # multiply-by-constant 4294967295
add in 2 <181399 181698> out 1 <181699>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <181397> out 1 <181700> # multiply-by-constant 4294967295
add in 2 <181175 181700> out 1 <181701>  # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <181701> outplitBus
mul in 2 <181733 181699> out 1 <181969>  # cond trueterm
const-mul-neg-1 in 1 <181733> out 1 <181970> # cond minuscond
add in 2 <100 181970> out 1 <181971>     # cond negcond
mul in 2 <181971 181175> out 1 <181972>  # cond falseterm
add in 2 <181969 181972> out 1 <181973>  # cond result
add in 2 <181973 104> out 1 <181974>     # ArithBusReq.AddReq(DFG.Conditional,DFG.Constant)
const-mul-ffffffff in 1 <57> out 1 <181975> # multiply-by-constant 4294967295
add in 2 <181974 181975> out 1 <181976>  # 'CmpLT DFG.Add - DFG.Input'
split in 1 <181976> out 238 <181977 181978 181979 181980 181981 181982 181983 181984 181985 181986 181987 181988 181989 181990 181991 181992 181993 181994 181995 181996 181997 181998 181999 182000 182001 182002 182003 182004 182005 182006 182007 182008 182009 182010 182011 182012 182013 182014 182015 182016 182017 182018 182019 182020 182021 182022 182023 182024 182025 182026 182027 182028 182029 182030 182031 182032 182033 182034 182035 182036 182037 182038 182039 182040 182041 182042 182043 182044 182045 182046 182047 182048 182049 182050 182051 182052 182053 182054 182055 182056 182057 182058 182059 182060 182061 182062 182063 182064 182065 182066 182067 182068 182069 182070 182071 182072 182073 182074 182075 182076 182077 182078 182079 182080 182081 182082 182083 182084 182085 182086 182087 182088 182089 182090 182091 182092 182093 182094 182095 182096 182097 182098 182099 182100 182101 182102 182103 182104 182105 182106 182107 182108 182109 182110 182111 182112 182113 182114 182115 182116 182117 182118 182119 182120 182121 182122 182123 182124 182125 182126 182127 182128 182129 182130 182131 182132 182133 182134 182135 182136 182137 182138 182139 182140 182141 182142 182143 182144 182145 182146 182147 182148 182149 182150 182151 182152 182153 182154 182155 182156 182157 182158 182159 182160 182161 182162 182163 182164 182165 182166 182167 182168 182169 182170 182171 182172 182173 182174 182175 182176 182177 182178 182179 182180 182181 182182 182183 182184 182185 182186 182187 182188 182189 182190 182191 182192 182193 182194 182195 182196 182197 182198 182199 182200 182201 182202 182203 182204 182205 182206 182207 182208 182209 182210 182211 182212 182213 182214> # SplitBus
mul in 2 <182008 103> out 1 <182215>     # cond trueterm
const-mul-neg-1 in 1 <182008> out 1 <182216> # cond minuscond
add in 2 <100 182216> out 1 <182217>     # cond negcond
mul in 2 <182217 102> out 1 <182218>     # cond falseterm
add in 2 <182215 182218> out 1 <182219>  # cond result
add in 2 <181973 3084> out 1 <182220>    # ArithBusReq.AddReq(DFG.Conditional,DFG.Negate)
const-mul-ffffffff in 1 <182220> out 1 <182221> # multiply-by-constant 4294967295
add in 2 <57 182221> out 1 <182222>      # 'CmpLT DFG.Input - DFG.Subtract'
split in 1 <182222> outplitBus
mul in 2 <182254 103> out 1 <182493>     # cond trueterm
const-mul-neg-1 in 1 <182254> out 1 <182494> # cond minuscond
add in 2 <100 182494> out 1 <182495>     # cond negcond
mul in 2 <182495 182219> out 1 <182496>  # cond falseterm
add in 2 <182493 182496> out 1 <182497>  # cond result
const-mul-ffffffff in 1 <56> out 1 <182498> # multiply-by-constant 4294967295
add in 2 <56 57> out 1 <182499>          # ArithBusReq.AddReq(DFG.Input,DFG.Input)
add in 2 <182499 182498> out 1 <182500>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <182500> out 1 <182501> # multiply-by-constant 4294967295
add in 2 <182499 182501> out 1 <182502>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <56> out 1 <182503> # multiply-by-constant 4294967295
add in 2 <57 182503> out 1 <182504>      # 'CmpLT DFG.Input - DFG.Input'
split in 1 <182504> out 65 <182505 182506 182507 182508 182509 182510 182511 182512 182513 182514 182515 182516 182517 182518 182519 182520 182521 182522 182523 182524 182525 182526 182527 182528 182529 182530 182531 182532 182533 182534 182535 182536 182537 182538 182539 182540 182541 182542 182543 182544 182545 182546 182547 182548 182549 182550 182551 182552 182553 182554 182555 182556 182557 182558 182559 182560 182561 182562 182563 182564 182565 182566 182567 182568 182569> # SplitBus
mul in 2 <182536 182502> out 1 <182570>  # cond trueterm
const-mul-neg-1 in 1 <182536> out 1 <182571> # cond minuscond
add in 2 <100 182571> out 1 <182572>     # cond negcond
mul in 2 <182572 57> out 1 <182573>      # cond falseterm
add in 2 <182570 182573> out 1 <182574>  # cond result
const-mul-ffffffff in 1 <182574> out 1 <182575> # multiply-by-constant 4294967295
add in 2 <182574 58> out 1 <182576>      # ArithBusReq.AddReq(DFG.Conditional,DFG.Input)
add in 2 <182576 182575> out 1 <182577>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <182577> out 1 <182578> # multiply-by-constant 4294967295
add in 2 <182576 182578> out 1 <182579>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <182574> out 1 <182580> # multiply-by-constant 4294967295
add in 2 <58 182580> out 1 <182581>      # 'CmpLT DFG.Input - DFG.Conditional'
split in 1 <182581> out 131 <182582 182583 182584 182585 182586 182587 182588 182589 182590 182591 182592 182593 182594 182595 182596 182597 182598 182599 182600 182601 182602 182603 182604 182605 182606 182607 182608 182609 182610 182611 182612 182613 182614 182615 182616 182617 182618 182619 182620 182621 182622 182623 182624 182625 182626 182627 182628 182629 182630 182631 182632 182633 182634 182635 182636 182637 182638 182639 182640 182641 182642 182643 182644 182645 182646 182647 182648 182649 182650 182651 182652 182653 182654 182655 182656 182657 182658 182659 182660 182661 182662 182663 182664 182665 182666 182667 182668 182669 182670 182671 182672 182673 182674 182675 182676 182677 182678 182679 182680 182681 182682 182683 182684 182685 182686 182687 182688 182689 182690 182691 182692 182693 182694 182695 182696 182697 182698 182699 182700 182701 182702 182703 182704 182705 182706 182707 182708 182709 182710 182711 182712> # SplitBus
mul in 2 <182613 182579> out 1 <182713>  # cond trueterm
const-mul-neg-1 in 1 <182613> out 1 <182714> # cond minuscond
add in 2 <100 182714> out 1 <182715>     # cond negcond
mul in 2 <182715 58> out 1 <182716>      # cond falseterm
add in 2 <182713 182716> out 1 <182717>  # cond result
const-mul-ffffffff in 1 <182717> out 1 <182718> # multiply-by-constant 4294967295
add in 2 <182717 59> out 1 <182719>      # ArithBusReq.AddReq(DFG.Conditional,DFG.Input)
add in 2 <182719 182718> out 1 <182720>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <182717> out 1 <182721> # multiply-by-constant 4294967295
add in 2 <59 182721> out 1 <182722>      # 'CmpLT DFG.Input - DFG.Conditional'
split in 1 <182722> out 197 <182723 182724 182725 182726 182727 182728 182729 182730 182731 182732 182733 182734 182735 182736 182737 182738 182739 182740 182741 182742 182743 182744 182745 182746 182747 182748 182749 182750 182751 182752 182753 182754 182755 182756 182757 182758 182759 182760 182761 182762 182763 182764 182765 182766 182767 182768 182769 182770 182771 182772 182773 182774 182775 182776 182777 182778 182779 182780 182781 182782 182783 182784 182785 182786 182787 182788 182789 182790 182791 182792 182793 182794 182795 182796 182797 182798 182799 182800 182801 182802 182803 182804 182805 182806 182807 182808 182809 182810 182811 182812 182813 182814 182815 182816 182817 182818 182819 182820 182821 182822 182823 182824 182825 182826 182827 182828 182829 182830 182831 182832 182833 182834 182835 182836 182837 182838 182839 182840 182841 182842 182843 182844 182845 182846 182847 182848 182849 182850 182851 182852 182853 182854 182855 182856 182857 182858 182859 182860 182861 182862 182863 182864 182865 182866 182867 182868 182869 182870 182871 182872 182873 182874 182875 182876 182877 182878 182879 182880 182881 182882 182883 182884 182885 182886 182887 182888 182889 182890 182891 182892 182893 182894 182895 182896 182897 182898 182899 182900 182901 182902 182903 182904 182905 182906 182907 182908 182909 182910 182911 182912 182913 182914 182915 182916 182917 182918 182919> # SplitBus
mul in 2 <182754 182720> out 1 <182920>  # cond trueterm
const-mul-neg-1 in 1 <182754> out 1 <182921> # cond minuscond
add in 2 <100 182921> out 1 <182922>     # cond negcond
mul in 2 <182922 182717> out 1 <182923>  # cond falseterm
add in 2 <182920 182923> out 1 <182924>  # cond result
mul in 2 <182613 182577> out 1 <182925>  # cond trueterm
const-mul-neg-1 in 1 <182613> out 1 <182926> # cond minuscond
add in 2 <100 182926> out 1 <182927>     # cond negcond
mul in 2 <182927 182574> out 1 <182928>  # cond falseterm
add in 2 <182925 182928> out 1 <182929>  # cond result
mul in 2 <182536 182500> out 1 <182930>  # cond trueterm
const-mul-neg-1 in 1 <182536> out 1 <182931> # cond minuscond
add in 2 <100 182931> out 1 <182932>     # cond negcond
mul in 2 <182932 56> out 1 <182933>      # cond falseterm
add in 2 <182930 182933> out 1 <182934>  # cond result
const-mul-ffffffff in 1 <182934> out 1 <182935> # multiply-by-constant 4294967295
add in 2 <182934 182929> out 1 <182936>  # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
add in 2 <182936 182935> out 1 <182937>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <182937> out 1 <182938> # multiply-by-constant 4294967295
add in 2 <182936 182938> out 1 <182939>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <182934> out 1 <182940> # multiply-by-constant 4294967295
add in 2 <182929 182940> out 1 <182941>  # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <182941> out 132 <182942 182943 182944 182945 182946 182947 182948 182949 182950 182951 182952 182953 182954 182955 182956 182957 182958 182959 182960 182961 182962 182963 182964 182965 182966 182967 182968 182969 182970 182971 182972 182973 182974 182975 182976 182977 182978 182979 182980 182981 182982 182983 182984 182985 182986 182987 182988 182989 182990 182991 182992 182993 182994 182995 182996 182997 182998 182999 183000 183001 183002 183003 183004 183005 183006 183007 183008 183009 183010 183011 183012 183013 183014 183015 183016 183017 183018 183019 183020 183021 183022 183023 183024 183025 183026 183027 183028 183029 183030 183031 183032 183033 183034 183035 183036 183037 183038 183039 183040 183041 183042 183043 183044 183045 183046 183047 183048 183049 183050 183051 183052 183053 183054 183055 183056 183057 183058 183059 183060 183061 183062 183063 183064 183065 183066 183067 183068 183069 183070 183071 183072 183073> # SplitBus
mul in 2 <182973 182939> out 1 <183074>  # cond trueterm
const-mul-neg-1 in 1 <182973> out 1 <183075> # cond minuscond
add in 2 <100 183075> out 1 <183076>     # cond negcond
mul in 2 <183076 182929> out 1 <183077>  # cond falseterm
add in 2 <183074 183077> out 1 <183078>  # cond result
const-mul-ffffffff in 1 <183078> out 1 <183079> # multiply-by-constant 4294967295
add in 2 <183078 182924> out 1 <183080>  # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
add in 2 <183080 183079> out 1 <183081>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <183081> out 1 <183082> # multiply-by-constant 4294967295
add in 2 <183080 183082> out 1 <183083>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <183078> out 1 <183084> # multiply-by-constant 4294967295
add in 2 <182924 183084> out 1 <183085>  # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <183085> out 199 <183086 183087 183088 183089 183090 183091 183092 183093 183094 183095 183096 183097 183098 183099 183100 183101 183102 183103 183104 183105 183106 183107 183108 183109 183110 183111 183112 183113 183114 183115 183116 183117 183118 183119 183120 183121 183122 183123 183124 183125 183126 183127 183128 183129 183130 183131 183132 183133 183134 183135 183136 183137 183138 183139 183140 183141 183142 183143 183144 183145 183146 183147 183148 183149 183150 183151 183152 183153 183154 183155 183156 183157 183158 183159 183160 183161 183162 183163 183164 183165 183166 183167 183168 183169 183170 183171 183172 183173 183174 183175 183176 183177 183178 183179 183180 183181 183182 183183 183184 183185 183186 183187 183188 183189 183190 183191 183192 183193 183194 183195 183196 183197 183198 183199 183200 183201 183202 183203 183204 183205 183206 183207 183208 183209 183210 183211 183212 183213 183214 183215 183216 183217 183218 183219 183220 183221 183222 183223 183224 183225 183226 183227 183228 183229 183230 183231 183232 183233 183234 183235 183236 183237 183238 183239 183240 183241 183242 183243 183244 183245 183246 183247 183248 183249 183250 183251 183252 183253 183254 183255 183256 183257 183258 183259 183260 183261 183262 183263 183264 183265 183266 183267 183268 183269 183270 183271 183272 183273 183274 183275 183276 183277 183278 183279 183280 183281 183282 183283 183284> # SplitBus
mul in 2 <183117 183083> out 1 <183285>  # cond trueterm
const-mul-neg-1 in 1 <183117> out 1 <183286> # cond minuscond
add in 2 <100 183286> out 1 <183287>     # cond negcond
mul in 2 <183287 182924> out 1 <183288>  # cond falseterm
add in 2 <183285 183288> out 1 <183289>  # cond result
const-mul-ffffffff in 1 <183289> out 1 <183290> # multiply-by-constant 4294967295
const-mul-ffffffff in 1 <182720> out 1 <183291> # multiply-by-constant 4294967295
add in 2 <182719 183291> out 1 <183292>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
mul in 2 <182754 183292> out 1 <183293>  # cond trueterm
const-mul-neg-1 in 1 <182754> out 1 <183294> # cond minuscond
add in 2 <100 183294> out 1 <183295>     # cond negcond
mul in 2 <183295 59> out 1 <183296>      # cond falseterm
add in 2 <183293 183296> out 1 <183297>  # cond result
const-mul-ffffffff in 1 <183297> out 1 <183298> # multiply-by-constant 4294967295
add in 2 <183297 60> out 1 <183299>      # ArithBusReq.AddReq(DFG.Conditional,DFG.Input)
split in 1 <183299> outplitBus
const-mul-2 in 1 <183331> out 1 <183531> # join source bit 31
add in 2 <183330 183531> out 1 <183532>  # join source bit 30
const-mul-2 in 1 <183532> out 1 <183533> # join
add in 2 <183329 183533> out 1 <183534>  # join source bit 29
const-mul-2 in 1 <183534> out 1 <183535> # join
add in 2 <183328 183535> out 1 <183536>  # join source bit 28
const-mul-2 in 1 <183536> out 1 <183537> # join
add in 2 <183327 183537> out 1 <183538>  # join source bit 27
const-mul-2 in 1 <183538> out 1 <183539> # join
add in 2 <183326 183539> out 1 <183540>  # join source bit 26
const-mul-2 in 1 <183540> out 1 <183541> # join
add in 2 <183325 183541> out 1 <183542>  # join source bit 25
const-mul-2 in 1 <183542> out 1 <183543> # join
add in 2 <183324 183543> out 1 <183544>  # join source bit 24
const-mul-2 in 1 <183544> out 1 <183545> # join
add in 2 <183323 183545> out 1 <183546>  # join source bit 23
const-mul-2 in 1 <183546> out 1 <183547> # join
add in 2 <183322 183547> out 1 <183548>  # join source bit 22
const-mul-2 in 1 <183548> out 1 <183549> # join
add in 2 <183321 183549> out 1 <183550>  # join source bit 21
const-mul-2 in 1 <183550> out 1 <183551> # join
add in 2 <183320 183551> out 1 <183552>  # join source bit 20
const-mul-2 in 1 <183552> out 1 <183553> # join
add in 2 <183319 183553> out 1 <183554>  # join source bit 19
const-mul-2 in 1 <183554> out 1 <183555> # join
add in 2 <183318 183555> out 1 <183556>  # join source bit 18
const-mul-2 in 1 <183556> out 1 <183557> # join
add in 2 <183317 183557> out 1 <183558>  # join source bit 17
const-mul-2 in 1 <183558> out 1 <183559> # join
add in 2 <183316 183559> out 1 <183560>  # join source bit 16
const-mul-2 in 1 <183560> out 1 <183561> # join
add in 2 <183315 183561> out 1 <183562>  # join source bit 15
const-mul-2 in 1 <183562> out 1 <183563> # join
add in 2 <183314 183563> out 1 <183564>  # join source bit 14
const-mul-2 in 1 <183564> out 1 <183565> # join
add in 2 <183313 183565> out 1 <183566>  # join source bit 13
const-mul-2 in 1 <183566> out 1 <183567> # join
add in 2 <183312 183567> out 1 <183568>  # join source bit 12
const-mul-2 in 1 <183568> out 1 <183569> # join
add in 2 <183311 183569> out 1 <183570>  # join source bit 11
const-mul-2 in 1 <183570> out 1 <183571> # join
add in 2 <183310 183571> out 1 <183572>  # join source bit 10
const-mul-2 in 1 <183572> out 1 <183573> # join
add in 2 <183309 183573> out 1 <183574>  # join source bit 9
const-mul-2 in 1 <183574> out 1 <183575> # join
add in 2 <183308 183575> out 1 <183576>  # join source bit 8
const-mul-2 in 1 <183576> out 1 <183577> # join
add in 2 <183307 183577> out 1 <183578>  # join source bit 7
const-mul-2 in 1 <183578> out 1 <183579> # join
add in 2 <183306 183579> out 1 <183580>  # join source bit 6
const-mul-2 in 1 <183580> out 1 <183581> # join
add in 2 <183305 183581> out 1 <183582>  # join source bit 5
const-mul-2 in 1 <183582> out 1 <183583> # join
add in 2 <183304 183583> out 1 <183584>  # join source bit 4
const-mul-2 in 1 <183584> out 1 <183585> # join
add in 2 <183303 183585> out 1 <183586>  # join source bit 3
const-mul-2 in 1 <183586> out 1 <183587> # join
add in 2 <183302 183587> out 1 <183588>  # join source bit 2
const-mul-2 in 1 <183588> out 1 <183589> # join
add in 2 <183301 183589> out 1 <183590>  # join source bit 1
const-mul-2 in 1 <183590> out 1 <183591> # join
add in 2 <183300 183591> out 1 <183592>  # join source bit 0
add in 2 <183592 183592> out 1 <183593>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <183297> out 1 <183594> # multiply-by-constant 4294967295
add in 2 <60 183594> out 1 <183595>      # 'CmpLT DFG.Input - DFG.Conditional'
split in 1 <183595> outplitBus
mul in 2 <183627 183593> out 1 <183859>  # cond trueterm
const-mul-neg-1 in 1 <183627> out 1 <183860> # cond minuscond
add in 2 <100 183860> out 1 <183861>     # cond negcond
mul in 2 <183861 183297> out 1 <183862>  # cond falseterm
add in 2 <183859 183862> out 1 <183863>  # cond result
add in 2 <183289 183863> out 1 <183864>  # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
split in 1 <183864> out 233 <183865 183866 183867 183868 183869 183870 183871 183872 183873 183874 183875 183876 183877 183878 183879 183880 183881 183882 183883 183884 183885 183886 183887 183888 183889 183890 183891 183892 183893 183894 183895 183896 183897 183898 183899 183900 183901 183902 183903 183904 183905 183906 183907 183908 183909 183910 183911 183912 183913 183914 183915 183916 183917 183918 183919 183920 183921 183922 183923 183924 183925 183926 183927 183928 183929 183930 183931 183932 183933 183934 183935 183936 183937 183938 183939 183940 183941 183942 183943 183944 183945 183946 183947 183948 183949 183950 183951 183952 183953 183954 183955 183956 183957 183958 183959 183960 183961 183962 183963 183964 183965 183966 183967 183968 183969 183970 183971 183972 183973 183974 183975 183976 183977 183978 183979 183980 183981 183982 183983 183984 183985 183986 183987 183988 183989 183990 183991 183992 183993 183994 183995 183996 183997 183998 183999 184000 184001 184002 184003 184004 184005 184006 184007 184008 184009 184010 184011 184012 184013 184014 184015 184016 184017 184018 184019 184020 184021 184022 184023 184024 184025 184026 184027 184028 184029 184030 184031 184032 184033 184034 184035 184036 184037 184038 184039 184040 184041 184042 184043 184044 184045 184046 184047 184048 184049 184050 184051 184052 184053 184054 184055 184056 184057 184058 184059 184060 184061 184062 184063 184064 184065 184066 184067 184068 184069 184070 184071 184072 184073 184074 184075 184076 184077 184078 184079 184080 184081 184082 184083 184084 184085 184086 184087 184088 184089 184090 184091 184092 184093 184094 184095 184096 184097> # SplitBus
const-mul-2 in 1 <183896> out 1 <184098> # join source bit 31
add in 2 <183895 184098> out 1 <184099>  # join source bit 30
const-mul-2 in 1 <184099> out 1 <184100> # join
add in 2 <183894 184100> out 1 <184101>  # join source bit 29
const-mul-2 in 1 <184101> out 1 <184102> # join
add in 2 <183893 184102> out 1 <184103>  # join source bit 28
const-mul-2 in 1 <184103> out 1 <184104> # join
add in 2 <183892 184104> out 1 <184105>  # join source bit 27
const-mul-2 in 1 <184105> out 1 <184106> # join
add in 2 <183891 184106> out 1 <184107>  # join source bit 26
const-mul-2 in 1 <184107> out 1 <184108> # join
add in 2 <183890 184108> out 1 <184109>  # join source bit 25
const-mul-2 in 1 <184109> out 1 <184110> # join
add in 2 <183889 184110> out 1 <184111>  # join source bit 24
const-mul-2 in 1 <184111> out 1 <184112> # join
add in 2 <183888 184112> out 1 <184113>  # join source bit 23
const-mul-2 in 1 <184113> out 1 <184114> # join
add in 2 <183887 184114> out 1 <184115>  # join source bit 22
const-mul-2 in 1 <184115> out 1 <184116> # join
add in 2 <183886 184116> out 1 <184117>  # join source bit 21
const-mul-2 in 1 <184117> out 1 <184118> # join
add in 2 <183885 184118> out 1 <184119>  # join source bit 20
const-mul-2 in 1 <184119> out 1 <184120> # join
add in 2 <183884 184120> out 1 <184121>  # join source bit 19
const-mul-2 in 1 <184121> out 1 <184122> # join
add in 2 <183883 184122> out 1 <184123>  # join source bit 18
const-mul-2 in 1 <184123> out 1 <184124> # join
add in 2 <183882 184124> out 1 <184125>  # join source bit 17
const-mul-2 in 1 <184125> out 1 <184126> # join
add in 2 <183881 184126> out 1 <184127>  # join source bit 16
const-mul-2 in 1 <184127> out 1 <184128> # join
add in 2 <183880 184128> out 1 <184129>  # join source bit 15
const-mul-2 in 1 <184129> out 1 <184130> # join
add in 2 <183879 184130> out 1 <184131>  # join source bit 14
const-mul-2 in 1 <184131> out 1 <184132> # join
add in 2 <183878 184132> out 1 <184133>  # join source bit 13
const-mul-2 in 1 <184133> out 1 <184134> # join
add in 2 <183877 184134> out 1 <184135>  # join source bit 12
const-mul-2 in 1 <184135> out 1 <184136> # join
add in 2 <183876 184136> out 1 <184137>  # join source bit 11
const-mul-2 in 1 <184137> out 1 <184138> # join
add in 2 <183875 184138> out 1 <184139>  # join source bit 10
const-mul-2 in 1 <184139> out 1 <184140> # join
add in 2 <183874 184140> out 1 <184141>  # join source bit 9
const-mul-2 in 1 <184141> out 1 <184142> # join
add in 2 <183873 184142> out 1 <184143>  # join source bit 8
const-mul-2 in 1 <184143> out 1 <184144> # join
add in 2 <183872 184144> out 1 <184145>  # join source bit 7
const-mul-2 in 1 <184145> out 1 <184146> # join
add in 2 <183871 184146> out 1 <184147>  # join source bit 6
const-mul-2 in 1 <184147> out 1 <184148> # join
add in 2 <183870 184148> out 1 <184149>  # join source bit 5
const-mul-2 in 1 <184149> out 1 <184150> # join
add in 2 <183869 184150> out 1 <184151>  # join source bit 4
const-mul-2 in 1 <184151> out 1 <184152> # join
add in 2 <183868 184152> out 1 <184153>  # join source bit 3
const-mul-2 in 1 <184153> out 1 <184154> # join
add in 2 <183867 184154> out 1 <184155>  # join source bit 2
const-mul-2 in 1 <184155> out 1 <184156> # join
add in 2 <183866 184156> out 1 <184157>  # join source bit 1
const-mul-2 in 1 <184157> out 1 <184158> # join
add in 2 <183865 184158> out 1 <184159>  # join source bit 0
add in 2 <184159 184159> out 1 <184160>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <183289> out 1 <184161> # multiply-by-constant 4294967295
add in 2 <183863 184161> out 1 <184162>  # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <184162> out 265 <184163 184164 184165 184166 184167 184168 184169 184170 184171 184172 184173 184174 184175 184176 184177 184178 184179 184180 184181 184182 184183 184184 184185 184186 184187 184188 184189 184190 184191 184192 184193 184194 184195 184196 184197 184198 184199 184200 184201 184202 184203 184204 184205 184206 184207 184208 184209 184210 184211 184212 184213 184214 184215 184216 184217 184218 184219 184220 184221 184222 184223 184224 184225 184226 184227 184228 184229 184230 184231 184232 184233 184234 184235 184236 184237 184238 184239 184240 184241 184242 184243 184244 184245 184246 184247 184248 184249 184250 184251 184252 184253 184254 184255 184256 184257 184258 184259 184260 184261 184262 184263 184264 184265 184266 184267 184268 184269 184270 184271 184272 184273 184274 184275 184276 184277 184278 184279 184280 184281 184282 184283 184284 184285 184286 184287 184288 184289 184290 184291 184292 184293 184294 184295 184296 184297 184298 184299 184300 184301 184302 184303 184304 184305 184306 184307 184308 184309 184310 184311 184312 184313 184314 184315 184316 184317 184318 184319 184320 184321 184322 184323 184324 184325 184326 184327 184328 184329 184330 184331 184332 184333 184334 184335 184336 184337 184338 184339 184340 184341 184342 184343 184344 184345 184346 184347 184348 184349 184350 184351 184352 184353 184354 184355 184356 184357 184358 184359 184360 184361 184362 184363 184364 184365 184366 184367 184368 184369 184370 184371 184372 184373 184374 184375 184376 184377 184378 184379 184380 184381 184382 184383 184384 184385 184386 184387 184388 184389 184390 184391 184392 184393 184394 184395 184396 184397 184398 184399 184400 184401 184402 184403 184404 184405 184406 184407 184408 184409 184410 184411 184412 184413 184414 184415 184416 184417 184418 184419 184420 184421 184422 184423 184424 184425 184426 184427> # SplitBus
mul in 2 <184194 184160> out 1 <184428>  # cond trueterm
const-mul-neg-1 in 1 <184194> out 1 <184429> # cond minuscond
add in 2 <100 184429> out 1 <184430>     # cond negcond
mul in 2 <184430 183289> out 1 <184431>  # cond falseterm
add in 2 <184428 184431> out 1 <184432>  # cond result
mul in 2 <183117 183081> out 1 <184433>  # cond trueterm
const-mul-neg-1 in 1 <183117> out 1 <184434> # cond minuscond
add in 2 <100 184434> out 1 <184435>     # cond negcond
mul in 2 <184435 183078> out 1 <184436>  # cond falseterm
add in 2 <184433 184436> out 1 <184437>  # cond result
mul in 2 <182973 182937> out 1 <184438>  # cond trueterm
const-mul-neg-1 in 1 <182973> out 1 <184439> # cond minuscond
add in 2 <100 184439> out 1 <184440>     # cond negcond
mul in 2 <184440 182934> out 1 <184441>  # cond falseterm
add in 2 <184438 184441> out 1 <184442>  # cond result
const-mul-ffffffff in 1 <184442> out 1 <184443> # multiply-by-constant 4294967295
add in 2 <184442 184437> out 1 <184444>  # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
add in 2 <184444 184443> out 1 <184445>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <184445> out 1 <184446> # multiply-by-constant 4294967295
add in 2 <184444 184446> out 1 <184447>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <184442> out 1 <184448> # multiply-by-constant 4294967295
add in 2 <184437 184448> out 1 <184449>  # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <184449> out 200 <184450 184451 184452 184453 184454 184455 184456 184457 184458 184459 184460 184461 184462 184463 184464 184465 184466 184467 184468 184469 184470 184471 184472 184473 184474 184475 184476 184477 184478 184479 184480 184481 184482 184483 184484 184485 184486 184487 184488 184489 184490 184491 184492 184493 184494 184495 184496 184497 184498 184499 184500 184501 184502 184503 184504 184505 184506 184507 184508 184509 184510 184511 184512 184513 184514 184515 184516 184517 184518 184519 184520 184521 184522 184523 184524 184525 184526 184527 184528 184529 184530 184531 184532 184533 184534 184535 184536 184537 184538 184539 184540 184541 184542 184543 184544 184545 184546 184547 184548 184549 184550 184551 184552 184553 184554 184555 184556 184557 184558 184559 184560 184561 184562 184563 184564 184565 184566 184567 184568 184569 184570 184571 184572 184573 184574 184575 184576 184577 184578 184579 184580 184581 184582 184583 184584 184585 184586 184587 184588 184589 184590 184591 184592 184593 184594 184595 184596 184597 184598 184599 184600 184601 184602 184603 184604 184605 184606 184607 184608 184609 184610 184611 184612 184613 184614 184615 184616 184617 184618 184619 184620 184621 184622 184623 184624 184625 184626 184627 184628 184629 184630 184631 184632 184633 184634 184635 184636 184637 184638 184639 184640 184641 184642 184643 184644 184645 184646 184647 184648 184649> # SplitBus
mul in 2 <184481 184447> out 1 <184650>  # cond trueterm
const-mul-neg-1 in 1 <184481> out 1 <184651> # cond minuscond
add in 2 <100 184651> out 1 <184652>     # cond negcond
mul in 2 <184652 184437> out 1 <184653>  # cond falseterm
add in 2 <184650 184653> out 1 <184654>  # cond result
const-mul-ffffffff in 1 <184654> out 1 <184655> # multiply-by-constant 4294967295
add in 2 <184654 184432> out 1 <184656>  # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
split in 1 <184656> out 235 <184657 184658 184659 184660 184661 184662 184663 184664 184665 184666 184667 184668 184669 184670 184671 184672 184673 184674 184675 184676 184677 184678 184679 184680 184681 184682 184683 184684 184685 184686 184687 184688 184689 184690 184691 184692 184693 184694 184695 184696 184697 184698 184699 184700 184701 184702 184703 184704 184705 184706 184707 184708 184709 184710 184711 184712 184713 184714 184715 184716 184717 184718 184719 184720 184721 184722 184723 184724 184725 184726 184727 184728 184729 184730 184731 184732 184733 184734 184735 184736 184737 184738 184739 184740 184741 184742 184743 184744 184745 184746 184747 184748 184749 184750 184751 184752 184753 184754 184755 184756 184757 184758 184759 184760 184761 184762 184763 184764 184765 184766 184767 184768 184769 184770 184771 184772 184773 184774 184775 184776 184777 184778 184779 184780 184781 184782 184783 184784 184785 184786 184787 184788 184789 184790 184791 184792 184793 184794 184795 184796 184797 184798 184799 184800 184801 184802 184803 184804 184805 184806 184807 184808 184809 184810 184811 184812 184813 184814 184815 184816 184817 184818 184819 184820 184821 184822 184823 184824 184825 184826 184827 184828 184829 184830 184831 184832 184833 184834 184835 184836 184837 184838 184839 184840 184841 184842 184843 184844 184845 184846 184847 184848 184849 184850 184851 184852 184853 184854 184855 184856 184857 184858 184859 184860 184861 184862 184863 184864 184865 184866 184867 184868 184869 184870 184871 184872 184873 184874 184875 184876 184877 184878 184879 184880 184881 184882 184883 184884 184885 184886 184887 184888 184889 184890 184891> # SplitBus
const-mul-2 in 1 <184688> out 1 <184892> # join source bit 31
add in 2 <184687 184892> out 1 <184893>  # join source bit 30
const-mul-2 in 1 <184893> out 1 <184894> # join
add in 2 <184686 184894> out 1 <184895>  # join source bit 29
const-mul-2 in 1 <184895> out 1 <184896> # join
add in 2 <184685 184896> out 1 <184897>  # join source bit 28
const-mul-2 in 1 <184897> out 1 <184898> # join
add in 2 <184684 184898> out 1 <184899>  # join source bit 27
const-mul-2 in 1 <184899> out 1 <184900> # join
add in 2 <184683 184900> out 1 <184901>  # join source bit 26
const-mul-2 in 1 <184901> out 1 <184902> # join
add in 2 <184682 184902> out 1 <184903>  # join source bit 25
const-mul-2 in 1 <184903> out 1 <184904> # join
add in 2 <184681 184904> out 1 <184905>  # join source bit 24
const-mul-2 in 1 <184905> out 1 <184906> # join
add in 2 <184680 184906> out 1 <184907>  # join source bit 23
const-mul-2 in 1 <184907> out 1 <184908> # join
add in 2 <184679 184908> out 1 <184909>  # join source bit 22
const-mul-2 in 1 <184909> out 1 <184910> # join
add in 2 <184678 184910> out 1 <184911>  # join source bit 21
const-mul-2 in 1 <184911> out 1 <184912> # join
add in 2 <184677 184912> out 1 <184913>  # join source bit 20
const-mul-2 in 1 <184913> out 1 <184914> # join
add in 2 <184676 184914> out 1 <184915>  # join source bit 19
const-mul-2 in 1 <184915> out 1 <184916> # join
add in 2 <184675 184916> out 1 <184917>  # join source bit 18
const-mul-2 in 1 <184917> out 1 <184918> # join
add in 2 <184674 184918> out 1 <184919>  # join source bit 17
const-mul-2 in 1 <184919> out 1 <184920> # join
add in 2 <184673 184920> out 1 <184921>  # join source bit 16
const-mul-2 in 1 <184921> out 1 <184922> # join
add in 2 <184672 184922> out 1 <184923>  # join source bit 15
const-mul-2 in 1 <184923> out 1 <184924> # join
add in 2 <184671 184924> out 1 <184925>  # join source bit 14
const-mul-2 in 1 <184925> out 1 <184926> # join
add in 2 <184670 184926> out 1 <184927>  # join source bit 13
const-mul-2 in 1 <184927> out 1 <184928> # join
add in 2 <184669 184928> out 1 <184929>  # join source bit 12
const-mul-2 in 1 <184929> out 1 <184930> # join
add in 2 <184668 184930> out 1 <184931>  # join source bit 11
const-mul-2 in 1 <184931> out 1 <184932> # join
add in 2 <184667 184932> out 1 <184933>  # join source bit 10
const-mul-2 in 1 <184933> out 1 <184934> # join
add in 2 <184666 184934> out 1 <184935>  # join source bit 9
const-mul-2 in 1 <184935> out 1 <184936> # join
add in 2 <184665 184936> out 1 <184937>  # join source bit 8
const-mul-2 in 1 <184937> out 1 <184938> # join
add in 2 <184664 184938> out 1 <184939>  # join source bit 7
const-mul-2 in 1 <184939> out 1 <184940> # join
add in 2 <184663 184940> out 1 <184941>  # join source bit 6
const-mul-2 in 1 <184941> out 1 <184942> # join
add in 2 <184662 184942> out 1 <184943>  # join source bit 5
const-mul-2 in 1 <184943> out 1 <184944> # join
add in 2 <184661 184944> out 1 <184945>  # join source bit 4
const-mul-2 in 1 <184945> out 1 <184946> # join
add in 2 <184660 184946> out 1 <184947>  # join source bit 3
const-mul-2 in 1 <184947> out 1 <184948> # join
add in 2 <184659 184948> out 1 <184949>  # join source bit 2
const-mul-2 in 1 <184949> out 1 <184950> # join
add in 2 <184658 184950> out 1 <184951>  # join source bit 1
const-mul-2 in 1 <184951> out 1 <184952> # join
add in 2 <184657 184952> out 1 <184953>  # join source bit 0
add in 2 <184953 184953> out 1 <184954>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <184954> out 1 <184955> # multiply-by-constant 4294967295
add in 2 <184656 184955> out 1 <184956>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <184654> out 1 <184957> # multiply-by-constant 4294967295
add in 2 <184432 184957> out 1 <184958>  # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <184958> out 267 <184959 184960 184961 184962 184963 184964 184965 184966 184967 184968 184969 184970 184971 184972 184973 184974 184975 184976 184977 184978 184979 184980 184981 184982 184983 184984 184985 184986 184987 184988 184989 184990 184991 184992 184993 184994 184995 184996 184997 184998 184999 185000 185001 185002 185003 185004 185005 185006 185007 185008 185009 185010 185011 185012 185013 185014 185015 185016 185017 185018 185019 185020 185021 185022 185023 185024 185025 185026 185027 185028 185029 185030 185031 185032 185033 185034 185035 185036 185037 185038 185039 185040 185041 185042 185043 185044 185045 185046 185047 185048 185049 185050 185051 185052 185053 185054 185055 185056 185057 185058 185059 185060 185061 185062 185063 185064 185065 185066 185067 185068 185069 185070 185071 185072 185073 185074 185075 185076 185077 185078 185079 185080 185081 185082 185083 185084 185085 185086 185087 185088 185089 185090 185091 185092 185093 185094 185095 185096 185097 185098 185099 185100 185101 185102 185103 185104 185105 185106 185107 185108 185109 185110 185111 185112 185113 185114 185115 185116 185117 185118 185119 185120 185121 185122 185123 185124 185125 185126 185127 185128 185129 185130 185131 185132 185133 185134 185135 185136 185137 185138 185139 185140 185141 185142 185143 185144 185145 185146 185147 185148 185149 185150 185151 185152 185153 185154 185155 185156 185157 185158 185159 185160 185161 185162 185163 185164 185165 185166 185167 185168 185169 185170 185171 185172 185173 185174 185175 185176 185177 185178 185179 185180 185181 185182 185183 185184 185185 185186 185187 185188 185189 185190 185191 185192 185193 185194 185195 185196 185197 185198 185199 185200 185201 185202 185203 185204 185205 185206 185207 185208 185209 185210 185211 185212 185213 185214 185215 185216 185217 185218 185219 185220 185221 185222 185223 185224 185225> # SplitBus
mul in 2 <184990 184956> out 1 <185226>  # cond trueterm
const-mul-neg-1 in 1 <184990> out 1 <185227> # cond minuscond
add in 2 <100 185227> out 1 <185228>     # cond negcond
mul in 2 <185228 184432> out 1 <185229>  # cond falseterm
add in 2 <185226 185229> out 1 <185230>  # cond result
add in 2 <185230 104> out 1 <185231>     # ArithBusReq.AddReq(DFG.Conditional,DFG.Constant)
const-mul-ffffffff in 1 <58> out 1 <185232> # multiply-by-constant 4294967295
add in 2 <185231 185232> out 1 <185233>  # 'CmpLT DFG.Add - DFG.Input'
split in 1 <185233> outplitBus
mul in 2 <185265 103> out 1 <185472>     # cond trueterm
const-mul-neg-1 in 1 <185265> out 1 <185473> # cond minuscond
add in 2 <100 185473> out 1 <185474>     # cond negcond
mul in 2 <185474 102> out 1 <185475>     # cond falseterm
add in 2 <185472 185475> out 1 <185476>  # cond result
add in 2 <185230 3084> out 1 <185477>    # ArithBusReq.AddReq(DFG.Conditional,DFG.Negate)
const-mul-ffffffff in 1 <185477> out 1 <185478> # multiply-by-constant 4294967295
add in 2 <58 185478> out 1 <185479>      # 'CmpLT DFG.Input - DFG.Subtract'
split in 1 <185479> out 270 <185480 185481 185482 185483 185484 185485 185486 185487 185488 185489 185490 185491 185492 185493 185494 185495 185496 185497 185498 185499 185500 185501 185502 185503 185504 185505 185506 185507 185508 185509 185510 185511 185512 185513 185514 185515 185516 185517 185518 185519 185520 185521 185522 185523 185524 185525 185526 185527 185528 185529 185530 185531 185532 185533 185534 185535 185536 185537 185538 185539 185540 185541 185542 185543 185544 185545 185546 185547 185548 185549 185550 185551 185552 185553 185554 185555 185556 185557 185558 185559 185560 185561 185562 185563 185564 185565 185566 185567 185568 185569 185570 185571 185572 185573 185574 185575 185576 185577 185578 185579 185580 185581 185582 185583 185584 185585 185586 185587 185588 185589 185590 185591 185592 185593 185594 185595 185596 185597 185598 185599 185600 185601 185602 185603 185604 185605 185606 185607 185608 185609 185610 185611 185612 185613 185614 185615 185616 185617 185618 185619 185620 185621 185622 185623 185624 185625 185626 185627 185628 185629 185630 185631 185632 185633 185634 185635 185636 185637 185638 185639 185640 185641 185642 185643 185644 185645 185646 185647 185648 185649 185650 185651 185652 185653 185654 185655 185656 185657 185658 185659 185660 185661 185662 185663 185664 185665 185666 185667 185668 185669 185670 185671 185672 185673 185674 185675 185676 185677 185678 185679 185680 185681 185682 185683 185684 185685 185686 185687 185688 185689 185690 185691 185692 185693 185694 185695 185696 185697 185698 185699 185700 185701 185702 185703 185704 185705 185706 185707 185708 185709 185710 185711 185712 185713 185714 185715 185716 185717 185718 185719 185720 185721 185722 185723 185724 185725 185726 185727 185728 185729 185730 185731 185732 185733 185734 185735 185736 185737 185738 185739 185740 185741 185742 185743 185744 185745 185746 185747 185748 185749> # SplitBus
mul in 2 <185511 103> out 1 <185750>     # cond trueterm
const-mul-neg-1 in 1 <185511> out 1 <185751> # cond minuscond
add in 2 <100 185751> out 1 <185752>     # cond negcond
mul in 2 <185752 185476> out 1 <185753>  # cond falseterm
add in 2 <185750 185753> out 1 <185754>  # cond result
const-mul-ffffffff in 1 <57> out 1 <185755> # multiply-by-constant 4294967295
add in 2 <57 58> out 1 <185756>          # ArithBusReq.AddReq(DFG.Input,DFG.Input)
add in 2 <185756 185755> out 1 <185757>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <185757> out 1 <185758> # multiply-by-constant 4294967295
add in 2 <185756 185758> out 1 <185759>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <57> out 1 <185760> # multiply-by-constant 4294967295
add in 2 <58 185760> out 1 <185761>      # 'CmpLT DFG.Input - DFG.Input'
split in 1 <185761> out 65 <185762 185763 185764 185765 185766 185767 185768 185769 185770 185771 185772 185773 185774 185775 185776 185777 185778 185779 185780 185781 185782 185783 185784 185785 185786 185787 185788 185789 185790 185791 185792 185793 185794 185795 185796 185797 185798 185799 185800 185801 185802 185803 185804 185805 185806 185807 185808 185809 185810 185811 185812 185813 185814 185815 185816 185817 185818 185819 185820 185821 185822 185823 185824 185825 185826> # SplitBus
mul in 2 <185793 185759> out 1 <185827>  # cond trueterm
const-mul-neg-1 in 1 <185793> out 1 <185828> # cond minuscond
add in 2 <100 185828> out 1 <185829>     # cond negcond
mul in 2 <185829 58> out 1 <185830>      # cond falseterm
add in 2 <185827 185830> out 1 <185831>  # cond result
const-mul-ffffffff in 1 <185831> out 1 <185832> # multiply-by-constant 4294967295
add in 2 <185831 59> out 1 <185833>      # ArithBusReq.AddReq(DFG.Conditional,DFG.Input)
add in 2 <185833 185832> out 1 <185834>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <185834> out 1 <185835> # multiply-by-constant 4294967295
add in 2 <185833 185835> out 1 <185836>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <185831> out 1 <185837> # multiply-by-constant 4294967295
add in 2 <59 185837> out 1 <185838>      # 'CmpLT DFG.Input - DFG.Conditional'
split in 1 <185838> out 131 <185839 185840 185841 185842 185843 185844 185845 185846 185847 185848 185849 185850 185851 185852 185853 185854 185855 185856 185857 185858 185859 185860 185861 185862 185863 185864 185865 185866 185867 185868 185869 185870 185871 185872 185873 185874 185875 185876 185877 185878 185879 185880 185881 185882 185883 185884 185885 185886 185887 185888 185889 185890 185891 185892 185893 185894 185895 185896 185897 185898 185899 185900 185901 185902 185903 185904 185905 185906 185907 185908 185909 185910 185911 185912 185913 185914 185915 185916 185917 185918 185919 185920 185921 185922 185923 185924 185925 185926 185927 185928 185929 185930 185931 185932 185933 185934 185935 185936 185937 185938 185939 185940 185941 185942 185943 185944 185945 185946 185947 185948 185949 185950 185951 185952 185953 185954 185955 185956 185957 185958 185959 185960 185961 185962 185963 185964 185965 185966 185967 185968 185969> # SplitBus
mul in 2 <185870 185836> out 1 <185970>  # cond trueterm
const-mul-neg-1 in 1 <185870> out 1 <185971> # cond minuscond
add in 2 <100 185971> out 1 <185972>     # cond negcond
mul in 2 <185972 59> out 1 <185973>      # cond falseterm
add in 2 <185970 185973> out 1 <185974>  # cond result
const-mul-ffffffff in 1 <185974> out 1 <185975> # multiply-by-constant 4294967295
add in 2 <185974 60> out 1 <185976>      # ArithBusReq.AddReq(DFG.Conditional,DFG.Input)
add in 2 <185976 185975> out 1 <185977>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <185974> out 1 <185978> # multiply-by-constant 4294967295
add in 2 <60 185978> out 1 <185979>      # 'CmpLT DFG.Input - DFG.Conditional'
split in 1 <185979> out 197 <185980 185981 185982 185983 185984 185985 185986 185987 185988 185989 185990 185991 185992 185993 185994 185995 185996 185997 185998 185999 186000 186001 186002 186003 186004 186005 186006 186007 186008 186009 186010 186011 186012 186013 186014 186015 186016 186017 186018 186019 186020 186021 186022 186023 186024 186025 186026 186027 186028 186029 186030 186031 186032 186033 186034 186035 186036 186037 186038 186039 186040 186041 186042 186043 186044 186045 186046 186047 186048 186049 186050 186051 186052 186053 186054 186055 186056 186057 186058 186059 186060 186061 186062 186063 186064 186065 186066 186067 186068 186069 186070 186071 186072 186073 186074 186075 186076 186077 186078 186079 186080 186081 186082 186083 186084 186085 186086 186087 186088 186089 186090 186091 186092 186093 186094 186095 186096 186097 186098 186099 186100 186101 186102 186103 186104 186105 186106 186107 186108 186109 186110 186111 186112 186113 186114 186115 186116 186117 186118 186119 186120 186121 186122 186123 186124 186125 186126 186127 186128 186129 186130 186131 186132 186133 186134 186135 186136 186137 186138 186139 186140 186141 186142 186143 186144 186145 186146 186147 186148 186149 186150 186151 186152 186153 186154 186155 186156 186157 186158 186159 186160 186161 186162 186163 186164 186165 186166 186167 186168 186169 186170 186171 186172 186173 186174 186175 186176> # SplitBus
mul in 2 <186011 185977> out 1 <186177>  # cond trueterm
const-mul-neg-1 in 1 <186011> out 1 <186178> # cond minuscond
add in 2 <100 186178> out 1 <186179>     # cond negcond
mul in 2 <186179 185974> out 1 <186180>  # cond falseterm
add in 2 <186177 186180> out 1 <186181>  # cond result
mul in 2 <185870 185834> out 1 <186182>  # cond trueterm
const-mul-neg-1 in 1 <185870> out 1 <186183> # cond minuscond
add in 2 <100 186183> out 1 <186184>     # cond negcond
mul in 2 <186184 185831> out 1 <186185>  # cond falseterm
add in 2 <186182 186185> out 1 <186186>  # cond result
mul in 2 <185793 185757> out 1 <186187>  # cond trueterm
const-mul-neg-1 in 1 <185793> out 1 <186188> # cond minuscond
add in 2 <100 186188> out 1 <186189>     # cond negcond
mul in 2 <186189 57> out 1 <186190>      # cond falseterm
add in 2 <186187 186190> out 1 <186191>  # cond result
const-mul-ffffffff in 1 <186191> out 1 <186192> # multiply-by-constant 4294967295
add in 2 <186191 186186> out 1 <186193>  # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
add in 2 <186193 186192> out 1 <186194>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <186194> out 1 <186195> # multiply-by-constant 4294967295
add in 2 <186193 186195> out 1 <186196>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <186191> out 1 <186197> # multiply-by-constant 4294967295
add in 2 <186186 186197> out 1 <186198>  # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <186198> out 132 <186199 186200 186201 186202 186203 186204 186205 186206 186207 186208 186209 186210 186211 186212 186213 186214 186215 186216 186217 186218 186219 186220 186221 186222 186223 186224 186225 186226 186227 186228 186229 186230 186231 186232 186233 186234 186235 186236 186237 186238 186239 186240 186241 186242 186243 186244 186245 186246 186247 186248 186249 186250 186251 186252 186253 186254 186255 186256 186257 186258 186259 186260 186261 186262 186263 186264 186265 186266 186267 186268 186269 186270 186271 186272 186273 186274 186275 186276 186277 186278 186279 186280 186281 186282 186283 186284 186285 186286 186287 186288 186289 186290 186291 186292 186293 186294 186295 186296 186297 186298 186299 186300 186301 186302 186303 186304 186305 186306 186307 186308 186309 186310 186311 186312 186313 186314 186315 186316 186317 186318 186319 186320 186321 186322 186323 186324 186325 186326 186327 186328 186329 186330> # SplitBus
mul in 2 <186230 186196> out 1 <186331>  # cond trueterm
const-mul-neg-1 in 1 <186230> out 1 <186332> # cond minuscond
add in 2 <100 186332> out 1 <186333>     # cond negcond
mul in 2 <186333 186186> out 1 <186334>  # cond falseterm
add in 2 <186331 186334> out 1 <186335>  # cond result
const-mul-ffffffff in 1 <186335> out 1 <186336> # multiply-by-constant 4294967295
add in 2 <186335 186181> out 1 <186337>  # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
add in 2 <186337 186336> out 1 <186338>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <186338> out 1 <186339> # multiply-by-constant 4294967295
add in 2 <186337 186339> out 1 <186340>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <186335> out 1 <186341> # multiply-by-constant 4294967295
add in 2 <186181 186341> out 1 <186342>  # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <186342> out 199 <186343 186344 186345 186346 186347 186348 186349 186350 186351 186352 186353 186354 186355 186356 186357 186358 186359 186360 186361 186362 186363 186364 186365 186366 186367 186368 186369 186370 186371 186372 186373 186374 186375 186376 186377 186378 186379 186380 186381 186382 186383 186384 186385 186386 186387 186388 186389 186390 186391 186392 186393 186394 186395 186396 186397 186398 186399 186400 186401 186402 186403 186404 186405 186406 186407 186408 186409 186410 186411 186412 186413 186414 186415 186416 186417 186418 186419 186420 186421 186422 186423 186424 186425 186426 186427 186428 186429 186430 186431 186432 186433 186434 186435 186436 186437 186438 186439 186440 186441 186442 186443 186444 186445 186446 186447 186448 186449 186450 186451 186452 186453 186454 186455 186456 186457 186458 186459 186460 186461 186462 186463 186464 186465 186466 186467 186468 186469 186470 186471 186472 186473 186474 186475 186476 186477 186478 186479 186480 186481 186482 186483 186484 186485 186486 186487 186488 186489 186490 186491 186492 186493 186494 186495 186496 186497 186498 186499 186500 186501 186502 186503 186504 186505 186506 186507 186508 186509 186510 186511 186512 186513 186514 186515 186516 186517 186518 186519 186520 186521 186522 186523 186524 186525 186526 186527 186528 186529 186530 186531 186532 186533 186534 186535 186536 186537 186538 186539 186540 186541> # SplitBus
mul in 2 <186374 186340> out 1 <186542>  # cond trueterm
const-mul-neg-1 in 1 <186374> out 1 <186543> # cond minuscond
add in 2 <100 186543> out 1 <186544>     # cond negcond
mul in 2 <186544 186181> out 1 <186545>  # cond falseterm
add in 2 <186542 186545> out 1 <186546>  # cond result
const-mul-ffffffff in 1 <186546> out 1 <186547> # multiply-by-constant 4294967295
const-mul-ffffffff in 1 <185977> out 1 <186548> # multiply-by-constant 4294967295
add in 2 <185976 186548> out 1 <186549>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
mul in 2 <186011 186549> out 1 <186550>  # cond trueterm
const-mul-neg-1 in 1 <186011> out 1 <186551> # cond minuscond
add in 2 <100 186551> out 1 <186552>     # cond negcond
mul in 2 <186552 60> out 1 <186553>      # cond falseterm
add in 2 <186550 186553> out 1 <186554>  # cond result
const-mul-ffffffff in 1 <186554> out 1 <186555> # multiply-by-constant 4294967295
add in 2 <186554 61> out 1 <186556>      # ArithBusReq.AddReq(DFG.Conditional,DFG.Input)
split in 1 <186556> out 231 <186557 186558 186559 186560 186561 186562 186563 186564 186565 186566 186567 186568 186569 186570 186571 186572 186573 186574 186575 186576 186577 186578 186579 186580 186581 186582 186583 186584 186585 186586 186587 186588 186589 186590 186591 186592 186593 186594 186595 186596 186597 186598 186599 186600 186601 186602 186603 186604 186605 186606 186607 186608 186609 186610 186611 186612 186613 186614 186615 186616 186617 186618 186619 186620 186621 186622 186623 186624 186625 186626 186627 186628 186629 186630 186631 186632 186633 186634 186635 186636 186637 186638 186639 186640 186641 186642 186643 186644 186645 186646 186647 186648 186649 186650 186651 186652 186653 186654 186655 186656 186657 186658 186659 186660 186661 186662 186663 186664 186665 186666 186667 186668 186669 186670 186671 186672 186673 186674 186675 186676 186677 186678 186679 186680 186681 186682 186683 186684 186685 186686 186687 186688 186689 186690 186691 186692 186693 186694 186695 186696 186697 186698 186699 186700 186701 186702 186703 186704 186705 186706 186707 186708 186709 186710 186711 186712 186713 186714 186715 186716 186717 186718 186719 186720 186721 186722 186723 186724 186725 186726 186727 186728 186729 186730 186731 186732 186733 186734 186735 186736 186737 186738 186739 186740 186741 186742 186743 186744 186745 186746 186747 186748 186749 186750 186751 186752 186753 186754 186755 186756 186757 186758 186759 186760 186761 186762 186763 186764 186765 186766 186767 186768 186769 186770 186771 186772 186773 186774 186775 186776 186777 186778 186779 186780 186781 186782 186783 186784 186785 186786 186787> # SplitBus
const-mul-2 in 1 <186588> out 1 <186788> # join source bit 31
add in 2 <186587 186788> out 1 <186789>  # join source bit 30
const-mul-2 in 1 <186789> out 1 <186790> # join
add in 2 <186586 186790> out 1 <186791>  # join source bit 29
const-mul-2 in 1 <186791> out 1 <186792> # join
add in 2 <186585 186792> out 1 <186793>  # join source bit 28
const-mul-2 in 1 <186793> out 1 <186794> # join
add in 2 <186584 186794> out 1 <186795>  # join source bit 27
const-mul-2 in 1 <186795> out 1 <186796> # join
add in 2 <186583 186796> out 1 <186797>  # join source bit 26
const-mul-2 in 1 <186797> out 1 <186798> # join
add in 2 <186582 186798> out 1 <186799>  # join source bit 25
const-mul-2 in 1 <186799> out 1 <186800> # join
add in 2 <186581 186800> out 1 <186801>  # join source bit 24
const-mul-2 in 1 <186801> out 1 <186802> # join
add in 2 <186580 186802> out 1 <186803>  # join source bit 23
const-mul-2 in 1 <186803> out 1 <186804> # join
add in 2 <186579 186804> out 1 <186805>  # join source bit 22
const-mul-2 in 1 <186805> out 1 <186806> # join
add in 2 <186578 186806> out 1 <186807>  # join source bit 21
const-mul-2 in 1 <186807> out 1 <186808> # join
add in 2 <186577 186808> out 1 <186809>  # join source bit 20
const-mul-2 in 1 <186809> out 1 <186810> # join
add in 2 <186576 186810> out 1 <186811>  # join source bit 19
const-mul-2 in 1 <186811> out 1 <186812> # join
add in 2 <186575 186812> out 1 <186813>  # join source bit 18
const-mul-2 in 1 <186813> out 1 <186814> # join
add in 2 <186574 186814> out 1 <186815>  # join source bit 17
const-mul-2 in 1 <186815> out 1 <186816> # join
add in 2 <186573 186816> out 1 <186817>  # join source bit 16
const-mul-2 in 1 <186817> out 1 <186818> # join
add in 2 <186572 186818> out 1 <186819>  # join source bit 15
const-mul-2 in 1 <186819> out 1 <186820> # join
add in 2 <186571 186820> out 1 <186821>  # join source bit 14
const-mul-2 in 1 <186821> out 1 <186822> # join
add in 2 <186570 186822> out 1 <186823>  # join source bit 13
const-mul-2 in 1 <186823> out 1 <186824> # join
add in 2 <186569 186824> out 1 <186825>  # join source bit 12
const-mul-2 in 1 <186825> out 1 <186826> # join
add in 2 <186568 186826> out 1 <186827>  # join source bit 11
const-mul-2 in 1 <186827> out 1 <186828> # join
add in 2 <186567 186828> out 1 <186829>  # join source bit 10
const-mul-2 in 1 <186829> out 1 <186830> # join
add in 2 <186566 186830> out 1 <186831>  # join source bit 9
const-mul-2 in 1 <186831> out 1 <186832> # join
add in 2 <186565 186832> out 1 <186833>  # join source bit 8
const-mul-2 in 1 <186833> out 1 <186834> # join
add in 2 <186564 186834> out 1 <186835>  # join source bit 7
const-mul-2 in 1 <186835> out 1 <186836> # join
add in 2 <186563 186836> out 1 <186837>  # join source bit 6
const-mul-2 in 1 <186837> out 1 <186838> # join
add in 2 <186562 186838> out 1 <186839>  # join source bit 5
const-mul-2 in 1 <186839> out 1 <186840> # join
add in 2 <186561 186840> out 1 <186841>  # join source bit 4
const-mul-2 in 1 <186841> out 1 <186842> # join
add in 2 <186560 186842> out 1 <186843>  # join source bit 3
const-mul-2 in 1 <186843> out 1 <186844> # join
add in 2 <186559 186844> out 1 <186845>  # join source bit 2
const-mul-2 in 1 <186845> out 1 <186846> # join
add in 2 <186558 186846> out 1 <186847>  # join source bit 1
const-mul-2 in 1 <186847> out 1 <186848> # join
add in 2 <186557 186848> out 1 <186849>  # join source bit 0
add in 2 <186849 186849> out 1 <186850>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <186554> out 1 <186851> # multiply-by-constant 4294967295
add in 2 <61 186851> out 1 <186852>      # 'CmpLT DFG.Input - DFG.Conditional'
split in 1 <186852> out 263 <186853 186854 186855 186856 186857 186858 186859 186860 186861 186862 186863 186864 186865 186866 186867 186868 186869 186870 186871 186872 186873 186874 186875 186876 186877 186878 186879 186880 186881 186882 186883 186884 186885 186886 186887 186888 186889 186890 186891 186892 186893 186894 186895 186896 186897 186898 186899 186900 186901 186902 186903 186904 186905 186906 186907 186908 186909 186910 186911 186912 186913 186914 186915 186916 186917 186918 186919 186920 186921 186922 186923 186924 186925 186926 186927 186928 186929 186930 186931 186932 186933 186934 186935 186936 186937 186938 186939 186940 186941 186942 186943 186944 186945 186946 186947 186948 186949 186950 186951 186952 186953 186954 186955 186956 186957 186958 186959 186960 186961 186962 186963 186964 186965 186966 186967 186968 186969 186970 186971 186972 186973 186974 186975 186976 186977 186978 186979 186980 186981 186982 186983 186984 186985 186986 186987 186988 186989 186990 186991 186992 186993 186994 186995 186996 186997 186998 186999 187000 187001 187002 187003 187004 187005 187006 187007 187008 187009 187010 187011 187012 187013 187014 187015 187016 187017 187018 187019 187020 187021 187022 187023 187024 187025 187026 187027 187028 187029 187030 187031 187032 187033 187034 187035 187036 187037 187038 187039 187040 187041 187042 187043 187044 187045 187046 187047 187048 187049 187050 187051 187052 187053 187054 187055 187056 187057 187058 187059 187060 187061 187062 187063 187064 187065 187066 187067 187068 187069 187070 187071 187072 187073 187074 187075 187076 187077 187078 187079 187080 187081 187082 187083 187084 187085 187086 187087 187088 187089 187090 187091 187092 187093 187094 187095 187096 187097 187098 187099 187100 187101 187102 187103 187104 187105 187106 187107 187108 187109 187110 187111 187112 187113 187114 187115> # SplitBus
mul in 2 <186884 186850> out 1 <187116>  # cond trueterm
const-mul-neg-1 in 1 <186884> out 1 <187117> # cond minuscond
add in 2 <100 187117> out 1 <187118>     # cond negcond
mul in 2 <187118 186554> out 1 <187119>  # cond falseterm
add in 2 <187116 187119> out 1 <187120>  # cond result
add in 2 <186546 187120> out 1 <187121>  # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
split in 1 <187121> outplitBus
const-mul-2 in 1 <187153> out 1 <187355> # join source bit 31
add in 2 <187152 187355> out 1 <187356>  # join source bit 30
const-mul-2 in 1 <187356> out 1 <187357> # join
add in 2 <187151 187357> out 1 <187358>  # join source bit 29
const-mul-2 in 1 <187358> out 1 <187359> # join
add in 2 <187150 187359> out 1 <187360>  # join source bit 28
const-mul-2 in 1 <187360> out 1 <187361> # join
add in 2 <187149 187361> out 1 <187362>  # join source bit 27
const-mul-2 in 1 <187362> out 1 <187363> # join
add in 2 <187148 187363> out 1 <187364>  # join source bit 26
const-mul-2 in 1 <187364> out 1 <187365> # join
add in 2 <187147 187365> out 1 <187366>  # join source bit 25
const-mul-2 in 1 <187366> out 1 <187367> # join
add in 2 <187146 187367> out 1 <187368>  # join source bit 24
const-mul-2 in 1 <187368> out 1 <187369> # join
add in 2 <187145 187369> out 1 <187370>  # join source bit 23
const-mul-2 in 1 <187370> out 1 <187371> # join
add in 2 <187144 187371> out 1 <187372>  # join source bit 22
const-mul-2 in 1 <187372> out 1 <187373> # join
add in 2 <187143 187373> out 1 <187374>  # join source bit 21
const-mul-2 in 1 <187374> out 1 <187375> # join
add in 2 <187142 187375> out 1 <187376>  # join source bit 20
const-mul-2 in 1 <187376> out 1 <187377> # join
add in 2 <187141 187377> out 1 <187378>  # join source bit 19
const-mul-2 in 1 <187378> out 1 <187379> # join
add in 2 <187140 187379> out 1 <187380>  # join source bit 18
const-mul-2 in 1 <187380> out 1 <187381> # join
add in 2 <187139 187381> out 1 <187382>  # join source bit 17
const-mul-2 in 1 <187382> out 1 <187383> # join
add in 2 <187138 187383> out 1 <187384>  # join source bit 16
const-mul-2 in 1 <187384> out 1 <187385> # join
add in 2 <187137 187385> out 1 <187386>  # join source bit 15
const-mul-2 in 1 <187386> out 1 <187387> # join
add in 2 <187136 187387> out 1 <187388>  # join source bit 14
const-mul-2 in 1 <187388> out 1 <187389> # join
add in 2 <187135 187389> out 1 <187390>  # join source bit 13
const-mul-2 in 1 <187390> out 1 <187391> # join
add in 2 <187134 187391> out 1 <187392>  # join source bit 12
const-mul-2 in 1 <187392> out 1 <187393> # join
add in 2 <187133 187393> out 1 <187394>  # join source bit 11
const-mul-2 in 1 <187394> out 1 <187395> # join
add in 2 <187132 187395> out 1 <187396>  # join source bit 10
const-mul-2 in 1 <187396> out 1 <187397> # join
add in 2 <187131 187397> out 1 <187398>  # join source bit 9
const-mul-2 in 1 <187398> out 1 <187399> # join
add in 2 <187130 187399> out 1 <187400>  # join source bit 8
const-mul-2 in 1 <187400> out 1 <187401> # join
add in 2 <187129 187401> out 1 <187402>  # join source bit 7
const-mul-2 in 1 <187402> out 1 <187403> # join
add in 2 <187128 187403> out 1 <187404>  # join source bit 6
const-mul-2 in 1 <187404> out 1 <187405> # join
add in 2 <187127 187405> out 1 <187406>  # join source bit 5
const-mul-2 in 1 <187406> out 1 <187407> # join
add in 2 <187126 187407> out 1 <187408>  # join source bit 4
const-mul-2 in 1 <187408> out 1 <187409> # join
add in 2 <187125 187409> out 1 <187410>  # join source bit 3
const-mul-2 in 1 <187410> out 1 <187411> # join
add in 2 <187124 187411> out 1 <187412>  # join source bit 2
const-mul-2 in 1 <187412> out 1 <187413> # join
add in 2 <187123 187413> out 1 <187414>  # join source bit 1
const-mul-2 in 1 <187414> out 1 <187415> # join
add in 2 <187122 187415> out 1 <187416>  # join source bit 0
add in 2 <187416 187416> out 1 <187417>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <186546> out 1 <187418> # multiply-by-constant 4294967295
add in 2 <187120 187418> out 1 <187419>  # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <187419> outplitBus
mul in 2 <187451 187417> out 1 <187685>  # cond trueterm
const-mul-neg-1 in 1 <187451> out 1 <187686> # cond minuscond
add in 2 <100 187686> out 1 <187687>     # cond negcond
mul in 2 <187687 186546> out 1 <187688>  # cond falseterm
add in 2 <187685 187688> out 1 <187689>  # cond result
mul in 2 <186374 186338> out 1 <187690>  # cond trueterm
const-mul-neg-1 in 1 <186374> out 1 <187691> # cond minuscond
add in 2 <100 187691> out 1 <187692>     # cond negcond
mul in 2 <187692 186335> out 1 <187693>  # cond falseterm
add in 2 <187690 187693> out 1 <187694>  # cond result
mul in 2 <186230 186194> out 1 <187695>  # cond trueterm
const-mul-neg-1 in 1 <186230> out 1 <187696> # cond minuscond
add in 2 <100 187696> out 1 <187697>     # cond negcond
mul in 2 <187697 186191> out 1 <187698>  # cond falseterm
add in 2 <187695 187698> out 1 <187699>  # cond result
const-mul-ffffffff in 1 <187699> out 1 <187700> # multiply-by-constant 4294967295
add in 2 <187699 187694> out 1 <187701>  # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
add in 2 <187701 187700> out 1 <187702>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <187702> out 1 <187703> # multiply-by-constant 4294967295
add in 2 <187701 187703> out 1 <187704>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <187699> out 1 <187705> # multiply-by-constant 4294967295
add in 2 <187694 187705> out 1 <187706>  # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <187706> out 200 <187707 187708 187709 187710 187711 187712 187713 187714 187715 187716 187717 187718 187719 187720 187721 187722 187723 187724 187725 187726 187727 187728 187729 187730 187731 187732 187733 187734 187735 187736 187737 187738 187739 187740 187741 187742 187743 187744 187745 187746 187747 187748 187749 187750 187751 187752 187753 187754 187755 187756 187757 187758 187759 187760 187761 187762 187763 187764 187765 187766 187767 187768 187769 187770 187771 187772 187773 187774 187775 187776 187777 187778 187779 187780 187781 187782 187783 187784 187785 187786 187787 187788 187789 187790 187791 187792 187793 187794 187795 187796 187797 187798 187799 187800 187801 187802 187803 187804 187805 187806 187807 187808 187809 187810 187811 187812 187813 187814 187815 187816 187817 187818 187819 187820 187821 187822 187823 187824 187825 187826 187827 187828 187829 187830 187831 187832 187833 187834 187835 187836 187837 187838 187839 187840 187841 187842 187843 187844 187845 187846 187847 187848 187849 187850 187851 187852 187853 187854 187855 187856 187857 187858 187859 187860 187861 187862 187863 187864 187865 187866 187867 187868 187869 187870 187871 187872 187873 187874 187875 187876 187877 187878 187879 187880 187881 187882 187883 187884 187885 187886 187887 187888 187889 187890 187891 187892 187893 187894 187895 187896 187897 187898 187899 187900 187901 187902 187903 187904 187905 187906> # SplitBus
mul in 2 <187738 187704> out 1 <187907>  # cond trueterm
const-mul-neg-1 in 1 <187738> out 1 <187908> # cond minuscond
add in 2 <100 187908> out 1 <187909>     # cond negcond
mul in 2 <187909 187694> out 1 <187910>  # cond falseterm
add in 2 <187907 187910> out 1 <187911>  # cond result
const-mul-ffffffff in 1 <187911> out 1 <187912> # multiply-by-constant 4294967295
add in 2 <187911 187689> out 1 <187913>  # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
split in 1 <187913> outplitBus
const-mul-2 in 1 <187945> out 1 <188149> # join source bit 31
add in 2 <187944 188149> out 1 <188150>  # join source bit 30
const-mul-2 in 1 <188150> out 1 <188151> # join
add in 2 <187943 188151> out 1 <188152>  # join source bit 29
const-mul-2 in 1 <188152> out 1 <188153> # join
add in 2 <187942 188153> out 1 <188154>  # join source bit 28
const-mul-2 in 1 <188154> out 1 <188155> # join
add in 2 <187941 188155> out 1 <188156>  # join source bit 27
const-mul-2 in 1 <188156> out 1 <188157> # join
add in 2 <187940 188157> out 1 <188158>  # join source bit 26
const-mul-2 in 1 <188158> out 1 <188159> # join
add in 2 <187939 188159> out 1 <188160>  # join source bit 25
const-mul-2 in 1 <188160> out 1 <188161> # join
add in 2 <187938 188161> out 1 <188162>  # join source bit 24
const-mul-2 in 1 <188162> out 1 <188163> # join
add in 2 <187937 188163> out 1 <188164>  # join source bit 23
const-mul-2 in 1 <188164> out 1 <188165> # join
add in 2 <187936 188165> out 1 <188166>  # join source bit 22
const-mul-2 in 1 <188166> out 1 <188167> # join
add in 2 <187935 188167> out 1 <188168>  # join source bit 21
const-mul-2 in 1 <188168> out 1 <188169> # join
add in 2 <187934 188169> out 1 <188170>  # join source bit 20
const-mul-2 in 1 <188170> out 1 <188171> # join
add in 2 <187933 188171> out 1 <188172>  # join source bit 19
const-mul-2 in 1 <188172> out 1 <188173> # join
add in 2 <187932 188173> out 1 <188174>  # join source bit 18
const-mul-2 in 1 <188174> out 1 <188175> # join
add in 2 <187931 188175> out 1 <188176>  # join source bit 17
const-mul-2 in 1 <188176> out 1 <188177> # join
add in 2 <187930 188177> out 1 <188178>  # join source bit 16
const-mul-2 in 1 <188178> out 1 <188179> # join
add in 2 <187929 188179> out 1 <188180>  # join source bit 15
const-mul-2 in 1 <188180> out 1 <188181> # join
add in 2 <187928 188181> out 1 <188182>  # join source bit 14
const-mul-2 in 1 <188182> out 1 <188183> # join
add in 2 <187927 188183> out 1 <188184>  # join source bit 13
const-mul-2 in 1 <188184> out 1 <188185> # join
add in 2 <187926 188185> out 1 <188186>  # join source bit 12
const-mul-2 in 1 <188186> out 1 <188187> # join
add in 2 <187925 188187> out 1 <188188>  # join source bit 11
const-mul-2 in 1 <188188> out 1 <188189> # join
add in 2 <187924 188189> out 1 <188190>  # join source bit 10
const-mul-2 in 1 <188190> out 1 <188191> # join
add in 2 <187923 188191> out 1 <188192>  # join source bit 9
const-mul-2 in 1 <188192> out 1 <188193> # join
add in 2 <187922 188193> out 1 <188194>  # join source bit 8
const-mul-2 in 1 <188194> out 1 <188195> # join
add in 2 <187921 188195> out 1 <188196>  # join source bit 7
const-mul-2 in 1 <188196> out 1 <188197> # join
add in 2 <187920 188197> out 1 <188198>  # join source bit 6
const-mul-2 in 1 <188198> out 1 <188199> # join
add in 2 <187919 188199> out 1 <188200>  # join source bit 5
const-mul-2 in 1 <188200> out 1 <188201> # join
add in 2 <187918 188201> out 1 <188202>  # join source bit 4
const-mul-2 in 1 <188202> out 1 <188203> # join
add in 2 <187917 188203> out 1 <188204>  # join source bit 3
const-mul-2 in 1 <188204> out 1 <188205> # join
add in 2 <187916 188205> out 1 <188206>  # join source bit 2
const-mul-2 in 1 <188206> out 1 <188207> # join
add in 2 <187915 188207> out 1 <188208>  # join source bit 1
const-mul-2 in 1 <188208> out 1 <188209> # join
add in 2 <187914 188209> out 1 <188210>  # join source bit 0
add in 2 <188210 188210> out 1 <188211>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <188211> out 1 <188212> # multiply-by-constant 4294967295
add in 2 <187913 188212> out 1 <188213>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <187911> out 1 <188214> # multiply-by-constant 4294967295
add in 2 <187689 188214> out 1 <188215>  # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <188215> out 267 <188216 188217 188218 188219 188220 188221 188222 188223 188224 188225 188226 188227 188228 188229 188230 188231 188232 188233 188234 188235 188236 188237 188238 188239 188240 188241 188242 188243 188244 188245 188246 188247 188248 188249 188250 188251 188252 188253 188254 188255 188256 188257 188258 188259 188260 188261 188262 188263 188264 188265 188266 188267 188268 188269 188270 188271 188272 188273 188274 188275 188276 188277 188278 188279 188280 188281 188282 188283 188284 188285 188286 188287 188288 188289 188290 188291 188292 188293 188294 188295 188296 188297 188298 188299 188300 188301 188302 188303 188304 188305 188306 188307 188308 188309 188310 188311 188312 188313 188314 188315 188316 188317 188318 188319 188320 188321 188322 188323 188324 188325 188326 188327 188328 188329 188330 188331 188332 188333 188334 188335 188336 188337 188338 188339 188340 188341 188342 188343 188344 188345 188346 188347 188348 188349 188350 188351 188352 188353 188354 188355 188356 188357 188358 188359 188360 188361 188362 188363 188364 188365 188366 188367 188368 188369 188370 188371 188372 188373 188374 188375 188376 188377 188378 188379 188380 188381 188382 188383 188384 188385 188386 188387 188388 188389 188390 188391 188392 188393 188394 188395 188396 188397 188398 188399 188400 188401 188402 188403 188404 188405 188406 188407 188408 188409 188410 188411 188412 188413 188414 188415 188416 188417 188418 188419 188420 188421 188422 188423 188424 188425 188426 188427 188428 188429 188430 188431 188432 188433 188434 188435 188436 188437 188438 188439 188440 188441 188442 188443 188444 188445 188446 188447 188448 188449 188450 188451 188452 188453 188454 188455 188456 188457 188458 188459 188460 188461 188462 188463 188464 188465 188466 188467 188468 188469 188470 188471 188472 188473 188474 188475 188476 188477 188478 188479 188480 188481 188482> # SplitBus
mul in 2 <188247 188213> out 1 <188483>  # cond trueterm
const-mul-neg-1 in 1 <188247> out 1 <188484> # cond minuscond
add in 2 <100 188484> out 1 <188485>     # cond negcond
mul in 2 <188485 187689> out 1 <188486>  # cond falseterm
add in 2 <188483 188486> out 1 <188487>  # cond result
add in 2 <188487 104> out 1 <188488>     # ArithBusReq.AddReq(DFG.Conditional,DFG.Constant)
const-mul-ffffffff in 1 <59> out 1 <188489> # multiply-by-constant 4294967295
add in 2 <188488 188489> out 1 <188490>  # 'CmpLT DFG.Add - DFG.Input'
split in 1 <188490> out 238 <188491 188492 188493 188494 188495 188496 188497 188498 188499 188500 188501 188502 188503 188504 188505 188506 188507 188508 188509 188510 188511 188512 188513 188514 188515 188516 188517 188518 188519 188520 188521 188522 188523 188524 188525 188526 188527 188528 188529 188530 188531 188532 188533 188534 188535 188536 188537 188538 188539 188540 188541 188542 188543 188544 188545 188546 188547 188548 188549 188550 188551 188552 188553 188554 188555 188556 188557 188558 188559 188560 188561 188562 188563 188564 188565 188566 188567 188568 188569 188570 188571 188572 188573 188574 188575 188576 188577 188578 188579 188580 188581 188582 188583 188584 188585 188586 188587 188588 188589 188590 188591 188592 188593 188594 188595 188596 188597 188598 188599 188600 188601 188602 188603 188604 188605 188606 188607 188608 188609 188610 188611 188612 188613 188614 188615 188616 188617 188618 188619 188620 188621 188622 188623 188624 188625 188626 188627 188628 188629 188630 188631 188632 188633 188634 188635 188636 188637 188638 188639 188640 188641 188642 188643 188644 188645 188646 188647 188648 188649 188650 188651 188652 188653 188654 188655 188656 188657 188658 188659 188660 188661 188662 188663 188664 188665 188666 188667 188668 188669 188670 188671 188672 188673 188674 188675 188676 188677 188678 188679 188680 188681 188682 188683 188684 188685 188686 188687 188688 188689 188690 188691 188692 188693 188694 188695 188696 188697 188698 188699 188700 188701 188702 188703 188704 188705 188706 188707 188708 188709 188710 188711 188712 188713 188714 188715 188716 188717 188718 188719 188720 188721 188722 188723 188724 188725 188726 188727 188728> # SplitBus
mul in 2 <188522 103> out 1 <188729>     # cond trueterm
const-mul-neg-1 in 1 <188522> out 1 <188730> # cond minuscond
add in 2 <100 188730> out 1 <188731>     # cond negcond
mul in 2 <188731 102> out 1 <188732>     # cond falseterm
add in 2 <188729 188732> out 1 <188733>  # cond result
add in 2 <188487 3084> out 1 <188734>    # ArithBusReq.AddReq(DFG.Conditional,DFG.Negate)
const-mul-ffffffff in 1 <188734> out 1 <188735> # multiply-by-constant 4294967295
add in 2 <59 188735> out 1 <188736>      # 'CmpLT DFG.Input - DFG.Subtract'
split in 1 <188736> out 270 <188737 188738 188739 188740 188741 188742 188743 188744 188745 188746 188747 188748 188749 188750 188751 188752 188753 188754 188755 188756 188757 188758 188759 188760 188761 188762 188763 188764 188765 188766 188767 188768 188769 188770 188771 188772 188773 188774 188775 188776 188777 188778 188779 188780 188781 188782 188783 188784 188785 188786 188787 188788 188789 188790 188791 188792 188793 188794 188795 188796 188797 188798 188799 188800 188801 188802 188803 188804 188805 188806 188807 188808 188809 188810 188811 188812 188813 188814 188815 188816 188817 188818 188819 188820 188821 188822 188823 188824 188825 188826 188827 188828 188829 188830 188831 188832 188833 188834 188835 188836 188837 188838 188839 188840 188841 188842 188843 188844 188845 188846 188847 188848 188849 188850 188851 188852 188853 188854 188855 188856 188857 188858 188859 188860 188861 188862 188863 188864 188865 188866 188867 188868 188869 188870 188871 188872 188873 188874 188875 188876 188877 188878 188879 188880 188881 188882 188883 188884 188885 188886 188887 188888 188889 188890 188891 188892 188893 188894 188895 188896 188897 188898 188899 188900 188901 188902 188903 188904 188905 188906 188907 188908 188909 188910 188911 188912 188913 188914 188915 188916 188917 188918 188919 188920 188921 188922 188923 188924 188925 188926 188927 188928 188929 188930 188931 188932 188933 188934 188935 188936 188937 188938 188939 188940 188941 188942 188943 188944 188945 188946 188947 188948 188949 188950 188951 188952 188953 188954 188955 188956 188957 188958 188959 188960 188961 188962 188963 188964 188965 188966 188967 188968 188969 188970 188971 188972 188973 188974 188975 188976 188977 188978 188979 188980 188981 188982 188983 188984 188985 188986 188987 188988 188989 188990 188991 188992 188993 188994 188995 188996 188997 188998 188999 189000 189001 189002 189003 189004 189005 189006> # SplitBus
mul in 2 <188768 103> out 1 <189007>     # cond trueterm
const-mul-neg-1 in 1 <188768> out 1 <189008> # cond minuscond
add in 2 <100 189008> out 1 <189009>     # cond negcond
mul in 2 <189009 188733> out 1 <189010>  # cond falseterm
add in 2 <189007 189010> out 1 <189011>  # cond result
const-mul-ffffffff in 1 <58> out 1 <189012> # multiply-by-constant 4294967295
add in 2 <58 59> out 1 <189013>          # ArithBusReq.AddReq(DFG.Input,DFG.Input)
add in 2 <189013 189012> out 1 <189014>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <189014> out 1 <189015> # multiply-by-constant 4294967295
add in 2 <189013 189015> out 1 <189016>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <58> out 1 <189017> # multiply-by-constant 4294967295
add in 2 <59 189017> out 1 <189018>      # 'CmpLT DFG.Input - DFG.Input'
split in 1 <189018> out 65 <189019 189020 189021 189022 189023 189024 189025 189026 189027 189028 189029 189030 189031 189032 189033 189034 189035 189036 189037 189038 189039 189040 189041 189042 189043 189044 189045 189046 189047 189048 189049 189050 189051 189052 189053 189054 189055 189056 189057 189058 189059 189060 189061 189062 189063 189064 189065 189066 189067 189068 189069 189070 189071 189072 189073 189074 189075 189076 189077 189078 189079 189080 189081 189082 189083> # SplitBus
mul in 2 <189050 189016> out 1 <189084>  # cond trueterm
const-mul-neg-1 in 1 <189050> out 1 <189085> # cond minuscond
add in 2 <100 189085> out 1 <189086>     # cond negcond
mul in 2 <189086 59> out 1 <189087>      # cond falseterm
add in 2 <189084 189087> out 1 <189088>  # cond result
const-mul-ffffffff in 1 <189088> out 1 <189089> # multiply-by-constant 4294967295
add in 2 <189088 60> out 1 <189090>      # ArithBusReq.AddReq(DFG.Conditional,DFG.Input)
add in 2 <189090 189089> out 1 <189091>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <189091> out 1 <189092> # multiply-by-constant 4294967295
add in 2 <189090 189092> out 1 <189093>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <189088> out 1 <189094> # multiply-by-constant 4294967295
add in 2 <60 189094> out 1 <189095>      # 'CmpLT DFG.Input - DFG.Conditional'
split in 1 <189095> out 131 <189096 189097 189098 189099 189100 189101 189102 189103 189104 189105 189106 189107 189108 189109 189110 189111 189112 189113 189114 189115 189116 189117 189118 189119 189120 189121 189122 189123 189124 189125 189126 189127 189128 189129 189130 189131 189132 189133 189134 189135 189136 189137 189138 189139 189140 189141 189142 189143 189144 189145 189146 189147 189148 189149 189150 189151 189152 189153 189154 189155 189156 189157 189158 189159 189160 189161 189162 189163 189164 189165 189166 189167 189168 189169 189170 189171 189172 189173 189174 189175 189176 189177 189178 189179 189180 189181 189182 189183 189184 189185 189186 189187 189188 189189 189190 189191 189192 189193 189194 189195 189196 189197 189198 189199 189200 189201 189202 189203 189204 189205 189206 189207 189208 189209 189210 189211 189212 189213 189214 189215 189216 189217 189218 189219 189220 189221 189222 189223 189224 189225 189226> # SplitBus
mul in 2 <189127 189093> out 1 <189227>  # cond trueterm
const-mul-neg-1 in 1 <189127> out 1 <189228> # cond minuscond
add in 2 <100 189228> out 1 <189229>     # cond negcond
mul in 2 <189229 60> out 1 <189230>      # cond falseterm
add in 2 <189227 189230> out 1 <189231>  # cond result
const-mul-ffffffff in 1 <189231> out 1 <189232> # multiply-by-constant 4294967295
add in 2 <189231 61> out 1 <189233>      # ArithBusReq.AddReq(DFG.Conditional,DFG.Input)
add in 2 <189233 189232> out 1 <189234>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <189231> out 1 <189235> # multiply-by-constant 4294967295
add in 2 <61 189235> out 1 <189236>      # 'CmpLT DFG.Input - DFG.Conditional'
split in 1 <189236> out 197 <189237 189238 189239 189240 189241 189242 189243 189244 189245 189246 189247 189248 189249 189250 189251 189252 189253 189254 189255 189256 189257 189258 189259 189260 189261 189262 189263 189264 189265 189266 189267 189268 189269 189270 189271 189272 189273 189274 189275 189276 189277 189278 189279 189280 189281 189282 189283 189284 189285 189286 189287 189288 189289 189290 189291 189292 189293 189294 189295 189296 189297 189298 189299 189300 189301 189302 189303 189304 189305 189306 189307 189308 189309 189310 189311 189312 189313 189314 189315 189316 189317 189318 189319 189320 189321 189322 189323 189324 189325 189326 189327 189328 189329 189330 189331 189332 189333 189334 189335 189336 189337 189338 189339 189340 189341 189342 189343 189344 189345 189346 189347 189348 189349 189350 189351 189352 189353 189354 189355 189356 189357 189358 189359 189360 189361 189362 189363 189364 189365 189366 189367 189368 189369 189370 189371 189372 189373 189374 189375 189376 189377 189378 189379 189380 189381 189382 189383 189384 189385 189386 189387 189388 189389 189390 189391 189392 189393 189394 189395 189396 189397 189398 189399 189400 189401 189402 189403 189404 189405 189406 189407 189408 189409 189410 189411 189412 189413 189414 189415 189416 189417 189418 189419 189420 189421 189422 189423 189424 189425 189426 189427 189428 189429 189430 189431 189432 189433> # SplitBus
mul in 2 <189268 189234> out 1 <189434>  # cond trueterm
const-mul-neg-1 in 1 <189268> out 1 <189435> # cond minuscond
add in 2 <100 189435> out 1 <189436>     # cond negcond
mul in 2 <189436 189231> out 1 <189437>  # cond falseterm
add in 2 <189434 189437> out 1 <189438>  # cond result
mul in 2 <189127 189091> out 1 <189439>  # cond trueterm
const-mul-neg-1 in 1 <189127> out 1 <189440> # cond minuscond
add in 2 <100 189440> out 1 <189441>     # cond negcond
mul in 2 <189441 189088> out 1 <189442>  # cond falseterm
add in 2 <189439 189442> out 1 <189443>  # cond result
mul in 2 <189050 189014> out 1 <189444>  # cond trueterm
const-mul-neg-1 in 1 <189050> out 1 <189445> # cond minuscond
add in 2 <100 189445> out 1 <189446>     # cond negcond
mul in 2 <189446 58> out 1 <189447>      # cond falseterm
add in 2 <189444 189447> out 1 <189448>  # cond result
const-mul-ffffffff in 1 <189448> out 1 <189449> # multiply-by-constant 4294967295
add in 2 <189448 189443> out 1 <189450>  # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
add in 2 <189450 189449> out 1 <189451>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <189451> out 1 <189452> # multiply-by-constant 4294967295
add in 2 <189450 189452> out 1 <189453>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <189448> out 1 <189454> # multiply-by-constant 4294967295
add in 2 <189443 189454> out 1 <189455>  # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <189455> out 132 <189456 189457 189458 189459 189460 189461 189462 189463 189464 189465 189466 189467 189468 189469 189470 189471 189472 189473 189474 189475 189476 189477 189478 189479 189480 189481 189482 189483 189484 189485 189486 189487 189488 189489 189490 189491 189492 189493 189494 189495 189496 189497 189498 189499 189500 189501 189502 189503 189504 189505 189506 189507 189508 189509 189510 189511 189512 189513 189514 189515 189516 189517 189518 189519 189520 189521 189522 189523 189524 189525 189526 189527 189528 189529 189530 189531 189532 189533 189534 189535 189536 189537 189538 189539 189540 189541 189542 189543 189544 189545 189546 189547 189548 189549 189550 189551 189552 189553 189554 189555 189556 189557 189558 189559 189560 189561 189562 189563 189564 189565 189566 189567 189568 189569 189570 189571 189572 189573 189574 189575 189576 189577 189578 189579 189580 189581 189582 189583 189584 189585 189586 189587> # SplitBus
mul in 2 <189487 189453> out 1 <189588>  # cond trueterm
const-mul-neg-1 in 1 <189487> out 1 <189589> # cond minuscond
add in 2 <100 189589> out 1 <189590>     # cond negcond
mul in 2 <189590 189443> out 1 <189591>  # cond falseterm
add in 2 <189588 189591> out 1 <189592>  # cond result
const-mul-ffffffff in 1 <189592> out 1 <189593> # multiply-by-constant 4294967295
add in 2 <189592 189438> out 1 <189594>  # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
add in 2 <189594 189593> out 1 <189595>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <189595> out 1 <189596> # multiply-by-constant 4294967295
add in 2 <189594 189596> out 1 <189597>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <189592> out 1 <189598> # multiply-by-constant 4294967295
add in 2 <189438 189598> out 1 <189599>  # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <189599> out 199 <189600 189601 189602 189603 189604 189605 189606 189607 189608 189609 189610 189611 189612 189613 189614 189615 189616 189617 189618 189619 189620 189621 189622 189623 189624 189625 189626 189627 189628 189629 189630 189631 189632 189633 189634 189635 189636 189637 189638 189639 189640 189641 189642 189643 189644 189645 189646 189647 189648 189649 189650 189651 189652 189653 189654 189655 189656 189657 189658 189659 189660 189661 189662 189663 189664 189665 189666 189667 189668 189669 189670 189671 189672 189673 189674 189675 189676 189677 189678 189679 189680 189681 189682 189683 189684 189685 189686 189687 189688 189689 189690 189691 189692 189693 189694 189695 189696 189697 189698 189699 189700 189701 189702 189703 189704 189705 189706 189707 189708 189709 189710 189711 189712 189713 189714 189715 189716 189717 189718 189719 189720 189721 189722 189723 189724 189725 189726 189727 189728 189729 189730 189731 189732 189733 189734 189735 189736 189737 189738 189739 189740 189741 189742 189743 189744 189745 189746 189747 189748 189749 189750 189751 189752 189753 189754 189755 189756 189757 189758 189759 189760 189761 189762 189763 189764 189765 189766 189767 189768 189769 189770 189771 189772 189773 189774 189775 189776 189777 189778 189779 189780 189781 189782 189783 189784 189785 189786 189787 189788 189789 189790 189791 189792 189793 189794 189795 189796 189797 189798> # SplitBus
mul in 2 <189631 189597> out 1 <189799>  # cond trueterm
const-mul-neg-1 in 1 <189631> out 1 <189800> # cond minuscond
add in 2 <100 189800> out 1 <189801>     # cond negcond
mul in 2 <189801 189438> out 1 <189802>  # cond falseterm
add in 2 <189799 189802> out 1 <189803>  # cond result
const-mul-ffffffff in 1 <189803> out 1 <189804> # multiply-by-constant 4294967295
const-mul-ffffffff in 1 <189234> out 1 <189805> # multiply-by-constant 4294967295
add in 2 <189233 189805> out 1 <189806>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
mul in 2 <189268 189806> out 1 <189807>  # cond trueterm
const-mul-neg-1 in 1 <189268> out 1 <189808> # cond minuscond
add in 2 <100 189808> out 1 <189809>     # cond negcond
mul in 2 <189809 61> out 1 <189810>      # cond falseterm
add in 2 <189807 189810> out 1 <189811>  # cond result
const-mul-ffffffff in 1 <189811> out 1 <189812> # multiply-by-constant 4294967295
add in 2 <189811 62> out 1 <189813>      # ArithBusReq.AddReq(DFG.Conditional,DFG.Input)
split in 1 <189813> outplitBus
const-mul-2 in 1 <189845> out 1 <190045> # join source bit 31
add in 2 <189844 190045> out 1 <190046>  # join source bit 30
const-mul-2 in 1 <190046> out 1 <190047> # join
add in 2 <189843 190047> out 1 <190048>  # join source bit 29
const-mul-2 in 1 <190048> out 1 <190049> # join
add in 2 <189842 190049> out 1 <190050>  # join source bit 28
const-mul-2 in 1 <190050> out 1 <190051> # join
add in 2 <189841 190051> out 1 <190052>  # join source bit 27
const-mul-2 in 1 <190052> out 1 <190053> # join
add in 2 <189840 190053> out 1 <190054>  # join source bit 26
const-mul-2 in 1 <190054> out 1 <190055> # join
add in 2 <189839 190055> out 1 <190056>  # join source bit 25
const-mul-2 in 1 <190056> out 1 <190057> # join
add in 2 <189838 190057> out 1 <190058>  # join source bit 24
const-mul-2 in 1 <190058> out 1 <190059> # join
add in 2 <189837 190059> out 1 <190060>  # join source bit 23
const-mul-2 in 1 <190060> out 1 <190061> # join
add in 2 <189836 190061> out 1 <190062>  # join source bit 22
const-mul-2 in 1 <190062> out 1 <190063> # join
add in 2 <189835 190063> out 1 <190064>  # join source bit 21
const-mul-2 in 1 <190064> out 1 <190065> # join
add in 2 <189834 190065> out 1 <190066>  # join source bit 20
const-mul-2 in 1 <190066> out 1 <190067> # join
add in 2 <189833 190067> out 1 <190068>  # join source bit 19
const-mul-2 in 1 <190068> out 1 <190069> # join
add in 2 <189832 190069> out 1 <190070>  # join source bit 18
const-mul-2 in 1 <190070> out 1 <190071> # join
add in 2 <189831 190071> out 1 <190072>  # join source bit 17
const-mul-2 in 1 <190072> out 1 <190073> # join
add in 2 <189830 190073> out 1 <190074>  # join source bit 16
const-mul-2 in 1 <190074> out 1 <190075> # join
add in 2 <189829 190075> out 1 <190076>  # join source bit 15
const-mul-2 in 1 <190076> out 1 <190077> # join
add in 2 <189828 190077> out 1 <190078>  # join source bit 14
const-mul-2 in 1 <190078> out 1 <190079> # join
add in 2 <189827 190079> out 1 <190080>  # join source bit 13
const-mul-2 in 1 <190080> out 1 <190081> # join
add in 2 <189826 190081> out 1 <190082>  # join source bit 12
const-mul-2 in 1 <190082> out 1 <190083> # join
add in 2 <189825 190083> out 1 <190084>  # join source bit 11
const-mul-2 in 1 <190084> out 1 <190085> # join
add in 2 <189824 190085> out 1 <190086>  # join source bit 10
const-mul-2 in 1 <190086> out 1 <190087> # join
add in 2 <189823 190087> out 1 <190088>  # join source bit 9
const-mul-2 in 1 <190088> out 1 <190089> # join
add in 2 <189822 190089> out 1 <190090>  # join source bit 8
const-mul-2 in 1 <190090> out 1 <190091> # join
add in 2 <189821 190091> out 1 <190092>  # join source bit 7
const-mul-2 in 1 <190092> out 1 <190093> # join
add in 2 <189820 190093> out 1 <190094>  # join source bit 6
const-mul-2 in 1 <190094> out 1 <190095> # join
add in 2 <189819 190095> out 1 <190096>  # join source bit 5
const-mul-2 in 1 <190096> out 1 <190097> # join
add in 2 <189818 190097> out 1 <190098>  # join source bit 4
const-mul-2 in 1 <190098> out 1 <190099> # join
add in 2 <189817 190099> out 1 <190100>  # join source bit 3
const-mul-2 in 1 <190100> out 1 <190101> # join
add in 2 <189816 190101> out 1 <190102>  # join source bit 2
const-mul-2 in 1 <190102> out 1 <190103> # join
add in 2 <189815 190103> out 1 <190104>  # join source bit 1
const-mul-2 in 1 <190104> out 1 <190105> # join
add in 2 <189814 190105> out 1 <190106>  # join source bit 0
add in 2 <190106 190106> out 1 <190107>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <189811> out 1 <190108> # multiply-by-constant 4294967295
add in 2 <62 190108> out 1 <190109>      # 'CmpLT DFG.Input - DFG.Conditional'
split in 1 <190109> outplitBus
mul in 2 <190141 190107> out 1 <190373>  # cond trueterm
const-mul-neg-1 in 1 <190141> out 1 <190374> # cond minuscond
add in 2 <100 190374> out 1 <190375>     # cond negcond
mul in 2 <190375 189811> out 1 <190376>  # cond falseterm
add in 2 <190373 190376> out 1 <190377>  # cond result
add in 2 <189803 190377> out 1 <190378>  # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
split in 1 <190378> out 233 <190379 190380 190381 190382 190383 190384 190385 190386 190387 190388 190389 190390 190391 190392 190393 190394 190395 190396 190397 190398 190399 190400 190401 190402 190403 190404 190405 190406 190407 190408 190409 190410 190411 190412 190413 190414 190415 190416 190417 190418 190419 190420 190421 190422 190423 190424 190425 190426 190427 190428 190429 190430 190431 190432 190433 190434 190435 190436 190437 190438 190439 190440 190441 190442 190443 190444 190445 190446 190447 190448 190449 190450 190451 190452 190453 190454 190455 190456 190457 190458 190459 190460 190461 190462 190463 190464 190465 190466 190467 190468 190469 190470 190471 190472 190473 190474 190475 190476 190477 190478 190479 190480 190481 190482 190483 190484 190485 190486 190487 190488 190489 190490 190491 190492 190493 190494 190495 190496 190497 190498 190499 190500 190501 190502 190503 190504 190505 190506 190507 190508 190509 190510 190511 190512 190513 190514 190515 190516 190517 190518 190519 190520 190521 190522 190523 190524 190525 190526 190527 190528 190529 190530 190531 190532 190533 190534 190535 190536 190537 190538 190539 190540 190541 190542 190543 190544 190545 190546 190547 190548 190549 190550 190551 190552 190553 190554 190555 190556 190557 190558 190559 190560 190561 190562 190563 190564 190565 190566 190567 190568 190569 190570 190571 190572 190573 190574 190575 190576 190577 190578 190579 190580 190581 190582 190583 190584 190585 190586 190587 190588 190589 190590 190591 190592 190593 190594 190595 190596 190597 190598 190599 190600 190601 190602 190603 190604 190605 190606 190607 190608 190609 190610 190611> # SplitBus
const-mul-2 in 1 <190410> out 1 <190612> # join source bit 31
add in 2 <190409 190612> out 1 <190613>  # join source bit 30
const-mul-2 in 1 <190613> out 1 <190614> # join
add in 2 <190408 190614> out 1 <190615>  # join source bit 29
const-mul-2 in 1 <190615> out 1 <190616> # join
add in 2 <190407 190616> out 1 <190617>  # join source bit 28
const-mul-2 in 1 <190617> out 1 <190618> # join
add in 2 <190406 190618> out 1 <190619>  # join source bit 27
const-mul-2 in 1 <190619> out 1 <190620> # join
add in 2 <190405 190620> out 1 <190621>  # join source bit 26
const-mul-2 in 1 <190621> out 1 <190622> # join
add in 2 <190404 190622> out 1 <190623>  # join source bit 25
const-mul-2 in 1 <190623> out 1 <190624> # join
add in 2 <190403 190624> out 1 <190625>  # join source bit 24
const-mul-2 in 1 <190625> out 1 <190626> # join
add in 2 <190402 190626> out 1 <190627>  # join source bit 23
const-mul-2 in 1 <190627> out 1 <190628> # join
add in 2 <190401 190628> out 1 <190629>  # join source bit 22
const-mul-2 in 1 <190629> out 1 <190630> # join
add in 2 <190400 190630> out 1 <190631>  # join source bit 21
const-mul-2 in 1 <190631> out 1 <190632> # join
add in 2 <190399 190632> out 1 <190633>  # join source bit 20
const-mul-2 in 1 <190633> out 1 <190634> # join
add in 2 <190398 190634> out 1 <190635>  # join source bit 19
const-mul-2 in 1 <190635> out 1 <190636> # join
add in 2 <190397 190636> out 1 <190637>  # join source bit 18
const-mul-2 in 1 <190637> out 1 <190638> # join
add in 2 <190396 190638> out 1 <190639>  # join source bit 17
const-mul-2 in 1 <190639> out 1 <190640> # join
add in 2 <190395 190640> out 1 <190641>  # join source bit 16
const-mul-2 in 1 <190641> out 1 <190642> # join
add in 2 <190394 190642> out 1 <190643>  # join source bit 15
const-mul-2 in 1 <190643> out 1 <190644> # join
add in 2 <190393 190644> out 1 <190645>  # join source bit 14
const-mul-2 in 1 <190645> out 1 <190646> # join
add in 2 <190392 190646> out 1 <190647>  # join source bit 13
const-mul-2 in 1 <190647> out 1 <190648> # join
add in 2 <190391 190648> out 1 <190649>  # join source bit 12
const-mul-2 in 1 <190649> out 1 <190650> # join
add in 2 <190390 190650> out 1 <190651>  # join source bit 11
const-mul-2 in 1 <190651> out 1 <190652> # join
add in 2 <190389 190652> out 1 <190653>  # join source bit 10
const-mul-2 in 1 <190653> out 1 <190654> # join
add in 2 <190388 190654> out 1 <190655>  # join source bit 9
const-mul-2 in 1 <190655> out 1 <190656> # join
add in 2 <190387 190656> out 1 <190657>  # join source bit 8
const-mul-2 in 1 <190657> out 1 <190658> # join
add in 2 <190386 190658> out 1 <190659>  # join source bit 7
const-mul-2 in 1 <190659> out 1 <190660> # join
add in 2 <190385 190660> out 1 <190661>  # join source bit 6
const-mul-2 in 1 <190661> out 1 <190662> # join
add in 2 <190384 190662> out 1 <190663>  # join source bit 5
const-mul-2 in 1 <190663> out 1 <190664> # join
add in 2 <190383 190664> out 1 <190665>  # join source bit 4
const-mul-2 in 1 <190665> out 1 <190666> # join
add in 2 <190382 190666> out 1 <190667>  # join source bit 3
const-mul-2 in 1 <190667> out 1 <190668> # join
add in 2 <190381 190668> out 1 <190669>  # join source bit 2
const-mul-2 in 1 <190669> out 1 <190670> # join
add in 2 <190380 190670> out 1 <190671>  # join source bit 1
const-mul-2 in 1 <190671> out 1 <190672> # join
add in 2 <190379 190672> out 1 <190673>  # join source bit 0
add in 2 <190673 190673> out 1 <190674>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <189803> out 1 <190675> # multiply-by-constant 4294967295
add in 2 <190377 190675> out 1 <190676>  # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <190676> out 265 <190677 190678 190679 190680 190681 190682 190683 190684 190685 190686 190687 190688 190689 190690 190691 190692 190693 190694 190695 190696 190697 190698 190699 190700 190701 190702 190703 190704 190705 190706 190707 190708 190709 190710 190711 190712 190713 190714 190715 190716 190717 190718 190719 190720 190721 190722 190723 190724 190725 190726 190727 190728 190729 190730 190731 190732 190733 190734 190735 190736 190737 190738 190739 190740 190741 190742 190743 190744 190745 190746 190747 190748 190749 190750 190751 190752 190753 190754 190755 190756 190757 190758 190759 190760 190761 190762 190763 190764 190765 190766 190767 190768 190769 190770 190771 190772 190773 190774 190775 190776 190777 190778 190779 190780 190781 190782 190783 190784 190785 190786 190787 190788 190789 190790 190791 190792 190793 190794 190795 190796 190797 190798 190799 190800 190801 190802 190803 190804 190805 190806 190807 190808 190809 190810 190811 190812 190813 190814 190815 190816 190817 190818 190819 190820 190821 190822 190823 190824 190825 190826 190827 190828 190829 190830 190831 190832 190833 190834 190835 190836 190837 190838 190839 190840 190841 190842 190843 190844 190845 190846 190847 190848 190849 190850 190851 190852 190853 190854 190855 190856 190857 190858 190859 190860 190861 190862 190863 190864 190865 190866 190867 190868 190869 190870 190871 190872 190873 190874 190875 190876 190877 190878 190879 190880 190881 190882 190883 190884 190885 190886 190887 190888 190889 190890 190891 190892 190893 190894 190895 190896 190897 190898 190899 190900 190901 190902 190903 190904 190905 190906 190907 190908 190909 190910 190911 190912 190913 190914 190915 190916 190917 190918 190919 190920 190921 190922 190923 190924 190925 190926 190927 190928 190929 190930 190931 190932 190933 190934 190935 190936 190937 190938 190939 190940 190941> # SplitBus
mul in 2 <190708 190674> out 1 <190942>  # cond trueterm
const-mul-neg-1 in 1 <190708> out 1 <190943> # cond minuscond
add in 2 <100 190943> out 1 <190944>     # cond negcond
mul in 2 <190944 189803> out 1 <190945>  # cond falseterm
add in 2 <190942 190945> out 1 <190946>  # cond result
mul in 2 <189631 189595> out 1 <190947>  # cond trueterm
const-mul-neg-1 in 1 <189631> out 1 <190948> # cond minuscond
add in 2 <100 190948> out 1 <190949>     # cond negcond
mul in 2 <190949 189592> out 1 <190950>  # cond falseterm
add in 2 <190947 190950> out 1 <190951>  # cond result
mul in 2 <189487 189451> out 1 <190952>  # cond trueterm
const-mul-neg-1 in 1 <189487> out 1 <190953> # cond minuscond
add in 2 <100 190953> out 1 <190954>     # cond negcond
mul in 2 <190954 189448> out 1 <190955>  # cond falseterm
add in 2 <190952 190955> out 1 <190956>  # cond result
const-mul-ffffffff in 1 <190956> out 1 <190957> # multiply-by-constant 4294967295
add in 2 <190956 190951> out 1 <190958>  # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
add in 2 <190958 190957> out 1 <190959>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <190959> out 1 <190960> # multiply-by-constant 4294967295
add in 2 <190958 190960> out 1 <190961>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <190956> out 1 <190962> # multiply-by-constant 4294967295
add in 2 <190951 190962> out 1 <190963>  # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <190963> out 200 <190964 190965 190966 190967 190968 190969 190970 190971 190972 190973 190974 190975 190976 190977 190978 190979 190980 190981 190982 190983 190984 190985 190986 190987 190988 190989 190990 190991 190992 190993 190994 190995 190996 190997 190998 190999 191000 191001 191002 191003 191004 191005 191006 191007 191008 191009 191010 191011 191012 191013 191014 191015 191016 191017 191018 191019 191020 191021 191022 191023 191024 191025 191026 191027 191028 191029 191030 191031 191032 191033 191034 191035 191036 191037 191038 191039 191040 191041 191042 191043 191044 191045 191046 191047 191048 191049 191050 191051 191052 191053 191054 191055 191056 191057 191058 191059 191060 191061 191062 191063 191064 191065 191066 191067 191068 191069 191070 191071 191072 191073 191074 191075 191076 191077 191078 191079 191080 191081 191082 191083 191084 191085 191086 191087 191088 191089 191090 191091 191092 191093 191094 191095 191096 191097 191098 191099 191100 191101 191102 191103 191104 191105 191106 191107 191108 191109 191110 191111 191112 191113 191114 191115 191116 191117 191118 191119 191120 191121 191122 191123 191124 191125 191126 191127 191128 191129 191130 191131 191132 191133 191134 191135 191136 191137 191138 191139 191140 191141 191142 191143 191144 191145 191146 191147 191148 191149 191150 191151 191152 191153 191154 191155 191156 191157 191158 191159 191160 191161 191162 191163> # SplitBus
mul in 2 <190995 190961> out 1 <191164>  # cond trueterm
const-mul-neg-1 in 1 <190995> out 1 <191165> # cond minuscond
add in 2 <100 191165> out 1 <191166>     # cond negcond
mul in 2 <191166 190951> out 1 <191167>  # cond falseterm
add in 2 <191164 191167> out 1 <191168>  # cond result
const-mul-ffffffff in 1 <191168> out 1 <191169> # multiply-by-constant 4294967295
add in 2 <191168 190946> out 1 <191170>  # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
split in 1 <191170> out 235 <191171 191172 191173 191174 191175 191176 191177 191178 191179 191180 191181 191182 191183 191184 191185 191186 191187 191188 191189 191190 191191 191192 191193 191194 191195 191196 191197 191198 191199 191200 191201 191202 191203 191204 191205 191206 191207 191208 191209 191210 191211 191212 191213 191214 191215 191216 191217 191218 191219 191220 191221 191222 191223 191224 191225 191226 191227 191228 191229 191230 191231 191232 191233 191234 191235 191236 191237 191238 191239 191240 191241 191242 191243 191244 191245 191246 191247 191248 191249 191250 191251 191252 191253 191254 191255 191256 191257 191258 191259 191260 191261 191262 191263 191264 191265 191266 191267 191268 191269 191270 191271 191272 191273 191274 191275 191276 191277 191278 191279 191280 191281 191282 191283 191284 191285 191286 191287 191288 191289 191290 191291 191292 191293 191294 191295 191296 191297 191298 191299 191300 191301 191302 191303 191304 191305 191306 191307 191308 191309 191310 191311 191312 191313 191314 191315 191316 191317 191318 191319 191320 191321 191322 191323 191324 191325 191326 191327 191328 191329 191330 191331 191332 191333 191334 191335 191336 191337 191338 191339 191340 191341 191342 191343 191344 191345 191346 191347 191348 191349 191350 191351 191352 191353 191354 191355 191356 191357 191358 191359 191360 191361 191362 191363 191364 191365 191366 191367 191368 191369 191370 191371 191372 191373 191374 191375 191376 191377 191378 191379 191380 191381 191382 191383 191384 191385 191386 191387 191388 191389 191390 191391 191392 191393 191394 191395 191396 191397 191398 191399 191400 191401 191402 191403 191404 191405> # SplitBus
const-mul-2 in 1 <191202> out 1 <191406> # join source bit 31
add in 2 <191201 191406> out 1 <191407>  # join source bit 30
const-mul-2 in 1 <191407> out 1 <191408> # join
add in 2 <191200 191408> out 1 <191409>  # join source bit 29
const-mul-2 in 1 <191409> out 1 <191410> # join
add in 2 <191199 191410> out 1 <191411>  # join source bit 28
const-mul-2 in 1 <191411> out 1 <191412> # join
add in 2 <191198 191412> out 1 <191413>  # join source bit 27
const-mul-2 in 1 <191413> out 1 <191414> # join
add in 2 <191197 191414> out 1 <191415>  # join source bit 26
const-mul-2 in 1 <191415> out 1 <191416> # join
add in 2 <191196 191416> out 1 <191417>  # join source bit 25
const-mul-2 in 1 <191417> out 1 <191418> # join
add in 2 <191195 191418> out 1 <191419>  # join source bit 24
const-mul-2 in 1 <191419> out 1 <191420> # join
add in 2 <191194 191420> out 1 <191421>  # join source bit 23
const-mul-2 in 1 <191421> out 1 <191422> # join
add in 2 <191193 191422> out 1 <191423>  # join source bit 22
const-mul-2 in 1 <191423> out 1 <191424> # join
add in 2 <191192 191424> out 1 <191425>  # join source bit 21
const-mul-2 in 1 <191425> out 1 <191426> # join
add in 2 <191191 191426> out 1 <191427>  # join source bit 20
const-mul-2 in 1 <191427> out 1 <191428> # join
add in 2 <191190 191428> out 1 <191429>  # join source bit 19
const-mul-2 in 1 <191429> out 1 <191430> # join
add in 2 <191189 191430> out 1 <191431>  # join source bit 18
const-mul-2 in 1 <191431> out 1 <191432> # join
add in 2 <191188 191432> out 1 <191433>  # join source bit 17
const-mul-2 in 1 <191433> out 1 <191434> # join
add in 2 <191187 191434> out 1 <191435>  # join source bit 16
const-mul-2 in 1 <191435> out 1 <191436> # join
add in 2 <191186 191436> out 1 <191437>  # join source bit 15
const-mul-2 in 1 <191437> out 1 <191438> # join
add in 2 <191185 191438> out 1 <191439>  # join source bit 14
const-mul-2 in 1 <191439> out 1 <191440> # join
add in 2 <191184 191440> out 1 <191441>  # join source bit 13
const-mul-2 in 1 <191441> out 1 <191442> # join
add in 2 <191183 191442> out 1 <191443>  # join source bit 12
const-mul-2 in 1 <191443> out 1 <191444> # join
add in 2 <191182 191444> out 1 <191445>  # join source bit 11
const-mul-2 in 1 <191445> out 1 <191446> # join
add in 2 <191181 191446> out 1 <191447>  # join source bit 10
const-mul-2 in 1 <191447> out 1 <191448> # join
add in 2 <191180 191448> out 1 <191449>  # join source bit 9
const-mul-2 in 1 <191449> out 1 <191450> # join
add in 2 <191179 191450> out 1 <191451>  # join source bit 8
const-mul-2 in 1 <191451> out 1 <191452> # join
add in 2 <191178 191452> out 1 <191453>  # join source bit 7
const-mul-2 in 1 <191453> out 1 <191454> # join
add in 2 <191177 191454> out 1 <191455>  # join source bit 6
const-mul-2 in 1 <191455> out 1 <191456> # join
add in 2 <191176 191456> out 1 <191457>  # join source bit 5
const-mul-2 in 1 <191457> out 1 <191458> # join
add in 2 <191175 191458> out 1 <191459>  # join source bit 4
const-mul-2 in 1 <191459> out 1 <191460> # join
add in 2 <191174 191460> out 1 <191461>  # join source bit 3
const-mul-2 in 1 <191461> out 1 <191462> # join
add in 2 <191173 191462> out 1 <191463>  # join source bit 2
const-mul-2 in 1 <191463> out 1 <191464> # join
add in 2 <191172 191464> out 1 <191465>  # join source bit 1
const-mul-2 in 1 <191465> out 1 <191466> # join
add in 2 <191171 191466> out 1 <191467>  # join source bit 0
add in 2 <191467 191467> out 1 <191468>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <191468> out 1 <191469> # multiply-by-constant 4294967295
add in 2 <191170 191469> out 1 <191470>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <191168> out 1 <191471> # multiply-by-constant 4294967295
add in 2 <190946 191471> out 1 <191472>  # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <191472> out 267 <191473 191474 191475 191476 191477 191478 191479 191480 191481 191482 191483 191484 191485 191486 191487 191488 191489 191490 191491 191492 191493 191494 191495 191496 191497 191498 191499 191500 191501 191502 191503 191504 191505 191506 191507 191508 191509 191510 191511 191512 191513 191514 191515 191516 191517 191518 191519 191520 191521 191522 191523 191524 191525 191526 191527 191528 191529 191530 191531 191532 191533 191534 191535 191536 191537 191538 191539 191540 191541 191542 191543 191544 191545 191546 191547 191548 191549 191550 191551 191552 191553 191554 191555 191556 191557 191558 191559 191560 191561 191562 191563 191564 191565 191566 191567 191568 191569 191570 191571 191572 191573 191574 191575 191576 191577 191578 191579 191580 191581 191582 191583 191584 191585 191586 191587 191588 191589 191590 191591 191592 191593 191594 191595 191596 191597 191598 191599 191600 191601 191602 191603 191604 191605 191606 191607 191608 191609 191610 191611 191612 191613 191614 191615 191616 191617 191618 191619 191620 191621 191622 191623 191624 191625 191626 191627 191628 191629 191630 191631 191632 191633 191634 191635 191636 191637 191638 191639 191640 191641 191642 191643 191644 191645 191646 191647 191648 191649 191650 191651 191652 191653 191654 191655 191656 191657 191658 191659 191660 191661 191662 191663 191664 191665 191666 191667 191668 191669 191670 191671 191672 191673 191674 191675 191676 191677 191678 191679 191680 191681 191682 191683 191684 191685 191686 191687 191688 191689 191690 191691 191692 191693 191694 191695 191696 191697 191698 191699 191700 191701 191702 191703 191704 191705 191706 191707 191708 191709 191710 191711 191712 191713 191714 191715 191716 191717 191718 191719 191720 191721 191722 191723 191724 191725 191726 191727 191728 191729 191730 191731 191732 191733 191734 191735 191736 191737 191738 191739> # SplitBus
mul in 2 <191504 191470> out 1 <191740>  # cond trueterm
const-mul-neg-1 in 1 <191504> out 1 <191741> # cond minuscond
add in 2 <100 191741> out 1 <191742>     # cond negcond
mul in 2 <191742 190946> out 1 <191743>  # cond falseterm
add in 2 <191740 191743> out 1 <191744>  # cond result
add in 2 <191744 104> out 1 <191745>     # ArithBusReq.AddReq(DFG.Conditional,DFG.Constant)
const-mul-ffffffff in 1 <60> out 1 <191746> # multiply-by-constant 4294967295
add in 2 <191745 191746> out 1 <191747>  # 'CmpLT DFG.Add - DFG.Input'
split in 1 <191747> out 238 <191748 191749 191750 191751 191752 191753 191754 191755 191756 191757 191758 191759 191760 191761 191762 191763 191764 191765 191766 191767 191768 191769 191770 191771 191772 191773 191774 191775 191776 191777 191778 191779 191780 191781 191782 191783 191784 191785 191786 191787 191788 191789 191790 191791 191792 191793 191794 191795 191796 191797 191798 191799 191800 191801 191802 191803 191804 191805 191806 191807 191808 191809 191810 191811 191812 191813 191814 191815 191816 191817 191818 191819 191820 191821 191822 191823 191824 191825 191826 191827 191828 191829 191830 191831 191832 191833 191834 191835 191836 191837 191838 191839 191840 191841 191842 191843 191844 191845 191846 191847 191848 191849 191850 191851 191852 191853 191854 191855 191856 191857 191858 191859 191860 191861 191862 191863 191864 191865 191866 191867 191868 191869 191870 191871 191872 191873 191874 191875 191876 191877 191878 191879 191880 191881 191882 191883 191884 191885 191886 191887 191888 191889 191890 191891 191892 191893 191894 191895 191896 191897 191898 191899 191900 191901 191902 191903 191904 191905 191906 191907 191908 191909 191910 191911 191912 191913 191914 191915 191916 191917 191918 191919 191920 191921 191922 191923 191924 191925 191926 191927 191928 191929 191930 191931 191932 191933 191934 191935 191936 191937 191938 191939 191940 191941 191942 191943 191944 191945 191946 191947 191948 191949 191950 191951 191952 191953 191954 191955 191956 191957 191958 191959 191960 191961 191962 191963 191964 191965 191966 191967 191968 191969 191970 191971 191972 191973 191974 191975 191976 191977 191978 191979 191980 191981 191982 191983 191984 191985> # SplitBus
mul in 2 <191779 103> out 1 <191986>     # cond trueterm
const-mul-neg-1 in 1 <191779> out 1 <191987> # cond minuscond
add in 2 <100 191987> out 1 <191988>     # cond negcond
mul in 2 <191988 102> out 1 <191989>     # cond falseterm
add in 2 <191986 191989> out 1 <191990>  # cond result
add in 2 <191744 3084> out 1 <191991>    # ArithBusReq.AddReq(DFG.Conditional,DFG.Negate)
const-mul-ffffffff in 1 <191991> out 1 <191992> # multiply-by-constant 4294967295
add in 2 <60 191992> out 1 <191993>      # 'CmpLT DFG.Input - DFG.Subtract'
split in 1 <191993> outplitBus
mul in 2 <192025 103> out 1 <192264>     # cond trueterm
const-mul-neg-1 in 1 <192025> out 1 <192265> # cond minuscond
add in 2 <100 192265> out 1 <192266>     # cond negcond
mul in 2 <192266 191990> out 1 <192267>  # cond falseterm
add in 2 <192264 192267> out 1 <192268>  # cond result
const-mul-ffffffff in 1 <59> out 1 <192269> # multiply-by-constant 4294967295
add in 2 <59 60> out 1 <192270>          # ArithBusReq.AddReq(DFG.Input,DFG.Input)
add in 2 <192270 192269> out 1 <192271>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <192271> out 1 <192272> # multiply-by-constant 4294967295
add in 2 <192270 192272> out 1 <192273>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <59> out 1 <192274> # multiply-by-constant 4294967295
add in 2 <60 192274> out 1 <192275>      # 'CmpLT DFG.Input - DFG.Input'
split in 1 <192275> out 65 <192276 192277 192278 192279 192280 192281 192282 192283 192284 192285 192286 192287 192288 192289 192290 192291 192292 192293 192294 192295 192296 192297 192298 192299 192300 192301 192302 192303 192304 192305 192306 192307 192308 192309 192310 192311 192312 192313 192314 192315 192316 192317 192318 192319 192320 192321 192322 192323 192324 192325 192326 192327 192328 192329 192330 192331 192332 192333 192334 192335 192336 192337 192338 192339 192340> # SplitBus
mul in 2 <192307 192273> out 1 <192341>  # cond trueterm
const-mul-neg-1 in 1 <192307> out 1 <192342> # cond minuscond
add in 2 <100 192342> out 1 <192343>     # cond negcond
mul in 2 <192343 60> out 1 <192344>      # cond falseterm
add in 2 <192341 192344> out 1 <192345>  # cond result
const-mul-ffffffff in 1 <192345> out 1 <192346> # multiply-by-constant 4294967295
add in 2 <192345 61> out 1 <192347>      # ArithBusReq.AddReq(DFG.Conditional,DFG.Input)
add in 2 <192347 192346> out 1 <192348>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <192348> out 1 <192349> # multiply-by-constant 4294967295
add in 2 <192347 192349> out 1 <192350>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <192345> out 1 <192351> # multiply-by-constant 4294967295
add in 2 <61 192351> out 1 <192352>      # 'CmpLT DFG.Input - DFG.Conditional'
split in 1 <192352> out 131 <192353 192354 192355 192356 192357 192358 192359 192360 192361 192362 192363 192364 192365 192366 192367 192368 192369 192370 192371 192372 192373 192374 192375 192376 192377 192378 192379 192380 192381 192382 192383 192384 192385 192386 192387 192388 192389 192390 192391 192392 192393 192394 192395 192396 192397 192398 192399 192400 192401 192402 192403 192404 192405 192406 192407 192408 192409 192410 192411 192412 192413 192414 192415 192416 192417 192418 192419 192420 192421 192422 192423 192424 192425 192426 192427 192428 192429 192430 192431 192432 192433 192434 192435 192436 192437 192438 192439 192440 192441 192442 192443 192444 192445 192446 192447 192448 192449 192450 192451 192452 192453 192454 192455 192456 192457 192458 192459 192460 192461 192462 192463 192464 192465 192466 192467 192468 192469 192470 192471 192472 192473 192474 192475 192476 192477 192478 192479 192480 192481 192482 192483> # SplitBus
mul in 2 <192384 192350> out 1 <192484>  # cond trueterm
const-mul-neg-1 in 1 <192384> out 1 <192485> # cond minuscond
add in 2 <100 192485> out 1 <192486>     # cond negcond
mul in 2 <192486 61> out 1 <192487>      # cond falseterm
add in 2 <192484 192487> out 1 <192488>  # cond result
const-mul-ffffffff in 1 <192488> out 1 <192489> # multiply-by-constant 4294967295
add in 2 <192488 62> out 1 <192490>      # ArithBusReq.AddReq(DFG.Conditional,DFG.Input)
add in 2 <192490 192489> out 1 <192491>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <192488> out 1 <192492> # multiply-by-constant 4294967295
add in 2 <62 192492> out 1 <192493>      # 'CmpLT DFG.Input - DFG.Conditional'
split in 1 <192493> out 197 <192494 192495 192496 192497 192498 192499 192500 192501 192502 192503 192504 192505 192506 192507 192508 192509 192510 192511 192512 192513 192514 192515 192516 192517 192518 192519 192520 192521 192522 192523 192524 192525 192526 192527 192528 192529 192530 192531 192532 192533 192534 192535 192536 192537 192538 192539 192540 192541 192542 192543 192544 192545 192546 192547 192548 192549 192550 192551 192552 192553 192554 192555 192556 192557 192558 192559 192560 192561 192562 192563 192564 192565 192566 192567 192568 192569 192570 192571 192572 192573 192574 192575 192576 192577 192578 192579 192580 192581 192582 192583 192584 192585 192586 192587 192588 192589 192590 192591 192592 192593 192594 192595 192596 192597 192598 192599 192600 192601 192602 192603 192604 192605 192606 192607 192608 192609 192610 192611 192612 192613 192614 192615 192616 192617 192618 192619 192620 192621 192622 192623 192624 192625 192626 192627 192628 192629 192630 192631 192632 192633 192634 192635 192636 192637 192638 192639 192640 192641 192642 192643 192644 192645 192646 192647 192648 192649 192650 192651 192652 192653 192654 192655 192656 192657 192658 192659 192660 192661 192662 192663 192664 192665 192666 192667 192668 192669 192670 192671 192672 192673 192674 192675 192676 192677 192678 192679 192680 192681 192682 192683 192684 192685 192686 192687 192688 192689 192690> # SplitBus
mul in 2 <192525 192491> out 1 <192691>  # cond trueterm
const-mul-neg-1 in 1 <192525> out 1 <192692> # cond minuscond
add in 2 <100 192692> out 1 <192693>     # cond negcond
mul in 2 <192693 192488> out 1 <192694>  # cond falseterm
add in 2 <192691 192694> out 1 <192695>  # cond result
mul in 2 <192384 192348> out 1 <192696>  # cond trueterm
const-mul-neg-1 in 1 <192384> out 1 <192697> # cond minuscond
add in 2 <100 192697> out 1 <192698>     # cond negcond
mul in 2 <192698 192345> out 1 <192699>  # cond falseterm
add in 2 <192696 192699> out 1 <192700>  # cond result
mul in 2 <192307 192271> out 1 <192701>  # cond trueterm
const-mul-neg-1 in 1 <192307> out 1 <192702> # cond minuscond
add in 2 <100 192702> out 1 <192703>     # cond negcond
mul in 2 <192703 59> out 1 <192704>      # cond falseterm
add in 2 <192701 192704> out 1 <192705>  # cond result
const-mul-ffffffff in 1 <192705> out 1 <192706> # multiply-by-constant 4294967295
add in 2 <192705 192700> out 1 <192707>  # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
add in 2 <192707 192706> out 1 <192708>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <192708> out 1 <192709> # multiply-by-constant 4294967295
add in 2 <192707 192709> out 1 <192710>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <192705> out 1 <192711> # multiply-by-constant 4294967295
add in 2 <192700 192711> out 1 <192712>  # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <192712> out 132 <192713 192714 192715 192716 192717 192718 192719 192720 192721 192722 192723 192724 192725 192726 192727 192728 192729 192730 192731 192732 192733 192734 192735 192736 192737 192738 192739 192740 192741 192742 192743 192744 192745 192746 192747 192748 192749 192750 192751 192752 192753 192754 192755 192756 192757 192758 192759 192760 192761 192762 192763 192764 192765 192766 192767 192768 192769 192770 192771 192772 192773 192774 192775 192776 192777 192778 192779 192780 192781 192782 192783 192784 192785 192786 192787 192788 192789 192790 192791 192792 192793 192794 192795 192796 192797 192798 192799 192800 192801 192802 192803 192804 192805 192806 192807 192808 192809 192810 192811 192812 192813 192814 192815 192816 192817 192818 192819 192820 192821 192822 192823 192824 192825 192826 192827 192828 192829 192830 192831 192832 192833 192834 192835 192836 192837 192838 192839 192840 192841 192842 192843 192844> # SplitBus
mul in 2 <192744 192710> out 1 <192845>  # cond trueterm
const-mul-neg-1 in 1 <192744> out 1 <192846> # cond minuscond
add in 2 <100 192846> out 1 <192847>     # cond negcond
mul in 2 <192847 192700> out 1 <192848>  # cond falseterm
add in 2 <192845 192848> out 1 <192849>  # cond result
const-mul-ffffffff in 1 <192849> out 1 <192850> # multiply-by-constant 4294967295
add in 2 <192849 192695> out 1 <192851>  # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
add in 2 <192851 192850> out 1 <192852>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <192852> out 1 <192853> # multiply-by-constant 4294967295
add in 2 <192851 192853> out 1 <192854>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <192849> out 1 <192855> # multiply-by-constant 4294967295
add in 2 <192695 192855> out 1 <192856>  # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <192856> out 199 <192857 192858 192859 192860 192861 192862 192863 192864 192865 192866 192867 192868 192869 192870 192871 192872 192873 192874 192875 192876 192877 192878 192879 192880 192881 192882 192883 192884 192885 192886 192887 192888 192889 192890 192891 192892 192893 192894 192895 192896 192897 192898 192899 192900 192901 192902 192903 192904 192905 192906 192907 192908 192909 192910 192911 192912 192913 192914 192915 192916 192917 192918 192919 192920 192921 192922 192923 192924 192925 192926 192927 192928 192929 192930 192931 192932 192933 192934 192935 192936 192937 192938 192939 192940 192941 192942 192943 192944 192945 192946 192947 192948 192949 192950 192951 192952 192953 192954 192955 192956 192957 192958 192959 192960 192961 192962 192963 192964 192965 192966 192967 192968 192969 192970 192971 192972 192973 192974 192975 192976 192977 192978 192979 192980 192981 192982 192983 192984 192985 192986 192987 192988 192989 192990 192991 192992 192993 192994 192995 192996 192997 192998 192999 193000 193001 193002 193003 193004 193005 193006 193007 193008 193009 193010 193011 193012 193013 193014 193015 193016 193017 193018 193019 193020 193021 193022 193023 193024 193025 193026 193027 193028 193029 193030 193031 193032 193033 193034 193035 193036 193037 193038 193039 193040 193041 193042 193043 193044 193045 193046 193047 193048 193049 193050 193051 193052 193053 193054 193055> # SplitBus
mul in 2 <192888 192854> out 1 <193056>  # cond trueterm
const-mul-neg-1 in 1 <192888> out 1 <193057> # cond minuscond
add in 2 <100 193057> out 1 <193058>     # cond negcond
mul in 2 <193058 192695> out 1 <193059>  # cond falseterm
add in 2 <193056 193059> out 1 <193060>  # cond result
const-mul-ffffffff in 1 <193060> out 1 <193061> # multiply-by-constant 4294967295
const-mul-ffffffff in 1 <192491> out 1 <193062> # multiply-by-constant 4294967295
add in 2 <192490 193062> out 1 <193063>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
mul in 2 <192525 193063> out 1 <193064>  # cond trueterm
const-mul-neg-1 in 1 <192525> out 1 <193065> # cond minuscond
add in 2 <100 193065> out 1 <193066>     # cond negcond
mul in 2 <193066 62> out 1 <193067>      # cond falseterm
add in 2 <193064 193067> out 1 <193068>  # cond result
const-mul-ffffffff in 1 <193068> out 1 <193069> # multiply-by-constant 4294967295
add in 2 <193068 63> out 1 <193070>      # ArithBusReq.AddReq(DFG.Conditional,DFG.Input)
split in 1 <193070> out 231 <193071 193072 193073 193074 193075 193076 193077 193078 193079 193080 193081 193082 193083 193084 193085 193086 193087 193088 193089 193090 193091 193092 193093 193094 193095 193096 193097 193098 193099 193100 193101 193102 193103 193104 193105 193106 193107 193108 193109 193110 193111 193112 193113 193114 193115 193116 193117 193118 193119 193120 193121 193122 193123 193124 193125 193126 193127 193128 193129 193130 193131 193132 193133 193134 193135 193136 193137 193138 193139 193140 193141 193142 193143 193144 193145 193146 193147 193148 193149 193150 193151 193152 193153 193154 193155 193156 193157 193158 193159 193160 193161 193162 193163 193164 193165 193166 193167 193168 193169 193170 193171 193172 193173 193174 193175 193176 193177 193178 193179 193180 193181 193182 193183 193184 193185 193186 193187 193188 193189 193190 193191 193192 193193 193194 193195 193196 193197 193198 193199 193200 193201 193202 193203 193204 193205 193206 193207 193208 193209 193210 193211 193212 193213 193214 193215 193216 193217 193218 193219 193220 193221 193222 193223 193224 193225 193226 193227 193228 193229 193230 193231 193232 193233 193234 193235 193236 193237 193238 193239 193240 193241 193242 193243 193244 193245 193246 193247 193248 193249 193250 193251 193252 193253 193254 193255 193256 193257 193258 193259 193260 193261 193262 193263 193264 193265 193266 193267 193268 193269 193270 193271 193272 193273 193274 193275 193276 193277 193278 193279 193280 193281 193282 193283 193284 193285 193286 193287 193288 193289 193290 193291 193292 193293 193294 193295 193296 193297 193298 193299 193300 193301> # SplitBus
const-mul-2 in 1 <193102> out 1 <193302> # join source bit 31
add in 2 <193101 193302> out 1 <193303>  # join source bit 30
const-mul-2 in 1 <193303> out 1 <193304> # join
add in 2 <193100 193304> out 1 <193305>  # join source bit 29
const-mul-2 in 1 <193305> out 1 <193306> # join
add in 2 <193099 193306> out 1 <193307>  # join source bit 28
const-mul-2 in 1 <193307> out 1 <193308> # join
add in 2 <193098 193308> out 1 <193309>  # join source bit 27
const-mul-2 in 1 <193309> out 1 <193310> # join
add in 2 <193097 193310> out 1 <193311>  # join source bit 26
const-mul-2 in 1 <193311> out 1 <193312> # join
add in 2 <193096 193312> out 1 <193313>  # join source bit 25
const-mul-2 in 1 <193313> out 1 <193314> # join
add in 2 <193095 193314> out 1 <193315>  # join source bit 24
const-mul-2 in 1 <193315> out 1 <193316> # join
add in 2 <193094 193316> out 1 <193317>  # join source bit 23
const-mul-2 in 1 <193317> out 1 <193318> # join
add in 2 <193093 193318> out 1 <193319>  # join source bit 22
const-mul-2 in 1 <193319> out 1 <193320> # join
add in 2 <193092 193320> out 1 <193321>  # join source bit 21
const-mul-2 in 1 <193321> out 1 <193322> # join
add in 2 <193091 193322> out 1 <193323>  # join source bit 20
const-mul-2 in 1 <193323> out 1 <193324> # join
add in 2 <193090 193324> out 1 <193325>  # join source bit 19
const-mul-2 in 1 <193325> out 1 <193326> # join
add in 2 <193089 193326> out 1 <193327>  # join source bit 18
const-mul-2 in 1 <193327> out 1 <193328> # join
add in 2 <193088 193328> out 1 <193329>  # join source bit 17
const-mul-2 in 1 <193329> out 1 <193330> # join
add in 2 <193087 193330> out 1 <193331>  # join source bit 16
const-mul-2 in 1 <193331> out 1 <193332> # join
add in 2 <193086 193332> out 1 <193333>  # join source bit 15
const-mul-2 in 1 <193333> out 1 <193334> # join
add in 2 <193085 193334> out 1 <193335>  # join source bit 14
const-mul-2 in 1 <193335> out 1 <193336> # join
add in 2 <193084 193336> out 1 <193337>  # join source bit 13
const-mul-2 in 1 <193337> out 1 <193338> # join
add in 2 <193083 193338> out 1 <193339>  # join source bit 12
const-mul-2 in 1 <193339> out 1 <193340> # join
add in 2 <193082 193340> out 1 <193341>  # join source bit 11
const-mul-2 in 1 <193341> out 1 <193342> # join
add in 2 <193081 193342> out 1 <193343>  # join source bit 10
const-mul-2 in 1 <193343> out 1 <193344> # join
add in 2 <193080 193344> out 1 <193345>  # join source bit 9
const-mul-2 in 1 <193345> out 1 <193346> # join
add in 2 <193079 193346> out 1 <193347>  # join source bit 8
const-mul-2 in 1 <193347> out 1 <193348> # join
add in 2 <193078 193348> out 1 <193349>  # join source bit 7
const-mul-2 in 1 <193349> out 1 <193350> # join
add in 2 <193077 193350> out 1 <193351>  # join source bit 6
const-mul-2 in 1 <193351> out 1 <193352> # join
add in 2 <193076 193352> out 1 <193353>  # join source bit 5
const-mul-2 in 1 <193353> out 1 <193354> # join
add in 2 <193075 193354> out 1 <193355>  # join source bit 4
const-mul-2 in 1 <193355> out 1 <193356> # join
add in 2 <193074 193356> out 1 <193357>  # join source bit 3
const-mul-2 in 1 <193357> out 1 <193358> # join
add in 2 <193073 193358> out 1 <193359>  # join source bit 2
const-mul-2 in 1 <193359> out 1 <193360> # join
add in 2 <193072 193360> out 1 <193361>  # join source bit 1
const-mul-2 in 1 <193361> out 1 <193362> # join
add in 2 <193071 193362> out 1 <193363>  # join source bit 0
add in 2 <193363 193363> out 1 <193364>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <193068> out 1 <193365> # multiply-by-constant 4294967295
add in 2 <63 193365> out 1 <193366>      # 'CmpLT DFG.Input - DFG.Conditional'
split in 1 <193366> out 263 <193367 193368 193369 193370 193371 193372 193373 193374 193375 193376 193377 193378 193379 193380 193381 193382 193383 193384 193385 193386 193387 193388 193389 193390 193391 193392 193393 193394 193395 193396 193397 193398 193399 193400 193401 193402 193403 193404 193405 193406 193407 193408 193409 193410 193411 193412 193413 193414 193415 193416 193417 193418 193419 193420 193421 193422 193423 193424 193425 193426 193427 193428 193429 193430 193431 193432 193433 193434 193435 193436 193437 193438 193439 193440 193441 193442 193443 193444 193445 193446 193447 193448 193449 193450 193451 193452 193453 193454 193455 193456 193457 193458 193459 193460 193461 193462 193463 193464 193465 193466 193467 193468 193469 193470 193471 193472 193473 193474 193475 193476 193477 193478 193479 193480 193481 193482 193483 193484 193485 193486 193487 193488 193489 193490 193491 193492 193493 193494 193495 193496 193497 193498 193499 193500 193501 193502 193503 193504 193505 193506 193507 193508 193509 193510 193511 193512 193513 193514 193515 193516 193517 193518 193519 193520 193521 193522 193523 193524 193525 193526 193527 193528 193529 193530 193531 193532 193533 193534 193535 193536 193537 193538 193539 193540 193541 193542 193543 193544 193545 193546 193547 193548 193549 193550 193551 193552 193553 193554 193555 193556 193557 193558 193559 193560 193561 193562 193563 193564 193565 193566 193567 193568 193569 193570 193571 193572 193573 193574 193575 193576 193577 193578 193579 193580 193581 193582 193583 193584 193585 193586 193587 193588 193589 193590 193591 193592 193593 193594 193595 193596 193597 193598 193599 193600 193601 193602 193603 193604 193605 193606 193607 193608 193609 193610 193611 193612 193613 193614 193615 193616 193617 193618 193619 193620 193621 193622 193623 193624 193625 193626 193627 193628 193629> # SplitBus
mul in 2 <193398 193364> out 1 <193630>  # cond trueterm
const-mul-neg-1 in 1 <193398> out 1 <193631> # cond minuscond
add in 2 <100 193631> out 1 <193632>     # cond negcond
mul in 2 <193632 193068> out 1 <193633>  # cond falseterm
add in 2 <193630 193633> out 1 <193634>  # cond result
add in 2 <193060 193634> out 1 <193635>  # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
split in 1 <193635> out 233 <193636 193637 193638 193639 193640 193641 193642 193643 193644 193645 193646 193647 193648 193649 193650 193651 193652 193653 193654 193655 193656 193657 193658 193659 193660 193661 193662 193663 193664 193665 193666 193667 193668 193669 193670 193671 193672 193673 193674 193675 193676 193677 193678 193679 193680 193681 193682 193683 193684 193685 193686 193687 193688 193689 193690 193691 193692 193693 193694 193695 193696 193697 193698 193699 193700 193701 193702 193703 193704 193705 193706 193707 193708 193709 193710 193711 193712 193713 193714 193715 193716 193717 193718 193719 193720 193721 193722 193723 193724 193725 193726 193727 193728 193729 193730 193731 193732 193733 193734 193735 193736 193737 193738 193739 193740 193741 193742 193743 193744 193745 193746 193747 193748 193749 193750 193751 193752 193753 193754 193755 193756 193757 193758 193759 193760 193761 193762 193763 193764 193765 193766 193767 193768 193769 193770 193771 193772 193773 193774 193775 193776 193777 193778 193779 193780 193781 193782 193783 193784 193785 193786 193787 193788 193789 193790 193791 193792 193793 193794 193795 193796 193797 193798 193799 193800 193801 193802 193803 193804 193805 193806 193807 193808 193809 193810 193811 193812 193813 193814 193815 193816 193817 193818 193819 193820 193821 193822 193823 193824 193825 193826 193827 193828 193829 193830 193831 193832 193833 193834 193835 193836 193837 193838 193839 193840 193841 193842 193843 193844 193845 193846 193847 193848 193849 193850 193851 193852 193853 193854 193855 193856 193857 193858 193859 193860 193861 193862 193863 193864 193865 193866 193867 193868> # SplitBus
const-mul-2 in 1 <193667> out 1 <193869> # join source bit 31
add in 2 <193666 193869> out 1 <193870>  # join source bit 30
const-mul-2 in 1 <193870> out 1 <193871> # join
add in 2 <193665 193871> out 1 <193872>  # join source bit 29
const-mul-2 in 1 <193872> out 1 <193873> # join
add in 2 <193664 193873> out 1 <193874>  # join source bit 28
const-mul-2 in 1 <193874> out 1 <193875> # join
add in 2 <193663 193875> out 1 <193876>  # join source bit 27
const-mul-2 in 1 <193876> out 1 <193877> # join
add in 2 <193662 193877> out 1 <193878>  # join source bit 26
const-mul-2 in 1 <193878> out 1 <193879> # join
add in 2 <193661 193879> out 1 <193880>  # join source bit 25
const-mul-2 in 1 <193880> out 1 <193881> # join
add in 2 <193660 193881> out 1 <193882>  # join source bit 24
const-mul-2 in 1 <193882> out 1 <193883> # join
add in 2 <193659 193883> out 1 <193884>  # join source bit 23
const-mul-2 in 1 <193884> out 1 <193885> # join
add in 2 <193658 193885> out 1 <193886>  # join source bit 22
const-mul-2 in 1 <193886> out 1 <193887> # join
add in 2 <193657 193887> out 1 <193888>  # join source bit 21
const-mul-2 in 1 <193888> out 1 <193889> # join
add in 2 <193656 193889> out 1 <193890>  # join source bit 20
const-mul-2 in 1 <193890> out 1 <193891> # join
add in 2 <193655 193891> out 1 <193892>  # join source bit 19
const-mul-2 in 1 <193892> out 1 <193893> # join
add in 2 <193654 193893> out 1 <193894>  # join source bit 18
const-mul-2 in 1 <193894> out 1 <193895> # join
add in 2 <193653 193895> out 1 <193896>  # join source bit 17
const-mul-2 in 1 <193896> out 1 <193897> # join
add in 2 <193652 193897> out 1 <193898>  # join source bit 16
const-mul-2 in 1 <193898> out 1 <193899> # join
add in 2 <193651 193899> out 1 <193900>  # join source bit 15
const-mul-2 in 1 <193900> out 1 <193901> # join
add in 2 <193650 193901> out 1 <193902>  # join source bit 14
const-mul-2 in 1 <193902> out 1 <193903> # join
add in 2 <193649 193903> out 1 <193904>  # join source bit 13
const-mul-2 in 1 <193904> out 1 <193905> # join
add in 2 <193648 193905> out 1 <193906>  # join source bit 12
const-mul-2 in 1 <193906> out 1 <193907> # join
add in 2 <193647 193907> out 1 <193908>  # join source bit 11
const-mul-2 in 1 <193908> out 1 <193909> # join
add in 2 <193646 193909> out 1 <193910>  # join source bit 10
const-mul-2 in 1 <193910> out 1 <193911> # join
add in 2 <193645 193911> out 1 <193912>  # join source bit 9
const-mul-2 in 1 <193912> out 1 <193913> # join
add in 2 <193644 193913> out 1 <193914>  # join source bit 8
const-mul-2 in 1 <193914> out 1 <193915> # join
add in 2 <193643 193915> out 1 <193916>  # join source bit 7
const-mul-2 in 1 <193916> out 1 <193917> # join
add in 2 <193642 193917> out 1 <193918>  # join source bit 6
const-mul-2 in 1 <193918> out 1 <193919> # join
add in 2 <193641 193919> out 1 <193920>  # join source bit 5
const-mul-2 in 1 <193920> out 1 <193921> # join
add in 2 <193640 193921> out 1 <193922>  # join source bit 4
const-mul-2 in 1 <193922> out 1 <193923> # join
add in 2 <193639 193923> out 1 <193924>  # join source bit 3
const-mul-2 in 1 <193924> out 1 <193925> # join
add in 2 <193638 193925> out 1 <193926>  # join source bit 2
const-mul-2 in 1 <193926> out 1 <193927> # join
add in 2 <193637 193927> out 1 <193928>  # join source bit 1
const-mul-2 in 1 <193928> out 1 <193929> # join
add in 2 <193636 193929> out 1 <193930>  # join source bit 0
add in 2 <193930 193930> out 1 <193931>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <193060> out 1 <193932> # multiply-by-constant 4294967295
add in 2 <193634 193932> out 1 <193933>  # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <193933> outplitBus
mul in 2 <193965 193931> out 1 <194199>  # cond trueterm
const-mul-neg-1 in 1 <193965> out 1 <194200> # cond minuscond
add in 2 <100 194200> out 1 <194201>     # cond negcond
mul in 2 <194201 193060> out 1 <194202>  # cond falseterm
add in 2 <194199 194202> out 1 <194203>  # cond result
mul in 2 <192888 192852> out 1 <194204>  # cond trueterm
const-mul-neg-1 in 1 <192888> out 1 <194205> # cond minuscond
add in 2 <100 194205> out 1 <194206>     # cond negcond
mul in 2 <194206 192849> out 1 <194207>  # cond falseterm
add in 2 <194204 194207> out 1 <194208>  # cond result
mul in 2 <192744 192708> out 1 <194209>  # cond trueterm
const-mul-neg-1 in 1 <192744> out 1 <194210> # cond minuscond
add in 2 <100 194210> out 1 <194211>     # cond negcond
mul in 2 <194211 192705> out 1 <194212>  # cond falseterm
add in 2 <194209 194212> out 1 <194213>  # cond result
const-mul-ffffffff in 1 <194213> out 1 <194214> # multiply-by-constant 4294967295
add in 2 <194213 194208> out 1 <194215>  # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
add in 2 <194215 194214> out 1 <194216>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <194216> out 1 <194217> # multiply-by-constant 4294967295
add in 2 <194215 194217> out 1 <194218>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <194213> out 1 <194219> # multiply-by-constant 4294967295
add in 2 <194208 194219> out 1 <194220>  # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <194220> out 200 <194221 194222 194223 194224 194225 194226 194227 194228 194229 194230 194231 194232 194233 194234 194235 194236 194237 194238 194239 194240 194241 194242 194243 194244 194245 194246 194247 194248 194249 194250 194251 194252 194253 194254 194255 194256 194257 194258 194259 194260 194261 194262 194263 194264 194265 194266 194267 194268 194269 194270 194271 194272 194273 194274 194275 194276 194277 194278 194279 194280 194281 194282 194283 194284 194285 194286 194287 194288 194289 194290 194291 194292 194293 194294 194295 194296 194297 194298 194299 194300 194301 194302 194303 194304 194305 194306 194307 194308 194309 194310 194311 194312 194313 194314 194315 194316 194317 194318 194319 194320 194321 194322 194323 194324 194325 194326 194327 194328 194329 194330 194331 194332 194333 194334 194335 194336 194337 194338 194339 194340 194341 194342 194343 194344 194345 194346 194347 194348 194349 194350 194351 194352 194353 194354 194355 194356 194357 194358 194359 194360 194361 194362 194363 194364 194365 194366 194367 194368 194369 194370 194371 194372 194373 194374 194375 194376 194377 194378 194379 194380 194381 194382 194383 194384 194385 194386 194387 194388 194389 194390 194391 194392 194393 194394 194395 194396 194397 194398 194399 194400 194401 194402 194403 194404 194405 194406 194407 194408 194409 194410 194411 194412 194413 194414 194415 194416 194417 194418 194419 194420> # SplitBus
mul in 2 <194252 194218> out 1 <194421>  # cond trueterm
const-mul-neg-1 in 1 <194252> out 1 <194422> # cond minuscond
add in 2 <100 194422> out 1 <194423>     # cond negcond
mul in 2 <194423 194208> out 1 <194424>  # cond falseterm
add in 2 <194421 194424> out 1 <194425>  # cond result
const-mul-ffffffff in 1 <194425> out 1 <194426> # multiply-by-constant 4294967295
add in 2 <194425 194203> out 1 <194427>  # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
split in 1 <194427> outplitBus
const-mul-2 in 1 <194459> out 1 <194663> # join source bit 31
add in 2 <194458 194663> out 1 <194664>  # join source bit 30
const-mul-2 in 1 <194664> out 1 <194665> # join
add in 2 <194457 194665> out 1 <194666>  # join source bit 29
const-mul-2 in 1 <194666> out 1 <194667> # join
add in 2 <194456 194667> out 1 <194668>  # join source bit 28
const-mul-2 in 1 <194668> out 1 <194669> # join
add in 2 <194455 194669> out 1 <194670>  # join source bit 27
const-mul-2 in 1 <194670> out 1 <194671> # join
add in 2 <194454 194671> out 1 <194672>  # join source bit 26
const-mul-2 in 1 <194672> out 1 <194673> # join
add in 2 <194453 194673> out 1 <194674>  # join source bit 25
const-mul-2 in 1 <194674> out 1 <194675> # join
add in 2 <194452 194675> out 1 <194676>  # join source bit 24
const-mul-2 in 1 <194676> out 1 <194677> # join
add in 2 <194451 194677> out 1 <194678>  # join source bit 23
const-mul-2 in 1 <194678> out 1 <194679> # join
add in 2 <194450 194679> out 1 <194680>  # join source bit 22
const-mul-2 in 1 <194680> out 1 <194681> # join
add in 2 <194449 194681> out 1 <194682>  # join source bit 21
const-mul-2 in 1 <194682> out 1 <194683> # join
add in 2 <194448 194683> out 1 <194684>  # join source bit 20
const-mul-2 in 1 <194684> out 1 <194685> # join
add in 2 <194447 194685> out 1 <194686>  # join source bit 19
const-mul-2 in 1 <194686> out 1 <194687> # join
add in 2 <194446 194687> out 1 <194688>  # join source bit 18
const-mul-2 in 1 <194688> out 1 <194689> # join
add in 2 <194445 194689> out 1 <194690>  # join source bit 17
const-mul-2 in 1 <194690> out 1 <194691> # join
add in 2 <194444 194691> out 1 <194692>  # join source bit 16
const-mul-2 in 1 <194692> out 1 <194693> # join
add in 2 <194443 194693> out 1 <194694>  # join source bit 15
const-mul-2 in 1 <194694> out 1 <194695> # join
add in 2 <194442 194695> out 1 <194696>  # join source bit 14
const-mul-2 in 1 <194696> out 1 <194697> # join
add in 2 <194441 194697> out 1 <194698>  # join source bit 13
const-mul-2 in 1 <194698> out 1 <194699> # join
add in 2 <194440 194699> out 1 <194700>  # join source bit 12
const-mul-2 in 1 <194700> out 1 <194701> # join
add in 2 <194439 194701> out 1 <194702>  # join source bit 11
const-mul-2 in 1 <194702> out 1 <194703> # join
add in 2 <194438 194703> out 1 <194704>  # join source bit 10
const-mul-2 in 1 <194704> out 1 <194705> # join
add in 2 <194437 194705> out 1 <194706>  # join source bit 9
const-mul-2 in 1 <194706> out 1 <194707> # join
add in 2 <194436 194707> out 1 <194708>  # join source bit 8
const-mul-2 in 1 <194708> out 1 <194709> # join
add in 2 <194435 194709> out 1 <194710>  # join source bit 7
const-mul-2 in 1 <194710> out 1 <194711> # join
add in 2 <194434 194711> out 1 <194712>  # join source bit 6
const-mul-2 in 1 <194712> out 1 <194713> # join
add in 2 <194433 194713> out 1 <194714>  # join source bit 5
const-mul-2 in 1 <194714> out 1 <194715> # join
add in 2 <194432 194715> out 1 <194716>  # join source bit 4
const-mul-2 in 1 <194716> out 1 <194717> # join
add in 2 <194431 194717> out 1 <194718>  # join source bit 3
const-mul-2 in 1 <194718> out 1 <194719> # join
add in 2 <194430 194719> out 1 <194720>  # join source bit 2
const-mul-2 in 1 <194720> out 1 <194721> # join
add in 2 <194429 194721> out 1 <194722>  # join source bit 1
const-mul-2 in 1 <194722> out 1 <194723> # join
add in 2 <194428 194723> out 1 <194724>  # join source bit 0
add in 2 <194724 194724> out 1 <194725>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <194725> out 1 <194726> # multiply-by-constant 4294967295
add in 2 <194427 194726> out 1 <194727>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <194425> out 1 <194728> # multiply-by-constant 4294967295
add in 2 <194203 194728> out 1 <194729>  # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <194729> outplitBus
mul in 2 <194761 194727> out 1 <194997>  # cond trueterm
const-mul-neg-1 in 1 <194761> out 1 <194998> # cond minuscond
add in 2 <100 194998> out 1 <194999>     # cond negcond
mul in 2 <194999 194203> out 1 <195000>  # cond falseterm
add in 2 <194997 195000> out 1 <195001>  # cond result
add in 2 <195001 104> out 1 <195002>     # ArithBusReq.AddReq(DFG.Conditional,DFG.Constant)
const-mul-ffffffff in 1 <61> out 1 <195003> # multiply-by-constant 4294967295
add in 2 <195002 195003> out 1 <195004>  # 'CmpLT DFG.Add - DFG.Input'
split in 1 <195004> outplitBus
mul in 2 <195036 103> out 1 <195243>     # cond trueterm
const-mul-neg-1 in 1 <195036> out 1 <195244> # cond minuscond
add in 2 <100 195244> out 1 <195245>     # cond negcond
mul in 2 <195245 102> out 1 <195246>     # cond falseterm
add in 2 <195243 195246> out 1 <195247>  # cond result
add in 2 <195001 3084> out 1 <195248>    # ArithBusReq.AddReq(DFG.Conditional,DFG.Negate)
const-mul-ffffffff in 1 <195248> out 1 <195249> # multiply-by-constant 4294967295
add in 2 <61 195249> out 1 <195250>      # 'CmpLT DFG.Input - DFG.Subtract'
split in 1 <195250> out 270 <195251 195252 195253 195254 195255 195256 195257 195258 195259 195260 195261 195262 195263 195264 195265 195266 195267 195268 195269 195270 195271 195272 195273 195274 195275 195276 195277 195278 195279 195280 195281 195282 195283 195284 195285 195286 195287 195288 195289 195290 195291 195292 195293 195294 195295 195296 195297 195298 195299 195300 195301 195302 195303 195304 195305 195306 195307 195308 195309 195310 195311 195312 195313 195314 195315 195316 195317 195318 195319 195320 195321 195322 195323 195324 195325 195326 195327 195328 195329 195330 195331 195332 195333 195334 195335 195336 195337 195338 195339 195340 195341 195342 195343 195344 195345 195346 195347 195348 195349 195350 195351 195352 195353 195354 195355 195356 195357 195358 195359 195360 195361 195362 195363 195364 195365 195366 195367 195368 195369 195370 195371 195372 195373 195374 195375 195376 195377 195378 195379 195380 195381 195382 195383 195384 195385 195386 195387 195388 195389 195390 195391 195392 195393 195394 195395 195396 195397 195398 195399 195400 195401 195402 195403 195404 195405 195406 195407 195408 195409 195410 195411 195412 195413 195414 195415 195416 195417 195418 195419 195420 195421 195422 195423 195424 195425 195426 195427 195428 195429 195430 195431 195432 195433 195434 195435 195436 195437 195438 195439 195440 195441 195442 195443 195444 195445 195446 195447 195448 195449 195450 195451 195452 195453 195454 195455 195456 195457 195458 195459 195460 195461 195462 195463 195464 195465 195466 195467 195468 195469 195470 195471 195472 195473 195474 195475 195476 195477 195478 195479 195480 195481 195482 195483 195484 195485 195486 195487 195488 195489 195490 195491 195492 195493 195494 195495 195496 195497 195498 195499 195500 195501 195502 195503 195504 195505 195506 195507 195508 195509 195510 195511 195512 195513 195514 195515 195516 195517 195518 195519 195520> # SplitBus
mul in 2 <195282 103> out 1 <195521>     # cond trueterm
const-mul-neg-1 in 1 <195282> out 1 <195522> # cond minuscond
add in 2 <100 195522> out 1 <195523>     # cond negcond
mul in 2 <195523 195247> out 1 <195524>  # cond falseterm
add in 2 <195521 195524> out 1 <195525>  # cond result
const-mul-ffffffff in 1 <60> out 1 <195526> # multiply-by-constant 4294967295
add in 2 <60 61> out 1 <195527>          # ArithBusReq.AddReq(DFG.Input,DFG.Input)
add in 2 <195527 195526> out 1 <195528>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <195528> out 1 <195529> # multiply-by-constant 4294967295
add in 2 <195527 195529> out 1 <195530>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <60> out 1 <195531> # multiply-by-constant 4294967295
add in 2 <61 195531> out 1 <195532>      # 'CmpLT DFG.Input - DFG.Input'
split in 1 <195532> out 65 <195533 195534 195535 195536 195537 195538 195539 195540 195541 195542 195543 195544 195545 195546 195547 195548 195549 195550 195551 195552 195553 195554 195555 195556 195557 195558 195559 195560 195561 195562 195563 195564 195565 195566 195567 195568 195569 195570 195571 195572 195573 195574 195575 195576 195577 195578 195579 195580 195581 195582 195583 195584 195585 195586 195587 195588 195589 195590 195591 195592 195593 195594 195595 195596 195597> # SplitBus
mul in 2 <195564 195530> out 1 <195598>  # cond trueterm
const-mul-neg-1 in 1 <195564> out 1 <195599> # cond minuscond
add in 2 <100 195599> out 1 <195600>     # cond negcond
mul in 2 <195600 61> out 1 <195601>      # cond falseterm
add in 2 <195598 195601> out 1 <195602>  # cond result
const-mul-ffffffff in 1 <195602> out 1 <195603> # multiply-by-constant 4294967295
add in 2 <195602 62> out 1 <195604>      # ArithBusReq.AddReq(DFG.Conditional,DFG.Input)
add in 2 <195604 195603> out 1 <195605>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <195605> out 1 <195606> # multiply-by-constant 4294967295
add in 2 <195604 195606> out 1 <195607>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <195602> out 1 <195608> # multiply-by-constant 4294967295
add in 2 <62 195608> out 1 <195609>      # 'CmpLT DFG.Input - DFG.Conditional'
split in 1 <195609> out 131 <195610 195611 195612 195613 195614 195615 195616 195617 195618 195619 195620 195621 195622 195623 195624 195625 195626 195627 195628 195629 195630 195631 195632 195633 195634 195635 195636 195637 195638 195639 195640 195641 195642 195643 195644 195645 195646 195647 195648 195649 195650 195651 195652 195653 195654 195655 195656 195657 195658 195659 195660 195661 195662 195663 195664 195665 195666 195667 195668 195669 195670 195671 195672 195673 195674 195675 195676 195677 195678 195679 195680 195681 195682 195683 195684 195685 195686 195687 195688 195689 195690 195691 195692 195693 195694 195695 195696 195697 195698 195699 195700 195701 195702 195703 195704 195705 195706 195707 195708 195709 195710 195711 195712 195713 195714 195715 195716 195717 195718 195719 195720 195721 195722 195723 195724 195725 195726 195727 195728 195729 195730 195731 195732 195733 195734 195735 195736 195737 195738 195739 195740> # SplitBus
mul in 2 <195641 195607> out 1 <195741>  # cond trueterm
const-mul-neg-1 in 1 <195641> out 1 <195742> # cond minuscond
add in 2 <100 195742> out 1 <195743>     # cond negcond
mul in 2 <195743 62> out 1 <195744>      # cond falseterm
add in 2 <195741 195744> out 1 <195745>  # cond result
const-mul-ffffffff in 1 <195745> out 1 <195746> # multiply-by-constant 4294967295
add in 2 <195745 63> out 1 <195747>      # ArithBusReq.AddReq(DFG.Conditional,DFG.Input)
add in 2 <195747 195746> out 1 <195748>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <195745> out 1 <195749> # multiply-by-constant 4294967295
add in 2 <63 195749> out 1 <195750>      # 'CmpLT DFG.Input - DFG.Conditional'
split in 1 <195750> out 197 <195751 195752 195753 195754 195755 195756 195757 195758 195759 195760 195761 195762 195763 195764 195765 195766 195767 195768 195769 195770 195771 195772 195773 195774 195775 195776 195777 195778 195779 195780 195781 195782 195783 195784 195785 195786 195787 195788 195789 195790 195791 195792 195793 195794 195795 195796 195797 195798 195799 195800 195801 195802 195803 195804 195805 195806 195807 195808 195809 195810 195811 195812 195813 195814 195815 195816 195817 195818 195819 195820 195821 195822 195823 195824 195825 195826 195827 195828 195829 195830 195831 195832 195833 195834 195835 195836 195837 195838 195839 195840 195841 195842 195843 195844 195845 195846 195847 195848 195849 195850 195851 195852 195853 195854 195855 195856 195857 195858 195859 195860 195861 195862 195863 195864 195865 195866 195867 195868 195869 195870 195871 195872 195873 195874 195875 195876 195877 195878 195879 195880 195881 195882 195883 195884 195885 195886 195887 195888 195889 195890 195891 195892 195893 195894 195895 195896 195897 195898 195899 195900 195901 195902 195903 195904 195905 195906 195907 195908 195909 195910 195911 195912 195913 195914 195915 195916 195917 195918 195919 195920 195921 195922 195923 195924 195925 195926 195927 195928 195929 195930 195931 195932 195933 195934 195935 195936 195937 195938 195939 195940 195941 195942 195943 195944 195945 195946 195947> # SplitBus
mul in 2 <195782 195748> out 1 <195948>  # cond trueterm
const-mul-neg-1 in 1 <195782> out 1 <195949> # cond minuscond
add in 2 <100 195949> out 1 <195950>     # cond negcond
mul in 2 <195950 195745> out 1 <195951>  # cond falseterm
add in 2 <195948 195951> out 1 <195952>  # cond result
mul in 2 <195641 195605> out 1 <195953>  # cond trueterm
const-mul-neg-1 in 1 <195641> out 1 <195954> # cond minuscond
add in 2 <100 195954> out 1 <195955>     # cond negcond
mul in 2 <195955 195602> out 1 <195956>  # cond falseterm
add in 2 <195953 195956> out 1 <195957>  # cond result
mul in 2 <195564 195528> out 1 <195958>  # cond trueterm
const-mul-neg-1 in 1 <195564> out 1 <195959> # cond minuscond
add in 2 <100 195959> out 1 <195960>     # cond negcond
mul in 2 <195960 60> out 1 <195961>      # cond falseterm
add in 2 <195958 195961> out 1 <195962>  # cond result
const-mul-ffffffff in 1 <195962> out 1 <195963> # multiply-by-constant 4294967295
add in 2 <195962 195957> out 1 <195964>  # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
add in 2 <195964 195963> out 1 <195965>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <195965> out 1 <195966> # multiply-by-constant 4294967295
add in 2 <195964 195966> out 1 <195967>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <195962> out 1 <195968> # multiply-by-constant 4294967295
add in 2 <195957 195968> out 1 <195969>  # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <195969> out 132 <195970 195971 195972 195973 195974 195975 195976 195977 195978 195979 195980 195981 195982 195983 195984 195985 195986 195987 195988 195989 195990 195991 195992 195993 195994 195995 195996 195997 195998 195999 196000 196001 196002 196003 196004 196005 196006 196007 196008 196009 196010 196011 196012 196013 196014 196015 196016 196017 196018 196019 196020 196021 196022 196023 196024 196025 196026 196027 196028 196029 196030 196031 196032 196033 196034 196035 196036 196037 196038 196039 196040 196041 196042 196043 196044 196045 196046 196047 196048 196049 196050 196051 196052 196053 196054 196055 196056 196057 196058 196059 196060 196061 196062 196063 196064 196065 196066 196067 196068 196069 196070 196071 196072 196073 196074 196075 196076 196077 196078 196079 196080 196081 196082 196083 196084 196085 196086 196087 196088 196089 196090 196091 196092 196093 196094 196095 196096 196097 196098 196099 196100 196101> # SplitBus
mul in 2 <196001 195967> out 1 <196102>  # cond trueterm
const-mul-neg-1 in 1 <196001> out 1 <196103> # cond minuscond
add in 2 <100 196103> out 1 <196104>     # cond negcond
mul in 2 <196104 195957> out 1 <196105>  # cond falseterm
add in 2 <196102 196105> out 1 <196106>  # cond result
const-mul-ffffffff in 1 <196106> out 1 <196107> # multiply-by-constant 4294967295
add in 2 <196106 195952> out 1 <196108>  # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
add in 2 <196108 196107> out 1 <196109>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <196109> out 1 <196110> # multiply-by-constant 4294967295
add in 2 <196108 196110> out 1 <196111>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <196106> out 1 <196112> # multiply-by-constant 4294967295
add in 2 <195952 196112> out 1 <196113>  # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <196113> out 199 <196114 196115 196116 196117 196118 196119 196120 196121 196122 196123 196124 196125 196126 196127 196128 196129 196130 196131 196132 196133 196134 196135 196136 196137 196138 196139 196140 196141 196142 196143 196144 196145 196146 196147 196148 196149 196150 196151 196152 196153 196154 196155 196156 196157 196158 196159 196160 196161 196162 196163 196164 196165 196166 196167 196168 196169 196170 196171 196172 196173 196174 196175 196176 196177 196178 196179 196180 196181 196182 196183 196184 196185 196186 196187 196188 196189 196190 196191 196192 196193 196194 196195 196196 196197 196198 196199 196200 196201 196202 196203 196204 196205 196206 196207 196208 196209 196210 196211 196212 196213 196214 196215 196216 196217 196218 196219 196220 196221 196222 196223 196224 196225 196226 196227 196228 196229 196230 196231 196232 196233 196234 196235 196236 196237 196238 196239 196240 196241 196242 196243 196244 196245 196246 196247 196248 196249 196250 196251 196252 196253 196254 196255 196256 196257 196258 196259 196260 196261 196262 196263 196264 196265 196266 196267 196268 196269 196270 196271 196272 196273 196274 196275 196276 196277 196278 196279 196280 196281 196282 196283 196284 196285 196286 196287 196288 196289 196290 196291 196292 196293 196294 196295 196296 196297 196298 196299 196300 196301 196302 196303 196304 196305 196306 196307 196308 196309 196310 196311 196312> # SplitBus
mul in 2 <196145 196111> out 1 <196313>  # cond trueterm
const-mul-neg-1 in 1 <196145> out 1 <196314> # cond minuscond
add in 2 <100 196314> out 1 <196315>     # cond negcond
mul in 2 <196315 195952> out 1 <196316>  # cond falseterm
add in 2 <196313 196316> out 1 <196317>  # cond result
const-mul-ffffffff in 1 <196317> out 1 <196318> # multiply-by-constant 4294967295
const-mul-ffffffff in 1 <195748> out 1 <196319> # multiply-by-constant 4294967295
add in 2 <195747 196319> out 1 <196320>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
mul in 2 <195782 196320> out 1 <196321>  # cond trueterm
const-mul-neg-1 in 1 <195782> out 1 <196322> # cond minuscond
add in 2 <100 196322> out 1 <196323>     # cond negcond
mul in 2 <196323 63> out 1 <196324>      # cond falseterm
add in 2 <196321 196324> out 1 <196325>  # cond result
const-mul-ffffffff in 1 <196325> out 1 <196326> # multiply-by-constant 4294967295
add in 2 <196325 64> out 1 <196327>      # ArithBusReq.AddReq(DFG.Conditional,DFG.Input)
split in 1 <196327> out 231 <196328 196329 196330 196331 196332 196333 196334 196335 196336 196337 196338 196339 196340 196341 196342 196343 196344 196345 196346 196347 196348 196349 196350 196351 196352 196353 196354 196355 196356 196357 196358 196359 196360 196361 196362 196363 196364 196365 196366 196367 196368 196369 196370 196371 196372 196373 196374 196375 196376 196377 196378 196379 196380 196381 196382 196383 196384 196385 196386 196387 196388 196389 196390 196391 196392 196393 196394 196395 196396 196397 196398 196399 196400 196401 196402 196403 196404 196405 196406 196407 196408 196409 196410 196411 196412 196413 196414 196415 196416 196417 196418 196419 196420 196421 196422 196423 196424 196425 196426 196427 196428 196429 196430 196431 196432 196433 196434 196435 196436 196437 196438 196439 196440 196441 196442 196443 196444 196445 196446 196447 196448 196449 196450 196451 196452 196453 196454 196455 196456 196457 196458 196459 196460 196461 196462 196463 196464 196465 196466 196467 196468 196469 196470 196471 196472 196473 196474 196475 196476 196477 196478 196479 196480 196481 196482 196483 196484 196485 196486 196487 196488 196489 196490 196491 196492 196493 196494 196495 196496 196497 196498 196499 196500 196501 196502 196503 196504 196505 196506 196507 196508 196509 196510 196511 196512 196513 196514 196515 196516 196517 196518 196519 196520 196521 196522 196523 196524 196525 196526 196527 196528 196529 196530 196531 196532 196533 196534 196535 196536 196537 196538 196539 196540 196541 196542 196543 196544 196545 196546 196547 196548 196549 196550 196551 196552 196553 196554 196555 196556 196557 196558> # SplitBus
const-mul-2 in 1 <196359> out 1 <196559> # join source bit 31
add in 2 <196358 196559> out 1 <196560>  # join source bit 30
const-mul-2 in 1 <196560> out 1 <196561> # join
add in 2 <196357 196561> out 1 <196562>  # join source bit 29
const-mul-2 in 1 <196562> out 1 <196563> # join
add in 2 <196356 196563> out 1 <196564>  # join source bit 28
const-mul-2 in 1 <196564> out 1 <196565> # join
add in 2 <196355 196565> out 1 <196566>  # join source bit 27
const-mul-2 in 1 <196566> out 1 <196567> # join
add in 2 <196354 196567> out 1 <196568>  # join source bit 26
const-mul-2 in 1 <196568> out 1 <196569> # join
add in 2 <196353 196569> out 1 <196570>  # join source bit 25
const-mul-2 in 1 <196570> out 1 <196571> # join
add in 2 <196352 196571> out 1 <196572>  # join source bit 24
const-mul-2 in 1 <196572> out 1 <196573> # join
add in 2 <196351 196573> out 1 <196574>  # join source bit 23
const-mul-2 in 1 <196574> out 1 <196575> # join
add in 2 <196350 196575> out 1 <196576>  # join source bit 22
const-mul-2 in 1 <196576> out 1 <196577> # join
add in 2 <196349 196577> out 1 <196578>  # join source bit 21
const-mul-2 in 1 <196578> out 1 <196579> # join
add in 2 <196348 196579> out 1 <196580>  # join source bit 20
const-mul-2 in 1 <196580> out 1 <196581> # join
add in 2 <196347 196581> out 1 <196582>  # join source bit 19
const-mul-2 in 1 <196582> out 1 <196583> # join
add in 2 <196346 196583> out 1 <196584>  # join source bit 18
const-mul-2 in 1 <196584> out 1 <196585> # join
add in 2 <196345 196585> out 1 <196586>  # join source bit 17
const-mul-2 in 1 <196586> out 1 <196587> # join
add in 2 <196344 196587> out 1 <196588>  # join source bit 16
const-mul-2 in 1 <196588> out 1 <196589> # join
add in 2 <196343 196589> out 1 <196590>  # join source bit 15
const-mul-2 in 1 <196590> out 1 <196591> # join
add in 2 <196342 196591> out 1 <196592>  # join source bit 14
const-mul-2 in 1 <196592> out 1 <196593> # join
add in 2 <196341 196593> out 1 <196594>  # join source bit 13
const-mul-2 in 1 <196594> out 1 <196595> # join
add in 2 <196340 196595> out 1 <196596>  # join source bit 12
const-mul-2 in 1 <196596> out 1 <196597> # join
add in 2 <196339 196597> out 1 <196598>  # join source bit 11
const-mul-2 in 1 <196598> out 1 <196599> # join
add in 2 <196338 196599> out 1 <196600>  # join source bit 10
const-mul-2 in 1 <196600> out 1 <196601> # join
add in 2 <196337 196601> out 1 <196602>  # join source bit 9
const-mul-2 in 1 <196602> out 1 <196603> # join
add in 2 <196336 196603> out 1 <196604>  # join source bit 8
const-mul-2 in 1 <196604> out 1 <196605> # join
add in 2 <196335 196605> out 1 <196606>  # join source bit 7
const-mul-2 in 1 <196606> out 1 <196607> # join
add in 2 <196334 196607> out 1 <196608>  # join source bit 6
const-mul-2 in 1 <196608> out 1 <196609> # join
add in 2 <196333 196609> out 1 <196610>  # join source bit 5
const-mul-2 in 1 <196610> out 1 <196611> # join
add in 2 <196332 196611> out 1 <196612>  # join source bit 4
const-mul-2 in 1 <196612> out 1 <196613> # join
add in 2 <196331 196613> out 1 <196614>  # join source bit 3
const-mul-2 in 1 <196614> out 1 <196615> # join
add in 2 <196330 196615> out 1 <196616>  # join source bit 2
const-mul-2 in 1 <196616> out 1 <196617> # join
add in 2 <196329 196617> out 1 <196618>  # join source bit 1
const-mul-2 in 1 <196618> out 1 <196619> # join
add in 2 <196328 196619> out 1 <196620>  # join source bit 0
add in 2 <196620 196620> out 1 <196621>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <196325> out 1 <196622> # multiply-by-constant 4294967295
add in 2 <64 196622> out 1 <196623>      # 'CmpLT DFG.Input - DFG.Conditional'
split in 1 <196623> outplitBus
mul in 2 <196655 196621> out 1 <196887>  # cond trueterm
const-mul-neg-1 in 1 <196655> out 1 <196888> # cond minuscond
add in 2 <100 196888> out 1 <196889>     # cond negcond
mul in 2 <196889 196325> out 1 <196890>  # cond falseterm
add in 2 <196887 196890> out 1 <196891>  # cond result
add in 2 <196317 196891> out 1 <196892>  # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
split in 1 <196892> outplitBus
const-mul-2 in 1 <196924> out 1 <197126> # join source bit 31
add in 2 <196923 197126> out 1 <197127>  # join source bit 30
const-mul-2 in 1 <197127> out 1 <197128> # join
add in 2 <196922 197128> out 1 <197129>  # join source bit 29
const-mul-2 in 1 <197129> out 1 <197130> # join
add in 2 <196921 197130> out 1 <197131>  # join source bit 28
const-mul-2 in 1 <197131> out 1 <197132> # join
add in 2 <196920 197132> out 1 <197133>  # join source bit 27
const-mul-2 in 1 <197133> out 1 <197134> # join
add in 2 <196919 197134> out 1 <197135>  # join source bit 26
const-mul-2 in 1 <197135> out 1 <197136> # join
add in 2 <196918 197136> out 1 <197137>  # join source bit 25
const-mul-2 in 1 <197137> out 1 <197138> # join
add in 2 <196917 197138> out 1 <197139>  # join source bit 24
const-mul-2 in 1 <197139> out 1 <197140> # join
add in 2 <196916 197140> out 1 <197141>  # join source bit 23
const-mul-2 in 1 <197141> out 1 <197142> # join
add in 2 <196915 197142> out 1 <197143>  # join source bit 22
const-mul-2 in 1 <197143> out 1 <197144> # join
add in 2 <196914 197144> out 1 <197145>  # join source bit 21
const-mul-2 in 1 <197145> out 1 <197146> # join
add in 2 <196913 197146> out 1 <197147>  # join source bit 20
const-mul-2 in 1 <197147> out 1 <197148> # join
add in 2 <196912 197148> out 1 <197149>  # join source bit 19
const-mul-2 in 1 <197149> out 1 <197150> # join
add in 2 <196911 197150> out 1 <197151>  # join source bit 18
const-mul-2 in 1 <197151> out 1 <197152> # join
add in 2 <196910 197152> out 1 <197153>  # join source bit 17
const-mul-2 in 1 <197153> out 1 <197154> # join
add in 2 <196909 197154> out 1 <197155>  # join source bit 16
const-mul-2 in 1 <197155> out 1 <197156> # join
add in 2 <196908 197156> out 1 <197157>  # join source bit 15
const-mul-2 in 1 <197157> out 1 <197158> # join
add in 2 <196907 197158> out 1 <197159>  # join source bit 14
const-mul-2 in 1 <197159> out 1 <197160> # join
add in 2 <196906 197160> out 1 <197161>  # join source bit 13
const-mul-2 in 1 <197161> out 1 <197162> # join
add in 2 <196905 197162> out 1 <197163>  # join source bit 12
const-mul-2 in 1 <197163> out 1 <197164> # join
add in 2 <196904 197164> out 1 <197165>  # join source bit 11
const-mul-2 in 1 <197165> out 1 <197166> # join
add in 2 <196903 197166> out 1 <197167>  # join source bit 10
const-mul-2 in 1 <197167> out 1 <197168> # join
add in 2 <196902 197168> out 1 <197169>  # join source bit 9
const-mul-2 in 1 <197169> out 1 <197170> # join
add in 2 <196901 197170> out 1 <197171>  # join source bit 8
const-mul-2 in 1 <197171> out 1 <197172> # join
add in 2 <196900 197172> out 1 <197173>  # join source bit 7
const-mul-2 in 1 <197173> out 1 <197174> # join
add in 2 <196899 197174> out 1 <197175>  # join source bit 6
const-mul-2 in 1 <197175> out 1 <197176> # join
add in 2 <196898 197176> out 1 <197177>  # join source bit 5
const-mul-2 in 1 <197177> out 1 <197178> # join
add in 2 <196897 197178> out 1 <197179>  # join source bit 4
const-mul-2 in 1 <197179> out 1 <197180> # join
add in 2 <196896 197180> out 1 <197181>  # join source bit 3
const-mul-2 in 1 <197181> out 1 <197182> # join
add in 2 <196895 197182> out 1 <197183>  # join source bit 2
const-mul-2 in 1 <197183> out 1 <197184> # join
add in 2 <196894 197184> out 1 <197185>  # join source bit 1
const-mul-2 in 1 <197185> out 1 <197186> # join
add in 2 <196893 197186> out 1 <197187>  # join source bit 0
add in 2 <197187 197187> out 1 <197188>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <196317> out 1 <197189> # multiply-by-constant 4294967295
add in 2 <196891 197189> out 1 <197190>  # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <197190> out 265 <197191 197192 197193 197194 197195 197196 197197 197198 197199 197200 197201 197202 197203 197204 197205 197206 197207 197208 197209 197210 197211 197212 197213 197214 197215 197216 197217 197218 197219 197220 197221 197222 197223 197224 197225 197226 197227 197228 197229 197230 197231 197232 197233 197234 197235 197236 197237 197238 197239 197240 197241 197242 197243 197244 197245 197246 197247 197248 197249 197250 197251 197252 197253 197254 197255 197256 197257 197258 197259 197260 197261 197262 197263 197264 197265 197266 197267 197268 197269 197270 197271 197272 197273 197274 197275 197276 197277 197278 197279 197280 197281 197282 197283 197284 197285 197286 197287 197288 197289 197290 197291 197292 197293 197294 197295 197296 197297 197298 197299 197300 197301 197302 197303 197304 197305 197306 197307 197308 197309 197310 197311 197312 197313 197314 197315 197316 197317 197318 197319 197320 197321 197322 197323 197324 197325 197326 197327 197328 197329 197330 197331 197332 197333 197334 197335 197336 197337 197338 197339 197340 197341 197342 197343 197344 197345 197346 197347 197348 197349 197350 197351 197352 197353 197354 197355 197356 197357 197358 197359 197360 197361 197362 197363 197364 197365 197366 197367 197368 197369 197370 197371 197372 197373 197374 197375 197376 197377 197378 197379 197380 197381 197382 197383 197384 197385 197386 197387 197388 197389 197390 197391 197392 197393 197394 197395 197396 197397 197398 197399 197400 197401 197402 197403 197404 197405 197406 197407 197408 197409 197410 197411 197412 197413 197414 197415 197416 197417 197418 197419 197420 197421 197422 197423 197424 197425 197426 197427 197428 197429 197430 197431 197432 197433 197434 197435 197436 197437 197438 197439 197440 197441 197442 197443 197444 197445 197446 197447 197448 197449 197450 197451 197452 197453 197454 197455> # SplitBus
mul in 2 <197222 197188> out 1 <197456>  # cond trueterm
const-mul-neg-1 in 1 <197222> out 1 <197457> # cond minuscond
add in 2 <100 197457> out 1 <197458>     # cond negcond
mul in 2 <197458 196317> out 1 <197459>  # cond falseterm
add in 2 <197456 197459> out 1 <197460>  # cond result
mul in 2 <196145 196109> out 1 <197461>  # cond trueterm
const-mul-neg-1 in 1 <196145> out 1 <197462> # cond minuscond
add in 2 <100 197462> out 1 <197463>     # cond negcond
mul in 2 <197463 196106> out 1 <197464>  # cond falseterm
add in 2 <197461 197464> out 1 <197465>  # cond result
mul in 2 <196001 195965> out 1 <197466>  # cond trueterm
const-mul-neg-1 in 1 <196001> out 1 <197467> # cond minuscond
add in 2 <100 197467> out 1 <197468>     # cond negcond
mul in 2 <197468 195962> out 1 <197469>  # cond falseterm
add in 2 <197466 197469> out 1 <197470>  # cond result
const-mul-ffffffff in 1 <197470> out 1 <197471> # multiply-by-constant 4294967295
add in 2 <197470 197465> out 1 <197472>  # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
add in 2 <197472 197471> out 1 <197473>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <197473> out 1 <197474> # multiply-by-constant 4294967295
add in 2 <197472 197474> out 1 <197475>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <197470> out 1 <197476> # multiply-by-constant 4294967295
add in 2 <197465 197476> out 1 <197477>  # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <197477> out 200 <197478 197479 197480 197481 197482 197483 197484 197485 197486 197487 197488 197489 197490 197491 197492 197493 197494 197495 197496 197497 197498 197499 197500 197501 197502 197503 197504 197505 197506 197507 197508 197509 197510 197511 197512 197513 197514 197515 197516 197517 197518 197519 197520 197521 197522 197523 197524 197525 197526 197527 197528 197529 197530 197531 197532 197533 197534 197535 197536 197537 197538 197539 197540 197541 197542 197543 197544 197545 197546 197547 197548 197549 197550 197551 197552 197553 197554 197555 197556 197557 197558 197559 197560 197561 197562 197563 197564 197565 197566 197567 197568 197569 197570 197571 197572 197573 197574 197575 197576 197577 197578 197579 197580 197581 197582 197583 197584 197585 197586 197587 197588 197589 197590 197591 197592 197593 197594 197595 197596 197597 197598 197599 197600 197601 197602 197603 197604 197605 197606 197607 197608 197609 197610 197611 197612 197613 197614 197615 197616 197617 197618 197619 197620 197621 197622 197623 197624 197625 197626 197627 197628 197629 197630 197631 197632 197633 197634 197635 197636 197637 197638 197639 197640 197641 197642 197643 197644 197645 197646 197647 197648 197649 197650 197651 197652 197653 197654 197655 197656 197657 197658 197659 197660 197661 197662 197663 197664 197665 197666 197667 197668 197669 197670 197671 197672 197673 197674 197675 197676 197677> # SplitBus
mul in 2 <197509 197475> out 1 <197678>  # cond trueterm
const-mul-neg-1 in 1 <197509> out 1 <197679> # cond minuscond
add in 2 <100 197679> out 1 <197680>     # cond negcond
mul in 2 <197680 197465> out 1 <197681>  # cond falseterm
add in 2 <197678 197681> out 1 <197682>  # cond result
const-mul-ffffffff in 1 <197682> out 1 <197683> # multiply-by-constant 4294967295
add in 2 <197682 197460> out 1 <197684>  # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
split in 1 <197684> out 235 <197685 197686 197687 197688 197689 197690 197691 197692 197693 197694 197695 197696 197697 197698 197699 197700 197701 197702 197703 197704 197705 197706 197707 197708 197709 197710 197711 197712 197713 197714 197715 197716 197717 197718 197719 197720 197721 197722 197723 197724 197725 197726 197727 197728 197729 197730 197731 197732 197733 197734 197735 197736 197737 197738 197739 197740 197741 197742 197743 197744 197745 197746 197747 197748 197749 197750 197751 197752 197753 197754 197755 197756 197757 197758 197759 197760 197761 197762 197763 197764 197765 197766 197767 197768 197769 197770 197771 197772 197773 197774 197775 197776 197777 197778 197779 197780 197781 197782 197783 197784 197785 197786 197787 197788 197789 197790 197791 197792 197793 197794 197795 197796 197797 197798 197799 197800 197801 197802 197803 197804 197805 197806 197807 197808 197809 197810 197811 197812 197813 197814 197815 197816 197817 197818 197819 197820 197821 197822 197823 197824 197825 197826 197827 197828 197829 197830 197831 197832 197833 197834 197835 197836 197837 197838 197839 197840 197841 197842 197843 197844 197845 197846 197847 197848 197849 197850 197851 197852 197853 197854 197855 197856 197857 197858 197859 197860 197861 197862 197863 197864 197865 197866 197867 197868 197869 197870 197871 197872 197873 197874 197875 197876 197877 197878 197879 197880 197881 197882 197883 197884 197885 197886 197887 197888 197889 197890 197891 197892 197893 197894 197895 197896 197897 197898 197899 197900 197901 197902 197903 197904 197905 197906 197907 197908 197909 197910 197911 197912 197913 197914 197915 197916 197917 197918 197919> # SplitBus
const-mul-2 in 1 <197716> out 1 <197920> # join source bit 31
add in 2 <197715 197920> out 1 <197921>  # join source bit 30
const-mul-2 in 1 <197921> out 1 <197922> # join
add in 2 <197714 197922> out 1 <197923>  # join source bit 29
const-mul-2 in 1 <197923> out 1 <197924> # join
add in 2 <197713 197924> out 1 <197925>  # join source bit 28
const-mul-2 in 1 <197925> out 1 <197926> # join
add in 2 <197712 197926> out 1 <197927>  # join source bit 27
const-mul-2 in 1 <197927> out 1 <197928> # join
add in 2 <197711 197928> out 1 <197929>  # join source bit 26
const-mul-2 in 1 <197929> out 1 <197930> # join
add in 2 <197710 197930> out 1 <197931>  # join source bit 25
const-mul-2 in 1 <197931> out 1 <197932> # join
add in 2 <197709 197932> out 1 <197933>  # join source bit 24
const-mul-2 in 1 <197933> out 1 <197934> # join
add in 2 <197708 197934> out 1 <197935>  # join source bit 23
const-mul-2 in 1 <197935> out 1 <197936> # join
add in 2 <197707 197936> out 1 <197937>  # join source bit 22
const-mul-2 in 1 <197937> out 1 <197938> # join
add in 2 <197706 197938> out 1 <197939>  # join source bit 21
const-mul-2 in 1 <197939> out 1 <197940> # join
add in 2 <197705 197940> out 1 <197941>  # join source bit 20
const-mul-2 in 1 <197941> out 1 <197942> # join
add in 2 <197704 197942> out 1 <197943>  # join source bit 19
const-mul-2 in 1 <197943> out 1 <197944> # join
add in 2 <197703 197944> out 1 <197945>  # join source bit 18
const-mul-2 in 1 <197945> out 1 <197946> # join
add in 2 <197702 197946> out 1 <197947>  # join source bit 17
const-mul-2 in 1 <197947> out 1 <197948> # join
add in 2 <197701 197948> out 1 <197949>  # join source bit 16
const-mul-2 in 1 <197949> out 1 <197950> # join
add in 2 <197700 197950> out 1 <197951>  # join source bit 15
const-mul-2 in 1 <197951> out 1 <197952> # join
add in 2 <197699 197952> out 1 <197953>  # join source bit 14
const-mul-2 in 1 <197953> out 1 <197954> # join
add in 2 <197698 197954> out 1 <197955>  # join source bit 13
const-mul-2 in 1 <197955> out 1 <197956> # join
add in 2 <197697 197956> out 1 <197957>  # join source bit 12
const-mul-2 in 1 <197957> out 1 <197958> # join
add in 2 <197696 197958> out 1 <197959>  # join source bit 11
const-mul-2 in 1 <197959> out 1 <197960> # join
add in 2 <197695 197960> out 1 <197961>  # join source bit 10
const-mul-2 in 1 <197961> out 1 <197962> # join
add in 2 <197694 197962> out 1 <197963>  # join source bit 9
const-mul-2 in 1 <197963> out 1 <197964> # join
add in 2 <197693 197964> out 1 <197965>  # join source bit 8
const-mul-2 in 1 <197965> out 1 <197966> # join
add in 2 <197692 197966> out 1 <197967>  # join source bit 7
const-mul-2 in 1 <197967> out 1 <197968> # join
add in 2 <197691 197968> out 1 <197969>  # join source bit 6
const-mul-2 in 1 <197969> out 1 <197970> # join
add in 2 <197690 197970> out 1 <197971>  # join source bit 5
const-mul-2 in 1 <197971> out 1 <197972> # join
add in 2 <197689 197972> out 1 <197973>  # join source bit 4
const-mul-2 in 1 <197973> out 1 <197974> # join
add in 2 <197688 197974> out 1 <197975>  # join source bit 3
const-mul-2 in 1 <197975> out 1 <197976> # join
add in 2 <197687 197976> out 1 <197977>  # join source bit 2
const-mul-2 in 1 <197977> out 1 <197978> # join
add in 2 <197686 197978> out 1 <197979>  # join source bit 1
const-mul-2 in 1 <197979> out 1 <197980> # join
add in 2 <197685 197980> out 1 <197981>  # join source bit 0
add in 2 <197981 197981> out 1 <197982>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <197982> out 1 <197983> # multiply-by-constant 4294967295
add in 2 <197684 197983> out 1 <197984>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <197682> out 1 <197985> # multiply-by-constant 4294967295
add in 2 <197460 197985> out 1 <197986>  # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <197986> out 267 <197987 197988 197989 197990 197991 197992 197993 197994 197995 197996 197997 197998 197999 198000 198001 198002 198003 198004 198005 198006 198007 198008 198009 198010 198011 198012 198013 198014 198015 198016 198017 198018 198019 198020 198021 198022 198023 198024 198025 198026 198027 198028 198029 198030 198031 198032 198033 198034 198035 198036 198037 198038 198039 198040 198041 198042 198043 198044 198045 198046 198047 198048 198049 198050 198051 198052 198053 198054 198055 198056 198057 198058 198059 198060 198061 198062 198063 198064 198065 198066 198067 198068 198069 198070 198071 198072 198073 198074 198075 198076 198077 198078 198079 198080 198081 198082 198083 198084 198085 198086 198087 198088 198089 198090 198091 198092 198093 198094 198095 198096 198097 198098 198099 198100 198101 198102 198103 198104 198105 198106 198107 198108 198109 198110 198111 198112 198113 198114 198115 198116 198117 198118 198119 198120 198121 198122 198123 198124 198125 198126 198127 198128 198129 198130 198131 198132 198133 198134 198135 198136 198137 198138 198139 198140 198141 198142 198143 198144 198145 198146 198147 198148 198149 198150 198151 198152 198153 198154 198155 198156 198157 198158 198159 198160 198161 198162 198163 198164 198165 198166 198167 198168 198169 198170 198171 198172 198173 198174 198175 198176 198177 198178 198179 198180 198181 198182 198183 198184 198185 198186 198187 198188 198189 198190 198191 198192 198193 198194 198195 198196 198197 198198 198199 198200 198201 198202 198203 198204 198205 198206 198207 198208 198209 198210 198211 198212 198213 198214 198215 198216 198217 198218 198219 198220 198221 198222 198223 198224 198225 198226 198227 198228 198229 198230 198231 198232 198233 198234 198235 198236 198237 198238 198239 198240 198241 198242 198243 198244 198245 198246 198247 198248 198249 198250 198251 198252 198253> # SplitBus
mul in 2 <198018 197984> out 1 <198254>  # cond trueterm
const-mul-neg-1 in 1 <198018> out 1 <198255> # cond minuscond
add in 2 <100 198255> out 1 <198256>     # cond negcond
mul in 2 <198256 197460> out 1 <198257>  # cond falseterm
add in 2 <198254 198257> out 1 <198258>  # cond result
add in 2 <198258 104> out 1 <198259>     # ArithBusReq.AddReq(DFG.Conditional,DFG.Constant)
const-mul-ffffffff in 1 <62> out 1 <198260> # multiply-by-constant 4294967295
add in 2 <198259 198260> out 1 <198261>  # 'CmpLT DFG.Add - DFG.Input'
split in 1 <198261> out 238 <198262 198263 198264 198265 198266 198267 198268 198269 198270 198271 198272 198273 198274 198275 198276 198277 198278 198279 198280 198281 198282 198283 198284 198285 198286 198287 198288 198289 198290 198291 198292 198293 198294 198295 198296 198297 198298 198299 198300 198301 198302 198303 198304 198305 198306 198307 198308 198309 198310 198311 198312 198313 198314 198315 198316 198317 198318 198319 198320 198321 198322 198323 198324 198325 198326 198327 198328 198329 198330 198331 198332 198333 198334 198335 198336 198337 198338 198339 198340 198341 198342 198343 198344 198345 198346 198347 198348 198349 198350 198351 198352 198353 198354 198355 198356 198357 198358 198359 198360 198361 198362 198363 198364 198365 198366 198367 198368 198369 198370 198371 198372 198373 198374 198375 198376 198377 198378 198379 198380 198381 198382 198383 198384 198385 198386 198387 198388 198389 198390 198391 198392 198393 198394 198395 198396 198397 198398 198399 198400 198401 198402 198403 198404 198405 198406 198407 198408 198409 198410 198411 198412 198413 198414 198415 198416 198417 198418 198419 198420 198421 198422 198423 198424 198425 198426 198427 198428 198429 198430 198431 198432 198433 198434 198435 198436 198437 198438 198439 198440 198441 198442 198443 198444 198445 198446 198447 198448 198449 198450 198451 198452 198453 198454 198455 198456 198457 198458 198459 198460 198461 198462 198463 198464 198465 198466 198467 198468 198469 198470 198471 198472 198473 198474 198475 198476 198477 198478 198479 198480 198481 198482 198483 198484 198485 198486 198487 198488 198489 198490 198491 198492 198493 198494 198495 198496 198497 198498 198499> # SplitBus
mul in 2 <198293 103> out 1 <198500>     # cond trueterm
const-mul-neg-1 in 1 <198293> out 1 <198501> # cond minuscond
add in 2 <100 198501> out 1 <198502>     # cond negcond
mul in 2 <198502 102> out 1 <198503>     # cond falseterm
add in 2 <198500 198503> out 1 <198504>  # cond result
add in 2 <198258 3084> out 1 <198505>    # ArithBusReq.AddReq(DFG.Conditional,DFG.Negate)
const-mul-ffffffff in 1 <198505> out 1 <198506> # multiply-by-constant 4294967295
add in 2 <62 198506> out 1 <198507>      # 'CmpLT DFG.Input - DFG.Subtract'
split in 1 <198507> outplitBus
mul in 2 <198539 103> out 1 <198778>     # cond trueterm
const-mul-neg-1 in 1 <198539> out 1 <198779> # cond minuscond
add in 2 <100 198779> out 1 <198780>     # cond negcond
mul in 2 <198780 198504> out 1 <198781>  # cond falseterm
add in 2 <198778 198781> out 1 <198782>  # cond result
const-mul-ffffffff in 1 <61> out 1 <198783> # multiply-by-constant 4294967295
add in 2 <61 62> out 1 <198784>          # ArithBusReq.AddReq(DFG.Input,DFG.Input)
add in 2 <198784 198783> out 1 <198785>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <198785> out 1 <198786> # multiply-by-constant 4294967295
add in 2 <198784 198786> out 1 <198787>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <61> out 1 <198788> # multiply-by-constant 4294967295
add in 2 <62 198788> out 1 <198789>      # 'CmpLT DFG.Input - DFG.Input'
split in 1 <198789> out 65 <198790 198791 198792 198793 198794 198795 198796 198797 198798 198799 198800 198801 198802 198803 198804 198805 198806 198807 198808 198809 198810 198811 198812 198813 198814 198815 198816 198817 198818 198819 198820 198821 198822 198823 198824 198825 198826 198827 198828 198829 198830 198831 198832 198833 198834 198835 198836 198837 198838 198839 198840 198841 198842 198843 198844 198845 198846 198847 198848 198849 198850 198851 198852 198853 198854> # SplitBus
mul in 2 <198821 198787> out 1 <198855>  # cond trueterm
const-mul-neg-1 in 1 <198821> out 1 <198856> # cond minuscond
add in 2 <100 198856> out 1 <198857>     # cond negcond
mul in 2 <198857 62> out 1 <198858>      # cond falseterm
add in 2 <198855 198858> out 1 <198859>  # cond result
const-mul-ffffffff in 1 <198859> out 1 <198860> # multiply-by-constant 4294967295
add in 2 <198859 63> out 1 <198861>      # ArithBusReq.AddReq(DFG.Conditional,DFG.Input)
add in 2 <198861 198860> out 1 <198862>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <198862> out 1 <198863> # multiply-by-constant 4294967295
add in 2 <198861 198863> out 1 <198864>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <198859> out 1 <198865> # multiply-by-constant 4294967295
add in 2 <63 198865> out 1 <198866>      # 'CmpLT DFG.Input - DFG.Conditional'
split in 1 <198866> out 131 <198867 198868 198869 198870 198871 198872 198873 198874 198875 198876 198877 198878 198879 198880 198881 198882 198883 198884 198885 198886 198887 198888 198889 198890 198891 198892 198893 198894 198895 198896 198897 198898 198899 198900 198901 198902 198903 198904 198905 198906 198907 198908 198909 198910 198911 198912 198913 198914 198915 198916 198917 198918 198919 198920 198921 198922 198923 198924 198925 198926 198927 198928 198929 198930 198931 198932 198933 198934 198935 198936 198937 198938 198939 198940 198941 198942 198943 198944 198945 198946 198947 198948 198949 198950 198951 198952 198953 198954 198955 198956 198957 198958 198959 198960 198961 198962 198963 198964 198965 198966 198967 198968 198969 198970 198971 198972 198973 198974 198975 198976 198977 198978 198979 198980 198981 198982 198983 198984 198985 198986 198987 198988 198989 198990 198991 198992 198993 198994 198995 198996 198997> # SplitBus
mul in 2 <198898 198864> out 1 <198998>  # cond trueterm
const-mul-neg-1 in 1 <198898> out 1 <198999> # cond minuscond
add in 2 <100 198999> out 1 <199000>     # cond negcond
mul in 2 <199000 63> out 1 <199001>      # cond falseterm
add in 2 <198998 199001> out 1 <199002>  # cond result
const-mul-ffffffff in 1 <199002> out 1 <199003> # multiply-by-constant 4294967295
add in 2 <199002 64> out 1 <199004>      # ArithBusReq.AddReq(DFG.Conditional,DFG.Input)
add in 2 <199004 199003> out 1 <199005>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <199002> out 1 <199006> # multiply-by-constant 4294967295
add in 2 <64 199006> out 1 <199007>      # 'CmpLT DFG.Input - DFG.Conditional'
split in 1 <199007> out 197 <199008 199009 199010 199011 199012 199013 199014 199015 199016 199017 199018 199019 199020 199021 199022 199023 199024 199025 199026 199027 199028 199029 199030 199031 199032 199033 199034 199035 199036 199037 199038 199039 199040 199041 199042 199043 199044 199045 199046 199047 199048 199049 199050 199051 199052 199053 199054 199055 199056 199057 199058 199059 199060 199061 199062 199063 199064 199065 199066 199067 199068 199069 199070 199071 199072 199073 199074 199075 199076 199077 199078 199079 199080 199081 199082 199083 199084 199085 199086 199087 199088 199089 199090 199091 199092 199093 199094 199095 199096 199097 199098 199099 199100 199101 199102 199103 199104 199105 199106 199107 199108 199109 199110 199111 199112 199113 199114 199115 199116 199117 199118 199119 199120 199121 199122 199123 199124 199125 199126 199127 199128 199129 199130 199131 199132 199133 199134 199135 199136 199137 199138 199139 199140 199141 199142 199143 199144 199145 199146 199147 199148 199149 199150 199151 199152 199153 199154 199155 199156 199157 199158 199159 199160 199161 199162 199163 199164 199165 199166 199167 199168 199169 199170 199171 199172 199173 199174 199175 199176 199177 199178 199179 199180 199181 199182 199183 199184 199185 199186 199187 199188 199189 199190 199191 199192 199193 199194 199195 199196 199197 199198 199199 199200 199201 199202 199203 199204> # SplitBus
mul in 2 <199039 199005> out 1 <199205>  # cond trueterm
const-mul-neg-1 in 1 <199039> out 1 <199206> # cond minuscond
add in 2 <100 199206> out 1 <199207>     # cond negcond
mul in 2 <199207 199002> out 1 <199208>  # cond falseterm
add in 2 <199205 199208> out 1 <199209>  # cond result
mul in 2 <198898 198862> out 1 <199210>  # cond trueterm
const-mul-neg-1 in 1 <198898> out 1 <199211> # cond minuscond
add in 2 <100 199211> out 1 <199212>     # cond negcond
mul in 2 <199212 198859> out 1 <199213>  # cond falseterm
add in 2 <199210 199213> out 1 <199214>  # cond result
mul in 2 <198821 198785> out 1 <199215>  # cond trueterm
const-mul-neg-1 in 1 <198821> out 1 <199216> # cond minuscond
add in 2 <100 199216> out 1 <199217>     # cond negcond
mul in 2 <199217 61> out 1 <199218>      # cond falseterm
add in 2 <199215 199218> out 1 <199219>  # cond result
const-mul-ffffffff in 1 <199219> out 1 <199220> # multiply-by-constant 4294967295
add in 2 <199219 199214> out 1 <199221>  # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
add in 2 <199221 199220> out 1 <199222>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <199222> out 1 <199223> # multiply-by-constant 4294967295
add in 2 <199221 199223> out 1 <199224>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <199219> out 1 <199225> # multiply-by-constant 4294967295
add in 2 <199214 199225> out 1 <199226>  # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <199226> out 132 <199227 199228 199229 199230 199231 199232 199233 199234 199235 199236 199237 199238 199239 199240 199241 199242 199243 199244 199245 199246 199247 199248 199249 199250 199251 199252 199253 199254 199255 199256 199257 199258 199259 199260 199261 199262 199263 199264 199265 199266 199267 199268 199269 199270 199271 199272 199273 199274 199275 199276 199277 199278 199279 199280 199281 199282 199283 199284 199285 199286 199287 199288 199289 199290 199291 199292 199293 199294 199295 199296 199297 199298 199299 199300 199301 199302 199303 199304 199305 199306 199307 199308 199309 199310 199311 199312 199313 199314 199315 199316 199317 199318 199319 199320 199321 199322 199323 199324 199325 199326 199327 199328 199329 199330 199331 199332 199333 199334 199335 199336 199337 199338 199339 199340 199341 199342 199343 199344 199345 199346 199347 199348 199349 199350 199351 199352 199353 199354 199355 199356 199357 199358> # SplitBus
mul in 2 <199258 199224> out 1 <199359>  # cond trueterm
const-mul-neg-1 in 1 <199258> out 1 <199360> # cond minuscond
add in 2 <100 199360> out 1 <199361>     # cond negcond
mul in 2 <199361 199214> out 1 <199362>  # cond falseterm
add in 2 <199359 199362> out 1 <199363>  # cond result
const-mul-ffffffff in 1 <199363> out 1 <199364> # multiply-by-constant 4294967295
add in 2 <199363 199209> out 1 <199365>  # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
add in 2 <199365 199364> out 1 <199366>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <199366> out 1 <199367> # multiply-by-constant 4294967295
add in 2 <199365 199367> out 1 <199368>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <199363> out 1 <199369> # multiply-by-constant 4294967295
add in 2 <199209 199369> out 1 <199370>  # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <199370> out 199 <199371 199372 199373 199374 199375 199376 199377 199378 199379 199380 199381 199382 199383 199384 199385 199386 199387 199388 199389 199390 199391 199392 199393 199394 199395 199396 199397 199398 199399 199400 199401 199402 199403 199404 199405 199406 199407 199408 199409 199410 199411 199412 199413 199414 199415 199416 199417 199418 199419 199420 199421 199422 199423 199424 199425 199426 199427 199428 199429 199430 199431 199432 199433 199434 199435 199436 199437 199438 199439 199440 199441 199442 199443 199444 199445 199446 199447 199448 199449 199450 199451 199452 199453 199454 199455 199456 199457 199458 199459 199460 199461 199462 199463 199464 199465 199466 199467 199468 199469 199470 199471 199472 199473 199474 199475 199476 199477 199478 199479 199480 199481 199482 199483 199484 199485 199486 199487 199488 199489 199490 199491 199492 199493 199494 199495 199496 199497 199498 199499 199500 199501 199502 199503 199504 199505 199506 199507 199508 199509 199510 199511 199512 199513 199514 199515 199516 199517 199518 199519 199520 199521 199522 199523 199524 199525 199526 199527 199528 199529 199530 199531 199532 199533 199534 199535 199536 199537 199538 199539 199540 199541 199542 199543 199544 199545 199546 199547 199548 199549 199550 199551 199552 199553 199554 199555 199556 199557 199558 199559 199560 199561 199562 199563 199564 199565 199566 199567 199568 199569> # SplitBus
mul in 2 <199402 199368> out 1 <199570>  # cond trueterm
const-mul-neg-1 in 1 <199402> out 1 <199571> # cond minuscond
add in 2 <100 199571> out 1 <199572>     # cond negcond
mul in 2 <199572 199209> out 1 <199573>  # cond falseterm
add in 2 <199570 199573> out 1 <199574>  # cond result
const-mul-ffffffff in 1 <199574> out 1 <199575> # multiply-by-constant 4294967295
const-mul-ffffffff in 1 <199005> out 1 <199576> # multiply-by-constant 4294967295
add in 2 <199004 199576> out 1 <199577>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
mul in 2 <199039 199577> out 1 <199578>  # cond trueterm
const-mul-neg-1 in 1 <199039> out 1 <199579> # cond minuscond
add in 2 <100 199579> out 1 <199580>     # cond negcond
mul in 2 <199580 64> out 1 <199581>      # cond falseterm
add in 2 <199578 199581> out 1 <199582>  # cond result
const-mul-ffffffff in 1 <199582> out 1 <199583> # multiply-by-constant 4294967295
add in 2 <199582 65> out 1 <199584>      # ArithBusReq.AddReq(DFG.Conditional,DFG.Input)
split in 1 <199584> out 231 <199585 199586 199587 199588 199589 199590 199591 199592 199593 199594 199595 199596 199597 199598 199599 199600 199601 199602 199603 199604 199605 199606 199607 199608 199609 199610 199611 199612 199613 199614 199615 199616 199617 199618 199619 199620 199621 199622 199623 199624 199625 199626 199627 199628 199629 199630 199631 199632 199633 199634 199635 199636 199637 199638 199639 199640 199641 199642 199643 199644 199645 199646 199647 199648 199649 199650 199651 199652 199653 199654 199655 199656 199657 199658 199659 199660 199661 199662 199663 199664 199665 199666 199667 199668 199669 199670 199671 199672 199673 199674 199675 199676 199677 199678 199679 199680 199681 199682 199683 199684 199685 199686 199687 199688 199689 199690 199691 199692 199693 199694 199695 199696 199697 199698 199699 199700 199701 199702 199703 199704 199705 199706 199707 199708 199709 199710 199711 199712 199713 199714 199715 199716 199717 199718 199719 199720 199721 199722 199723 199724 199725 199726 199727 199728 199729 199730 199731 199732 199733 199734 199735 199736 199737 199738 199739 199740 199741 199742 199743 199744 199745 199746 199747 199748 199749 199750 199751 199752 199753 199754 199755 199756 199757 199758 199759 199760 199761 199762 199763 199764 199765 199766 199767 199768 199769 199770 199771 199772 199773 199774 199775 199776 199777 199778 199779 199780 199781 199782 199783 199784 199785 199786 199787 199788 199789 199790 199791 199792 199793 199794 199795 199796 199797 199798 199799 199800 199801 199802 199803 199804 199805 199806 199807 199808 199809 199810 199811 199812 199813 199814 199815> # SplitBus
const-mul-2 in 1 <199616> out 1 <199816> # join source bit 31
add in 2 <199615 199816> out 1 <199817>  # join source bit 30
const-mul-2 in 1 <199817> out 1 <199818> # join
add in 2 <199614 199818> out 1 <199819>  # join source bit 29
const-mul-2 in 1 <199819> out 1 <199820> # join
add in 2 <199613 199820> out 1 <199821>  # join source bit 28
const-mul-2 in 1 <199821> out 1 <199822> # join
add in 2 <199612 199822> out 1 <199823>  # join source bit 27
const-mul-2 in 1 <199823> out 1 <199824> # join
add in 2 <199611 199824> out 1 <199825>  # join source bit 26
const-mul-2 in 1 <199825> out 1 <199826> # join
add in 2 <199610 199826> out 1 <199827>  # join source bit 25
const-mul-2 in 1 <199827> out 1 <199828> # join
add in 2 <199609 199828> out 1 <199829>  # join source bit 24
const-mul-2 in 1 <199829> out 1 <199830> # join
add in 2 <199608 199830> out 1 <199831>  # join source bit 23
const-mul-2 in 1 <199831> out 1 <199832> # join
add in 2 <199607 199832> out 1 <199833>  # join source bit 22
const-mul-2 in 1 <199833> out 1 <199834> # join
add in 2 <199606 199834> out 1 <199835>  # join source bit 21
const-mul-2 in 1 <199835> out 1 <199836> # join
add in 2 <199605 199836> out 1 <199837>  # join source bit 20
const-mul-2 in 1 <199837> out 1 <199838> # join
add in 2 <199604 199838> out 1 <199839>  # join source bit 19
const-mul-2 in 1 <199839> out 1 <199840> # join
add in 2 <199603 199840> out 1 <199841>  # join source bit 18
const-mul-2 in 1 <199841> out 1 <199842> # join
add in 2 <199602 199842> out 1 <199843>  # join source bit 17
const-mul-2 in 1 <199843> out 1 <199844> # join
add in 2 <199601 199844> out 1 <199845>  # join source bit 16
const-mul-2 in 1 <199845> out 1 <199846> # join
add in 2 <199600 199846> out 1 <199847>  # join source bit 15
const-mul-2 in 1 <199847> out 1 <199848> # join
add in 2 <199599 199848> out 1 <199849>  # join source bit 14
const-mul-2 in 1 <199849> out 1 <199850> # join
add in 2 <199598 199850> out 1 <199851>  # join source bit 13
const-mul-2 in 1 <199851> out 1 <199852> # join
add in 2 <199597 199852> out 1 <199853>  # join source bit 12
const-mul-2 in 1 <199853> out 1 <199854> # join
add in 2 <199596 199854> out 1 <199855>  # join source bit 11
const-mul-2 in 1 <199855> out 1 <199856> # join
add in 2 <199595 199856> out 1 <199857>  # join source bit 10
const-mul-2 in 1 <199857> out 1 <199858> # join
add in 2 <199594 199858> out 1 <199859>  # join source bit 9
const-mul-2 in 1 <199859> out 1 <199860> # join
add in 2 <199593 199860> out 1 <199861>  # join source bit 8
const-mul-2 in 1 <199861> out 1 <199862> # join
add in 2 <199592 199862> out 1 <199863>  # join source bit 7
const-mul-2 in 1 <199863> out 1 <199864> # join
add in 2 <199591 199864> out 1 <199865>  # join source bit 6
const-mul-2 in 1 <199865> out 1 <199866> # join
add in 2 <199590 199866> out 1 <199867>  # join source bit 5
const-mul-2 in 1 <199867> out 1 <199868> # join
add in 2 <199589 199868> out 1 <199869>  # join source bit 4
const-mul-2 in 1 <199869> out 1 <199870> # join
add in 2 <199588 199870> out 1 <199871>  # join source bit 3
const-mul-2 in 1 <199871> out 1 <199872> # join
add in 2 <199587 199872> out 1 <199873>  # join source bit 2
const-mul-2 in 1 <199873> out 1 <199874> # join
add in 2 <199586 199874> out 1 <199875>  # join source bit 1
const-mul-2 in 1 <199875> out 1 <199876> # join
add in 2 <199585 199876> out 1 <199877>  # join source bit 0
add in 2 <199877 199877> out 1 <199878>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <199582> out 1 <199879> # multiply-by-constant 4294967295
add in 2 <65 199879> out 1 <199880>      # 'CmpLT DFG.Input - DFG.Conditional'
split in 1 <199880> out 263 <199881 199882 199883 199884 199885 199886 199887 199888 199889 199890 199891 199892 199893 199894 199895 199896 199897 199898 199899 199900 199901 199902 199903 199904 199905 199906 199907 199908 199909 199910 199911 199912 199913 199914 199915 199916 199917 199918 199919 199920 199921 199922 199923 199924 199925 199926 199927 199928 199929 199930 199931 199932 199933 199934 199935 199936 199937 199938 199939 199940 199941 199942 199943 199944 199945 199946 199947 199948 199949 199950 199951 199952 199953 199954 199955 199956 199957 199958 199959 199960 199961 199962 199963 199964 199965 199966 199967 199968 199969 199970 199971 199972 199973 199974 199975 199976 199977 199978 199979 199980 199981 199982 199983 199984 199985 199986 199987 199988 199989 199990 199991 199992 199993 199994 199995 199996 199997 199998 199999 200000 200001 200002 200003 200004 200005 200006 200007 200008 200009 200010 200011 200012 200013 200014 200015 200016 200017 200018 200019 200020 200021 200022 200023 200024 200025 200026 200027 200028 200029 200030 200031 200032 200033 200034 200035 200036 200037 200038 200039 200040 200041 200042 200043 200044 200045 200046 200047 200048 200049 200050 200051 200052 200053 200054 200055 200056 200057 200058 200059 200060 200061 200062 200063 200064 200065 200066 200067 200068 200069 200070 200071 200072 200073 200074 200075 200076 200077 200078 200079 200080 200081 200082 200083 200084 200085 200086 200087 200088 200089 200090 200091 200092 200093 200094 200095 200096 200097 200098 200099 200100 200101 200102 200103 200104 200105 200106 200107 200108 200109 200110 200111 200112 200113 200114 200115 200116 200117 200118 200119 200120 200121 200122 200123 200124 200125 200126 200127 200128 200129 200130 200131 200132 200133 200134 200135 200136 200137 200138 200139 200140 200141 200142 200143> # SplitBus
mul in 2 <199912 199878> out 1 <200144>  # cond trueterm
const-mul-neg-1 in 1 <199912> out 1 <200145> # cond minuscond
add in 2 <100 200145> out 1 <200146>     # cond negcond
mul in 2 <200146 199582> out 1 <200147>  # cond falseterm
add in 2 <200144 200147> out 1 <200148>  # cond result
add in 2 <199574 200148> out 1 <200149>  # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
split in 1 <200149> out 233 <200150 200151 200152 200153 200154 200155 200156 200157 200158 200159 200160 200161 200162 200163 200164 200165 200166 200167 200168 200169 200170 200171 200172 200173 200174 200175 200176 200177 200178 200179 200180 200181 200182 200183 200184 200185 200186 200187 200188 200189 200190 200191 200192 200193 200194 200195 200196 200197 200198 200199 200200 200201 200202 200203 200204 200205 200206 200207 200208 200209 200210 200211 200212 200213 200214 200215 200216 200217 200218 200219 200220 200221 200222 200223 200224 200225 200226 200227 200228 200229 200230 200231 200232 200233 200234 200235 200236 200237 200238 200239 200240 200241 200242 200243 200244 200245 200246 200247 200248 200249 200250 200251 200252 200253 200254 200255 200256 200257 200258 200259 200260 200261 200262 200263 200264 200265 200266 200267 200268 200269 200270 200271 200272 200273 200274 200275 200276 200277 200278 200279 200280 200281 200282 200283 200284 200285 200286 200287 200288 200289 200290 200291 200292 200293 200294 200295 200296 200297 200298 200299 200300 200301 200302 200303 200304 200305 200306 200307 200308 200309 200310 200311 200312 200313 200314 200315 200316 200317 200318 200319 200320 200321 200322 200323 200324 200325 200326 200327 200328 200329 200330 200331 200332 200333 200334 200335 200336 200337 200338 200339 200340 200341 200342 200343 200344 200345 200346 200347 200348 200349 200350 200351 200352 200353 200354 200355 200356 200357 200358 200359 200360 200361 200362 200363 200364 200365 200366 200367 200368 200369 200370 200371 200372 200373 200374 200375 200376 200377 200378 200379 200380 200381 200382> # SplitBus
const-mul-2 in 1 <200181> out 1 <200383> # join source bit 31
add in 2 <200180 200383> out 1 <200384>  # join source bit 30
const-mul-2 in 1 <200384> out 1 <200385> # join
add in 2 <200179 200385> out 1 <200386>  # join source bit 29
const-mul-2 in 1 <200386> out 1 <200387> # join
add in 2 <200178 200387> out 1 <200388>  # join source bit 28
const-mul-2 in 1 <200388> out 1 <200389> # join
add in 2 <200177 200389> out 1 <200390>  # join source bit 27
const-mul-2 in 1 <200390> out 1 <200391> # join
add in 2 <200176 200391> out 1 <200392>  # join source bit 26
const-mul-2 in 1 <200392> out 1 <200393> # join
add in 2 <200175 200393> out 1 <200394>  # join source bit 25
const-mul-2 in 1 <200394> out 1 <200395> # join
add in 2 <200174 200395> out 1 <200396>  # join source bit 24
const-mul-2 in 1 <200396> out 1 <200397> # join
add in 2 <200173 200397> out 1 <200398>  # join source bit 23
const-mul-2 in 1 <200398> out 1 <200399> # join
add in 2 <200172 200399> out 1 <200400>  # join source bit 22
const-mul-2 in 1 <200400> out 1 <200401> # join
add in 2 <200171 200401> out 1 <200402>  # join source bit 21
const-mul-2 in 1 <200402> out 1 <200403> # join
add in 2 <200170 200403> out 1 <200404>  # join source bit 20
const-mul-2 in 1 <200404> out 1 <200405> # join
add in 2 <200169 200405> out 1 <200406>  # join source bit 19
const-mul-2 in 1 <200406> out 1 <200407> # join
add in 2 <200168 200407> out 1 <200408>  # join source bit 18
const-mul-2 in 1 <200408> out 1 <200409> # join
add in 2 <200167 200409> out 1 <200410>  # join source bit 17
const-mul-2 in 1 <200410> out 1 <200411> # join
add in 2 <200166 200411> out 1 <200412>  # join source bit 16
const-mul-2 in 1 <200412> out 1 <200413> # join
add in 2 <200165 200413> out 1 <200414>  # join source bit 15
const-mul-2 in 1 <200414> out 1 <200415> # join
add in 2 <200164 200415> out 1 <200416>  # join source bit 14
const-mul-2 in 1 <200416> out 1 <200417> # join
add in 2 <200163 200417> out 1 <200418>  # join source bit 13
const-mul-2 in 1 <200418> out 1 <200419> # join
add in 2 <200162 200419> out 1 <200420>  # join source bit 12
const-mul-2 in 1 <200420> out 1 <200421> # join
add in 2 <200161 200421> out 1 <200422>  # join source bit 11
const-mul-2 in 1 <200422> out 1 <200423> # join
add in 2 <200160 200423> out 1 <200424>  # join source bit 10
const-mul-2 in 1 <200424> out 1 <200425> # join
add in 2 <200159 200425> out 1 <200426>  # join source bit 9
const-mul-2 in 1 <200426> out 1 <200427> # join
add in 2 <200158 200427> out 1 <200428>  # join source bit 8
const-mul-2 in 1 <200428> out 1 <200429> # join
add in 2 <200157 200429> out 1 <200430>  # join source bit 7
const-mul-2 in 1 <200430> out 1 <200431> # join
add in 2 <200156 200431> out 1 <200432>  # join source bit 6
const-mul-2 in 1 <200432> out 1 <200433> # join
add in 2 <200155 200433> out 1 <200434>  # join source bit 5
const-mul-2 in 1 <200434> out 1 <200435> # join
add in 2 <200154 200435> out 1 <200436>  # join source bit 4
const-mul-2 in 1 <200436> out 1 <200437> # join
add in 2 <200153 200437> out 1 <200438>  # join source bit 3
const-mul-2 in 1 <200438> out 1 <200439> # join
add in 2 <200152 200439> out 1 <200440>  # join source bit 2
const-mul-2 in 1 <200440> out 1 <200441> # join
add in 2 <200151 200441> out 1 <200442>  # join source bit 1
const-mul-2 in 1 <200442> out 1 <200443> # join
add in 2 <200150 200443> out 1 <200444>  # join source bit 0
add in 2 <200444 200444> out 1 <200445>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <199574> out 1 <200446> # multiply-by-constant 4294967295
add in 2 <200148 200446> out 1 <200447>  # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <200447> out 265 <200448 200449 200450 200451 200452 200453 200454 200455 200456 200457 200458 200459 200460 200461 200462 200463 200464 200465 200466 200467 200468 200469 200470 200471 200472 200473 200474 200475 200476 200477 200478 200479 200480 200481 200482 200483 200484 200485 200486 200487 200488 200489 200490 200491 200492 200493 200494 200495 200496 200497 200498 200499 200500 200501 200502 200503 200504 200505 200506 200507 200508 200509 200510 200511 200512 200513 200514 200515 200516 200517 200518 200519 200520 200521 200522 200523 200524 200525 200526 200527 200528 200529 200530 200531 200532 200533 200534 200535 200536 200537 200538 200539 200540 200541 200542 200543 200544 200545 200546 200547 200548 200549 200550 200551 200552 200553 200554 200555 200556 200557 200558 200559 200560 200561 200562 200563 200564 200565 200566 200567 200568 200569 200570 200571 200572 200573 200574 200575 200576 200577 200578 200579 200580 200581 200582 200583 200584 200585 200586 200587 200588 200589 200590 200591 200592 200593 200594 200595 200596 200597 200598 200599 200600 200601 200602 200603 200604 200605 200606 200607 200608 200609 200610 200611 200612 200613 200614 200615 200616 200617 200618 200619 200620 200621 200622 200623 200624 200625 200626 200627 200628 200629 200630 200631 200632 200633 200634 200635 200636 200637 200638 200639 200640 200641 200642 200643 200644 200645 200646 200647 200648 200649 200650 200651 200652 200653 200654 200655 200656 200657 200658 200659 200660 200661 200662 200663 200664 200665 200666 200667 200668 200669 200670 200671 200672 200673 200674 200675 200676 200677 200678 200679 200680 200681 200682 200683 200684 200685 200686 200687 200688 200689 200690 200691 200692 200693 200694 200695 200696 200697 200698 200699 200700 200701 200702 200703 200704 200705 200706 200707 200708 200709 200710 200711 200712> # SplitBus
mul in 2 <200479 200445> out 1 <200713>  # cond trueterm
const-mul-neg-1 in 1 <200479> out 1 <200714> # cond minuscond
add in 2 <100 200714> out 1 <200715>     # cond negcond
mul in 2 <200715 199574> out 1 <200716>  # cond falseterm
add in 2 <200713 200716> out 1 <200717>  # cond result
mul in 2 <199402 199366> out 1 <200718>  # cond trueterm
const-mul-neg-1 in 1 <199402> out 1 <200719> # cond minuscond
add in 2 <100 200719> out 1 <200720>     # cond negcond
mul in 2 <200720 199363> out 1 <200721>  # cond falseterm
add in 2 <200718 200721> out 1 <200722>  # cond result
mul in 2 <199258 199222> out 1 <200723>  # cond trueterm
const-mul-neg-1 in 1 <199258> out 1 <200724> # cond minuscond
add in 2 <100 200724> out 1 <200725>     # cond negcond
mul in 2 <200725 199219> out 1 <200726>  # cond falseterm
add in 2 <200723 200726> out 1 <200727>  # cond result
const-mul-ffffffff in 1 <200727> out 1 <200728> # multiply-by-constant 4294967295
add in 2 <200727 200722> out 1 <200729>  # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
add in 2 <200729 200728> out 1 <200730>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <200730> out 1 <200731> # multiply-by-constant 4294967295
add in 2 <200729 200731> out 1 <200732>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <200727> out 1 <200733> # multiply-by-constant 4294967295
add in 2 <200722 200733> out 1 <200734>  # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <200734> out 200 <200735 200736 200737 200738 200739 200740 200741 200742 200743 200744 200745 200746 200747 200748 200749 200750 200751 200752 200753 200754 200755 200756 200757 200758 200759 200760 200761 200762 200763 200764 200765 200766 200767 200768 200769 200770 200771 200772 200773 200774 200775 200776 200777 200778 200779 200780 200781 200782 200783 200784 200785 200786 200787 200788 200789 200790 200791 200792 200793 200794 200795 200796 200797 200798 200799 200800 200801 200802 200803 200804 200805 200806 200807 200808 200809 200810 200811 200812 200813 200814 200815 200816 200817 200818 200819 200820 200821 200822 200823 200824 200825 200826 200827 200828 200829 200830 200831 200832 200833 200834 200835 200836 200837 200838 200839 200840 200841 200842 200843 200844 200845 200846 200847 200848 200849 200850 200851 200852 200853 200854 200855 200856 200857 200858 200859 200860 200861 200862 200863 200864 200865 200866 200867 200868 200869 200870 200871 200872 200873 200874 200875 200876 200877 200878 200879 200880 200881 200882 200883 200884 200885 200886 200887 200888 200889 200890 200891 200892 200893 200894 200895 200896 200897 200898 200899 200900 200901 200902 200903 200904 200905 200906 200907 200908 200909 200910 200911 200912 200913 200914 200915 200916 200917 200918 200919 200920 200921 200922 200923 200924 200925 200926 200927 200928 200929 200930 200931 200932 200933 200934> # SplitBus
mul in 2 <200766 200732> out 1 <200935>  # cond trueterm
const-mul-neg-1 in 1 <200766> out 1 <200936> # cond minuscond
add in 2 <100 200936> out 1 <200937>     # cond negcond
mul in 2 <200937 200722> out 1 <200938>  # cond falseterm
add in 2 <200935 200938> out 1 <200939>  # cond result
const-mul-ffffffff in 1 <200939> out 1 <200940> # multiply-by-constant 4294967295
add in 2 <200939 200717> out 1 <200941>  # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
split in 1 <200941> out 235 <200942 200943 200944 200945 200946 200947 200948 200949 200950 200951 200952 200953 200954 200955 200956 200957 200958 200959 200960 200961 200962 200963 200964 200965 200966 200967 200968 200969 200970 200971 200972 200973 200974 200975 200976 200977 200978 200979 200980 200981 200982 200983 200984 200985 200986 200987 200988 200989 200990 200991 200992 200993 200994 200995 200996 200997 200998 200999 201000 201001 201002 201003 201004 201005 201006 201007 201008 201009 201010 201011 201012 201013 201014 201015 201016 201017 201018 201019 201020 201021 201022 201023 201024 201025 201026 201027 201028 201029 201030 201031 201032 201033 201034 201035 201036 201037 201038 201039 201040 201041 201042 201043 201044 201045 201046 201047 201048 201049 201050 201051 201052 201053 201054 201055 201056 201057 201058 201059 201060 201061 201062 201063 201064 201065 201066 201067 201068 201069 201070 201071 201072 201073 201074 201075 201076 201077 201078 201079 201080 201081 201082 201083 201084 201085 201086 201087 201088 201089 201090 201091 201092 201093 201094 201095 201096 201097 201098 201099 201100 201101 201102 201103 201104 201105 201106 201107 201108 201109 201110 201111 201112 201113 201114 201115 201116 201117 201118 201119 201120 201121 201122 201123 201124 201125 201126 201127 201128 201129 201130 201131 201132 201133 201134 201135 201136 201137 201138 201139 201140 201141 201142 201143 201144 201145 201146 201147 201148 201149 201150 201151 201152 201153 201154 201155 201156 201157 201158 201159 201160 201161 201162 201163 201164 201165 201166 201167 201168 201169 201170 201171 201172 201173 201174 201175 201176> # SplitBus
const-mul-2 in 1 <200973> out 1 <201177> # join source bit 31
add in 2 <200972 201177> out 1 <201178>  # join source bit 30
const-mul-2 in 1 <201178> out 1 <201179> # join
add in 2 <200971 201179> out 1 <201180>  # join source bit 29
const-mul-2 in 1 <201180> out 1 <201181> # join
add in 2 <200970 201181> out 1 <201182>  # join source bit 28
const-mul-2 in 1 <201182> out 1 <201183> # join
add in 2 <200969 201183> out 1 <201184>  # join source bit 27
const-mul-2 in 1 <201184> out 1 <201185> # join
add in 2 <200968 201185> out 1 <201186>  # join source bit 26
const-mul-2 in 1 <201186> out 1 <201187> # join
add in 2 <200967 201187> out 1 <201188>  # join source bit 25
const-mul-2 in 1 <201188> out 1 <201189> # join
add in 2 <200966 201189> out 1 <201190>  # join source bit 24
const-mul-2 in 1 <201190> out 1 <201191> # join
add in 2 <200965 201191> out 1 <201192>  # join source bit 23
const-mul-2 in 1 <201192> out 1 <201193> # join
add in 2 <200964 201193> out 1 <201194>  # join source bit 22
const-mul-2 in 1 <201194> out 1 <201195> # join
add in 2 <200963 201195> out 1 <201196>  # join source bit 21
const-mul-2 in 1 <201196> out 1 <201197> # join
add in 2 <200962 201197> out 1 <201198>  # join source bit 20
const-mul-2 in 1 <201198> out 1 <201199> # join
add in 2 <200961 201199> out 1 <201200>  # join source bit 19
const-mul-2 in 1 <201200> out 1 <201201> # join
add in 2 <200960 201201> out 1 <201202>  # join source bit 18
const-mul-2 in 1 <201202> out 1 <201203> # join
add in 2 <200959 201203> out 1 <201204>  # join source bit 17
const-mul-2 in 1 <201204> out 1 <201205> # join
add in 2 <200958 201205> out 1 <201206>  # join source bit 16
const-mul-2 in 1 <201206> out 1 <201207> # join
add in 2 <200957 201207> out 1 <201208>  # join source bit 15
const-mul-2 in 1 <201208> out 1 <201209> # join
add in 2 <200956 201209> out 1 <201210>  # join source bit 14
const-mul-2 in 1 <201210> out 1 <201211> # join
add in 2 <200955 201211> out 1 <201212>  # join source bit 13
const-mul-2 in 1 <201212> out 1 <201213> # join
add in 2 <200954 201213> out 1 <201214>  # join source bit 12
const-mul-2 in 1 <201214> out 1 <201215> # join
add in 2 <200953 201215> out 1 <201216>  # join source bit 11
const-mul-2 in 1 <201216> out 1 <201217> # join
add in 2 <200952 201217> out 1 <201218>  # join source bit 10
const-mul-2 in 1 <201218> out 1 <201219> # join
add in 2 <200951 201219> out 1 <201220>  # join source bit 9
const-mul-2 in 1 <201220> out 1 <201221> # join
add in 2 <200950 201221> out 1 <201222>  # join source bit 8
const-mul-2 in 1 <201222> out 1 <201223> # join
add in 2 <200949 201223> out 1 <201224>  # join source bit 7
const-mul-2 in 1 <201224> out 1 <201225> # join
add in 2 <200948 201225> out 1 <201226>  # join source bit 6
const-mul-2 in 1 <201226> out 1 <201227> # join
add in 2 <200947 201227> out 1 <201228>  # join source bit 5
const-mul-2 in 1 <201228> out 1 <201229> # join
add in 2 <200946 201229> out 1 <201230>  # join source bit 4
const-mul-2 in 1 <201230> out 1 <201231> # join
add in 2 <200945 201231> out 1 <201232>  # join source bit 3
const-mul-2 in 1 <201232> out 1 <201233> # join
add in 2 <200944 201233> out 1 <201234>  # join source bit 2
const-mul-2 in 1 <201234> out 1 <201235> # join
add in 2 <200943 201235> out 1 <201236>  # join source bit 1
const-mul-2 in 1 <201236> out 1 <201237> # join
add in 2 <200942 201237> out 1 <201238>  # join source bit 0
add in 2 <201238 201238> out 1 <201239>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <201239> out 1 <201240> # multiply-by-constant 4294967295
add in 2 <200941 201240> out 1 <201241>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <200939> out 1 <201242> # multiply-by-constant 4294967295
add in 2 <200717 201242> out 1 <201243>  # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <201243> out 267 <201244 201245 201246 201247 201248 201249 201250 201251 201252 201253 201254 201255 201256 201257 201258 201259 201260 201261 201262 201263 201264 201265 201266 201267 201268 201269 201270 201271 201272 201273 201274 201275 201276 201277 201278 201279 201280 201281 201282 201283 201284 201285 201286 201287 201288 201289 201290 201291 201292 201293 201294 201295 201296 201297 201298 201299 201300 201301 201302 201303 201304 201305 201306 201307 201308 201309 201310 201311 201312 201313 201314 201315 201316 201317 201318 201319 201320 201321 201322 201323 201324 201325 201326 201327 201328 201329 201330 201331 201332 201333 201334 201335 201336 201337 201338 201339 201340 201341 201342 201343 201344 201345 201346 201347 201348 201349 201350 201351 201352 201353 201354 201355 201356 201357 201358 201359 201360 201361 201362 201363 201364 201365 201366 201367 201368 201369 201370 201371 201372 201373 201374 201375 201376 201377 201378 201379 201380 201381 201382 201383 201384 201385 201386 201387 201388 201389 201390 201391 201392 201393 201394 201395 201396 201397 201398 201399 201400 201401 201402 201403 201404 201405 201406 201407 201408 201409 201410 201411 201412 201413 201414 201415 201416 201417 201418 201419 201420 201421 201422 201423 201424 201425 201426 201427 201428 201429 201430 201431 201432 201433 201434 201435 201436 201437 201438 201439 201440 201441 201442 201443 201444 201445 201446 201447 201448 201449 201450 201451 201452 201453 201454 201455 201456 201457 201458 201459 201460 201461 201462 201463 201464 201465 201466 201467 201468 201469 201470 201471 201472 201473 201474 201475 201476 201477 201478 201479 201480 201481 201482 201483 201484 201485 201486 201487 201488 201489 201490 201491 201492 201493 201494 201495 201496 201497 201498 201499 201500 201501 201502 201503 201504 201505 201506 201507 201508 201509 201510> # SplitBus
mul in 2 <201275 201241> out 1 <201511>  # cond trueterm
const-mul-neg-1 in 1 <201275> out 1 <201512> # cond minuscond
add in 2 <100 201512> out 1 <201513>     # cond negcond
mul in 2 <201513 200717> out 1 <201514>  # cond falseterm
add in 2 <201511 201514> out 1 <201515>  # cond result
add in 2 <201515 104> out 1 <201516>     # ArithBusReq.AddReq(DFG.Conditional,DFG.Constant)
const-mul-ffffffff in 1 <63> out 1 <201517> # multiply-by-constant 4294967295
add in 2 <201516 201517> out 1 <201518>  # 'CmpLT DFG.Add - DFG.Input'
split in 1 <201518> outplitBus
mul in 2 <201550 103> out 1 <201757>     # cond trueterm
const-mul-neg-1 in 1 <201550> out 1 <201758> # cond minuscond
add in 2 <100 201758> out 1 <201759>     # cond negcond
mul in 2 <201759 102> out 1 <201760>     # cond falseterm
add in 2 <201757 201760> out 1 <201761>  # cond result
add in 2 <201515 3084> out 1 <201762>    # ArithBusReq.AddReq(DFG.Conditional,DFG.Negate)
const-mul-ffffffff in 1 <201762> out 1 <201763> # multiply-by-constant 4294967295
add in 2 <63 201763> out 1 <201764>      # 'CmpLT DFG.Input - DFG.Subtract'
split in 1 <201764> out 270 <201765 201766 201767 201768 201769 201770 201771 201772 201773 201774 201775 201776 201777 201778 201779 201780 201781 201782 201783 201784 201785 201786 201787 201788 201789 201790 201791 201792 201793 201794 201795 201796 201797 201798 201799 201800 201801 201802 201803 201804 201805 201806 201807 201808 201809 201810 201811 201812 201813 201814 201815 201816 201817 201818 201819 201820 201821 201822 201823 201824 201825 201826 201827 201828 201829 201830 201831 201832 201833 201834 201835 201836 201837 201838 201839 201840 201841 201842 201843 201844 201845 201846 201847 201848 201849 201850 201851 201852 201853 201854 201855 201856 201857 201858 201859 201860 201861 201862 201863 201864 201865 201866 201867 201868 201869 201870 201871 201872 201873 201874 201875 201876 201877 201878 201879 201880 201881 201882 201883 201884 201885 201886 201887 201888 201889 201890 201891 201892 201893 201894 201895 201896 201897 201898 201899 201900 201901 201902 201903 201904 201905 201906 201907 201908 201909 201910 201911 201912 201913 201914 201915 201916 201917 201918 201919 201920 201921 201922 201923 201924 201925 201926 201927 201928 201929 201930 201931 201932 201933 201934 201935 201936 201937 201938 201939 201940 201941 201942 201943 201944 201945 201946 201947 201948 201949 201950 201951 201952 201953 201954 201955 201956 201957 201958 201959 201960 201961 201962 201963 201964 201965 201966 201967 201968 201969 201970 201971 201972 201973 201974 201975 201976 201977 201978 201979 201980 201981 201982 201983 201984 201985 201986 201987 201988 201989 201990 201991 201992 201993 201994 201995 201996 201997 201998 201999 202000 202001 202002 202003 202004 202005 202006 202007 202008 202009 202010 202011 202012 202013 202014 202015 202016 202017 202018 202019 202020 202021 202022 202023 202024 202025 202026 202027 202028 202029 202030 202031 202032 202033 202034> # SplitBus
mul in 2 <201796 103> out 1 <202035>     # cond trueterm
const-mul-neg-1 in 1 <201796> out 1 <202036> # cond minuscond
add in 2 <100 202036> out 1 <202037>     # cond negcond
mul in 2 <202037 201761> out 1 <202038>  # cond falseterm
add in 2 <202035 202038> out 1 <202039>  # cond result
const-mul-ffffffff in 1 <62> out 1 <202040> # multiply-by-constant 4294967295
add in 2 <62 63> out 1 <202041>          # ArithBusReq.AddReq(DFG.Input,DFG.Input)
add in 2 <202041 202040> out 1 <202042>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <202042> out 1 <202043> # multiply-by-constant 4294967295
add in 2 <202041 202043> out 1 <202044>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <62> out 1 <202045> # multiply-by-constant 4294967295
add in 2 <63 202045> out 1 <202046>      # 'CmpLT DFG.Input - DFG.Input'
split in 1 <202046> out 65 <202047 202048 202049 202050 202051 202052 202053 202054 202055 202056 202057 202058 202059 202060 202061 202062 202063 202064 202065 202066 202067 202068 202069 202070 202071 202072 202073 202074 202075 202076 202077 202078 202079 202080 202081 202082 202083 202084 202085 202086 202087 202088 202089 202090 202091 202092 202093 202094 202095 202096 202097 202098 202099 202100 202101 202102 202103 202104 202105 202106 202107 202108 202109 202110 202111> # SplitBus
mul in 2 <202078 202044> out 1 <202112>  # cond trueterm
const-mul-neg-1 in 1 <202078> out 1 <202113> # cond minuscond
add in 2 <100 202113> out 1 <202114>     # cond negcond
mul in 2 <202114 63> out 1 <202115>      # cond falseterm
add in 2 <202112 202115> out 1 <202116>  # cond result
const-mul-ffffffff in 1 <202116> out 1 <202117> # multiply-by-constant 4294967295
add in 2 <202116 64> out 1 <202118>      # ArithBusReq.AddReq(DFG.Conditional,DFG.Input)
add in 2 <202118 202117> out 1 <202119>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <202119> out 1 <202120> # multiply-by-constant 4294967295
add in 2 <202118 202120> out 1 <202121>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <202116> out 1 <202122> # multiply-by-constant 4294967295
add in 2 <64 202122> out 1 <202123>      # 'CmpLT DFG.Input - DFG.Conditional'
split in 1 <202123> out 131 <202124 202125 202126 202127 202128 202129 202130 202131 202132 202133 202134 202135 202136 202137 202138 202139 202140 202141 202142 202143 202144 202145 202146 202147 202148 202149 202150 202151 202152 202153 202154 202155 202156 202157 202158 202159 202160 202161 202162 202163 202164 202165 202166 202167 202168 202169 202170 202171 202172 202173 202174 202175 202176 202177 202178 202179 202180 202181 202182 202183 202184 202185 202186 202187 202188 202189 202190 202191 202192 202193 202194 202195 202196 202197 202198 202199 202200 202201 202202 202203 202204 202205 202206 202207 202208 202209 202210 202211 202212 202213 202214 202215 202216 202217 202218 202219 202220 202221 202222 202223 202224 202225 202226 202227 202228 202229 202230 202231 202232 202233 202234 202235 202236 202237 202238 202239 202240 202241 202242 202243 202244 202245 202246 202247 202248 202249 202250 202251 202252 202253 202254> # SplitBus
mul in 2 <202155 202121> out 1 <202255>  # cond trueterm
const-mul-neg-1 in 1 <202155> out 1 <202256> # cond minuscond
add in 2 <100 202256> out 1 <202257>     # cond negcond
mul in 2 <202257 64> out 1 <202258>      # cond falseterm
add in 2 <202255 202258> out 1 <202259>  # cond result
const-mul-ffffffff in 1 <202259> out 1 <202260> # multiply-by-constant 4294967295
add in 2 <202259 65> out 1 <202261>      # ArithBusReq.AddReq(DFG.Conditional,DFG.Input)
add in 2 <202261 202260> out 1 <202262>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <202259> out 1 <202263> # multiply-by-constant 4294967295
add in 2 <65 202263> out 1 <202264>      # 'CmpLT DFG.Input - DFG.Conditional'
split in 1 <202264> out 197 <202265 202266 202267 202268 202269 202270 202271 202272 202273 202274 202275 202276 202277 202278 202279 202280 202281 202282 202283 202284 202285 202286 202287 202288 202289 202290 202291 202292 202293 202294 202295 202296 202297 202298 202299 202300 202301 202302 202303 202304 202305 202306 202307 202308 202309 202310 202311 202312 202313 202314 202315 202316 202317 202318 202319 202320 202321 202322 202323 202324 202325 202326 202327 202328 202329 202330 202331 202332 202333 202334 202335 202336 202337 202338 202339 202340 202341 202342 202343 202344 202345 202346 202347 202348 202349 202350 202351 202352 202353 202354 202355 202356 202357 202358 202359 202360 202361 202362 202363 202364 202365 202366 202367 202368 202369 202370 202371 202372 202373 202374 202375 202376 202377 202378 202379 202380 202381 202382 202383 202384 202385 202386 202387 202388 202389 202390 202391 202392 202393 202394 202395 202396 202397 202398 202399 202400 202401 202402 202403 202404 202405 202406 202407 202408 202409 202410 202411 202412 202413 202414 202415 202416 202417 202418 202419 202420 202421 202422 202423 202424 202425 202426 202427 202428 202429 202430 202431 202432 202433 202434 202435 202436 202437 202438 202439 202440 202441 202442 202443 202444 202445 202446 202447 202448 202449 202450 202451 202452 202453 202454 202455 202456 202457 202458 202459 202460 202461> # SplitBus
mul in 2 <202296 202262> out 1 <202462>  # cond trueterm
const-mul-neg-1 in 1 <202296> out 1 <202463> # cond minuscond
add in 2 <100 202463> out 1 <202464>     # cond negcond
mul in 2 <202464 202259> out 1 <202465>  # cond falseterm
add in 2 <202462 202465> out 1 <202466>  # cond result
mul in 2 <202155 202119> out 1 <202467>  # cond trueterm
const-mul-neg-1 in 1 <202155> out 1 <202468> # cond minuscond
add in 2 <100 202468> out 1 <202469>     # cond negcond
mul in 2 <202469 202116> out 1 <202470>  # cond falseterm
add in 2 <202467 202470> out 1 <202471>  # cond result
mul in 2 <202078 202042> out 1 <202472>  # cond trueterm
const-mul-neg-1 in 1 <202078> out 1 <202473> # cond minuscond
add in 2 <100 202473> out 1 <202474>     # cond negcond
mul in 2 <202474 62> out 1 <202475>      # cond falseterm
add in 2 <202472 202475> out 1 <202476>  # cond result
const-mul-ffffffff in 1 <202476> out 1 <202477> # multiply-by-constant 4294967295
add in 2 <202476 202471> out 1 <202478>  # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
add in 2 <202478 202477> out 1 <202479>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <202479> out 1 <202480> # multiply-by-constant 4294967295
add in 2 <202478 202480> out 1 <202481>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <202476> out 1 <202482> # multiply-by-constant 4294967295
add in 2 <202471 202482> out 1 <202483>  # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <202483> out 132 <202484 202485 202486 202487 202488 202489 202490 202491 202492 202493 202494 202495 202496 202497 202498 202499 202500 202501 202502 202503 202504 202505 202506 202507 202508 202509 202510 202511 202512 202513 202514 202515 202516 202517 202518 202519 202520 202521 202522 202523 202524 202525 202526 202527 202528 202529 202530 202531 202532 202533 202534 202535 202536 202537 202538 202539 202540 202541 202542 202543 202544 202545 202546 202547 202548 202549 202550 202551 202552 202553 202554 202555 202556 202557 202558 202559 202560 202561 202562 202563 202564 202565 202566 202567 202568 202569 202570 202571 202572 202573 202574 202575 202576 202577 202578 202579 202580 202581 202582 202583 202584 202585 202586 202587 202588 202589 202590 202591 202592 202593 202594 202595 202596 202597 202598 202599 202600 202601 202602 202603 202604 202605 202606 202607 202608 202609 202610 202611 202612 202613 202614 202615> # SplitBus
mul in 2 <202515 202481> out 1 <202616>  # cond trueterm
const-mul-neg-1 in 1 <202515> out 1 <202617> # cond minuscond
add in 2 <100 202617> out 1 <202618>     # cond negcond
mul in 2 <202618 202471> out 1 <202619>  # cond falseterm
add in 2 <202616 202619> out 1 <202620>  # cond result
const-mul-ffffffff in 1 <202620> out 1 <202621> # multiply-by-constant 4294967295
add in 2 <202620 202466> out 1 <202622>  # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
add in 2 <202622 202621> out 1 <202623>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <202623> out 1 <202624> # multiply-by-constant 4294967295
add in 2 <202622 202624> out 1 <202625>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <202620> out 1 <202626> # multiply-by-constant 4294967295
add in 2 <202466 202626> out 1 <202627>  # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <202627> out 199 <202628 202629 202630 202631 202632 202633 202634 202635 202636 202637 202638 202639 202640 202641 202642 202643 202644 202645 202646 202647 202648 202649 202650 202651 202652 202653 202654 202655 202656 202657 202658 202659 202660 202661 202662 202663 202664 202665 202666 202667 202668 202669 202670 202671 202672 202673 202674 202675 202676 202677 202678 202679 202680 202681 202682 202683 202684 202685 202686 202687 202688 202689 202690 202691 202692 202693 202694 202695 202696 202697 202698 202699 202700 202701 202702 202703 202704 202705 202706 202707 202708 202709 202710 202711 202712 202713 202714 202715 202716 202717 202718 202719 202720 202721 202722 202723 202724 202725 202726 202727 202728 202729 202730 202731 202732 202733 202734 202735 202736 202737 202738 202739 202740 202741 202742 202743 202744 202745 202746 202747 202748 202749 202750 202751 202752 202753 202754 202755 202756 202757 202758 202759 202760 202761 202762 202763 202764 202765 202766 202767 202768 202769 202770 202771 202772 202773 202774 202775 202776 202777 202778 202779 202780 202781 202782 202783 202784 202785 202786 202787 202788 202789 202790 202791 202792 202793 202794 202795 202796 202797 202798 202799 202800 202801 202802 202803 202804 202805 202806 202807 202808 202809 202810 202811 202812 202813 202814 202815 202816 202817 202818 202819 202820 202821 202822 202823 202824 202825 202826> # SplitBus
mul in 2 <202659 202625> out 1 <202827>  # cond trueterm
const-mul-neg-1 in 1 <202659> out 1 <202828> # cond minuscond
add in 2 <100 202828> out 1 <202829>     # cond negcond
mul in 2 <202829 202466> out 1 <202830>  # cond falseterm
add in 2 <202827 202830> out 1 <202831>  # cond result
const-mul-ffffffff in 1 <202831> out 1 <202832> # multiply-by-constant 4294967295
const-mul-ffffffff in 1 <202262> out 1 <202833> # multiply-by-constant 4294967295
add in 2 <202261 202833> out 1 <202834>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
mul in 2 <202296 202834> out 1 <202835>  # cond trueterm
const-mul-neg-1 in 1 <202296> out 1 <202836> # cond minuscond
add in 2 <100 202836> out 1 <202837>     # cond negcond
mul in 2 <202837 65> out 1 <202838>      # cond falseterm
add in 2 <202835 202838> out 1 <202839>  # cond result
const-mul-ffffffff in 1 <202839> out 1 <202840> # multiply-by-constant 4294967295
add in 2 <202839 66> out 1 <202841>      # ArithBusReq.AddReq(DFG.Conditional,DFG.Input)
split in 1 <202841> out 231 <202842 202843 202844 202845 202846 202847 202848 202849 202850 202851 202852 202853 202854 202855 202856 202857 202858 202859 202860 202861 202862 202863 202864 202865 202866 202867 202868 202869 202870 202871 202872 202873 202874 202875 202876 202877 202878 202879 202880 202881 202882 202883 202884 202885 202886 202887 202888 202889 202890 202891 202892 202893 202894 202895 202896 202897 202898 202899 202900 202901 202902 202903 202904 202905 202906 202907 202908 202909 202910 202911 202912 202913 202914 202915 202916 202917 202918 202919 202920 202921 202922 202923 202924 202925 202926 202927 202928 202929 202930 202931 202932 202933 202934 202935 202936 202937 202938 202939 202940 202941 202942 202943 202944 202945 202946 202947 202948 202949 202950 202951 202952 202953 202954 202955 202956 202957 202958 202959 202960 202961 202962 202963 202964 202965 202966 202967 202968 202969 202970 202971 202972 202973 202974 202975 202976 202977 202978 202979 202980 202981 202982 202983 202984 202985 202986 202987 202988 202989 202990 202991 202992 202993 202994 202995 202996 202997 202998 202999 203000 203001 203002 203003 203004 203005 203006 203007 203008 203009 203010 203011 203012 203013 203014 203015 203016 203017 203018 203019 203020 203021 203022 203023 203024 203025 203026 203027 203028 203029 203030 203031 203032 203033 203034 203035 203036 203037 203038 203039 203040 203041 203042 203043 203044 203045 203046 203047 203048 203049 203050 203051 203052 203053 203054 203055 203056 203057 203058 203059 203060 203061 203062 203063 203064 203065 203066 203067 203068 203069 203070 203071 203072> # SplitBus
const-mul-2 in 1 <202873> out 1 <203073> # join source bit 31
add in 2 <202872 203073> out 1 <203074>  # join source bit 30
const-mul-2 in 1 <203074> out 1 <203075> # join
add in 2 <202871 203075> out 1 <203076>  # join source bit 29
const-mul-2 in 1 <203076> out 1 <203077> # join
add in 2 <202870 203077> out 1 <203078>  # join source bit 28
const-mul-2 in 1 <203078> out 1 <203079> # join
add in 2 <202869 203079> out 1 <203080>  # join source bit 27
const-mul-2 in 1 <203080> out 1 <203081> # join
add in 2 <202868 203081> out 1 <203082>  # join source bit 26
const-mul-2 in 1 <203082> out 1 <203083> # join
add in 2 <202867 203083> out 1 <203084>  # join source bit 25
const-mul-2 in 1 <203084> out 1 <203085> # join
add in 2 <202866 203085> out 1 <203086>  # join source bit 24
const-mul-2 in 1 <203086> out 1 <203087> # join
add in 2 <202865 203087> out 1 <203088>  # join source bit 23
const-mul-2 in 1 <203088> out 1 <203089> # join
add in 2 <202864 203089> out 1 <203090>  # join source bit 22
const-mul-2 in 1 <203090> out 1 <203091> # join
add in 2 <202863 203091> out 1 <203092>  # join source bit 21
const-mul-2 in 1 <203092> out 1 <203093> # join
add in 2 <202862 203093> out 1 <203094>  # join source bit 20
const-mul-2 in 1 <203094> out 1 <203095> # join
add in 2 <202861 203095> out 1 <203096>  # join source bit 19
const-mul-2 in 1 <203096> out 1 <203097> # join
add in 2 <202860 203097> out 1 <203098>  # join source bit 18
const-mul-2 in 1 <203098> out 1 <203099> # join
add in 2 <202859 203099> out 1 <203100>  # join source bit 17
const-mul-2 in 1 <203100> out 1 <203101> # join
add in 2 <202858 203101> out 1 <203102>  # join source bit 16
const-mul-2 in 1 <203102> out 1 <203103> # join
add in 2 <202857 203103> out 1 <203104>  # join source bit 15
const-mul-2 in 1 <203104> out 1 <203105> # join
add in 2 <202856 203105> out 1 <203106>  # join source bit 14
const-mul-2 in 1 <203106> out 1 <203107> # join
add in 2 <202855 203107> out 1 <203108>  # join source bit 13
const-mul-2 in 1 <203108> out 1 <203109> # join
add in 2 <202854 203109> out 1 <203110>  # join source bit 12
const-mul-2 in 1 <203110> out 1 <203111> # join
add in 2 <202853 203111> out 1 <203112>  # join source bit 11
const-mul-2 in 1 <203112> out 1 <203113> # join
add in 2 <202852 203113> out 1 <203114>  # join source bit 10
const-mul-2 in 1 <203114> out 1 <203115> # join
add in 2 <202851 203115> out 1 <203116>  # join source bit 9
const-mul-2 in 1 <203116> out 1 <203117> # join
add in 2 <202850 203117> out 1 <203118>  # join source bit 8
const-mul-2 in 1 <203118> out 1 <203119> # join
add in 2 <202849 203119> out 1 <203120>  # join source bit 7
const-mul-2 in 1 <203120> out 1 <203121> # join
add in 2 <202848 203121> out 1 <203122>  # join source bit 6
const-mul-2 in 1 <203122> out 1 <203123> # join
add in 2 <202847 203123> out 1 <203124>  # join source bit 5
const-mul-2 in 1 <203124> out 1 <203125> # join
add in 2 <202846 203125> out 1 <203126>  # join source bit 4
const-mul-2 in 1 <203126> out 1 <203127> # join
add in 2 <202845 203127> out 1 <203128>  # join source bit 3
const-mul-2 in 1 <203128> out 1 <203129> # join
add in 2 <202844 203129> out 1 <203130>  # join source bit 2
const-mul-2 in 1 <203130> out 1 <203131> # join
add in 2 <202843 203131> out 1 <203132>  # join source bit 1
const-mul-2 in 1 <203132> out 1 <203133> # join
add in 2 <202842 203133> out 1 <203134>  # join source bit 0
add in 2 <203134 203134> out 1 <203135>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <202839> out 1 <203136> # multiply-by-constant 4294967295
add in 2 <66 203136> out 1 <203137>      # 'CmpLT DFG.Input - DFG.Conditional'
split in 1 <203137> out 263 <203138 203139 203140 203141 203142 203143 203144 203145 203146 203147 203148 203149 203150 203151 203152 203153 203154 203155 203156 203157 203158 203159 203160 203161 203162 203163 203164 203165 203166 203167 203168 203169 203170 203171 203172 203173 203174 203175 203176 203177 203178 203179 203180 203181 203182 203183 203184 203185 203186 203187 203188 203189 203190 203191 203192 203193 203194 203195 203196 203197 203198 203199 203200 203201 203202 203203 203204 203205 203206 203207 203208 203209 203210 203211 203212 203213 203214 203215 203216 203217 203218 203219 203220 203221 203222 203223 203224 203225 203226 203227 203228 203229 203230 203231 203232 203233 203234 203235 203236 203237 203238 203239 203240 203241 203242 203243 203244 203245 203246 203247 203248 203249 203250 203251 203252 203253 203254 203255 203256 203257 203258 203259 203260 203261 203262 203263 203264 203265 203266 203267 203268 203269 203270 203271 203272 203273 203274 203275 203276 203277 203278 203279 203280 203281 203282 203283 203284 203285 203286 203287 203288 203289 203290 203291 203292 203293 203294 203295 203296 203297 203298 203299 203300 203301 203302 203303 203304 203305 203306 203307 203308 203309 203310 203311 203312 203313 203314 203315 203316 203317 203318 203319 203320 203321 203322 203323 203324 203325 203326 203327 203328 203329 203330 203331 203332 203333 203334 203335 203336 203337 203338 203339 203340 203341 203342 203343 203344 203345 203346 203347 203348 203349 203350 203351 203352 203353 203354 203355 203356 203357 203358 203359 203360 203361 203362 203363 203364 203365 203366 203367 203368 203369 203370 203371 203372 203373 203374 203375 203376 203377 203378 203379 203380 203381 203382 203383 203384 203385 203386 203387 203388 203389 203390 203391 203392 203393 203394 203395 203396 203397 203398 203399 203400> # SplitBus
mul in 2 <203169 203135> out 1 <203401>  # cond trueterm
const-mul-neg-1 in 1 <203169> out 1 <203402> # cond minuscond
add in 2 <100 203402> out 1 <203403>     # cond negcond
mul in 2 <203403 202839> out 1 <203404>  # cond falseterm
add in 2 <203401 203404> out 1 <203405>  # cond result
add in 2 <202831 203405> out 1 <203406>  # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
split in 1 <203406> outplitBus
const-mul-2 in 1 <203438> out 1 <203640> # join source bit 31
add in 2 <203437 203640> out 1 <203641>  # join source bit 30
const-mul-2 in 1 <203641> out 1 <203642> # join
add in 2 <203436 203642> out 1 <203643>  # join source bit 29
const-mul-2 in 1 <203643> out 1 <203644> # join
add in 2 <203435 203644> out 1 <203645>  # join source bit 28
const-mul-2 in 1 <203645> out 1 <203646> # join
add in 2 <203434 203646> out 1 <203647>  # join source bit 27
const-mul-2 in 1 <203647> out 1 <203648> # join
add in 2 <203433 203648> out 1 <203649>  # join source bit 26
const-mul-2 in 1 <203649> out 1 <203650> # join
add in 2 <203432 203650> out 1 <203651>  # join source bit 25
const-mul-2 in 1 <203651> out 1 <203652> # join
add in 2 <203431 203652> out 1 <203653>  # join source bit 24
const-mul-2 in 1 <203653> out 1 <203654> # join
add in 2 <203430 203654> out 1 <203655>  # join source bit 23
const-mul-2 in 1 <203655> out 1 <203656> # join
add in 2 <203429 203656> out 1 <203657>  # join source bit 22
const-mul-2 in 1 <203657> out 1 <203658> # join
add in 2 <203428 203658> out 1 <203659>  # join source bit 21
const-mul-2 in 1 <203659> out 1 <203660> # join
add in 2 <203427 203660> out 1 <203661>  # join source bit 20
const-mul-2 in 1 <203661> out 1 <203662> # join
add in 2 <203426 203662> out 1 <203663>  # join source bit 19
const-mul-2 in 1 <203663> out 1 <203664> # join
add in 2 <203425 203664> out 1 <203665>  # join source bit 18
const-mul-2 in 1 <203665> out 1 <203666> # join
add in 2 <203424 203666> out 1 <203667>  # join source bit 17
const-mul-2 in 1 <203667> out 1 <203668> # join
add in 2 <203423 203668> out 1 <203669>  # join source bit 16
const-mul-2 in 1 <203669> out 1 <203670> # join
add in 2 <203422 203670> out 1 <203671>  # join source bit 15
const-mul-2 in 1 <203671> out 1 <203672> # join
add in 2 <203421 203672> out 1 <203673>  # join source bit 14
const-mul-2 in 1 <203673> out 1 <203674> # join
add in 2 <203420 203674> out 1 <203675>  # join source bit 13
const-mul-2 in 1 <203675> out 1 <203676> # join
add in 2 <203419 203676> out 1 <203677>  # join source bit 12
const-mul-2 in 1 <203677> out 1 <203678> # join
add in 2 <203418 203678> out 1 <203679>  # join source bit 11
const-mul-2 in 1 <203679> out 1 <203680> # join
add in 2 <203417 203680> out 1 <203681>  # join source bit 10
const-mul-2 in 1 <203681> out 1 <203682> # join
add in 2 <203416 203682> out 1 <203683>  # join source bit 9
const-mul-2 in 1 <203683> out 1 <203684> # join
add in 2 <203415 203684> out 1 <203685>  # join source bit 8
const-mul-2 in 1 <203685> out 1 <203686> # join
add in 2 <203414 203686> out 1 <203687>  # join source bit 7
const-mul-2 in 1 <203687> out 1 <203688> # join
add in 2 <203413 203688> out 1 <203689>  # join source bit 6
const-mul-2 in 1 <203689> out 1 <203690> # join
add in 2 <203412 203690> out 1 <203691>  # join source bit 5
const-mul-2 in 1 <203691> out 1 <203692> # join
add in 2 <203411 203692> out 1 <203693>  # join source bit 4
const-mul-2 in 1 <203693> out 1 <203694> # join
add in 2 <203410 203694> out 1 <203695>  # join source bit 3
const-mul-2 in 1 <203695> out 1 <203696> # join
add in 2 <203409 203696> out 1 <203697>  # join source bit 2
const-mul-2 in 1 <203697> out 1 <203698> # join
add in 2 <203408 203698> out 1 <203699>  # join source bit 1
const-mul-2 in 1 <203699> out 1 <203700> # join
add in 2 <203407 203700> out 1 <203701>  # join source bit 0
add in 2 <203701 203701> out 1 <203702>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <202831> out 1 <203703> # multiply-by-constant 4294967295
add in 2 <203405 203703> out 1 <203704>  # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <203704> outplitBus
mul in 2 <203736 203702> out 1 <203970>  # cond trueterm
const-mul-neg-1 in 1 <203736> out 1 <203971> # cond minuscond
add in 2 <100 203971> out 1 <203972>     # cond negcond
mul in 2 <203972 202831> out 1 <203973>  # cond falseterm
add in 2 <203970 203973> out 1 <203974>  # cond result
mul in 2 <202659 202623> out 1 <203975>  # cond trueterm
const-mul-neg-1 in 1 <202659> out 1 <203976> # cond minuscond
add in 2 <100 203976> out 1 <203977>     # cond negcond
mul in 2 <203977 202620> out 1 <203978>  # cond falseterm
add in 2 <203975 203978> out 1 <203979>  # cond result
mul in 2 <202515 202479> out 1 <203980>  # cond trueterm
const-mul-neg-1 in 1 <202515> out 1 <203981> # cond minuscond
add in 2 <100 203981> out 1 <203982>     # cond negcond
mul in 2 <203982 202476> out 1 <203983>  # cond falseterm
add in 2 <203980 203983> out 1 <203984>  # cond result
const-mul-ffffffff in 1 <203984> out 1 <203985> # multiply-by-constant 4294967295
add in 2 <203984 203979> out 1 <203986>  # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
add in 2 <203986 203985> out 1 <203987>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <203987> out 1 <203988> # multiply-by-constant 4294967295
add in 2 <203986 203988> out 1 <203989>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <203984> out 1 <203990> # multiply-by-constant 4294967295
add in 2 <203979 203990> out 1 <203991>  # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <203991> out 200 <203992 203993 203994 203995 203996 203997 203998 203999 204000 204001 204002 204003 204004 204005 204006 204007 204008 204009 204010 204011 204012 204013 204014 204015 204016 204017 204018 204019 204020 204021 204022 204023 204024 204025 204026 204027 204028 204029 204030 204031 204032 204033 204034 204035 204036 204037 204038 204039 204040 204041 204042 204043 204044 204045 204046 204047 204048 204049 204050 204051 204052 204053 204054 204055 204056 204057 204058 204059 204060 204061 204062 204063 204064 204065 204066 204067 204068 204069 204070 204071 204072 204073 204074 204075 204076 204077 204078 204079 204080 204081 204082 204083 204084 204085 204086 204087 204088 204089 204090 204091 204092 204093 204094 204095 204096 204097 204098 204099 204100 204101 204102 204103 204104 204105 204106 204107 204108 204109 204110 204111 204112 204113 204114 204115 204116 204117 204118 204119 204120 204121 204122 204123 204124 204125 204126 204127 204128 204129 204130 204131 204132 204133 204134 204135 204136 204137 204138 204139 204140 204141 204142 204143 204144 204145 204146 204147 204148 204149 204150 204151 204152 204153 204154 204155 204156 204157 204158 204159 204160 204161 204162 204163 204164 204165 204166 204167 204168 204169 204170 204171 204172 204173 204174 204175 204176 204177 204178 204179 204180 204181 204182 204183 204184 204185 204186 204187 204188 204189 204190 204191> # SplitBus
mul in 2 <204023 203989> out 1 <204192>  # cond trueterm
const-mul-neg-1 in 1 <204023> out 1 <204193> # cond minuscond
add in 2 <100 204193> out 1 <204194>     # cond negcond
mul in 2 <204194 203979> out 1 <204195>  # cond falseterm
add in 2 <204192 204195> out 1 <204196>  # cond result
const-mul-ffffffff in 1 <204196> out 1 <204197> # multiply-by-constant 4294967295
add in 2 <204196 203974> out 1 <204198>  # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
split in 1 <204198> outplitBus
const-mul-2 in 1 <204230> out 1 <204434> # join source bit 31
add in 2 <204229 204434> out 1 <204435>  # join source bit 30
const-mul-2 in 1 <204435> out 1 <204436> # join
add in 2 <204228 204436> out 1 <204437>  # join source bit 29
const-mul-2 in 1 <204437> out 1 <204438> # join
add in 2 <204227 204438> out 1 <204439>  # join source bit 28
const-mul-2 in 1 <204439> out 1 <204440> # join
add in 2 <204226 204440> out 1 <204441>  # join source bit 27
const-mul-2 in 1 <204441> out 1 <204442> # join
add in 2 <204225 204442> out 1 <204443>  # join source bit 26
const-mul-2 in 1 <204443> out 1 <204444> # join
add in 2 <204224 204444> out 1 <204445>  # join source bit 25
const-mul-2 in 1 <204445> out 1 <204446> # join
add in 2 <204223 204446> out 1 <204447>  # join source bit 24
const-mul-2 in 1 <204447> out 1 <204448> # join
add in 2 <204222 204448> out 1 <204449>  # join source bit 23
const-mul-2 in 1 <204449> out 1 <204450> # join
add in 2 <204221 204450> out 1 <204451>  # join source bit 22
const-mul-2 in 1 <204451> out 1 <204452> # join
add in 2 <204220 204452> out 1 <204453>  # join source bit 21
const-mul-2 in 1 <204453> out 1 <204454> # join
add in 2 <204219 204454> out 1 <204455>  # join source bit 20
const-mul-2 in 1 <204455> out 1 <204456> # join
add in 2 <204218 204456> out 1 <204457>  # join source bit 19
const-mul-2 in 1 <204457> out 1 <204458> # join
add in 2 <204217 204458> out 1 <204459>  # join source bit 18
const-mul-2 in 1 <204459> out 1 <204460> # join
add in 2 <204216 204460> out 1 <204461>  # join source bit 17
const-mul-2 in 1 <204461> out 1 <204462> # join
add in 2 <204215 204462> out 1 <204463>  # join source bit 16
const-mul-2 in 1 <204463> out 1 <204464> # join
add in 2 <204214 204464> out 1 <204465>  # join source bit 15
const-mul-2 in 1 <204465> out 1 <204466> # join
add in 2 <204213 204466> out 1 <204467>  # join source bit 14
const-mul-2 in 1 <204467> out 1 <204468> # join
add in 2 <204212 204468> out 1 <204469>  # join source bit 13
const-mul-2 in 1 <204469> out 1 <204470> # join
add in 2 <204211 204470> out 1 <204471>  # join source bit 12
const-mul-2 in 1 <204471> out 1 <204472> # join
add in 2 <204210 204472> out 1 <204473>  # join source bit 11
const-mul-2 in 1 <204473> out 1 <204474> # join
add in 2 <204209 204474> out 1 <204475>  # join source bit 10
const-mul-2 in 1 <204475> out 1 <204476> # join
add in 2 <204208 204476> out 1 <204477>  # join source bit 9
const-mul-2 in 1 <204477> out 1 <204478> # join
add in 2 <204207 204478> out 1 <204479>  # join source bit 8
const-mul-2 in 1 <204479> out 1 <204480> # join
add in 2 <204206 204480> out 1 <204481>  # join source bit 7
const-mul-2 in 1 <204481> out 1 <204482> # join
add in 2 <204205 204482> out 1 <204483>  # join source bit 6
const-mul-2 in 1 <204483> out 1 <204484> # join
add in 2 <204204 204484> out 1 <204485>  # join source bit 5
const-mul-2 in 1 <204485> out 1 <204486> # join
add in 2 <204203 204486> out 1 <204487>  # join source bit 4
const-mul-2 in 1 <204487> out 1 <204488> # join
add in 2 <204202 204488> out 1 <204489>  # join source bit 3
const-mul-2 in 1 <204489> out 1 <204490> # join
add in 2 <204201 204490> out 1 <204491>  # join source bit 2
const-mul-2 in 1 <204491> out 1 <204492> # join
add in 2 <204200 204492> out 1 <204493>  # join source bit 1
const-mul-2 in 1 <204493> out 1 <204494> # join
add in 2 <204199 204494> out 1 <204495>  # join source bit 0
add in 2 <204495 204495> out 1 <204496>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <204496> out 1 <204497> # multiply-by-constant 4294967295
add in 2 <204198 204497> out 1 <204498>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <204196> out 1 <204499> # multiply-by-constant 4294967295
add in 2 <203974 204499> out 1 <204500>  # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <204500> outplitBus
mul in 2 <204532 204498> out 1 <204768>  # cond trueterm
const-mul-neg-1 in 1 <204532> out 1 <204769> # cond minuscond
add in 2 <100 204769> out 1 <204770>     # cond negcond
mul in 2 <204770 203974> out 1 <204771>  # cond falseterm
add in 2 <204768 204771> out 1 <204772>  # cond result
add in 2 <204772 104> out 1 <204773>     # ArithBusReq.AddReq(DFG.Conditional,DFG.Constant)
const-mul-ffffffff in 1 <64> out 1 <204774> # multiply-by-constant 4294967295
add in 2 <204773 204774> out 1 <204775>  # 'CmpLT DFG.Add - DFG.Input'
split in 1 <204775> out 238 <204776 204777 204778 204779 204780 204781 204782 204783 204784 204785 204786 204787 204788 204789 204790 204791 204792 204793 204794 204795 204796 204797 204798 204799 204800 204801 204802 204803 204804 204805 204806 204807 204808 204809 204810 204811 204812 204813 204814 204815 204816 204817 204818 204819 204820 204821 204822 204823 204824 204825 204826 204827 204828 204829 204830 204831 204832 204833 204834 204835 204836 204837 204838 204839 204840 204841 204842 204843 204844 204845 204846 204847 204848 204849 204850 204851 204852 204853 204854 204855 204856 204857 204858 204859 204860 204861 204862 204863 204864 204865 204866 204867 204868 204869 204870 204871 204872 204873 204874 204875 204876 204877 204878 204879 204880 204881 204882 204883 204884 204885 204886 204887 204888 204889 204890 204891 204892 204893 204894 204895 204896 204897 204898 204899 204900 204901 204902 204903 204904 204905 204906 204907 204908 204909 204910 204911 204912 204913 204914 204915 204916 204917 204918 204919 204920 204921 204922 204923 204924 204925 204926 204927 204928 204929 204930 204931 204932 204933 204934 204935 204936 204937 204938 204939 204940 204941 204942 204943 204944 204945 204946 204947 204948 204949 204950 204951 204952 204953 204954 204955 204956 204957 204958 204959 204960 204961 204962 204963 204964 204965 204966 204967 204968 204969 204970 204971 204972 204973 204974 204975 204976 204977 204978 204979 204980 204981 204982 204983 204984 204985 204986 204987 204988 204989 204990 204991 204992 204993 204994 204995 204996 204997 204998 204999 205000 205001 205002 205003 205004 205005 205006 205007 205008 205009 205010 205011 205012 205013> # SplitBus
mul in 2 <204807 103> out 1 <205014>     # cond trueterm
const-mul-neg-1 in 1 <204807> out 1 <205015> # cond minuscond
add in 2 <100 205015> out 1 <205016>     # cond negcond
mul in 2 <205016 102> out 1 <205017>     # cond falseterm
add in 2 <205014 205017> out 1 <205018>  # cond result
add in 2 <204772 3084> out 1 <205019>    # ArithBusReq.AddReq(DFG.Conditional,DFG.Negate)
const-mul-ffffffff in 1 <205019> out 1 <205020> # multiply-by-constant 4294967295
add in 2 <64 205020> out 1 <205021>      # 'CmpLT DFG.Input - DFG.Subtract'
split in 1 <205021> outplitBus
mul in 2 <205053 103> out 1 <205292>     # cond trueterm
const-mul-neg-1 in 1 <205053> out 1 <205293> # cond minuscond
add in 2 <100 205293> out 1 <205294>     # cond negcond
mul in 2 <205294 205018> out 1 <205295>  # cond falseterm
add in 2 <205292 205295> out 1 <205296>  # cond result
const-mul-ffffffff in 1 <63> out 1 <205297> # multiply-by-constant 4294967295
add in 2 <63 64> out 1 <205298>          # ArithBusReq.AddReq(DFG.Input,DFG.Input)
add in 2 <205298 205297> out 1 <205299>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <205299> out 1 <205300> # multiply-by-constant 4294967295
add in 2 <205298 205300> out 1 <205301>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <63> out 1 <205302> # multiply-by-constant 4294967295
add in 2 <64 205302> out 1 <205303>      # 'CmpLT DFG.Input - DFG.Input'
split in 1 <205303> out 65 <205304 205305 205306 205307 205308 205309 205310 205311 205312 205313 205314 205315 205316 205317 205318 205319 205320 205321 205322 205323 205324 205325 205326 205327 205328 205329 205330 205331 205332 205333 205334 205335 205336 205337 205338 205339 205340 205341 205342 205343 205344 205345 205346 205347 205348 205349 205350 205351 205352 205353 205354 205355 205356 205357 205358 205359 205360 205361 205362 205363 205364 205365 205366 205367 205368> # SplitBus
mul in 2 <205335 205301> out 1 <205369>  # cond trueterm
const-mul-neg-1 in 1 <205335> out 1 <205370> # cond minuscond
add in 2 <100 205370> out 1 <205371>     # cond negcond
mul in 2 <205371 64> out 1 <205372>      # cond falseterm
add in 2 <205369 205372> out 1 <205373>  # cond result
const-mul-ffffffff in 1 <205373> out 1 <205374> # multiply-by-constant 4294967295
add in 2 <205373 65> out 1 <205375>      # ArithBusReq.AddReq(DFG.Conditional,DFG.Input)
add in 2 <205375 205374> out 1 <205376>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <205376> out 1 <205377> # multiply-by-constant 4294967295
add in 2 <205375 205377> out 1 <205378>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <205373> out 1 <205379> # multiply-by-constant 4294967295
add in 2 <65 205379> out 1 <205380>      # 'CmpLT DFG.Input - DFG.Conditional'
split in 1 <205380> out 131 <205381 205382 205383 205384 205385 205386 205387 205388 205389 205390 205391 205392 205393 205394 205395 205396 205397 205398 205399 205400 205401 205402 205403 205404 205405 205406 205407 205408 205409 205410 205411 205412 205413 205414 205415 205416 205417 205418 205419 205420 205421 205422 205423 205424 205425 205426 205427 205428 205429 205430 205431 205432 205433 205434 205435 205436 205437 205438 205439 205440 205441 205442 205443 205444 205445 205446 205447 205448 205449 205450 205451 205452 205453 205454 205455 205456 205457 205458 205459 205460 205461 205462 205463 205464 205465 205466 205467 205468 205469 205470 205471 205472 205473 205474 205475 205476 205477 205478 205479 205480 205481 205482 205483 205484 205485 205486 205487 205488 205489 205490 205491 205492 205493 205494 205495 205496 205497 205498 205499 205500 205501 205502 205503 205504 205505 205506 205507 205508 205509 205510 205511> # SplitBus
mul in 2 <205412 205378> out 1 <205512>  # cond trueterm
const-mul-neg-1 in 1 <205412> out 1 <205513> # cond minuscond
add in 2 <100 205513> out 1 <205514>     # cond negcond
mul in 2 <205514 65> out 1 <205515>      # cond falseterm
add in 2 <205512 205515> out 1 <205516>  # cond result
const-mul-ffffffff in 1 <205516> out 1 <205517> # multiply-by-constant 4294967295
add in 2 <205516 66> out 1 <205518>      # ArithBusReq.AddReq(DFG.Conditional,DFG.Input)
add in 2 <205518 205517> out 1 <205519>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <205516> out 1 <205520> # multiply-by-constant 4294967295
add in 2 <66 205520> out 1 <205521>      # 'CmpLT DFG.Input - DFG.Conditional'
split in 1 <205521> out 197 <205522 205523 205524 205525 205526 205527 205528 205529 205530 205531 205532 205533 205534 205535 205536 205537 205538 205539 205540 205541 205542 205543 205544 205545 205546 205547 205548 205549 205550 205551 205552 205553 205554 205555 205556 205557 205558 205559 205560 205561 205562 205563 205564 205565 205566 205567 205568 205569 205570 205571 205572 205573 205574 205575 205576 205577 205578 205579 205580 205581 205582 205583 205584 205585 205586 205587 205588 205589 205590 205591 205592 205593 205594 205595 205596 205597 205598 205599 205600 205601 205602 205603 205604 205605 205606 205607 205608 205609 205610 205611 205612 205613 205614 205615 205616 205617 205618 205619 205620 205621 205622 205623 205624 205625 205626 205627 205628 205629 205630 205631 205632 205633 205634 205635 205636 205637 205638 205639 205640 205641 205642 205643 205644 205645 205646 205647 205648 205649 205650 205651 205652 205653 205654 205655 205656 205657 205658 205659 205660 205661 205662 205663 205664 205665 205666 205667 205668 205669 205670 205671 205672 205673 205674 205675 205676 205677 205678 205679 205680 205681 205682 205683 205684 205685 205686 205687 205688 205689 205690 205691 205692 205693 205694 205695 205696 205697 205698 205699 205700 205701 205702 205703 205704 205705 205706 205707 205708 205709 205710 205711 205712 205713 205714 205715 205716 205717 205718> # SplitBus
mul in 2 <205553 205519> out 1 <205719>  # cond trueterm
const-mul-neg-1 in 1 <205553> out 1 <205720> # cond minuscond
add in 2 <100 205720> out 1 <205721>     # cond negcond
mul in 2 <205721 205516> out 1 <205722>  # cond falseterm
add in 2 <205719 205722> out 1 <205723>  # cond result
mul in 2 <205412 205376> out 1 <205724>  # cond trueterm
const-mul-neg-1 in 1 <205412> out 1 <205725> # cond minuscond
add in 2 <100 205725> out 1 <205726>     # cond negcond
mul in 2 <205726 205373> out 1 <205727>  # cond falseterm
add in 2 <205724 205727> out 1 <205728>  # cond result
mul in 2 <205335 205299> out 1 <205729>  # cond trueterm
const-mul-neg-1 in 1 <205335> out 1 <205730> # cond minuscond
add in 2 <100 205730> out 1 <205731>     # cond negcond
mul in 2 <205731 63> out 1 <205732>      # cond falseterm
add in 2 <205729 205732> out 1 <205733>  # cond result
const-mul-ffffffff in 1 <205733> out 1 <205734> # multiply-by-constant 4294967295
add in 2 <205733 205728> out 1 <205735>  # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
add in 2 <205735 205734> out 1 <205736>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <205736> out 1 <205737> # multiply-by-constant 4294967295
add in 2 <205735 205737> out 1 <205738>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <205733> out 1 <205739> # multiply-by-constant 4294967295
add in 2 <205728 205739> out 1 <205740>  # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <205740> out 132 <205741 205742 205743 205744 205745 205746 205747 205748 205749 205750 205751 205752 205753 205754 205755 205756 205757 205758 205759 205760 205761 205762 205763 205764 205765 205766 205767 205768 205769 205770 205771 205772 205773 205774 205775 205776 205777 205778 205779 205780 205781 205782 205783 205784 205785 205786 205787 205788 205789 205790 205791 205792 205793 205794 205795 205796 205797 205798 205799 205800 205801 205802 205803 205804 205805 205806 205807 205808 205809 205810 205811 205812 205813 205814 205815 205816 205817 205818 205819 205820 205821 205822 205823 205824 205825 205826 205827 205828 205829 205830 205831 205832 205833 205834 205835 205836 205837 205838 205839 205840 205841 205842 205843 205844 205845 205846 205847 205848 205849 205850 205851 205852 205853 205854 205855 205856 205857 205858 205859 205860 205861 205862 205863 205864 205865 205866 205867 205868 205869 205870 205871 205872> # SplitBus
mul in 2 <205772 205738> out 1 <205873>  # cond trueterm
const-mul-neg-1 in 1 <205772> out 1 <205874> # cond minuscond
add in 2 <100 205874> out 1 <205875>     # cond negcond
mul in 2 <205875 205728> out 1 <205876>  # cond falseterm
add in 2 <205873 205876> out 1 <205877>  # cond result
const-mul-ffffffff in 1 <205877> out 1 <205878> # multiply-by-constant 4294967295
add in 2 <205877 205723> out 1 <205879>  # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
add in 2 <205879 205878> out 1 <205880>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <205880> out 1 <205881> # multiply-by-constant 4294967295
add in 2 <205879 205881> out 1 <205882>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <205877> out 1 <205883> # multiply-by-constant 4294967295
add in 2 <205723 205883> out 1 <205884>  # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <205884> out 199 <205885 205886 205887 205888 205889 205890 205891 205892 205893 205894 205895 205896 205897 205898 205899 205900 205901 205902 205903 205904 205905 205906 205907 205908 205909 205910 205911 205912 205913 205914 205915 205916 205917 205918 205919 205920 205921 205922 205923 205924 205925 205926 205927 205928 205929 205930 205931 205932 205933 205934 205935 205936 205937 205938 205939 205940 205941 205942 205943 205944 205945 205946 205947 205948 205949 205950 205951 205952 205953 205954 205955 205956 205957 205958 205959 205960 205961 205962 205963 205964 205965 205966 205967 205968 205969 205970 205971 205972 205973 205974 205975 205976 205977 205978 205979 205980 205981 205982 205983 205984 205985 205986 205987 205988 205989 205990 205991 205992 205993 205994 205995 205996 205997 205998 205999 206000 206001 206002 206003 206004 206005 206006 206007 206008 206009 206010 206011 206012 206013 206014 206015 206016 206017 206018 206019 206020 206021 206022 206023 206024 206025 206026 206027 206028 206029 206030 206031 206032 206033 206034 206035 206036 206037 206038 206039 206040 206041 206042 206043 206044 206045 206046 206047 206048 206049 206050 206051 206052 206053 206054 206055 206056 206057 206058 206059 206060 206061 206062 206063 206064 206065 206066 206067 206068 206069 206070 206071 206072 206073 206074 206075 206076 206077 206078 206079 206080 206081 206082 206083> # SplitBus
mul in 2 <205916 205882> out 1 <206084>  # cond trueterm
const-mul-neg-1 in 1 <205916> out 1 <206085> # cond minuscond
add in 2 <100 206085> out 1 <206086>     # cond negcond
mul in 2 <206086 205723> out 1 <206087>  # cond falseterm
add in 2 <206084 206087> out 1 <206088>  # cond result
const-mul-ffffffff in 1 <206088> out 1 <206089> # multiply-by-constant 4294967295
const-mul-ffffffff in 1 <205519> out 1 <206090> # multiply-by-constant 4294967295
add in 2 <205518 206090> out 1 <206091>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
mul in 2 <205553 206091> out 1 <206092>  # cond trueterm
const-mul-neg-1 in 1 <205553> out 1 <206093> # cond minuscond
add in 2 <100 206093> out 1 <206094>     # cond negcond
mul in 2 <206094 66> out 1 <206095>      # cond falseterm
add in 2 <206092 206095> out 1 <206096>  # cond result
const-mul-ffffffff in 1 <206096> out 1 <206097> # multiply-by-constant 4294967295
add in 2 <206096 67> out 1 <206098>      # ArithBusReq.AddReq(DFG.Conditional,DFG.Input)
split in 1 <206098> outplitBus
const-mul-2 in 1 <206130> out 1 <206330> # join source bit 31
add in 2 <206129 206330> out 1 <206331>  # join source bit 30
const-mul-2 in 1 <206331> out 1 <206332> # join
add in 2 <206128 206332> out 1 <206333>  # join source bit 29
const-mul-2 in 1 <206333> out 1 <206334> # join
add in 2 <206127 206334> out 1 <206335>  # join source bit 28
const-mul-2 in 1 <206335> out 1 <206336> # join
add in 2 <206126 206336> out 1 <206337>  # join source bit 27
const-mul-2 in 1 <206337> out 1 <206338> # join
add in 2 <206125 206338> out 1 <206339>  # join source bit 26
const-mul-2 in 1 <206339> out 1 <206340> # join
add in 2 <206124 206340> out 1 <206341>  # join source bit 25
const-mul-2 in 1 <206341> out 1 <206342> # join
add in 2 <206123 206342> out 1 <206343>  # join source bit 24
const-mul-2 in 1 <206343> out 1 <206344> # join
add in 2 <206122 206344> out 1 <206345>  # join source bit 23
const-mul-2 in 1 <206345> out 1 <206346> # join
add in 2 <206121 206346> out 1 <206347>  # join source bit 22
const-mul-2 in 1 <206347> out 1 <206348> # join
add in 2 <206120 206348> out 1 <206349>  # join source bit 21
const-mul-2 in 1 <206349> out 1 <206350> # join
add in 2 <206119 206350> out 1 <206351>  # join source bit 20
const-mul-2 in 1 <206351> out 1 <206352> # join
add in 2 <206118 206352> out 1 <206353>  # join source bit 19
const-mul-2 in 1 <206353> out 1 <206354> # join
add in 2 <206117 206354> out 1 <206355>  # join source bit 18
const-mul-2 in 1 <206355> out 1 <206356> # join
add in 2 <206116 206356> out 1 <206357>  # join source bit 17
const-mul-2 in 1 <206357> out 1 <206358> # join
add in 2 <206115 206358> out 1 <206359>  # join source bit 16
const-mul-2 in 1 <206359> out 1 <206360> # join
add in 2 <206114 206360> out 1 <206361>  # join source bit 15
const-mul-2 in 1 <206361> out 1 <206362> # join
add in 2 <206113 206362> out 1 <206363>  # join source bit 14
const-mul-2 in 1 <206363> out 1 <206364> # join
add in 2 <206112 206364> out 1 <206365>  # join source bit 13
const-mul-2 in 1 <206365> out 1 <206366> # join
add in 2 <206111 206366> out 1 <206367>  # join source bit 12
const-mul-2 in 1 <206367> out 1 <206368> # join
add in 2 <206110 206368> out 1 <206369>  # join source bit 11
const-mul-2 in 1 <206369> out 1 <206370> # join
add in 2 <206109 206370> out 1 <206371>  # join source bit 10
const-mul-2 in 1 <206371> out 1 <206372> # join
add in 2 <206108 206372> out 1 <206373>  # join source bit 9
const-mul-2 in 1 <206373> out 1 <206374> # join
add in 2 <206107 206374> out 1 <206375>  # join source bit 8
const-mul-2 in 1 <206375> out 1 <206376> # join
add in 2 <206106 206376> out 1 <206377>  # join source bit 7
const-mul-2 in 1 <206377> out 1 <206378> # join
add in 2 <206105 206378> out 1 <206379>  # join source bit 6
const-mul-2 in 1 <206379> out 1 <206380> # join
add in 2 <206104 206380> out 1 <206381>  # join source bit 5
const-mul-2 in 1 <206381> out 1 <206382> # join
add in 2 <206103 206382> out 1 <206383>  # join source bit 4
const-mul-2 in 1 <206383> out 1 <206384> # join
add in 2 <206102 206384> out 1 <206385>  # join source bit 3
const-mul-2 in 1 <206385> out 1 <206386> # join
add in 2 <206101 206386> out 1 <206387>  # join source bit 2
const-mul-2 in 1 <206387> out 1 <206388> # join
add in 2 <206100 206388> out 1 <206389>  # join source bit 1
const-mul-2 in 1 <206389> out 1 <206390> # join
add in 2 <206099 206390> out 1 <206391>  # join source bit 0
add in 2 <206391 206391> out 1 <206392>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <206096> out 1 <206393> # multiply-by-constant 4294967295
add in 2 <67 206393> out 1 <206394>      # 'CmpLT DFG.Input - DFG.Conditional'
split in 1 <206394> outplitBus
mul in 2 <206426 206392> out 1 <206658>  # cond trueterm
const-mul-neg-1 in 1 <206426> out 1 <206659> # cond minuscond
add in 2 <100 206659> out 1 <206660>     # cond negcond
mul in 2 <206660 206096> out 1 <206661>  # cond falseterm
add in 2 <206658 206661> out 1 <206662>  # cond result
add in 2 <206088 206662> out 1 <206663>  # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
split in 1 <206663> out 233 <206664 206665 206666 206667 206668 206669 206670 206671 206672 206673 206674 206675 206676 206677 206678 206679 206680 206681 206682 206683 206684 206685 206686 206687 206688 206689 206690 206691 206692 206693 206694 206695 206696 206697 206698 206699 206700 206701 206702 206703 206704 206705 206706 206707 206708 206709 206710 206711 206712 206713 206714 206715 206716 206717 206718 206719 206720 206721 206722 206723 206724 206725 206726 206727 206728 206729 206730 206731 206732 206733 206734 206735 206736 206737 206738 206739 206740 206741 206742 206743 206744 206745 206746 206747 206748 206749 206750 206751 206752 206753 206754 206755 206756 206757 206758 206759 206760 206761 206762 206763 206764 206765 206766 206767 206768 206769 206770 206771 206772 206773 206774 206775 206776 206777 206778 206779 206780 206781 206782 206783 206784 206785 206786 206787 206788 206789 206790 206791 206792 206793 206794 206795 206796 206797 206798 206799 206800 206801 206802 206803 206804 206805 206806 206807 206808 206809 206810 206811 206812 206813 206814 206815 206816 206817 206818 206819 206820 206821 206822 206823 206824 206825 206826 206827 206828 206829 206830 206831 206832 206833 206834 206835 206836 206837 206838 206839 206840 206841 206842 206843 206844 206845 206846 206847 206848 206849 206850 206851 206852 206853 206854 206855 206856 206857 206858 206859 206860 206861 206862 206863 206864 206865 206866 206867 206868 206869 206870 206871 206872 206873 206874 206875 206876 206877 206878 206879 206880 206881 206882 206883 206884 206885 206886 206887 206888 206889 206890 206891 206892 206893 206894 206895 206896> # SplitBus
const-mul-2 in 1 <206695> out 1 <206897> # join source bit 31
add in 2 <206694 206897> out 1 <206898>  # join source bit 30
const-mul-2 in 1 <206898> out 1 <206899> # join
add in 2 <206693 206899> out 1 <206900>  # join source bit 29
const-mul-2 in 1 <206900> out 1 <206901> # join
add in 2 <206692 206901> out 1 <206902>  # join source bit 28
const-mul-2 in 1 <206902> out 1 <206903> # join
add in 2 <206691 206903> out 1 <206904>  # join source bit 27
const-mul-2 in 1 <206904> out 1 <206905> # join
add in 2 <206690 206905> out 1 <206906>  # join source bit 26
const-mul-2 in 1 <206906> out 1 <206907> # join
add in 2 <206689 206907> out 1 <206908>  # join source bit 25
const-mul-2 in 1 <206908> out 1 <206909> # join
add in 2 <206688 206909> out 1 <206910>  # join source bit 24
const-mul-2 in 1 <206910> out 1 <206911> # join
add in 2 <206687 206911> out 1 <206912>  # join source bit 23
const-mul-2 in 1 <206912> out 1 <206913> # join
add in 2 <206686 206913> out 1 <206914>  # join source bit 22
const-mul-2 in 1 <206914> out 1 <206915> # join
add in 2 <206685 206915> out 1 <206916>  # join source bit 21
const-mul-2 in 1 <206916> out 1 <206917> # join
add in 2 <206684 206917> out 1 <206918>  # join source bit 20
const-mul-2 in 1 <206918> out 1 <206919> # join
add in 2 <206683 206919> out 1 <206920>  # join source bit 19
const-mul-2 in 1 <206920> out 1 <206921> # join
add in 2 <206682 206921> out 1 <206922>  # join source bit 18
const-mul-2 in 1 <206922> out 1 <206923> # join
add in 2 <206681 206923> out 1 <206924>  # join source bit 17
const-mul-2 in 1 <206924> out 1 <206925> # join
add in 2 <206680 206925> out 1 <206926>  # join source bit 16
const-mul-2 in 1 <206926> out 1 <206927> # join
add in 2 <206679 206927> out 1 <206928>  # join source bit 15
const-mul-2 in 1 <206928> out 1 <206929> # join
add in 2 <206678 206929> out 1 <206930>  # join source bit 14
const-mul-2 in 1 <206930> out 1 <206931> # join
add in 2 <206677 206931> out 1 <206932>  # join source bit 13
const-mul-2 in 1 <206932> out 1 <206933> # join
add in 2 <206676 206933> out 1 <206934>  # join source bit 12
const-mul-2 in 1 <206934> out 1 <206935> # join
add in 2 <206675 206935> out 1 <206936>  # join source bit 11
const-mul-2 in 1 <206936> out 1 <206937> # join
add in 2 <206674 206937> out 1 <206938>  # join source bit 10
const-mul-2 in 1 <206938> out 1 <206939> # join
add in 2 <206673 206939> out 1 <206940>  # join source bit 9
const-mul-2 in 1 <206940> out 1 <206941> # join
add in 2 <206672 206941> out 1 <206942>  # join source bit 8
const-mul-2 in 1 <206942> out 1 <206943> # join
add in 2 <206671 206943> out 1 <206944>  # join source bit 7
const-mul-2 in 1 <206944> out 1 <206945> # join
add in 2 <206670 206945> out 1 <206946>  # join source bit 6
const-mul-2 in 1 <206946> out 1 <206947> # join
add in 2 <206669 206947> out 1 <206948>  # join source bit 5
const-mul-2 in 1 <206948> out 1 <206949> # join
add in 2 <206668 206949> out 1 <206950>  # join source bit 4
const-mul-2 in 1 <206950> out 1 <206951> # join
add in 2 <206667 206951> out 1 <206952>  # join source bit 3
const-mul-2 in 1 <206952> out 1 <206953> # join
add in 2 <206666 206953> out 1 <206954>  # join source bit 2
const-mul-2 in 1 <206954> out 1 <206955> # join
add in 2 <206665 206955> out 1 <206956>  # join source bit 1
const-mul-2 in 1 <206956> out 1 <206957> # join
add in 2 <206664 206957> out 1 <206958>  # join source bit 0
add in 2 <206958 206958> out 1 <206959>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <206088> out 1 <206960> # multiply-by-constant 4294967295
add in 2 <206662 206960> out 1 <206961>  # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <206961> out 265 <206962 206963 206964 206965 206966 206967 206968 206969 206970 206971 206972 206973 206974 206975 206976 206977 206978 206979 206980 206981 206982 206983 206984 206985 206986 206987 206988 206989 206990 206991 206992 206993 206994 206995 206996 206997 206998 206999 207000 207001 207002 207003 207004 207005 207006 207007 207008 207009 207010 207011 207012 207013 207014 207015 207016 207017 207018 207019 207020 207021 207022 207023 207024 207025 207026 207027 207028 207029 207030 207031 207032 207033 207034 207035 207036 207037 207038 207039 207040 207041 207042 207043 207044 207045 207046 207047 207048 207049 207050 207051 207052 207053 207054 207055 207056 207057 207058 207059 207060 207061 207062 207063 207064 207065 207066 207067 207068 207069 207070 207071 207072 207073 207074 207075 207076 207077 207078 207079 207080 207081 207082 207083 207084 207085 207086 207087 207088 207089 207090 207091 207092 207093 207094 207095 207096 207097 207098 207099 207100 207101 207102 207103 207104 207105 207106 207107 207108 207109 207110 207111 207112 207113 207114 207115 207116 207117 207118 207119 207120 207121 207122 207123 207124 207125 207126 207127 207128 207129 207130 207131 207132 207133 207134 207135 207136 207137 207138 207139 207140 207141 207142 207143 207144 207145 207146 207147 207148 207149 207150 207151 207152 207153 207154 207155 207156 207157 207158 207159 207160 207161 207162 207163 207164 207165 207166 207167 207168 207169 207170 207171 207172 207173 207174 207175 207176 207177 207178 207179 207180 207181 207182 207183 207184 207185 207186 207187 207188 207189 207190 207191 207192 207193 207194 207195 207196 207197 207198 207199 207200 207201 207202 207203 207204 207205 207206 207207 207208 207209 207210 207211 207212 207213 207214 207215 207216 207217 207218 207219 207220 207221 207222 207223 207224 207225 207226> # SplitBus
mul in 2 <206993 206959> out 1 <207227>  # cond trueterm
const-mul-neg-1 in 1 <206993> out 1 <207228> # cond minuscond
add in 2 <100 207228> out 1 <207229>     # cond negcond
mul in 2 <207229 206088> out 1 <207230>  # cond falseterm
add in 2 <207227 207230> out 1 <207231>  # cond result
mul in 2 <205916 205880> out 1 <207232>  # cond trueterm
const-mul-neg-1 in 1 <205916> out 1 <207233> # cond minuscond
add in 2 <100 207233> out 1 <207234>     # cond negcond
mul in 2 <207234 205877> out 1 <207235>  # cond falseterm
add in 2 <207232 207235> out 1 <207236>  # cond result
mul in 2 <205772 205736> out 1 <207237>  # cond trueterm
const-mul-neg-1 in 1 <205772> out 1 <207238> # cond minuscond
add in 2 <100 207238> out 1 <207239>     # cond negcond
mul in 2 <207239 205733> out 1 <207240>  # cond falseterm
add in 2 <207237 207240> out 1 <207241>  # cond result
const-mul-ffffffff in 1 <207241> out 1 <207242> # multiply-by-constant 4294967295
add in 2 <207241 207236> out 1 <207243>  # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
add in 2 <207243 207242> out 1 <207244>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <207244> out 1 <207245> # multiply-by-constant 4294967295
add in 2 <207243 207245> out 1 <207246>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <207241> out 1 <207247> # multiply-by-constant 4294967295
add in 2 <207236 207247> out 1 <207248>  # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <207248> out 200 <207249 207250 207251 207252 207253 207254 207255 207256 207257 207258 207259 207260 207261 207262 207263 207264 207265 207266 207267 207268 207269 207270 207271 207272 207273 207274 207275 207276 207277 207278 207279 207280 207281 207282 207283 207284 207285 207286 207287 207288 207289 207290 207291 207292 207293 207294 207295 207296 207297 207298 207299 207300 207301 207302 207303 207304 207305 207306 207307 207308 207309 207310 207311 207312 207313 207314 207315 207316 207317 207318 207319 207320 207321 207322 207323 207324 207325 207326 207327 207328 207329 207330 207331 207332 207333 207334 207335 207336 207337 207338 207339 207340 207341 207342 207343 207344 207345 207346 207347 207348 207349 207350 207351 207352 207353 207354 207355 207356 207357 207358 207359 207360 207361 207362 207363 207364 207365 207366 207367 207368 207369 207370 207371 207372 207373 207374 207375 207376 207377 207378 207379 207380 207381 207382 207383 207384 207385 207386 207387 207388 207389 207390 207391 207392 207393 207394 207395 207396 207397 207398 207399 207400 207401 207402 207403 207404 207405 207406 207407 207408 207409 207410 207411 207412 207413 207414 207415 207416 207417 207418 207419 207420 207421 207422 207423 207424 207425 207426 207427 207428 207429 207430 207431 207432 207433 207434 207435 207436 207437 207438 207439 207440 207441 207442 207443 207444 207445 207446 207447 207448> # SplitBus
mul in 2 <207280 207246> out 1 <207449>  # cond trueterm
const-mul-neg-1 in 1 <207280> out 1 <207450> # cond minuscond
add in 2 <100 207450> out 1 <207451>     # cond negcond
mul in 2 <207451 207236> out 1 <207452>  # cond falseterm
add in 2 <207449 207452> out 1 <207453>  # cond result
const-mul-ffffffff in 1 <207453> out 1 <207454> # multiply-by-constant 4294967295
add in 2 <207453 207231> out 1 <207455>  # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
split in 1 <207455> out 235 <207456 207457 207458 207459 207460 207461 207462 207463 207464 207465 207466 207467 207468 207469 207470 207471 207472 207473 207474 207475 207476 207477 207478 207479 207480 207481 207482 207483 207484 207485 207486 207487 207488 207489 207490 207491 207492 207493 207494 207495 207496 207497 207498 207499 207500 207501 207502 207503 207504 207505 207506 207507 207508 207509 207510 207511 207512 207513 207514 207515 207516 207517 207518 207519 207520 207521 207522 207523 207524 207525 207526 207527 207528 207529 207530 207531 207532 207533 207534 207535 207536 207537 207538 207539 207540 207541 207542 207543 207544 207545 207546 207547 207548 207549 207550 207551 207552 207553 207554 207555 207556 207557 207558 207559 207560 207561 207562 207563 207564 207565 207566 207567 207568 207569 207570 207571 207572 207573 207574 207575 207576 207577 207578 207579 207580 207581 207582 207583 207584 207585 207586 207587 207588 207589 207590 207591 207592 207593 207594 207595 207596 207597 207598 207599 207600 207601 207602 207603 207604 207605 207606 207607 207608 207609 207610 207611 207612 207613 207614 207615 207616 207617 207618 207619 207620 207621 207622 207623 207624 207625 207626 207627 207628 207629 207630 207631 207632 207633 207634 207635 207636 207637 207638 207639 207640 207641 207642 207643 207644 207645 207646 207647 207648 207649 207650 207651 207652 207653 207654 207655 207656 207657 207658 207659 207660 207661 207662 207663 207664 207665 207666 207667 207668 207669 207670 207671 207672 207673 207674 207675 207676 207677 207678 207679 207680 207681 207682 207683 207684 207685 207686 207687 207688 207689 207690> # SplitBus
const-mul-2 in 1 <207487> out 1 <207691> # join source bit 31
add in 2 <207486 207691> out 1 <207692>  # join source bit 30
const-mul-2 in 1 <207692> out 1 <207693> # join
add in 2 <207485 207693> out 1 <207694>  # join source bit 29
const-mul-2 in 1 <207694> out 1 <207695> # join
add in 2 <207484 207695> out 1 <207696>  # join source bit 28
const-mul-2 in 1 <207696> out 1 <207697> # join
add in 2 <207483 207697> out 1 <207698>  # join source bit 27
const-mul-2 in 1 <207698> out 1 <207699> # join
add in 2 <207482 207699> out 1 <207700>  # join source bit 26
const-mul-2 in 1 <207700> out 1 <207701> # join
add in 2 <207481 207701> out 1 <207702>  # join source bit 25
const-mul-2 in 1 <207702> out 1 <207703> # join
add in 2 <207480 207703> out 1 <207704>  # join source bit 24
const-mul-2 in 1 <207704> out 1 <207705> # join
add in 2 <207479 207705> out 1 <207706>  # join source bit 23
const-mul-2 in 1 <207706> out 1 <207707> # join
add in 2 <207478 207707> out 1 <207708>  # join source bit 22
const-mul-2 in 1 <207708> out 1 <207709> # join
add in 2 <207477 207709> out 1 <207710>  # join source bit 21
const-mul-2 in 1 <207710> out 1 <207711> # join
add in 2 <207476 207711> out 1 <207712>  # join source bit 20
const-mul-2 in 1 <207712> out 1 <207713> # join
add in 2 <207475 207713> out 1 <207714>  # join source bit 19
const-mul-2 in 1 <207714> out 1 <207715> # join
add in 2 <207474 207715> out 1 <207716>  # join source bit 18
const-mul-2 in 1 <207716> out 1 <207717> # join
add in 2 <207473 207717> out 1 <207718>  # join source bit 17
const-mul-2 in 1 <207718> out 1 <207719> # join
add in 2 <207472 207719> out 1 <207720>  # join source bit 16
const-mul-2 in 1 <207720> out 1 <207721> # join
add in 2 <207471 207721> out 1 <207722>  # join source bit 15
const-mul-2 in 1 <207722> out 1 <207723> # join
add in 2 <207470 207723> out 1 <207724>  # join source bit 14
const-mul-2 in 1 <207724> out 1 <207725> # join
add in 2 <207469 207725> out 1 <207726>  # join source bit 13
const-mul-2 in 1 <207726> out 1 <207727> # join
add in 2 <207468 207727> out 1 <207728>  # join source bit 12
const-mul-2 in 1 <207728> out 1 <207729> # join
add in 2 <207467 207729> out 1 <207730>  # join source bit 11
const-mul-2 in 1 <207730> out 1 <207731> # join
add in 2 <207466 207731> out 1 <207732>  # join source bit 10
const-mul-2 in 1 <207732> out 1 <207733> # join
add in 2 <207465 207733> out 1 <207734>  # join source bit 9
const-mul-2 in 1 <207734> out 1 <207735> # join
add in 2 <207464 207735> out 1 <207736>  # join source bit 8
const-mul-2 in 1 <207736> out 1 <207737> # join
add in 2 <207463 207737> out 1 <207738>  # join source bit 7
const-mul-2 in 1 <207738> out 1 <207739> # join
add in 2 <207462 207739> out 1 <207740>  # join source bit 6
const-mul-2 in 1 <207740> out 1 <207741> # join
add in 2 <207461 207741> out 1 <207742>  # join source bit 5
const-mul-2 in 1 <207742> out 1 <207743> # join
add in 2 <207460 207743> out 1 <207744>  # join source bit 4
const-mul-2 in 1 <207744> out 1 <207745> # join
add in 2 <207459 207745> out 1 <207746>  # join source bit 3
const-mul-2 in 1 <207746> out 1 <207747> # join
add in 2 <207458 207747> out 1 <207748>  # join source bit 2
const-mul-2 in 1 <207748> out 1 <207749> # join
add in 2 <207457 207749> out 1 <207750>  # join source bit 1
const-mul-2 in 1 <207750> out 1 <207751> # join
add in 2 <207456 207751> out 1 <207752>  # join source bit 0
add in 2 <207752 207752> out 1 <207753>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <207753> out 1 <207754> # multiply-by-constant 4294967295
add in 2 <207455 207754> out 1 <207755>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <207453> out 1 <207756> # multiply-by-constant 4294967295
add in 2 <207231 207756> out 1 <207757>  # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <207757> out 267 <207758 207759 207760 207761 207762 207763 207764 207765 207766 207767 207768 207769 207770 207771 207772 207773 207774 207775 207776 207777 207778 207779 207780 207781 207782 207783 207784 207785 207786 207787 207788 207789 207790 207791 207792 207793 207794 207795 207796 207797 207798 207799 207800 207801 207802 207803 207804 207805 207806 207807 207808 207809 207810 207811 207812 207813 207814 207815 207816 207817 207818 207819 207820 207821 207822 207823 207824 207825 207826 207827 207828 207829 207830 207831 207832 207833 207834 207835 207836 207837 207838 207839 207840 207841 207842 207843 207844 207845 207846 207847 207848 207849 207850 207851 207852 207853 207854 207855 207856 207857 207858 207859 207860 207861 207862 207863 207864 207865 207866 207867 207868 207869 207870 207871 207872 207873 207874 207875 207876 207877 207878 207879 207880 207881 207882 207883 207884 207885 207886 207887 207888 207889 207890 207891 207892 207893 207894 207895 207896 207897 207898 207899 207900 207901 207902 207903 207904 207905 207906 207907 207908 207909 207910 207911 207912 207913 207914 207915 207916 207917 207918 207919 207920 207921 207922 207923 207924 207925 207926 207927 207928 207929 207930 207931 207932 207933 207934 207935 207936 207937 207938 207939 207940 207941 207942 207943 207944 207945 207946 207947 207948 207949 207950 207951 207952 207953 207954 207955 207956 207957 207958 207959 207960 207961 207962 207963 207964 207965 207966 207967 207968 207969 207970 207971 207972 207973 207974 207975 207976 207977 207978 207979 207980 207981 207982 207983 207984 207985 207986 207987 207988 207989 207990 207991 207992 207993 207994 207995 207996 207997 207998 207999 208000 208001 208002 208003 208004 208005 208006 208007 208008 208009 208010 208011 208012 208013 208014 208015 208016 208017 208018 208019 208020 208021 208022 208023 208024> # SplitBus
mul in 2 <207789 207755> out 1 <208025>  # cond trueterm
const-mul-neg-1 in 1 <207789> out 1 <208026> # cond minuscond
add in 2 <100 208026> out 1 <208027>     # cond negcond
mul in 2 <208027 207231> out 1 <208028>  # cond falseterm
add in 2 <208025 208028> out 1 <208029>  # cond result
add in 2 <208029 104> out 1 <208030>     # ArithBusReq.AddReq(DFG.Conditional,DFG.Constant)
const-mul-ffffffff in 1 <65> out 1 <208031> # multiply-by-constant 4294967295
add in 2 <208030 208031> out 1 <208032>  # 'CmpLT DFG.Add - DFG.Input'
split in 1 <208032> outplitBus
mul in 2 <208064 103> out 1 <208271>     # cond trueterm
const-mul-neg-1 in 1 <208064> out 1 <208272> # cond minuscond
add in 2 <100 208272> out 1 <208273>     # cond negcond
mul in 2 <208273 102> out 1 <208274>     # cond falseterm
add in 2 <208271 208274> out 1 <208275>  # cond result
add in 2 <208029 3084> out 1 <208276>    # ArithBusReq.AddReq(DFG.Conditional,DFG.Negate)
const-mul-ffffffff in 1 <208276> out 1 <208277> # multiply-by-constant 4294967295
add in 2 <65 208277> out 1 <208278>      # 'CmpLT DFG.Input - DFG.Subtract'
split in 1 <208278> out 270 <208279 208280 208281 208282 208283 208284 208285 208286 208287 208288 208289 208290 208291 208292 208293 208294 208295 208296 208297 208298 208299 208300 208301 208302 208303 208304 208305 208306 208307 208308 208309 208310 208311 208312 208313 208314 208315 208316 208317 208318 208319 208320 208321 208322 208323 208324 208325 208326 208327 208328 208329 208330 208331 208332 208333 208334 208335 208336 208337 208338 208339 208340 208341 208342 208343 208344 208345 208346 208347 208348 208349 208350 208351 208352 208353 208354 208355 208356 208357 208358 208359 208360 208361 208362 208363 208364 208365 208366 208367 208368 208369 208370 208371 208372 208373 208374 208375 208376 208377 208378 208379 208380 208381 208382 208383 208384 208385 208386 208387 208388 208389 208390 208391 208392 208393 208394 208395 208396 208397 208398 208399 208400 208401 208402 208403 208404 208405 208406 208407 208408 208409 208410 208411 208412 208413 208414 208415 208416 208417 208418 208419 208420 208421 208422 208423 208424 208425 208426 208427 208428 208429 208430 208431 208432 208433 208434 208435 208436 208437 208438 208439 208440 208441 208442 208443 208444 208445 208446 208447 208448 208449 208450 208451 208452 208453 208454 208455 208456 208457 208458 208459 208460 208461 208462 208463 208464 208465 208466 208467 208468 208469 208470 208471 208472 208473 208474 208475 208476 208477 208478 208479 208480 208481 208482 208483 208484 208485 208486 208487 208488 208489 208490 208491 208492 208493 208494 208495 208496 208497 208498 208499 208500 208501 208502 208503 208504 208505 208506 208507 208508 208509 208510 208511 208512 208513 208514 208515 208516 208517 208518 208519 208520 208521 208522 208523 208524 208525 208526 208527 208528 208529 208530 208531 208532 208533 208534 208535 208536 208537 208538 208539 208540 208541 208542 208543 208544 208545 208546 208547 208548> # SplitBus
mul in 2 <208310 103> out 1 <208549>     # cond trueterm
const-mul-neg-1 in 1 <208310> out 1 <208550> # cond minuscond
add in 2 <100 208550> out 1 <208551>     # cond negcond
mul in 2 <208551 208275> out 1 <208552>  # cond falseterm
add in 2 <208549 208552> out 1 <208553>  # cond result
const-mul-ffffffff in 1 <64> out 1 <208554> # multiply-by-constant 4294967295
add in 2 <64 65> out 1 <208555>          # ArithBusReq.AddReq(DFG.Input,DFG.Input)
add in 2 <208555 208554> out 1 <208556>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <208556> out 1 <208557> # multiply-by-constant 4294967295
add in 2 <208555 208557> out 1 <208558>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <64> out 1 <208559> # multiply-by-constant 4294967295
add in 2 <65 208559> out 1 <208560>      # 'CmpLT DFG.Input - DFG.Input'
split in 1 <208560> out 65 <208561 208562 208563 208564 208565 208566 208567 208568 208569 208570 208571 208572 208573 208574 208575 208576 208577 208578 208579 208580 208581 208582 208583 208584 208585 208586 208587 208588 208589 208590 208591 208592 208593 208594 208595 208596 208597 208598 208599 208600 208601 208602 208603 208604 208605 208606 208607 208608 208609 208610 208611 208612 208613 208614 208615 208616 208617 208618 208619 208620 208621 208622 208623 208624 208625> # SplitBus
mul in 2 <208592 208558> out 1 <208626>  # cond trueterm
const-mul-neg-1 in 1 <208592> out 1 <208627> # cond minuscond
add in 2 <100 208627> out 1 <208628>     # cond negcond
mul in 2 <208628 65> out 1 <208629>      # cond falseterm
add in 2 <208626 208629> out 1 <208630>  # cond result
const-mul-ffffffff in 1 <208630> out 1 <208631> # multiply-by-constant 4294967295
add in 2 <208630 66> out 1 <208632>      # ArithBusReq.AddReq(DFG.Conditional,DFG.Input)
add in 2 <208632 208631> out 1 <208633>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <208633> out 1 <208634> # multiply-by-constant 4294967295
add in 2 <208632 208634> out 1 <208635>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <208630> out 1 <208636> # multiply-by-constant 4294967295
add in 2 <66 208636> out 1 <208637>      # 'CmpLT DFG.Input - DFG.Conditional'
split in 1 <208637> out 131 <208638 208639 208640 208641 208642 208643 208644 208645 208646 208647 208648 208649 208650 208651 208652 208653 208654 208655 208656 208657 208658 208659 208660 208661 208662 208663 208664 208665 208666 208667 208668 208669 208670 208671 208672 208673 208674 208675 208676 208677 208678 208679 208680 208681 208682 208683 208684 208685 208686 208687 208688 208689 208690 208691 208692 208693 208694 208695 208696 208697 208698 208699 208700 208701 208702 208703 208704 208705 208706 208707 208708 208709 208710 208711 208712 208713 208714 208715 208716 208717 208718 208719 208720 208721 208722 208723 208724 208725 208726 208727 208728 208729 208730 208731 208732 208733 208734 208735 208736 208737 208738 208739 208740 208741 208742 208743 208744 208745 208746 208747 208748 208749 208750 208751 208752 208753 208754 208755 208756 208757 208758 208759 208760 208761 208762 208763 208764 208765 208766 208767 208768> # SplitBus
mul in 2 <208669 208635> out 1 <208769>  # cond trueterm
const-mul-neg-1 in 1 <208669> out 1 <208770> # cond minuscond
add in 2 <100 208770> out 1 <208771>     # cond negcond
mul in 2 <208771 66> out 1 <208772>      # cond falseterm
add in 2 <208769 208772> out 1 <208773>  # cond result
const-mul-ffffffff in 1 <208773> out 1 <208774> # multiply-by-constant 4294967295
add in 2 <208773 67> out 1 <208775>      # ArithBusReq.AddReq(DFG.Conditional,DFG.Input)
add in 2 <208775 208774> out 1 <208776>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <208773> out 1 <208777> # multiply-by-constant 4294967295
add in 2 <67 208777> out 1 <208778>      # 'CmpLT DFG.Input - DFG.Conditional'
split in 1 <208778> out 197 <208779 208780 208781 208782 208783 208784 208785 208786 208787 208788 208789 208790 208791 208792 208793 208794 208795 208796 208797 208798 208799 208800 208801 208802 208803 208804 208805 208806 208807 208808 208809 208810 208811 208812 208813 208814 208815 208816 208817 208818 208819 208820 208821 208822 208823 208824 208825 208826 208827 208828 208829 208830 208831 208832 208833 208834 208835 208836 208837 208838 208839 208840 208841 208842 208843 208844 208845 208846 208847 208848 208849 208850 208851 208852 208853 208854 208855 208856 208857 208858 208859 208860 208861 208862 208863 208864 208865 208866 208867 208868 208869 208870 208871 208872 208873 208874 208875 208876 208877 208878 208879 208880 208881 208882 208883 208884 208885 208886 208887 208888 208889 208890 208891 208892 208893 208894 208895 208896 208897 208898 208899 208900 208901 208902 208903 208904 208905 208906 208907 208908 208909 208910 208911 208912 208913 208914 208915 208916 208917 208918 208919 208920 208921 208922 208923 208924 208925 208926 208927 208928 208929 208930 208931 208932 208933 208934 208935 208936 208937 208938 208939 208940 208941 208942 208943 208944 208945 208946 208947 208948 208949 208950 208951 208952 208953 208954 208955 208956 208957 208958 208959 208960 208961 208962 208963 208964 208965 208966 208967 208968 208969 208970 208971 208972 208973 208974 208975> # SplitBus
mul in 2 <208810 208776> out 1 <208976>  # cond trueterm
const-mul-neg-1 in 1 <208810> out 1 <208977> # cond minuscond
add in 2 <100 208977> out 1 <208978>     # cond negcond
mul in 2 <208978 208773> out 1 <208979>  # cond falseterm
add in 2 <208976 208979> out 1 <208980>  # cond result
mul in 2 <208669 208633> out 1 <208981>  # cond trueterm
const-mul-neg-1 in 1 <208669> out 1 <208982> # cond minuscond
add in 2 <100 208982> out 1 <208983>     # cond negcond
mul in 2 <208983 208630> out 1 <208984>  # cond falseterm
add in 2 <208981 208984> out 1 <208985>  # cond result
mul in 2 <208592 208556> out 1 <208986>  # cond trueterm
const-mul-neg-1 in 1 <208592> out 1 <208987> # cond minuscond
add in 2 <100 208987> out 1 <208988>     # cond negcond
mul in 2 <208988 64> out 1 <208989>      # cond falseterm
add in 2 <208986 208989> out 1 <208990>  # cond result
const-mul-ffffffff in 1 <208990> out 1 <208991> # multiply-by-constant 4294967295
add in 2 <208990 208985> out 1 <208992>  # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
add in 2 <208992 208991> out 1 <208993>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <208993> out 1 <208994> # multiply-by-constant 4294967295
add in 2 <208992 208994> out 1 <208995>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <208990> out 1 <208996> # multiply-by-constant 4294967295
add in 2 <208985 208996> out 1 <208997>  # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <208997> out 132 <208998 208999 209000 209001 209002 209003 209004 209005 209006 209007 209008 209009 209010 209011 209012 209013 209014 209015 209016 209017 209018 209019 209020 209021 209022 209023 209024 209025 209026 209027 209028 209029 209030 209031 209032 209033 209034 209035 209036 209037 209038 209039 209040 209041 209042 209043 209044 209045 209046 209047 209048 209049 209050 209051 209052 209053 209054 209055 209056 209057 209058 209059 209060 209061 209062 209063 209064 209065 209066 209067 209068 209069 209070 209071 209072 209073 209074 209075 209076 209077 209078 209079 209080 209081 209082 209083 209084 209085 209086 209087 209088 209089 209090 209091 209092 209093 209094 209095 209096 209097 209098 209099 209100 209101 209102 209103 209104 209105 209106 209107 209108 209109 209110 209111 209112 209113 209114 209115 209116 209117 209118 209119 209120 209121 209122 209123 209124 209125 209126 209127 209128 209129> # SplitBus
mul in 2 <209029 208995> out 1 <209130>  # cond trueterm
const-mul-neg-1 in 1 <209029> out 1 <209131> # cond minuscond
add in 2 <100 209131> out 1 <209132>     # cond negcond
mul in 2 <209132 208985> out 1 <209133>  # cond falseterm
add in 2 <209130 209133> out 1 <209134>  # cond result
const-mul-ffffffff in 1 <209134> out 1 <209135> # multiply-by-constant 4294967295
add in 2 <209134 208980> out 1 <209136>  # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
add in 2 <209136 209135> out 1 <209137>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <209137> out 1 <209138> # multiply-by-constant 4294967295
add in 2 <209136 209138> out 1 <209139>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <209134> out 1 <209140> # multiply-by-constant 4294967295
add in 2 <208980 209140> out 1 <209141>  # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <209141> out 199 <209142 209143 209144 209145 209146 209147 209148 209149 209150 209151 209152 209153 209154 209155 209156 209157 209158 209159 209160 209161 209162 209163 209164 209165 209166 209167 209168 209169 209170 209171 209172 209173 209174 209175 209176 209177 209178 209179 209180 209181 209182 209183 209184 209185 209186 209187 209188 209189 209190 209191 209192 209193 209194 209195 209196 209197 209198 209199 209200 209201 209202 209203 209204 209205 209206 209207 209208 209209 209210 209211 209212 209213 209214 209215 209216 209217 209218 209219 209220 209221 209222 209223 209224 209225 209226 209227 209228 209229 209230 209231 209232 209233 209234 209235 209236 209237 209238 209239 209240 209241 209242 209243 209244 209245 209246 209247 209248 209249 209250 209251 209252 209253 209254 209255 209256 209257 209258 209259 209260 209261 209262 209263 209264 209265 209266 209267 209268 209269 209270 209271 209272 209273 209274 209275 209276 209277 209278 209279 209280 209281 209282 209283 209284 209285 209286 209287 209288 209289 209290 209291 209292 209293 209294 209295 209296 209297 209298 209299 209300 209301 209302 209303 209304 209305 209306 209307 209308 209309 209310 209311 209312 209313 209314 209315 209316 209317 209318 209319 209320 209321 209322 209323 209324 209325 209326 209327 209328 209329 209330 209331 209332 209333 209334 209335 209336 209337 209338 209339 209340> # SplitBus
mul in 2 <209173 209139> out 1 <209341>  # cond trueterm
const-mul-neg-1 in 1 <209173> out 1 <209342> # cond minuscond
add in 2 <100 209342> out 1 <209343>     # cond negcond
mul in 2 <209343 208980> out 1 <209344>  # cond falseterm
add in 2 <209341 209344> out 1 <209345>  # cond result
const-mul-ffffffff in 1 <209345> out 1 <209346> # multiply-by-constant 4294967295
const-mul-ffffffff in 1 <208776> out 1 <209347> # multiply-by-constant 4294967295
add in 2 <208775 209347> out 1 <209348>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
mul in 2 <208810 209348> out 1 <209349>  # cond trueterm
const-mul-neg-1 in 1 <208810> out 1 <209350> # cond minuscond
add in 2 <100 209350> out 1 <209351>     # cond negcond
mul in 2 <209351 67> out 1 <209352>      # cond falseterm
add in 2 <209349 209352> out 1 <209353>  # cond result
const-mul-ffffffff in 1 <209353> out 1 <209354> # multiply-by-constant 4294967295
add in 2 <209353 68> out 1 <209355>      # ArithBusReq.AddReq(DFG.Conditional,DFG.Input)
split in 1 <209355> out 231 <209356 209357 209358 209359 209360 209361 209362 209363 209364 209365 209366 209367 209368 209369 209370 209371 209372 209373 209374 209375 209376 209377 209378 209379 209380 209381 209382 209383 209384 209385 209386 209387 209388 209389 209390 209391 209392 209393 209394 209395 209396 209397 209398 209399 209400 209401 209402 209403 209404 209405 209406 209407 209408 209409 209410 209411 209412 209413 209414 209415 209416 209417 209418 209419 209420 209421 209422 209423 209424 209425 209426 209427 209428 209429 209430 209431 209432 209433 209434 209435 209436 209437 209438 209439 209440 209441 209442 209443 209444 209445 209446 209447 209448 209449 209450 209451 209452 209453 209454 209455 209456 209457 209458 209459 209460 209461 209462 209463 209464 209465 209466 209467 209468 209469 209470 209471 209472 209473 209474 209475 209476 209477 209478 209479 209480 209481 209482 209483 209484 209485 209486 209487 209488 209489 209490 209491 209492 209493 209494 209495 209496 209497 209498 209499 209500 209501 209502 209503 209504 209505 209506 209507 209508 209509 209510 209511 209512 209513 209514 209515 209516 209517 209518 209519 209520 209521 209522 209523 209524 209525 209526 209527 209528 209529 209530 209531 209532 209533 209534 209535 209536 209537 209538 209539 209540 209541 209542 209543 209544 209545 209546 209547 209548 209549 209550 209551 209552 209553 209554 209555 209556 209557 209558 209559 209560 209561 209562 209563 209564 209565 209566 209567 209568 209569 209570 209571 209572 209573 209574 209575 209576 209577 209578 209579 209580 209581 209582 209583 209584 209585 209586> # SplitBus
const-mul-2 in 1 <209387> out 1 <209587> # join source bit 31
add in 2 <209386 209587> out 1 <209588>  # join source bit 30
const-mul-2 in 1 <209588> out 1 <209589> # join
add in 2 <209385 209589> out 1 <209590>  # join source bit 29
const-mul-2 in 1 <209590> out 1 <209591> # join
add in 2 <209384 209591> out 1 <209592>  # join source bit 28
const-mul-2 in 1 <209592> out 1 <209593> # join
add in 2 <209383 209593> out 1 <209594>  # join source bit 27
const-mul-2 in 1 <209594> out 1 <209595> # join
add in 2 <209382 209595> out 1 <209596>  # join source bit 26
const-mul-2 in 1 <209596> out 1 <209597> # join
add in 2 <209381 209597> out 1 <209598>  # join source bit 25
const-mul-2 in 1 <209598> out 1 <209599> # join
add in 2 <209380 209599> out 1 <209600>  # join source bit 24
const-mul-2 in 1 <209600> out 1 <209601> # join
add in 2 <209379 209601> out 1 <209602>  # join source bit 23
const-mul-2 in 1 <209602> out 1 <209603> # join
add in 2 <209378 209603> out 1 <209604>  # join source bit 22
const-mul-2 in 1 <209604> out 1 <209605> # join
add in 2 <209377 209605> out 1 <209606>  # join source bit 21
const-mul-2 in 1 <209606> out 1 <209607> # join
add in 2 <209376 209607> out 1 <209608>  # join source bit 20
const-mul-2 in 1 <209608> out 1 <209609> # join
add in 2 <209375 209609> out 1 <209610>  # join source bit 19
const-mul-2 in 1 <209610> out 1 <209611> # join
add in 2 <209374 209611> out 1 <209612>  # join source bit 18
const-mul-2 in 1 <209612> out 1 <209613> # join
add in 2 <209373 209613> out 1 <209614>  # join source bit 17
const-mul-2 in 1 <209614> out 1 <209615> # join
add in 2 <209372 209615> out 1 <209616>  # join source bit 16
const-mul-2 in 1 <209616> out 1 <209617> # join
add in 2 <209371 209617> out 1 <209618>  # join source bit 15
const-mul-2 in 1 <209618> out 1 <209619> # join
add in 2 <209370 209619> out 1 <209620>  # join source bit 14
const-mul-2 in 1 <209620> out 1 <209621> # join
add in 2 <209369 209621> out 1 <209622>  # join source bit 13
const-mul-2 in 1 <209622> out 1 <209623> # join
add in 2 <209368 209623> out 1 <209624>  # join source bit 12
const-mul-2 in 1 <209624> out 1 <209625> # join
add in 2 <209367 209625> out 1 <209626>  # join source bit 11
const-mul-2 in 1 <209626> out 1 <209627> # join
add in 2 <209366 209627> out 1 <209628>  # join source bit 10
const-mul-2 in 1 <209628> out 1 <209629> # join
add in 2 <209365 209629> out 1 <209630>  # join source bit 9
const-mul-2 in 1 <209630> out 1 <209631> # join
add in 2 <209364 209631> out 1 <209632>  # join source bit 8
const-mul-2 in 1 <209632> out 1 <209633> # join
add in 2 <209363 209633> out 1 <209634>  # join source bit 7
const-mul-2 in 1 <209634> out 1 <209635> # join
add in 2 <209362 209635> out 1 <209636>  # join source bit 6
const-mul-2 in 1 <209636> out 1 <209637> # join
add in 2 <209361 209637> out 1 <209638>  # join source bit 5
const-mul-2 in 1 <209638> out 1 <209639> # join
add in 2 <209360 209639> out 1 <209640>  # join source bit 4
const-mul-2 in 1 <209640> out 1 <209641> # join
add in 2 <209359 209641> out 1 <209642>  # join source bit 3
const-mul-2 in 1 <209642> out 1 <209643> # join
add in 2 <209358 209643> out 1 <209644>  # join source bit 2
const-mul-2 in 1 <209644> out 1 <209645> # join
add in 2 <209357 209645> out 1 <209646>  # join source bit 1
const-mul-2 in 1 <209646> out 1 <209647> # join
add in 2 <209356 209647> out 1 <209648>  # join source bit 0
add in 2 <209648 209648> out 1 <209649>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <209353> out 1 <209650> # multiply-by-constant 4294967295
add in 2 <68 209650> out 1 <209651>      # 'CmpLT DFG.Input - DFG.Conditional'
split in 1 <209651> out 263 <209652 209653 209654 209655 209656 209657 209658 209659 209660 209661 209662 209663 209664 209665 209666 209667 209668 209669 209670 209671 209672 209673 209674 209675 209676 209677 209678 209679 209680 209681 209682 209683 209684 209685 209686 209687 209688 209689 209690 209691 209692 209693 209694 209695 209696 209697 209698 209699 209700 209701 209702 209703 209704 209705 209706 209707 209708 209709 209710 209711 209712 209713 209714 209715 209716 209717 209718 209719 209720 209721 209722 209723 209724 209725 209726 209727 209728 209729 209730 209731 209732 209733 209734 209735 209736 209737 209738 209739 209740 209741 209742 209743 209744 209745 209746 209747 209748 209749 209750 209751 209752 209753 209754 209755 209756 209757 209758 209759 209760 209761 209762 209763 209764 209765 209766 209767 209768 209769 209770 209771 209772 209773 209774 209775 209776 209777 209778 209779 209780 209781 209782 209783 209784 209785 209786 209787 209788 209789 209790 209791 209792 209793 209794 209795 209796 209797 209798 209799 209800 209801 209802 209803 209804 209805 209806 209807 209808 209809 209810 209811 209812 209813 209814 209815 209816 209817 209818 209819 209820 209821 209822 209823 209824 209825 209826 209827 209828 209829 209830 209831 209832 209833 209834 209835 209836 209837 209838 209839 209840 209841 209842 209843 209844 209845 209846 209847 209848 209849 209850 209851 209852 209853 209854 209855 209856 209857 209858 209859 209860 209861 209862 209863 209864 209865 209866 209867 209868 209869 209870 209871 209872 209873 209874 209875 209876 209877 209878 209879 209880 209881 209882 209883 209884 209885 209886 209887 209888 209889 209890 209891 209892 209893 209894 209895 209896 209897 209898 209899 209900 209901 209902 209903 209904 209905 209906 209907 209908 209909 209910 209911 209912 209913 209914> # SplitBus
mul in 2 <209683 209649> out 1 <209915>  # cond trueterm
const-mul-neg-1 in 1 <209683> out 1 <209916> # cond minuscond
add in 2 <100 209916> out 1 <209917>     # cond negcond
mul in 2 <209917 209353> out 1 <209918>  # cond falseterm
add in 2 <209915 209918> out 1 <209919>  # cond result
add in 2 <209345 209919> out 1 <209920>  # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
split in 1 <209920> outplitBus
const-mul-2 in 1 <209952> out 1 <210154> # join source bit 31
add in 2 <209951 210154> out 1 <210155>  # join source bit 30
const-mul-2 in 1 <210155> out 1 <210156> # join
add in 2 <209950 210156> out 1 <210157>  # join source bit 29
const-mul-2 in 1 <210157> out 1 <210158> # join
add in 2 <209949 210158> out 1 <210159>  # join source bit 28
const-mul-2 in 1 <210159> out 1 <210160> # join
add in 2 <209948 210160> out 1 <210161>  # join source bit 27
const-mul-2 in 1 <210161> out 1 <210162> # join
add in 2 <209947 210162> out 1 <210163>  # join source bit 26
const-mul-2 in 1 <210163> out 1 <210164> # join
add in 2 <209946 210164> out 1 <210165>  # join source bit 25
const-mul-2 in 1 <210165> out 1 <210166> # join
add in 2 <209945 210166> out 1 <210167>  # join source bit 24
const-mul-2 in 1 <210167> out 1 <210168> # join
add in 2 <209944 210168> out 1 <210169>  # join source bit 23
const-mul-2 in 1 <210169> out 1 <210170> # join
add in 2 <209943 210170> out 1 <210171>  # join source bit 22
const-mul-2 in 1 <210171> out 1 <210172> # join
add in 2 <209942 210172> out 1 <210173>  # join source bit 21
const-mul-2 in 1 <210173> out 1 <210174> # join
add in 2 <209941 210174> out 1 <210175>  # join source bit 20
const-mul-2 in 1 <210175> out 1 <210176> # join
add in 2 <209940 210176> out 1 <210177>  # join source bit 19
const-mul-2 in 1 <210177> out 1 <210178> # join
add in 2 <209939 210178> out 1 <210179>  # join source bit 18
const-mul-2 in 1 <210179> out 1 <210180> # join
add in 2 <209938 210180> out 1 <210181>  # join source bit 17
const-mul-2 in 1 <210181> out 1 <210182> # join
add in 2 <209937 210182> out 1 <210183>  # join source bit 16
const-mul-2 in 1 <210183> out 1 <210184> # join
add in 2 <209936 210184> out 1 <210185>  # join source bit 15
const-mul-2 in 1 <210185> out 1 <210186> # join
add in 2 <209935 210186> out 1 <210187>  # join source bit 14
const-mul-2 in 1 <210187> out 1 <210188> # join
add in 2 <209934 210188> out 1 <210189>  # join source bit 13
const-mul-2 in 1 <210189> out 1 <210190> # join
add in 2 <209933 210190> out 1 <210191>  # join source bit 12
const-mul-2 in 1 <210191> out 1 <210192> # join
add in 2 <209932 210192> out 1 <210193>  # join source bit 11
const-mul-2 in 1 <210193> out 1 <210194> # join
add in 2 <209931 210194> out 1 <210195>  # join source bit 10
const-mul-2 in 1 <210195> out 1 <210196> # join
add in 2 <209930 210196> out 1 <210197>  # join source bit 9
const-mul-2 in 1 <210197> out 1 <210198> # join
add in 2 <209929 210198> out 1 <210199>  # join source bit 8
const-mul-2 in 1 <210199> out 1 <210200> # join
add in 2 <209928 210200> out 1 <210201>  # join source bit 7
const-mul-2 in 1 <210201> out 1 <210202> # join
add in 2 <209927 210202> out 1 <210203>  # join source bit 6
const-mul-2 in 1 <210203> out 1 <210204> # join
add in 2 <209926 210204> out 1 <210205>  # join source bit 5
const-mul-2 in 1 <210205> out 1 <210206> # join
add in 2 <209925 210206> out 1 <210207>  # join source bit 4
const-mul-2 in 1 <210207> out 1 <210208> # join
add in 2 <209924 210208> out 1 <210209>  # join source bit 3
const-mul-2 in 1 <210209> out 1 <210210> # join
add in 2 <209923 210210> out 1 <210211>  # join source bit 2
const-mul-2 in 1 <210211> out 1 <210212> # join
add in 2 <209922 210212> out 1 <210213>  # join source bit 1
const-mul-2 in 1 <210213> out 1 <210214> # join
add in 2 <209921 210214> out 1 <210215>  # join source bit 0
add in 2 <210215 210215> out 1 <210216>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <209345> out 1 <210217> # multiply-by-constant 4294967295
add in 2 <209919 210217> out 1 <210218>  # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <210218> outplitBus
mul in 2 <210250 210216> out 1 <210484>  # cond trueterm
const-mul-neg-1 in 1 <210250> out 1 <210485> # cond minuscond
add in 2 <100 210485> out 1 <210486>     # cond negcond
mul in 2 <210486 209345> out 1 <210487>  # cond falseterm
add in 2 <210484 210487> out 1 <210488>  # cond result
mul in 2 <209173 209137> out 1 <210489>  # cond trueterm
const-mul-neg-1 in 1 <209173> out 1 <210490> # cond minuscond
add in 2 <100 210490> out 1 <210491>     # cond negcond
mul in 2 <210491 209134> out 1 <210492>  # cond falseterm
add in 2 <210489 210492> out 1 <210493>  # cond result
mul in 2 <209029 208993> out 1 <210494>  # cond trueterm
const-mul-neg-1 in 1 <209029> out 1 <210495> # cond minuscond
add in 2 <100 210495> out 1 <210496>     # cond negcond
mul in 2 <210496 208990> out 1 <210497>  # cond falseterm
add in 2 <210494 210497> out 1 <210498>  # cond result
const-mul-ffffffff in 1 <210498> out 1 <210499> # multiply-by-constant 4294967295
add in 2 <210498 210493> out 1 <210500>  # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
add in 2 <210500 210499> out 1 <210501>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <210501> out 1 <210502> # multiply-by-constant 4294967295
add in 2 <210500 210502> out 1 <210503>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <210498> out 1 <210504> # multiply-by-constant 4294967295
add in 2 <210493 210504> out 1 <210505>  # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <210505> out 200 <210506 210507 210508 210509 210510 210511 210512 210513 210514 210515 210516 210517 210518 210519 210520 210521 210522 210523 210524 210525 210526 210527 210528 210529 210530 210531 210532 210533 210534 210535 210536 210537 210538 210539 210540 210541 210542 210543 210544 210545 210546 210547 210548 210549 210550 210551 210552 210553 210554 210555 210556 210557 210558 210559 210560 210561 210562 210563 210564 210565 210566 210567 210568 210569 210570 210571 210572 210573 210574 210575 210576 210577 210578 210579 210580 210581 210582 210583 210584 210585 210586 210587 210588 210589 210590 210591 210592 210593 210594 210595 210596 210597 210598 210599 210600 210601 210602 210603 210604 210605 210606 210607 210608 210609 210610 210611 210612 210613 210614 210615 210616 210617 210618 210619 210620 210621 210622 210623 210624 210625 210626 210627 210628 210629 210630 210631 210632 210633 210634 210635 210636 210637 210638 210639 210640 210641 210642 210643 210644 210645 210646 210647 210648 210649 210650 210651 210652 210653 210654 210655 210656 210657 210658 210659 210660 210661 210662 210663 210664 210665 210666 210667 210668 210669 210670 210671 210672 210673 210674 210675 210676 210677 210678 210679 210680 210681 210682 210683 210684 210685 210686 210687 210688 210689 210690 210691 210692 210693 210694 210695 210696 210697 210698 210699 210700 210701 210702 210703 210704 210705> # SplitBus
mul in 2 <210537 210503> out 1 <210706>  # cond trueterm
const-mul-neg-1 in 1 <210537> out 1 <210707> # cond minuscond
add in 2 <100 210707> out 1 <210708>     # cond negcond
mul in 2 <210708 210493> out 1 <210709>  # cond falseterm
add in 2 <210706 210709> out 1 <210710>  # cond result
const-mul-ffffffff in 1 <210710> out 1 <210711> # multiply-by-constant 4294967295
add in 2 <210710 210488> out 1 <210712>  # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
split in 1 <210712> outplitBus
const-mul-2 in 1 <210744> out 1 <210948> # join source bit 31
add in 2 <210743 210948> out 1 <210949>  # join source bit 30
const-mul-2 in 1 <210949> out 1 <210950> # join
add in 2 <210742 210950> out 1 <210951>  # join source bit 29
const-mul-2 in 1 <210951> out 1 <210952> # join
add in 2 <210741 210952> out 1 <210953>  # join source bit 28
const-mul-2 in 1 <210953> out 1 <210954> # join
add in 2 <210740 210954> out 1 <210955>  # join source bit 27
const-mul-2 in 1 <210955> out 1 <210956> # join
add in 2 <210739 210956> out 1 <210957>  # join source bit 26
const-mul-2 in 1 <210957> out 1 <210958> # join
add in 2 <210738 210958> out 1 <210959>  # join source bit 25
const-mul-2 in 1 <210959> out 1 <210960> # join
add in 2 <210737 210960> out 1 <210961>  # join source bit 24
const-mul-2 in 1 <210961> out 1 <210962> # join
add in 2 <210736 210962> out 1 <210963>  # join source bit 23
const-mul-2 in 1 <210963> out 1 <210964> # join
add in 2 <210735 210964> out 1 <210965>  # join source bit 22
const-mul-2 in 1 <210965> out 1 <210966> # join
add in 2 <210734 210966> out 1 <210967>  # join source bit 21
const-mul-2 in 1 <210967> out 1 <210968> # join
add in 2 <210733 210968> out 1 <210969>  # join source bit 20
const-mul-2 in 1 <210969> out 1 <210970> # join
add in 2 <210732 210970> out 1 <210971>  # join source bit 19
const-mul-2 in 1 <210971> out 1 <210972> # join
add in 2 <210731 210972> out 1 <210973>  # join source bit 18
const-mul-2 in 1 <210973> out 1 <210974> # join
add in 2 <210730 210974> out 1 <210975>  # join source bit 17
const-mul-2 in 1 <210975> out 1 <210976> # join
add in 2 <210729 210976> out 1 <210977>  # join source bit 16
const-mul-2 in 1 <210977> out 1 <210978> # join
add in 2 <210728 210978> out 1 <210979>  # join source bit 15
const-mul-2 in 1 <210979> out 1 <210980> # join
add in 2 <210727 210980> out 1 <210981>  # join source bit 14
const-mul-2 in 1 <210981> out 1 <210982> # join
add in 2 <210726 210982> out 1 <210983>  # join source bit 13
const-mul-2 in 1 <210983> out 1 <210984> # join
add in 2 <210725 210984> out 1 <210985>  # join source bit 12
const-mul-2 in 1 <210985> out 1 <210986> # join
add in 2 <210724 210986> out 1 <210987>  # join source bit 11
const-mul-2 in 1 <210987> out 1 <210988> # join
add in 2 <210723 210988> out 1 <210989>  # join source bit 10
const-mul-2 in 1 <210989> out 1 <210990> # join
add in 2 <210722 210990> out 1 <210991>  # join source bit 9
const-mul-2 in 1 <210991> out 1 <210992> # join
add in 2 <210721 210992> out 1 <210993>  # join source bit 8
const-mul-2 in 1 <210993> out 1 <210994> # join
add in 2 <210720 210994> out 1 <210995>  # join source bit 7
const-mul-2 in 1 <210995> out 1 <210996> # join
add in 2 <210719 210996> out 1 <210997>  # join source bit 6
const-mul-2 in 1 <210997> out 1 <210998> # join
add in 2 <210718 210998> out 1 <210999>  # join source bit 5
const-mul-2 in 1 <210999> out 1 <211000> # join
add in 2 <210717 211000> out 1 <211001>  # join source bit 4
const-mul-2 in 1 <211001> out 1 <211002> # join
add in 2 <210716 211002> out 1 <211003>  # join source bit 3
const-mul-2 in 1 <211003> out 1 <211004> # join
add in 2 <210715 211004> out 1 <211005>  # join source bit 2
const-mul-2 in 1 <211005> out 1 <211006> # join
add in 2 <210714 211006> out 1 <211007>  # join source bit 1
const-mul-2 in 1 <211007> out 1 <211008> # join
add in 2 <210713 211008> out 1 <211009>  # join source bit 0
add in 2 <211009 211009> out 1 <211010>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <211010> out 1 <211011> # multiply-by-constant 4294967295
add in 2 <210712 211011> out 1 <211012>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <210710> out 1 <211013> # multiply-by-constant 4294967295
add in 2 <210488 211013> out 1 <211014>  # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <211014> out 267 <211015 211016 211017 211018 211019 211020 211021 211022 211023 211024 211025 211026 211027 211028 211029 211030 211031 211032 211033 211034 211035 211036 211037 211038 211039 211040 211041 211042 211043 211044 211045 211046 211047 211048 211049 211050 211051 211052 211053 211054 211055 211056 211057 211058 211059 211060 211061 211062 211063 211064 211065 211066 211067 211068 211069 211070 211071 211072 211073 211074 211075 211076 211077 211078 211079 211080 211081 211082 211083 211084 211085 211086 211087 211088 211089 211090 211091 211092 211093 211094 211095 211096 211097 211098 211099 211100 211101 211102 211103 211104 211105 211106 211107 211108 211109 211110 211111 211112 211113 211114 211115 211116 211117 211118 211119 211120 211121 211122 211123 211124 211125 211126 211127 211128 211129 211130 211131 211132 211133 211134 211135 211136 211137 211138 211139 211140 211141 211142 211143 211144 211145 211146 211147 211148 211149 211150 211151 211152 211153 211154 211155 211156 211157 211158 211159 211160 211161 211162 211163 211164 211165 211166 211167 211168 211169 211170 211171 211172 211173 211174 211175 211176 211177 211178 211179 211180 211181 211182 211183 211184 211185 211186 211187 211188 211189 211190 211191 211192 211193 211194 211195 211196 211197 211198 211199 211200 211201 211202 211203 211204 211205 211206 211207 211208 211209 211210 211211 211212 211213 211214 211215 211216 211217 211218 211219 211220 211221 211222 211223 211224 211225 211226 211227 211228 211229 211230 211231 211232 211233 211234 211235 211236 211237 211238 211239 211240 211241 211242 211243 211244 211245 211246 211247 211248 211249 211250 211251 211252 211253 211254 211255 211256 211257 211258 211259 211260 211261 211262 211263 211264 211265 211266 211267 211268 211269 211270 211271 211272 211273 211274 211275 211276 211277 211278 211279 211280 211281> # SplitBus
mul in 2 <211046 211012> out 1 <211282>  # cond trueterm
const-mul-neg-1 in 1 <211046> out 1 <211283> # cond minuscond
add in 2 <100 211283> out 1 <211284>     # cond negcond
mul in 2 <211284 210488> out 1 <211285>  # cond falseterm
add in 2 <211282 211285> out 1 <211286>  # cond result
add in 2 <211286 104> out 1 <211287>     # ArithBusReq.AddReq(DFG.Conditional,DFG.Constant)
const-mul-ffffffff in 1 <66> out 1 <211288> # multiply-by-constant 4294967295
add in 2 <211287 211288> out 1 <211289>  # 'CmpLT DFG.Add - DFG.Input'
split in 1 <211289> out 238 <211290 211291 211292 211293 211294 211295 211296 211297 211298 211299 211300 211301 211302 211303 211304 211305 211306 211307 211308 211309 211310 211311 211312 211313 211314 211315 211316 211317 211318 211319 211320 211321 211322 211323 211324 211325 211326 211327 211328 211329 211330 211331 211332 211333 211334 211335 211336 211337 211338 211339 211340 211341 211342 211343 211344 211345 211346 211347 211348 211349 211350 211351 211352 211353 211354 211355 211356 211357 211358 211359 211360 211361 211362 211363 211364 211365 211366 211367 211368 211369 211370 211371 211372 211373 211374 211375 211376 211377 211378 211379 211380 211381 211382 211383 211384 211385 211386 211387 211388 211389 211390 211391 211392 211393 211394 211395 211396 211397 211398 211399 211400 211401 211402 211403 211404 211405 211406 211407 211408 211409 211410 211411 211412 211413 211414 211415 211416 211417 211418 211419 211420 211421 211422 211423 211424 211425 211426 211427 211428 211429 211430 211431 211432 211433 211434 211435 211436 211437 211438 211439 211440 211441 211442 211443 211444 211445 211446 211447 211448 211449 211450 211451 211452 211453 211454 211455 211456 211457 211458 211459 211460 211461 211462 211463 211464 211465 211466 211467 211468 211469 211470 211471 211472 211473 211474 211475 211476 211477 211478 211479 211480 211481 211482 211483 211484 211485 211486 211487 211488 211489 211490 211491 211492 211493 211494 211495 211496 211497 211498 211499 211500 211501 211502 211503 211504 211505 211506 211507 211508 211509 211510 211511 211512 211513 211514 211515 211516 211517 211518 211519 211520 211521 211522 211523 211524 211525 211526 211527> # SplitBus
mul in 2 <211321 103> out 1 <211528>     # cond trueterm
const-mul-neg-1 in 1 <211321> out 1 <211529> # cond minuscond
add in 2 <100 211529> out 1 <211530>     # cond negcond
mul in 2 <211530 102> out 1 <211531>     # cond falseterm
add in 2 <211528 211531> out 1 <211532>  # cond result
add in 2 <211286 3084> out 1 <211533>    # ArithBusReq.AddReq(DFG.Conditional,DFG.Negate)
const-mul-ffffffff in 1 <211533> out 1 <211534> # multiply-by-constant 4294967295
add in 2 <66 211534> out 1 <211535>      # 'CmpLT DFG.Input - DFG.Subtract'
split in 1 <211535> out 270 <211536 211537 211538 211539 211540 211541 211542 211543 211544 211545 211546 211547 211548 211549 211550 211551 211552 211553 211554 211555 211556 211557 211558 211559 211560 211561 211562 211563 211564 211565 211566 211567 211568 211569 211570 211571 211572 211573 211574 211575 211576 211577 211578 211579 211580 211581 211582 211583 211584 211585 211586 211587 211588 211589 211590 211591 211592 211593 211594 211595 211596 211597 211598 211599 211600 211601 211602 211603 211604 211605 211606 211607 211608 211609 211610 211611 211612 211613 211614 211615 211616 211617 211618 211619 211620 211621 211622 211623 211624 211625 211626 211627 211628 211629 211630 211631 211632 211633 211634 211635 211636 211637 211638 211639 211640 211641 211642 211643 211644 211645 211646 211647 211648 211649 211650 211651 211652 211653 211654 211655 211656 211657 211658 211659 211660 211661 211662 211663 211664 211665 211666 211667 211668 211669 211670 211671 211672 211673 211674 211675 211676 211677 211678 211679 211680 211681 211682 211683 211684 211685 211686 211687 211688 211689 211690 211691 211692 211693 211694 211695 211696 211697 211698 211699 211700 211701 211702 211703 211704 211705 211706 211707 211708 211709 211710 211711 211712 211713 211714 211715 211716 211717 211718 211719 211720 211721 211722 211723 211724 211725 211726 211727 211728 211729 211730 211731 211732 211733 211734 211735 211736 211737 211738 211739 211740 211741 211742 211743 211744 211745 211746 211747 211748 211749 211750 211751 211752 211753 211754 211755 211756 211757 211758 211759 211760 211761 211762 211763 211764 211765 211766 211767 211768 211769 211770 211771 211772 211773 211774 211775 211776 211777 211778 211779 211780 211781 211782 211783 211784 211785 211786 211787 211788 211789 211790 211791 211792 211793 211794 211795 211796 211797 211798 211799 211800 211801 211802 211803 211804 211805> # SplitBus
mul in 2 <211567 103> out 1 <211806>     # cond trueterm
const-mul-neg-1 in 1 <211567> out 1 <211807> # cond minuscond
add in 2 <100 211807> out 1 <211808>     # cond negcond
mul in 2 <211808 211532> out 1 <211809>  # cond falseterm
add in 2 <211806 211809> out 1 <211810>  # cond result
const-mul-ffffffff in 1 <65> out 1 <211811> # multiply-by-constant 4294967295
add in 2 <65 66> out 1 <211812>          # ArithBusReq.AddReq(DFG.Input,DFG.Input)
add in 2 <211812 211811> out 1 <211813>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <211813> out 1 <211814> # multiply-by-constant 4294967295
add in 2 <211812 211814> out 1 <211815>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <65> out 1 <211816> # multiply-by-constant 4294967295
add in 2 <66 211816> out 1 <211817>      # 'CmpLT DFG.Input - DFG.Input'
split in 1 <211817> out 65 <211818 211819 211820 211821 211822 211823 211824 211825 211826 211827 211828 211829 211830 211831 211832 211833 211834 211835 211836 211837 211838 211839 211840 211841 211842 211843 211844 211845 211846 211847 211848 211849 211850 211851 211852 211853 211854 211855 211856 211857 211858 211859 211860 211861 211862 211863 211864 211865 211866 211867 211868 211869 211870 211871 211872 211873 211874 211875 211876 211877 211878 211879 211880 211881 211882> # SplitBus
mul in 2 <211849 211815> out 1 <211883>  # cond trueterm
const-mul-neg-1 in 1 <211849> out 1 <211884> # cond minuscond
add in 2 <100 211884> out 1 <211885>     # cond negcond
mul in 2 <211885 66> out 1 <211886>      # cond falseterm
add in 2 <211883 211886> out 1 <211887>  # cond result
const-mul-ffffffff in 1 <211887> out 1 <211888> # multiply-by-constant 4294967295
add in 2 <211887 67> out 1 <211889>      # ArithBusReq.AddReq(DFG.Conditional,DFG.Input)
add in 2 <211889 211888> out 1 <211890>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <211890> out 1 <211891> # multiply-by-constant 4294967295
add in 2 <211889 211891> out 1 <211892>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <211887> out 1 <211893> # multiply-by-constant 4294967295
add in 2 <67 211893> out 1 <211894>      # 'CmpLT DFG.Input - DFG.Conditional'
split in 1 <211894> out 131 <211895 211896 211897 211898 211899 211900 211901 211902 211903 211904 211905 211906 211907 211908 211909 211910 211911 211912 211913 211914 211915 211916 211917 211918 211919 211920 211921 211922 211923 211924 211925 211926 211927 211928 211929 211930 211931 211932 211933 211934 211935 211936 211937 211938 211939 211940 211941 211942 211943 211944 211945 211946 211947 211948 211949 211950 211951 211952 211953 211954 211955 211956 211957 211958 211959 211960 211961 211962 211963 211964 211965 211966 211967 211968 211969 211970 211971 211972 211973 211974 211975 211976 211977 211978 211979 211980 211981 211982 211983 211984 211985 211986 211987 211988 211989 211990 211991 211992 211993 211994 211995 211996 211997 211998 211999 212000 212001 212002 212003 212004 212005 212006 212007 212008 212009 212010 212011 212012 212013 212014 212015 212016 212017 212018 212019 212020 212021 212022 212023 212024 212025> # SplitBus
mul in 2 <211926 211892> out 1 <212026>  # cond trueterm
const-mul-neg-1 in 1 <211926> out 1 <212027> # cond minuscond
add in 2 <100 212027> out 1 <212028>     # cond negcond
mul in 2 <212028 67> out 1 <212029>      # cond falseterm
add in 2 <212026 212029> out 1 <212030>  # cond result
const-mul-ffffffff in 1 <212030> out 1 <212031> # multiply-by-constant 4294967295
add in 2 <212030 68> out 1 <212032>      # ArithBusReq.AddReq(DFG.Conditional,DFG.Input)
add in 2 <212032 212031> out 1 <212033>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <212030> out 1 <212034> # multiply-by-constant 4294967295
add in 2 <68 212034> out 1 <212035>      # 'CmpLT DFG.Input - DFG.Conditional'
split in 1 <212035> out 197 <212036 212037 212038 212039 212040 212041 212042 212043 212044 212045 212046 212047 212048 212049 212050 212051 212052 212053 212054 212055 212056 212057 212058 212059 212060 212061 212062 212063 212064 212065 212066 212067 212068 212069 212070 212071 212072 212073 212074 212075 212076 212077 212078 212079 212080 212081 212082 212083 212084 212085 212086 212087 212088 212089 212090 212091 212092 212093 212094 212095 212096 212097 212098 212099 212100 212101 212102 212103 212104 212105 212106 212107 212108 212109 212110 212111 212112 212113 212114 212115 212116 212117 212118 212119 212120 212121 212122 212123 212124 212125 212126 212127 212128 212129 212130 212131 212132 212133 212134 212135 212136 212137 212138 212139 212140 212141 212142 212143 212144 212145 212146 212147 212148 212149 212150 212151 212152 212153 212154 212155 212156 212157 212158 212159 212160 212161 212162 212163 212164 212165 212166 212167 212168 212169 212170 212171 212172 212173 212174 212175 212176 212177 212178 212179 212180 212181 212182 212183 212184 212185 212186 212187 212188 212189 212190 212191 212192 212193 212194 212195 212196 212197 212198 212199 212200 212201 212202 212203 212204 212205 212206 212207 212208 212209 212210 212211 212212 212213 212214 212215 212216 212217 212218 212219 212220 212221 212222 212223 212224 212225 212226 212227 212228 212229 212230 212231 212232> # SplitBus
mul in 2 <212067 212033> out 1 <212233>  # cond trueterm
const-mul-neg-1 in 1 <212067> out 1 <212234> # cond minuscond
add in 2 <100 212234> out 1 <212235>     # cond negcond
mul in 2 <212235 212030> out 1 <212236>  # cond falseterm
add in 2 <212233 212236> out 1 <212237>  # cond result
mul in 2 <211926 211890> out 1 <212238>  # cond trueterm
const-mul-neg-1 in 1 <211926> out 1 <212239> # cond minuscond
add in 2 <100 212239> out 1 <212240>     # cond negcond
mul in 2 <212240 211887> out 1 <212241>  # cond falseterm
add in 2 <212238 212241> out 1 <212242>  # cond result
mul in 2 <211849 211813> out 1 <212243>  # cond trueterm
const-mul-neg-1 in 1 <211849> out 1 <212244> # cond minuscond
add in 2 <100 212244> out 1 <212245>     # cond negcond
mul in 2 <212245 65> out 1 <212246>      # cond falseterm
add in 2 <212243 212246> out 1 <212247>  # cond result
const-mul-ffffffff in 1 <212247> out 1 <212248> # multiply-by-constant 4294967295
add in 2 <212247 212242> out 1 <212249>  # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
add in 2 <212249 212248> out 1 <212250>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <212250> out 1 <212251> # multiply-by-constant 4294967295
add in 2 <212249 212251> out 1 <212252>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <212247> out 1 <212253> # multiply-by-constant 4294967295
add in 2 <212242 212253> out 1 <212254>  # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <212254> out 132 <212255 212256 212257 212258 212259 212260 212261 212262 212263 212264 212265 212266 212267 212268 212269 212270 212271 212272 212273 212274 212275 212276 212277 212278 212279 212280 212281 212282 212283 212284 212285 212286 212287 212288 212289 212290 212291 212292 212293 212294 212295 212296 212297 212298 212299 212300 212301 212302 212303 212304 212305 212306 212307 212308 212309 212310 212311 212312 212313 212314 212315 212316 212317 212318 212319 212320 212321 212322 212323 212324 212325 212326 212327 212328 212329 212330 212331 212332 212333 212334 212335 212336 212337 212338 212339 212340 212341 212342 212343 212344 212345 212346 212347 212348 212349 212350 212351 212352 212353 212354 212355 212356 212357 212358 212359 212360 212361 212362 212363 212364 212365 212366 212367 212368 212369 212370 212371 212372 212373 212374 212375 212376 212377 212378 212379 212380 212381 212382 212383 212384 212385 212386> # SplitBus
mul in 2 <212286 212252> out 1 <212387>  # cond trueterm
const-mul-neg-1 in 1 <212286> out 1 <212388> # cond minuscond
add in 2 <100 212388> out 1 <212389>     # cond negcond
mul in 2 <212389 212242> out 1 <212390>  # cond falseterm
add in 2 <212387 212390> out 1 <212391>  # cond result
const-mul-ffffffff in 1 <212391> out 1 <212392> # multiply-by-constant 4294967295
add in 2 <212391 212237> out 1 <212393>  # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
add in 2 <212393 212392> out 1 <212394>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <212394> out 1 <212395> # multiply-by-constant 4294967295
add in 2 <212393 212395> out 1 <212396>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <212391> out 1 <212397> # multiply-by-constant 4294967295
add in 2 <212237 212397> out 1 <212398>  # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <212398> out 199 <212399 212400 212401 212402 212403 212404 212405 212406 212407 212408 212409 212410 212411 212412 212413 212414 212415 212416 212417 212418 212419 212420 212421 212422 212423 212424 212425 212426 212427 212428 212429 212430 212431 212432 212433 212434 212435 212436 212437 212438 212439 212440 212441 212442 212443 212444 212445 212446 212447 212448 212449 212450 212451 212452 212453 212454 212455 212456 212457 212458 212459 212460 212461 212462 212463 212464 212465 212466 212467 212468 212469 212470 212471 212472 212473 212474 212475 212476 212477 212478 212479 212480 212481 212482 212483 212484 212485 212486 212487 212488 212489 212490 212491 212492 212493 212494 212495 212496 212497 212498 212499 212500 212501 212502 212503 212504 212505 212506 212507 212508 212509 212510 212511 212512 212513 212514 212515 212516 212517 212518 212519 212520 212521 212522 212523 212524 212525 212526 212527 212528 212529 212530 212531 212532 212533 212534 212535 212536 212537 212538 212539 212540 212541 212542 212543 212544 212545 212546 212547 212548 212549 212550 212551 212552 212553 212554 212555 212556 212557 212558 212559 212560 212561 212562 212563 212564 212565 212566 212567 212568 212569 212570 212571 212572 212573 212574 212575 212576 212577 212578 212579 212580 212581 212582 212583 212584 212585 212586 212587 212588 212589 212590 212591 212592 212593 212594 212595 212596 212597> # SplitBus
mul in 2 <212430 212396> out 1 <212598>  # cond trueterm
const-mul-neg-1 in 1 <212430> out 1 <212599> # cond minuscond
add in 2 <100 212599> out 1 <212600>     # cond negcond
mul in 2 <212600 212237> out 1 <212601>  # cond falseterm
add in 2 <212598 212601> out 1 <212602>  # cond result
const-mul-ffffffff in 1 <212602> out 1 <212603> # multiply-by-constant 4294967295
const-mul-ffffffff in 1 <212033> out 1 <212604> # multiply-by-constant 4294967295
add in 2 <212032 212604> out 1 <212605>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
mul in 2 <212067 212605> out 1 <212606>  # cond trueterm
const-mul-neg-1 in 1 <212067> out 1 <212607> # cond minuscond
add in 2 <100 212607> out 1 <212608>     # cond negcond
mul in 2 <212608 68> out 1 <212609>      # cond falseterm
add in 2 <212606 212609> out 1 <212610>  # cond result
const-mul-ffffffff in 1 <212610> out 1 <212611> # multiply-by-constant 4294967295
add in 2 <212610 69> out 1 <212612>      # ArithBusReq.AddReq(DFG.Conditional,DFG.Input)
split in 1 <212612> outplitBus
const-mul-2 in 1 <212644> out 1 <212844> # join source bit 31
add in 2 <212643 212844> out 1 <212845>  # join source bit 30
const-mul-2 in 1 <212845> out 1 <212846> # join
add in 2 <212642 212846> out 1 <212847>  # join source bit 29
const-mul-2 in 1 <212847> out 1 <212848> # join
add in 2 <212641 212848> out 1 <212849>  # join source bit 28
const-mul-2 in 1 <212849> out 1 <212850> # join
add in 2 <212640 212850> out 1 <212851>  # join source bit 27
const-mul-2 in 1 <212851> out 1 <212852> # join
add in 2 <212639 212852> out 1 <212853>  # join source bit 26
const-mul-2 in 1 <212853> out 1 <212854> # join
add in 2 <212638 212854> out 1 <212855>  # join source bit 25
const-mul-2 in 1 <212855> out 1 <212856> # join
add in 2 <212637 212856> out 1 <212857>  # join source bit 24
const-mul-2 in 1 <212857> out 1 <212858> # join
add in 2 <212636 212858> out 1 <212859>  # join source bit 23
const-mul-2 in 1 <212859> out 1 <212860> # join
add in 2 <212635 212860> out 1 <212861>  # join source bit 22
const-mul-2 in 1 <212861> out 1 <212862> # join
add in 2 <212634 212862> out 1 <212863>  # join source bit 21
const-mul-2 in 1 <212863> out 1 <212864> # join
add in 2 <212633 212864> out 1 <212865>  # join source bit 20
const-mul-2 in 1 <212865> out 1 <212866> # join
add in 2 <212632 212866> out 1 <212867>  # join source bit 19
const-mul-2 in 1 <212867> out 1 <212868> # join
add in 2 <212631 212868> out 1 <212869>  # join source bit 18
const-mul-2 in 1 <212869> out 1 <212870> # join
add in 2 <212630 212870> out 1 <212871>  # join source bit 17
const-mul-2 in 1 <212871> out 1 <212872> # join
add in 2 <212629 212872> out 1 <212873>  # join source bit 16
const-mul-2 in 1 <212873> out 1 <212874> # join
add in 2 <212628 212874> out 1 <212875>  # join source bit 15
const-mul-2 in 1 <212875> out 1 <212876> # join
add in 2 <212627 212876> out 1 <212877>  # join source bit 14
const-mul-2 in 1 <212877> out 1 <212878> # join
add in 2 <212626 212878> out 1 <212879>  # join source bit 13
const-mul-2 in 1 <212879> out 1 <212880> # join
add in 2 <212625 212880> out 1 <212881>  # join source bit 12
const-mul-2 in 1 <212881> out 1 <212882> # join
add in 2 <212624 212882> out 1 <212883>  # join source bit 11
const-mul-2 in 1 <212883> out 1 <212884> # join
add in 2 <212623 212884> out 1 <212885>  # join source bit 10
const-mul-2 in 1 <212885> out 1 <212886> # join
add in 2 <212622 212886> out 1 <212887>  # join source bit 9
const-mul-2 in 1 <212887> out 1 <212888> # join
add in 2 <212621 212888> out 1 <212889>  # join source bit 8
const-mul-2 in 1 <212889> out 1 <212890> # join
add in 2 <212620 212890> out 1 <212891>  # join source bit 7
const-mul-2 in 1 <212891> out 1 <212892> # join
add in 2 <212619 212892> out 1 <212893>  # join source bit 6
const-mul-2 in 1 <212893> out 1 <212894> # join
add in 2 <212618 212894> out 1 <212895>  # join source bit 5
const-mul-2 in 1 <212895> out 1 <212896> # join
add in 2 <212617 212896> out 1 <212897>  # join source bit 4
const-mul-2 in 1 <212897> out 1 <212898> # join
add in 2 <212616 212898> out 1 <212899>  # join source bit 3
const-mul-2 in 1 <212899> out 1 <212900> # join
add in 2 <212615 212900> out 1 <212901>  # join source bit 2
const-mul-2 in 1 <212901> out 1 <212902> # join
add in 2 <212614 212902> out 1 <212903>  # join source bit 1
const-mul-2 in 1 <212903> out 1 <212904> # join
add in 2 <212613 212904> out 1 <212905>  # join source bit 0
add in 2 <212905 212905> out 1 <212906>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <212610> out 1 <212907> # multiply-by-constant 4294967295
add in 2 <69 212907> out 1 <212908>      # 'CmpLT DFG.Input - DFG.Conditional'
split in 1 <212908> out 263 <212909 212910 212911 212912 212913 212914 212915 212916 212917 212918 212919 212920 212921 212922 212923 212924 212925 212926 212927 212928 212929 212930 212931 212932 212933 212934 212935 212936 212937 212938 212939 212940 212941 212942 212943 212944 212945 212946 212947 212948 212949 212950 212951 212952 212953 212954 212955 212956 212957 212958 212959 212960 212961 212962 212963 212964 212965 212966 212967 212968 212969 212970 212971 212972 212973 212974 212975 212976 212977 212978 212979 212980 212981 212982 212983 212984 212985 212986 212987 212988 212989 212990 212991 212992 212993 212994 212995 212996 212997 212998 212999 213000 213001 213002 213003 213004 213005 213006 213007 213008 213009 213010 213011 213012 213013 213014 213015 213016 213017 213018 213019 213020 213021 213022 213023 213024 213025 213026 213027 213028 213029 213030 213031 213032 213033 213034 213035 213036 213037 213038 213039 213040 213041 213042 213043 213044 213045 213046 213047 213048 213049 213050 213051 213052 213053 213054 213055 213056 213057 213058 213059 213060 213061 213062 213063 213064 213065 213066 213067 213068 213069 213070 213071 213072 213073 213074 213075 213076 213077 213078 213079 213080 213081 213082 213083 213084 213085 213086 213087 213088 213089 213090 213091 213092 213093 213094 213095 213096 213097 213098 213099 213100 213101 213102 213103 213104 213105 213106 213107 213108 213109 213110 213111 213112 213113 213114 213115 213116 213117 213118 213119 213120 213121 213122 213123 213124 213125 213126 213127 213128 213129 213130 213131 213132 213133 213134 213135 213136 213137 213138 213139 213140 213141 213142 213143 213144 213145 213146 213147 213148 213149 213150 213151 213152 213153 213154 213155 213156 213157 213158 213159 213160 213161 213162 213163 213164 213165 213166 213167 213168 213169 213170 213171> # SplitBus
mul in 2 <212940 212906> out 1 <213172>  # cond trueterm
const-mul-neg-1 in 1 <212940> out 1 <213173> # cond minuscond
add in 2 <100 213173> out 1 <213174>     # cond negcond
mul in 2 <213174 212610> out 1 <213175>  # cond falseterm
add in 2 <213172 213175> out 1 <213176>  # cond result
add in 2 <212602 213176> out 1 <213177>  # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
split in 1 <213177> out 233 <213178 213179 213180 213181 213182 213183 213184 213185 213186 213187 213188 213189 213190 213191 213192 213193 213194 213195 213196 213197 213198 213199 213200 213201 213202 213203 213204 213205 213206 213207 213208 213209 213210 213211 213212 213213 213214 213215 213216 213217 213218 213219 213220 213221 213222 213223 213224 213225 213226 213227 213228 213229 213230 213231 213232 213233 213234 213235 213236 213237 213238 213239 213240 213241 213242 213243 213244 213245 213246 213247 213248 213249 213250 213251 213252 213253 213254 213255 213256 213257 213258 213259 213260 213261 213262 213263 213264 213265 213266 213267 213268 213269 213270 213271 213272 213273 213274 213275 213276 213277 213278 213279 213280 213281 213282 213283 213284 213285 213286 213287 213288 213289 213290 213291 213292 213293 213294 213295 213296 213297 213298 213299 213300 213301 213302 213303 213304 213305 213306 213307 213308 213309 213310 213311 213312 213313 213314 213315 213316 213317 213318 213319 213320 213321 213322 213323 213324 213325 213326 213327 213328 213329 213330 213331 213332 213333 213334 213335 213336 213337 213338 213339 213340 213341 213342 213343 213344 213345 213346 213347 213348 213349 213350 213351 213352 213353 213354 213355 213356 213357 213358 213359 213360 213361 213362 213363 213364 213365 213366 213367 213368 213369 213370 213371 213372 213373 213374 213375 213376 213377 213378 213379 213380 213381 213382 213383 213384 213385 213386 213387 213388 213389 213390 213391 213392 213393 213394 213395 213396 213397 213398 213399 213400 213401 213402 213403 213404 213405 213406 213407 213408 213409 213410> # SplitBus
const-mul-2 in 1 <213209> out 1 <213411> # join source bit 31
add in 2 <213208 213411> out 1 <213412>  # join source bit 30
const-mul-2 in 1 <213412> out 1 <213413> # join
add in 2 <213207 213413> out 1 <213414>  # join source bit 29
const-mul-2 in 1 <213414> out 1 <213415> # join
add in 2 <213206 213415> out 1 <213416>  # join source bit 28
const-mul-2 in 1 <213416> out 1 <213417> # join
add in 2 <213205 213417> out 1 <213418>  # join source bit 27
const-mul-2 in 1 <213418> out 1 <213419> # join
add in 2 <213204 213419> out 1 <213420>  # join source bit 26
const-mul-2 in 1 <213420> out 1 <213421> # join
add in 2 <213203 213421> out 1 <213422>  # join source bit 25
const-mul-2 in 1 <213422> out 1 <213423> # join
add in 2 <213202 213423> out 1 <213424>  # join source bit 24
const-mul-2 in 1 <213424> out 1 <213425> # join
add in 2 <213201 213425> out 1 <213426>  # join source bit 23
const-mul-2 in 1 <213426> out 1 <213427> # join
add in 2 <213200 213427> out 1 <213428>  # join source bit 22
const-mul-2 in 1 <213428> out 1 <213429> # join
add in 2 <213199 213429> out 1 <213430>  # join source bit 21
const-mul-2 in 1 <213430> out 1 <213431> # join
add in 2 <213198 213431> out 1 <213432>  # join source bit 20
const-mul-2 in 1 <213432> out 1 <213433> # join
add in 2 <213197 213433> out 1 <213434>  # join source bit 19
const-mul-2 in 1 <213434> out 1 <213435> # join
add in 2 <213196 213435> out 1 <213436>  # join source bit 18
const-mul-2 in 1 <213436> out 1 <213437> # join
add in 2 <213195 213437> out 1 <213438>  # join source bit 17
const-mul-2 in 1 <213438> out 1 <213439> # join
add in 2 <213194 213439> out 1 <213440>  # join source bit 16
const-mul-2 in 1 <213440> out 1 <213441> # join
add in 2 <213193 213441> out 1 <213442>  # join source bit 15
const-mul-2 in 1 <213442> out 1 <213443> # join
add in 2 <213192 213443> out 1 <213444>  # join source bit 14
const-mul-2 in 1 <213444> out 1 <213445> # join
add in 2 <213191 213445> out 1 <213446>  # join source bit 13
const-mul-2 in 1 <213446> out 1 <213447> # join
add in 2 <213190 213447> out 1 <213448>  # join source bit 12
const-mul-2 in 1 <213448> out 1 <213449> # join
add in 2 <213189 213449> out 1 <213450>  # join source bit 11
const-mul-2 in 1 <213450> out 1 <213451> # join
add in 2 <213188 213451> out 1 <213452>  # join source bit 10
const-mul-2 in 1 <213452> out 1 <213453> # join
add in 2 <213187 213453> out 1 <213454>  # join source bit 9
const-mul-2 in 1 <213454> out 1 <213455> # join
add in 2 <213186 213455> out 1 <213456>  # join source bit 8
const-mul-2 in 1 <213456> out 1 <213457> # join
add in 2 <213185 213457> out 1 <213458>  # join source bit 7
const-mul-2 in 1 <213458> out 1 <213459> # join
add in 2 <213184 213459> out 1 <213460>  # join source bit 6
const-mul-2 in 1 <213460> out 1 <213461> # join
add in 2 <213183 213461> out 1 <213462>  # join source bit 5
const-mul-2 in 1 <213462> out 1 <213463> # join
add in 2 <213182 213463> out 1 <213464>  # join source bit 4
const-mul-2 in 1 <213464> out 1 <213465> # join
add in 2 <213181 213465> out 1 <213466>  # join source bit 3
const-mul-2 in 1 <213466> out 1 <213467> # join
add in 2 <213180 213467> out 1 <213468>  # join source bit 2
const-mul-2 in 1 <213468> out 1 <213469> # join
add in 2 <213179 213469> out 1 <213470>  # join source bit 1
const-mul-2 in 1 <213470> out 1 <213471> # join
add in 2 <213178 213471> out 1 <213472>  # join source bit 0
add in 2 <213472 213472> out 1 <213473>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <212602> out 1 <213474> # multiply-by-constant 4294967295
add in 2 <213176 213474> out 1 <213475>  # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <213475> out 265 <213476 213477 213478 213479 213480 213481 213482 213483 213484 213485 213486 213487 213488 213489 213490 213491 213492 213493 213494 213495 213496 213497 213498 213499 213500 213501 213502 213503 213504 213505 213506 213507 213508 213509 213510 213511 213512 213513 213514 213515 213516 213517 213518 213519 213520 213521 213522 213523 213524 213525 213526 213527 213528 213529 213530 213531 213532 213533 213534 213535 213536 213537 213538 213539 213540 213541 213542 213543 213544 213545 213546 213547 213548 213549 213550 213551 213552 213553 213554 213555 213556 213557 213558 213559 213560 213561 213562 213563 213564 213565 213566 213567 213568 213569 213570 213571 213572 213573 213574 213575 213576 213577 213578 213579 213580 213581 213582 213583 213584 213585 213586 213587 213588 213589 213590 213591 213592 213593 213594 213595 213596 213597 213598 213599 213600 213601 213602 213603 213604 213605 213606 213607 213608 213609 213610 213611 213612 213613 213614 213615 213616 213617 213618 213619 213620 213621 213622 213623 213624 213625 213626 213627 213628 213629 213630 213631 213632 213633 213634 213635 213636 213637 213638 213639 213640 213641 213642 213643 213644 213645 213646 213647 213648 213649 213650 213651 213652 213653 213654 213655 213656 213657 213658 213659 213660 213661 213662 213663 213664 213665 213666 213667 213668 213669 213670 213671 213672 213673 213674 213675 213676 213677 213678 213679 213680 213681 213682 213683 213684 213685 213686 213687 213688 213689 213690 213691 213692 213693 213694 213695 213696 213697 213698 213699 213700 213701 213702 213703 213704 213705 213706 213707 213708 213709 213710 213711 213712 213713 213714 213715 213716 213717 213718 213719 213720 213721 213722 213723 213724 213725 213726 213727 213728 213729 213730 213731 213732 213733 213734 213735 213736 213737 213738 213739 213740> # SplitBus
mul in 2 <213507 213473> out 1 <213741>  # cond trueterm
const-mul-neg-1 in 1 <213507> out 1 <213742> # cond minuscond
add in 2 <100 213742> out 1 <213743>     # cond negcond
mul in 2 <213743 212602> out 1 <213744>  # cond falseterm
add in 2 <213741 213744> out 1 <213745>  # cond result
mul in 2 <212430 212394> out 1 <213746>  # cond trueterm
const-mul-neg-1 in 1 <212430> out 1 <213747> # cond minuscond
add in 2 <100 213747> out 1 <213748>     # cond negcond
mul in 2 <213748 212391> out 1 <213749>  # cond falseterm
add in 2 <213746 213749> out 1 <213750>  # cond result
mul in 2 <212286 212250> out 1 <213751>  # cond trueterm
const-mul-neg-1 in 1 <212286> out 1 <213752> # cond minuscond
add in 2 <100 213752> out 1 <213753>     # cond negcond
mul in 2 <213753 212247> out 1 <213754>  # cond falseterm
add in 2 <213751 213754> out 1 <213755>  # cond result
const-mul-ffffffff in 1 <213755> out 1 <213756> # multiply-by-constant 4294967295
add in 2 <213755 213750> out 1 <213757>  # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
add in 2 <213757 213756> out 1 <213758>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <213758> out 1 <213759> # multiply-by-constant 4294967295
add in 2 <213757 213759> out 1 <213760>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <213755> out 1 <213761> # multiply-by-constant 4294967295
add in 2 <213750 213761> out 1 <213762>  # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <213762> out 200 <213763 213764 213765 213766 213767 213768 213769 213770 213771 213772 213773 213774 213775 213776 213777 213778 213779 213780 213781 213782 213783 213784 213785 213786 213787 213788 213789 213790 213791 213792 213793 213794 213795 213796 213797 213798 213799 213800 213801 213802 213803 213804 213805 213806 213807 213808 213809 213810 213811 213812 213813 213814 213815 213816 213817 213818 213819 213820 213821 213822 213823 213824 213825 213826 213827 213828 213829 213830 213831 213832 213833 213834 213835 213836 213837 213838 213839 213840 213841 213842 213843 213844 213845 213846 213847 213848 213849 213850 213851 213852 213853 213854 213855 213856 213857 213858 213859 213860 213861 213862 213863 213864 213865 213866 213867 213868 213869 213870 213871 213872 213873 213874 213875 213876 213877 213878 213879 213880 213881 213882 213883 213884 213885 213886 213887 213888 213889 213890 213891 213892 213893 213894 213895 213896 213897 213898 213899 213900 213901 213902 213903 213904 213905 213906 213907 213908 213909 213910 213911 213912 213913 213914 213915 213916 213917 213918 213919 213920 213921 213922 213923 213924 213925 213926 213927 213928 213929 213930 213931 213932 213933 213934 213935 213936 213937 213938 213939 213940 213941 213942 213943 213944 213945 213946 213947 213948 213949 213950 213951 213952 213953 213954 213955 213956 213957 213958 213959 213960 213961 213962> # SplitBus
mul in 2 <213794 213760> out 1 <213963>  # cond trueterm
const-mul-neg-1 in 1 <213794> out 1 <213964> # cond minuscond
add in 2 <100 213964> out 1 <213965>     # cond negcond
mul in 2 <213965 213750> out 1 <213966>  # cond falseterm
add in 2 <213963 213966> out 1 <213967>  # cond result
const-mul-ffffffff in 1 <213967> out 1 <213968> # multiply-by-constant 4294967295
add in 2 <213967 213745> out 1 <213969>  # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
split in 1 <213969> out 235 <213970 213971 213972 213973 213974 213975 213976 213977 213978 213979 213980 213981 213982 213983 213984 213985 213986 213987 213988 213989 213990 213991 213992 213993 213994 213995 213996 213997 213998 213999 214000 214001 214002 214003 214004 214005 214006 214007 214008 214009 214010 214011 214012 214013 214014 214015 214016 214017 214018 214019 214020 214021 214022 214023 214024 214025 214026 214027 214028 214029 214030 214031 214032 214033 214034 214035 214036 214037 214038 214039 214040 214041 214042 214043 214044 214045 214046 214047 214048 214049 214050 214051 214052 214053 214054 214055 214056 214057 214058 214059 214060 214061 214062 214063 214064 214065 214066 214067 214068 214069 214070 214071 214072 214073 214074 214075 214076 214077 214078 214079 214080 214081 214082 214083 214084 214085 214086 214087 214088 214089 214090 214091 214092 214093 214094 214095 214096 214097 214098 214099 214100 214101 214102 214103 214104 214105 214106 214107 214108 214109 214110 214111 214112 214113 214114 214115 214116 214117 214118 214119 214120 214121 214122 214123 214124 214125 214126 214127 214128 214129 214130 214131 214132 214133 214134 214135 214136 214137 214138 214139 214140 214141 214142 214143 214144 214145 214146 214147 214148 214149 214150 214151 214152 214153 214154 214155 214156 214157 214158 214159 214160 214161 214162 214163 214164 214165 214166 214167 214168 214169 214170 214171 214172 214173 214174 214175 214176 214177 214178 214179 214180 214181 214182 214183 214184 214185 214186 214187 214188 214189 214190 214191 214192 214193 214194 214195 214196 214197 214198 214199 214200 214201 214202 214203 214204> # SplitBus
const-mul-2 in 1 <214001> out 1 <214205> # join source bit 31
add in 2 <214000 214205> out 1 <214206>  # join source bit 30
const-mul-2 in 1 <214206> out 1 <214207> # join
add in 2 <213999 214207> out 1 <214208>  # join source bit 29
const-mul-2 in 1 <214208> out 1 <214209> # join
add in 2 <213998 214209> out 1 <214210>  # join source bit 28
const-mul-2 in 1 <214210> out 1 <214211> # join
add in 2 <213997 214211> out 1 <214212>  # join source bit 27
const-mul-2 in 1 <214212> out 1 <214213> # join
add in 2 <213996 214213> out 1 <214214>  # join source bit 26
const-mul-2 in 1 <214214> out 1 <214215> # join
add in 2 <213995 214215> out 1 <214216>  # join source bit 25
const-mul-2 in 1 <214216> out 1 <214217> # join
add in 2 <213994 214217> out 1 <214218>  # join source bit 24
const-mul-2 in 1 <214218> out 1 <214219> # join
add in 2 <213993 214219> out 1 <214220>  # join source bit 23
const-mul-2 in 1 <214220> out 1 <214221> # join
add in 2 <213992 214221> out 1 <214222>  # join source bit 22
const-mul-2 in 1 <214222> out 1 <214223> # join
add in 2 <213991 214223> out 1 <214224>  # join source bit 21
const-mul-2 in 1 <214224> out 1 <214225> # join
add in 2 <213990 214225> out 1 <214226>  # join source bit 20
const-mul-2 in 1 <214226> out 1 <214227> # join
add in 2 <213989 214227> out 1 <214228>  # join source bit 19
const-mul-2 in 1 <214228> out 1 <214229> # join
add in 2 <213988 214229> out 1 <214230>  # join source bit 18
const-mul-2 in 1 <214230> out 1 <214231> # join
add in 2 <213987 214231> out 1 <214232>  # join source bit 17
const-mul-2 in 1 <214232> out 1 <214233> # join
add in 2 <213986 214233> out 1 <214234>  # join source bit 16
const-mul-2 in 1 <214234> out 1 <214235> # join
add in 2 <213985 214235> out 1 <214236>  # join source bit 15
const-mul-2 in 1 <214236> out 1 <214237> # join
add in 2 <213984 214237> out 1 <214238>  # join source bit 14
const-mul-2 in 1 <214238> out 1 <214239> # join
add in 2 <213983 214239> out 1 <214240>  # join source bit 13
const-mul-2 in 1 <214240> out 1 <214241> # join
add in 2 <213982 214241> out 1 <214242>  # join source bit 12
const-mul-2 in 1 <214242> out 1 <214243> # join
add in 2 <213981 214243> out 1 <214244>  # join source bit 11
const-mul-2 in 1 <214244> out 1 <214245> # join
add in 2 <213980 214245> out 1 <214246>  # join source bit 10
const-mul-2 in 1 <214246> out 1 <214247> # join
add in 2 <213979 214247> out 1 <214248>  # join source bit 9
const-mul-2 in 1 <214248> out 1 <214249> # join
add in 2 <213978 214249> out 1 <214250>  # join source bit 8
const-mul-2 in 1 <214250> out 1 <214251> # join
add in 2 <213977 214251> out 1 <214252>  # join source bit 7
const-mul-2 in 1 <214252> out 1 <214253> # join
add in 2 <213976 214253> out 1 <214254>  # join source bit 6
const-mul-2 in 1 <214254> out 1 <214255> # join
add in 2 <213975 214255> out 1 <214256>  # join source bit 5
const-mul-2 in 1 <214256> out 1 <214257> # join
add in 2 <213974 214257> out 1 <214258>  # join source bit 4
const-mul-2 in 1 <214258> out 1 <214259> # join
add in 2 <213973 214259> out 1 <214260>  # join source bit 3
const-mul-2 in 1 <214260> out 1 <214261> # join
add in 2 <213972 214261> out 1 <214262>  # join source bit 2
const-mul-2 in 1 <214262> out 1 <214263> # join
add in 2 <213971 214263> out 1 <214264>  # join source bit 1
const-mul-2 in 1 <214264> out 1 <214265> # join
add in 2 <213970 214265> out 1 <214266>  # join source bit 0
add in 2 <214266 214266> out 1 <214267>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <214267> out 1 <214268> # multiply-by-constant 4294967295
add in 2 <213969 214268> out 1 <214269>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <213967> out 1 <214270> # multiply-by-constant 4294967295
add in 2 <213745 214270> out 1 <214271>  # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <214271> out 267 <214272 214273 214274 214275 214276 214277 214278 214279 214280 214281 214282 214283 214284 214285 214286 214287 214288 214289 214290 214291 214292 214293 214294 214295 214296 214297 214298 214299 214300 214301 214302 214303 214304 214305 214306 214307 214308 214309 214310 214311 214312 214313 214314 214315 214316 214317 214318 214319 214320 214321 214322 214323 214324 214325 214326 214327 214328 214329 214330 214331 214332 214333 214334 214335 214336 214337 214338 214339 214340 214341 214342 214343 214344 214345 214346 214347 214348 214349 214350 214351 214352 214353 214354 214355 214356 214357 214358 214359 214360 214361 214362 214363 214364 214365 214366 214367 214368 214369 214370 214371 214372 214373 214374 214375 214376 214377 214378 214379 214380 214381 214382 214383 214384 214385 214386 214387 214388 214389 214390 214391 214392 214393 214394 214395 214396 214397 214398 214399 214400 214401 214402 214403 214404 214405 214406 214407 214408 214409 214410 214411 214412 214413 214414 214415 214416 214417 214418 214419 214420 214421 214422 214423 214424 214425 214426 214427 214428 214429 214430 214431 214432 214433 214434 214435 214436 214437 214438 214439 214440 214441 214442 214443 214444 214445 214446 214447 214448 214449 214450 214451 214452 214453 214454 214455 214456 214457 214458 214459 214460 214461 214462 214463 214464 214465 214466 214467 214468 214469 214470 214471 214472 214473 214474 214475 214476 214477 214478 214479 214480 214481 214482 214483 214484 214485 214486 214487 214488 214489 214490 214491 214492 214493 214494 214495 214496 214497 214498 214499 214500 214501 214502 214503 214504 214505 214506 214507 214508 214509 214510 214511 214512 214513 214514 214515 214516 214517 214518 214519 214520 214521 214522 214523 214524 214525 214526 214527 214528 214529 214530 214531 214532 214533 214534 214535 214536 214537 214538> # SplitBus
mul in 2 <214303 214269> out 1 <214539>  # cond trueterm
const-mul-neg-1 in 1 <214303> out 1 <214540> # cond minuscond
add in 2 <100 214540> out 1 <214541>     # cond negcond
mul in 2 <214541 213745> out 1 <214542>  # cond falseterm
add in 2 <214539 214542> out 1 <214543>  # cond result
add in 2 <214543 104> out 1 <214544>     # ArithBusReq.AddReq(DFG.Conditional,DFG.Constant)
const-mul-ffffffff in 1 <67> out 1 <214545> # multiply-by-constant 4294967295
add in 2 <214544 214545> out 1 <214546>  # 'CmpLT DFG.Add - DFG.Input'
split in 1 <214546> out 238 <214547 214548 214549 214550 214551 214552 214553 214554 214555 214556 214557 214558 214559 214560 214561 214562 214563 214564 214565 214566 214567 214568 214569 214570 214571 214572 214573 214574 214575 214576 214577 214578 214579 214580 214581 214582 214583 214584 214585 214586 214587 214588 214589 214590 214591 214592 214593 214594 214595 214596 214597 214598 214599 214600 214601 214602 214603 214604 214605 214606 214607 214608 214609 214610 214611 214612 214613 214614 214615 214616 214617 214618 214619 214620 214621 214622 214623 214624 214625 214626 214627 214628 214629 214630 214631 214632 214633 214634 214635 214636 214637 214638 214639 214640 214641 214642 214643 214644 214645 214646 214647 214648 214649 214650 214651 214652 214653 214654 214655 214656 214657 214658 214659 214660 214661 214662 214663 214664 214665 214666 214667 214668 214669 214670 214671 214672 214673 214674 214675 214676 214677 214678 214679 214680 214681 214682 214683 214684 214685 214686 214687 214688 214689 214690 214691 214692 214693 214694 214695 214696 214697 214698 214699 214700 214701 214702 214703 214704 214705 214706 214707 214708 214709 214710 214711 214712 214713 214714 214715 214716 214717 214718 214719 214720 214721 214722 214723 214724 214725 214726 214727 214728 214729 214730 214731 214732 214733 214734 214735 214736 214737 214738 214739 214740 214741 214742 214743 214744 214745 214746 214747 214748 214749 214750 214751 214752 214753 214754 214755 214756 214757 214758 214759 214760 214761 214762 214763 214764 214765 214766 214767 214768 214769 214770 214771 214772 214773 214774 214775 214776 214777 214778 214779 214780 214781 214782 214783 214784> # SplitBus
mul in 2 <214578 103> out 1 <214785>     # cond trueterm
const-mul-neg-1 in 1 <214578> out 1 <214786> # cond minuscond
add in 2 <100 214786> out 1 <214787>     # cond negcond
mul in 2 <214787 102> out 1 <214788>     # cond falseterm
add in 2 <214785 214788> out 1 <214789>  # cond result
add in 2 <214543 3084> out 1 <214790>    # ArithBusReq.AddReq(DFG.Conditional,DFG.Negate)
const-mul-ffffffff in 1 <214790> out 1 <214791> # multiply-by-constant 4294967295
add in 2 <67 214791> out 1 <214792>      # 'CmpLT DFG.Input - DFG.Subtract'
split in 1 <214792> out 270 <214793 214794 214795 214796 214797 214798 214799 214800 214801 214802 214803 214804 214805 214806 214807 214808 214809 214810 214811 214812 214813 214814 214815 214816 214817 214818 214819 214820 214821 214822 214823 214824 214825 214826 214827 214828 214829 214830 214831 214832 214833 214834 214835 214836 214837 214838 214839 214840 214841 214842 214843 214844 214845 214846 214847 214848 214849 214850 214851 214852 214853 214854 214855 214856 214857 214858 214859 214860 214861 214862 214863 214864 214865 214866 214867 214868 214869 214870 214871 214872 214873 214874 214875 214876 214877 214878 214879 214880 214881 214882 214883 214884 214885 214886 214887 214888 214889 214890 214891 214892 214893 214894 214895 214896 214897 214898 214899 214900 214901 214902 214903 214904 214905 214906 214907 214908 214909 214910 214911 214912 214913 214914 214915 214916 214917 214918 214919 214920 214921 214922 214923 214924 214925 214926 214927 214928 214929 214930 214931 214932 214933 214934 214935 214936 214937 214938 214939 214940 214941 214942 214943 214944 214945 214946 214947 214948 214949 214950 214951 214952 214953 214954 214955 214956 214957 214958 214959 214960 214961 214962 214963 214964 214965 214966 214967 214968 214969 214970 214971 214972 214973 214974 214975 214976 214977 214978 214979 214980 214981 214982 214983 214984 214985 214986 214987 214988 214989 214990 214991 214992 214993 214994 214995 214996 214997 214998 214999 215000 215001 215002 215003 215004 215005 215006 215007 215008 215009 215010 215011 215012 215013 215014 215015 215016 215017 215018 215019 215020 215021 215022 215023 215024 215025 215026 215027 215028 215029 215030 215031 215032 215033 215034 215035 215036 215037 215038 215039 215040 215041 215042 215043 215044 215045 215046 215047 215048 215049 215050 215051 215052 215053 215054 215055 215056 215057 215058 215059 215060 215061 215062> # SplitBus
mul in 2 <214824 103> out 1 <215063>     # cond trueterm
const-mul-neg-1 in 1 <214824> out 1 <215064> # cond minuscond
add in 2 <100 215064> out 1 <215065>     # cond negcond
mul in 2 <215065 214789> out 1 <215066>  # cond falseterm
add in 2 <215063 215066> out 1 <215067>  # cond result
const-mul-ffffffff in 1 <66> out 1 <215068> # multiply-by-constant 4294967295
add in 2 <66 67> out 1 <215069>          # ArithBusReq.AddReq(DFG.Input,DFG.Input)
add in 2 <215069 215068> out 1 <215070>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <215070> out 1 <215071> # multiply-by-constant 4294967295
add in 2 <215069 215071> out 1 <215072>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <66> out 1 <215073> # multiply-by-constant 4294967295
add in 2 <67 215073> out 1 <215074>      # 'CmpLT DFG.Input - DFG.Input'
split in 1 <215074> out 65 <215075 215076 215077 215078 215079 215080 215081 215082 215083 215084 215085 215086 215087 215088 215089 215090 215091 215092 215093 215094 215095 215096 215097 215098 215099 215100 215101 215102 215103 215104 215105 215106 215107 215108 215109 215110 215111 215112 215113 215114 215115 215116 215117 215118 215119 215120 215121 215122 215123 215124 215125 215126 215127 215128 215129 215130 215131 215132 215133 215134 215135 215136 215137 215138 215139> # SplitBus
mul in 2 <215106 215072> out 1 <215140>  # cond trueterm
const-mul-neg-1 in 1 <215106> out 1 <215141> # cond minuscond
add in 2 <100 215141> out 1 <215142>     # cond negcond
mul in 2 <215142 67> out 1 <215143>      # cond falseterm
add in 2 <215140 215143> out 1 <215144>  # cond result
const-mul-ffffffff in 1 <215144> out 1 <215145> # multiply-by-constant 4294967295
add in 2 <215144 68> out 1 <215146>      # ArithBusReq.AddReq(DFG.Conditional,DFG.Input)
add in 2 <215146 215145> out 1 <215147>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <215147> out 1 <215148> # multiply-by-constant 4294967295
add in 2 <215146 215148> out 1 <215149>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <215144> out 1 <215150> # multiply-by-constant 4294967295
add in 2 <68 215150> out 1 <215151>      # 'CmpLT DFG.Input - DFG.Conditional'
split in 1 <215151> out 131 <215152 215153 215154 215155 215156 215157 215158 215159 215160 215161 215162 215163 215164 215165 215166 215167 215168 215169 215170 215171 215172 215173 215174 215175 215176 215177 215178 215179 215180 215181 215182 215183 215184 215185 215186 215187 215188 215189 215190 215191 215192 215193 215194 215195 215196 215197 215198 215199 215200 215201 215202 215203 215204 215205 215206 215207 215208 215209 215210 215211 215212 215213 215214 215215 215216 215217 215218 215219 215220 215221 215222 215223 215224 215225 215226 215227 215228 215229 215230 215231 215232 215233 215234 215235 215236 215237 215238 215239 215240 215241 215242 215243 215244 215245 215246 215247 215248 215249 215250 215251 215252 215253 215254 215255 215256 215257 215258 215259 215260 215261 215262 215263 215264 215265 215266 215267 215268 215269 215270 215271 215272 215273 215274 215275 215276 215277 215278 215279 215280 215281 215282> # SplitBus
mul in 2 <215183 215149> out 1 <215283>  # cond trueterm
const-mul-neg-1 in 1 <215183> out 1 <215284> # cond minuscond
add in 2 <100 215284> out 1 <215285>     # cond negcond
mul in 2 <215285 68> out 1 <215286>      # cond falseterm
add in 2 <215283 215286> out 1 <215287>  # cond result
const-mul-ffffffff in 1 <215287> out 1 <215288> # multiply-by-constant 4294967295
add in 2 <215287 69> out 1 <215289>      # ArithBusReq.AddReq(DFG.Conditional,DFG.Input)
add in 2 <215289 215288> out 1 <215290>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <215287> out 1 <215291> # multiply-by-constant 4294967295
add in 2 <69 215291> out 1 <215292>      # 'CmpLT DFG.Input - DFG.Conditional'
split in 1 <215292> out 197 <215293 215294 215295 215296 215297 215298 215299 215300 215301 215302 215303 215304 215305 215306 215307 215308 215309 215310 215311 215312 215313 215314 215315 215316 215317 215318 215319 215320 215321 215322 215323 215324 215325 215326 215327 215328 215329 215330 215331 215332 215333 215334 215335 215336 215337 215338 215339 215340 215341 215342 215343 215344 215345 215346 215347 215348 215349 215350 215351 215352 215353 215354 215355 215356 215357 215358 215359 215360 215361 215362 215363 215364 215365 215366 215367 215368 215369 215370 215371 215372 215373 215374 215375 215376 215377 215378 215379 215380 215381 215382 215383 215384 215385 215386 215387 215388 215389 215390 215391 215392 215393 215394 215395 215396 215397 215398 215399 215400 215401 215402 215403 215404 215405 215406 215407 215408 215409 215410 215411 215412 215413 215414 215415 215416 215417 215418 215419 215420 215421 215422 215423 215424 215425 215426 215427 215428 215429 215430 215431 215432 215433 215434 215435 215436 215437 215438 215439 215440 215441 215442 215443 215444 215445 215446 215447 215448 215449 215450 215451 215452 215453 215454 215455 215456 215457 215458 215459 215460 215461 215462 215463 215464 215465 215466 215467 215468 215469 215470 215471 215472 215473 215474 215475 215476 215477 215478 215479 215480 215481 215482 215483 215484 215485 215486 215487 215488 215489> # SplitBus
mul in 2 <215324 215290> out 1 <215490>  # cond trueterm
const-mul-neg-1 in 1 <215324> out 1 <215491> # cond minuscond
add in 2 <100 215491> out 1 <215492>     # cond negcond
mul in 2 <215492 215287> out 1 <215493>  # cond falseterm
add in 2 <215490 215493> out 1 <215494>  # cond result
mul in 2 <215183 215147> out 1 <215495>  # cond trueterm
const-mul-neg-1 in 1 <215183> out 1 <215496> # cond minuscond
add in 2 <100 215496> out 1 <215497>     # cond negcond
mul in 2 <215497 215144> out 1 <215498>  # cond falseterm
add in 2 <215495 215498> out 1 <215499>  # cond result
mul in 2 <215106 215070> out 1 <215500>  # cond trueterm
const-mul-neg-1 in 1 <215106> out 1 <215501> # cond minuscond
add in 2 <100 215501> out 1 <215502>     # cond negcond
mul in 2 <215502 66> out 1 <215503>      # cond falseterm
add in 2 <215500 215503> out 1 <215504>  # cond result
const-mul-ffffffff in 1 <215504> out 1 <215505> # multiply-by-constant 4294967295
add in 2 <215504 215499> out 1 <215506>  # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
add in 2 <215506 215505> out 1 <215507>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <215507> out 1 <215508> # multiply-by-constant 4294967295
add in 2 <215506 215508> out 1 <215509>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <215504> out 1 <215510> # multiply-by-constant 4294967295
add in 2 <215499 215510> out 1 <215511>  # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <215511> out 132 <215512 215513 215514 215515 215516 215517 215518 215519 215520 215521 215522 215523 215524 215525 215526 215527 215528 215529 215530 215531 215532 215533 215534 215535 215536 215537 215538 215539 215540 215541 215542 215543 215544 215545 215546 215547 215548 215549 215550 215551 215552 215553 215554 215555 215556 215557 215558 215559 215560 215561 215562 215563 215564 215565 215566 215567 215568 215569 215570 215571 215572 215573 215574 215575 215576 215577 215578 215579 215580 215581 215582 215583 215584 215585 215586 215587 215588 215589 215590 215591 215592 215593 215594 215595 215596 215597 215598 215599 215600 215601 215602 215603 215604 215605 215606 215607 215608 215609 215610 215611 215612 215613 215614 215615 215616 215617 215618 215619 215620 215621 215622 215623 215624 215625 215626 215627 215628 215629 215630 215631 215632 215633 215634 215635 215636 215637 215638 215639 215640 215641 215642 215643> # SplitBus
mul in 2 <215543 215509> out 1 <215644>  # cond trueterm
const-mul-neg-1 in 1 <215543> out 1 <215645> # cond minuscond
add in 2 <100 215645> out 1 <215646>     # cond negcond
mul in 2 <215646 215499> out 1 <215647>  # cond falseterm
add in 2 <215644 215647> out 1 <215648>  # cond result
const-mul-ffffffff in 1 <215648> out 1 <215649> # multiply-by-constant 4294967295
add in 2 <215648 215494> out 1 <215650>  # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
add in 2 <215650 215649> out 1 <215651>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <215651> out 1 <215652> # multiply-by-constant 4294967295
add in 2 <215650 215652> out 1 <215653>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <215648> out 1 <215654> # multiply-by-constant 4294967295
add in 2 <215494 215654> out 1 <215655>  # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <215655> out 199 <215656 215657 215658 215659 215660 215661 215662 215663 215664 215665 215666 215667 215668 215669 215670 215671 215672 215673 215674 215675 215676 215677 215678 215679 215680 215681 215682 215683 215684 215685 215686 215687 215688 215689 215690 215691 215692 215693 215694 215695 215696 215697 215698 215699 215700 215701 215702 215703 215704 215705 215706 215707 215708 215709 215710 215711 215712 215713 215714 215715 215716 215717 215718 215719 215720 215721 215722 215723 215724 215725 215726 215727 215728 215729 215730 215731 215732 215733 215734 215735 215736 215737 215738 215739 215740 215741 215742 215743 215744 215745 215746 215747 215748 215749 215750 215751 215752 215753 215754 215755 215756 215757 215758 215759 215760 215761 215762 215763 215764 215765 215766 215767 215768 215769 215770 215771 215772 215773 215774 215775 215776 215777 215778 215779 215780 215781 215782 215783 215784 215785 215786 215787 215788 215789 215790 215791 215792 215793 215794 215795 215796 215797 215798 215799 215800 215801 215802 215803 215804 215805 215806 215807 215808 215809 215810 215811 215812 215813 215814 215815 215816 215817 215818 215819 215820 215821 215822 215823 215824 215825 215826 215827 215828 215829 215830 215831 215832 215833 215834 215835 215836 215837 215838 215839 215840 215841 215842 215843 215844 215845 215846 215847 215848 215849 215850 215851 215852 215853 215854> # SplitBus
mul in 2 <215687 215653> out 1 <215855>  # cond trueterm
const-mul-neg-1 in 1 <215687> out 1 <215856> # cond minuscond
add in 2 <100 215856> out 1 <215857>     # cond negcond
mul in 2 <215857 215494> out 1 <215858>  # cond falseterm
add in 2 <215855 215858> out 1 <215859>  # cond result
const-mul-ffffffff in 1 <215859> out 1 <215860> # multiply-by-constant 4294967295
const-mul-ffffffff in 1 <215290> out 1 <215861> # multiply-by-constant 4294967295
add in 2 <215289 215861> out 1 <215862>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
mul in 2 <215324 215862> out 1 <215863>  # cond trueterm
const-mul-neg-1 in 1 <215324> out 1 <215864> # cond minuscond
add in 2 <100 215864> out 1 <215865>     # cond negcond
mul in 2 <215865 69> out 1 <215866>      # cond falseterm
add in 2 <215863 215866> out 1 <215867>  # cond result
const-mul-ffffffff in 1 <215867> out 1 <215868> # multiply-by-constant 4294967295
add in 2 <215867 70> out 1 <215869>      # ArithBusReq.AddReq(DFG.Conditional,DFG.Input)
split in 1 <215869> out 231 <215870 215871 215872 215873 215874 215875 215876 215877 215878 215879 215880 215881 215882 215883 215884 215885 215886 215887 215888 215889 215890 215891 215892 215893 215894 215895 215896 215897 215898 215899 215900 215901 215902 215903 215904 215905 215906 215907 215908 215909 215910 215911 215912 215913 215914 215915 215916 215917 215918 215919 215920 215921 215922 215923 215924 215925 215926 215927 215928 215929 215930 215931 215932 215933 215934 215935 215936 215937 215938 215939 215940 215941 215942 215943 215944 215945 215946 215947 215948 215949 215950 215951 215952 215953 215954 215955 215956 215957 215958 215959 215960 215961 215962 215963 215964 215965 215966 215967 215968 215969 215970 215971 215972 215973 215974 215975 215976 215977 215978 215979 215980 215981 215982 215983 215984 215985 215986 215987 215988 215989 215990 215991 215992 215993 215994 215995 215996 215997 215998 215999 216000 216001 216002 216003 216004 216005 216006 216007 216008 216009 216010 216011 216012 216013 216014 216015 216016 216017 216018 216019 216020 216021 216022 216023 216024 216025 216026 216027 216028 216029 216030 216031 216032 216033 216034 216035 216036 216037 216038 216039 216040 216041 216042 216043 216044 216045 216046 216047 216048 216049 216050 216051 216052 216053 216054 216055 216056 216057 216058 216059 216060 216061 216062 216063 216064 216065 216066 216067 216068 216069 216070 216071 216072 216073 216074 216075 216076 216077 216078 216079 216080 216081 216082 216083 216084 216085 216086 216087 216088 216089 216090 216091 216092 216093 216094 216095 216096 216097 216098 216099 216100> # SplitBus
const-mul-2 in 1 <215901> out 1 <216101> # join source bit 31
add in 2 <215900 216101> out 1 <216102>  # join source bit 30
const-mul-2 in 1 <216102> out 1 <216103> # join
add in 2 <215899 216103> out 1 <216104>  # join source bit 29
const-mul-2 in 1 <216104> out 1 <216105> # join
add in 2 <215898 216105> out 1 <216106>  # join source bit 28
const-mul-2 in 1 <216106> out 1 <216107> # join
add in 2 <215897 216107> out 1 <216108>  # join source bit 27
const-mul-2 in 1 <216108> out 1 <216109> # join
add in 2 <215896 216109> out 1 <216110>  # join source bit 26
const-mul-2 in 1 <216110> out 1 <216111> # join
add in 2 <215895 216111> out 1 <216112>  # join source bit 25
const-mul-2 in 1 <216112> out 1 <216113> # join
add in 2 <215894 216113> out 1 <216114>  # join source bit 24
const-mul-2 in 1 <216114> out 1 <216115> # join
add in 2 <215893 216115> out 1 <216116>  # join source bit 23
const-mul-2 in 1 <216116> out 1 <216117> # join
add in 2 <215892 216117> out 1 <216118>  # join source bit 22
const-mul-2 in 1 <216118> out 1 <216119> # join
add in 2 <215891 216119> out 1 <216120>  # join source bit 21
const-mul-2 in 1 <216120> out 1 <216121> # join
add in 2 <215890 216121> out 1 <216122>  # join source bit 20
const-mul-2 in 1 <216122> out 1 <216123> # join
add in 2 <215889 216123> out 1 <216124>  # join source bit 19
const-mul-2 in 1 <216124> out 1 <216125> # join
add in 2 <215888 216125> out 1 <216126>  # join source bit 18
const-mul-2 in 1 <216126> out 1 <216127> # join
add in 2 <215887 216127> out 1 <216128>  # join source bit 17
const-mul-2 in 1 <216128> out 1 <216129> # join
add in 2 <215886 216129> out 1 <216130>  # join source bit 16
const-mul-2 in 1 <216130> out 1 <216131> # join
add in 2 <215885 216131> out 1 <216132>  # join source bit 15
const-mul-2 in 1 <216132> out 1 <216133> # join
add in 2 <215884 216133> out 1 <216134>  # join source bit 14
const-mul-2 in 1 <216134> out 1 <216135> # join
add in 2 <215883 216135> out 1 <216136>  # join source bit 13
const-mul-2 in 1 <216136> out 1 <216137> # join
add in 2 <215882 216137> out 1 <216138>  # join source bit 12
const-mul-2 in 1 <216138> out 1 <216139> # join
add in 2 <215881 216139> out 1 <216140>  # join source bit 11
const-mul-2 in 1 <216140> out 1 <216141> # join
add in 2 <215880 216141> out 1 <216142>  # join source bit 10
const-mul-2 in 1 <216142> out 1 <216143> # join
add in 2 <215879 216143> out 1 <216144>  # join source bit 9
const-mul-2 in 1 <216144> out 1 <216145> # join
add in 2 <215878 216145> out 1 <216146>  # join source bit 8
const-mul-2 in 1 <216146> out 1 <216147> # join
add in 2 <215877 216147> out 1 <216148>  # join source bit 7
const-mul-2 in 1 <216148> out 1 <216149> # join
add in 2 <215876 216149> out 1 <216150>  # join source bit 6
const-mul-2 in 1 <216150> out 1 <216151> # join
add in 2 <215875 216151> out 1 <216152>  # join source bit 5
const-mul-2 in 1 <216152> out 1 <216153> # join
add in 2 <215874 216153> out 1 <216154>  # join source bit 4
const-mul-2 in 1 <216154> out 1 <216155> # join
add in 2 <215873 216155> out 1 <216156>  # join source bit 3
const-mul-2 in 1 <216156> out 1 <216157> # join
add in 2 <215872 216157> out 1 <216158>  # join source bit 2
const-mul-2 in 1 <216158> out 1 <216159> # join
add in 2 <215871 216159> out 1 <216160>  # join source bit 1
const-mul-2 in 1 <216160> out 1 <216161> # join
add in 2 <215870 216161> out 1 <216162>  # join source bit 0
add in 2 <216162 216162> out 1 <216163>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <215867> out 1 <216164> # multiply-by-constant 4294967295
add in 2 <70 216164> out 1 <216165>      # 'CmpLT DFG.Input - DFG.Conditional'
split in 1 <216165> out 263 <216166 216167 216168 216169 216170 216171 216172 216173 216174 216175 216176 216177 216178 216179 216180 216181 216182 216183 216184 216185 216186 216187 216188 216189 216190 216191 216192 216193 216194 216195 216196 216197 216198 216199 216200 216201 216202 216203 216204 216205 216206 216207 216208 216209 216210 216211 216212 216213 216214 216215 216216 216217 216218 216219 216220 216221 216222 216223 216224 216225 216226 216227 216228 216229 216230 216231 216232 216233 216234 216235 216236 216237 216238 216239 216240 216241 216242 216243 216244 216245 216246 216247 216248 216249 216250 216251 216252 216253 216254 216255 216256 216257 216258 216259 216260 216261 216262 216263 216264 216265 216266 216267 216268 216269 216270 216271 216272 216273 216274 216275 216276 216277 216278 216279 216280 216281 216282 216283 216284 216285 216286 216287 216288 216289 216290 216291 216292 216293 216294 216295 216296 216297 216298 216299 216300 216301 216302 216303 216304 216305 216306 216307 216308 216309 216310 216311 216312 216313 216314 216315 216316 216317 216318 216319 216320 216321 216322 216323 216324 216325 216326 216327 216328 216329 216330 216331 216332 216333 216334 216335 216336 216337 216338 216339 216340 216341 216342 216343 216344 216345 216346 216347 216348 216349 216350 216351 216352 216353 216354 216355 216356 216357 216358 216359 216360 216361 216362 216363 216364 216365 216366 216367 216368 216369 216370 216371 216372 216373 216374 216375 216376 216377 216378 216379 216380 216381 216382 216383 216384 216385 216386 216387 216388 216389 216390 216391 216392 216393 216394 216395 216396 216397 216398 216399 216400 216401 216402 216403 216404 216405 216406 216407 216408 216409 216410 216411 216412 216413 216414 216415 216416 216417 216418 216419 216420 216421 216422 216423 216424 216425 216426 216427 216428> # SplitBus
mul in 2 <216197 216163> out 1 <216429>  # cond trueterm
const-mul-neg-1 in 1 <216197> out 1 <216430> # cond minuscond
add in 2 <100 216430> out 1 <216431>     # cond negcond
mul in 2 <216431 215867> out 1 <216432>  # cond falseterm
add in 2 <216429 216432> out 1 <216433>  # cond result
add in 2 <215859 216433> out 1 <216434>  # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
split in 1 <216434> outplitBus
const-mul-2 in 1 <216466> out 1 <216668> # join source bit 31
add in 2 <216465 216668> out 1 <216669>  # join source bit 30
const-mul-2 in 1 <216669> out 1 <216670> # join
add in 2 <216464 216670> out 1 <216671>  # join source bit 29
const-mul-2 in 1 <216671> out 1 <216672> # join
add in 2 <216463 216672> out 1 <216673>  # join source bit 28
const-mul-2 in 1 <216673> out 1 <216674> # join
add in 2 <216462 216674> out 1 <216675>  # join source bit 27
const-mul-2 in 1 <216675> out 1 <216676> # join
add in 2 <216461 216676> out 1 <216677>  # join source bit 26
const-mul-2 in 1 <216677> out 1 <216678> # join
add in 2 <216460 216678> out 1 <216679>  # join source bit 25
const-mul-2 in 1 <216679> out 1 <216680> # join
add in 2 <216459 216680> out 1 <216681>  # join source bit 24
const-mul-2 in 1 <216681> out 1 <216682> # join
add in 2 <216458 216682> out 1 <216683>  # join source bit 23
const-mul-2 in 1 <216683> out 1 <216684> # join
add in 2 <216457 216684> out 1 <216685>  # join source bit 22
const-mul-2 in 1 <216685> out 1 <216686> # join
add in 2 <216456 216686> out 1 <216687>  # join source bit 21
const-mul-2 in 1 <216687> out 1 <216688> # join
add in 2 <216455 216688> out 1 <216689>  # join source bit 20
const-mul-2 in 1 <216689> out 1 <216690> # join
add in 2 <216454 216690> out 1 <216691>  # join source bit 19
const-mul-2 in 1 <216691> out 1 <216692> # join
add in 2 <216453 216692> out 1 <216693>  # join source bit 18
const-mul-2 in 1 <216693> out 1 <216694> # join
add in 2 <216452 216694> out 1 <216695>  # join source bit 17
const-mul-2 in 1 <216695> out 1 <216696> # join
add in 2 <216451 216696> out 1 <216697>  # join source bit 16
const-mul-2 in 1 <216697> out 1 <216698> # join
add in 2 <216450 216698> out 1 <216699>  # join source bit 15
const-mul-2 in 1 <216699> out 1 <216700> # join
add in 2 <216449 216700> out 1 <216701>  # join source bit 14
const-mul-2 in 1 <216701> out 1 <216702> # join
add in 2 <216448 216702> out 1 <216703>  # join source bit 13
const-mul-2 in 1 <216703> out 1 <216704> # join
add in 2 <216447 216704> out 1 <216705>  # join source bit 12
const-mul-2 in 1 <216705> out 1 <216706> # join
add in 2 <216446 216706> out 1 <216707>  # join source bit 11
const-mul-2 in 1 <216707> out 1 <216708> # join
add in 2 <216445 216708> out 1 <216709>  # join source bit 10
const-mul-2 in 1 <216709> out 1 <216710> # join
add in 2 <216444 216710> out 1 <216711>  # join source bit 9
const-mul-2 in 1 <216711> out 1 <216712> # join
add in 2 <216443 216712> out 1 <216713>  # join source bit 8
const-mul-2 in 1 <216713> out 1 <216714> # join
add in 2 <216442 216714> out 1 <216715>  # join source bit 7
const-mul-2 in 1 <216715> out 1 <216716> # join
add in 2 <216441 216716> out 1 <216717>  # join source bit 6
const-mul-2 in 1 <216717> out 1 <216718> # join
add in 2 <216440 216718> out 1 <216719>  # join source bit 5
const-mul-2 in 1 <216719> out 1 <216720> # join
add in 2 <216439 216720> out 1 <216721>  # join source bit 4
const-mul-2 in 1 <216721> out 1 <216722> # join
add in 2 <216438 216722> out 1 <216723>  # join source bit 3
const-mul-2 in 1 <216723> out 1 <216724> # join
add in 2 <216437 216724> out 1 <216725>  # join source bit 2
const-mul-2 in 1 <216725> out 1 <216726> # join
add in 2 <216436 216726> out 1 <216727>  # join source bit 1
const-mul-2 in 1 <216727> out 1 <216728> # join
add in 2 <216435 216728> out 1 <216729>  # join source bit 0
add in 2 <216729 216729> out 1 <216730>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <215859> out 1 <216731> # multiply-by-constant 4294967295
add in 2 <216433 216731> out 1 <216732>  # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <216732> outplitBus
mul in 2 <216764 216730> out 1 <216998>  # cond trueterm
const-mul-neg-1 in 1 <216764> out 1 <216999> # cond minuscond
add in 2 <100 216999> out 1 <217000>     # cond negcond
mul in 2 <217000 215859> out 1 <217001>  # cond falseterm
add in 2 <216998 217001> out 1 <217002>  # cond result
mul in 2 <215687 215651> out 1 <217003>  # cond trueterm
const-mul-neg-1 in 1 <215687> out 1 <217004> # cond minuscond
add in 2 <100 217004> out 1 <217005>     # cond negcond
mul in 2 <217005 215648> out 1 <217006>  # cond falseterm
add in 2 <217003 217006> out 1 <217007>  # cond result
mul in 2 <215543 215507> out 1 <217008>  # cond trueterm
const-mul-neg-1 in 1 <215543> out 1 <217009> # cond minuscond
add in 2 <100 217009> out 1 <217010>     # cond negcond
mul in 2 <217010 215504> out 1 <217011>  # cond falseterm
add in 2 <217008 217011> out 1 <217012>  # cond result
const-mul-ffffffff in 1 <217012> out 1 <217013> # multiply-by-constant 4294967295
add in 2 <217012 217007> out 1 <217014>  # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
add in 2 <217014 217013> out 1 <217015>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <217015> out 1 <217016> # multiply-by-constant 4294967295
add in 2 <217014 217016> out 1 <217017>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <217012> out 1 <217018> # multiply-by-constant 4294967295
add in 2 <217007 217018> out 1 <217019>  # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <217019> out 200 <217020 217021 217022 217023 217024 217025 217026 217027 217028 217029 217030 217031 217032 217033 217034 217035 217036 217037 217038 217039 217040 217041 217042 217043 217044 217045 217046 217047 217048 217049 217050 217051 217052 217053 217054 217055 217056 217057 217058 217059 217060 217061 217062 217063 217064 217065 217066 217067 217068 217069 217070 217071 217072 217073 217074 217075 217076 217077 217078 217079 217080 217081 217082 217083 217084 217085 217086 217087 217088 217089 217090 217091 217092 217093 217094 217095 217096 217097 217098 217099 217100 217101 217102 217103 217104 217105 217106 217107 217108 217109 217110 217111 217112 217113 217114 217115 217116 217117 217118 217119 217120 217121 217122 217123 217124 217125 217126 217127 217128 217129 217130 217131 217132 217133 217134 217135 217136 217137 217138 217139 217140 217141 217142 217143 217144 217145 217146 217147 217148 217149 217150 217151 217152 217153 217154 217155 217156 217157 217158 217159 217160 217161 217162 217163 217164 217165 217166 217167 217168 217169 217170 217171 217172 217173 217174 217175 217176 217177 217178 217179 217180 217181 217182 217183 217184 217185 217186 217187 217188 217189 217190 217191 217192 217193 217194 217195 217196 217197 217198 217199 217200 217201 217202 217203 217204 217205 217206 217207 217208 217209 217210 217211 217212 217213 217214 217215 217216 217217 217218 217219> # SplitBus
mul in 2 <217051 217017> out 1 <217220>  # cond trueterm
const-mul-neg-1 in 1 <217051> out 1 <217221> # cond minuscond
add in 2 <100 217221> out 1 <217222>     # cond negcond
mul in 2 <217222 217007> out 1 <217223>  # cond falseterm
add in 2 <217220 217223> out 1 <217224>  # cond result
const-mul-ffffffff in 1 <217224> out 1 <217225> # multiply-by-constant 4294967295
add in 2 <217224 217002> out 1 <217226>  # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
split in 1 <217226> outplitBus
const-mul-2 in 1 <217258> out 1 <217462> # join source bit 31
add in 2 <217257 217462> out 1 <217463>  # join source bit 30
const-mul-2 in 1 <217463> out 1 <217464> # join
add in 2 <217256 217464> out 1 <217465>  # join source bit 29
const-mul-2 in 1 <217465> out 1 <217466> # join
add in 2 <217255 217466> out 1 <217467>  # join source bit 28
const-mul-2 in 1 <217467> out 1 <217468> # join
add in 2 <217254 217468> out 1 <217469>  # join source bit 27
const-mul-2 in 1 <217469> out 1 <217470> # join
add in 2 <217253 217470> out 1 <217471>  # join source bit 26
const-mul-2 in 1 <217471> out 1 <217472> # join
add in 2 <217252 217472> out 1 <217473>  # join source bit 25
const-mul-2 in 1 <217473> out 1 <217474> # join
add in 2 <217251 217474> out 1 <217475>  # join source bit 24
const-mul-2 in 1 <217475> out 1 <217476> # join
add in 2 <217250 217476> out 1 <217477>  # join source bit 23
const-mul-2 in 1 <217477> out 1 <217478> # join
add in 2 <217249 217478> out 1 <217479>  # join source bit 22
const-mul-2 in 1 <217479> out 1 <217480> # join
add in 2 <217248 217480> out 1 <217481>  # join source bit 21
const-mul-2 in 1 <217481> out 1 <217482> # join
add in 2 <217247 217482> out 1 <217483>  # join source bit 20
const-mul-2 in 1 <217483> out 1 <217484> # join
add in 2 <217246 217484> out 1 <217485>  # join source bit 19
const-mul-2 in 1 <217485> out 1 <217486> # join
add in 2 <217245 217486> out 1 <217487>  # join source bit 18
const-mul-2 in 1 <217487> out 1 <217488> # join
add in 2 <217244 217488> out 1 <217489>  # join source bit 17
const-mul-2 in 1 <217489> out 1 <217490> # join
add in 2 <217243 217490> out 1 <217491>  # join source bit 16
const-mul-2 in 1 <217491> out 1 <217492> # join
add in 2 <217242 217492> out 1 <217493>  # join source bit 15
const-mul-2 in 1 <217493> out 1 <217494> # join
add in 2 <217241 217494> out 1 <217495>  # join source bit 14
const-mul-2 in 1 <217495> out 1 <217496> # join
add in 2 <217240 217496> out 1 <217497>  # join source bit 13
const-mul-2 in 1 <217497> out 1 <217498> # join
add in 2 <217239 217498> out 1 <217499>  # join source bit 12
const-mul-2 in 1 <217499> out 1 <217500> # join
add in 2 <217238 217500> out 1 <217501>  # join source bit 11
const-mul-2 in 1 <217501> out 1 <217502> # join
add in 2 <217237 217502> out 1 <217503>  # join source bit 10
const-mul-2 in 1 <217503> out 1 <217504> # join
add in 2 <217236 217504> out 1 <217505>  # join source bit 9
const-mul-2 in 1 <217505> out 1 <217506> # join
add in 2 <217235 217506> out 1 <217507>  # join source bit 8
const-mul-2 in 1 <217507> out 1 <217508> # join
add in 2 <217234 217508> out 1 <217509>  # join source bit 7
const-mul-2 in 1 <217509> out 1 <217510> # join
add in 2 <217233 217510> out 1 <217511>  # join source bit 6
const-mul-2 in 1 <217511> out 1 <217512> # join
add in 2 <217232 217512> out 1 <217513>  # join source bit 5
const-mul-2 in 1 <217513> out 1 <217514> # join
add in 2 <217231 217514> out 1 <217515>  # join source bit 4
const-mul-2 in 1 <217515> out 1 <217516> # join
add in 2 <217230 217516> out 1 <217517>  # join source bit 3
const-mul-2 in 1 <217517> out 1 <217518> # join
add in 2 <217229 217518> out 1 <217519>  # join source bit 2
const-mul-2 in 1 <217519> out 1 <217520> # join
add in 2 <217228 217520> out 1 <217521>  # join source bit 1
const-mul-2 in 1 <217521> out 1 <217522> # join
add in 2 <217227 217522> out 1 <217523>  # join source bit 0
add in 2 <217523 217523> out 1 <217524>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <217524> out 1 <217525> # multiply-by-constant 4294967295
add in 2 <217226 217525> out 1 <217526>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <217224> out 1 <217527> # multiply-by-constant 4294967295
add in 2 <217002 217527> out 1 <217528>  # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <217528> outplitBus
mul in 2 <217560 217526> out 1 <217796>  # cond trueterm
const-mul-neg-1 in 1 <217560> out 1 <217797> # cond minuscond
add in 2 <100 217797> out 1 <217798>     # cond negcond
mul in 2 <217798 217002> out 1 <217799>  # cond falseterm
add in 2 <217796 217799> out 1 <217800>  # cond result
add in 2 <217800 104> out 1 <217801>     # ArithBusReq.AddReq(DFG.Conditional,DFG.Constant)
const-mul-ffffffff in 1 <68> out 1 <217802> # multiply-by-constant 4294967295
add in 2 <217801 217802> out 1 <217803>  # 'CmpLT DFG.Add - DFG.Input'
split in 1 <217803> out 238 <217804 217805 217806 217807 217808 217809 217810 217811 217812 217813 217814 217815 217816 217817 217818 217819 217820 217821 217822 217823 217824 217825 217826 217827 217828 217829 217830 217831 217832 217833 217834 217835 217836 217837 217838 217839 217840 217841 217842 217843 217844 217845 217846 217847 217848 217849 217850 217851 217852 217853 217854 217855 217856 217857 217858 217859 217860 217861 217862 217863 217864 217865 217866 217867 217868 217869 217870 217871 217872 217873 217874 217875 217876 217877 217878 217879 217880 217881 217882 217883 217884 217885 217886 217887 217888 217889 217890 217891 217892 217893 217894 217895 217896 217897 217898 217899 217900 217901 217902 217903 217904 217905 217906 217907 217908 217909 217910 217911 217912 217913 217914 217915 217916 217917 217918 217919 217920 217921 217922 217923 217924 217925 217926 217927 217928 217929 217930 217931 217932 217933 217934 217935 217936 217937 217938 217939 217940 217941 217942 217943 217944 217945 217946 217947 217948 217949 217950 217951 217952 217953 217954 217955 217956 217957 217958 217959 217960 217961 217962 217963 217964 217965 217966 217967 217968 217969 217970 217971 217972 217973 217974 217975 217976 217977 217978 217979 217980 217981 217982 217983 217984 217985 217986 217987 217988 217989 217990 217991 217992 217993 217994 217995 217996 217997 217998 217999 218000 218001 218002 218003 218004 218005 218006 218007 218008 218009 218010 218011 218012 218013 218014 218015 218016 218017 218018 218019 218020 218021 218022 218023 218024 218025 218026 218027 218028 218029 218030 218031 218032 218033 218034 218035 218036 218037 218038 218039 218040 218041> # SplitBus
mul in 2 <217835 103> out 1 <218042>     # cond trueterm
const-mul-neg-1 in 1 <217835> out 1 <218043> # cond minuscond
add in 2 <100 218043> out 1 <218044>     # cond negcond
mul in 2 <218044 102> out 1 <218045>     # cond falseterm
add in 2 <218042 218045> out 1 <218046>  # cond result
add in 2 <217800 3084> out 1 <218047>    # ArithBusReq.AddReq(DFG.Conditional,DFG.Negate)
const-mul-ffffffff in 1 <218047> out 1 <218048> # multiply-by-constant 4294967295
add in 2 <68 218048> out 1 <218049>      # 'CmpLT DFG.Input - DFG.Subtract'
split in 1 <218049> out 270 <218050 218051 218052 218053 218054 218055 218056 218057 218058 218059 218060 218061 218062 218063 218064 218065 218066 218067 218068 218069 218070 218071 218072 218073 218074 218075 218076 218077 218078 218079 218080 218081 218082 218083 218084 218085 218086 218087 218088 218089 218090 218091 218092 218093 218094 218095 218096 218097 218098 218099 218100 218101 218102 218103 218104 218105 218106 218107 218108 218109 218110 218111 218112 218113 218114 218115 218116 218117 218118 218119 218120 218121 218122 218123 218124 218125 218126 218127 218128 218129 218130 218131 218132 218133 218134 218135 218136 218137 218138 218139 218140 218141 218142 218143 218144 218145 218146 218147 218148 218149 218150 218151 218152 218153 218154 218155 218156 218157 218158 218159 218160 218161 218162 218163 218164 218165 218166 218167 218168 218169 218170 218171 218172 218173 218174 218175 218176 218177 218178 218179 218180 218181 218182 218183 218184 218185 218186 218187 218188 218189 218190 218191 218192 218193 218194 218195 218196 218197 218198 218199 218200 218201 218202 218203 218204 218205 218206 218207 218208 218209 218210 218211 218212 218213 218214 218215 218216 218217 218218 218219 218220 218221 218222 218223 218224 218225 218226 218227 218228 218229 218230 218231 218232 218233 218234 218235 218236 218237 218238 218239 218240 218241 218242 218243 218244 218245 218246 218247 218248 218249 218250 218251 218252 218253 218254 218255 218256 218257 218258 218259 218260 218261 218262 218263 218264 218265 218266 218267 218268 218269 218270 218271 218272 218273 218274 218275 218276 218277 218278 218279 218280 218281 218282 218283 218284 218285 218286 218287 218288 218289 218290 218291 218292 218293 218294 218295 218296 218297 218298 218299 218300 218301 218302 218303 218304 218305 218306 218307 218308 218309 218310 218311 218312 218313 218314 218315 218316 218317 218318 218319> # SplitBus
mul in 2 <218081 103> out 1 <218320>     # cond trueterm
const-mul-neg-1 in 1 <218081> out 1 <218321> # cond minuscond
add in 2 <100 218321> out 1 <218322>     # cond negcond
mul in 2 <218322 218046> out 1 <218323>  # cond falseterm
add in 2 <218320 218323> out 1 <218324>  # cond result
const-mul-ffffffff in 1 <67> out 1 <218325> # multiply-by-constant 4294967295
add in 2 <67 68> out 1 <218326>          # ArithBusReq.AddReq(DFG.Input,DFG.Input)
add in 2 <218326 218325> out 1 <218327>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <218327> out 1 <218328> # multiply-by-constant 4294967295
add in 2 <218326 218328> out 1 <218329>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <67> out 1 <218330> # multiply-by-constant 4294967295
add in 2 <68 218330> out 1 <218331>      # 'CmpLT DFG.Input - DFG.Input'
split in 1 <218331> out 65 <218332 218333 218334 218335 218336 218337 218338 218339 218340 218341 218342 218343 218344 218345 218346 218347 218348 218349 218350 218351 218352 218353 218354 218355 218356 218357 218358 218359 218360 218361 218362 218363 218364 218365 218366 218367 218368 218369 218370 218371 218372 218373 218374 218375 218376 218377 218378 218379 218380 218381 218382 218383 218384 218385 218386 218387 218388 218389 218390 218391 218392 218393 218394 218395 218396> # SplitBus
mul in 2 <218363 218329> out 1 <218397>  # cond trueterm
const-mul-neg-1 in 1 <218363> out 1 <218398> # cond minuscond
add in 2 <100 218398> out 1 <218399>     # cond negcond
mul in 2 <218399 68> out 1 <218400>      # cond falseterm
add in 2 <218397 218400> out 1 <218401>  # cond result
const-mul-ffffffff in 1 <218401> out 1 <218402> # multiply-by-constant 4294967295
add in 2 <218401 69> out 1 <218403>      # ArithBusReq.AddReq(DFG.Conditional,DFG.Input)
add in 2 <218403 218402> out 1 <218404>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <218404> out 1 <218405> # multiply-by-constant 4294967295
add in 2 <218403 218405> out 1 <218406>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <218401> out 1 <218407> # multiply-by-constant 4294967295
add in 2 <69 218407> out 1 <218408>      # 'CmpLT DFG.Input - DFG.Conditional'
split in 1 <218408> out 131 <218409 218410 218411 218412 218413 218414 218415 218416 218417 218418 218419 218420 218421 218422 218423 218424 218425 218426 218427 218428 218429 218430 218431 218432 218433 218434 218435 218436 218437 218438 218439 218440 218441 218442 218443 218444 218445 218446 218447 218448 218449 218450 218451 218452 218453 218454 218455 218456 218457 218458 218459 218460 218461 218462 218463 218464 218465 218466 218467 218468 218469 218470 218471 218472 218473 218474 218475 218476 218477 218478 218479 218480 218481 218482 218483 218484 218485 218486 218487 218488 218489 218490 218491 218492 218493 218494 218495 218496 218497 218498 218499 218500 218501 218502 218503 218504 218505 218506 218507 218508 218509 218510 218511 218512 218513 218514 218515 218516 218517 218518 218519 218520 218521 218522 218523 218524 218525 218526 218527 218528 218529 218530 218531 218532 218533 218534 218535 218536 218537 218538 218539> # SplitBus
mul in 2 <218440 218406> out 1 <218540>  # cond trueterm
const-mul-neg-1 in 1 <218440> out 1 <218541> # cond minuscond
add in 2 <100 218541> out 1 <218542>     # cond negcond
mul in 2 <218542 69> out 1 <218543>      # cond falseterm
add in 2 <218540 218543> out 1 <218544>  # cond result
const-mul-ffffffff in 1 <218544> out 1 <218545> # multiply-by-constant 4294967295
add in 2 <218544 70> out 1 <218546>      # ArithBusReq.AddReq(DFG.Conditional,DFG.Input)
add in 2 <218546 218545> out 1 <218547>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <218544> out 1 <218548> # multiply-by-constant 4294967295
add in 2 <70 218548> out 1 <218549>      # 'CmpLT DFG.Input - DFG.Conditional'
split in 1 <218549> out 197 <218550 218551 218552 218553 218554 218555 218556 218557 218558 218559 218560 218561 218562 218563 218564 218565 218566 218567 218568 218569 218570 218571 218572 218573 218574 218575 218576 218577 218578 218579 218580 218581 218582 218583 218584 218585 218586 218587 218588 218589 218590 218591 218592 218593 218594 218595 218596 218597 218598 218599 218600 218601 218602 218603 218604 218605 218606 218607 218608 218609 218610 218611 218612 218613 218614 218615 218616 218617 218618 218619 218620 218621 218622 218623 218624 218625 218626 218627 218628 218629 218630 218631 218632 218633 218634 218635 218636 218637 218638 218639 218640 218641 218642 218643 218644 218645 218646 218647 218648 218649 218650 218651 218652 218653 218654 218655 218656 218657 218658 218659 218660 218661 218662 218663 218664 218665 218666 218667 218668 218669 218670 218671 218672 218673 218674 218675 218676 218677 218678 218679 218680 218681 218682 218683 218684 218685 218686 218687 218688 218689 218690 218691 218692 218693 218694 218695 218696 218697 218698 218699 218700 218701 218702 218703 218704 218705 218706 218707 218708 218709 218710 218711 218712 218713 218714 218715 218716 218717 218718 218719 218720 218721 218722 218723 218724 218725 218726 218727 218728 218729 218730 218731 218732 218733 218734 218735 218736 218737 218738 218739 218740 218741 218742 218743 218744 218745 218746> # SplitBus
mul in 2 <218581 218547> out 1 <218747>  # cond trueterm
const-mul-neg-1 in 1 <218581> out 1 <218748> # cond minuscond
add in 2 <100 218748> out 1 <218749>     # cond negcond
mul in 2 <218749 218544> out 1 <218750>  # cond falseterm
add in 2 <218747 218750> out 1 <218751>  # cond result
mul in 2 <218440 218404> out 1 <218752>  # cond trueterm
const-mul-neg-1 in 1 <218440> out 1 <218753> # cond minuscond
add in 2 <100 218753> out 1 <218754>     # cond negcond
mul in 2 <218754 218401> out 1 <218755>  # cond falseterm
add in 2 <218752 218755> out 1 <218756>  # cond result
mul in 2 <218363 218327> out 1 <218757>  # cond trueterm
const-mul-neg-1 in 1 <218363> out 1 <218758> # cond minuscond
add in 2 <100 218758> out 1 <218759>     # cond negcond
mul in 2 <218759 67> out 1 <218760>      # cond falseterm
add in 2 <218757 218760> out 1 <218761>  # cond result
const-mul-ffffffff in 1 <218761> out 1 <218762> # multiply-by-constant 4294967295
add in 2 <218761 218756> out 1 <218763>  # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
add in 2 <218763 218762> out 1 <218764>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <218764> out 1 <218765> # multiply-by-constant 4294967295
add in 2 <218763 218765> out 1 <218766>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <218761> out 1 <218767> # multiply-by-constant 4294967295
add in 2 <218756 218767> out 1 <218768>  # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <218768> out 132 <218769 218770 218771 218772 218773 218774 218775 218776 218777 218778 218779 218780 218781 218782 218783 218784 218785 218786 218787 218788 218789 218790 218791 218792 218793 218794 218795 218796 218797 218798 218799 218800 218801 218802 218803 218804 218805 218806 218807 218808 218809 218810 218811 218812 218813 218814 218815 218816 218817 218818 218819 218820 218821 218822 218823 218824 218825 218826 218827 218828 218829 218830 218831 218832 218833 218834 218835 218836 218837 218838 218839 218840 218841 218842 218843 218844 218845 218846 218847 218848 218849 218850 218851 218852 218853 218854 218855 218856 218857 218858 218859 218860 218861 218862 218863 218864 218865 218866 218867 218868 218869 218870 218871 218872 218873 218874 218875 218876 218877 218878 218879 218880 218881 218882 218883 218884 218885 218886 218887 218888 218889 218890 218891 218892 218893 218894 218895 218896 218897 218898 218899 218900> # SplitBus
mul in 2 <218800 218766> out 1 <218901>  # cond trueterm
const-mul-neg-1 in 1 <218800> out 1 <218902> # cond minuscond
add in 2 <100 218902> out 1 <218903>     # cond negcond
mul in 2 <218903 218756> out 1 <218904>  # cond falseterm
add in 2 <218901 218904> out 1 <218905>  # cond result
const-mul-ffffffff in 1 <218905> out 1 <218906> # multiply-by-constant 4294967295
add in 2 <218905 218751> out 1 <218907>  # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
add in 2 <218907 218906> out 1 <218908>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <218908> out 1 <218909> # multiply-by-constant 4294967295
add in 2 <218907 218909> out 1 <218910>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <218905> out 1 <218911> # multiply-by-constant 4294967295
add in 2 <218751 218911> out 1 <218912>  # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <218912> out 199 <218913 218914 218915 218916 218917 218918 218919 218920 218921 218922 218923 218924 218925 218926 218927 218928 218929 218930 218931 218932 218933 218934 218935 218936 218937 218938 218939 218940 218941 218942 218943 218944 218945 218946 218947 218948 218949 218950 218951 218952 218953 218954 218955 218956 218957 218958 218959 218960 218961 218962 218963 218964 218965 218966 218967 218968 218969 218970 218971 218972 218973 218974 218975 218976 218977 218978 218979 218980 218981 218982 218983 218984 218985 218986 218987 218988 218989 218990 218991 218992 218993 218994 218995 218996 218997 218998 218999 219000 219001 219002 219003 219004 219005 219006 219007 219008 219009 219010 219011 219012 219013 219014 219015 219016 219017 219018 219019 219020 219021 219022 219023 219024 219025 219026 219027 219028 219029 219030 219031 219032 219033 219034 219035 219036 219037 219038 219039 219040 219041 219042 219043 219044 219045 219046 219047 219048 219049 219050 219051 219052 219053 219054 219055 219056 219057 219058 219059 219060 219061 219062 219063 219064 219065 219066 219067 219068 219069 219070 219071 219072 219073 219074 219075 219076 219077 219078 219079 219080 219081 219082 219083 219084 219085 219086 219087 219088 219089 219090 219091 219092 219093 219094 219095 219096 219097 219098 219099 219100 219101 219102 219103 219104 219105 219106 219107 219108 219109 219110 219111> # SplitBus
mul in 2 <218944 218910> out 1 <219112>  # cond trueterm
const-mul-neg-1 in 1 <218944> out 1 <219113> # cond minuscond
add in 2 <100 219113> out 1 <219114>     # cond negcond
mul in 2 <219114 218751> out 1 <219115>  # cond falseterm
add in 2 <219112 219115> out 1 <219116>  # cond result
const-mul-ffffffff in 1 <219116> out 1 <219117> # multiply-by-constant 4294967295
const-mul-ffffffff in 1 <218547> out 1 <219118> # multiply-by-constant 4294967295
add in 2 <218546 219118> out 1 <219119>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
mul in 2 <218581 219119> out 1 <219120>  # cond trueterm
const-mul-neg-1 in 1 <218581> out 1 <219121> # cond minuscond
add in 2 <100 219121> out 1 <219122>     # cond negcond
mul in 2 <219122 70> out 1 <219123>      # cond falseterm
add in 2 <219120 219123> out 1 <219124>  # cond result
const-mul-ffffffff in 1 <219124> out 1 <219125> # multiply-by-constant 4294967295
add in 2 <219124 71> out 1 <219126>      # ArithBusReq.AddReq(DFG.Conditional,DFG.Input)
split in 1 <219126> outplitBus
const-mul-2 in 1 <219158> out 1 <219358> # join source bit 31
add in 2 <219157 219358> out 1 <219359>  # join source bit 30
const-mul-2 in 1 <219359> out 1 <219360> # join
add in 2 <219156 219360> out 1 <219361>  # join source bit 29
const-mul-2 in 1 <219361> out 1 <219362> # join
add in 2 <219155 219362> out 1 <219363>  # join source bit 28
const-mul-2 in 1 <219363> out 1 <219364> # join
add in 2 <219154 219364> out 1 <219365>  # join source bit 27
const-mul-2 in 1 <219365> out 1 <219366> # join
add in 2 <219153 219366> out 1 <219367>  # join source bit 26
const-mul-2 in 1 <219367> out 1 <219368> # join
add in 2 <219152 219368> out 1 <219369>  # join source bit 25
const-mul-2 in 1 <219369> out 1 <219370> # join
add in 2 <219151 219370> out 1 <219371>  # join source bit 24
const-mul-2 in 1 <219371> out 1 <219372> # join
add in 2 <219150 219372> out 1 <219373>  # join source bit 23
const-mul-2 in 1 <219373> out 1 <219374> # join
add in 2 <219149 219374> out 1 <219375>  # join source bit 22
const-mul-2 in 1 <219375> out 1 <219376> # join
add in 2 <219148 219376> out 1 <219377>  # join source bit 21
const-mul-2 in 1 <219377> out 1 <219378> # join
add in 2 <219147 219378> out 1 <219379>  # join source bit 20
const-mul-2 in 1 <219379> out 1 <219380> # join
add in 2 <219146 219380> out 1 <219381>  # join source bit 19
const-mul-2 in 1 <219381> out 1 <219382> # join
add in 2 <219145 219382> out 1 <219383>  # join source bit 18
const-mul-2 in 1 <219383> out 1 <219384> # join
add in 2 <219144 219384> out 1 <219385>  # join source bit 17
const-mul-2 in 1 <219385> out 1 <219386> # join
add in 2 <219143 219386> out 1 <219387>  # join source bit 16
const-mul-2 in 1 <219387> out 1 <219388> # join
add in 2 <219142 219388> out 1 <219389>  # join source bit 15
const-mul-2 in 1 <219389> out 1 <219390> # join
add in 2 <219141 219390> out 1 <219391>  # join source bit 14
const-mul-2 in 1 <219391> out 1 <219392> # join
add in 2 <219140 219392> out 1 <219393>  # join source bit 13
const-mul-2 in 1 <219393> out 1 <219394> # join
add in 2 <219139 219394> out 1 <219395>  # join source bit 12
const-mul-2 in 1 <219395> out 1 <219396> # join
add in 2 <219138 219396> out 1 <219397>  # join source bit 11
const-mul-2 in 1 <219397> out 1 <219398> # join
add in 2 <219137 219398> out 1 <219399>  # join source bit 10
const-mul-2 in 1 <219399> out 1 <219400> # join
add in 2 <219136 219400> out 1 <219401>  # join source bit 9
const-mul-2 in 1 <219401> out 1 <219402> # join
add in 2 <219135 219402> out 1 <219403>  # join source bit 8
const-mul-2 in 1 <219403> out 1 <219404> # join
add in 2 <219134 219404> out 1 <219405>  # join source bit 7
const-mul-2 in 1 <219405> out 1 <219406> # join
add in 2 <219133 219406> out 1 <219407>  # join source bit 6
const-mul-2 in 1 <219407> out 1 <219408> # join
add in 2 <219132 219408> out 1 <219409>  # join source bit 5
const-mul-2 in 1 <219409> out 1 <219410> # join
add in 2 <219131 219410> out 1 <219411>  # join source bit 4
const-mul-2 in 1 <219411> out 1 <219412> # join
add in 2 <219130 219412> out 1 <219413>  # join source bit 3
const-mul-2 in 1 <219413> out 1 <219414> # join
add in 2 <219129 219414> out 1 <219415>  # join source bit 2
const-mul-2 in 1 <219415> out 1 <219416> # join
add in 2 <219128 219416> out 1 <219417>  # join source bit 1
const-mul-2 in 1 <219417> out 1 <219418> # join
add in 2 <219127 219418> out 1 <219419>  # join source bit 0
add in 2 <219419 219419> out 1 <219420>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <219124> out 1 <219421> # multiply-by-constant 4294967295
add in 2 <71 219421> out 1 <219422>      # 'CmpLT DFG.Input - DFG.Conditional'
split in 1 <219422> outplitBus
mul in 2 <219454 219420> out 1 <219686>  # cond trueterm
const-mul-neg-1 in 1 <219454> out 1 <219687> # cond minuscond
add in 2 <100 219687> out 1 <219688>     # cond negcond
mul in 2 <219688 219124> out 1 <219689>  # cond falseterm
add in 2 <219686 219689> out 1 <219690>  # cond result
add in 2 <219116 219690> out 1 <219691>  # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
split in 1 <219691> out 233 <219692 219693 219694 219695 219696 219697 219698 219699 219700 219701 219702 219703 219704 219705 219706 219707 219708 219709 219710 219711 219712 219713 219714 219715 219716 219717 219718 219719 219720 219721 219722 219723 219724 219725 219726 219727 219728 219729 219730 219731 219732 219733 219734 219735 219736 219737 219738 219739 219740 219741 219742 219743 219744 219745 219746 219747 219748 219749 219750 219751 219752 219753 219754 219755 219756 219757 219758 219759 219760 219761 219762 219763 219764 219765 219766 219767 219768 219769 219770 219771 219772 219773 219774 219775 219776 219777 219778 219779 219780 219781 219782 219783 219784 219785 219786 219787 219788 219789 219790 219791 219792 219793 219794 219795 219796 219797 219798 219799 219800 219801 219802 219803 219804 219805 219806 219807 219808 219809 219810 219811 219812 219813 219814 219815 219816 219817 219818 219819 219820 219821 219822 219823 219824 219825 219826 219827 219828 219829 219830 219831 219832 219833 219834 219835 219836 219837 219838 219839 219840 219841 219842 219843 219844 219845 219846 219847 219848 219849 219850 219851 219852 219853 219854 219855 219856 219857 219858 219859 219860 219861 219862 219863 219864 219865 219866 219867 219868 219869 219870 219871 219872 219873 219874 219875 219876 219877 219878 219879 219880 219881 219882 219883 219884 219885 219886 219887 219888 219889 219890 219891 219892 219893 219894 219895 219896 219897 219898 219899 219900 219901 219902 219903 219904 219905 219906 219907 219908 219909 219910 219911 219912 219913 219914 219915 219916 219917 219918 219919 219920 219921 219922 219923 219924> # SplitBus
const-mul-2 in 1 <219723> out 1 <219925> # join source bit 31
add in 2 <219722 219925> out 1 <219926>  # join source bit 30
const-mul-2 in 1 <219926> out 1 <219927> # join
add in 2 <219721 219927> out 1 <219928>  # join source bit 29
const-mul-2 in 1 <219928> out 1 <219929> # join
add in 2 <219720 219929> out 1 <219930>  # join source bit 28
const-mul-2 in 1 <219930> out 1 <219931> # join
add in 2 <219719 219931> out 1 <219932>  # join source bit 27
const-mul-2 in 1 <219932> out 1 <219933> # join
add in 2 <219718 219933> out 1 <219934>  # join source bit 26
const-mul-2 in 1 <219934> out 1 <219935> # join
add in 2 <219717 219935> out 1 <219936>  # join source bit 25
const-mul-2 in 1 <219936> out 1 <219937> # join
add in 2 <219716 219937> out 1 <219938>  # join source bit 24
const-mul-2 in 1 <219938> out 1 <219939> # join
add in 2 <219715 219939> out 1 <219940>  # join source bit 23
const-mul-2 in 1 <219940> out 1 <219941> # join
add in 2 <219714 219941> out 1 <219942>  # join source bit 22
const-mul-2 in 1 <219942> out 1 <219943> # join
add in 2 <219713 219943> out 1 <219944>  # join source bit 21
const-mul-2 in 1 <219944> out 1 <219945> # join
add in 2 <219712 219945> out 1 <219946>  # join source bit 20
const-mul-2 in 1 <219946> out 1 <219947> # join
add in 2 <219711 219947> out 1 <219948>  # join source bit 19
const-mul-2 in 1 <219948> out 1 <219949> # join
add in 2 <219710 219949> out 1 <219950>  # join source bit 18
const-mul-2 in 1 <219950> out 1 <219951> # join
add in 2 <219709 219951> out 1 <219952>  # join source bit 17
const-mul-2 in 1 <219952> out 1 <219953> # join
add in 2 <219708 219953> out 1 <219954>  # join source bit 16
const-mul-2 in 1 <219954> out 1 <219955> # join
add in 2 <219707 219955> out 1 <219956>  # join source bit 15
const-mul-2 in 1 <219956> out 1 <219957> # join
add in 2 <219706 219957> out 1 <219958>  # join source bit 14
const-mul-2 in 1 <219958> out 1 <219959> # join
add in 2 <219705 219959> out 1 <219960>  # join source bit 13
const-mul-2 in 1 <219960> out 1 <219961> # join
add in 2 <219704 219961> out 1 <219962>  # join source bit 12
const-mul-2 in 1 <219962> out 1 <219963> # join
add in 2 <219703 219963> out 1 <219964>  # join source bit 11
const-mul-2 in 1 <219964> out 1 <219965> # join
add in 2 <219702 219965> out 1 <219966>  # join source bit 10
const-mul-2 in 1 <219966> out 1 <219967> # join
add in 2 <219701 219967> out 1 <219968>  # join source bit 9
const-mul-2 in 1 <219968> out 1 <219969> # join
add in 2 <219700 219969> out 1 <219970>  # join source bit 8
const-mul-2 in 1 <219970> out 1 <219971> # join
add in 2 <219699 219971> out 1 <219972>  # join source bit 7
const-mul-2 in 1 <219972> out 1 <219973> # join
add in 2 <219698 219973> out 1 <219974>  # join source bit 6
const-mul-2 in 1 <219974> out 1 <219975> # join
add in 2 <219697 219975> out 1 <219976>  # join source bit 5
const-mul-2 in 1 <219976> out 1 <219977> # join
add in 2 <219696 219977> out 1 <219978>  # join source bit 4
const-mul-2 in 1 <219978> out 1 <219979> # join
add in 2 <219695 219979> out 1 <219980>  # join source bit 3
const-mul-2 in 1 <219980> out 1 <219981> # join
add in 2 <219694 219981> out 1 <219982>  # join source bit 2
const-mul-2 in 1 <219982> out 1 <219983> # join
add in 2 <219693 219983> out 1 <219984>  # join source bit 1
const-mul-2 in 1 <219984> out 1 <219985> # join
add in 2 <219692 219985> out 1 <219986>  # join source bit 0
add in 2 <219986 219986> out 1 <219987>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <219116> out 1 <219988> # multiply-by-constant 4294967295
add in 2 <219690 219988> out 1 <219989>  # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <219989> out 265 <219990 219991 219992 219993 219994 219995 219996 219997 219998 219999 220000 220001 220002 220003 220004 220005 220006 220007 220008 220009 220010 220011 220012 220013 220014 220015 220016 220017 220018 220019 220020 220021 220022 220023 220024 220025 220026 220027 220028 220029 220030 220031 220032 220033 220034 220035 220036 220037 220038 220039 220040 220041 220042 220043 220044 220045 220046 220047 220048 220049 220050 220051 220052 220053 220054 220055 220056 220057 220058 220059 220060 220061 220062 220063 220064 220065 220066 220067 220068 220069 220070 220071 220072 220073 220074 220075 220076 220077 220078 220079 220080 220081 220082 220083 220084 220085 220086 220087 220088 220089 220090 220091 220092 220093 220094 220095 220096 220097 220098 220099 220100 220101 220102 220103 220104 220105 220106 220107 220108 220109 220110 220111 220112 220113 220114 220115 220116 220117 220118 220119 220120 220121 220122 220123 220124 220125 220126 220127 220128 220129 220130 220131 220132 220133 220134 220135 220136 220137 220138 220139 220140 220141 220142 220143 220144 220145 220146 220147 220148 220149 220150 220151 220152 220153 220154 220155 220156 220157 220158 220159 220160 220161 220162 220163 220164 220165 220166 220167 220168 220169 220170 220171 220172 220173 220174 220175 220176 220177 220178 220179 220180 220181 220182 220183 220184 220185 220186 220187 220188 220189 220190 220191 220192 220193 220194 220195 220196 220197 220198 220199 220200 220201 220202 220203 220204 220205 220206 220207 220208 220209 220210 220211 220212 220213 220214 220215 220216 220217 220218 220219 220220 220221 220222 220223 220224 220225 220226 220227 220228 220229 220230 220231 220232 220233 220234 220235 220236 220237 220238 220239 220240 220241 220242 220243 220244 220245 220246 220247 220248 220249 220250 220251 220252 220253 220254> # SplitBus
mul in 2 <220021 219987> out 1 <220255>  # cond trueterm
const-mul-neg-1 in 1 <220021> out 1 <220256> # cond minuscond
add in 2 <100 220256> out 1 <220257>     # cond negcond
mul in 2 <220257 219116> out 1 <220258>  # cond falseterm
add in 2 <220255 220258> out 1 <220259>  # cond result
mul in 2 <218944 218908> out 1 <220260>  # cond trueterm
const-mul-neg-1 in 1 <218944> out 1 <220261> # cond minuscond
add in 2 <100 220261> out 1 <220262>     # cond negcond
mul in 2 <220262 218905> out 1 <220263>  # cond falseterm
add in 2 <220260 220263> out 1 <220264>  # cond result
mul in 2 <218800 218764> out 1 <220265>  # cond trueterm
const-mul-neg-1 in 1 <218800> out 1 <220266> # cond minuscond
add in 2 <100 220266> out 1 <220267>     # cond negcond
mul in 2 <220267 218761> out 1 <220268>  # cond falseterm
add in 2 <220265 220268> out 1 <220269>  # cond result
const-mul-ffffffff in 1 <220269> out 1 <220270> # multiply-by-constant 4294967295
add in 2 <220269 220264> out 1 <220271>  # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
add in 2 <220271 220270> out 1 <220272>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <220272> out 1 <220273> # multiply-by-constant 4294967295
add in 2 <220271 220273> out 1 <220274>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <220269> out 1 <220275> # multiply-by-constant 4294967295
add in 2 <220264 220275> out 1 <220276>  # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <220276> out 200 <220277 220278 220279 220280 220281 220282 220283 220284 220285 220286 220287 220288 220289 220290 220291 220292 220293 220294 220295 220296 220297 220298 220299 220300 220301 220302 220303 220304 220305 220306 220307 220308 220309 220310 220311 220312 220313 220314 220315 220316 220317 220318 220319 220320 220321 220322 220323 220324 220325 220326 220327 220328 220329 220330 220331 220332 220333 220334 220335 220336 220337 220338 220339 220340 220341 220342 220343 220344 220345 220346 220347 220348 220349 220350 220351 220352 220353 220354 220355 220356 220357 220358 220359 220360 220361 220362 220363 220364 220365 220366 220367 220368 220369 220370 220371 220372 220373 220374 220375 220376 220377 220378 220379 220380 220381 220382 220383 220384 220385 220386 220387 220388 220389 220390 220391 220392 220393 220394 220395 220396 220397 220398 220399 220400 220401 220402 220403 220404 220405 220406 220407 220408 220409 220410 220411 220412 220413 220414 220415 220416 220417 220418 220419 220420 220421 220422 220423 220424 220425 220426 220427 220428 220429 220430 220431 220432 220433 220434 220435 220436 220437 220438 220439 220440 220441 220442 220443 220444 220445 220446 220447 220448 220449 220450 220451 220452 220453 220454 220455 220456 220457 220458 220459 220460 220461 220462 220463 220464 220465 220466 220467 220468 220469 220470 220471 220472 220473 220474 220475 220476> # SplitBus
mul in 2 <220308 220274> out 1 <220477>  # cond trueterm
const-mul-neg-1 in 1 <220308> out 1 <220478> # cond minuscond
add in 2 <100 220478> out 1 <220479>     # cond negcond
mul in 2 <220479 220264> out 1 <220480>  # cond falseterm
add in 2 <220477 220480> out 1 <220481>  # cond result
const-mul-ffffffff in 1 <220481> out 1 <220482> # multiply-by-constant 4294967295
add in 2 <220481 220259> out 1 <220483>  # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
split in 1 <220483> out 235 <220484 220485 220486 220487 220488 220489 220490 220491 220492 220493 220494 220495 220496 220497 220498 220499 220500 220501 220502 220503 220504 220505 220506 220507 220508 220509 220510 220511 220512 220513 220514 220515 220516 220517 220518 220519 220520 220521 220522 220523 220524 220525 220526 220527 220528 220529 220530 220531 220532 220533 220534 220535 220536 220537 220538 220539 220540 220541 220542 220543 220544 220545 220546 220547 220548 220549 220550 220551 220552 220553 220554 220555 220556 220557 220558 220559 220560 220561 220562 220563 220564 220565 220566 220567 220568 220569 220570 220571 220572 220573 220574 220575 220576 220577 220578 220579 220580 220581 220582 220583 220584 220585 220586 220587 220588 220589 220590 220591 220592 220593 220594 220595 220596 220597 220598 220599 220600 220601 220602 220603 220604 220605 220606 220607 220608 220609 220610 220611 220612 220613 220614 220615 220616 220617 220618 220619 220620 220621 220622 220623 220624 220625 220626 220627 220628 220629 220630 220631 220632 220633 220634 220635 220636 220637 220638 220639 220640 220641 220642 220643 220644 220645 220646 220647 220648 220649 220650 220651 220652 220653 220654 220655 220656 220657 220658 220659 220660 220661 220662 220663 220664 220665 220666 220667 220668 220669 220670 220671 220672 220673 220674 220675 220676 220677 220678 220679 220680 220681 220682 220683 220684 220685 220686 220687 220688 220689 220690 220691 220692 220693 220694 220695 220696 220697 220698 220699 220700 220701 220702 220703 220704 220705 220706 220707 220708 220709 220710 220711 220712 220713 220714 220715 220716 220717 220718> # SplitBus
const-mul-2 in 1 <220515> out 1 <220719> # join source bit 31
add in 2 <220514 220719> out 1 <220720>  # join source bit 30
const-mul-2 in 1 <220720> out 1 <220721> # join
add in 2 <220513 220721> out 1 <220722>  # join source bit 29
const-mul-2 in 1 <220722> out 1 <220723> # join
add in 2 <220512 220723> out 1 <220724>  # join source bit 28
const-mul-2 in 1 <220724> out 1 <220725> # join
add in 2 <220511 220725> out 1 <220726>  # join source bit 27
const-mul-2 in 1 <220726> out 1 <220727> # join
add in 2 <220510 220727> out 1 <220728>  # join source bit 26
const-mul-2 in 1 <220728> out 1 <220729> # join
add in 2 <220509 220729> out 1 <220730>  # join source bit 25
const-mul-2 in 1 <220730> out 1 <220731> # join
add in 2 <220508 220731> out 1 <220732>  # join source bit 24
const-mul-2 in 1 <220732> out 1 <220733> # join
add in 2 <220507 220733> out 1 <220734>  # join source bit 23
const-mul-2 in 1 <220734> out 1 <220735> # join
add in 2 <220506 220735> out 1 <220736>  # join source bit 22
const-mul-2 in 1 <220736> out 1 <220737> # join
add in 2 <220505 220737> out 1 <220738>  # join source bit 21
const-mul-2 in 1 <220738> out 1 <220739> # join
add in 2 <220504 220739> out 1 <220740>  # join source bit 20
const-mul-2 in 1 <220740> out 1 <220741> # join
add in 2 <220503 220741> out 1 <220742>  # join source bit 19
const-mul-2 in 1 <220742> out 1 <220743> # join
add in 2 <220502 220743> out 1 <220744>  # join source bit 18
const-mul-2 in 1 <220744> out 1 <220745> # join
add in 2 <220501 220745> out 1 <220746>  # join source bit 17
const-mul-2 in 1 <220746> out 1 <220747> # join
add in 2 <220500 220747> out 1 <220748>  # join source bit 16
const-mul-2 in 1 <220748> out 1 <220749> # join
add in 2 <220499 220749> out 1 <220750>  # join source bit 15
const-mul-2 in 1 <220750> out 1 <220751> # join
add in 2 <220498 220751> out 1 <220752>  # join source bit 14
const-mul-2 in 1 <220752> out 1 <220753> # join
add in 2 <220497 220753> out 1 <220754>  # join source bit 13
const-mul-2 in 1 <220754> out 1 <220755> # join
add in 2 <220496 220755> out 1 <220756>  # join source bit 12
const-mul-2 in 1 <220756> out 1 <220757> # join
add in 2 <220495 220757> out 1 <220758>  # join source bit 11
const-mul-2 in 1 <220758> out 1 <220759> # join
add in 2 <220494 220759> out 1 <220760>  # join source bit 10
const-mul-2 in 1 <220760> out 1 <220761> # join
add in 2 <220493 220761> out 1 <220762>  # join source bit 9
const-mul-2 in 1 <220762> out 1 <220763> # join
add in 2 <220492 220763> out 1 <220764>  # join source bit 8
const-mul-2 in 1 <220764> out 1 <220765> # join
add in 2 <220491 220765> out 1 <220766>  # join source bit 7
const-mul-2 in 1 <220766> out 1 <220767> # join
add in 2 <220490 220767> out 1 <220768>  # join source bit 6
const-mul-2 in 1 <220768> out 1 <220769> # join
add in 2 <220489 220769> out 1 <220770>  # join source bit 5
const-mul-2 in 1 <220770> out 1 <220771> # join
add in 2 <220488 220771> out 1 <220772>  # join source bit 4
const-mul-2 in 1 <220772> out 1 <220773> # join
add in 2 <220487 220773> out 1 <220774>  # join source bit 3
const-mul-2 in 1 <220774> out 1 <220775> # join
add in 2 <220486 220775> out 1 <220776>  # join source bit 2
const-mul-2 in 1 <220776> out 1 <220777> # join
add in 2 <220485 220777> out 1 <220778>  # join source bit 1
const-mul-2 in 1 <220778> out 1 <220779> # join
add in 2 <220484 220779> out 1 <220780>  # join source bit 0
add in 2 <220780 220780> out 1 <220781>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <220781> out 1 <220782> # multiply-by-constant 4294967295
add in 2 <220483 220782> out 1 <220783>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <220481> out 1 <220784> # multiply-by-constant 4294967295
add in 2 <220259 220784> out 1 <220785>  # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <220785> out 267 <220786 220787 220788 220789 220790 220791 220792 220793 220794 220795 220796 220797 220798 220799 220800 220801 220802 220803 220804 220805 220806 220807 220808 220809 220810 220811 220812 220813 220814 220815 220816 220817 220818 220819 220820 220821 220822 220823 220824 220825 220826 220827 220828 220829 220830 220831 220832 220833 220834 220835 220836 220837 220838 220839 220840 220841 220842 220843 220844 220845 220846 220847 220848 220849 220850 220851 220852 220853 220854 220855 220856 220857 220858 220859 220860 220861 220862 220863 220864 220865 220866 220867 220868 220869 220870 220871 220872 220873 220874 220875 220876 220877 220878 220879 220880 220881 220882 220883 220884 220885 220886 220887 220888 220889 220890 220891 220892 220893 220894 220895 220896 220897 220898 220899 220900 220901 220902 220903 220904 220905 220906 220907 220908 220909 220910 220911 220912 220913 220914 220915 220916 220917 220918 220919 220920 220921 220922 220923 220924 220925 220926 220927 220928 220929 220930 220931 220932 220933 220934 220935 220936 220937 220938 220939 220940 220941 220942 220943 220944 220945 220946 220947 220948 220949 220950 220951 220952 220953 220954 220955 220956 220957 220958 220959 220960 220961 220962 220963 220964 220965 220966 220967 220968 220969 220970 220971 220972 220973 220974 220975 220976 220977 220978 220979 220980 220981 220982 220983 220984 220985 220986 220987 220988 220989 220990 220991 220992 220993 220994 220995 220996 220997 220998 220999 221000 221001 221002 221003 221004 221005 221006 221007 221008 221009 221010 221011 221012 221013 221014 221015 221016 221017 221018 221019 221020 221021 221022 221023 221024 221025 221026 221027 221028 221029 221030 221031 221032 221033 221034 221035 221036 221037 221038 221039 221040 221041 221042 221043 221044 221045 221046 221047 221048 221049 221050 221051 221052> # SplitBus
mul in 2 <220817 220783> out 1 <221053>  # cond trueterm
const-mul-neg-1 in 1 <220817> out 1 <221054> # cond minuscond
add in 2 <100 221054> out 1 <221055>     # cond negcond
mul in 2 <221055 220259> out 1 <221056>  # cond falseterm
add in 2 <221053 221056> out 1 <221057>  # cond result
add in 2 <221057 104> out 1 <221058>     # ArithBusReq.AddReq(DFG.Conditional,DFG.Constant)
const-mul-ffffffff in 1 <69> out 1 <221059> # multiply-by-constant 4294967295
add in 2 <221058 221059> out 1 <221060>  # 'CmpLT DFG.Add - DFG.Input'
split in 1 <221060> out 238 <221061 221062 221063 221064 221065 221066 221067 221068 221069 221070 221071 221072 221073 221074 221075 221076 221077 221078 221079 221080 221081 221082 221083 221084 221085 221086 221087 221088 221089 221090 221091 221092 221093 221094 221095 221096 221097 221098 221099 221100 221101 221102 221103 221104 221105 221106 221107 221108 221109 221110 221111 221112 221113 221114 221115 221116 221117 221118 221119 221120 221121 221122 221123 221124 221125 221126 221127 221128 221129 221130 221131 221132 221133 221134 221135 221136 221137 221138 221139 221140 221141 221142 221143 221144 221145 221146 221147 221148 221149 221150 221151 221152 221153 221154 221155 221156 221157 221158 221159 221160 221161 221162 221163 221164 221165 221166 221167 221168 221169 221170 221171 221172 221173 221174 221175 221176 221177 221178 221179 221180 221181 221182 221183 221184 221185 221186 221187 221188 221189 221190 221191 221192 221193 221194 221195 221196 221197 221198 221199 221200 221201 221202 221203 221204 221205 221206 221207 221208 221209 221210 221211 221212 221213 221214 221215 221216 221217 221218 221219 221220 221221 221222 221223 221224 221225 221226 221227 221228 221229 221230 221231 221232 221233 221234 221235 221236 221237 221238 221239 221240 221241 221242 221243 221244 221245 221246 221247 221248 221249 221250 221251 221252 221253 221254 221255 221256 221257 221258 221259 221260 221261 221262 221263 221264 221265 221266 221267 221268 221269 221270 221271 221272 221273 221274 221275 221276 221277 221278 221279 221280 221281 221282 221283 221284 221285 221286 221287 221288 221289 221290 221291 221292 221293 221294 221295 221296 221297 221298> # SplitBus
mul in 2 <221092 103> out 1 <221299>     # cond trueterm
const-mul-neg-1 in 1 <221092> out 1 <221300> # cond minuscond
add in 2 <100 221300> out 1 <221301>     # cond negcond
mul in 2 <221301 102> out 1 <221302>     # cond falseterm
add in 2 <221299 221302> out 1 <221303>  # cond result
add in 2 <221057 3084> out 1 <221304>    # ArithBusReq.AddReq(DFG.Conditional,DFG.Negate)
const-mul-ffffffff in 1 <221304> out 1 <221305> # multiply-by-constant 4294967295
add in 2 <69 221305> out 1 <221306>      # 'CmpLT DFG.Input - DFG.Subtract'
split in 1 <221306> outplitBus
mul in 2 <221338 103> out 1 <221577>     # cond trueterm
const-mul-neg-1 in 1 <221338> out 1 <221578> # cond minuscond
add in 2 <100 221578> out 1 <221579>     # cond negcond
mul in 2 <221579 221303> out 1 <221580>  # cond falseterm
add in 2 <221577 221580> out 1 <221581>  # cond result
const-mul-ffffffff in 1 <68> out 1 <221582> # multiply-by-constant 4294967295
add in 2 <68 69> out 1 <221583>          # ArithBusReq.AddReq(DFG.Input,DFG.Input)
add in 2 <221583 221582> out 1 <221584>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <221584> out 1 <221585> # multiply-by-constant 4294967295
add in 2 <221583 221585> out 1 <221586>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <68> out 1 <221587> # multiply-by-constant 4294967295
add in 2 <69 221587> out 1 <221588>      # 'CmpLT DFG.Input - DFG.Input'
split in 1 <221588> out 65 <221589 221590 221591 221592 221593 221594 221595 221596 221597 221598 221599 221600 221601 221602 221603 221604 221605 221606 221607 221608 221609 221610 221611 221612 221613 221614 221615 221616 221617 221618 221619 221620 221621 221622 221623 221624 221625 221626 221627 221628 221629 221630 221631 221632 221633 221634 221635 221636 221637 221638 221639 221640 221641 221642 221643 221644 221645 221646 221647 221648 221649 221650 221651 221652 221653> # SplitBus
mul in 2 <221620 221586> out 1 <221654>  # cond trueterm
const-mul-neg-1 in 1 <221620> out 1 <221655> # cond minuscond
add in 2 <100 221655> out 1 <221656>     # cond negcond
mul in 2 <221656 69> out 1 <221657>      # cond falseterm
add in 2 <221654 221657> out 1 <221658>  # cond result
const-mul-ffffffff in 1 <221658> out 1 <221659> # multiply-by-constant 4294967295
add in 2 <221658 70> out 1 <221660>      # ArithBusReq.AddReq(DFG.Conditional,DFG.Input)
add in 2 <221660 221659> out 1 <221661>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <221661> out 1 <221662> # multiply-by-constant 4294967295
add in 2 <221660 221662> out 1 <221663>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <221658> out 1 <221664> # multiply-by-constant 4294967295
add in 2 <70 221664> out 1 <221665>      # 'CmpLT DFG.Input - DFG.Conditional'
split in 1 <221665> out 131 <221666 221667 221668 221669 221670 221671 221672 221673 221674 221675 221676 221677 221678 221679 221680 221681 221682 221683 221684 221685 221686 221687 221688 221689 221690 221691 221692 221693 221694 221695 221696 221697 221698 221699 221700 221701 221702 221703 221704 221705 221706 221707 221708 221709 221710 221711 221712 221713 221714 221715 221716 221717 221718 221719 221720 221721 221722 221723 221724 221725 221726 221727 221728 221729 221730 221731 221732 221733 221734 221735 221736 221737 221738 221739 221740 221741 221742 221743 221744 221745 221746 221747 221748 221749 221750 221751 221752 221753 221754 221755 221756 221757 221758 221759 221760 221761 221762 221763 221764 221765 221766 221767 221768 221769 221770 221771 221772 221773 221774 221775 221776 221777 221778 221779 221780 221781 221782 221783 221784 221785 221786 221787 221788 221789 221790 221791 221792 221793 221794 221795 221796> # SplitBus
mul in 2 <221697 221663> out 1 <221797>  # cond trueterm
const-mul-neg-1 in 1 <221697> out 1 <221798> # cond minuscond
add in 2 <100 221798> out 1 <221799>     # cond negcond
mul in 2 <221799 70> out 1 <221800>      # cond falseterm
add in 2 <221797 221800> out 1 <221801>  # cond result
const-mul-ffffffff in 1 <221801> out 1 <221802> # multiply-by-constant 4294967295
add in 2 <221801 71> out 1 <221803>      # ArithBusReq.AddReq(DFG.Conditional,DFG.Input)
add in 2 <221803 221802> out 1 <221804>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <221801> out 1 <221805> # multiply-by-constant 4294967295
add in 2 <71 221805> out 1 <221806>      # 'CmpLT DFG.Input - DFG.Conditional'
split in 1 <221806> out 197 <221807 221808 221809 221810 221811 221812 221813 221814 221815 221816 221817 221818 221819 221820 221821 221822 221823 221824 221825 221826 221827 221828 221829 221830 221831 221832 221833 221834 221835 221836 221837 221838 221839 221840 221841 221842 221843 221844 221845 221846 221847 221848 221849 221850 221851 221852 221853 221854 221855 221856 221857 221858 221859 221860 221861 221862 221863 221864 221865 221866 221867 221868 221869 221870 221871 221872 221873 221874 221875 221876 221877 221878 221879 221880 221881 221882 221883 221884 221885 221886 221887 221888 221889 221890 221891 221892 221893 221894 221895 221896 221897 221898 221899 221900 221901 221902 221903 221904 221905 221906 221907 221908 221909 221910 221911 221912 221913 221914 221915 221916 221917 221918 221919 221920 221921 221922 221923 221924 221925 221926 221927 221928 221929 221930 221931 221932 221933 221934 221935 221936 221937 221938 221939 221940 221941 221942 221943 221944 221945 221946 221947 221948 221949 221950 221951 221952 221953 221954 221955 221956 221957 221958 221959 221960 221961 221962 221963 221964 221965 221966 221967 221968 221969 221970 221971 221972 221973 221974 221975 221976 221977 221978 221979 221980 221981 221982 221983 221984 221985 221986 221987 221988 221989 221990 221991 221992 221993 221994 221995 221996 221997 221998 221999 222000 222001 222002 222003> # SplitBus
mul in 2 <221838 221804> out 1 <222004>  # cond trueterm
const-mul-neg-1 in 1 <221838> out 1 <222005> # cond minuscond
add in 2 <100 222005> out 1 <222006>     # cond negcond
mul in 2 <222006 221801> out 1 <222007>  # cond falseterm
add in 2 <222004 222007> out 1 <222008>  # cond result
mul in 2 <221697 221661> out 1 <222009>  # cond trueterm
const-mul-neg-1 in 1 <221697> out 1 <222010> # cond minuscond
add in 2 <100 222010> out 1 <222011>     # cond negcond
mul in 2 <222011 221658> out 1 <222012>  # cond falseterm
add in 2 <222009 222012> out 1 <222013>  # cond result
mul in 2 <221620 221584> out 1 <222014>  # cond trueterm
const-mul-neg-1 in 1 <221620> out 1 <222015> # cond minuscond
add in 2 <100 222015> out 1 <222016>     # cond negcond
mul in 2 <222016 68> out 1 <222017>      # cond falseterm
add in 2 <222014 222017> out 1 <222018>  # cond result
const-mul-ffffffff in 1 <222018> out 1 <222019> # multiply-by-constant 4294967295
add in 2 <222018 222013> out 1 <222020>  # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
add in 2 <222020 222019> out 1 <222021>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <222021> out 1 <222022> # multiply-by-constant 4294967295
add in 2 <222020 222022> out 1 <222023>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <222018> out 1 <222024> # multiply-by-constant 4294967295
add in 2 <222013 222024> out 1 <222025>  # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <222025> out 132 <222026 222027 222028 222029 222030 222031 222032 222033 222034 222035 222036 222037 222038 222039 222040 222041 222042 222043 222044 222045 222046 222047 222048 222049 222050 222051 222052 222053 222054 222055 222056 222057 222058 222059 222060 222061 222062 222063 222064 222065 222066 222067 222068 222069 222070 222071 222072 222073 222074 222075 222076 222077 222078 222079 222080 222081 222082 222083 222084 222085 222086 222087 222088 222089 222090 222091 222092 222093 222094 222095 222096 222097 222098 222099 222100 222101 222102 222103 222104 222105 222106 222107 222108 222109 222110 222111 222112 222113 222114 222115 222116 222117 222118 222119 222120 222121 222122 222123 222124 222125 222126 222127 222128 222129 222130 222131 222132 222133 222134 222135 222136 222137 222138 222139 222140 222141 222142 222143 222144 222145 222146 222147 222148 222149 222150 222151 222152 222153 222154 222155 222156 222157> # SplitBus
mul in 2 <222057 222023> out 1 <222158>  # cond trueterm
const-mul-neg-1 in 1 <222057> out 1 <222159> # cond minuscond
add in 2 <100 222159> out 1 <222160>     # cond negcond
mul in 2 <222160 222013> out 1 <222161>  # cond falseterm
add in 2 <222158 222161> out 1 <222162>  # cond result
const-mul-ffffffff in 1 <222162> out 1 <222163> # multiply-by-constant 4294967295
add in 2 <222162 222008> out 1 <222164>  # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
add in 2 <222164 222163> out 1 <222165>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <222165> out 1 <222166> # multiply-by-constant 4294967295
add in 2 <222164 222166> out 1 <222167>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <222162> out 1 <222168> # multiply-by-constant 4294967295
add in 2 <222008 222168> out 1 <222169>  # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <222169> out 199 <222170 222171 222172 222173 222174 222175 222176 222177 222178 222179 222180 222181 222182 222183 222184 222185 222186 222187 222188 222189 222190 222191 222192 222193 222194 222195 222196 222197 222198 222199 222200 222201 222202 222203 222204 222205 222206 222207 222208 222209 222210 222211 222212 222213 222214 222215 222216 222217 222218 222219 222220 222221 222222 222223 222224 222225 222226 222227 222228 222229 222230 222231 222232 222233 222234 222235 222236 222237 222238 222239 222240 222241 222242 222243 222244 222245 222246 222247 222248 222249 222250 222251 222252 222253 222254 222255 222256 222257 222258 222259 222260 222261 222262 222263 222264 222265 222266 222267 222268 222269 222270 222271 222272 222273 222274 222275 222276 222277 222278 222279 222280 222281 222282 222283 222284 222285 222286 222287 222288 222289 222290 222291 222292 222293 222294 222295 222296 222297 222298 222299 222300 222301 222302 222303 222304 222305 222306 222307 222308 222309 222310 222311 222312 222313 222314 222315 222316 222317 222318 222319 222320 222321 222322 222323 222324 222325 222326 222327 222328 222329 222330 222331 222332 222333 222334 222335 222336 222337 222338 222339 222340 222341 222342 222343 222344 222345 222346 222347 222348 222349 222350 222351 222352 222353 222354 222355 222356 222357 222358 222359 222360 222361 222362 222363 222364 222365 222366 222367 222368> # SplitBus
mul in 2 <222201 222167> out 1 <222369>  # cond trueterm
const-mul-neg-1 in 1 <222201> out 1 <222370> # cond minuscond
add in 2 <100 222370> out 1 <222371>     # cond negcond
mul in 2 <222371 222008> out 1 <222372>  # cond falseterm
add in 2 <222369 222372> out 1 <222373>  # cond result
const-mul-ffffffff in 1 <222373> out 1 <222374> # multiply-by-constant 4294967295
const-mul-ffffffff in 1 <221804> out 1 <222375> # multiply-by-constant 4294967295
add in 2 <221803 222375> out 1 <222376>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
mul in 2 <221838 222376> out 1 <222377>  # cond trueterm
const-mul-neg-1 in 1 <221838> out 1 <222378> # cond minuscond
add in 2 <100 222378> out 1 <222379>     # cond negcond
mul in 2 <222379 71> out 1 <222380>      # cond falseterm
add in 2 <222377 222380> out 1 <222381>  # cond result
const-mul-ffffffff in 1 <222381> out 1 <222382> # multiply-by-constant 4294967295
add in 2 <222381 72> out 1 <222383>      # ArithBusReq.AddReq(DFG.Conditional,DFG.Input)
split in 1 <222383> out 231 <222384 222385 222386 222387 222388 222389 222390 222391 222392 222393 222394 222395 222396 222397 222398 222399 222400 222401 222402 222403 222404 222405 222406 222407 222408 222409 222410 222411 222412 222413 222414 222415 222416 222417 222418 222419 222420 222421 222422 222423 222424 222425 222426 222427 222428 222429 222430 222431 222432 222433 222434 222435 222436 222437 222438 222439 222440 222441 222442 222443 222444 222445 222446 222447 222448 222449 222450 222451 222452 222453 222454 222455 222456 222457 222458 222459 222460 222461 222462 222463 222464 222465 222466 222467 222468 222469 222470 222471 222472 222473 222474 222475 222476 222477 222478 222479 222480 222481 222482 222483 222484 222485 222486 222487 222488 222489 222490 222491 222492 222493 222494 222495 222496 222497 222498 222499 222500 222501 222502 222503 222504 222505 222506 222507 222508 222509 222510 222511 222512 222513 222514 222515 222516 222517 222518 222519 222520 222521 222522 222523 222524 222525 222526 222527 222528 222529 222530 222531 222532 222533 222534 222535 222536 222537 222538 222539 222540 222541 222542 222543 222544 222545 222546 222547 222548 222549 222550 222551 222552 222553 222554 222555 222556 222557 222558 222559 222560 222561 222562 222563 222564 222565 222566 222567 222568 222569 222570 222571 222572 222573 222574 222575 222576 222577 222578 222579 222580 222581 222582 222583 222584 222585 222586 222587 222588 222589 222590 222591 222592 222593 222594 222595 222596 222597 222598 222599 222600 222601 222602 222603 222604 222605 222606 222607 222608 222609 222610 222611 222612 222613 222614> # SplitBus
const-mul-2 in 1 <222415> out 1 <222615> # join source bit 31
add in 2 <222414 222615> out 1 <222616>  # join source bit 30
const-mul-2 in 1 <222616> out 1 <222617> # join
add in 2 <222413 222617> out 1 <222618>  # join source bit 29
const-mul-2 in 1 <222618> out 1 <222619> # join
add in 2 <222412 222619> out 1 <222620>  # join source bit 28
const-mul-2 in 1 <222620> out 1 <222621> # join
add in 2 <222411 222621> out 1 <222622>  # join source bit 27
const-mul-2 in 1 <222622> out 1 <222623> # join
add in 2 <222410 222623> out 1 <222624>  # join source bit 26
const-mul-2 in 1 <222624> out 1 <222625> # join
add in 2 <222409 222625> out 1 <222626>  # join source bit 25
const-mul-2 in 1 <222626> out 1 <222627> # join
add in 2 <222408 222627> out 1 <222628>  # join source bit 24
const-mul-2 in 1 <222628> out 1 <222629> # join
add in 2 <222407 222629> out 1 <222630>  # join source bit 23
const-mul-2 in 1 <222630> out 1 <222631> # join
add in 2 <222406 222631> out 1 <222632>  # join source bit 22
const-mul-2 in 1 <222632> out 1 <222633> # join
add in 2 <222405 222633> out 1 <222634>  # join source bit 21
const-mul-2 in 1 <222634> out 1 <222635> # join
add in 2 <222404 222635> out 1 <222636>  # join source bit 20
const-mul-2 in 1 <222636> out 1 <222637> # join
add in 2 <222403 222637> out 1 <222638>  # join source bit 19
const-mul-2 in 1 <222638> out 1 <222639> # join
add in 2 <222402 222639> out 1 <222640>  # join source bit 18
const-mul-2 in 1 <222640> out 1 <222641> # join
add in 2 <222401 222641> out 1 <222642>  # join source bit 17
const-mul-2 in 1 <222642> out 1 <222643> # join
add in 2 <222400 222643> out 1 <222644>  # join source bit 16
const-mul-2 in 1 <222644> out 1 <222645> # join
add in 2 <222399 222645> out 1 <222646>  # join source bit 15
const-mul-2 in 1 <222646> out 1 <222647> # join
add in 2 <222398 222647> out 1 <222648>  # join source bit 14
const-mul-2 in 1 <222648> out 1 <222649> # join
add in 2 <222397 222649> out 1 <222650>  # join source bit 13
const-mul-2 in 1 <222650> out 1 <222651> # join
add in 2 <222396 222651> out 1 <222652>  # join source bit 12
const-mul-2 in 1 <222652> out 1 <222653> # join
add in 2 <222395 222653> out 1 <222654>  # join source bit 11
const-mul-2 in 1 <222654> out 1 <222655> # join
add in 2 <222394 222655> out 1 <222656>  # join source bit 10
const-mul-2 in 1 <222656> out 1 <222657> # join
add in 2 <222393 222657> out 1 <222658>  # join source bit 9
const-mul-2 in 1 <222658> out 1 <222659> # join
add in 2 <222392 222659> out 1 <222660>  # join source bit 8
const-mul-2 in 1 <222660> out 1 <222661> # join
add in 2 <222391 222661> out 1 <222662>  # join source bit 7
const-mul-2 in 1 <222662> out 1 <222663> # join
add in 2 <222390 222663> out 1 <222664>  # join source bit 6
const-mul-2 in 1 <222664> out 1 <222665> # join
add in 2 <222389 222665> out 1 <222666>  # join source bit 5
const-mul-2 in 1 <222666> out 1 <222667> # join
add in 2 <222388 222667> out 1 <222668>  # join source bit 4
const-mul-2 in 1 <222668> out 1 <222669> # join
add in 2 <222387 222669> out 1 <222670>  # join source bit 3
const-mul-2 in 1 <222670> out 1 <222671> # join
add in 2 <222386 222671> out 1 <222672>  # join source bit 2
const-mul-2 in 1 <222672> out 1 <222673> # join
add in 2 <222385 222673> out 1 <222674>  # join source bit 1
const-mul-2 in 1 <222674> out 1 <222675> # join
add in 2 <222384 222675> out 1 <222676>  # join source bit 0
add in 2 <222676 222676> out 1 <222677>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <222381> out 1 <222678> # multiply-by-constant 4294967295
add in 2 <72 222678> out 1 <222679>      # 'CmpLT DFG.Input - DFG.Conditional'
split in 1 <222679> out 263 <222680 222681 222682 222683 222684 222685 222686 222687 222688 222689 222690 222691 222692 222693 222694 222695 222696 222697 222698 222699 222700 222701 222702 222703 222704 222705 222706 222707 222708 222709 222710 222711 222712 222713 222714 222715 222716 222717 222718 222719 222720 222721 222722 222723 222724 222725 222726 222727 222728 222729 222730 222731 222732 222733 222734 222735 222736 222737 222738 222739 222740 222741 222742 222743 222744 222745 222746 222747 222748 222749 222750 222751 222752 222753 222754 222755 222756 222757 222758 222759 222760 222761 222762 222763 222764 222765 222766 222767 222768 222769 222770 222771 222772 222773 222774 222775 222776 222777 222778 222779 222780 222781 222782 222783 222784 222785 222786 222787 222788 222789 222790 222791 222792 222793 222794 222795 222796 222797 222798 222799 222800 222801 222802 222803 222804 222805 222806 222807 222808 222809 222810 222811 222812 222813 222814 222815 222816 222817 222818 222819 222820 222821 222822 222823 222824 222825 222826 222827 222828 222829 222830 222831 222832 222833 222834 222835 222836 222837 222838 222839 222840 222841 222842 222843 222844 222845 222846 222847 222848 222849 222850 222851 222852 222853 222854 222855 222856 222857 222858 222859 222860 222861 222862 222863 222864 222865 222866 222867 222868 222869 222870 222871 222872 222873 222874 222875 222876 222877 222878 222879 222880 222881 222882 222883 222884 222885 222886 222887 222888 222889 222890 222891 222892 222893 222894 222895 222896 222897 222898 222899 222900 222901 222902 222903 222904 222905 222906 222907 222908 222909 222910 222911 222912 222913 222914 222915 222916 222917 222918 222919 222920 222921 222922 222923 222924 222925 222926 222927 222928 222929 222930 222931 222932 222933 222934 222935 222936 222937 222938 222939 222940 222941 222942> # SplitBus
mul in 2 <222711 222677> out 1 <222943>  # cond trueterm
const-mul-neg-1 in 1 <222711> out 1 <222944> # cond minuscond
add in 2 <100 222944> out 1 <222945>     # cond negcond
mul in 2 <222945 222381> out 1 <222946>  # cond falseterm
add in 2 <222943 222946> out 1 <222947>  # cond result
add in 2 <222373 222947> out 1 <222948>  # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
split in 1 <222948> out 233 <222949 222950 222951 222952 222953 222954 222955 222956 222957 222958 222959 222960 222961 222962 222963 222964 222965 222966 222967 222968 222969 222970 222971 222972 222973 222974 222975 222976 222977 222978 222979 222980 222981 222982 222983 222984 222985 222986 222987 222988 222989 222990 222991 222992 222993 222994 222995 222996 222997 222998 222999 223000 223001 223002 223003 223004 223005 223006 223007 223008 223009 223010 223011 223012 223013 223014 223015 223016 223017 223018 223019 223020 223021 223022 223023 223024 223025 223026 223027 223028 223029 223030 223031 223032 223033 223034 223035 223036 223037 223038 223039 223040 223041 223042 223043 223044 223045 223046 223047 223048 223049 223050 223051 223052 223053 223054 223055 223056 223057 223058 223059 223060 223061 223062 223063 223064 223065 223066 223067 223068 223069 223070 223071 223072 223073 223074 223075 223076 223077 223078 223079 223080 223081 223082 223083 223084 223085 223086 223087 223088 223089 223090 223091 223092 223093 223094 223095 223096 223097 223098 223099 223100 223101 223102 223103 223104 223105 223106 223107 223108 223109 223110 223111 223112 223113 223114 223115 223116 223117 223118 223119 223120 223121 223122 223123 223124 223125 223126 223127 223128 223129 223130 223131 223132 223133 223134 223135 223136 223137 223138 223139 223140 223141 223142 223143 223144 223145 223146 223147 223148 223149 223150 223151 223152 223153 223154 223155 223156 223157 223158 223159 223160 223161 223162 223163 223164 223165 223166 223167 223168 223169 223170 223171 223172 223173 223174 223175 223176 223177 223178 223179 223180 223181> # SplitBus
const-mul-2 in 1 <222980> out 1 <223182> # join source bit 31
add in 2 <222979 223182> out 1 <223183>  # join source bit 30
const-mul-2 in 1 <223183> out 1 <223184> # join
add in 2 <222978 223184> out 1 <223185>  # join source bit 29
const-mul-2 in 1 <223185> out 1 <223186> # join
add in 2 <222977 223186> out 1 <223187>  # join source bit 28
const-mul-2 in 1 <223187> out 1 <223188> # join
add in 2 <222976 223188> out 1 <223189>  # join source bit 27
const-mul-2 in 1 <223189> out 1 <223190> # join
add in 2 <222975 223190> out 1 <223191>  # join source bit 26
const-mul-2 in 1 <223191> out 1 <223192> # join
add in 2 <222974 223192> out 1 <223193>  # join source bit 25
const-mul-2 in 1 <223193> out 1 <223194> # join
add in 2 <222973 223194> out 1 <223195>  # join source bit 24
const-mul-2 in 1 <223195> out 1 <223196> # join
add in 2 <222972 223196> out 1 <223197>  # join source bit 23
const-mul-2 in 1 <223197> out 1 <223198> # join
add in 2 <222971 223198> out 1 <223199>  # join source bit 22
const-mul-2 in 1 <223199> out 1 <223200> # join
add in 2 <222970 223200> out 1 <223201>  # join source bit 21
const-mul-2 in 1 <223201> out 1 <223202> # join
add in 2 <222969 223202> out 1 <223203>  # join source bit 20
const-mul-2 in 1 <223203> out 1 <223204> # join
add in 2 <222968 223204> out 1 <223205>  # join source bit 19
const-mul-2 in 1 <223205> out 1 <223206> # join
add in 2 <222967 223206> out 1 <223207>  # join source bit 18
const-mul-2 in 1 <223207> out 1 <223208> # join
add in 2 <222966 223208> out 1 <223209>  # join source bit 17
const-mul-2 in 1 <223209> out 1 <223210> # join
add in 2 <222965 223210> out 1 <223211>  # join source bit 16
const-mul-2 in 1 <223211> out 1 <223212> # join
add in 2 <222964 223212> out 1 <223213>  # join source bit 15
const-mul-2 in 1 <223213> out 1 <223214> # join
add in 2 <222963 223214> out 1 <223215>  # join source bit 14
const-mul-2 in 1 <223215> out 1 <223216> # join
add in 2 <222962 223216> out 1 <223217>  # join source bit 13
const-mul-2 in 1 <223217> out 1 <223218> # join
add in 2 <222961 223218> out 1 <223219>  # join source bit 12
const-mul-2 in 1 <223219> out 1 <223220> # join
add in 2 <222960 223220> out 1 <223221>  # join source bit 11
const-mul-2 in 1 <223221> out 1 <223222> # join
add in 2 <222959 223222> out 1 <223223>  # join source bit 10
const-mul-2 in 1 <223223> out 1 <223224> # join
add in 2 <222958 223224> out 1 <223225>  # join source bit 9
const-mul-2 in 1 <223225> out 1 <223226> # join
add in 2 <222957 223226> out 1 <223227>  # join source bit 8
const-mul-2 in 1 <223227> out 1 <223228> # join
add in 2 <222956 223228> out 1 <223229>  # join source bit 7
const-mul-2 in 1 <223229> out 1 <223230> # join
add in 2 <222955 223230> out 1 <223231>  # join source bit 6
const-mul-2 in 1 <223231> out 1 <223232> # join
add in 2 <222954 223232> out 1 <223233>  # join source bit 5
const-mul-2 in 1 <223233> out 1 <223234> # join
add in 2 <222953 223234> out 1 <223235>  # join source bit 4
const-mul-2 in 1 <223235> out 1 <223236> # join
add in 2 <222952 223236> out 1 <223237>  # join source bit 3
const-mul-2 in 1 <223237> out 1 <223238> # join
add in 2 <222951 223238> out 1 <223239>  # join source bit 2
const-mul-2 in 1 <223239> out 1 <223240> # join
add in 2 <222950 223240> out 1 <223241>  # join source bit 1
const-mul-2 in 1 <223241> out 1 <223242> # join
add in 2 <222949 223242> out 1 <223243>  # join source bit 0
add in 2 <223243 223243> out 1 <223244>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <222373> out 1 <223245> # multiply-by-constant 4294967295
add in 2 <222947 223245> out 1 <223246>  # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <223246> out 265 <223247 223248 223249 223250 223251 223252 223253 223254 223255 223256 223257 223258 223259 223260 223261 223262 223263 223264 223265 223266 223267 223268 223269 223270 223271 223272 223273 223274 223275 223276 223277 223278 223279 223280 223281 223282 223283 223284 223285 223286 223287 223288 223289 223290 223291 223292 223293 223294 223295 223296 223297 223298 223299 223300 223301 223302 223303 223304 223305 223306 223307 223308 223309 223310 223311 223312 223313 223314 223315 223316 223317 223318 223319 223320 223321 223322 223323 223324 223325 223326 223327 223328 223329 223330 223331 223332 223333 223334 223335 223336 223337 223338 223339 223340 223341 223342 223343 223344 223345 223346 223347 223348 223349 223350 223351 223352 223353 223354 223355 223356 223357 223358 223359 223360 223361 223362 223363 223364 223365 223366 223367 223368 223369 223370 223371 223372 223373 223374 223375 223376 223377 223378 223379 223380 223381 223382 223383 223384 223385 223386 223387 223388 223389 223390 223391 223392 223393 223394 223395 223396 223397 223398 223399 223400 223401 223402 223403 223404 223405 223406 223407 223408 223409 223410 223411 223412 223413 223414 223415 223416 223417 223418 223419 223420 223421 223422 223423 223424 223425 223426 223427 223428 223429 223430 223431 223432 223433 223434 223435 223436 223437 223438 223439 223440 223441 223442 223443 223444 223445 223446 223447 223448 223449 223450 223451 223452 223453 223454 223455 223456 223457 223458 223459 223460 223461 223462 223463 223464 223465 223466 223467 223468 223469 223470 223471 223472 223473 223474 223475 223476 223477 223478 223479 223480 223481 223482 223483 223484 223485 223486 223487 223488 223489 223490 223491 223492 223493 223494 223495 223496 223497 223498 223499 223500 223501 223502 223503 223504 223505 223506 223507 223508 223509 223510 223511> # SplitBus
mul in 2 <223278 223244> out 1 <223512>  # cond trueterm
const-mul-neg-1 in 1 <223278> out 1 <223513> # cond minuscond
add in 2 <100 223513> out 1 <223514>     # cond negcond
mul in 2 <223514 222373> out 1 <223515>  # cond falseterm
add in 2 <223512 223515> out 1 <223516>  # cond result
mul in 2 <222201 222165> out 1 <223517>  # cond trueterm
const-mul-neg-1 in 1 <222201> out 1 <223518> # cond minuscond
add in 2 <100 223518> out 1 <223519>     # cond negcond
mul in 2 <223519 222162> out 1 <223520>  # cond falseterm
add in 2 <223517 223520> out 1 <223521>  # cond result
mul in 2 <222057 222021> out 1 <223522>  # cond trueterm
const-mul-neg-1 in 1 <222057> out 1 <223523> # cond minuscond
add in 2 <100 223523> out 1 <223524>     # cond negcond
mul in 2 <223524 222018> out 1 <223525>  # cond falseterm
add in 2 <223522 223525> out 1 <223526>  # cond result
const-mul-ffffffff in 1 <223526> out 1 <223527> # multiply-by-constant 4294967295
add in 2 <223526 223521> out 1 <223528>  # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
add in 2 <223528 223527> out 1 <223529>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <223529> out 1 <223530> # multiply-by-constant 4294967295
add in 2 <223528 223530> out 1 <223531>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <223526> out 1 <223532> # multiply-by-constant 4294967295
add in 2 <223521 223532> out 1 <223533>  # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <223533> out 200 <223534 223535 223536 223537 223538 223539 223540 223541 223542 223543 223544 223545 223546 223547 223548 223549 223550 223551 223552 223553 223554 223555 223556 223557 223558 223559 223560 223561 223562 223563 223564 223565 223566 223567 223568 223569 223570 223571 223572 223573 223574 223575 223576 223577 223578 223579 223580 223581 223582 223583 223584 223585 223586 223587 223588 223589 223590 223591 223592 223593 223594 223595 223596 223597 223598 223599 223600 223601 223602 223603 223604 223605 223606 223607 223608 223609 223610 223611 223612 223613 223614 223615 223616 223617 223618 223619 223620 223621 223622 223623 223624 223625 223626 223627 223628 223629 223630 223631 223632 223633 223634 223635 223636 223637 223638 223639 223640 223641 223642 223643 223644 223645 223646 223647 223648 223649 223650 223651 223652 223653 223654 223655 223656 223657 223658 223659 223660 223661 223662 223663 223664 223665 223666 223667 223668 223669 223670 223671 223672 223673 223674 223675 223676 223677 223678 223679 223680 223681 223682 223683 223684 223685 223686 223687 223688 223689 223690 223691 223692 223693 223694 223695 223696 223697 223698 223699 223700 223701 223702 223703 223704 223705 223706 223707 223708 223709 223710 223711 223712 223713 223714 223715 223716 223717 223718 223719 223720 223721 223722 223723 223724 223725 223726 223727 223728 223729 223730 223731 223732 223733> # SplitBus
mul in 2 <223565 223531> out 1 <223734>  # cond trueterm
const-mul-neg-1 in 1 <223565> out 1 <223735> # cond minuscond
add in 2 <100 223735> out 1 <223736>     # cond negcond
mul in 2 <223736 223521> out 1 <223737>  # cond falseterm
add in 2 <223734 223737> out 1 <223738>  # cond result
const-mul-ffffffff in 1 <223738> out 1 <223739> # multiply-by-constant 4294967295
add in 2 <223738 223516> out 1 <223740>  # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
split in 1 <223740> out 235 <223741 223742 223743 223744 223745 223746 223747 223748 223749 223750 223751 223752 223753 223754 223755 223756 223757 223758 223759 223760 223761 223762 223763 223764 223765 223766 223767 223768 223769 223770 223771 223772 223773 223774 223775 223776 223777 223778 223779 223780 223781 223782 223783 223784 223785 223786 223787 223788 223789 223790 223791 223792 223793 223794 223795 223796 223797 223798 223799 223800 223801 223802 223803 223804 223805 223806 223807 223808 223809 223810 223811 223812 223813 223814 223815 223816 223817 223818 223819 223820 223821 223822 223823 223824 223825 223826 223827 223828 223829 223830 223831 223832 223833 223834 223835 223836 223837 223838 223839 223840 223841 223842 223843 223844 223845 223846 223847 223848 223849 223850 223851 223852 223853 223854 223855 223856 223857 223858 223859 223860 223861 223862 223863 223864 223865 223866 223867 223868 223869 223870 223871 223872 223873 223874 223875 223876 223877 223878 223879 223880 223881 223882 223883 223884 223885 223886 223887 223888 223889 223890 223891 223892 223893 223894 223895 223896 223897 223898 223899 223900 223901 223902 223903 223904 223905 223906 223907 223908 223909 223910 223911 223912 223913 223914 223915 223916 223917 223918 223919 223920 223921 223922 223923 223924 223925 223926 223927 223928 223929 223930 223931 223932 223933 223934 223935 223936 223937 223938 223939 223940 223941 223942 223943 223944 223945 223946 223947 223948 223949 223950 223951 223952 223953 223954 223955 223956 223957 223958 223959 223960 223961 223962 223963 223964 223965 223966 223967 223968 223969 223970 223971 223972 223973 223974 223975> # SplitBus
const-mul-2 in 1 <223772> out 1 <223976> # join source bit 31
add in 2 <223771 223976> out 1 <223977>  # join source bit 30
const-mul-2 in 1 <223977> out 1 <223978> # join
add in 2 <223770 223978> out 1 <223979>  # join source bit 29
const-mul-2 in 1 <223979> out 1 <223980> # join
add in 2 <223769 223980> out 1 <223981>  # join source bit 28
const-mul-2 in 1 <223981> out 1 <223982> # join
add in 2 <223768 223982> out 1 <223983>  # join source bit 27
const-mul-2 in 1 <223983> out 1 <223984> # join
add in 2 <223767 223984> out 1 <223985>  # join source bit 26
const-mul-2 in 1 <223985> out 1 <223986> # join
add in 2 <223766 223986> out 1 <223987>  # join source bit 25
const-mul-2 in 1 <223987> out 1 <223988> # join
add in 2 <223765 223988> out 1 <223989>  # join source bit 24
const-mul-2 in 1 <223989> out 1 <223990> # join
add in 2 <223764 223990> out 1 <223991>  # join source bit 23
const-mul-2 in 1 <223991> out 1 <223992> # join
add in 2 <223763 223992> out 1 <223993>  # join source bit 22
const-mul-2 in 1 <223993> out 1 <223994> # join
add in 2 <223762 223994> out 1 <223995>  # join source bit 21
const-mul-2 in 1 <223995> out 1 <223996> # join
add in 2 <223761 223996> out 1 <223997>  # join source bit 20
const-mul-2 in 1 <223997> out 1 <223998> # join
add in 2 <223760 223998> out 1 <223999>  # join source bit 19
const-mul-2 in 1 <223999> out 1 <224000> # join
add in 2 <223759 224000> out 1 <224001>  # join source bit 18
const-mul-2 in 1 <224001> out 1 <224002> # join
add in 2 <223758 224002> out 1 <224003>  # join source bit 17
const-mul-2 in 1 <224003> out 1 <224004> # join
add in 2 <223757 224004> out 1 <224005>  # join source bit 16
const-mul-2 in 1 <224005> out 1 <224006> # join
add in 2 <223756 224006> out 1 <224007>  # join source bit 15
const-mul-2 in 1 <224007> out 1 <224008> # join
add in 2 <223755 224008> out 1 <224009>  # join source bit 14
const-mul-2 in 1 <224009> out 1 <224010> # join
add in 2 <223754 224010> out 1 <224011>  # join source bit 13
const-mul-2 in 1 <224011> out 1 <224012> # join
add in 2 <223753 224012> out 1 <224013>  # join source bit 12
const-mul-2 in 1 <224013> out 1 <224014> # join
add in 2 <223752 224014> out 1 <224015>  # join source bit 11
const-mul-2 in 1 <224015> out 1 <224016> # join
add in 2 <223751 224016> out 1 <224017>  # join source bit 10
const-mul-2 in 1 <224017> out 1 <224018> # join
add in 2 <223750 224018> out 1 <224019>  # join source bit 9
const-mul-2 in 1 <224019> out 1 <224020> # join
add in 2 <223749 224020> out 1 <224021>  # join source bit 8
const-mul-2 in 1 <224021> out 1 <224022> # join
add in 2 <223748 224022> out 1 <224023>  # join source bit 7
const-mul-2 in 1 <224023> out 1 <224024> # join
add in 2 <223747 224024> out 1 <224025>  # join source bit 6
const-mul-2 in 1 <224025> out 1 <224026> # join
add in 2 <223746 224026> out 1 <224027>  # join source bit 5
const-mul-2 in 1 <224027> out 1 <224028> # join
add in 2 <223745 224028> out 1 <224029>  # join source bit 4
const-mul-2 in 1 <224029> out 1 <224030> # join
add in 2 <223744 224030> out 1 <224031>  # join source bit 3
const-mul-2 in 1 <224031> out 1 <224032> # join
add in 2 <223743 224032> out 1 <224033>  # join source bit 2
const-mul-2 in 1 <224033> out 1 <224034> # join
add in 2 <223742 224034> out 1 <224035>  # join source bit 1
const-mul-2 in 1 <224035> out 1 <224036> # join
add in 2 <223741 224036> out 1 <224037>  # join source bit 0
add in 2 <224037 224037> out 1 <224038>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <224038> out 1 <224039> # multiply-by-constant 4294967295
add in 2 <223740 224039> out 1 <224040>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <223738> out 1 <224041> # multiply-by-constant 4294967295
add in 2 <223516 224041> out 1 <224042>  # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <224042> out 267 <224043 224044 224045 224046 224047 224048 224049 224050 224051 224052 224053 224054 224055 224056 224057 224058 224059 224060 224061 224062 224063 224064 224065 224066 224067 224068 224069 224070 224071 224072 224073 224074 224075 224076 224077 224078 224079 224080 224081 224082 224083 224084 224085 224086 224087 224088 224089 224090 224091 224092 224093 224094 224095 224096 224097 224098 224099 224100 224101 224102 224103 224104 224105 224106 224107 224108 224109 224110 224111 224112 224113 224114 224115 224116 224117 224118 224119 224120 224121 224122 224123 224124 224125 224126 224127 224128 224129 224130 224131 224132 224133 224134 224135 224136 224137 224138 224139 224140 224141 224142 224143 224144 224145 224146 224147 224148 224149 224150 224151 224152 224153 224154 224155 224156 224157 224158 224159 224160 224161 224162 224163 224164 224165 224166 224167 224168 224169 224170 224171 224172 224173 224174 224175 224176 224177 224178 224179 224180 224181 224182 224183 224184 224185 224186 224187 224188 224189 224190 224191 224192 224193 224194 224195 224196 224197 224198 224199 224200 224201 224202 224203 224204 224205 224206 224207 224208 224209 224210 224211 224212 224213 224214 224215 224216 224217 224218 224219 224220 224221 224222 224223 224224 224225 224226 224227 224228 224229 224230 224231 224232 224233 224234 224235 224236 224237 224238 224239 224240 224241 224242 224243 224244 224245 224246 224247 224248 224249 224250 224251 224252 224253 224254 224255 224256 224257 224258 224259 224260 224261 224262 224263 224264 224265 224266 224267 224268 224269 224270 224271 224272 224273 224274 224275 224276 224277 224278 224279 224280 224281 224282 224283 224284 224285 224286 224287 224288 224289 224290 224291 224292 224293 224294 224295 224296 224297 224298 224299 224300 224301 224302 224303 224304 224305 224306 224307 224308 224309> # SplitBus
mul in 2 <224074 224040> out 1 <224310>  # cond trueterm
const-mul-neg-1 in 1 <224074> out 1 <224311> # cond minuscond
add in 2 <100 224311> out 1 <224312>     # cond negcond
mul in 2 <224312 223516> out 1 <224313>  # cond falseterm
add in 2 <224310 224313> out 1 <224314>  # cond result
add in 2 <224314 104> out 1 <224315>     # ArithBusReq.AddReq(DFG.Conditional,DFG.Constant)
const-mul-ffffffff in 1 <70> out 1 <224316> # multiply-by-constant 4294967295
add in 2 <224315 224316> out 1 <224317>  # 'CmpLT DFG.Add - DFG.Input'
split in 1 <224317> outplitBus
mul in 2 <224349 103> out 1 <224556>     # cond trueterm
const-mul-neg-1 in 1 <224349> out 1 <224557> # cond minuscond
add in 2 <100 224557> out 1 <224558>     # cond negcond
mul in 2 <224558 102> out 1 <224559>     # cond falseterm
add in 2 <224556 224559> out 1 <224560>  # cond result
add in 2 <224314 3084> out 1 <224561>    # ArithBusReq.AddReq(DFG.Conditional,DFG.Negate)
const-mul-ffffffff in 1 <224561> out 1 <224562> # multiply-by-constant 4294967295
add in 2 <70 224562> out 1 <224563>      # 'CmpLT DFG.Input - DFG.Subtract'
split in 1 <224563> out 270 <224564 224565 224566 224567 224568 224569 224570 224571 224572 224573 224574 224575 224576 224577 224578 224579 224580 224581 224582 224583 224584 224585 224586 224587 224588 224589 224590 224591 224592 224593 224594 224595 224596 224597 224598 224599 224600 224601 224602 224603 224604 224605 224606 224607 224608 224609 224610 224611 224612 224613 224614 224615 224616 224617 224618 224619 224620 224621 224622 224623 224624 224625 224626 224627 224628 224629 224630 224631 224632 224633 224634 224635 224636 224637 224638 224639 224640 224641 224642 224643 224644 224645 224646 224647 224648 224649 224650 224651 224652 224653 224654 224655 224656 224657 224658 224659 224660 224661 224662 224663 224664 224665 224666 224667 224668 224669 224670 224671 224672 224673 224674 224675 224676 224677 224678 224679 224680 224681 224682 224683 224684 224685 224686 224687 224688 224689 224690 224691 224692 224693 224694 224695 224696 224697 224698 224699 224700 224701 224702 224703 224704 224705 224706 224707 224708 224709 224710 224711 224712 224713 224714 224715 224716 224717 224718 224719 224720 224721 224722 224723 224724 224725 224726 224727 224728 224729 224730 224731 224732 224733 224734 224735 224736 224737 224738 224739 224740 224741 224742 224743 224744 224745 224746 224747 224748 224749 224750 224751 224752 224753 224754 224755 224756 224757 224758 224759 224760 224761 224762 224763 224764 224765 224766 224767 224768 224769 224770 224771 224772 224773 224774 224775 224776 224777 224778 224779 224780 224781 224782 224783 224784 224785 224786 224787 224788 224789 224790 224791 224792 224793 224794 224795 224796 224797 224798 224799 224800 224801 224802 224803 224804 224805 224806 224807 224808 224809 224810 224811 224812 224813 224814 224815 224816 224817 224818 224819 224820 224821 224822 224823 224824 224825 224826 224827 224828 224829 224830 224831 224832 224833> # SplitBus
mul in 2 <224595 103> out 1 <224834>     # cond trueterm
const-mul-neg-1 in 1 <224595> out 1 <224835> # cond minuscond
add in 2 <100 224835> out 1 <224836>     # cond negcond
mul in 2 <224836 224560> out 1 <224837>  # cond falseterm
add in 2 <224834 224837> out 1 <224838>  # cond result
const-mul-ffffffff in 1 <69> out 1 <224839> # multiply-by-constant 4294967295
add in 2 <69 70> out 1 <224840>          # ArithBusReq.AddReq(DFG.Input,DFG.Input)
add in 2 <224840 224839> out 1 <224841>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <224841> out 1 <224842> # multiply-by-constant 4294967295
add in 2 <224840 224842> out 1 <224843>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <69> out 1 <224844> # multiply-by-constant 4294967295
add in 2 <70 224844> out 1 <224845>      # 'CmpLT DFG.Input - DFG.Input'
split in 1 <224845> out 65 <224846 224847 224848 224849 224850 224851 224852 224853 224854 224855 224856 224857 224858 224859 224860 224861 224862 224863 224864 224865 224866 224867 224868 224869 224870 224871 224872 224873 224874 224875 224876 224877 224878 224879 224880 224881 224882 224883 224884 224885 224886 224887 224888 224889 224890 224891 224892 224893 224894 224895 224896 224897 224898 224899 224900 224901 224902 224903 224904 224905 224906 224907 224908 224909 224910> # SplitBus
mul in 2 <224877 224843> out 1 <224911>  # cond trueterm
const-mul-neg-1 in 1 <224877> out 1 <224912> # cond minuscond
add in 2 <100 224912> out 1 <224913>     # cond negcond
mul in 2 <224913 70> out 1 <224914>      # cond falseterm
add in 2 <224911 224914> out 1 <224915>  # cond result
const-mul-ffffffff in 1 <224915> out 1 <224916> # multiply-by-constant 4294967295
add in 2 <224915 71> out 1 <224917>      # ArithBusReq.AddReq(DFG.Conditional,DFG.Input)
add in 2 <224917 224916> out 1 <224918>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <224918> out 1 <224919> # multiply-by-constant 4294967295
add in 2 <224917 224919> out 1 <224920>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <224915> out 1 <224921> # multiply-by-constant 4294967295
add in 2 <71 224921> out 1 <224922>      # 'CmpLT DFG.Input - DFG.Conditional'
split in 1 <224922> out 131 <224923 224924 224925 224926 224927 224928 224929 224930 224931 224932 224933 224934 224935 224936 224937 224938 224939 224940 224941 224942 224943 224944 224945 224946 224947 224948 224949 224950 224951 224952 224953 224954 224955 224956 224957 224958 224959 224960 224961 224962 224963 224964 224965 224966 224967 224968 224969 224970 224971 224972 224973 224974 224975 224976 224977 224978 224979 224980 224981 224982 224983 224984 224985 224986 224987 224988 224989 224990 224991 224992 224993 224994 224995 224996 224997 224998 224999 225000 225001 225002 225003 225004 225005 225006 225007 225008 225009 225010 225011 225012 225013 225014 225015 225016 225017 225018 225019 225020 225021 225022 225023 225024 225025 225026 225027 225028 225029 225030 225031 225032 225033 225034 225035 225036 225037 225038 225039 225040 225041 225042 225043 225044 225045 225046 225047 225048 225049 225050 225051 225052 225053> # SplitBus
mul in 2 <224954 224920> out 1 <225054>  # cond trueterm
const-mul-neg-1 in 1 <224954> out 1 <225055> # cond minuscond
add in 2 <100 225055> out 1 <225056>     # cond negcond
mul in 2 <225056 71> out 1 <225057>      # cond falseterm
add in 2 <225054 225057> out 1 <225058>  # cond result
const-mul-ffffffff in 1 <225058> out 1 <225059> # multiply-by-constant 4294967295
add in 2 <225058 72> out 1 <225060>      # ArithBusReq.AddReq(DFG.Conditional,DFG.Input)
add in 2 <225060 225059> out 1 <225061>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <225058> out 1 <225062> # multiply-by-constant 4294967295
add in 2 <72 225062> out 1 <225063>      # 'CmpLT DFG.Input - DFG.Conditional'
split in 1 <225063> out 197 <225064 225065 225066 225067 225068 225069 225070 225071 225072 225073 225074 225075 225076 225077 225078 225079 225080 225081 225082 225083 225084 225085 225086 225087 225088 225089 225090 225091 225092 225093 225094 225095 225096 225097 225098 225099 225100 225101 225102 225103 225104 225105 225106 225107 225108 225109 225110 225111 225112 225113 225114 225115 225116 225117 225118 225119 225120 225121 225122 225123 225124 225125 225126 225127 225128 225129 225130 225131 225132 225133 225134 225135 225136 225137 225138 225139 225140 225141 225142 225143 225144 225145 225146 225147 225148 225149 225150 225151 225152 225153 225154 225155 225156 225157 225158 225159 225160 225161 225162 225163 225164 225165 225166 225167 225168 225169 225170 225171 225172 225173 225174 225175 225176 225177 225178 225179 225180 225181 225182 225183 225184 225185 225186 225187 225188 225189 225190 225191 225192 225193 225194 225195 225196 225197 225198 225199 225200 225201 225202 225203 225204 225205 225206 225207 225208 225209 225210 225211 225212 225213 225214 225215 225216 225217 225218 225219 225220 225221 225222 225223 225224 225225 225226 225227 225228 225229 225230 225231 225232 225233 225234 225235 225236 225237 225238 225239 225240 225241 225242 225243 225244 225245 225246 225247 225248 225249 225250 225251 225252 225253 225254 225255 225256 225257 225258 225259 225260> # SplitBus
mul in 2 <225095 225061> out 1 <225261>  # cond trueterm
const-mul-neg-1 in 1 <225095> out 1 <225262> # cond minuscond
add in 2 <100 225262> out 1 <225263>     # cond negcond
mul in 2 <225263 225058> out 1 <225264>  # cond falseterm
add in 2 <225261 225264> out 1 <225265>  # cond result
mul in 2 <224954 224918> out 1 <225266>  # cond trueterm
const-mul-neg-1 in 1 <224954> out 1 <225267> # cond minuscond
add in 2 <100 225267> out 1 <225268>     # cond negcond
mul in 2 <225268 224915> out 1 <225269>  # cond falseterm
add in 2 <225266 225269> out 1 <225270>  # cond result
mul in 2 <224877 224841> out 1 <225271>  # cond trueterm
const-mul-neg-1 in 1 <224877> out 1 <225272> # cond minuscond
add in 2 <100 225272> out 1 <225273>     # cond negcond
mul in 2 <225273 69> out 1 <225274>      # cond falseterm
add in 2 <225271 225274> out 1 <225275>  # cond result
const-mul-ffffffff in 1 <225275> out 1 <225276> # multiply-by-constant 4294967295
add in 2 <225275 225270> out 1 <225277>  # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
add in 2 <225277 225276> out 1 <225278>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <225278> out 1 <225279> # multiply-by-constant 4294967295
add in 2 <225277 225279> out 1 <225280>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <225275> out 1 <225281> # multiply-by-constant 4294967295
add in 2 <225270 225281> out 1 <225282>  # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <225282> out 132 <225283 225284 225285 225286 225287 225288 225289 225290 225291 225292 225293 225294 225295 225296 225297 225298 225299 225300 225301 225302 225303 225304 225305 225306 225307 225308 225309 225310 225311 225312 225313 225314 225315 225316 225317 225318 225319 225320 225321 225322 225323 225324 225325 225326 225327 225328 225329 225330 225331 225332 225333 225334 225335 225336 225337 225338 225339 225340 225341 225342 225343 225344 225345 225346 225347 225348 225349 225350 225351 225352 225353 225354 225355 225356 225357 225358 225359 225360 225361 225362 225363 225364 225365 225366 225367 225368 225369 225370 225371 225372 225373 225374 225375 225376 225377 225378 225379 225380 225381 225382 225383 225384 225385 225386 225387 225388 225389 225390 225391 225392 225393 225394 225395 225396 225397 225398 225399 225400 225401 225402 225403 225404 225405 225406 225407 225408 225409 225410 225411 225412 225413 225414> # SplitBus
mul in 2 <225314 225280> out 1 <225415>  # cond trueterm
const-mul-neg-1 in 1 <225314> out 1 <225416> # cond minuscond
add in 2 <100 225416> out 1 <225417>     # cond negcond
mul in 2 <225417 225270> out 1 <225418>  # cond falseterm
add in 2 <225415 225418> out 1 <225419>  # cond result
const-mul-ffffffff in 1 <225419> out 1 <225420> # multiply-by-constant 4294967295
add in 2 <225419 225265> out 1 <225421>  # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
add in 2 <225421 225420> out 1 <225422>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <225422> out 1 <225423> # multiply-by-constant 4294967295
add in 2 <225421 225423> out 1 <225424>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <225419> out 1 <225425> # multiply-by-constant 4294967295
add in 2 <225265 225425> out 1 <225426>  # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <225426> out 199 <225427 225428 225429 225430 225431 225432 225433 225434 225435 225436 225437 225438 225439 225440 225441 225442 225443 225444 225445 225446 225447 225448 225449 225450 225451 225452 225453 225454 225455 225456 225457 225458 225459 225460 225461 225462 225463 225464 225465 225466 225467 225468 225469 225470 225471 225472 225473 225474 225475 225476 225477 225478 225479 225480 225481 225482 225483 225484 225485 225486 225487 225488 225489 225490 225491 225492 225493 225494 225495 225496 225497 225498 225499 225500 225501 225502 225503 225504 225505 225506 225507 225508 225509 225510 225511 225512 225513 225514 225515 225516 225517 225518 225519 225520 225521 225522 225523 225524 225525 225526 225527 225528 225529 225530 225531 225532 225533 225534 225535 225536 225537 225538 225539 225540 225541 225542 225543 225544 225545 225546 225547 225548 225549 225550 225551 225552 225553 225554 225555 225556 225557 225558 225559 225560 225561 225562 225563 225564 225565 225566 225567 225568 225569 225570 225571 225572 225573 225574 225575 225576 225577 225578 225579 225580 225581 225582 225583 225584 225585 225586 225587 225588 225589 225590 225591 225592 225593 225594 225595 225596 225597 225598 225599 225600 225601 225602 225603 225604 225605 225606 225607 225608 225609 225610 225611 225612 225613 225614 225615 225616 225617 225618 225619 225620 225621 225622 225623 225624 225625> # SplitBus
mul in 2 <225458 225424> out 1 <225626>  # cond trueterm
const-mul-neg-1 in 1 <225458> out 1 <225627> # cond minuscond
add in 2 <100 225627> out 1 <225628>     # cond negcond
mul in 2 <225628 225265> out 1 <225629>  # cond falseterm
add in 2 <225626 225629> out 1 <225630>  # cond result
const-mul-ffffffff in 1 <225630> out 1 <225631> # multiply-by-constant 4294967295
const-mul-ffffffff in 1 <225061> out 1 <225632> # multiply-by-constant 4294967295
add in 2 <225060 225632> out 1 <225633>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
mul in 2 <225095 225633> out 1 <225634>  # cond trueterm
const-mul-neg-1 in 1 <225095> out 1 <225635> # cond minuscond
add in 2 <100 225635> out 1 <225636>     # cond negcond
mul in 2 <225636 72> out 1 <225637>      # cond falseterm
add in 2 <225634 225637> out 1 <225638>  # cond result
const-mul-ffffffff in 1 <225638> out 1 <225639> # multiply-by-constant 4294967295
add in 2 <225638 73> out 1 <225640>      # ArithBusReq.AddReq(DFG.Conditional,DFG.Input)
split in 1 <225640> out 231 <225641 225642 225643 225644 225645 225646 225647 225648 225649 225650 225651 225652 225653 225654 225655 225656 225657 225658 225659 225660 225661 225662 225663 225664 225665 225666 225667 225668 225669 225670 225671 225672 225673 225674 225675 225676 225677 225678 225679 225680 225681 225682 225683 225684 225685 225686 225687 225688 225689 225690 225691 225692 225693 225694 225695 225696 225697 225698 225699 225700 225701 225702 225703 225704 225705 225706 225707 225708 225709 225710 225711 225712 225713 225714 225715 225716 225717 225718 225719 225720 225721 225722 225723 225724 225725 225726 225727 225728 225729 225730 225731 225732 225733 225734 225735 225736 225737 225738 225739 225740 225741 225742 225743 225744 225745 225746 225747 225748 225749 225750 225751 225752 225753 225754 225755 225756 225757 225758 225759 225760 225761 225762 225763 225764 225765 225766 225767 225768 225769 225770 225771 225772 225773 225774 225775 225776 225777 225778 225779 225780 225781 225782 225783 225784 225785 225786 225787 225788 225789 225790 225791 225792 225793 225794 225795 225796 225797 225798 225799 225800 225801 225802 225803 225804 225805 225806 225807 225808 225809 225810 225811 225812 225813 225814 225815 225816 225817 225818 225819 225820 225821 225822 225823 225824 225825 225826 225827 225828 225829 225830 225831 225832 225833 225834 225835 225836 225837 225838 225839 225840 225841 225842 225843 225844 225845 225846 225847 225848 225849 225850 225851 225852 225853 225854 225855 225856 225857 225858 225859 225860 225861 225862 225863 225864 225865 225866 225867 225868 225869 225870 225871> # SplitBus
const-mul-2 in 1 <225672> out 1 <225872> # join source bit 31
add in 2 <225671 225872> out 1 <225873>  # join source bit 30
const-mul-2 in 1 <225873> out 1 <225874> # join
add in 2 <225670 225874> out 1 <225875>  # join source bit 29
const-mul-2 in 1 <225875> out 1 <225876> # join
add in 2 <225669 225876> out 1 <225877>  # join source bit 28
const-mul-2 in 1 <225877> out 1 <225878> # join
add in 2 <225668 225878> out 1 <225879>  # join source bit 27
const-mul-2 in 1 <225879> out 1 <225880> # join
add in 2 <225667 225880> out 1 <225881>  # join source bit 26
const-mul-2 in 1 <225881> out 1 <225882> # join
add in 2 <225666 225882> out 1 <225883>  # join source bit 25
const-mul-2 in 1 <225883> out 1 <225884> # join
add in 2 <225665 225884> out 1 <225885>  # join source bit 24
const-mul-2 in 1 <225885> out 1 <225886> # join
add in 2 <225664 225886> out 1 <225887>  # join source bit 23
const-mul-2 in 1 <225887> out 1 <225888> # join
add in 2 <225663 225888> out 1 <225889>  # join source bit 22
const-mul-2 in 1 <225889> out 1 <225890> # join
add in 2 <225662 225890> out 1 <225891>  # join source bit 21
const-mul-2 in 1 <225891> out 1 <225892> # join
add in 2 <225661 225892> out 1 <225893>  # join source bit 20
const-mul-2 in 1 <225893> out 1 <225894> # join
add in 2 <225660 225894> out 1 <225895>  # join source bit 19
const-mul-2 in 1 <225895> out 1 <225896> # join
add in 2 <225659 225896> out 1 <225897>  # join source bit 18
const-mul-2 in 1 <225897> out 1 <225898> # join
add in 2 <225658 225898> out 1 <225899>  # join source bit 17
const-mul-2 in 1 <225899> out 1 <225900> # join
add in 2 <225657 225900> out 1 <225901>  # join source bit 16
const-mul-2 in 1 <225901> out 1 <225902> # join
add in 2 <225656 225902> out 1 <225903>  # join source bit 15
const-mul-2 in 1 <225903> out 1 <225904> # join
add in 2 <225655 225904> out 1 <225905>  # join source bit 14
const-mul-2 in 1 <225905> out 1 <225906> # join
add in 2 <225654 225906> out 1 <225907>  # join source bit 13
const-mul-2 in 1 <225907> out 1 <225908> # join
add in 2 <225653 225908> out 1 <225909>  # join source bit 12
const-mul-2 in 1 <225909> out 1 <225910> # join
add in 2 <225652 225910> out 1 <225911>  # join source bit 11
const-mul-2 in 1 <225911> out 1 <225912> # join
add in 2 <225651 225912> out 1 <225913>  # join source bit 10
const-mul-2 in 1 <225913> out 1 <225914> # join
add in 2 <225650 225914> out 1 <225915>  # join source bit 9
const-mul-2 in 1 <225915> out 1 <225916> # join
add in 2 <225649 225916> out 1 <225917>  # join source bit 8
const-mul-2 in 1 <225917> out 1 <225918> # join
add in 2 <225648 225918> out 1 <225919>  # join source bit 7
const-mul-2 in 1 <225919> out 1 <225920> # join
add in 2 <225647 225920> out 1 <225921>  # join source bit 6
const-mul-2 in 1 <225921> out 1 <225922> # join
add in 2 <225646 225922> out 1 <225923>  # join source bit 5
const-mul-2 in 1 <225923> out 1 <225924> # join
add in 2 <225645 225924> out 1 <225925>  # join source bit 4
const-mul-2 in 1 <225925> out 1 <225926> # join
add in 2 <225644 225926> out 1 <225927>  # join source bit 3
const-mul-2 in 1 <225927> out 1 <225928> # join
add in 2 <225643 225928> out 1 <225929>  # join source bit 2
const-mul-2 in 1 <225929> out 1 <225930> # join
add in 2 <225642 225930> out 1 <225931>  # join source bit 1
const-mul-2 in 1 <225931> out 1 <225932> # join
add in 2 <225641 225932> out 1 <225933>  # join source bit 0
add in 2 <225933 225933> out 1 <225934>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <225638> out 1 <225935> # multiply-by-constant 4294967295
add in 2 <73 225935> out 1 <225936>      # 'CmpLT DFG.Input - DFG.Conditional'
split in 1 <225936> out 263 <225937 225938 225939 225940 225941 225942 225943 225944 225945 225946 225947 225948 225949 225950 225951 225952 225953 225954 225955 225956 225957 225958 225959 225960 225961 225962 225963 225964 225965 225966 225967 225968 225969 225970 225971 225972 225973 225974 225975 225976 225977 225978 225979 225980 225981 225982 225983 225984 225985 225986 225987 225988 225989 225990 225991 225992 225993 225994 225995 225996 225997 225998 225999 226000 226001 226002 226003 226004 226005 226006 226007 226008 226009 226010 226011 226012 226013 226014 226015 226016 226017 226018 226019 226020 226021 226022 226023 226024 226025 226026 226027 226028 226029 226030 226031 226032 226033 226034 226035 226036 226037 226038 226039 226040 226041 226042 226043 226044 226045 226046 226047 226048 226049 226050 226051 226052 226053 226054 226055 226056 226057 226058 226059 226060 226061 226062 226063 226064 226065 226066 226067 226068 226069 226070 226071 226072 226073 226074 226075 226076 226077 226078 226079 226080 226081 226082 226083 226084 226085 226086 226087 226088 226089 226090 226091 226092 226093 226094 226095 226096 226097 226098 226099 226100 226101 226102 226103 226104 226105 226106 226107 226108 226109 226110 226111 226112 226113 226114 226115 226116 226117 226118 226119 226120 226121 226122 226123 226124 226125 226126 226127 226128 226129 226130 226131 226132 226133 226134 226135 226136 226137 226138 226139 226140 226141 226142 226143 226144 226145 226146 226147 226148 226149 226150 226151 226152 226153 226154 226155 226156 226157 226158 226159 226160 226161 226162 226163 226164 226165 226166 226167 226168 226169 226170 226171 226172 226173 226174 226175 226176 226177 226178 226179 226180 226181 226182 226183 226184 226185 226186 226187 226188 226189 226190 226191 226192 226193 226194 226195 226196 226197 226198 226199> # SplitBus
mul in 2 <225968 225934> out 1 <226200>  # cond trueterm
const-mul-neg-1 in 1 <225968> out 1 <226201> # cond minuscond
add in 2 <100 226201> out 1 <226202>     # cond negcond
mul in 2 <226202 225638> out 1 <226203>  # cond falseterm
add in 2 <226200 226203> out 1 <226204>  # cond result
add in 2 <225630 226204> out 1 <226205>  # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
split in 1 <226205> outplitBus
const-mul-2 in 1 <226237> out 1 <226439> # join source bit 31
add in 2 <226236 226439> out 1 <226440>  # join source bit 30
const-mul-2 in 1 <226440> out 1 <226441> # join
add in 2 <226235 226441> out 1 <226442>  # join source bit 29
const-mul-2 in 1 <226442> out 1 <226443> # join
add in 2 <226234 226443> out 1 <226444>  # join source bit 28
const-mul-2 in 1 <226444> out 1 <226445> # join
add in 2 <226233 226445> out 1 <226446>  # join source bit 27
const-mul-2 in 1 <226446> out 1 <226447> # join
add in 2 <226232 226447> out 1 <226448>  # join source bit 26
const-mul-2 in 1 <226448> out 1 <226449> # join
add in 2 <226231 226449> out 1 <226450>  # join source bit 25
const-mul-2 in 1 <226450> out 1 <226451> # join
add in 2 <226230 226451> out 1 <226452>  # join source bit 24
const-mul-2 in 1 <226452> out 1 <226453> # join
add in 2 <226229 226453> out 1 <226454>  # join source bit 23
const-mul-2 in 1 <226454> out 1 <226455> # join
add in 2 <226228 226455> out 1 <226456>  # join source bit 22
const-mul-2 in 1 <226456> out 1 <226457> # join
add in 2 <226227 226457> out 1 <226458>  # join source bit 21
const-mul-2 in 1 <226458> out 1 <226459> # join
add in 2 <226226 226459> out 1 <226460>  # join source bit 20
const-mul-2 in 1 <226460> out 1 <226461> # join
add in 2 <226225 226461> out 1 <226462>  # join source bit 19
const-mul-2 in 1 <226462> out 1 <226463> # join
add in 2 <226224 226463> out 1 <226464>  # join source bit 18
const-mul-2 in 1 <226464> out 1 <226465> # join
add in 2 <226223 226465> out 1 <226466>  # join source bit 17
const-mul-2 in 1 <226466> out 1 <226467> # join
add in 2 <226222 226467> out 1 <226468>  # join source bit 16
const-mul-2 in 1 <226468> out 1 <226469> # join
add in 2 <226221 226469> out 1 <226470>  # join source bit 15
const-mul-2 in 1 <226470> out 1 <226471> # join
add in 2 <226220 226471> out 1 <226472>  # join source bit 14
const-mul-2 in 1 <226472> out 1 <226473> # join
add in 2 <226219 226473> out 1 <226474>  # join source bit 13
const-mul-2 in 1 <226474> out 1 <226475> # join
add in 2 <226218 226475> out 1 <226476>  # join source bit 12
const-mul-2 in 1 <226476> out 1 <226477> # join
add in 2 <226217 226477> out 1 <226478>  # join source bit 11
const-mul-2 in 1 <226478> out 1 <226479> # join
add in 2 <226216 226479> out 1 <226480>  # join source bit 10
const-mul-2 in 1 <226480> out 1 <226481> # join
add in 2 <226215 226481> out 1 <226482>  # join source bit 9
const-mul-2 in 1 <226482> out 1 <226483> # join
add in 2 <226214 226483> out 1 <226484>  # join source bit 8
const-mul-2 in 1 <226484> out 1 <226485> # join
add in 2 <226213 226485> out 1 <226486>  # join source bit 7
const-mul-2 in 1 <226486> out 1 <226487> # join
add in 2 <226212 226487> out 1 <226488>  # join source bit 6
const-mul-2 in 1 <226488> out 1 <226489> # join
add in 2 <226211 226489> out 1 <226490>  # join source bit 5
const-mul-2 in 1 <226490> out 1 <226491> # join
add in 2 <226210 226491> out 1 <226492>  # join source bit 4
const-mul-2 in 1 <226492> out 1 <226493> # join
add in 2 <226209 226493> out 1 <226494>  # join source bit 3
const-mul-2 in 1 <226494> out 1 <226495> # join
add in 2 <226208 226495> out 1 <226496>  # join source bit 2
const-mul-2 in 1 <226496> out 1 <226497> # join
add in 2 <226207 226497> out 1 <226498>  # join source bit 1
const-mul-2 in 1 <226498> out 1 <226499> # join
add in 2 <226206 226499> out 1 <226500>  # join source bit 0
add in 2 <226500 226500> out 1 <226501>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <225630> out 1 <226502> # multiply-by-constant 4294967295
add in 2 <226204 226502> out 1 <226503>  # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <226503> outplitBus
mul in 2 <226535 226501> out 1 <226769>  # cond trueterm
const-mul-neg-1 in 1 <226535> out 1 <226770> # cond minuscond
add in 2 <100 226770> out 1 <226771>     # cond negcond
mul in 2 <226771 225630> out 1 <226772>  # cond falseterm
add in 2 <226769 226772> out 1 <226773>  # cond result
mul in 2 <225458 225422> out 1 <226774>  # cond trueterm
const-mul-neg-1 in 1 <225458> out 1 <226775> # cond minuscond
add in 2 <100 226775> out 1 <226776>     # cond negcond
mul in 2 <226776 225419> out 1 <226777>  # cond falseterm
add in 2 <226774 226777> out 1 <226778>  # cond result
mul in 2 <225314 225278> out 1 <226779>  # cond trueterm
const-mul-neg-1 in 1 <225314> out 1 <226780> # cond minuscond
add in 2 <100 226780> out 1 <226781>     # cond negcond
mul in 2 <226781 225275> out 1 <226782>  # cond falseterm
add in 2 <226779 226782> out 1 <226783>  # cond result
const-mul-ffffffff in 1 <226783> out 1 <226784> # multiply-by-constant 4294967295
add in 2 <226783 226778> out 1 <226785>  # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
add in 2 <226785 226784> out 1 <226786>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <226786> out 1 <226787> # multiply-by-constant 4294967295
add in 2 <226785 226787> out 1 <226788>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <226783> out 1 <226789> # multiply-by-constant 4294967295
add in 2 <226778 226789> out 1 <226790>  # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <226790> out 200 <226791 226792 226793 226794 226795 226796 226797 226798 226799 226800 226801 226802 226803 226804 226805 226806 226807 226808 226809 226810 226811 226812 226813 226814 226815 226816 226817 226818 226819 226820 226821 226822 226823 226824 226825 226826 226827 226828 226829 226830 226831 226832 226833 226834 226835 226836 226837 226838 226839 226840 226841 226842 226843 226844 226845 226846 226847 226848 226849 226850 226851 226852 226853 226854 226855 226856 226857 226858 226859 226860 226861 226862 226863 226864 226865 226866 226867 226868 226869 226870 226871 226872 226873 226874 226875 226876 226877 226878 226879 226880 226881 226882 226883 226884 226885 226886 226887 226888 226889 226890 226891 226892 226893 226894 226895 226896 226897 226898 226899 226900 226901 226902 226903 226904 226905 226906 226907 226908 226909 226910 226911 226912 226913 226914 226915 226916 226917 226918 226919 226920 226921 226922 226923 226924 226925 226926 226927 226928 226929 226930 226931 226932 226933 226934 226935 226936 226937 226938 226939 226940 226941 226942 226943 226944 226945 226946 226947 226948 226949 226950 226951 226952 226953 226954 226955 226956 226957 226958 226959 226960 226961 226962 226963 226964 226965 226966 226967 226968 226969 226970 226971 226972 226973 226974 226975 226976 226977 226978 226979 226980 226981 226982 226983 226984 226985 226986 226987 226988 226989 226990> # SplitBus
mul in 2 <226822 226788> out 1 <226991>  # cond trueterm
const-mul-neg-1 in 1 <226822> out 1 <226992> # cond minuscond
add in 2 <100 226992> out 1 <226993>     # cond negcond
mul in 2 <226993 226778> out 1 <226994>  # cond falseterm
add in 2 <226991 226994> out 1 <226995>  # cond result
const-mul-ffffffff in 1 <226995> out 1 <226996> # multiply-by-constant 4294967295
add in 2 <226995 226773> out 1 <226997>  # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
split in 1 <226997> outplitBus
const-mul-2 in 1 <227029> out 1 <227233> # join source bit 31
add in 2 <227028 227233> out 1 <227234>  # join source bit 30
const-mul-2 in 1 <227234> out 1 <227235> # join
add in 2 <227027 227235> out 1 <227236>  # join source bit 29
const-mul-2 in 1 <227236> out 1 <227237> # join
add in 2 <227026 227237> out 1 <227238>  # join source bit 28
const-mul-2 in 1 <227238> out 1 <227239> # join
add in 2 <227025 227239> out 1 <227240>  # join source bit 27
const-mul-2 in 1 <227240> out 1 <227241> # join
add in 2 <227024 227241> out 1 <227242>  # join source bit 26
const-mul-2 in 1 <227242> out 1 <227243> # join
add in 2 <227023 227243> out 1 <227244>  # join source bit 25
const-mul-2 in 1 <227244> out 1 <227245> # join
add in 2 <227022 227245> out 1 <227246>  # join source bit 24
const-mul-2 in 1 <227246> out 1 <227247> # join
add in 2 <227021 227247> out 1 <227248>  # join source bit 23
const-mul-2 in 1 <227248> out 1 <227249> # join
add in 2 <227020 227249> out 1 <227250>  # join source bit 22
const-mul-2 in 1 <227250> out 1 <227251> # join
add in 2 <227019 227251> out 1 <227252>  # join source bit 21
const-mul-2 in 1 <227252> out 1 <227253> # join
add in 2 <227018 227253> out 1 <227254>  # join source bit 20
const-mul-2 in 1 <227254> out 1 <227255> # join
add in 2 <227017 227255> out 1 <227256>  # join source bit 19
const-mul-2 in 1 <227256> out 1 <227257> # join
add in 2 <227016 227257> out 1 <227258>  # join source bit 18
const-mul-2 in 1 <227258> out 1 <227259> # join
add in 2 <227015 227259> out 1 <227260>  # join source bit 17
const-mul-2 in 1 <227260> out 1 <227261> # join
add in 2 <227014 227261> out 1 <227262>  # join source bit 16
const-mul-2 in 1 <227262> out 1 <227263> # join
add in 2 <227013 227263> out 1 <227264>  # join source bit 15
const-mul-2 in 1 <227264> out 1 <227265> # join
add in 2 <227012 227265> out 1 <227266>  # join source bit 14
const-mul-2 in 1 <227266> out 1 <227267> # join
add in 2 <227011 227267> out 1 <227268>  # join source bit 13
const-mul-2 in 1 <227268> out 1 <227269> # join
add in 2 <227010 227269> out 1 <227270>  # join source bit 12
const-mul-2 in 1 <227270> out 1 <227271> # join
add in 2 <227009 227271> out 1 <227272>  # join source bit 11
const-mul-2 in 1 <227272> out 1 <227273> # join
add in 2 <227008 227273> out 1 <227274>  # join source bit 10
const-mul-2 in 1 <227274> out 1 <227275> # join
add in 2 <227007 227275> out 1 <227276>  # join source bit 9
const-mul-2 in 1 <227276> out 1 <227277> # join
add in 2 <227006 227277> out 1 <227278>  # join source bit 8
const-mul-2 in 1 <227278> out 1 <227279> # join
add in 2 <227005 227279> out 1 <227280>  # join source bit 7
const-mul-2 in 1 <227280> out 1 <227281> # join
add in 2 <227004 227281> out 1 <227282>  # join source bit 6
const-mul-2 in 1 <227282> out 1 <227283> # join
add in 2 <227003 227283> out 1 <227284>  # join source bit 5
const-mul-2 in 1 <227284> out 1 <227285> # join
add in 2 <227002 227285> out 1 <227286>  # join source bit 4
const-mul-2 in 1 <227286> out 1 <227287> # join
add in 2 <227001 227287> out 1 <227288>  # join source bit 3
const-mul-2 in 1 <227288> out 1 <227289> # join
add in 2 <227000 227289> out 1 <227290>  # join source bit 2
const-mul-2 in 1 <227290> out 1 <227291> # join
add in 2 <226999 227291> out 1 <227292>  # join source bit 1
const-mul-2 in 1 <227292> out 1 <227293> # join
add in 2 <226998 227293> out 1 <227294>  # join source bit 0
add in 2 <227294 227294> out 1 <227295>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <227295> out 1 <227296> # multiply-by-constant 4294967295
add in 2 <226997 227296> out 1 <227297>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <226995> out 1 <227298> # multiply-by-constant 4294967295
add in 2 <226773 227298> out 1 <227299>  # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <227299> outplitBus
mul in 2 <227331 227297> out 1 <227567>  # cond trueterm
const-mul-neg-1 in 1 <227331> out 1 <227568> # cond minuscond
add in 2 <100 227568> out 1 <227569>     # cond negcond
mul in 2 <227569 226773> out 1 <227570>  # cond falseterm
add in 2 <227567 227570> out 1 <227571>  # cond result
add in 2 <227571 104> out 1 <227572>     # ArithBusReq.AddReq(DFG.Conditional,DFG.Constant)
const-mul-ffffffff in 1 <71> out 1 <227573> # multiply-by-constant 4294967295
add in 2 <227572 227573> out 1 <227574>  # 'CmpLT DFG.Add - DFG.Input'
split in 1 <227574> out 238 <227575 227576 227577 227578 227579 227580 227581 227582 227583 227584 227585 227586 227587 227588 227589 227590 227591 227592 227593 227594 227595 227596 227597 227598 227599 227600 227601 227602 227603 227604 227605 227606 227607 227608 227609 227610 227611 227612 227613 227614 227615 227616 227617 227618 227619 227620 227621 227622 227623 227624 227625 227626 227627 227628 227629 227630 227631 227632 227633 227634 227635 227636 227637 227638 227639 227640 227641 227642 227643 227644 227645 227646 227647 227648 227649 227650 227651 227652 227653 227654 227655 227656 227657 227658 227659 227660 227661 227662 227663 227664 227665 227666 227667 227668 227669 227670 227671 227672 227673 227674 227675 227676 227677 227678 227679 227680 227681 227682 227683 227684 227685 227686 227687 227688 227689 227690 227691 227692 227693 227694 227695 227696 227697 227698 227699 227700 227701 227702 227703 227704 227705 227706 227707 227708 227709 227710 227711 227712 227713 227714 227715 227716 227717 227718 227719 227720 227721 227722 227723 227724 227725 227726 227727 227728 227729 227730 227731 227732 227733 227734 227735 227736 227737 227738 227739 227740 227741 227742 227743 227744 227745 227746 227747 227748 227749 227750 227751 227752 227753 227754 227755 227756 227757 227758 227759 227760 227761 227762 227763 227764 227765 227766 227767 227768 227769 227770 227771 227772 227773 227774 227775 227776 227777 227778 227779 227780 227781 227782 227783 227784 227785 227786 227787 227788 227789 227790 227791 227792 227793 227794 227795 227796 227797 227798 227799 227800 227801 227802 227803 227804 227805 227806 227807 227808 227809 227810 227811 227812> # SplitBus
mul in 2 <227606 103> out 1 <227813>     # cond trueterm
const-mul-neg-1 in 1 <227606> out 1 <227814> # cond minuscond
add in 2 <100 227814> out 1 <227815>     # cond negcond
mul in 2 <227815 102> out 1 <227816>     # cond falseterm
add in 2 <227813 227816> out 1 <227817>  # cond result
add in 2 <227571 3084> out 1 <227818>    # ArithBusReq.AddReq(DFG.Conditional,DFG.Negate)
const-mul-ffffffff in 1 <227818> out 1 <227819> # multiply-by-constant 4294967295
add in 2 <71 227819> out 1 <227820>      # 'CmpLT DFG.Input - DFG.Subtract'
split in 1 <227820> outplitBus
mul in 2 <227852 103> out 1 <228091>     # cond trueterm
const-mul-neg-1 in 1 <227852> out 1 <228092> # cond minuscond
add in 2 <100 228092> out 1 <228093>     # cond negcond
mul in 2 <228093 227817> out 1 <228094>  # cond falseterm
add in 2 <228091 228094> out 1 <228095>  # cond result
const-mul-ffffffff in 1 <70> out 1 <228096> # multiply-by-constant 4294967295
add in 2 <70 71> out 1 <228097>          # ArithBusReq.AddReq(DFG.Input,DFG.Input)
add in 2 <228097 228096> out 1 <228098>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <228098> out 1 <228099> # multiply-by-constant 4294967295
add in 2 <228097 228099> out 1 <228100>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <70> out 1 <228101> # multiply-by-constant 4294967295
add in 2 <71 228101> out 1 <228102>      # 'CmpLT DFG.Input - DFG.Input'
split in 1 <228102> out 65 <228103 228104 228105 228106 228107 228108 228109 228110 228111 228112 228113 228114 228115 228116 228117 228118 228119 228120 228121 228122 228123 228124 228125 228126 228127 228128 228129 228130 228131 228132 228133 228134 228135 228136 228137 228138 228139 228140 228141 228142 228143 228144 228145 228146 228147 228148 228149 228150 228151 228152 228153 228154 228155 228156 228157 228158 228159 228160 228161 228162 228163 228164 228165 228166 228167> # SplitBus
mul in 2 <228134 228100> out 1 <228168>  # cond trueterm
const-mul-neg-1 in 1 <228134> out 1 <228169> # cond minuscond
add in 2 <100 228169> out 1 <228170>     # cond negcond
mul in 2 <228170 71> out 1 <228171>      # cond falseterm
add in 2 <228168 228171> out 1 <228172>  # cond result
const-mul-ffffffff in 1 <228172> out 1 <228173> # multiply-by-constant 4294967295
add in 2 <228172 72> out 1 <228174>      # ArithBusReq.AddReq(DFG.Conditional,DFG.Input)
add in 2 <228174 228173> out 1 <228175>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <228175> out 1 <228176> # multiply-by-constant 4294967295
add in 2 <228174 228176> out 1 <228177>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <228172> out 1 <228178> # multiply-by-constant 4294967295
add in 2 <72 228178> out 1 <228179>      # 'CmpLT DFG.Input - DFG.Conditional'
split in 1 <228179> out 131 <228180 228181 228182 228183 228184 228185 228186 228187 228188 228189 228190 228191 228192 228193 228194 228195 228196 228197 228198 228199 228200 228201 228202 228203 228204 228205 228206 228207 228208 228209 228210 228211 228212 228213 228214 228215 228216 228217 228218 228219 228220 228221 228222 228223 228224 228225 228226 228227 228228 228229 228230 228231 228232 228233 228234 228235 228236 228237 228238 228239 228240 228241 228242 228243 228244 228245 228246 228247 228248 228249 228250 228251 228252 228253 228254 228255 228256 228257 228258 228259 228260 228261 228262 228263 228264 228265 228266 228267 228268 228269 228270 228271 228272 228273 228274 228275 228276 228277 228278 228279 228280 228281 228282 228283 228284 228285 228286 228287 228288 228289 228290 228291 228292 228293 228294 228295 228296 228297 228298 228299 228300 228301 228302 228303 228304 228305 228306 228307 228308 228309 228310> # SplitBus
mul in 2 <228211 228177> out 1 <228311>  # cond trueterm
const-mul-neg-1 in 1 <228211> out 1 <228312> # cond minuscond
add in 2 <100 228312> out 1 <228313>     # cond negcond
mul in 2 <228313 72> out 1 <228314>      # cond falseterm
add in 2 <228311 228314> out 1 <228315>  # cond result
const-mul-ffffffff in 1 <228315> out 1 <228316> # multiply-by-constant 4294967295
add in 2 <228315 73> out 1 <228317>      # ArithBusReq.AddReq(DFG.Conditional,DFG.Input)
add in 2 <228317 228316> out 1 <228318>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <228315> out 1 <228319> # multiply-by-constant 4294967295
add in 2 <73 228319> out 1 <228320>      # 'CmpLT DFG.Input - DFG.Conditional'
split in 1 <228320> out 197 <228321 228322 228323 228324 228325 228326 228327 228328 228329 228330 228331 228332 228333 228334 228335 228336 228337 228338 228339 228340 228341 228342 228343 228344 228345 228346 228347 228348 228349 228350 228351 228352 228353 228354 228355 228356 228357 228358 228359 228360 228361 228362 228363 228364 228365 228366 228367 228368 228369 228370 228371 228372 228373 228374 228375 228376 228377 228378 228379 228380 228381 228382 228383 228384 228385 228386 228387 228388 228389 228390 228391 228392 228393 228394 228395 228396 228397 228398 228399 228400 228401 228402 228403 228404 228405 228406 228407 228408 228409 228410 228411 228412 228413 228414 228415 228416 228417 228418 228419 228420 228421 228422 228423 228424 228425 228426 228427 228428 228429 228430 228431 228432 228433 228434 228435 228436 228437 228438 228439 228440 228441 228442 228443 228444 228445 228446 228447 228448 228449 228450 228451 228452 228453 228454 228455 228456 228457 228458 228459 228460 228461 228462 228463 228464 228465 228466 228467 228468 228469 228470 228471 228472 228473 228474 228475 228476 228477 228478 228479 228480 228481 228482 228483 228484 228485 228486 228487 228488 228489 228490 228491 228492 228493 228494 228495 228496 228497 228498 228499 228500 228501 228502 228503 228504 228505 228506 228507 228508 228509 228510 228511 228512 228513 228514 228515 228516 228517> # SplitBus
mul in 2 <228352 228318> out 1 <228518>  # cond trueterm
const-mul-neg-1 in 1 <228352> out 1 <228519> # cond minuscond
add in 2 <100 228519> out 1 <228520>     # cond negcond
mul in 2 <228520 228315> out 1 <228521>  # cond falseterm
add in 2 <228518 228521> out 1 <228522>  # cond result
mul in 2 <228211 228175> out 1 <228523>  # cond trueterm
const-mul-neg-1 in 1 <228211> out 1 <228524> # cond minuscond
add in 2 <100 228524> out 1 <228525>     # cond negcond
mul in 2 <228525 228172> out 1 <228526>  # cond falseterm
add in 2 <228523 228526> out 1 <228527>  # cond result
mul in 2 <228134 228098> out 1 <228528>  # cond trueterm
const-mul-neg-1 in 1 <228134> out 1 <228529> # cond minuscond
add in 2 <100 228529> out 1 <228530>     # cond negcond
mul in 2 <228530 70> out 1 <228531>      # cond falseterm
add in 2 <228528 228531> out 1 <228532>  # cond result
const-mul-ffffffff in 1 <228532> out 1 <228533> # multiply-by-constant 4294967295
add in 2 <228532 228527> out 1 <228534>  # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
add in 2 <228534 228533> out 1 <228535>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <228535> out 1 <228536> # multiply-by-constant 4294967295
add in 2 <228534 228536> out 1 <228537>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <228532> out 1 <228538> # multiply-by-constant 4294967295
add in 2 <228527 228538> out 1 <228539>  # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <228539> out 132 <228540 228541 228542 228543 228544 228545 228546 228547 228548 228549 228550 228551 228552 228553 228554 228555 228556 228557 228558 228559 228560 228561 228562 228563 228564 228565 228566 228567 228568 228569 228570 228571 228572 228573 228574 228575 228576 228577 228578 228579 228580 228581 228582 228583 228584 228585 228586 228587 228588 228589 228590 228591 228592 228593 228594 228595 228596 228597 228598 228599 228600 228601 228602 228603 228604 228605 228606 228607 228608 228609 228610 228611 228612 228613 228614 228615 228616 228617 228618 228619 228620 228621 228622 228623 228624 228625 228626 228627 228628 228629 228630 228631 228632 228633 228634 228635 228636 228637 228638 228639 228640 228641 228642 228643 228644 228645 228646 228647 228648 228649 228650 228651 228652 228653 228654 228655 228656 228657 228658 228659 228660 228661 228662 228663 228664 228665 228666 228667 228668 228669 228670 228671> # SplitBus
mul in 2 <228571 228537> out 1 <228672>  # cond trueterm
const-mul-neg-1 in 1 <228571> out 1 <228673> # cond minuscond
add in 2 <100 228673> out 1 <228674>     # cond negcond
mul in 2 <228674 228527> out 1 <228675>  # cond falseterm
add in 2 <228672 228675> out 1 <228676>  # cond result
const-mul-ffffffff in 1 <228676> out 1 <228677> # multiply-by-constant 4294967295
add in 2 <228676 228522> out 1 <228678>  # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
add in 2 <228678 228677> out 1 <228679>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <228679> out 1 <228680> # multiply-by-constant 4294967295
add in 2 <228678 228680> out 1 <228681>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <228676> out 1 <228682> # multiply-by-constant 4294967295
add in 2 <228522 228682> out 1 <228683>  # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <228683> out 199 <228684 228685 228686 228687 228688 228689 228690 228691 228692 228693 228694 228695 228696 228697 228698 228699 228700 228701 228702 228703 228704 228705 228706 228707 228708 228709 228710 228711 228712 228713 228714 228715 228716 228717 228718 228719 228720 228721 228722 228723 228724 228725 228726 228727 228728 228729 228730 228731 228732 228733 228734 228735 228736 228737 228738 228739 228740 228741 228742 228743 228744 228745 228746 228747 228748 228749 228750 228751 228752 228753 228754 228755 228756 228757 228758 228759 228760 228761 228762 228763 228764 228765 228766 228767 228768 228769 228770 228771 228772 228773 228774 228775 228776 228777 228778 228779 228780 228781 228782 228783 228784 228785 228786 228787 228788 228789 228790 228791 228792 228793 228794 228795 228796 228797 228798 228799 228800 228801 228802 228803 228804 228805 228806 228807 228808 228809 228810 228811 228812 228813 228814 228815 228816 228817 228818 228819 228820 228821 228822 228823 228824 228825 228826 228827 228828 228829 228830 228831 228832 228833 228834 228835 228836 228837 228838 228839 228840 228841 228842 228843 228844 228845 228846 228847 228848 228849 228850 228851 228852 228853 228854 228855 228856 228857 228858 228859 228860 228861 228862 228863 228864 228865 228866 228867 228868 228869 228870 228871 228872 228873 228874 228875 228876 228877 228878 228879 228880 228881 228882> # SplitBus
mul in 2 <228715 228681> out 1 <228883>  # cond trueterm
const-mul-neg-1 in 1 <228715> out 1 <228884> # cond minuscond
add in 2 <100 228884> out 1 <228885>     # cond negcond
mul in 2 <228885 228522> out 1 <228886>  # cond falseterm
add in 2 <228883 228886> out 1 <228887>  # cond result
const-mul-ffffffff in 1 <228887> out 1 <228888> # multiply-by-constant 4294967295
const-mul-ffffffff in 1 <228318> out 1 <228889> # multiply-by-constant 4294967295
add in 2 <228317 228889> out 1 <228890>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
mul in 2 <228352 228890> out 1 <228891>  # cond trueterm
const-mul-neg-1 in 1 <228352> out 1 <228892> # cond minuscond
add in 2 <100 228892> out 1 <228893>     # cond negcond
mul in 2 <228893 73> out 1 <228894>      # cond falseterm
add in 2 <228891 228894> out 1 <228895>  # cond result
const-mul-ffffffff in 1 <228895> out 1 <228896> # multiply-by-constant 4294967295
add in 2 <228895 74> out 1 <228897>      # ArithBusReq.AddReq(DFG.Conditional,DFG.Input)
split in 1 <228897> outplitBus
const-mul-2 in 1 <228929> out 1 <229129> # join source bit 31
add in 2 <228928 229129> out 1 <229130>  # join source bit 30
const-mul-2 in 1 <229130> out 1 <229131> # join
add in 2 <228927 229131> out 1 <229132>  # join source bit 29
const-mul-2 in 1 <229132> out 1 <229133> # join
add in 2 <228926 229133> out 1 <229134>  # join source bit 28
const-mul-2 in 1 <229134> out 1 <229135> # join
add in 2 <228925 229135> out 1 <229136>  # join source bit 27
const-mul-2 in 1 <229136> out 1 <229137> # join
add in 2 <228924 229137> out 1 <229138>  # join source bit 26
const-mul-2 in 1 <229138> out 1 <229139> # join
add in 2 <228923 229139> out 1 <229140>  # join source bit 25
const-mul-2 in 1 <229140> out 1 <229141> # join
add in 2 <228922 229141> out 1 <229142>  # join source bit 24
const-mul-2 in 1 <229142> out 1 <229143> # join
add in 2 <228921 229143> out 1 <229144>  # join source bit 23
const-mul-2 in 1 <229144> out 1 <229145> # join
add in 2 <228920 229145> out 1 <229146>  # join source bit 22
const-mul-2 in 1 <229146> out 1 <229147> # join
add in 2 <228919 229147> out 1 <229148>  # join source bit 21
const-mul-2 in 1 <229148> out 1 <229149> # join
add in 2 <228918 229149> out 1 <229150>  # join source bit 20
const-mul-2 in 1 <229150> out 1 <229151> # join
add in 2 <228917 229151> out 1 <229152>  # join source bit 19
const-mul-2 in 1 <229152> out 1 <229153> # join
add in 2 <228916 229153> out 1 <229154>  # join source bit 18
const-mul-2 in 1 <229154> out 1 <229155> # join
add in 2 <228915 229155> out 1 <229156>  # join source bit 17
const-mul-2 in 1 <229156> out 1 <229157> # join
add in 2 <228914 229157> out 1 <229158>  # join source bit 16
const-mul-2 in 1 <229158> out 1 <229159> # join
add in 2 <228913 229159> out 1 <229160>  # join source bit 15
const-mul-2 in 1 <229160> out 1 <229161> # join
add in 2 <228912 229161> out 1 <229162>  # join source bit 14
const-mul-2 in 1 <229162> out 1 <229163> # join
add in 2 <228911 229163> out 1 <229164>  # join source bit 13
const-mul-2 in 1 <229164> out 1 <229165> # join
add in 2 <228910 229165> out 1 <229166>  # join source bit 12
const-mul-2 in 1 <229166> out 1 <229167> # join
add in 2 <228909 229167> out 1 <229168>  # join source bit 11
const-mul-2 in 1 <229168> out 1 <229169> # join
add in 2 <228908 229169> out 1 <229170>  # join source bit 10
const-mul-2 in 1 <229170> out 1 <229171> # join
add in 2 <228907 229171> out 1 <229172>  # join source bit 9
const-mul-2 in 1 <229172> out 1 <229173> # join
add in 2 <228906 229173> out 1 <229174>  # join source bit 8
const-mul-2 in 1 <229174> out 1 <229175> # join
add in 2 <228905 229175> out 1 <229176>  # join source bit 7
const-mul-2 in 1 <229176> out 1 <229177> # join
add in 2 <228904 229177> out 1 <229178>  # join source bit 6
const-mul-2 in 1 <229178> out 1 <229179> # join
add in 2 <228903 229179> out 1 <229180>  # join source bit 5
const-mul-2 in 1 <229180> out 1 <229181> # join
add in 2 <228902 229181> out 1 <229182>  # join source bit 4
const-mul-2 in 1 <229182> out 1 <229183> # join
add in 2 <228901 229183> out 1 <229184>  # join source bit 3
const-mul-2 in 1 <229184> out 1 <229185> # join
add in 2 <228900 229185> out 1 <229186>  # join source bit 2
const-mul-2 in 1 <229186> out 1 <229187> # join
add in 2 <228899 229187> out 1 <229188>  # join source bit 1
const-mul-2 in 1 <229188> out 1 <229189> # join
add in 2 <228898 229189> out 1 <229190>  # join source bit 0
add in 2 <229190 229190> out 1 <229191>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <228895> out 1 <229192> # multiply-by-constant 4294967295
add in 2 <74 229192> out 1 <229193>      # 'CmpLT DFG.Input - DFG.Conditional'
split in 1 <229193> outplitBus
mul in 2 <229225 229191> out 1 <229457>  # cond trueterm
const-mul-neg-1 in 1 <229225> out 1 <229458> # cond minuscond
add in 2 <100 229458> out 1 <229459>     # cond negcond
mul in 2 <229459 228895> out 1 <229460>  # cond falseterm
add in 2 <229457 229460> out 1 <229461>  # cond result
add in 2 <228887 229461> out 1 <229462>  # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
split in 1 <229462> out 233 <229463 229464 229465 229466 229467 229468 229469 229470 229471 229472 229473 229474 229475 229476 229477 229478 229479 229480 229481 229482 229483 229484 229485 229486 229487 229488 229489 229490 229491 229492 229493 229494 229495 229496 229497 229498 229499 229500 229501 229502 229503 229504 229505 229506 229507 229508 229509 229510 229511 229512 229513 229514 229515 229516 229517 229518 229519 229520 229521 229522 229523 229524 229525 229526 229527 229528 229529 229530 229531 229532 229533 229534 229535 229536 229537 229538 229539 229540 229541 229542 229543 229544 229545 229546 229547 229548 229549 229550 229551 229552 229553 229554 229555 229556 229557 229558 229559 229560 229561 229562 229563 229564 229565 229566 229567 229568 229569 229570 229571 229572 229573 229574 229575 229576 229577 229578 229579 229580 229581 229582 229583 229584 229585 229586 229587 229588 229589 229590 229591 229592 229593 229594 229595 229596 229597 229598 229599 229600 229601 229602 229603 229604 229605 229606 229607 229608 229609 229610 229611 229612 229613 229614 229615 229616 229617 229618 229619 229620 229621 229622 229623 229624 229625 229626 229627 229628 229629 229630 229631 229632 229633 229634 229635 229636 229637 229638 229639 229640 229641 229642 229643 229644 229645 229646 229647 229648 229649 229650 229651 229652 229653 229654 229655 229656 229657 229658 229659 229660 229661 229662 229663 229664 229665 229666 229667 229668 229669 229670 229671 229672 229673 229674 229675 229676 229677 229678 229679 229680 229681 229682 229683 229684 229685 229686 229687 229688 229689 229690 229691 229692 229693 229694 229695> # SplitBus
const-mul-2 in 1 <229494> out 1 <229696> # join source bit 31
add in 2 <229493 229696> out 1 <229697>  # join source bit 30
const-mul-2 in 1 <229697> out 1 <229698> # join
add in 2 <229492 229698> out 1 <229699>  # join source bit 29
const-mul-2 in 1 <229699> out 1 <229700> # join
add in 2 <229491 229700> out 1 <229701>  # join source bit 28
const-mul-2 in 1 <229701> out 1 <229702> # join
add in 2 <229490 229702> out 1 <229703>  # join source bit 27
const-mul-2 in 1 <229703> out 1 <229704> # join
add in 2 <229489 229704> out 1 <229705>  # join source bit 26
const-mul-2 in 1 <229705> out 1 <229706> # join
add in 2 <229488 229706> out 1 <229707>  # join source bit 25
const-mul-2 in 1 <229707> out 1 <229708> # join
add in 2 <229487 229708> out 1 <229709>  # join source bit 24
const-mul-2 in 1 <229709> out 1 <229710> # join
add in 2 <229486 229710> out 1 <229711>  # join source bit 23
const-mul-2 in 1 <229711> out 1 <229712> # join
add in 2 <229485 229712> out 1 <229713>  # join source bit 22
const-mul-2 in 1 <229713> out 1 <229714> # join
add in 2 <229484 229714> out 1 <229715>  # join source bit 21
const-mul-2 in 1 <229715> out 1 <229716> # join
add in 2 <229483 229716> out 1 <229717>  # join source bit 20
const-mul-2 in 1 <229717> out 1 <229718> # join
add in 2 <229482 229718> out 1 <229719>  # join source bit 19
const-mul-2 in 1 <229719> out 1 <229720> # join
add in 2 <229481 229720> out 1 <229721>  # join source bit 18
const-mul-2 in 1 <229721> out 1 <229722> # join
add in 2 <229480 229722> out 1 <229723>  # join source bit 17
const-mul-2 in 1 <229723> out 1 <229724> # join
add in 2 <229479 229724> out 1 <229725>  # join source bit 16
const-mul-2 in 1 <229725> out 1 <229726> # join
add in 2 <229478 229726> out 1 <229727>  # join source bit 15
const-mul-2 in 1 <229727> out 1 <229728> # join
add in 2 <229477 229728> out 1 <229729>  # join source bit 14
const-mul-2 in 1 <229729> out 1 <229730> # join
add in 2 <229476 229730> out 1 <229731>  # join source bit 13
const-mul-2 in 1 <229731> out 1 <229732> # join
add in 2 <229475 229732> out 1 <229733>  # join source bit 12
const-mul-2 in 1 <229733> out 1 <229734> # join
add in 2 <229474 229734> out 1 <229735>  # join source bit 11
const-mul-2 in 1 <229735> out 1 <229736> # join
add in 2 <229473 229736> out 1 <229737>  # join source bit 10
const-mul-2 in 1 <229737> out 1 <229738> # join
add in 2 <229472 229738> out 1 <229739>  # join source bit 9
const-mul-2 in 1 <229739> out 1 <229740> # join
add in 2 <229471 229740> out 1 <229741>  # join source bit 8
const-mul-2 in 1 <229741> out 1 <229742> # join
add in 2 <229470 229742> out 1 <229743>  # join source bit 7
const-mul-2 in 1 <229743> out 1 <229744> # join
add in 2 <229469 229744> out 1 <229745>  # join source bit 6
const-mul-2 in 1 <229745> out 1 <229746> # join
add in 2 <229468 229746> out 1 <229747>  # join source bit 5
const-mul-2 in 1 <229747> out 1 <229748> # join
add in 2 <229467 229748> out 1 <229749>  # join source bit 4
const-mul-2 in 1 <229749> out 1 <229750> # join
add in 2 <229466 229750> out 1 <229751>  # join source bit 3
const-mul-2 in 1 <229751> out 1 <229752> # join
add in 2 <229465 229752> out 1 <229753>  # join source bit 2
const-mul-2 in 1 <229753> out 1 <229754> # join
add in 2 <229464 229754> out 1 <229755>  # join source bit 1
const-mul-2 in 1 <229755> out 1 <229756> # join
add in 2 <229463 229756> out 1 <229757>  # join source bit 0
add in 2 <229757 229757> out 1 <229758>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <228887> out 1 <229759> # multiply-by-constant 4294967295
add in 2 <229461 229759> out 1 <229760>  # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <229760> out 265 <229761 229762 229763 229764 229765 229766 229767 229768 229769 229770 229771 229772 229773 229774 229775 229776 229777 229778 229779 229780 229781 229782 229783 229784 229785 229786 229787 229788 229789 229790 229791 229792 229793 229794 229795 229796 229797 229798 229799 229800 229801 229802 229803 229804 229805 229806 229807 229808 229809 229810 229811 229812 229813 229814 229815 229816 229817 229818 229819 229820 229821 229822 229823 229824 229825 229826 229827 229828 229829 229830 229831 229832 229833 229834 229835 229836 229837 229838 229839 229840 229841 229842 229843 229844 229845 229846 229847 229848 229849 229850 229851 229852 229853 229854 229855 229856 229857 229858 229859 229860 229861 229862 229863 229864 229865 229866 229867 229868 229869 229870 229871 229872 229873 229874 229875 229876 229877 229878 229879 229880 229881 229882 229883 229884 229885 229886 229887 229888 229889 229890 229891 229892 229893 229894 229895 229896 229897 229898 229899 229900 229901 229902 229903 229904 229905 229906 229907 229908 229909 229910 229911 229912 229913 229914 229915 229916 229917 229918 229919 229920 229921 229922 229923 229924 229925 229926 229927 229928 229929 229930 229931 229932 229933 229934 229935 229936 229937 229938 229939 229940 229941 229942 229943 229944 229945 229946 229947 229948 229949 229950 229951 229952 229953 229954 229955 229956 229957 229958 229959 229960 229961 229962 229963 229964 229965 229966 229967 229968 229969 229970 229971 229972 229973 229974 229975 229976 229977 229978 229979 229980 229981 229982 229983 229984 229985 229986 229987 229988 229989 229990 229991 229992 229993 229994 229995 229996 229997 229998 229999 230000 230001 230002 230003 230004 230005 230006 230007 230008 230009 230010 230011 230012 230013 230014 230015 230016 230017 230018 230019 230020 230021 230022 230023 230024 230025> # SplitBus
mul in 2 <229792 229758> out 1 <230026>  # cond trueterm
const-mul-neg-1 in 1 <229792> out 1 <230027> # cond minuscond
add in 2 <100 230027> out 1 <230028>     # cond negcond
mul in 2 <230028 228887> out 1 <230029>  # cond falseterm
add in 2 <230026 230029> out 1 <230030>  # cond result
mul in 2 <228715 228679> out 1 <230031>  # cond trueterm
const-mul-neg-1 in 1 <228715> out 1 <230032> # cond minuscond
add in 2 <100 230032> out 1 <230033>     # cond negcond
mul in 2 <230033 228676> out 1 <230034>  # cond falseterm
add in 2 <230031 230034> out 1 <230035>  # cond result
mul in 2 <228571 228535> out 1 <230036>  # cond trueterm
const-mul-neg-1 in 1 <228571> out 1 <230037> # cond minuscond
add in 2 <100 230037> out 1 <230038>     # cond negcond
mul in 2 <230038 228532> out 1 <230039>  # cond falseterm
add in 2 <230036 230039> out 1 <230040>  # cond result
const-mul-ffffffff in 1 <230040> out 1 <230041> # multiply-by-constant 4294967295
add in 2 <230040 230035> out 1 <230042>  # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
add in 2 <230042 230041> out 1 <230043>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <230043> out 1 <230044> # multiply-by-constant 4294967295
add in 2 <230042 230044> out 1 <230045>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <230040> out 1 <230046> # multiply-by-constant 4294967295
add in 2 <230035 230046> out 1 <230047>  # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <230047> out 200 <230048 230049 230050 230051 230052 230053 230054 230055 230056 230057 230058 230059 230060 230061 230062 230063 230064 230065 230066 230067 230068 230069 230070 230071 230072 230073 230074 230075 230076 230077 230078 230079 230080 230081 230082 230083 230084 230085 230086 230087 230088 230089 230090 230091 230092 230093 230094 230095 230096 230097 230098 230099 230100 230101 230102 230103 230104 230105 230106 230107 230108 230109 230110 230111 230112 230113 230114 230115 230116 230117 230118 230119 230120 230121 230122 230123 230124 230125 230126 230127 230128 230129 230130 230131 230132 230133 230134 230135 230136 230137 230138 230139 230140 230141 230142 230143 230144 230145 230146 230147 230148 230149 230150 230151 230152 230153 230154 230155 230156 230157 230158 230159 230160 230161 230162 230163 230164 230165 230166 230167 230168 230169 230170 230171 230172 230173 230174 230175 230176 230177 230178 230179 230180 230181 230182 230183 230184 230185 230186 230187 230188 230189 230190 230191 230192 230193 230194 230195 230196 230197 230198 230199 230200 230201 230202 230203 230204 230205 230206 230207 230208 230209 230210 230211 230212 230213 230214 230215 230216 230217 230218 230219 230220 230221 230222 230223 230224 230225 230226 230227 230228 230229 230230 230231 230232 230233 230234 230235 230236 230237 230238 230239 230240 230241 230242 230243 230244 230245 230246 230247> # SplitBus
mul in 2 <230079 230045> out 1 <230248>  # cond trueterm
const-mul-neg-1 in 1 <230079> out 1 <230249> # cond minuscond
add in 2 <100 230249> out 1 <230250>     # cond negcond
mul in 2 <230250 230035> out 1 <230251>  # cond falseterm
add in 2 <230248 230251> out 1 <230252>  # cond result
const-mul-ffffffff in 1 <230252> out 1 <230253> # multiply-by-constant 4294967295
add in 2 <230252 230030> out 1 <230254>  # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
split in 1 <230254> out 235 <230255 230256 230257 230258 230259 230260 230261 230262 230263 230264 230265 230266 230267 230268 230269 230270 230271 230272 230273 230274 230275 230276 230277 230278 230279 230280 230281 230282 230283 230284 230285 230286 230287 230288 230289 230290 230291 230292 230293 230294 230295 230296 230297 230298 230299 230300 230301 230302 230303 230304 230305 230306 230307 230308 230309 230310 230311 230312 230313 230314 230315 230316 230317 230318 230319 230320 230321 230322 230323 230324 230325 230326 230327 230328 230329 230330 230331 230332 230333 230334 230335 230336 230337 230338 230339 230340 230341 230342 230343 230344 230345 230346 230347 230348 230349 230350 230351 230352 230353 230354 230355 230356 230357 230358 230359 230360 230361 230362 230363 230364 230365 230366 230367 230368 230369 230370 230371 230372 230373 230374 230375 230376 230377 230378 230379 230380 230381 230382 230383 230384 230385 230386 230387 230388 230389 230390 230391 230392 230393 230394 230395 230396 230397 230398 230399 230400 230401 230402 230403 230404 230405 230406 230407 230408 230409 230410 230411 230412 230413 230414 230415 230416 230417 230418 230419 230420 230421 230422 230423 230424 230425 230426 230427 230428 230429 230430 230431 230432 230433 230434 230435 230436 230437 230438 230439 230440 230441 230442 230443 230444 230445 230446 230447 230448 230449 230450 230451 230452 230453 230454 230455 230456 230457 230458 230459 230460 230461 230462 230463 230464 230465 230466 230467 230468 230469 230470 230471 230472 230473 230474 230475 230476 230477 230478 230479 230480 230481 230482 230483 230484 230485 230486 230487 230488 230489> # SplitBus
const-mul-2 in 1 <230286> out 1 <230490> # join source bit 31
add in 2 <230285 230490> out 1 <230491>  # join source bit 30
const-mul-2 in 1 <230491> out 1 <230492> # join
add in 2 <230284 230492> out 1 <230493>  # join source bit 29
const-mul-2 in 1 <230493> out 1 <230494> # join
add in 2 <230283 230494> out 1 <230495>  # join source bit 28
const-mul-2 in 1 <230495> out 1 <230496> # join
add in 2 <230282 230496> out 1 <230497>  # join source bit 27
const-mul-2 in 1 <230497> out 1 <230498> # join
add in 2 <230281 230498> out 1 <230499>  # join source bit 26
const-mul-2 in 1 <230499> out 1 <230500> # join
add in 2 <230280 230500> out 1 <230501>  # join source bit 25
const-mul-2 in 1 <230501> out 1 <230502> # join
add in 2 <230279 230502> out 1 <230503>  # join source bit 24
const-mul-2 in 1 <230503> out 1 <230504> # join
add in 2 <230278 230504> out 1 <230505>  # join source bit 23
const-mul-2 in 1 <230505> out 1 <230506> # join
add in 2 <230277 230506> out 1 <230507>  # join source bit 22
const-mul-2 in 1 <230507> out 1 <230508> # join
add in 2 <230276 230508> out 1 <230509>  # join source bit 21
const-mul-2 in 1 <230509> out 1 <230510> # join
add in 2 <230275 230510> out 1 <230511>  # join source bit 20
const-mul-2 in 1 <230511> out 1 <230512> # join
add in 2 <230274 230512> out 1 <230513>  # join source bit 19
const-mul-2 in 1 <230513> out 1 <230514> # join
add in 2 <230273 230514> out 1 <230515>  # join source bit 18
const-mul-2 in 1 <230515> out 1 <230516> # join
add in 2 <230272 230516> out 1 <230517>  # join source bit 17
const-mul-2 in 1 <230517> out 1 <230518> # join
add in 2 <230271 230518> out 1 <230519>  # join source bit 16
const-mul-2 in 1 <230519> out 1 <230520> # join
add in 2 <230270 230520> out 1 <230521>  # join source bit 15
const-mul-2 in 1 <230521> out 1 <230522> # join
add in 2 <230269 230522> out 1 <230523>  # join source bit 14
const-mul-2 in 1 <230523> out 1 <230524> # join
add in 2 <230268 230524> out 1 <230525>  # join source bit 13
const-mul-2 in 1 <230525> out 1 <230526> # join
add in 2 <230267 230526> out 1 <230527>  # join source bit 12
const-mul-2 in 1 <230527> out 1 <230528> # join
add in 2 <230266 230528> out 1 <230529>  # join source bit 11
const-mul-2 in 1 <230529> out 1 <230530> # join
add in 2 <230265 230530> out 1 <230531>  # join source bit 10
const-mul-2 in 1 <230531> out 1 <230532> # join
add in 2 <230264 230532> out 1 <230533>  # join source bit 9
const-mul-2 in 1 <230533> out 1 <230534> # join
add in 2 <230263 230534> out 1 <230535>  # join source bit 8
const-mul-2 in 1 <230535> out 1 <230536> # join
add in 2 <230262 230536> out 1 <230537>  # join source bit 7
const-mul-2 in 1 <230537> out 1 <230538> # join
add in 2 <230261 230538> out 1 <230539>  # join source bit 6
const-mul-2 in 1 <230539> out 1 <230540> # join
add in 2 <230260 230540> out 1 <230541>  # join source bit 5
const-mul-2 in 1 <230541> out 1 <230542> # join
add in 2 <230259 230542> out 1 <230543>  # join source bit 4
const-mul-2 in 1 <230543> out 1 <230544> # join
add in 2 <230258 230544> out 1 <230545>  # join source bit 3
const-mul-2 in 1 <230545> out 1 <230546> # join
add in 2 <230257 230546> out 1 <230547>  # join source bit 2
const-mul-2 in 1 <230547> out 1 <230548> # join
add in 2 <230256 230548> out 1 <230549>  # join source bit 1
const-mul-2 in 1 <230549> out 1 <230550> # join
add in 2 <230255 230550> out 1 <230551>  # join source bit 0
add in 2 <230551 230551> out 1 <230552>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <230552> out 1 <230553> # multiply-by-constant 4294967295
add in 2 <230254 230553> out 1 <230554>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <230252> out 1 <230555> # multiply-by-constant 4294967295
add in 2 <230030 230555> out 1 <230556>  # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <230556> out 267 <230557 230558 230559 230560 230561 230562 230563 230564 230565 230566 230567 230568 230569 230570 230571 230572 230573 230574 230575 230576 230577 230578 230579 230580 230581 230582 230583 230584 230585 230586 230587 230588 230589 230590 230591 230592 230593 230594 230595 230596 230597 230598 230599 230600 230601 230602 230603 230604 230605 230606 230607 230608 230609 230610 230611 230612 230613 230614 230615 230616 230617 230618 230619 230620 230621 230622 230623 230624 230625 230626 230627 230628 230629 230630 230631 230632 230633 230634 230635 230636 230637 230638 230639 230640 230641 230642 230643 230644 230645 230646 230647 230648 230649 230650 230651 230652 230653 230654 230655 230656 230657 230658 230659 230660 230661 230662 230663 230664 230665 230666 230667 230668 230669 230670 230671 230672 230673 230674 230675 230676 230677 230678 230679 230680 230681 230682 230683 230684 230685 230686 230687 230688 230689 230690 230691 230692 230693 230694 230695 230696 230697 230698 230699 230700 230701 230702 230703 230704 230705 230706 230707 230708 230709 230710 230711 230712 230713 230714 230715 230716 230717 230718 230719 230720 230721 230722 230723 230724 230725 230726 230727 230728 230729 230730 230731 230732 230733 230734 230735 230736 230737 230738 230739 230740 230741 230742 230743 230744 230745 230746 230747 230748 230749 230750 230751 230752 230753 230754 230755 230756 230757 230758 230759 230760 230761 230762 230763 230764 230765 230766 230767 230768 230769 230770 230771 230772 230773 230774 230775 230776 230777 230778 230779 230780 230781 230782 230783 230784 230785 230786 230787 230788 230789 230790 230791 230792 230793 230794 230795 230796 230797 230798 230799 230800 230801 230802 230803 230804 230805 230806 230807 230808 230809 230810 230811 230812 230813 230814 230815 230816 230817 230818 230819 230820 230821 230822 230823> # SplitBus
mul in 2 <230588 230554> out 1 <230824>  # cond trueterm
const-mul-neg-1 in 1 <230588> out 1 <230825> # cond minuscond
add in 2 <100 230825> out 1 <230826>     # cond negcond
mul in 2 <230826 230030> out 1 <230827>  # cond falseterm
add in 2 <230824 230827> out 1 <230828>  # cond result
add in 2 <230828 104> out 1 <230829>     # ArithBusReq.AddReq(DFG.Conditional,DFG.Constant)
const-mul-ffffffff in 1 <72> out 1 <230830> # multiply-by-constant 4294967295
add in 2 <230829 230830> out 1 <230831>  # 'CmpLT DFG.Add - DFG.Input'
split in 1 <230831> outplitBus
mul in 2 <230863 103> out 1 <231070>     # cond trueterm
const-mul-neg-1 in 1 <230863> out 1 <231071> # cond minuscond
add in 2 <100 231071> out 1 <231072>     # cond negcond
mul in 2 <231072 102> out 1 <231073>     # cond falseterm
add in 2 <231070 231073> out 1 <231074>  # cond result
add in 2 <230828 3084> out 1 <231075>    # ArithBusReq.AddReq(DFG.Conditional,DFG.Negate)
const-mul-ffffffff in 1 <231075> out 1 <231076> # multiply-by-constant 4294967295
add in 2 <72 231076> out 1 <231077>      # 'CmpLT DFG.Input - DFG.Subtract'
split in 1 <231077> out 270 <231078 231079 231080 231081 231082 231083 231084 231085 231086 231087 231088 231089 231090 231091 231092 231093 231094 231095 231096 231097 231098 231099 231100 231101 231102 231103 231104 231105 231106 231107 231108 231109 231110 231111 231112 231113 231114 231115 231116 231117 231118 231119 231120 231121 231122 231123 231124 231125 231126 231127 231128 231129 231130 231131 231132 231133 231134 231135 231136 231137 231138 231139 231140 231141 231142 231143 231144 231145 231146 231147 231148 231149 231150 231151 231152 231153 231154 231155 231156 231157 231158 231159 231160 231161 231162 231163 231164 231165 231166 231167 231168 231169 231170 231171 231172 231173 231174 231175 231176 231177 231178 231179 231180 231181 231182 231183 231184 231185 231186 231187 231188 231189 231190 231191 231192 231193 231194 231195 231196 231197 231198 231199 231200 231201 231202 231203 231204 231205 231206 231207 231208 231209 231210 231211 231212 231213 231214 231215 231216 231217 231218 231219 231220 231221 231222 231223 231224 231225 231226 231227 231228 231229 231230 231231 231232 231233 231234 231235 231236 231237 231238 231239 231240 231241 231242 231243 231244 231245 231246 231247 231248 231249 231250 231251 231252 231253 231254 231255 231256 231257 231258 231259 231260 231261 231262 231263 231264 231265 231266 231267 231268 231269 231270 231271 231272 231273 231274 231275 231276 231277 231278 231279 231280 231281 231282 231283 231284 231285 231286 231287 231288 231289 231290 231291 231292 231293 231294 231295 231296 231297 231298 231299 231300 231301 231302 231303 231304 231305 231306 231307 231308 231309 231310 231311 231312 231313 231314 231315 231316 231317 231318 231319 231320 231321 231322 231323 231324 231325 231326 231327 231328 231329 231330 231331 231332 231333 231334 231335 231336 231337 231338 231339 231340 231341 231342 231343 231344 231345 231346 231347> # SplitBus
mul in 2 <231109 103> out 1 <231348>     # cond trueterm
const-mul-neg-1 in 1 <231109> out 1 <231349> # cond minuscond
add in 2 <100 231349> out 1 <231350>     # cond negcond
mul in 2 <231350 231074> out 1 <231351>  # cond falseterm
add in 2 <231348 231351> out 1 <231352>  # cond result
const-mul-ffffffff in 1 <71> out 1 <231353> # multiply-by-constant 4294967295
add in 2 <71 72> out 1 <231354>          # ArithBusReq.AddReq(DFG.Input,DFG.Input)
add in 2 <231354 231353> out 1 <231355>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <231355> out 1 <231356> # multiply-by-constant 4294967295
add in 2 <231354 231356> out 1 <231357>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <71> out 1 <231358> # multiply-by-constant 4294967295
add in 2 <72 231358> out 1 <231359>      # 'CmpLT DFG.Input - DFG.Input'
split in 1 <231359> out 65 <231360 231361 231362 231363 231364 231365 231366 231367 231368 231369 231370 231371 231372 231373 231374 231375 231376 231377 231378 231379 231380 231381 231382 231383 231384 231385 231386 231387 231388 231389 231390 231391 231392 231393 231394 231395 231396 231397 231398 231399 231400 231401 231402 231403 231404 231405 231406 231407 231408 231409 231410 231411 231412 231413 231414 231415 231416 231417 231418 231419 231420 231421 231422 231423 231424> # SplitBus
mul in 2 <231391 231357> out 1 <231425>  # cond trueterm
const-mul-neg-1 in 1 <231391> out 1 <231426> # cond minuscond
add in 2 <100 231426> out 1 <231427>     # cond negcond
mul in 2 <231427 72> out 1 <231428>      # cond falseterm
add in 2 <231425 231428> out 1 <231429>  # cond result
const-mul-ffffffff in 1 <231429> out 1 <231430> # multiply-by-constant 4294967295
add in 2 <231429 73> out 1 <231431>      # ArithBusReq.AddReq(DFG.Conditional,DFG.Input)
add in 2 <231431 231430> out 1 <231432>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <231432> out 1 <231433> # multiply-by-constant 4294967295
add in 2 <231431 231433> out 1 <231434>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <231429> out 1 <231435> # multiply-by-constant 4294967295
add in 2 <73 231435> out 1 <231436>      # 'CmpLT DFG.Input - DFG.Conditional'
split in 1 <231436> out 131 <231437 231438 231439 231440 231441 231442 231443 231444 231445 231446 231447 231448 231449 231450 231451 231452 231453 231454 231455 231456 231457 231458 231459 231460 231461 231462 231463 231464 231465 231466 231467 231468 231469 231470 231471 231472 231473 231474 231475 231476 231477 231478 231479 231480 231481 231482 231483 231484 231485 231486 231487 231488 231489 231490 231491 231492 231493 231494 231495 231496 231497 231498 231499 231500 231501 231502 231503 231504 231505 231506 231507 231508 231509 231510 231511 231512 231513 231514 231515 231516 231517 231518 231519 231520 231521 231522 231523 231524 231525 231526 231527 231528 231529 231530 231531 231532 231533 231534 231535 231536 231537 231538 231539 231540 231541 231542 231543 231544 231545 231546 231547 231548 231549 231550 231551 231552 231553 231554 231555 231556 231557 231558 231559 231560 231561 231562 231563 231564 231565 231566 231567> # SplitBus
mul in 2 <231468 231434> out 1 <231568>  # cond trueterm
const-mul-neg-1 in 1 <231468> out 1 <231569> # cond minuscond
add in 2 <100 231569> out 1 <231570>     # cond negcond
mul in 2 <231570 73> out 1 <231571>      # cond falseterm
add in 2 <231568 231571> out 1 <231572>  # cond result
const-mul-ffffffff in 1 <231572> out 1 <231573> # multiply-by-constant 4294967295
add in 2 <231572 74> out 1 <231574>      # ArithBusReq.AddReq(DFG.Conditional,DFG.Input)
add in 2 <231574 231573> out 1 <231575>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <231572> out 1 <231576> # multiply-by-constant 4294967295
add in 2 <74 231576> out 1 <231577>      # 'CmpLT DFG.Input - DFG.Conditional'
split in 1 <231577> out 197 <231578 231579 231580 231581 231582 231583 231584 231585 231586 231587 231588 231589 231590 231591 231592 231593 231594 231595 231596 231597 231598 231599 231600 231601 231602 231603 231604 231605 231606 231607 231608 231609 231610 231611 231612 231613 231614 231615 231616 231617 231618 231619 231620 231621 231622 231623 231624 231625 231626 231627 231628 231629 231630 231631 231632 231633 231634 231635 231636 231637 231638 231639 231640 231641 231642 231643 231644 231645 231646 231647 231648 231649 231650 231651 231652 231653 231654 231655 231656 231657 231658 231659 231660 231661 231662 231663 231664 231665 231666 231667 231668 231669 231670 231671 231672 231673 231674 231675 231676 231677 231678 231679 231680 231681 231682 231683 231684 231685 231686 231687 231688 231689 231690 231691 231692 231693 231694 231695 231696 231697 231698 231699 231700 231701 231702 231703 231704 231705 231706 231707 231708 231709 231710 231711 231712 231713 231714 231715 231716 231717 231718 231719 231720 231721 231722 231723 231724 231725 231726 231727 231728 231729 231730 231731 231732 231733 231734 231735 231736 231737 231738 231739 231740 231741 231742 231743 231744 231745 231746 231747 231748 231749 231750 231751 231752 231753 231754 231755 231756 231757 231758 231759 231760 231761 231762 231763 231764 231765 231766 231767 231768 231769 231770 231771 231772 231773 231774> # SplitBus
mul in 2 <231609 231575> out 1 <231775>  # cond trueterm
const-mul-neg-1 in 1 <231609> out 1 <231776> # cond minuscond
add in 2 <100 231776> out 1 <231777>     # cond negcond
mul in 2 <231777 231572> out 1 <231778>  # cond falseterm
add in 2 <231775 231778> out 1 <231779>  # cond result
mul in 2 <231468 231432> out 1 <231780>  # cond trueterm
const-mul-neg-1 in 1 <231468> out 1 <231781> # cond minuscond
add in 2 <100 231781> out 1 <231782>     # cond negcond
mul in 2 <231782 231429> out 1 <231783>  # cond falseterm
add in 2 <231780 231783> out 1 <231784>  # cond result
mul in 2 <231391 231355> out 1 <231785>  # cond trueterm
const-mul-neg-1 in 1 <231391> out 1 <231786> # cond minuscond
add in 2 <100 231786> out 1 <231787>     # cond negcond
mul in 2 <231787 71> out 1 <231788>      # cond falseterm
add in 2 <231785 231788> out 1 <231789>  # cond result
const-mul-ffffffff in 1 <231789> out 1 <231790> # multiply-by-constant 4294967295
add in 2 <231789 231784> out 1 <231791>  # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
add in 2 <231791 231790> out 1 <231792>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <231792> out 1 <231793> # multiply-by-constant 4294967295
add in 2 <231791 231793> out 1 <231794>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <231789> out 1 <231795> # multiply-by-constant 4294967295
add in 2 <231784 231795> out 1 <231796>  # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <231796> out 132 <231797 231798 231799 231800 231801 231802 231803 231804 231805 231806 231807 231808 231809 231810 231811 231812 231813 231814 231815 231816 231817 231818 231819 231820 231821 231822 231823 231824 231825 231826 231827 231828 231829 231830 231831 231832 231833 231834 231835 231836 231837 231838 231839 231840 231841 231842 231843 231844 231845 231846 231847 231848 231849 231850 231851 231852 231853 231854 231855 231856 231857 231858 231859 231860 231861 231862 231863 231864 231865 231866 231867 231868 231869 231870 231871 231872 231873 231874 231875 231876 231877 231878 231879 231880 231881 231882 231883 231884 231885 231886 231887 231888 231889 231890 231891 231892 231893 231894 231895 231896 231897 231898 231899 231900 231901 231902 231903 231904 231905 231906 231907 231908 231909 231910 231911 231912 231913 231914 231915 231916 231917 231918 231919 231920 231921 231922 231923 231924 231925 231926 231927 231928> # SplitBus
mul in 2 <231828 231794> out 1 <231929>  # cond trueterm
const-mul-neg-1 in 1 <231828> out 1 <231930> # cond minuscond
add in 2 <100 231930> out 1 <231931>     # cond negcond
mul in 2 <231931 231784> out 1 <231932>  # cond falseterm
add in 2 <231929 231932> out 1 <231933>  # cond result
const-mul-ffffffff in 1 <231933> out 1 <231934> # multiply-by-constant 4294967295
add in 2 <231933 231779> out 1 <231935>  # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
add in 2 <231935 231934> out 1 <231936>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <231936> out 1 <231937> # multiply-by-constant 4294967295
add in 2 <231935 231937> out 1 <231938>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <231933> out 1 <231939> # multiply-by-constant 4294967295
add in 2 <231779 231939> out 1 <231940>  # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <231940> out 199 <231941 231942 231943 231944 231945 231946 231947 231948 231949 231950 231951 231952 231953 231954 231955 231956 231957 231958 231959 231960 231961 231962 231963 231964 231965 231966 231967 231968 231969 231970 231971 231972 231973 231974 231975 231976 231977 231978 231979 231980 231981 231982 231983 231984 231985 231986 231987 231988 231989 231990 231991 231992 231993 231994 231995 231996 231997 231998 231999 232000 232001 232002 232003 232004 232005 232006 232007 232008 232009 232010 232011 232012 232013 232014 232015 232016 232017 232018 232019 232020 232021 232022 232023 232024 232025 232026 232027 232028 232029 232030 232031 232032 232033 232034 232035 232036 232037 232038 232039 232040 232041 232042 232043 232044 232045 232046 232047 232048 232049 232050 232051 232052 232053 232054 232055 232056 232057 232058 232059 232060 232061 232062 232063 232064 232065 232066 232067 232068 232069 232070 232071 232072 232073 232074 232075 232076 232077 232078 232079 232080 232081 232082 232083 232084 232085 232086 232087 232088 232089 232090 232091 232092 232093 232094 232095 232096 232097 232098 232099 232100 232101 232102 232103 232104 232105 232106 232107 232108 232109 232110 232111 232112 232113 232114 232115 232116 232117 232118 232119 232120 232121 232122 232123 232124 232125 232126 232127 232128 232129 232130 232131 232132 232133 232134 232135 232136 232137 232138 232139> # SplitBus
mul in 2 <231972 231938> out 1 <232140>  # cond trueterm
const-mul-neg-1 in 1 <231972> out 1 <232141> # cond minuscond
add in 2 <100 232141> out 1 <232142>     # cond negcond
mul in 2 <232142 231779> out 1 <232143>  # cond falseterm
add in 2 <232140 232143> out 1 <232144>  # cond result
const-mul-ffffffff in 1 <232144> out 1 <232145> # multiply-by-constant 4294967295
const-mul-ffffffff in 1 <231575> out 1 <232146> # multiply-by-constant 4294967295
add in 2 <231574 232146> out 1 <232147>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
mul in 2 <231609 232147> out 1 <232148>  # cond trueterm
const-mul-neg-1 in 1 <231609> out 1 <232149> # cond minuscond
add in 2 <100 232149> out 1 <232150>     # cond negcond
mul in 2 <232150 74> out 1 <232151>      # cond falseterm
add in 2 <232148 232151> out 1 <232152>  # cond result
const-mul-ffffffff in 1 <232152> out 1 <232153> # multiply-by-constant 4294967295
add in 2 <232152 75> out 1 <232154>      # ArithBusReq.AddReq(DFG.Conditional,DFG.Input)
split in 1 <232154> out 231 <232155 232156 232157 232158 232159 232160 232161 232162 232163 232164 232165 232166 232167 232168 232169 232170 232171 232172 232173 232174 232175 232176 232177 232178 232179 232180 232181 232182 232183 232184 232185 232186 232187 232188 232189 232190 232191 232192 232193 232194 232195 232196 232197 232198 232199 232200 232201 232202 232203 232204 232205 232206 232207 232208 232209 232210 232211 232212 232213 232214 232215 232216 232217 232218 232219 232220 232221 232222 232223 232224 232225 232226 232227 232228 232229 232230 232231 232232 232233 232234 232235 232236 232237 232238 232239 232240 232241 232242 232243 232244 232245 232246 232247 232248 232249 232250 232251 232252 232253 232254 232255 232256 232257 232258 232259 232260 232261 232262 232263 232264 232265 232266 232267 232268 232269 232270 232271 232272 232273 232274 232275 232276 232277 232278 232279 232280 232281 232282 232283 232284 232285 232286 232287 232288 232289 232290 232291 232292 232293 232294 232295 232296 232297 232298 232299 232300 232301 232302 232303 232304 232305 232306 232307 232308 232309 232310 232311 232312 232313 232314 232315 232316 232317 232318 232319 232320 232321 232322 232323 232324 232325 232326 232327 232328 232329 232330 232331 232332 232333 232334 232335 232336 232337 232338 232339 232340 232341 232342 232343 232344 232345 232346 232347 232348 232349 232350 232351 232352 232353 232354 232355 232356 232357 232358 232359 232360 232361 232362 232363 232364 232365 232366 232367 232368 232369 232370 232371 232372 232373 232374 232375 232376 232377 232378 232379 232380 232381 232382 232383 232384 232385> # SplitBus
const-mul-2 in 1 <232186> out 1 <232386> # join source bit 31
add in 2 <232185 232386> out 1 <232387>  # join source bit 30
const-mul-2 in 1 <232387> out 1 <232388> # join
add in 2 <232184 232388> out 1 <232389>  # join source bit 29
const-mul-2 in 1 <232389> out 1 <232390> # join
add in 2 <232183 232390> out 1 <232391>  # join source bit 28
const-mul-2 in 1 <232391> out 1 <232392> # join
add in 2 <232182 232392> out 1 <232393>  # join source bit 27
const-mul-2 in 1 <232393> out 1 <232394> # join
add in 2 <232181 232394> out 1 <232395>  # join source bit 26
const-mul-2 in 1 <232395> out 1 <232396> # join
add in 2 <232180 232396> out 1 <232397>  # join source bit 25
const-mul-2 in 1 <232397> out 1 <232398> # join
add in 2 <232179 232398> out 1 <232399>  # join source bit 24
const-mul-2 in 1 <232399> out 1 <232400> # join
add in 2 <232178 232400> out 1 <232401>  # join source bit 23
const-mul-2 in 1 <232401> out 1 <232402> # join
add in 2 <232177 232402> out 1 <232403>  # join source bit 22
const-mul-2 in 1 <232403> out 1 <232404> # join
add in 2 <232176 232404> out 1 <232405>  # join source bit 21
const-mul-2 in 1 <232405> out 1 <232406> # join
add in 2 <232175 232406> out 1 <232407>  # join source bit 20
const-mul-2 in 1 <232407> out 1 <232408> # join
add in 2 <232174 232408> out 1 <232409>  # join source bit 19
const-mul-2 in 1 <232409> out 1 <232410> # join
add in 2 <232173 232410> out 1 <232411>  # join source bit 18
const-mul-2 in 1 <232411> out 1 <232412> # join
add in 2 <232172 232412> out 1 <232413>  # join source bit 17
const-mul-2 in 1 <232413> out 1 <232414> # join
add in 2 <232171 232414> out 1 <232415>  # join source bit 16
const-mul-2 in 1 <232415> out 1 <232416> # join
add in 2 <232170 232416> out 1 <232417>  # join source bit 15
const-mul-2 in 1 <232417> out 1 <232418> # join
add in 2 <232169 232418> out 1 <232419>  # join source bit 14
const-mul-2 in 1 <232419> out 1 <232420> # join
add in 2 <232168 232420> out 1 <232421>  # join source bit 13
const-mul-2 in 1 <232421> out 1 <232422> # join
add in 2 <232167 232422> out 1 <232423>  # join source bit 12
const-mul-2 in 1 <232423> out 1 <232424> # join
add in 2 <232166 232424> out 1 <232425>  # join source bit 11
const-mul-2 in 1 <232425> out 1 <232426> # join
add in 2 <232165 232426> out 1 <232427>  # join source bit 10
const-mul-2 in 1 <232427> out 1 <232428> # join
add in 2 <232164 232428> out 1 <232429>  # join source bit 9
const-mul-2 in 1 <232429> out 1 <232430> # join
add in 2 <232163 232430> out 1 <232431>  # join source bit 8
const-mul-2 in 1 <232431> out 1 <232432> # join
add in 2 <232162 232432> out 1 <232433>  # join source bit 7
const-mul-2 in 1 <232433> out 1 <232434> # join
add in 2 <232161 232434> out 1 <232435>  # join source bit 6
const-mul-2 in 1 <232435> out 1 <232436> # join
add in 2 <232160 232436> out 1 <232437>  # join source bit 5
const-mul-2 in 1 <232437> out 1 <232438> # join
add in 2 <232159 232438> out 1 <232439>  # join source bit 4
const-mul-2 in 1 <232439> out 1 <232440> # join
add in 2 <232158 232440> out 1 <232441>  # join source bit 3
const-mul-2 in 1 <232441> out 1 <232442> # join
add in 2 <232157 232442> out 1 <232443>  # join source bit 2
const-mul-2 in 1 <232443> out 1 <232444> # join
add in 2 <232156 232444> out 1 <232445>  # join source bit 1
const-mul-2 in 1 <232445> out 1 <232446> # join
add in 2 <232155 232446> out 1 <232447>  # join source bit 0
add in 2 <232447 232447> out 1 <232448>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <232152> out 1 <232449> # multiply-by-constant 4294967295
add in 2 <75 232449> out 1 <232450>      # 'CmpLT DFG.Input - DFG.Conditional'
split in 1 <232450> out 263 <232451 232452 232453 232454 232455 232456 232457 232458 232459 232460 232461 232462 232463 232464 232465 232466 232467 232468 232469 232470 232471 232472 232473 232474 232475 232476 232477 232478 232479 232480 232481 232482 232483 232484 232485 232486 232487 232488 232489 232490 232491 232492 232493 232494 232495 232496 232497 232498 232499 232500 232501 232502 232503 232504 232505 232506 232507 232508 232509 232510 232511 232512 232513 232514 232515 232516 232517 232518 232519 232520 232521 232522 232523 232524 232525 232526 232527 232528 232529 232530 232531 232532 232533 232534 232535 232536 232537 232538 232539 232540 232541 232542 232543 232544 232545 232546 232547 232548 232549 232550 232551 232552 232553 232554 232555 232556 232557 232558 232559 232560 232561 232562 232563 232564 232565 232566 232567 232568 232569 232570 232571 232572 232573 232574 232575 232576 232577 232578 232579 232580 232581 232582 232583 232584 232585 232586 232587 232588 232589 232590 232591 232592 232593 232594 232595 232596 232597 232598 232599 232600 232601 232602 232603 232604 232605 232606 232607 232608 232609 232610 232611 232612 232613 232614 232615 232616 232617 232618 232619 232620 232621 232622 232623 232624 232625 232626 232627 232628 232629 232630 232631 232632 232633 232634 232635 232636 232637 232638 232639 232640 232641 232642 232643 232644 232645 232646 232647 232648 232649 232650 232651 232652 232653 232654 232655 232656 232657 232658 232659 232660 232661 232662 232663 232664 232665 232666 232667 232668 232669 232670 232671 232672 232673 232674 232675 232676 232677 232678 232679 232680 232681 232682 232683 232684 232685 232686 232687 232688 232689 232690 232691 232692 232693 232694 232695 232696 232697 232698 232699 232700 232701 232702 232703 232704 232705 232706 232707 232708 232709 232710 232711 232712 232713> # SplitBus
mul in 2 <232482 232448> out 1 <232714>  # cond trueterm
const-mul-neg-1 in 1 <232482> out 1 <232715> # cond minuscond
add in 2 <100 232715> out 1 <232716>     # cond negcond
mul in 2 <232716 232152> out 1 <232717>  # cond falseterm
add in 2 <232714 232717> out 1 <232718>  # cond result
add in 2 <232144 232718> out 1 <232719>  # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
split in 1 <232719> outplitBus
const-mul-2 in 1 <232751> out 1 <232953> # join source bit 31
add in 2 <232750 232953> out 1 <232954>  # join source bit 30
const-mul-2 in 1 <232954> out 1 <232955> # join
add in 2 <232749 232955> out 1 <232956>  # join source bit 29
const-mul-2 in 1 <232956> out 1 <232957> # join
add in 2 <232748 232957> out 1 <232958>  # join source bit 28
const-mul-2 in 1 <232958> out 1 <232959> # join
add in 2 <232747 232959> out 1 <232960>  # join source bit 27
const-mul-2 in 1 <232960> out 1 <232961> # join
add in 2 <232746 232961> out 1 <232962>  # join source bit 26
const-mul-2 in 1 <232962> out 1 <232963> # join
add in 2 <232745 232963> out 1 <232964>  # join source bit 25
const-mul-2 in 1 <232964> out 1 <232965> # join
add in 2 <232744 232965> out 1 <232966>  # join source bit 24
const-mul-2 in 1 <232966> out 1 <232967> # join
add in 2 <232743 232967> out 1 <232968>  # join source bit 23
const-mul-2 in 1 <232968> out 1 <232969> # join
add in 2 <232742 232969> out 1 <232970>  # join source bit 22
const-mul-2 in 1 <232970> out 1 <232971> # join
add in 2 <232741 232971> out 1 <232972>  # join source bit 21
const-mul-2 in 1 <232972> out 1 <232973> # join
add in 2 <232740 232973> out 1 <232974>  # join source bit 20
const-mul-2 in 1 <232974> out 1 <232975> # join
add in 2 <232739 232975> out 1 <232976>  # join source bit 19
const-mul-2 in 1 <232976> out 1 <232977> # join
add in 2 <232738 232977> out 1 <232978>  # join source bit 18
const-mul-2 in 1 <232978> out 1 <232979> # join
add in 2 <232737 232979> out 1 <232980>  # join source bit 17
const-mul-2 in 1 <232980> out 1 <232981> # join
add in 2 <232736 232981> out 1 <232982>  # join source bit 16
const-mul-2 in 1 <232982> out 1 <232983> # join
add in 2 <232735 232983> out 1 <232984>  # join source bit 15
const-mul-2 in 1 <232984> out 1 <232985> # join
add in 2 <232734 232985> out 1 <232986>  # join source bit 14
const-mul-2 in 1 <232986> out 1 <232987> # join
add in 2 <232733 232987> out 1 <232988>  # join source bit 13
const-mul-2 in 1 <232988> out 1 <232989> # join
add in 2 <232732 232989> out 1 <232990>  # join source bit 12
const-mul-2 in 1 <232990> out 1 <232991> # join
add in 2 <232731 232991> out 1 <232992>  # join source bit 11
const-mul-2 in 1 <232992> out 1 <232993> # join
add in 2 <232730 232993> out 1 <232994>  # join source bit 10
const-mul-2 in 1 <232994> out 1 <232995> # join
add in 2 <232729 232995> out 1 <232996>  # join source bit 9
const-mul-2 in 1 <232996> out 1 <232997> # join
add in 2 <232728 232997> out 1 <232998>  # join source bit 8
const-mul-2 in 1 <232998> out 1 <232999> # join
add in 2 <232727 232999> out 1 <233000>  # join source bit 7
const-mul-2 in 1 <233000> out 1 <233001> # join
add in 2 <232726 233001> out 1 <233002>  # join source bit 6
const-mul-2 in 1 <233002> out 1 <233003> # join
add in 2 <232725 233003> out 1 <233004>  # join source bit 5
const-mul-2 in 1 <233004> out 1 <233005> # join
add in 2 <232724 233005> out 1 <233006>  # join source bit 4
const-mul-2 in 1 <233006> out 1 <233007> # join
add in 2 <232723 233007> out 1 <233008>  # join source bit 3
const-mul-2 in 1 <233008> out 1 <233009> # join
add in 2 <232722 233009> out 1 <233010>  # join source bit 2
const-mul-2 in 1 <233010> out 1 <233011> # join
add in 2 <232721 233011> out 1 <233012>  # join source bit 1
const-mul-2 in 1 <233012> out 1 <233013> # join
add in 2 <232720 233013> out 1 <233014>  # join source bit 0
add in 2 <233014 233014> out 1 <233015>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <232144> out 1 <233016> # multiply-by-constant 4294967295
add in 2 <232718 233016> out 1 <233017>  # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <233017> outplitBus
mul in 2 <233049 233015> out 1 <233283>  # cond trueterm
const-mul-neg-1 in 1 <233049> out 1 <233284> # cond minuscond
add in 2 <100 233284> out 1 <233285>     # cond negcond
mul in 2 <233285 232144> out 1 <233286>  # cond falseterm
add in 2 <233283 233286> out 1 <233287>  # cond result
mul in 2 <231972 231936> out 1 <233288>  # cond trueterm
const-mul-neg-1 in 1 <231972> out 1 <233289> # cond minuscond
add in 2 <100 233289> out 1 <233290>     # cond negcond
mul in 2 <233290 231933> out 1 <233291>  # cond falseterm
add in 2 <233288 233291> out 1 <233292>  # cond result
mul in 2 <231828 231792> out 1 <233293>  # cond trueterm
const-mul-neg-1 in 1 <231828> out 1 <233294> # cond minuscond
add in 2 <100 233294> out 1 <233295>     # cond negcond
mul in 2 <233295 231789> out 1 <233296>  # cond falseterm
add in 2 <233293 233296> out 1 <233297>  # cond result
const-mul-ffffffff in 1 <233297> out 1 <233298> # multiply-by-constant 4294967295
add in 2 <233297 233292> out 1 <233299>  # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
add in 2 <233299 233298> out 1 <233300>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <233300> out 1 <233301> # multiply-by-constant 4294967295
add in 2 <233299 233301> out 1 <233302>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <233297> out 1 <233303> # multiply-by-constant 4294967295
add in 2 <233292 233303> out 1 <233304>  # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <233304> out 200 <233305 233306 233307 233308 233309 233310 233311 233312 233313 233314 233315 233316 233317 233318 233319 233320 233321 233322 233323 233324 233325 233326 233327 233328 233329 233330 233331 233332 233333 233334 233335 233336 233337 233338 233339 233340 233341 233342 233343 233344 233345 233346 233347 233348 233349 233350 233351 233352 233353 233354 233355 233356 233357 233358 233359 233360 233361 233362 233363 233364 233365 233366 233367 233368 233369 233370 233371 233372 233373 233374 233375 233376 233377 233378 233379 233380 233381 233382 233383 233384 233385 233386 233387 233388 233389 233390 233391 233392 233393 233394 233395 233396 233397 233398 233399 233400 233401 233402 233403 233404 233405 233406 233407 233408 233409 233410 233411 233412 233413 233414 233415 233416 233417 233418 233419 233420 233421 233422 233423 233424 233425 233426 233427 233428 233429 233430 233431 233432 233433 233434 233435 233436 233437 233438 233439 233440 233441 233442 233443 233444 233445 233446 233447 233448 233449 233450 233451 233452 233453 233454 233455 233456 233457 233458 233459 233460 233461 233462 233463 233464 233465 233466 233467 233468 233469 233470 233471 233472 233473 233474 233475 233476 233477 233478 233479 233480 233481 233482 233483 233484 233485 233486 233487 233488 233489 233490 233491 233492 233493 233494 233495 233496 233497 233498 233499 233500 233501 233502 233503 233504> # SplitBus
mul in 2 <233336 233302> out 1 <233505>  # cond trueterm
const-mul-neg-1 in 1 <233336> out 1 <233506> # cond minuscond
add in 2 <100 233506> out 1 <233507>     # cond negcond
mul in 2 <233507 233292> out 1 <233508>  # cond falseterm
add in 2 <233505 233508> out 1 <233509>  # cond result
const-mul-ffffffff in 1 <233509> out 1 <233510> # multiply-by-constant 4294967295
add in 2 <233509 233287> out 1 <233511>  # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
split in 1 <233511> outplitBus
const-mul-2 in 1 <233543> out 1 <233747> # join source bit 31
add in 2 <233542 233747> out 1 <233748>  # join source bit 30
const-mul-2 in 1 <233748> out 1 <233749> # join
add in 2 <233541 233749> out 1 <233750>  # join source bit 29
const-mul-2 in 1 <233750> out 1 <233751> # join
add in 2 <233540 233751> out 1 <233752>  # join source bit 28
const-mul-2 in 1 <233752> out 1 <233753> # join
add in 2 <233539 233753> out 1 <233754>  # join source bit 27
const-mul-2 in 1 <233754> out 1 <233755> # join
add in 2 <233538 233755> out 1 <233756>  # join source bit 26
const-mul-2 in 1 <233756> out 1 <233757> # join
add in 2 <233537 233757> out 1 <233758>  # join source bit 25
const-mul-2 in 1 <233758> out 1 <233759> # join
add in 2 <233536 233759> out 1 <233760>  # join source bit 24
const-mul-2 in 1 <233760> out 1 <233761> # join
add in 2 <233535 233761> out 1 <233762>  # join source bit 23
const-mul-2 in 1 <233762> out 1 <233763> # join
add in 2 <233534 233763> out 1 <233764>  # join source bit 22
const-mul-2 in 1 <233764> out 1 <233765> # join
add in 2 <233533 233765> out 1 <233766>  # join source bit 21
const-mul-2 in 1 <233766> out 1 <233767> # join
add in 2 <233532 233767> out 1 <233768>  # join source bit 20
const-mul-2 in 1 <233768> out 1 <233769> # join
add in 2 <233531 233769> out 1 <233770>  # join source bit 19
const-mul-2 in 1 <233770> out 1 <233771> # join
add in 2 <233530 233771> out 1 <233772>  # join source bit 18
const-mul-2 in 1 <233772> out 1 <233773> # join
add in 2 <233529 233773> out 1 <233774>  # join source bit 17
const-mul-2 in 1 <233774> out 1 <233775> # join
add in 2 <233528 233775> out 1 <233776>  # join source bit 16
const-mul-2 in 1 <233776> out 1 <233777> # join
add in 2 <233527 233777> out 1 <233778>  # join source bit 15
const-mul-2 in 1 <233778> out 1 <233779> # join
add in 2 <233526 233779> out 1 <233780>  # join source bit 14
const-mul-2 in 1 <233780> out 1 <233781> # join
add in 2 <233525 233781> out 1 <233782>  # join source bit 13
const-mul-2 in 1 <233782> out 1 <233783> # join
add in 2 <233524 233783> out 1 <233784>  # join source bit 12
const-mul-2 in 1 <233784> out 1 <233785> # join
add in 2 <233523 233785> out 1 <233786>  # join source bit 11
const-mul-2 in 1 <233786> out 1 <233787> # join
add in 2 <233522 233787> out 1 <233788>  # join source bit 10
const-mul-2 in 1 <233788> out 1 <233789> # join
add in 2 <233521 233789> out 1 <233790>  # join source bit 9
const-mul-2 in 1 <233790> out 1 <233791> # join
add in 2 <233520 233791> out 1 <233792>  # join source bit 8
const-mul-2 in 1 <233792> out 1 <233793> # join
add in 2 <233519 233793> out 1 <233794>  # join source bit 7
const-mul-2 in 1 <233794> out 1 <233795> # join
add in 2 <233518 233795> out 1 <233796>  # join source bit 6
const-mul-2 in 1 <233796> out 1 <233797> # join
add in 2 <233517 233797> out 1 <233798>  # join source bit 5
const-mul-2 in 1 <233798> out 1 <233799> # join
add in 2 <233516 233799> out 1 <233800>  # join source bit 4
const-mul-2 in 1 <233800> out 1 <233801> # join
add in 2 <233515 233801> out 1 <233802>  # join source bit 3
const-mul-2 in 1 <233802> out 1 <233803> # join
add in 2 <233514 233803> out 1 <233804>  # join source bit 2
const-mul-2 in 1 <233804> out 1 <233805> # join
add in 2 <233513 233805> out 1 <233806>  # join source bit 1
const-mul-2 in 1 <233806> out 1 <233807> # join
add in 2 <233512 233807> out 1 <233808>  # join source bit 0
add in 2 <233808 233808> out 1 <233809>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <233809> out 1 <233810> # multiply-by-constant 4294967295
add in 2 <233511 233810> out 1 <233811>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <233509> out 1 <233812> # multiply-by-constant 4294967295
add in 2 <233287 233812> out 1 <233813>  # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <233813> out 267 <233814 233815 233816 233817 233818 233819 233820 233821 233822 233823 233824 233825 233826 233827 233828 233829 233830 233831 233832 233833 233834 233835 233836 233837 233838 233839 233840 233841 233842 233843 233844 233845 233846 233847 233848 233849 233850 233851 233852 233853 233854 233855 233856 233857 233858 233859 233860 233861 233862 233863 233864 233865 233866 233867 233868 233869 233870 233871 233872 233873 233874 233875 233876 233877 233878 233879 233880 233881 233882 233883 233884 233885 233886 233887 233888 233889 233890 233891 233892 233893 233894 233895 233896 233897 233898 233899 233900 233901 233902 233903 233904 233905 233906 233907 233908 233909 233910 233911 233912 233913 233914 233915 233916 233917 233918 233919 233920 233921 233922 233923 233924 233925 233926 233927 233928 233929 233930 233931 233932 233933 233934 233935 233936 233937 233938 233939 233940 233941 233942 233943 233944 233945 233946 233947 233948 233949 233950 233951 233952 233953 233954 233955 233956 233957 233958 233959 233960 233961 233962 233963 233964 233965 233966 233967 233968 233969 233970 233971 233972 233973 233974 233975 233976 233977 233978 233979 233980 233981 233982 233983 233984 233985 233986 233987 233988 233989 233990 233991 233992 233993 233994 233995 233996 233997 233998 233999 234000 234001 234002 234003 234004 234005 234006 234007 234008 234009 234010 234011 234012 234013 234014 234015 234016 234017 234018 234019 234020 234021 234022 234023 234024 234025 234026 234027 234028 234029 234030 234031 234032 234033 234034 234035 234036 234037 234038 234039 234040 234041 234042 234043 234044 234045 234046 234047 234048 234049 234050 234051 234052 234053 234054 234055 234056 234057 234058 234059 234060 234061 234062 234063 234064 234065 234066 234067 234068 234069 234070 234071 234072 234073 234074 234075 234076 234077 234078 234079 234080> # SplitBus
mul in 2 <233845 233811> out 1 <234081>  # cond trueterm
const-mul-neg-1 in 1 <233845> out 1 <234082> # cond minuscond
add in 2 <100 234082> out 1 <234083>     # cond negcond
mul in 2 <234083 233287> out 1 <234084>  # cond falseterm
add in 2 <234081 234084> out 1 <234085>  # cond result
add in 2 <234085 104> out 1 <234086>     # ArithBusReq.AddReq(DFG.Conditional,DFG.Constant)
const-mul-ffffffff in 1 <73> out 1 <234087> # multiply-by-constant 4294967295
add in 2 <234086 234087> out 1 <234088>  # 'CmpLT DFG.Add - DFG.Input'
split in 1 <234088> out 238 <234089 234090 234091 234092 234093 234094 234095 234096 234097 234098 234099 234100 234101 234102 234103 234104 234105 234106 234107 234108 234109 234110 234111 234112 234113 234114 234115 234116 234117 234118 234119 234120 234121 234122 234123 234124 234125 234126 234127 234128 234129 234130 234131 234132 234133 234134 234135 234136 234137 234138 234139 234140 234141 234142 234143 234144 234145 234146 234147 234148 234149 234150 234151 234152 234153 234154 234155 234156 234157 234158 234159 234160 234161 234162 234163 234164 234165 234166 234167 234168 234169 234170 234171 234172 234173 234174 234175 234176 234177 234178 234179 234180 234181 234182 234183 234184 234185 234186 234187 234188 234189 234190 234191 234192 234193 234194 234195 234196 234197 234198 234199 234200 234201 234202 234203 234204 234205 234206 234207 234208 234209 234210 234211 234212 234213 234214 234215 234216 234217 234218 234219 234220 234221 234222 234223 234224 234225 234226 234227 234228 234229 234230 234231 234232 234233 234234 234235 234236 234237 234238 234239 234240 234241 234242 234243 234244 234245 234246 234247 234248 234249 234250 234251 234252 234253 234254 234255 234256 234257 234258 234259 234260 234261 234262 234263 234264 234265 234266 234267 234268 234269 234270 234271 234272 234273 234274 234275 234276 234277 234278 234279 234280 234281 234282 234283 234284 234285 234286 234287 234288 234289 234290 234291 234292 234293 234294 234295 234296 234297 234298 234299 234300 234301 234302 234303 234304 234305 234306 234307 234308 234309 234310 234311 234312 234313 234314 234315 234316 234317 234318 234319 234320 234321 234322 234323 234324 234325 234326> # SplitBus
mul in 2 <234120 103> out 1 <234327>     # cond trueterm
const-mul-neg-1 in 1 <234120> out 1 <234328> # cond minuscond
add in 2 <100 234328> out 1 <234329>     # cond negcond
mul in 2 <234329 102> out 1 <234330>     # cond falseterm
add in 2 <234327 234330> out 1 <234331>  # cond result
add in 2 <234085 3084> out 1 <234332>    # ArithBusReq.AddReq(DFG.Conditional,DFG.Negate)
const-mul-ffffffff in 1 <234332> out 1 <234333> # multiply-by-constant 4294967295
add in 2 <73 234333> out 1 <234334>      # 'CmpLT DFG.Input - DFG.Subtract'
split in 1 <234334> outplitBus
mul in 2 <234366 103> out 1 <234605>     # cond trueterm
const-mul-neg-1 in 1 <234366> out 1 <234606> # cond minuscond
add in 2 <100 234606> out 1 <234607>     # cond negcond
mul in 2 <234607 234331> out 1 <234608>  # cond falseterm
add in 2 <234605 234608> out 1 <234609>  # cond result
const-mul-ffffffff in 1 <72> out 1 <234610> # multiply-by-constant 4294967295
add in 2 <72 73> out 1 <234611>          # ArithBusReq.AddReq(DFG.Input,DFG.Input)
add in 2 <234611 234610> out 1 <234612>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <234612> out 1 <234613> # multiply-by-constant 4294967295
add in 2 <234611 234613> out 1 <234614>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <72> out 1 <234615> # multiply-by-constant 4294967295
add in 2 <73 234615> out 1 <234616>      # 'CmpLT DFG.Input - DFG.Input'
split in 1 <234616> out 65 <234617 234618 234619 234620 234621 234622 234623 234624 234625 234626 234627 234628 234629 234630 234631 234632 234633 234634 234635 234636 234637 234638 234639 234640 234641 234642 234643 234644 234645 234646 234647 234648 234649 234650 234651 234652 234653 234654 234655 234656 234657 234658 234659 234660 234661 234662 234663 234664 234665 234666 234667 234668 234669 234670 234671 234672 234673 234674 234675 234676 234677 234678 234679 234680 234681> # SplitBus
mul in 2 <234648 234614> out 1 <234682>  # cond trueterm
const-mul-neg-1 in 1 <234648> out 1 <234683> # cond minuscond
add in 2 <100 234683> out 1 <234684>     # cond negcond
mul in 2 <234684 73> out 1 <234685>      # cond falseterm
add in 2 <234682 234685> out 1 <234686>  # cond result
const-mul-ffffffff in 1 <234686> out 1 <234687> # multiply-by-constant 4294967295
add in 2 <234686 74> out 1 <234688>      # ArithBusReq.AddReq(DFG.Conditional,DFG.Input)
add in 2 <234688 234687> out 1 <234689>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <234689> out 1 <234690> # multiply-by-constant 4294967295
add in 2 <234688 234690> out 1 <234691>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <234686> out 1 <234692> # multiply-by-constant 4294967295
add in 2 <74 234692> out 1 <234693>      # 'CmpLT DFG.Input - DFG.Conditional'
split in 1 <234693> out 131 <234694 234695 234696 234697 234698 234699 234700 234701 234702 234703 234704 234705 234706 234707 234708 234709 234710 234711 234712 234713 234714 234715 234716 234717 234718 234719 234720 234721 234722 234723 234724 234725 234726 234727 234728 234729 234730 234731 234732 234733 234734 234735 234736 234737 234738 234739 234740 234741 234742 234743 234744 234745 234746 234747 234748 234749 234750 234751 234752 234753 234754 234755 234756 234757 234758 234759 234760 234761 234762 234763 234764 234765 234766 234767 234768 234769 234770 234771 234772 234773 234774 234775 234776 234777 234778 234779 234780 234781 234782 234783 234784 234785 234786 234787 234788 234789 234790 234791 234792 234793 234794 234795 234796 234797 234798 234799 234800 234801 234802 234803 234804 234805 234806 234807 234808 234809 234810 234811 234812 234813 234814 234815 234816 234817 234818 234819 234820 234821 234822 234823 234824> # SplitBus
mul in 2 <234725 234691> out 1 <234825>  # cond trueterm
const-mul-neg-1 in 1 <234725> out 1 <234826> # cond minuscond
add in 2 <100 234826> out 1 <234827>     # cond negcond
mul in 2 <234827 74> out 1 <234828>      # cond falseterm
add in 2 <234825 234828> out 1 <234829>  # cond result
const-mul-ffffffff in 1 <234829> out 1 <234830> # multiply-by-constant 4294967295
add in 2 <234829 75> out 1 <234831>      # ArithBusReq.AddReq(DFG.Conditional,DFG.Input)
add in 2 <234831 234830> out 1 <234832>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <234829> out 1 <234833> # multiply-by-constant 4294967295
add in 2 <75 234833> out 1 <234834>      # 'CmpLT DFG.Input - DFG.Conditional'
split in 1 <234834> out 197 <234835 234836 234837 234838 234839 234840 234841 234842 234843 234844 234845 234846 234847 234848 234849 234850 234851 234852 234853 234854 234855 234856 234857 234858 234859 234860 234861 234862 234863 234864 234865 234866 234867 234868 234869 234870 234871 234872 234873 234874 234875 234876 234877 234878 234879 234880 234881 234882 234883 234884 234885 234886 234887 234888 234889 234890 234891 234892 234893 234894 234895 234896 234897 234898 234899 234900 234901 234902 234903 234904 234905 234906 234907 234908 234909 234910 234911 234912 234913 234914 234915 234916 234917 234918 234919 234920 234921 234922 234923 234924 234925 234926 234927 234928 234929 234930 234931 234932 234933 234934 234935 234936 234937 234938 234939 234940 234941 234942 234943 234944 234945 234946 234947 234948 234949 234950 234951 234952 234953 234954 234955 234956 234957 234958 234959 234960 234961 234962 234963 234964 234965 234966 234967 234968 234969 234970 234971 234972 234973 234974 234975 234976 234977 234978 234979 234980 234981 234982 234983 234984 234985 234986 234987 234988 234989 234990 234991 234992 234993 234994 234995 234996 234997 234998 234999 235000 235001 235002 235003 235004 235005 235006 235007 235008 235009 235010 235011 235012 235013 235014 235015 235016 235017 235018 235019 235020 235021 235022 235023 235024 235025 235026 235027 235028 235029 235030 235031> # SplitBus
mul in 2 <234866 234832> out 1 <235032>  # cond trueterm
const-mul-neg-1 in 1 <234866> out 1 <235033> # cond minuscond
add in 2 <100 235033> out 1 <235034>     # cond negcond
mul in 2 <235034 234829> out 1 <235035>  # cond falseterm
add in 2 <235032 235035> out 1 <235036>  # cond result
mul in 2 <234725 234689> out 1 <235037>  # cond trueterm
const-mul-neg-1 in 1 <234725> out 1 <235038> # cond minuscond
add in 2 <100 235038> out 1 <235039>     # cond negcond
mul in 2 <235039 234686> out 1 <235040>  # cond falseterm
add in 2 <235037 235040> out 1 <235041>  # cond result
mul in 2 <234648 234612> out 1 <235042>  # cond trueterm
const-mul-neg-1 in 1 <234648> out 1 <235043> # cond minuscond
add in 2 <100 235043> out 1 <235044>     # cond negcond
mul in 2 <235044 72> out 1 <235045>      # cond falseterm
add in 2 <235042 235045> out 1 <235046>  # cond result
const-mul-ffffffff in 1 <235046> out 1 <235047> # multiply-by-constant 4294967295
add in 2 <235046 235041> out 1 <235048>  # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
add in 2 <235048 235047> out 1 <235049>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <235049> out 1 <235050> # multiply-by-constant 4294967295
add in 2 <235048 235050> out 1 <235051>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <235046> out 1 <235052> # multiply-by-constant 4294967295
add in 2 <235041 235052> out 1 <235053>  # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <235053> out 132 <235054 235055 235056 235057 235058 235059 235060 235061 235062 235063 235064 235065 235066 235067 235068 235069 235070 235071 235072 235073 235074 235075 235076 235077 235078 235079 235080 235081 235082 235083 235084 235085 235086 235087 235088 235089 235090 235091 235092 235093 235094 235095 235096 235097 235098 235099 235100 235101 235102 235103 235104 235105 235106 235107 235108 235109 235110 235111 235112 235113 235114 235115 235116 235117 235118 235119 235120 235121 235122 235123 235124 235125 235126 235127 235128 235129 235130 235131 235132 235133 235134 235135 235136 235137 235138 235139 235140 235141 235142 235143 235144 235145 235146 235147 235148 235149 235150 235151 235152 235153 235154 235155 235156 235157 235158 235159 235160 235161 235162 235163 235164 235165 235166 235167 235168 235169 235170 235171 235172 235173 235174 235175 235176 235177 235178 235179 235180 235181 235182 235183 235184 235185> # SplitBus
mul in 2 <235085 235051> out 1 <235186>  # cond trueterm
const-mul-neg-1 in 1 <235085> out 1 <235187> # cond minuscond
add in 2 <100 235187> out 1 <235188>     # cond negcond
mul in 2 <235188 235041> out 1 <235189>  # cond falseterm
add in 2 <235186 235189> out 1 <235190>  # cond result
const-mul-ffffffff in 1 <235190> out 1 <235191> # multiply-by-constant 4294967295
add in 2 <235190 235036> out 1 <235192>  # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
add in 2 <235192 235191> out 1 <235193>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <235193> out 1 <235194> # multiply-by-constant 4294967295
add in 2 <235192 235194> out 1 <235195>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <235190> out 1 <235196> # multiply-by-constant 4294967295
add in 2 <235036 235196> out 1 <235197>  # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <235197> out 199 <235198 235199 235200 235201 235202 235203 235204 235205 235206 235207 235208 235209 235210 235211 235212 235213 235214 235215 235216 235217 235218 235219 235220 235221 235222 235223 235224 235225 235226 235227 235228 235229 235230 235231 235232 235233 235234 235235 235236 235237 235238 235239 235240 235241 235242 235243 235244 235245 235246 235247 235248 235249 235250 235251 235252 235253 235254 235255 235256 235257 235258 235259 235260 235261 235262 235263 235264 235265 235266 235267 235268 235269 235270 235271 235272 235273 235274 235275 235276 235277 235278 235279 235280 235281 235282 235283 235284 235285 235286 235287 235288 235289 235290 235291 235292 235293 235294 235295 235296 235297 235298 235299 235300 235301 235302 235303 235304 235305 235306 235307 235308 235309 235310 235311 235312 235313 235314 235315 235316 235317 235318 235319 235320 235321 235322 235323 235324 235325 235326 235327 235328 235329 235330 235331 235332 235333 235334 235335 235336 235337 235338 235339 235340 235341 235342 235343 235344 235345 235346 235347 235348 235349 235350 235351 235352 235353 235354 235355 235356 235357 235358 235359 235360 235361 235362 235363 235364 235365 235366 235367 235368 235369 235370 235371 235372 235373 235374 235375 235376 235377 235378 235379 235380 235381 235382 235383 235384 235385 235386 235387 235388 235389 235390 235391 235392 235393 235394 235395 235396> # SplitBus
mul in 2 <235229 235195> out 1 <235397>  # cond trueterm
const-mul-neg-1 in 1 <235229> out 1 <235398> # cond minuscond
add in 2 <100 235398> out 1 <235399>     # cond negcond
mul in 2 <235399 235036> out 1 <235400>  # cond falseterm
add in 2 <235397 235400> out 1 <235401>  # cond result
const-mul-ffffffff in 1 <235401> out 1 <235402> # multiply-by-constant 4294967295
const-mul-ffffffff in 1 <234832> out 1 <235403> # multiply-by-constant 4294967295
add in 2 <234831 235403> out 1 <235404>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
mul in 2 <234866 235404> out 1 <235405>  # cond trueterm
const-mul-neg-1 in 1 <234866> out 1 <235406> # cond minuscond
add in 2 <100 235406> out 1 <235407>     # cond negcond
mul in 2 <235407 75> out 1 <235408>      # cond falseterm
add in 2 <235405 235408> out 1 <235409>  # cond result
const-mul-ffffffff in 1 <235409> out 1 <235410> # multiply-by-constant 4294967295
add in 2 <235409 76> out 1 <235411>      # ArithBusReq.AddReq(DFG.Conditional,DFG.Input)
split in 1 <235411> outplitBus
const-mul-2 in 1 <235443> out 1 <235643> # join source bit 31
add in 2 <235442 235643> out 1 <235644>  # join source bit 30
const-mul-2 in 1 <235644> out 1 <235645> # join
add in 2 <235441 235645> out 1 <235646>  # join source bit 29
const-mul-2 in 1 <235646> out 1 <235647> # join
add in 2 <235440 235647> out 1 <235648>  # join source bit 28
const-mul-2 in 1 <235648> out 1 <235649> # join
add in 2 <235439 235649> out 1 <235650>  # join source bit 27
const-mul-2 in 1 <235650> out 1 <235651> # join
add in 2 <235438 235651> out 1 <235652>  # join source bit 26
const-mul-2 in 1 <235652> out 1 <235653> # join
add in 2 <235437 235653> out 1 <235654>  # join source bit 25
const-mul-2 in 1 <235654> out 1 <235655> # join
add in 2 <235436 235655> out 1 <235656>  # join source bit 24
const-mul-2 in 1 <235656> out 1 <235657> # join
add in 2 <235435 235657> out 1 <235658>  # join source bit 23
const-mul-2 in 1 <235658> out 1 <235659> # join
add in 2 <235434 235659> out 1 <235660>  # join source bit 22
const-mul-2 in 1 <235660> out 1 <235661> # join
add in 2 <235433 235661> out 1 <235662>  # join source bit 21
const-mul-2 in 1 <235662> out 1 <235663> # join
add in 2 <235432 235663> out 1 <235664>  # join source bit 20
const-mul-2 in 1 <235664> out 1 <235665> # join
add in 2 <235431 235665> out 1 <235666>  # join source bit 19
const-mul-2 in 1 <235666> out 1 <235667> # join
add in 2 <235430 235667> out 1 <235668>  # join source bit 18
const-mul-2 in 1 <235668> out 1 <235669> # join
add in 2 <235429 235669> out 1 <235670>  # join source bit 17
const-mul-2 in 1 <235670> out 1 <235671> # join
add in 2 <235428 235671> out 1 <235672>  # join source bit 16
const-mul-2 in 1 <235672> out 1 <235673> # join
add in 2 <235427 235673> out 1 <235674>  # join source bit 15
const-mul-2 in 1 <235674> out 1 <235675> # join
add in 2 <235426 235675> out 1 <235676>  # join source bit 14
const-mul-2 in 1 <235676> out 1 <235677> # join
add in 2 <235425 235677> out 1 <235678>  # join source bit 13
const-mul-2 in 1 <235678> out 1 <235679> # join
add in 2 <235424 235679> out 1 <235680>  # join source bit 12
const-mul-2 in 1 <235680> out 1 <235681> # join
add in 2 <235423 235681> out 1 <235682>  # join source bit 11
const-mul-2 in 1 <235682> out 1 <235683> # join
add in 2 <235422 235683> out 1 <235684>  # join source bit 10
const-mul-2 in 1 <235684> out 1 <235685> # join
add in 2 <235421 235685> out 1 <235686>  # join source bit 9
const-mul-2 in 1 <235686> out 1 <235687> # join
add in 2 <235420 235687> out 1 <235688>  # join source bit 8
const-mul-2 in 1 <235688> out 1 <235689> # join
add in 2 <235419 235689> out 1 <235690>  # join source bit 7
const-mul-2 in 1 <235690> out 1 <235691> # join
add in 2 <235418 235691> out 1 <235692>  # join source bit 6
const-mul-2 in 1 <235692> out 1 <235693> # join
add in 2 <235417 235693> out 1 <235694>  # join source bit 5
const-mul-2 in 1 <235694> out 1 <235695> # join
add in 2 <235416 235695> out 1 <235696>  # join source bit 4
const-mul-2 in 1 <235696> out 1 <235697> # join
add in 2 <235415 235697> out 1 <235698>  # join source bit 3
const-mul-2 in 1 <235698> out 1 <235699> # join
add in 2 <235414 235699> out 1 <235700>  # join source bit 2
const-mul-2 in 1 <235700> out 1 <235701> # join
add in 2 <235413 235701> out 1 <235702>  # join source bit 1
const-mul-2 in 1 <235702> out 1 <235703> # join
add in 2 <235412 235703> out 1 <235704>  # join source bit 0
add in 2 <235704 235704> out 1 <235705>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <235409> out 1 <235706> # multiply-by-constant 4294967295
add in 2 <76 235706> out 1 <235707>      # 'CmpLT DFG.Input - DFG.Conditional'
split in 1 <235707> outplitBus
mul in 2 <235739 235705> out 1 <235971>  # cond trueterm
const-mul-neg-1 in 1 <235739> out 1 <235972> # cond minuscond
add in 2 <100 235972> out 1 <235973>     # cond negcond
mul in 2 <235973 235409> out 1 <235974>  # cond falseterm
add in 2 <235971 235974> out 1 <235975>  # cond result
add in 2 <235401 235975> out 1 <235976>  # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
split in 1 <235976> out 233 <235977 235978 235979 235980 235981 235982 235983 235984 235985 235986 235987 235988 235989 235990 235991 235992 235993 235994 235995 235996 235997 235998 235999 236000 236001 236002 236003 236004 236005 236006 236007 236008 236009 236010 236011 236012 236013 236014 236015 236016 236017 236018 236019 236020 236021 236022 236023 236024 236025 236026 236027 236028 236029 236030 236031 236032 236033 236034 236035 236036 236037 236038 236039 236040 236041 236042 236043 236044 236045 236046 236047 236048 236049 236050 236051 236052 236053 236054 236055 236056 236057 236058 236059 236060 236061 236062 236063 236064 236065 236066 236067 236068 236069 236070 236071 236072 236073 236074 236075 236076 236077 236078 236079 236080 236081 236082 236083 236084 236085 236086 236087 236088 236089 236090 236091 236092 236093 236094 236095 236096 236097 236098 236099 236100 236101 236102 236103 236104 236105 236106 236107 236108 236109 236110 236111 236112 236113 236114 236115 236116 236117 236118 236119 236120 236121 236122 236123 236124 236125 236126 236127 236128 236129 236130 236131 236132 236133 236134 236135 236136 236137 236138 236139 236140 236141 236142 236143 236144 236145 236146 236147 236148 236149 236150 236151 236152 236153 236154 236155 236156 236157 236158 236159 236160 236161 236162 236163 236164 236165 236166 236167 236168 236169 236170 236171 236172 236173 236174 236175 236176 236177 236178 236179 236180 236181 236182 236183 236184 236185 236186 236187 236188 236189 236190 236191 236192 236193 236194 236195 236196 236197 236198 236199 236200 236201 236202 236203 236204 236205 236206 236207 236208 236209> # SplitBus
const-mul-2 in 1 <236008> out 1 <236210> # join source bit 31
add in 2 <236007 236210> out 1 <236211>  # join source bit 30
const-mul-2 in 1 <236211> out 1 <236212> # join
add in 2 <236006 236212> out 1 <236213>  # join source bit 29
const-mul-2 in 1 <236213> out 1 <236214> # join
add in 2 <236005 236214> out 1 <236215>  # join source bit 28
const-mul-2 in 1 <236215> out 1 <236216> # join
add in 2 <236004 236216> out 1 <236217>  # join source bit 27
const-mul-2 in 1 <236217> out 1 <236218> # join
add in 2 <236003 236218> out 1 <236219>  # join source bit 26
const-mul-2 in 1 <236219> out 1 <236220> # join
add in 2 <236002 236220> out 1 <236221>  # join source bit 25
const-mul-2 in 1 <236221> out 1 <236222> # join
add in 2 <236001 236222> out 1 <236223>  # join source bit 24
const-mul-2 in 1 <236223> out 1 <236224> # join
add in 2 <236000 236224> out 1 <236225>  # join source bit 23
const-mul-2 in 1 <236225> out 1 <236226> # join
add in 2 <235999 236226> out 1 <236227>  # join source bit 22
const-mul-2 in 1 <236227> out 1 <236228> # join
add in 2 <235998 236228> out 1 <236229>  # join source bit 21
const-mul-2 in 1 <236229> out 1 <236230> # join
add in 2 <235997 236230> out 1 <236231>  # join source bit 20
const-mul-2 in 1 <236231> out 1 <236232> # join
add in 2 <235996 236232> out 1 <236233>  # join source bit 19
const-mul-2 in 1 <236233> out 1 <236234> # join
add in 2 <235995 236234> out 1 <236235>  # join source bit 18
const-mul-2 in 1 <236235> out 1 <236236> # join
add in 2 <235994 236236> out 1 <236237>  # join source bit 17
const-mul-2 in 1 <236237> out 1 <236238> # join
add in 2 <235993 236238> out 1 <236239>  # join source bit 16
const-mul-2 in 1 <236239> out 1 <236240> # join
add in 2 <235992 236240> out 1 <236241>  # join source bit 15
const-mul-2 in 1 <236241> out 1 <236242> # join
add in 2 <235991 236242> out 1 <236243>  # join source bit 14
const-mul-2 in 1 <236243> out 1 <236244> # join
add in 2 <235990 236244> out 1 <236245>  # join source bit 13
const-mul-2 in 1 <236245> out 1 <236246> # join
add in 2 <235989 236246> out 1 <236247>  # join source bit 12
const-mul-2 in 1 <236247> out 1 <236248> # join
add in 2 <235988 236248> out 1 <236249>  # join source bit 11
const-mul-2 in 1 <236249> out 1 <236250> # join
add in 2 <235987 236250> out 1 <236251>  # join source bit 10
const-mul-2 in 1 <236251> out 1 <236252> # join
add in 2 <235986 236252> out 1 <236253>  # join source bit 9
const-mul-2 in 1 <236253> out 1 <236254> # join
add in 2 <235985 236254> out 1 <236255>  # join source bit 8
const-mul-2 in 1 <236255> out 1 <236256> # join
add in 2 <235984 236256> out 1 <236257>  # join source bit 7
const-mul-2 in 1 <236257> out 1 <236258> # join
add in 2 <235983 236258> out 1 <236259>  # join source bit 6
const-mul-2 in 1 <236259> out 1 <236260> # join
add in 2 <235982 236260> out 1 <236261>  # join source bit 5
const-mul-2 in 1 <236261> out 1 <236262> # join
add in 2 <235981 236262> out 1 <236263>  # join source bit 4
const-mul-2 in 1 <236263> out 1 <236264> # join
add in 2 <235980 236264> out 1 <236265>  # join source bit 3
const-mul-2 in 1 <236265> out 1 <236266> # join
add in 2 <235979 236266> out 1 <236267>  # join source bit 2
const-mul-2 in 1 <236267> out 1 <236268> # join
add in 2 <235978 236268> out 1 <236269>  # join source bit 1
const-mul-2 in 1 <236269> out 1 <236270> # join
add in 2 <235977 236270> out 1 <236271>  # join source bit 0
add in 2 <236271 236271> out 1 <236272>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <235401> out 1 <236273> # multiply-by-constant 4294967295
add in 2 <235975 236273> out 1 <236274>  # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <236274> out 265 <236275 236276 236277 236278 236279 236280 236281 236282 236283 236284 236285 236286 236287 236288 236289 236290 236291 236292 236293 236294 236295 236296 236297 236298 236299 236300 236301 236302 236303 236304 236305 236306 236307 236308 236309 236310 236311 236312 236313 236314 236315 236316 236317 236318 236319 236320 236321 236322 236323 236324 236325 236326 236327 236328 236329 236330 236331 236332 236333 236334 236335 236336 236337 236338 236339 236340 236341 236342 236343 236344 236345 236346 236347 236348 236349 236350 236351 236352 236353 236354 236355 236356 236357 236358 236359 236360 236361 236362 236363 236364 236365 236366 236367 236368 236369 236370 236371 236372 236373 236374 236375 236376 236377 236378 236379 236380 236381 236382 236383 236384 236385 236386 236387 236388 236389 236390 236391 236392 236393 236394 236395 236396 236397 236398 236399 236400 236401 236402 236403 236404 236405 236406 236407 236408 236409 236410 236411 236412 236413 236414 236415 236416 236417 236418 236419 236420 236421 236422 236423 236424 236425 236426 236427 236428 236429 236430 236431 236432 236433 236434 236435 236436 236437 236438 236439 236440 236441 236442 236443 236444 236445 236446 236447 236448 236449 236450 236451 236452 236453 236454 236455 236456 236457 236458 236459 236460 236461 236462 236463 236464 236465 236466 236467 236468 236469 236470 236471 236472 236473 236474 236475 236476 236477 236478 236479 236480 236481 236482 236483 236484 236485 236486 236487 236488 236489 236490 236491 236492 236493 236494 236495 236496 236497 236498 236499 236500 236501 236502 236503 236504 236505 236506 236507 236508 236509 236510 236511 236512 236513 236514 236515 236516 236517 236518 236519 236520 236521 236522 236523 236524 236525 236526 236527 236528 236529 236530 236531 236532 236533 236534 236535 236536 236537 236538 236539> # SplitBus
mul in 2 <236306 236272> out 1 <236540>  # cond trueterm
const-mul-neg-1 in 1 <236306> out 1 <236541> # cond minuscond
add in 2 <100 236541> out 1 <236542>     # cond negcond
mul in 2 <236542 235401> out 1 <236543>  # cond falseterm
add in 2 <236540 236543> out 1 <236544>  # cond result
mul in 2 <235229 235193> out 1 <236545>  # cond trueterm
const-mul-neg-1 in 1 <235229> out 1 <236546> # cond minuscond
add in 2 <100 236546> out 1 <236547>     # cond negcond
mul in 2 <236547 235190> out 1 <236548>  # cond falseterm
add in 2 <236545 236548> out 1 <236549>  # cond result
mul in 2 <235085 235049> out 1 <236550>  # cond trueterm
const-mul-neg-1 in 1 <235085> out 1 <236551> # cond minuscond
add in 2 <100 236551> out 1 <236552>     # cond negcond
mul in 2 <236552 235046> out 1 <236553>  # cond falseterm
add in 2 <236550 236553> out 1 <236554>  # cond result
const-mul-ffffffff in 1 <236554> out 1 <236555> # multiply-by-constant 4294967295
add in 2 <236554 236549> out 1 <236556>  # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
add in 2 <236556 236555> out 1 <236557>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <236557> out 1 <236558> # multiply-by-constant 4294967295
add in 2 <236556 236558> out 1 <236559>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <236554> out 1 <236560> # multiply-by-constant 4294967295
add in 2 <236549 236560> out 1 <236561>  # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <236561> out 200 <236562 236563 236564 236565 236566 236567 236568 236569 236570 236571 236572 236573 236574 236575 236576 236577 236578 236579 236580 236581 236582 236583 236584 236585 236586 236587 236588 236589 236590 236591 236592 236593 236594 236595 236596 236597 236598 236599 236600 236601 236602 236603 236604 236605 236606 236607 236608 236609 236610 236611 236612 236613 236614 236615 236616 236617 236618 236619 236620 236621 236622 236623 236624 236625 236626 236627 236628 236629 236630 236631 236632 236633 236634 236635 236636 236637 236638 236639 236640 236641 236642 236643 236644 236645 236646 236647 236648 236649 236650 236651 236652 236653 236654 236655 236656 236657 236658 236659 236660 236661 236662 236663 236664 236665 236666 236667 236668 236669 236670 236671 236672 236673 236674 236675 236676 236677 236678 236679 236680 236681 236682 236683 236684 236685 236686 236687 236688 236689 236690 236691 236692 236693 236694 236695 236696 236697 236698 236699 236700 236701 236702 236703 236704 236705 236706 236707 236708 236709 236710 236711 236712 236713 236714 236715 236716 236717 236718 236719 236720 236721 236722 236723 236724 236725 236726 236727 236728 236729 236730 236731 236732 236733 236734 236735 236736 236737 236738 236739 236740 236741 236742 236743 236744 236745 236746 236747 236748 236749 236750 236751 236752 236753 236754 236755 236756 236757 236758 236759 236760 236761> # SplitBus
mul in 2 <236593 236559> out 1 <236762>  # cond trueterm
const-mul-neg-1 in 1 <236593> out 1 <236763> # cond minuscond
add in 2 <100 236763> out 1 <236764>     # cond negcond
mul in 2 <236764 236549> out 1 <236765>  # cond falseterm
add in 2 <236762 236765> out 1 <236766>  # cond result
const-mul-ffffffff in 1 <236766> out 1 <236767> # multiply-by-constant 4294967295
add in 2 <236766 236544> out 1 <236768>  # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
split in 1 <236768> out 235 <236769 236770 236771 236772 236773 236774 236775 236776 236777 236778 236779 236780 236781 236782 236783 236784 236785 236786 236787 236788 236789 236790 236791 236792 236793 236794 236795 236796 236797 236798 236799 236800 236801 236802 236803 236804 236805 236806 236807 236808 236809 236810 236811 236812 236813 236814 236815 236816 236817 236818 236819 236820 236821 236822 236823 236824 236825 236826 236827 236828 236829 236830 236831 236832 236833 236834 236835 236836 236837 236838 236839 236840 236841 236842 236843 236844 236845 236846 236847 236848 236849 236850 236851 236852 236853 236854 236855 236856 236857 236858 236859 236860 236861 236862 236863 236864 236865 236866 236867 236868 236869 236870 236871 236872 236873 236874 236875 236876 236877 236878 236879 236880 236881 236882 236883 236884 236885 236886 236887 236888 236889 236890 236891 236892 236893 236894 236895 236896 236897 236898 236899 236900 236901 236902 236903 236904 236905 236906 236907 236908 236909 236910 236911 236912 236913 236914 236915 236916 236917 236918 236919 236920 236921 236922 236923 236924 236925 236926 236927 236928 236929 236930 236931 236932 236933 236934 236935 236936 236937 236938 236939 236940 236941 236942 236943 236944 236945 236946 236947 236948 236949 236950 236951 236952 236953 236954 236955 236956 236957 236958 236959 236960 236961 236962 236963 236964 236965 236966 236967 236968 236969 236970 236971 236972 236973 236974 236975 236976 236977 236978 236979 236980 236981 236982 236983 236984 236985 236986 236987 236988 236989 236990 236991 236992 236993 236994 236995 236996 236997 236998 236999 237000 237001 237002 237003> # SplitBus
const-mul-2 in 1 <236800> out 1 <237004> # join source bit 31
add in 2 <236799 237004> out 1 <237005>  # join source bit 30
const-mul-2 in 1 <237005> out 1 <237006> # join
add in 2 <236798 237006> out 1 <237007>  # join source bit 29
const-mul-2 in 1 <237007> out 1 <237008> # join
add in 2 <236797 237008> out 1 <237009>  # join source bit 28
const-mul-2 in 1 <237009> out 1 <237010> # join
add in 2 <236796 237010> out 1 <237011>  # join source bit 27
const-mul-2 in 1 <237011> out 1 <237012> # join
add in 2 <236795 237012> out 1 <237013>  # join source bit 26
const-mul-2 in 1 <237013> out 1 <237014> # join
add in 2 <236794 237014> out 1 <237015>  # join source bit 25
const-mul-2 in 1 <237015> out 1 <237016> # join
add in 2 <236793 237016> out 1 <237017>  # join source bit 24
const-mul-2 in 1 <237017> out 1 <237018> # join
add in 2 <236792 237018> out 1 <237019>  # join source bit 23
const-mul-2 in 1 <237019> out 1 <237020> # join
add in 2 <236791 237020> out 1 <237021>  # join source bit 22
const-mul-2 in 1 <237021> out 1 <237022> # join
add in 2 <236790 237022> out 1 <237023>  # join source bit 21
const-mul-2 in 1 <237023> out 1 <237024> # join
add in 2 <236789 237024> out 1 <237025>  # join source bit 20
const-mul-2 in 1 <237025> out 1 <237026> # join
add in 2 <236788 237026> out 1 <237027>  # join source bit 19
const-mul-2 in 1 <237027> out 1 <237028> # join
add in 2 <236787 237028> out 1 <237029>  # join source bit 18
const-mul-2 in 1 <237029> out 1 <237030> # join
add in 2 <236786 237030> out 1 <237031>  # join source bit 17
const-mul-2 in 1 <237031> out 1 <237032> # join
add in 2 <236785 237032> out 1 <237033>  # join source bit 16
const-mul-2 in 1 <237033> out 1 <237034> # join
add in 2 <236784 237034> out 1 <237035>  # join source bit 15
const-mul-2 in 1 <237035> out 1 <237036> # join
add in 2 <236783 237036> out 1 <237037>  # join source bit 14
const-mul-2 in 1 <237037> out 1 <237038> # join
add in 2 <236782 237038> out 1 <237039>  # join source bit 13
const-mul-2 in 1 <237039> out 1 <237040> # join
add in 2 <236781 237040> out 1 <237041>  # join source bit 12
const-mul-2 in 1 <237041> out 1 <237042> # join
add in 2 <236780 237042> out 1 <237043>  # join source bit 11
const-mul-2 in 1 <237043> out 1 <237044> # join
add in 2 <236779 237044> out 1 <237045>  # join source bit 10
const-mul-2 in 1 <237045> out 1 <237046> # join
add in 2 <236778 237046> out 1 <237047>  # join source bit 9
const-mul-2 in 1 <237047> out 1 <237048> # join
add in 2 <236777 237048> out 1 <237049>  # join source bit 8
const-mul-2 in 1 <237049> out 1 <237050> # join
add in 2 <236776 237050> out 1 <237051>  # join source bit 7
const-mul-2 in 1 <237051> out 1 <237052> # join
add in 2 <236775 237052> out 1 <237053>  # join source bit 6
const-mul-2 in 1 <237053> out 1 <237054> # join
add in 2 <236774 237054> out 1 <237055>  # join source bit 5
const-mul-2 in 1 <237055> out 1 <237056> # join
add in 2 <236773 237056> out 1 <237057>  # join source bit 4
const-mul-2 in 1 <237057> out 1 <237058> # join
add in 2 <236772 237058> out 1 <237059>  # join source bit 3
const-mul-2 in 1 <237059> out 1 <237060> # join
add in 2 <236771 237060> out 1 <237061>  # join source bit 2
const-mul-2 in 1 <237061> out 1 <237062> # join
add in 2 <236770 237062> out 1 <237063>  # join source bit 1
const-mul-2 in 1 <237063> out 1 <237064> # join
add in 2 <236769 237064> out 1 <237065>  # join source bit 0
add in 2 <237065 237065> out 1 <237066>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <237066> out 1 <237067> # multiply-by-constant 4294967295
add in 2 <236768 237067> out 1 <237068>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <236766> out 1 <237069> # multiply-by-constant 4294967295
add in 2 <236544 237069> out 1 <237070>  # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <237070> out 267 <237071 237072 237073 237074 237075 237076 237077 237078 237079 237080 237081 237082 237083 237084 237085 237086 237087 237088 237089 237090 237091 237092 237093 237094 237095 237096 237097 237098 237099 237100 237101 237102 237103 237104 237105 237106 237107 237108 237109 237110 237111 237112 237113 237114 237115 237116 237117 237118 237119 237120 237121 237122 237123 237124 237125 237126 237127 237128 237129 237130 237131 237132 237133 237134 237135 237136 237137 237138 237139 237140 237141 237142 237143 237144 237145 237146 237147 237148 237149 237150 237151 237152 237153 237154 237155 237156 237157 237158 237159 237160 237161 237162 237163 237164 237165 237166 237167 237168 237169 237170 237171 237172 237173 237174 237175 237176 237177 237178 237179 237180 237181 237182 237183 237184 237185 237186 237187 237188 237189 237190 237191 237192 237193 237194 237195 237196 237197 237198 237199 237200 237201 237202 237203 237204 237205 237206 237207 237208 237209 237210 237211 237212 237213 237214 237215 237216 237217 237218 237219 237220 237221 237222 237223 237224 237225 237226 237227 237228 237229 237230 237231 237232 237233 237234 237235 237236 237237 237238 237239 237240 237241 237242 237243 237244 237245 237246 237247 237248 237249 237250 237251 237252 237253 237254 237255 237256 237257 237258 237259 237260 237261 237262 237263 237264 237265 237266 237267 237268 237269 237270 237271 237272 237273 237274 237275 237276 237277 237278 237279 237280 237281 237282 237283 237284 237285 237286 237287 237288 237289 237290 237291 237292 237293 237294 237295 237296 237297 237298 237299 237300 237301 237302 237303 237304 237305 237306 237307 237308 237309 237310 237311 237312 237313 237314 237315 237316 237317 237318 237319 237320 237321 237322 237323 237324 237325 237326 237327 237328 237329 237330 237331 237332 237333 237334 237335 237336 237337> # SplitBus
mul in 2 <237102 237068> out 1 <237338>  # cond trueterm
const-mul-neg-1 in 1 <237102> out 1 <237339> # cond minuscond
add in 2 <100 237339> out 1 <237340>     # cond negcond
mul in 2 <237340 236544> out 1 <237341>  # cond falseterm
add in 2 <237338 237341> out 1 <237342>  # cond result
add in 2 <237342 104> out 1 <237343>     # ArithBusReq.AddReq(DFG.Conditional,DFG.Constant)
const-mul-ffffffff in 1 <74> out 1 <237344> # multiply-by-constant 4294967295
add in 2 <237343 237344> out 1 <237345>  # 'CmpLT DFG.Add - DFG.Input'
split in 1 <237345> out 238 <237346 237347 237348 237349 237350 237351 237352 237353 237354 237355 237356 237357 237358 237359 237360 237361 237362 237363 237364 237365 237366 237367 237368 237369 237370 237371 237372 237373 237374 237375 237376 237377 237378 237379 237380 237381 237382 237383 237384 237385 237386 237387 237388 237389 237390 237391 237392 237393 237394 237395 237396 237397 237398 237399 237400 237401 237402 237403 237404 237405 237406 237407 237408 237409 237410 237411 237412 237413 237414 237415 237416 237417 237418 237419 237420 237421 237422 237423 237424 237425 237426 237427 237428 237429 237430 237431 237432 237433 237434 237435 237436 237437 237438 237439 237440 237441 237442 237443 237444 237445 237446 237447 237448 237449 237450 237451 237452 237453 237454 237455 237456 237457 237458 237459 237460 237461 237462 237463 237464 237465 237466 237467 237468 237469 237470 237471 237472 237473 237474 237475 237476 237477 237478 237479 237480 237481 237482 237483 237484 237485 237486 237487 237488 237489 237490 237491 237492 237493 237494 237495 237496 237497 237498 237499 237500 237501 237502 237503 237504 237505 237506 237507 237508 237509 237510 237511 237512 237513 237514 237515 237516 237517 237518 237519 237520 237521 237522 237523 237524 237525 237526 237527 237528 237529 237530 237531 237532 237533 237534 237535 237536 237537 237538 237539 237540 237541 237542 237543 237544 237545 237546 237547 237548 237549 237550 237551 237552 237553 237554 237555 237556 237557 237558 237559 237560 237561 237562 237563 237564 237565 237566 237567 237568 237569 237570 237571 237572 237573 237574 237575 237576 237577 237578 237579 237580 237581 237582 237583> # SplitBus
mul in 2 <237377 103> out 1 <237584>     # cond trueterm
const-mul-neg-1 in 1 <237377> out 1 <237585> # cond minuscond
add in 2 <100 237585> out 1 <237586>     # cond negcond
mul in 2 <237586 102> out 1 <237587>     # cond falseterm
add in 2 <237584 237587> out 1 <237588>  # cond result
add in 2 <237342 3084> out 1 <237589>    # ArithBusReq.AddReq(DFG.Conditional,DFG.Negate)
const-mul-ffffffff in 1 <237589> out 1 <237590> # multiply-by-constant 4294967295
add in 2 <74 237590> out 1 <237591>      # 'CmpLT DFG.Input - DFG.Subtract'
split in 1 <237591> out 270 <237592 237593 237594 237595 237596 237597 237598 237599 237600 237601 237602 237603 237604 237605 237606 237607 237608 237609 237610 237611 237612 237613 237614 237615 237616 237617 237618 237619 237620 237621 237622 237623 237624 237625 237626 237627 237628 237629 237630 237631 237632 237633 237634 237635 237636 237637 237638 237639 237640 237641 237642 237643 237644 237645 237646 237647 237648 237649 237650 237651 237652 237653 237654 237655 237656 237657 237658 237659 237660 237661 237662 237663 237664 237665 237666 237667 237668 237669 237670 237671 237672 237673 237674 237675 237676 237677 237678 237679 237680 237681 237682 237683 237684 237685 237686 237687 237688 237689 237690 237691 237692 237693 237694 237695 237696 237697 237698 237699 237700 237701 237702 237703 237704 237705 237706 237707 237708 237709 237710 237711 237712 237713 237714 237715 237716 237717 237718 237719 237720 237721 237722 237723 237724 237725 237726 237727 237728 237729 237730 237731 237732 237733 237734 237735 237736 237737 237738 237739 237740 237741 237742 237743 237744 237745 237746 237747 237748 237749 237750 237751 237752 237753 237754 237755 237756 237757 237758 237759 237760 237761 237762 237763 237764 237765 237766 237767 237768 237769 237770 237771 237772 237773 237774 237775 237776 237777 237778 237779 237780 237781 237782 237783 237784 237785 237786 237787 237788 237789 237790 237791 237792 237793 237794 237795 237796 237797 237798 237799 237800 237801 237802 237803 237804 237805 237806 237807 237808 237809 237810 237811 237812 237813 237814 237815 237816 237817 237818 237819 237820 237821 237822 237823 237824 237825 237826 237827 237828 237829 237830 237831 237832 237833 237834 237835 237836 237837 237838 237839 237840 237841 237842 237843 237844 237845 237846 237847 237848 237849 237850 237851 237852 237853 237854 237855 237856 237857 237858 237859 237860 237861> # SplitBus
mul in 2 <237623 103> out 1 <237862>     # cond trueterm
const-mul-neg-1 in 1 <237623> out 1 <237863> # cond minuscond
add in 2 <100 237863> out 1 <237864>     # cond negcond
mul in 2 <237864 237588> out 1 <237865>  # cond falseterm
add in 2 <237862 237865> out 1 <237866>  # cond result
const-mul-ffffffff in 1 <73> out 1 <237867> # multiply-by-constant 4294967295
add in 2 <73 74> out 1 <237868>          # ArithBusReq.AddReq(DFG.Input,DFG.Input)
add in 2 <237868 237867> out 1 <237869>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <237869> out 1 <237870> # multiply-by-constant 4294967295
add in 2 <237868 237870> out 1 <237871>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <73> out 1 <237872> # multiply-by-constant 4294967295
add in 2 <74 237872> out 1 <237873>      # 'CmpLT DFG.Input - DFG.Input'
split in 1 <237873> out 65 <237874 237875 237876 237877 237878 237879 237880 237881 237882 237883 237884 237885 237886 237887 237888 237889 237890 237891 237892 237893 237894 237895 237896 237897 237898 237899 237900 237901 237902 237903 237904 237905 237906 237907 237908 237909 237910 237911 237912 237913 237914 237915 237916 237917 237918 237919 237920 237921 237922 237923 237924 237925 237926 237927 237928 237929 237930 237931 237932 237933 237934 237935 237936 237937 237938> # SplitBus
mul in 2 <237905 237871> out 1 <237939>  # cond trueterm
const-mul-neg-1 in 1 <237905> out 1 <237940> # cond minuscond
add in 2 <100 237940> out 1 <237941>     # cond negcond
mul in 2 <237941 74> out 1 <237942>      # cond falseterm
add in 2 <237939 237942> out 1 <237943>  # cond result
const-mul-ffffffff in 1 <237943> out 1 <237944> # multiply-by-constant 4294967295
add in 2 <237943 75> out 1 <237945>      # ArithBusReq.AddReq(DFG.Conditional,DFG.Input)
add in 2 <237945 237944> out 1 <237946>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <237946> out 1 <237947> # multiply-by-constant 4294967295
add in 2 <237945 237947> out 1 <237948>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <237943> out 1 <237949> # multiply-by-constant 4294967295
add in 2 <75 237949> out 1 <237950>      # 'CmpLT DFG.Input - DFG.Conditional'
split in 1 <237950> out 131 <237951 237952 237953 237954 237955 237956 237957 237958 237959 237960 237961 237962 237963 237964 237965 237966 237967 237968 237969 237970 237971 237972 237973 237974 237975 237976 237977 237978 237979 237980 237981 237982 237983 237984 237985 237986 237987 237988 237989 237990 237991 237992 237993 237994 237995 237996 237997 237998 237999 238000 238001 238002 238003 238004 238005 238006 238007 238008 238009 238010 238011 238012 238013 238014 238015 238016 238017 238018 238019 238020 238021 238022 238023 238024 238025 238026 238027 238028 238029 238030 238031 238032 238033 238034 238035 238036 238037 238038 238039 238040 238041 238042 238043 238044 238045 238046 238047 238048 238049 238050 238051 238052 238053 238054 238055 238056 238057 238058 238059 238060 238061 238062 238063 238064 238065 238066 238067 238068 238069 238070 238071 238072 238073 238074 238075 238076 238077 238078 238079 238080 238081> # SplitBus
mul in 2 <237982 237948> out 1 <238082>  # cond trueterm
const-mul-neg-1 in 1 <237982> out 1 <238083> # cond minuscond
add in 2 <100 238083> out 1 <238084>     # cond negcond
mul in 2 <238084 75> out 1 <238085>      # cond falseterm
add in 2 <238082 238085> out 1 <238086>  # cond result
const-mul-ffffffff in 1 <238086> out 1 <238087> # multiply-by-constant 4294967295
add in 2 <238086 76> out 1 <238088>      # ArithBusReq.AddReq(DFG.Conditional,DFG.Input)
add in 2 <238088 238087> out 1 <238089>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <238086> out 1 <238090> # multiply-by-constant 4294967295
add in 2 <76 238090> out 1 <238091>      # 'CmpLT DFG.Input - DFG.Conditional'
split in 1 <238091> out 197 <238092 238093 238094 238095 238096 238097 238098 238099 238100 238101 238102 238103 238104 238105 238106 238107 238108 238109 238110 238111 238112 238113 238114 238115 238116 238117 238118 238119 238120 238121 238122 238123 238124 238125 238126 238127 238128 238129 238130 238131 238132 238133 238134 238135 238136 238137 238138 238139 238140 238141 238142 238143 238144 238145 238146 238147 238148 238149 238150 238151 238152 238153 238154 238155 238156 238157 238158 238159 238160 238161 238162 238163 238164 238165 238166 238167 238168 238169 238170 238171 238172 238173 238174 238175 238176 238177 238178 238179 238180 238181 238182 238183 238184 238185 238186 238187 238188 238189 238190 238191 238192 238193 238194 238195 238196 238197 238198 238199 238200 238201 238202 238203 238204 238205 238206 238207 238208 238209 238210 238211 238212 238213 238214 238215 238216 238217 238218 238219 238220 238221 238222 238223 238224 238225 238226 238227 238228 238229 238230 238231 238232 238233 238234 238235 238236 238237 238238 238239 238240 238241 238242 238243 238244 238245 238246 238247 238248 238249 238250 238251 238252 238253 238254 238255 238256 238257 238258 238259 238260 238261 238262 238263 238264 238265 238266 238267 238268 238269 238270 238271 238272 238273 238274 238275 238276 238277 238278 238279 238280 238281 238282 238283 238284 238285 238286 238287 238288> # SplitBus
mul in 2 <238123 238089> out 1 <238289>  # cond trueterm
const-mul-neg-1 in 1 <238123> out 1 <238290> # cond minuscond
add in 2 <100 238290> out 1 <238291>     # cond negcond
mul in 2 <238291 238086> out 1 <238292>  # cond falseterm
add in 2 <238289 238292> out 1 <238293>  # cond result
mul in 2 <237982 237946> out 1 <238294>  # cond trueterm
const-mul-neg-1 in 1 <237982> out 1 <238295> # cond minuscond
add in 2 <100 238295> out 1 <238296>     # cond negcond
mul in 2 <238296 237943> out 1 <238297>  # cond falseterm
add in 2 <238294 238297> out 1 <238298>  # cond result
mul in 2 <237905 237869> out 1 <238299>  # cond trueterm
const-mul-neg-1 in 1 <237905> out 1 <238300> # cond minuscond
add in 2 <100 238300> out 1 <238301>     # cond negcond
mul in 2 <238301 73> out 1 <238302>      # cond falseterm
add in 2 <238299 238302> out 1 <238303>  # cond result
const-mul-ffffffff in 1 <238303> out 1 <238304> # multiply-by-constant 4294967295
add in 2 <238303 238298> out 1 <238305>  # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
add in 2 <238305 238304> out 1 <238306>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <238306> out 1 <238307> # multiply-by-constant 4294967295
add in 2 <238305 238307> out 1 <238308>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <238303> out 1 <238309> # multiply-by-constant 4294967295
add in 2 <238298 238309> out 1 <238310>  # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <238310> out 132 <238311 238312 238313 238314 238315 238316 238317 238318 238319 238320 238321 238322 238323 238324 238325 238326 238327 238328 238329 238330 238331 238332 238333 238334 238335 238336 238337 238338 238339 238340 238341 238342 238343 238344 238345 238346 238347 238348 238349 238350 238351 238352 238353 238354 238355 238356 238357 238358 238359 238360 238361 238362 238363 238364 238365 238366 238367 238368 238369 238370 238371 238372 238373 238374 238375 238376 238377 238378 238379 238380 238381 238382 238383 238384 238385 238386 238387 238388 238389 238390 238391 238392 238393 238394 238395 238396 238397 238398 238399 238400 238401 238402 238403 238404 238405 238406 238407 238408 238409 238410 238411 238412 238413 238414 238415 238416 238417 238418 238419 238420 238421 238422 238423 238424 238425 238426 238427 238428 238429 238430 238431 238432 238433 238434 238435 238436 238437 238438 238439 238440 238441 238442> # SplitBus
mul in 2 <238342 238308> out 1 <238443>  # cond trueterm
const-mul-neg-1 in 1 <238342> out 1 <238444> # cond minuscond
add in 2 <100 238444> out 1 <238445>     # cond negcond
mul in 2 <238445 238298> out 1 <238446>  # cond falseterm
add in 2 <238443 238446> out 1 <238447>  # cond result
const-mul-ffffffff in 1 <238447> out 1 <238448> # multiply-by-constant 4294967295
add in 2 <238447 238293> out 1 <238449>  # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
add in 2 <238449 238448> out 1 <238450>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <238450> out 1 <238451> # multiply-by-constant 4294967295
add in 2 <238449 238451> out 1 <238452>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <238447> out 1 <238453> # multiply-by-constant 4294967295
add in 2 <238293 238453> out 1 <238454>  # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <238454> out 199 <238455 238456 238457 238458 238459 238460 238461 238462 238463 238464 238465 238466 238467 238468 238469 238470 238471 238472 238473 238474 238475 238476 238477 238478 238479 238480 238481 238482 238483 238484 238485 238486 238487 238488 238489 238490 238491 238492 238493 238494 238495 238496 238497 238498 238499 238500 238501 238502 238503 238504 238505 238506 238507 238508 238509 238510 238511 238512 238513 238514 238515 238516 238517 238518 238519 238520 238521 238522 238523 238524 238525 238526 238527 238528 238529 238530 238531 238532 238533 238534 238535 238536 238537 238538 238539 238540 238541 238542 238543 238544 238545 238546 238547 238548 238549 238550 238551 238552 238553 238554 238555 238556 238557 238558 238559 238560 238561 238562 238563 238564 238565 238566 238567 238568 238569 238570 238571 238572 238573 238574 238575 238576 238577 238578 238579 238580 238581 238582 238583 238584 238585 238586 238587 238588 238589 238590 238591 238592 238593 238594 238595 238596 238597 238598 238599 238600 238601 238602 238603 238604 238605 238606 238607 238608 238609 238610 238611 238612 238613 238614 238615 238616 238617 238618 238619 238620 238621 238622 238623 238624 238625 238626 238627 238628 238629 238630 238631 238632 238633 238634 238635 238636 238637 238638 238639 238640 238641 238642 238643 238644 238645 238646 238647 238648 238649 238650 238651 238652 238653> # SplitBus
mul in 2 <238486 238452> out 1 <238654>  # cond trueterm
const-mul-neg-1 in 1 <238486> out 1 <238655> # cond minuscond
add in 2 <100 238655> out 1 <238656>     # cond negcond
mul in 2 <238656 238293> out 1 <238657>  # cond falseterm
add in 2 <238654 238657> out 1 <238658>  # cond result
const-mul-ffffffff in 1 <238658> out 1 <238659> # multiply-by-constant 4294967295
const-mul-ffffffff in 1 <238089> out 1 <238660> # multiply-by-constant 4294967295
add in 2 <238088 238660> out 1 <238661>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
mul in 2 <238123 238661> out 1 <238662>  # cond trueterm
const-mul-neg-1 in 1 <238123> out 1 <238663> # cond minuscond
add in 2 <100 238663> out 1 <238664>     # cond negcond
mul in 2 <238664 76> out 1 <238665>      # cond falseterm
add in 2 <238662 238665> out 1 <238666>  # cond result
const-mul-ffffffff in 1 <238666> out 1 <238667> # multiply-by-constant 4294967295
add in 2 <238666 77> out 1 <238668>      # ArithBusReq.AddReq(DFG.Conditional,DFG.Input)
split in 1 <238668> out 231 <238669 238670 238671 238672 238673 238674 238675 238676 238677 238678 238679 238680 238681 238682 238683 238684 238685 238686 238687 238688 238689 238690 238691 238692 238693 238694 238695 238696 238697 238698 238699 238700 238701 238702 238703 238704 238705 238706 238707 238708 238709 238710 238711 238712 238713 238714 238715 238716 238717 238718 238719 238720 238721 238722 238723 238724 238725 238726 238727 238728 238729 238730 238731 238732 238733 238734 238735 238736 238737 238738 238739 238740 238741 238742 238743 238744 238745 238746 238747 238748 238749 238750 238751 238752 238753 238754 238755 238756 238757 238758 238759 238760 238761 238762 238763 238764 238765 238766 238767 238768 238769 238770 238771 238772 238773 238774 238775 238776 238777 238778 238779 238780 238781 238782 238783 238784 238785 238786 238787 238788 238789 238790 238791 238792 238793 238794 238795 238796 238797 238798 238799 238800 238801 238802 238803 238804 238805 238806 238807 238808 238809 238810 238811 238812 238813 238814 238815 238816 238817 238818 238819 238820 238821 238822 238823 238824 238825 238826 238827 238828 238829 238830 238831 238832 238833 238834 238835 238836 238837 238838 238839 238840 238841 238842 238843 238844 238845 238846 238847 238848 238849 238850 238851 238852 238853 238854 238855 238856 238857 238858 238859 238860 238861 238862 238863 238864 238865 238866 238867 238868 238869 238870 238871 238872 238873 238874 238875 238876 238877 238878 238879 238880 238881 238882 238883 238884 238885 238886 238887 238888 238889 238890 238891 238892 238893 238894 238895 238896 238897 238898 238899> # SplitBus
const-mul-2 in 1 <238700> out 1 <238900> # join source bit 31
add in 2 <238699 238900> out 1 <238901>  # join source bit 30
const-mul-2 in 1 <238901> out 1 <238902> # join
add in 2 <238698 238902> out 1 <238903>  # join source bit 29
const-mul-2 in 1 <238903> out 1 <238904> # join
add in 2 <238697 238904> out 1 <238905>  # join source bit 28
const-mul-2 in 1 <238905> out 1 <238906> # join
add in 2 <238696 238906> out 1 <238907>  # join source bit 27
const-mul-2 in 1 <238907> out 1 <238908> # join
add in 2 <238695 238908> out 1 <238909>  # join source bit 26
const-mul-2 in 1 <238909> out 1 <238910> # join
add in 2 <238694 238910> out 1 <238911>  # join source bit 25
const-mul-2 in 1 <238911> out 1 <238912> # join
add in 2 <238693 238912> out 1 <238913>  # join source bit 24
const-mul-2 in 1 <238913> out 1 <238914> # join
add in 2 <238692 238914> out 1 <238915>  # join source bit 23
const-mul-2 in 1 <238915> out 1 <238916> # join
add in 2 <238691 238916> out 1 <238917>  # join source bit 22
const-mul-2 in 1 <238917> out 1 <238918> # join
add in 2 <238690 238918> out 1 <238919>  # join source bit 21
const-mul-2 in 1 <238919> out 1 <238920> # join
add in 2 <238689 238920> out 1 <238921>  # join source bit 20
const-mul-2 in 1 <238921> out 1 <238922> # join
add in 2 <238688 238922> out 1 <238923>  # join source bit 19
const-mul-2 in 1 <238923> out 1 <238924> # join
add in 2 <238687 238924> out 1 <238925>  # join source bit 18
const-mul-2 in 1 <238925> out 1 <238926> # join
add in 2 <238686 238926> out 1 <238927>  # join source bit 17
const-mul-2 in 1 <238927> out 1 <238928> # join
add in 2 <238685 238928> out 1 <238929>  # join source bit 16
const-mul-2 in 1 <238929> out 1 <238930> # join
add in 2 <238684 238930> out 1 <238931>  # join source bit 15
const-mul-2 in 1 <238931> out 1 <238932> # join
add in 2 <238683 238932> out 1 <238933>  # join source bit 14
const-mul-2 in 1 <238933> out 1 <238934> # join
add in 2 <238682 238934> out 1 <238935>  # join source bit 13
const-mul-2 in 1 <238935> out 1 <238936> # join
add in 2 <238681 238936> out 1 <238937>  # join source bit 12
const-mul-2 in 1 <238937> out 1 <238938> # join
add in 2 <238680 238938> out 1 <238939>  # join source bit 11
const-mul-2 in 1 <238939> out 1 <238940> # join
add in 2 <238679 238940> out 1 <238941>  # join source bit 10
const-mul-2 in 1 <238941> out 1 <238942> # join
add in 2 <238678 238942> out 1 <238943>  # join source bit 9
const-mul-2 in 1 <238943> out 1 <238944> # join
add in 2 <238677 238944> out 1 <238945>  # join source bit 8
const-mul-2 in 1 <238945> out 1 <238946> # join
add in 2 <238676 238946> out 1 <238947>  # join source bit 7
const-mul-2 in 1 <238947> out 1 <238948> # join
add in 2 <238675 238948> out 1 <238949>  # join source bit 6
const-mul-2 in 1 <238949> out 1 <238950> # join
add in 2 <238674 238950> out 1 <238951>  # join source bit 5
const-mul-2 in 1 <238951> out 1 <238952> # join
add in 2 <238673 238952> out 1 <238953>  # join source bit 4
const-mul-2 in 1 <238953> out 1 <238954> # join
add in 2 <238672 238954> out 1 <238955>  # join source bit 3
const-mul-2 in 1 <238955> out 1 <238956> # join
add in 2 <238671 238956> out 1 <238957>  # join source bit 2
const-mul-2 in 1 <238957> out 1 <238958> # join
add in 2 <238670 238958> out 1 <238959>  # join source bit 1
const-mul-2 in 1 <238959> out 1 <238960> # join
add in 2 <238669 238960> out 1 <238961>  # join source bit 0
add in 2 <238961 238961> out 1 <238962>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <238666> out 1 <238963> # multiply-by-constant 4294967295
add in 2 <77 238963> out 1 <238964>      # 'CmpLT DFG.Input - DFG.Conditional'
split in 1 <238964> out 263 <238965 238966 238967 238968 238969 238970 238971 238972 238973 238974 238975 238976 238977 238978 238979 238980 238981 238982 238983 238984 238985 238986 238987 238988 238989 238990 238991 238992 238993 238994 238995 238996 238997 238998 238999 239000 239001 239002 239003 239004 239005 239006 239007 239008 239009 239010 239011 239012 239013 239014 239015 239016 239017 239018 239019 239020 239021 239022 239023 239024 239025 239026 239027 239028 239029 239030 239031 239032 239033 239034 239035 239036 239037 239038 239039 239040 239041 239042 239043 239044 239045 239046 239047 239048 239049 239050 239051 239052 239053 239054 239055 239056 239057 239058 239059 239060 239061 239062 239063 239064 239065 239066 239067 239068 239069 239070 239071 239072 239073 239074 239075 239076 239077 239078 239079 239080 239081 239082 239083 239084 239085 239086 239087 239088 239089 239090 239091 239092 239093 239094 239095 239096 239097 239098 239099 239100 239101 239102 239103 239104 239105 239106 239107 239108 239109 239110 239111 239112 239113 239114 239115 239116 239117 239118 239119 239120 239121 239122 239123 239124 239125 239126 239127 239128 239129 239130 239131 239132 239133 239134 239135 239136 239137 239138 239139 239140 239141 239142 239143 239144 239145 239146 239147 239148 239149 239150 239151 239152 239153 239154 239155 239156 239157 239158 239159 239160 239161 239162 239163 239164 239165 239166 239167 239168 239169 239170 239171 239172 239173 239174 239175 239176 239177 239178 239179 239180 239181 239182 239183 239184 239185 239186 239187 239188 239189 239190 239191 239192 239193 239194 239195 239196 239197 239198 239199 239200 239201 239202 239203 239204 239205 239206 239207 239208 239209 239210 239211 239212 239213 239214 239215 239216 239217 239218 239219 239220 239221 239222 239223 239224 239225 239226 239227> # SplitBus
mul in 2 <238996 238962> out 1 <239228>  # cond trueterm
const-mul-neg-1 in 1 <238996> out 1 <239229> # cond minuscond
add in 2 <100 239229> out 1 <239230>     # cond negcond
mul in 2 <239230 238666> out 1 <239231>  # cond falseterm
add in 2 <239228 239231> out 1 <239232>  # cond result
add in 2 <238658 239232> out 1 <239233>  # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
split in 1 <239233> outplitBus
const-mul-2 in 1 <239265> out 1 <239467> # join source bit 31
add in 2 <239264 239467> out 1 <239468>  # join source bit 30
const-mul-2 in 1 <239468> out 1 <239469> # join
add in 2 <239263 239469> out 1 <239470>  # join source bit 29
const-mul-2 in 1 <239470> out 1 <239471> # join
add in 2 <239262 239471> out 1 <239472>  # join source bit 28
const-mul-2 in 1 <239472> out 1 <239473> # join
add in 2 <239261 239473> out 1 <239474>  # join source bit 27
const-mul-2 in 1 <239474> out 1 <239475> # join
add in 2 <239260 239475> out 1 <239476>  # join source bit 26
const-mul-2 in 1 <239476> out 1 <239477> # join
add in 2 <239259 239477> out 1 <239478>  # join source bit 25
const-mul-2 in 1 <239478> out 1 <239479> # join
add in 2 <239258 239479> out 1 <239480>  # join source bit 24
const-mul-2 in 1 <239480> out 1 <239481> # join
add in 2 <239257 239481> out 1 <239482>  # join source bit 23
const-mul-2 in 1 <239482> out 1 <239483> # join
add in 2 <239256 239483> out 1 <239484>  # join source bit 22
const-mul-2 in 1 <239484> out 1 <239485> # join
add in 2 <239255 239485> out 1 <239486>  # join source bit 21
const-mul-2 in 1 <239486> out 1 <239487> # join
add in 2 <239254 239487> out 1 <239488>  # join source bit 20
const-mul-2 in 1 <239488> out 1 <239489> # join
add in 2 <239253 239489> out 1 <239490>  # join source bit 19
const-mul-2 in 1 <239490> out 1 <239491> # join
add in 2 <239252 239491> out 1 <239492>  # join source bit 18
const-mul-2 in 1 <239492> out 1 <239493> # join
add in 2 <239251 239493> out 1 <239494>  # join source bit 17
const-mul-2 in 1 <239494> out 1 <239495> # join
add in 2 <239250 239495> out 1 <239496>  # join source bit 16
const-mul-2 in 1 <239496> out 1 <239497> # join
add in 2 <239249 239497> out 1 <239498>  # join source bit 15
const-mul-2 in 1 <239498> out 1 <239499> # join
add in 2 <239248 239499> out 1 <239500>  # join source bit 14
const-mul-2 in 1 <239500> out 1 <239501> # join
add in 2 <239247 239501> out 1 <239502>  # join source bit 13
const-mul-2 in 1 <239502> out 1 <239503> # join
add in 2 <239246 239503> out 1 <239504>  # join source bit 12
const-mul-2 in 1 <239504> out 1 <239505> # join
add in 2 <239245 239505> out 1 <239506>  # join source bit 11
const-mul-2 in 1 <239506> out 1 <239507> # join
add in 2 <239244 239507> out 1 <239508>  # join source bit 10
const-mul-2 in 1 <239508> out 1 <239509> # join
add in 2 <239243 239509> out 1 <239510>  # join source bit 9
const-mul-2 in 1 <239510> out 1 <239511> # join
add in 2 <239242 239511> out 1 <239512>  # join source bit 8
const-mul-2 in 1 <239512> out 1 <239513> # join
add in 2 <239241 239513> out 1 <239514>  # join source bit 7
const-mul-2 in 1 <239514> out 1 <239515> # join
add in 2 <239240 239515> out 1 <239516>  # join source bit 6
const-mul-2 in 1 <239516> out 1 <239517> # join
add in 2 <239239 239517> out 1 <239518>  # join source bit 5
const-mul-2 in 1 <239518> out 1 <239519> # join
add in 2 <239238 239519> out 1 <239520>  # join source bit 4
const-mul-2 in 1 <239520> out 1 <239521> # join
add in 2 <239237 239521> out 1 <239522>  # join source bit 3
const-mul-2 in 1 <239522> out 1 <239523> # join
add in 2 <239236 239523> out 1 <239524>  # join source bit 2
const-mul-2 in 1 <239524> out 1 <239525> # join
add in 2 <239235 239525> out 1 <239526>  # join source bit 1
const-mul-2 in 1 <239526> out 1 <239527> # join
add in 2 <239234 239527> out 1 <239528>  # join source bit 0
add in 2 <239528 239528> out 1 <239529>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <238658> out 1 <239530> # multiply-by-constant 4294967295
add in 2 <239232 239530> out 1 <239531>  # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <239531> outplitBus
mul in 2 <239563 239529> out 1 <239797>  # cond trueterm
const-mul-neg-1 in 1 <239563> out 1 <239798> # cond minuscond
add in 2 <100 239798> out 1 <239799>     # cond negcond
mul in 2 <239799 238658> out 1 <239800>  # cond falseterm
add in 2 <239797 239800> out 1 <239801>  # cond result
mul in 2 <238486 238450> out 1 <239802>  # cond trueterm
const-mul-neg-1 in 1 <238486> out 1 <239803> # cond minuscond
add in 2 <100 239803> out 1 <239804>     # cond negcond
mul in 2 <239804 238447> out 1 <239805>  # cond falseterm
add in 2 <239802 239805> out 1 <239806>  # cond result
mul in 2 <238342 238306> out 1 <239807>  # cond trueterm
const-mul-neg-1 in 1 <238342> out 1 <239808> # cond minuscond
add in 2 <100 239808> out 1 <239809>     # cond negcond
mul in 2 <239809 238303> out 1 <239810>  # cond falseterm
add in 2 <239807 239810> out 1 <239811>  # cond result
const-mul-ffffffff in 1 <239811> out 1 <239812> # multiply-by-constant 4294967295
add in 2 <239811 239806> out 1 <239813>  # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
add in 2 <239813 239812> out 1 <239814>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <239814> out 1 <239815> # multiply-by-constant 4294967295
add in 2 <239813 239815> out 1 <239816>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <239811> out 1 <239817> # multiply-by-constant 4294967295
add in 2 <239806 239817> out 1 <239818>  # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <239818> out 200 <239819 239820 239821 239822 239823 239824 239825 239826 239827 239828 239829 239830 239831 239832 239833 239834 239835 239836 239837 239838 239839 239840 239841 239842 239843 239844 239845 239846 239847 239848 239849 239850 239851 239852 239853 239854 239855 239856 239857 239858 239859 239860 239861 239862 239863 239864 239865 239866 239867 239868 239869 239870 239871 239872 239873 239874 239875 239876 239877 239878 239879 239880 239881 239882 239883 239884 239885 239886 239887 239888 239889 239890 239891 239892 239893 239894 239895 239896 239897 239898 239899 239900 239901 239902 239903 239904 239905 239906 239907 239908 239909 239910 239911 239912 239913 239914 239915 239916 239917 239918 239919 239920 239921 239922 239923 239924 239925 239926 239927 239928 239929 239930 239931 239932 239933 239934 239935 239936 239937 239938 239939 239940 239941 239942 239943 239944 239945 239946 239947 239948 239949 239950 239951 239952 239953 239954 239955 239956 239957 239958 239959 239960 239961 239962 239963 239964 239965 239966 239967 239968 239969 239970 239971 239972 239973 239974 239975 239976 239977 239978 239979 239980 239981 239982 239983 239984 239985 239986 239987 239988 239989 239990 239991 239992 239993 239994 239995 239996 239997 239998 239999 240000 240001 240002 240003 240004 240005 240006 240007 240008 240009 240010 240011 240012 240013 240014 240015 240016 240017 240018> # SplitBus
mul in 2 <239850 239816> out 1 <240019>  # cond trueterm
const-mul-neg-1 in 1 <239850> out 1 <240020> # cond minuscond
add in 2 <100 240020> out 1 <240021>     # cond negcond
mul in 2 <240021 239806> out 1 <240022>  # cond falseterm
add in 2 <240019 240022> out 1 <240023>  # cond result
const-mul-ffffffff in 1 <240023> out 1 <240024> # multiply-by-constant 4294967295
add in 2 <240023 239801> out 1 <240025>  # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
split in 1 <240025> outplitBus
const-mul-2 in 1 <240057> out 1 <240261> # join source bit 31
add in 2 <240056 240261> out 1 <240262>  # join source bit 30
const-mul-2 in 1 <240262> out 1 <240263> # join
add in 2 <240055 240263> out 1 <240264>  # join source bit 29
const-mul-2 in 1 <240264> out 1 <240265> # join
add in 2 <240054 240265> out 1 <240266>  # join source bit 28
const-mul-2 in 1 <240266> out 1 <240267> # join
add in 2 <240053 240267> out 1 <240268>  # join source bit 27
const-mul-2 in 1 <240268> out 1 <240269> # join
add in 2 <240052 240269> out 1 <240270>  # join source bit 26
const-mul-2 in 1 <240270> out 1 <240271> # join
add in 2 <240051 240271> out 1 <240272>  # join source bit 25
const-mul-2 in 1 <240272> out 1 <240273> # join
add in 2 <240050 240273> out 1 <240274>  # join source bit 24
const-mul-2 in 1 <240274> out 1 <240275> # join
add in 2 <240049 240275> out 1 <240276>  # join source bit 23
const-mul-2 in 1 <240276> out 1 <240277> # join
add in 2 <240048 240277> out 1 <240278>  # join source bit 22
const-mul-2 in 1 <240278> out 1 <240279> # join
add in 2 <240047 240279> out 1 <240280>  # join source bit 21
const-mul-2 in 1 <240280> out 1 <240281> # join
add in 2 <240046 240281> out 1 <240282>  # join source bit 20
const-mul-2 in 1 <240282> out 1 <240283> # join
add in 2 <240045 240283> out 1 <240284>  # join source bit 19
const-mul-2 in 1 <240284> out 1 <240285> # join
add in 2 <240044 240285> out 1 <240286>  # join source bit 18
const-mul-2 in 1 <240286> out 1 <240287> # join
add in 2 <240043 240287> out 1 <240288>  # join source bit 17
const-mul-2 in 1 <240288> out 1 <240289> # join
add in 2 <240042 240289> out 1 <240290>  # join source bit 16
const-mul-2 in 1 <240290> out 1 <240291> # join
add in 2 <240041 240291> out 1 <240292>  # join source bit 15
const-mul-2 in 1 <240292> out 1 <240293> # join
add in 2 <240040 240293> out 1 <240294>  # join source bit 14
const-mul-2 in 1 <240294> out 1 <240295> # join
add in 2 <240039 240295> out 1 <240296>  # join source bit 13
const-mul-2 in 1 <240296> out 1 <240297> # join
add in 2 <240038 240297> out 1 <240298>  # join source bit 12
const-mul-2 in 1 <240298> out 1 <240299> # join
add in 2 <240037 240299> out 1 <240300>  # join source bit 11
const-mul-2 in 1 <240300> out 1 <240301> # join
add in 2 <240036 240301> out 1 <240302>  # join source bit 10
const-mul-2 in 1 <240302> out 1 <240303> # join
add in 2 <240035 240303> out 1 <240304>  # join source bit 9
const-mul-2 in 1 <240304> out 1 <240305> # join
add in 2 <240034 240305> out 1 <240306>  # join source bit 8
const-mul-2 in 1 <240306> out 1 <240307> # join
add in 2 <240033 240307> out 1 <240308>  # join source bit 7
const-mul-2 in 1 <240308> out 1 <240309> # join
add in 2 <240032 240309> out 1 <240310>  # join source bit 6
const-mul-2 in 1 <240310> out 1 <240311> # join
add in 2 <240031 240311> out 1 <240312>  # join source bit 5
const-mul-2 in 1 <240312> out 1 <240313> # join
add in 2 <240030 240313> out 1 <240314>  # join source bit 4
const-mul-2 in 1 <240314> out 1 <240315> # join
add in 2 <240029 240315> out 1 <240316>  # join source bit 3
const-mul-2 in 1 <240316> out 1 <240317> # join
add in 2 <240028 240317> out 1 <240318>  # join source bit 2
const-mul-2 in 1 <240318> out 1 <240319> # join
add in 2 <240027 240319> out 1 <240320>  # join source bit 1
const-mul-2 in 1 <240320> out 1 <240321> # join
add in 2 <240026 240321> out 1 <240322>  # join source bit 0
add in 2 <240322 240322> out 1 <240323>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <240323> out 1 <240324> # multiply-by-constant 4294967295
add in 2 <240025 240324> out 1 <240325>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <240023> out 1 <240326> # multiply-by-constant 4294967295
add in 2 <239801 240326> out 1 <240327>  # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <240327> outplitBus
mul in 2 <240359 240325> out 1 <240595>  # cond trueterm
const-mul-neg-1 in 1 <240359> out 1 <240596> # cond minuscond
add in 2 <100 240596> out 1 <240597>     # cond negcond
mul in 2 <240597 239801> out 1 <240598>  # cond falseterm
add in 2 <240595 240598> out 1 <240599>  # cond result
add in 2 <240599 104> out 1 <240600>     # ArithBusReq.AddReq(DFG.Conditional,DFG.Constant)
const-mul-ffffffff in 1 <75> out 1 <240601> # multiply-by-constant 4294967295
add in 2 <240600 240601> out 1 <240602>  # 'CmpLT DFG.Add - DFG.Input'
split in 1 <240602> outplitBus
mul in 2 <240634 103> out 1 <240841>     # cond trueterm
const-mul-neg-1 in 1 <240634> out 1 <240842> # cond minuscond
add in 2 <100 240842> out 1 <240843>     # cond negcond
mul in 2 <240843 102> out 1 <240844>     # cond falseterm
add in 2 <240841 240844> out 1 <240845>  # cond result
add in 2 <240599 3084> out 1 <240846>    # ArithBusReq.AddReq(DFG.Conditional,DFG.Negate)
const-mul-ffffffff in 1 <240846> out 1 <240847> # multiply-by-constant 4294967295
add in 2 <75 240847> out 1 <240848>      # 'CmpLT DFG.Input - DFG.Subtract'
split in 1 <240848> out 270 <240849 240850 240851 240852 240853 240854 240855 240856 240857 240858 240859 240860 240861 240862 240863 240864 240865 240866 240867 240868 240869 240870 240871 240872 240873 240874 240875 240876 240877 240878 240879 240880 240881 240882 240883 240884 240885 240886 240887 240888 240889 240890 240891 240892 240893 240894 240895 240896 240897 240898 240899 240900 240901 240902 240903 240904 240905 240906 240907 240908 240909 240910 240911 240912 240913 240914 240915 240916 240917 240918 240919 240920 240921 240922 240923 240924 240925 240926 240927 240928 240929 240930 240931 240932 240933 240934 240935 240936 240937 240938 240939 240940 240941 240942 240943 240944 240945 240946 240947 240948 240949 240950 240951 240952 240953 240954 240955 240956 240957 240958 240959 240960 240961 240962 240963 240964 240965 240966 240967 240968 240969 240970 240971 240972 240973 240974 240975 240976 240977 240978 240979 240980 240981 240982 240983 240984 240985 240986 240987 240988 240989 240990 240991 240992 240993 240994 240995 240996 240997 240998 240999 241000 241001 241002 241003 241004 241005 241006 241007 241008 241009 241010 241011 241012 241013 241014 241015 241016 241017 241018 241019 241020 241021 241022 241023 241024 241025 241026 241027 241028 241029 241030 241031 241032 241033 241034 241035 241036 241037 241038 241039 241040 241041 241042 241043 241044 241045 241046 241047 241048 241049 241050 241051 241052 241053 241054 241055 241056 241057 241058 241059 241060 241061 241062 241063 241064 241065 241066 241067 241068 241069 241070 241071 241072 241073 241074 241075 241076 241077 241078 241079 241080 241081 241082 241083 241084 241085 241086 241087 241088 241089 241090 241091 241092 241093 241094 241095 241096 241097 241098 241099 241100 241101 241102 241103 241104 241105 241106 241107 241108 241109 241110 241111 241112 241113 241114 241115 241116 241117 241118> # SplitBus
mul in 2 <240880 103> out 1 <241119>     # cond trueterm
const-mul-neg-1 in 1 <240880> out 1 <241120> # cond minuscond
add in 2 <100 241120> out 1 <241121>     # cond negcond
mul in 2 <241121 240845> out 1 <241122>  # cond falseterm
add in 2 <241119 241122> out 1 <241123>  # cond result
const-mul-ffffffff in 1 <74> out 1 <241124> # multiply-by-constant 4294967295
add in 2 <74 75> out 1 <241125>          # ArithBusReq.AddReq(DFG.Input,DFG.Input)
add in 2 <241125 241124> out 1 <241126>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <241126> out 1 <241127> # multiply-by-constant 4294967295
add in 2 <241125 241127> out 1 <241128>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <74> out 1 <241129> # multiply-by-constant 4294967295
add in 2 <75 241129> out 1 <241130>      # 'CmpLT DFG.Input - DFG.Input'
split in 1 <241130> out 65 <241131 241132 241133 241134 241135 241136 241137 241138 241139 241140 241141 241142 241143 241144 241145 241146 241147 241148 241149 241150 241151 241152 241153 241154 241155 241156 241157 241158 241159 241160 241161 241162 241163 241164 241165 241166 241167 241168 241169 241170 241171 241172 241173 241174 241175 241176 241177 241178 241179 241180 241181 241182 241183 241184 241185 241186 241187 241188 241189 241190 241191 241192 241193 241194 241195> # SplitBus
mul in 2 <241162 241128> out 1 <241196>  # cond trueterm
const-mul-neg-1 in 1 <241162> out 1 <241197> # cond minuscond
add in 2 <100 241197> out 1 <241198>     # cond negcond
mul in 2 <241198 75> out 1 <241199>      # cond falseterm
add in 2 <241196 241199> out 1 <241200>  # cond result
const-mul-ffffffff in 1 <241200> out 1 <241201> # multiply-by-constant 4294967295
add in 2 <241200 76> out 1 <241202>      # ArithBusReq.AddReq(DFG.Conditional,DFG.Input)
add in 2 <241202 241201> out 1 <241203>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <241203> out 1 <241204> # multiply-by-constant 4294967295
add in 2 <241202 241204> out 1 <241205>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <241200> out 1 <241206> # multiply-by-constant 4294967295
add in 2 <76 241206> out 1 <241207>      # 'CmpLT DFG.Input - DFG.Conditional'
split in 1 <241207> out 131 <241208 241209 241210 241211 241212 241213 241214 241215 241216 241217 241218 241219 241220 241221 241222 241223 241224 241225 241226 241227 241228 241229 241230 241231 241232 241233 241234 241235 241236 241237 241238 241239 241240 241241 241242 241243 241244 241245 241246 241247 241248 241249 241250 241251 241252 241253 241254 241255 241256 241257 241258 241259 241260 241261 241262 241263 241264 241265 241266 241267 241268 241269 241270 241271 241272 241273 241274 241275 241276 241277 241278 241279 241280 241281 241282 241283 241284 241285 241286 241287 241288 241289 241290 241291 241292 241293 241294 241295 241296 241297 241298 241299 241300 241301 241302 241303 241304 241305 241306 241307 241308 241309 241310 241311 241312 241313 241314 241315 241316 241317 241318 241319 241320 241321 241322 241323 241324 241325 241326 241327 241328 241329 241330 241331 241332 241333 241334 241335 241336 241337 241338> # SplitBus
mul in 2 <241239 241205> out 1 <241339>  # cond trueterm
const-mul-neg-1 in 1 <241239> out 1 <241340> # cond minuscond
add in 2 <100 241340> out 1 <241341>     # cond negcond
mul in 2 <241341 76> out 1 <241342>      # cond falseterm
add in 2 <241339 241342> out 1 <241343>  # cond result
const-mul-ffffffff in 1 <241343> out 1 <241344> # multiply-by-constant 4294967295
add in 2 <241343 77> out 1 <241345>      # ArithBusReq.AddReq(DFG.Conditional,DFG.Input)
add in 2 <241345 241344> out 1 <241346>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <241343> out 1 <241347> # multiply-by-constant 4294967295
add in 2 <77 241347> out 1 <241348>      # 'CmpLT DFG.Input - DFG.Conditional'
split in 1 <241348> out 197 <241349 241350 241351 241352 241353 241354 241355 241356 241357 241358 241359 241360 241361 241362 241363 241364 241365 241366 241367 241368 241369 241370 241371 241372 241373 241374 241375 241376 241377 241378 241379 241380 241381 241382 241383 241384 241385 241386 241387 241388 241389 241390 241391 241392 241393 241394 241395 241396 241397 241398 241399 241400 241401 241402 241403 241404 241405 241406 241407 241408 241409 241410 241411 241412 241413 241414 241415 241416 241417 241418 241419 241420 241421 241422 241423 241424 241425 241426 241427 241428 241429 241430 241431 241432 241433 241434 241435 241436 241437 241438 241439 241440 241441 241442 241443 241444 241445 241446 241447 241448 241449 241450 241451 241452 241453 241454 241455 241456 241457 241458 241459 241460 241461 241462 241463 241464 241465 241466 241467 241468 241469 241470 241471 241472 241473 241474 241475 241476 241477 241478 241479 241480 241481 241482 241483 241484 241485 241486 241487 241488 241489 241490 241491 241492 241493 241494 241495 241496 241497 241498 241499 241500 241501 241502 241503 241504 241505 241506 241507 241508 241509 241510 241511 241512 241513 241514 241515 241516 241517 241518 241519 241520 241521 241522 241523 241524 241525 241526 241527 241528 241529 241530 241531 241532 241533 241534 241535 241536 241537 241538 241539 241540 241541 241542 241543 241544 241545> # SplitBus
mul in 2 <241380 241346> out 1 <241546>  # cond trueterm
const-mul-neg-1 in 1 <241380> out 1 <241547> # cond minuscond
add in 2 <100 241547> out 1 <241548>     # cond negcond
mul in 2 <241548 241343> out 1 <241549>  # cond falseterm
add in 2 <241546 241549> out 1 <241550>  # cond result
mul in 2 <241239 241203> out 1 <241551>  # cond trueterm
const-mul-neg-1 in 1 <241239> out 1 <241552> # cond minuscond
add in 2 <100 241552> out 1 <241553>     # cond negcond
mul in 2 <241553 241200> out 1 <241554>  # cond falseterm
add in 2 <241551 241554> out 1 <241555>  # cond result
mul in 2 <241162 241126> out 1 <241556>  # cond trueterm
const-mul-neg-1 in 1 <241162> out 1 <241557> # cond minuscond
add in 2 <100 241557> out 1 <241558>     # cond negcond
mul in 2 <241558 74> out 1 <241559>      # cond falseterm
add in 2 <241556 241559> out 1 <241560>  # cond result
const-mul-ffffffff in 1 <241560> out 1 <241561> # multiply-by-constant 4294967295
add in 2 <241560 241555> out 1 <241562>  # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
add in 2 <241562 241561> out 1 <241563>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <241563> out 1 <241564> # multiply-by-constant 4294967295
add in 2 <241562 241564> out 1 <241565>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <241560> out 1 <241566> # multiply-by-constant 4294967295
add in 2 <241555 241566> out 1 <241567>  # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <241567> out 132 <241568 241569 241570 241571 241572 241573 241574 241575 241576 241577 241578 241579 241580 241581 241582 241583 241584 241585 241586 241587 241588 241589 241590 241591 241592 241593 241594 241595 241596 241597 241598 241599 241600 241601 241602 241603 241604 241605 241606 241607 241608 241609 241610 241611 241612 241613 241614 241615 241616 241617 241618 241619 241620 241621 241622 241623 241624 241625 241626 241627 241628 241629 241630 241631 241632 241633 241634 241635 241636 241637 241638 241639 241640 241641 241642 241643 241644 241645 241646 241647 241648 241649 241650 241651 241652 241653 241654 241655 241656 241657 241658 241659 241660 241661 241662 241663 241664 241665 241666 241667 241668 241669 241670 241671 241672 241673 241674 241675 241676 241677 241678 241679 241680 241681 241682 241683 241684 241685 241686 241687 241688 241689 241690 241691 241692 241693 241694 241695 241696 241697 241698 241699> # SplitBus
mul in 2 <241599 241565> out 1 <241700>  # cond trueterm
const-mul-neg-1 in 1 <241599> out 1 <241701> # cond minuscond
add in 2 <100 241701> out 1 <241702>     # cond negcond
mul in 2 <241702 241555> out 1 <241703>  # cond falseterm
add in 2 <241700 241703> out 1 <241704>  # cond result
const-mul-ffffffff in 1 <241704> out 1 <241705> # multiply-by-constant 4294967295
add in 2 <241704 241550> out 1 <241706>  # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
add in 2 <241706 241705> out 1 <241707>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <241707> out 1 <241708> # multiply-by-constant 4294967295
add in 2 <241706 241708> out 1 <241709>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <241704> out 1 <241710> # multiply-by-constant 4294967295
add in 2 <241550 241710> out 1 <241711>  # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <241711> out 199 <241712 241713 241714 241715 241716 241717 241718 241719 241720 241721 241722 241723 241724 241725 241726 241727 241728 241729 241730 241731 241732 241733 241734 241735 241736 241737 241738 241739 241740 241741 241742 241743 241744 241745 241746 241747 241748 241749 241750 241751 241752 241753 241754 241755 241756 241757 241758 241759 241760 241761 241762 241763 241764 241765 241766 241767 241768 241769 241770 241771 241772 241773 241774 241775 241776 241777 241778 241779 241780 241781 241782 241783 241784 241785 241786 241787 241788 241789 241790 241791 241792 241793 241794 241795 241796 241797 241798 241799 241800 241801 241802 241803 241804 241805 241806 241807 241808 241809 241810 241811 241812 241813 241814 241815 241816 241817 241818 241819 241820 241821 241822 241823 241824 241825 241826 241827 241828 241829 241830 241831 241832 241833 241834 241835 241836 241837 241838 241839 241840 241841 241842 241843 241844 241845 241846 241847 241848 241849 241850 241851 241852 241853 241854 241855 241856 241857 241858 241859 241860 241861 241862 241863 241864 241865 241866 241867 241868 241869 241870 241871 241872 241873 241874 241875 241876 241877 241878 241879 241880 241881 241882 241883 241884 241885 241886 241887 241888 241889 241890 241891 241892 241893 241894 241895 241896 241897 241898 241899 241900 241901 241902 241903 241904 241905 241906 241907 241908 241909 241910> # SplitBus
mul in 2 <241743 241709> out 1 <241911>  # cond trueterm
const-mul-neg-1 in 1 <241743> out 1 <241912> # cond minuscond
add in 2 <100 241912> out 1 <241913>     # cond negcond
mul in 2 <241913 241550> out 1 <241914>  # cond falseterm
add in 2 <241911 241914> out 1 <241915>  # cond result
const-mul-ffffffff in 1 <241915> out 1 <241916> # multiply-by-constant 4294967295
const-mul-ffffffff in 1 <241346> out 1 <241917> # multiply-by-constant 4294967295
add in 2 <241345 241917> out 1 <241918>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
mul in 2 <241380 241918> out 1 <241919>  # cond trueterm
const-mul-neg-1 in 1 <241380> out 1 <241920> # cond minuscond
add in 2 <100 241920> out 1 <241921>     # cond negcond
mul in 2 <241921 77> out 1 <241922>      # cond falseterm
add in 2 <241919 241922> out 1 <241923>  # cond result
const-mul-ffffffff in 1 <241923> out 1 <241924> # multiply-by-constant 4294967295
add in 2 <241923 78> out 1 <241925>      # ArithBusReq.AddReq(DFG.Conditional,DFG.Input)
split in 1 <241925> outplitBus
const-mul-2 in 1 <241957> out 1 <242157> # join source bit 31
add in 2 <241956 242157> out 1 <242158>  # join source bit 30
const-mul-2 in 1 <242158> out 1 <242159> # join
add in 2 <241955 242159> out 1 <242160>  # join source bit 29
const-mul-2 in 1 <242160> out 1 <242161> # join
add in 2 <241954 242161> out 1 <242162>  # join source bit 28
const-mul-2 in 1 <242162> out 1 <242163> # join
add in 2 <241953 242163> out 1 <242164>  # join source bit 27
const-mul-2 in 1 <242164> out 1 <242165> # join
add in 2 <241952 242165> out 1 <242166>  # join source bit 26
const-mul-2 in 1 <242166> out 1 <242167> # join
add in 2 <241951 242167> out 1 <242168>  # join source bit 25
const-mul-2 in 1 <242168> out 1 <242169> # join
add in 2 <241950 242169> out 1 <242170>  # join source bit 24
const-mul-2 in 1 <242170> out 1 <242171> # join
add in 2 <241949 242171> out 1 <242172>  # join source bit 23
const-mul-2 in 1 <242172> out 1 <242173> # join
add in 2 <241948 242173> out 1 <242174>  # join source bit 22
const-mul-2 in 1 <242174> out 1 <242175> # join
add in 2 <241947 242175> out 1 <242176>  # join source bit 21
const-mul-2 in 1 <242176> out 1 <242177> # join
add in 2 <241946 242177> out 1 <242178>  # join source bit 20
const-mul-2 in 1 <242178> out 1 <242179> # join
add in 2 <241945 242179> out 1 <242180>  # join source bit 19
const-mul-2 in 1 <242180> out 1 <242181> # join
add in 2 <241944 242181> out 1 <242182>  # join source bit 18
const-mul-2 in 1 <242182> out 1 <242183> # join
add in 2 <241943 242183> out 1 <242184>  # join source bit 17
const-mul-2 in 1 <242184> out 1 <242185> # join
add in 2 <241942 242185> out 1 <242186>  # join source bit 16
const-mul-2 in 1 <242186> out 1 <242187> # join
add in 2 <241941 242187> out 1 <242188>  # join source bit 15
const-mul-2 in 1 <242188> out 1 <242189> # join
add in 2 <241940 242189> out 1 <242190>  # join source bit 14
const-mul-2 in 1 <242190> out 1 <242191> # join
add in 2 <241939 242191> out 1 <242192>  # join source bit 13
const-mul-2 in 1 <242192> out 1 <242193> # join
add in 2 <241938 242193> out 1 <242194>  # join source bit 12
const-mul-2 in 1 <242194> out 1 <242195> # join
add in 2 <241937 242195> out 1 <242196>  # join source bit 11
const-mul-2 in 1 <242196> out 1 <242197> # join
add in 2 <241936 242197> out 1 <242198>  # join source bit 10
const-mul-2 in 1 <242198> out 1 <242199> # join
add in 2 <241935 242199> out 1 <242200>  # join source bit 9
const-mul-2 in 1 <242200> out 1 <242201> # join
add in 2 <241934 242201> out 1 <242202>  # join source bit 8
const-mul-2 in 1 <242202> out 1 <242203> # join
add in 2 <241933 242203> out 1 <242204>  # join source bit 7
const-mul-2 in 1 <242204> out 1 <242205> # join
add in 2 <241932 242205> out 1 <242206>  # join source bit 6
const-mul-2 in 1 <242206> out 1 <242207> # join
add in 2 <241931 242207> out 1 <242208>  # join source bit 5
const-mul-2 in 1 <242208> out 1 <242209> # join
add in 2 <241930 242209> out 1 <242210>  # join source bit 4
const-mul-2 in 1 <242210> out 1 <242211> # join
add in 2 <241929 242211> out 1 <242212>  # join source bit 3
const-mul-2 in 1 <242212> out 1 <242213> # join
add in 2 <241928 242213> out 1 <242214>  # join source bit 2
const-mul-2 in 1 <242214> out 1 <242215> # join
add in 2 <241927 242215> out 1 <242216>  # join source bit 1
const-mul-2 in 1 <242216> out 1 <242217> # join
add in 2 <241926 242217> out 1 <242218>  # join source bit 0
add in 2 <242218 242218> out 1 <242219>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <241923> out 1 <242220> # multiply-by-constant 4294967295
add in 2 <78 242220> out 1 <242221>      # 'CmpLT DFG.Input - DFG.Conditional'
split in 1 <242221> outplitBus
mul in 2 <242253 242219> out 1 <242485>  # cond trueterm
const-mul-neg-1 in 1 <242253> out 1 <242486> # cond minuscond
add in 2 <100 242486> out 1 <242487>     # cond negcond
mul in 2 <242487 241923> out 1 <242488>  # cond falseterm
add in 2 <242485 242488> out 1 <242489>  # cond result
add in 2 <241915 242489> out 1 <242490>  # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
split in 1 <242490> out 233 <242491 242492 242493 242494 242495 242496 242497 242498 242499 242500 242501 242502 242503 242504 242505 242506 242507 242508 242509 242510 242511 242512 242513 242514 242515 242516 242517 242518 242519 242520 242521 242522 242523 242524 242525 242526 242527 242528 242529 242530 242531 242532 242533 242534 242535 242536 242537 242538 242539 242540 242541 242542 242543 242544 242545 242546 242547 242548 242549 242550 242551 242552 242553 242554 242555 242556 242557 242558 242559 242560 242561 242562 242563 242564 242565 242566 242567 242568 242569 242570 242571 242572 242573 242574 242575 242576 242577 242578 242579 242580 242581 242582 242583 242584 242585 242586 242587 242588 242589 242590 242591 242592 242593 242594 242595 242596 242597 242598 242599 242600 242601 242602 242603 242604 242605 242606 242607 242608 242609 242610 242611 242612 242613 242614 242615 242616 242617 242618 242619 242620 242621 242622 242623 242624 242625 242626 242627 242628 242629 242630 242631 242632 242633 242634 242635 242636 242637 242638 242639 242640 242641 242642 242643 242644 242645 242646 242647 242648 242649 242650 242651 242652 242653 242654 242655 242656 242657 242658 242659 242660 242661 242662 242663 242664 242665 242666 242667 242668 242669 242670 242671 242672 242673 242674 242675 242676 242677 242678 242679 242680 242681 242682 242683 242684 242685 242686 242687 242688 242689 242690 242691 242692 242693 242694 242695 242696 242697 242698 242699 242700 242701 242702 242703 242704 242705 242706 242707 242708 242709 242710 242711 242712 242713 242714 242715 242716 242717 242718 242719 242720 242721 242722 242723> # SplitBus
const-mul-2 in 1 <242522> out 1 <242724> # join source bit 31
add in 2 <242521 242724> out 1 <242725>  # join source bit 30
const-mul-2 in 1 <242725> out 1 <242726> # join
add in 2 <242520 242726> out 1 <242727>  # join source bit 29
const-mul-2 in 1 <242727> out 1 <242728> # join
add in 2 <242519 242728> out 1 <242729>  # join source bit 28
const-mul-2 in 1 <242729> out 1 <242730> # join
add in 2 <242518 242730> out 1 <242731>  # join source bit 27
const-mul-2 in 1 <242731> out 1 <242732> # join
add in 2 <242517 242732> out 1 <242733>  # join source bit 26
const-mul-2 in 1 <242733> out 1 <242734> # join
add in 2 <242516 242734> out 1 <242735>  # join source bit 25
const-mul-2 in 1 <242735> out 1 <242736> # join
add in 2 <242515 242736> out 1 <242737>  # join source bit 24
const-mul-2 in 1 <242737> out 1 <242738> # join
add in 2 <242514 242738> out 1 <242739>  # join source bit 23
const-mul-2 in 1 <242739> out 1 <242740> # join
add in 2 <242513 242740> out 1 <242741>  # join source bit 22
const-mul-2 in 1 <242741> out 1 <242742> # join
add in 2 <242512 242742> out 1 <242743>  # join source bit 21
const-mul-2 in 1 <242743> out 1 <242744> # join
add in 2 <242511 242744> out 1 <242745>  # join source bit 20
const-mul-2 in 1 <242745> out 1 <242746> # join
add in 2 <242510 242746> out 1 <242747>  # join source bit 19
const-mul-2 in 1 <242747> out 1 <242748> # join
add in 2 <242509 242748> out 1 <242749>  # join source bit 18
const-mul-2 in 1 <242749> out 1 <242750> # join
add in 2 <242508 242750> out 1 <242751>  # join source bit 17
const-mul-2 in 1 <242751> out 1 <242752> # join
add in 2 <242507 242752> out 1 <242753>  # join source bit 16
const-mul-2 in 1 <242753> out 1 <242754> # join
add in 2 <242506 242754> out 1 <242755>  # join source bit 15
const-mul-2 in 1 <242755> out 1 <242756> # join
add in 2 <242505 242756> out 1 <242757>  # join source bit 14
const-mul-2 in 1 <242757> out 1 <242758> # join
add in 2 <242504 242758> out 1 <242759>  # join source bit 13
const-mul-2 in 1 <242759> out 1 <242760> # join
add in 2 <242503 242760> out 1 <242761>  # join source bit 12
const-mul-2 in 1 <242761> out 1 <242762> # join
add in 2 <242502 242762> out 1 <242763>  # join source bit 11
const-mul-2 in 1 <242763> out 1 <242764> # join
add in 2 <242501 242764> out 1 <242765>  # join source bit 10
const-mul-2 in 1 <242765> out 1 <242766> # join
add in 2 <242500 242766> out 1 <242767>  # join source bit 9
const-mul-2 in 1 <242767> out 1 <242768> # join
add in 2 <242499 242768> out 1 <242769>  # join source bit 8
const-mul-2 in 1 <242769> out 1 <242770> # join
add in 2 <242498 242770> out 1 <242771>  # join source bit 7
const-mul-2 in 1 <242771> out 1 <242772> # join
add in 2 <242497 242772> out 1 <242773>  # join source bit 6
const-mul-2 in 1 <242773> out 1 <242774> # join
add in 2 <242496 242774> out 1 <242775>  # join source bit 5
const-mul-2 in 1 <242775> out 1 <242776> # join
add in 2 <242495 242776> out 1 <242777>  # join source bit 4
const-mul-2 in 1 <242777> out 1 <242778> # join
add in 2 <242494 242778> out 1 <242779>  # join source bit 3
const-mul-2 in 1 <242779> out 1 <242780> # join
add in 2 <242493 242780> out 1 <242781>  # join source bit 2
const-mul-2 in 1 <242781> out 1 <242782> # join
add in 2 <242492 242782> out 1 <242783>  # join source bit 1
const-mul-2 in 1 <242783> out 1 <242784> # join
add in 2 <242491 242784> out 1 <242785>  # join source bit 0
add in 2 <242785 242785> out 1 <242786>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <241915> out 1 <242787> # multiply-by-constant 4294967295
add in 2 <242489 242787> out 1 <242788>  # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <242788> out 265 <242789 242790 242791 242792 242793 242794 242795 242796 242797 242798 242799 242800 242801 242802 242803 242804 242805 242806 242807 242808 242809 242810 242811 242812 242813 242814 242815 242816 242817 242818 242819 242820 242821 242822 242823 242824 242825 242826 242827 242828 242829 242830 242831 242832 242833 242834 242835 242836 242837 242838 242839 242840 242841 242842 242843 242844 242845 242846 242847 242848 242849 242850 242851 242852 242853 242854 242855 242856 242857 242858 242859 242860 242861 242862 242863 242864 242865 242866 242867 242868 242869 242870 242871 242872 242873 242874 242875 242876 242877 242878 242879 242880 242881 242882 242883 242884 242885 242886 242887 242888 242889 242890 242891 242892 242893 242894 242895 242896 242897 242898 242899 242900 242901 242902 242903 242904 242905 242906 242907 242908 242909 242910 242911 242912 242913 242914 242915 242916 242917 242918 242919 242920 242921 242922 242923 242924 242925 242926 242927 242928 242929 242930 242931 242932 242933 242934 242935 242936 242937 242938 242939 242940 242941 242942 242943 242944 242945 242946 242947 242948 242949 242950 242951 242952 242953 242954 242955 242956 242957 242958 242959 242960 242961 242962 242963 242964 242965 242966 242967 242968 242969 242970 242971 242972 242973 242974 242975 242976 242977 242978 242979 242980 242981 242982 242983 242984 242985 242986 242987 242988 242989 242990 242991 242992 242993 242994 242995 242996 242997 242998 242999 243000 243001 243002 243003 243004 243005 243006 243007 243008 243009 243010 243011 243012 243013 243014 243015 243016 243017 243018 243019 243020 243021 243022 243023 243024 243025 243026 243027 243028 243029 243030 243031 243032 243033 243034 243035 243036 243037 243038 243039 243040 243041 243042 243043 243044 243045 243046 243047 243048 243049 243050 243051 243052 243053> # SplitBus
mul in 2 <242820 242786> out 1 <243054>  # cond trueterm
const-mul-neg-1 in 1 <242820> out 1 <243055> # cond minuscond
add in 2 <100 243055> out 1 <243056>     # cond negcond
mul in 2 <243056 241915> out 1 <243057>  # cond falseterm
add in 2 <243054 243057> out 1 <243058>  # cond result
mul in 2 <241743 241707> out 1 <243059>  # cond trueterm
const-mul-neg-1 in 1 <241743> out 1 <243060> # cond minuscond
add in 2 <100 243060> out 1 <243061>     # cond negcond
mul in 2 <243061 241704> out 1 <243062>  # cond falseterm
add in 2 <243059 243062> out 1 <243063>  # cond result
mul in 2 <241599 241563> out 1 <243064>  # cond trueterm
const-mul-neg-1 in 1 <241599> out 1 <243065> # cond minuscond
add in 2 <100 243065> out 1 <243066>     # cond negcond
mul in 2 <243066 241560> out 1 <243067>  # cond falseterm
add in 2 <243064 243067> out 1 <243068>  # cond result
const-mul-ffffffff in 1 <243068> out 1 <243069> # multiply-by-constant 4294967295
add in 2 <243068 243063> out 1 <243070>  # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
add in 2 <243070 243069> out 1 <243071>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <243071> out 1 <243072> # multiply-by-constant 4294967295
add in 2 <243070 243072> out 1 <243073>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <243068> out 1 <243074> # multiply-by-constant 4294967295
add in 2 <243063 243074> out 1 <243075>  # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <243075> out 200 <243076 243077 243078 243079 243080 243081 243082 243083 243084 243085 243086 243087 243088 243089 243090 243091 243092 243093 243094 243095 243096 243097 243098 243099 243100 243101 243102 243103 243104 243105 243106 243107 243108 243109 243110 243111 243112 243113 243114 243115 243116 243117 243118 243119 243120 243121 243122 243123 243124 243125 243126 243127 243128 243129 243130 243131 243132 243133 243134 243135 243136 243137 243138 243139 243140 243141 243142 243143 243144 243145 243146 243147 243148 243149 243150 243151 243152 243153 243154 243155 243156 243157 243158 243159 243160 243161 243162 243163 243164 243165 243166 243167 243168 243169 243170 243171 243172 243173 243174 243175 243176 243177 243178 243179 243180 243181 243182 243183 243184 243185 243186 243187 243188 243189 243190 243191 243192 243193 243194 243195 243196 243197 243198 243199 243200 243201 243202 243203 243204 243205 243206 243207 243208 243209 243210 243211 243212 243213 243214 243215 243216 243217 243218 243219 243220 243221 243222 243223 243224 243225 243226 243227 243228 243229 243230 243231 243232 243233 243234 243235 243236 243237 243238 243239 243240 243241 243242 243243 243244 243245 243246 243247 243248 243249 243250 243251 243252 243253 243254 243255 243256 243257 243258 243259 243260 243261 243262 243263 243264 243265 243266 243267 243268 243269 243270 243271 243272 243273 243274 243275> # SplitBus
mul in 2 <243107 243073> out 1 <243276>  # cond trueterm
const-mul-neg-1 in 1 <243107> out 1 <243277> # cond minuscond
add in 2 <100 243277> out 1 <243278>     # cond negcond
mul in 2 <243278 243063> out 1 <243279>  # cond falseterm
add in 2 <243276 243279> out 1 <243280>  # cond result
const-mul-ffffffff in 1 <243280> out 1 <243281> # multiply-by-constant 4294967295
add in 2 <243280 243058> out 1 <243282>  # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
split in 1 <243282> out 235 <243283 243284 243285 243286 243287 243288 243289 243290 243291 243292 243293 243294 243295 243296 243297 243298 243299 243300 243301 243302 243303 243304 243305 243306 243307 243308 243309 243310 243311 243312 243313 243314 243315 243316 243317 243318 243319 243320 243321 243322 243323 243324 243325 243326 243327 243328 243329 243330 243331 243332 243333 243334 243335 243336 243337 243338 243339 243340 243341 243342 243343 243344 243345 243346 243347 243348 243349 243350 243351 243352 243353 243354 243355 243356 243357 243358 243359 243360 243361 243362 243363 243364 243365 243366 243367 243368 243369 243370 243371 243372 243373 243374 243375 243376 243377 243378 243379 243380 243381 243382 243383 243384 243385 243386 243387 243388 243389 243390 243391 243392 243393 243394 243395 243396 243397 243398 243399 243400 243401 243402 243403 243404 243405 243406 243407 243408 243409 243410 243411 243412 243413 243414 243415 243416 243417 243418 243419 243420 243421 243422 243423 243424 243425 243426 243427 243428 243429 243430 243431 243432 243433 243434 243435 243436 243437 243438 243439 243440 243441 243442 243443 243444 243445 243446 243447 243448 243449 243450 243451 243452 243453 243454 243455 243456 243457 243458 243459 243460 243461 243462 243463 243464 243465 243466 243467 243468 243469 243470 243471 243472 243473 243474 243475 243476 243477 243478 243479 243480 243481 243482 243483 243484 243485 243486 243487 243488 243489 243490 243491 243492 243493 243494 243495 243496 243497 243498 243499 243500 243501 243502 243503 243504 243505 243506 243507 243508 243509 243510 243511 243512 243513 243514 243515 243516 243517> # SplitBus
const-mul-2 in 1 <243314> out 1 <243518> # join source bit 31
add in 2 <243313 243518> out 1 <243519>  # join source bit 30
const-mul-2 in 1 <243519> out 1 <243520> # join
add in 2 <243312 243520> out 1 <243521>  # join source bit 29
const-mul-2 in 1 <243521> out 1 <243522> # join
add in 2 <243311 243522> out 1 <243523>  # join source bit 28
const-mul-2 in 1 <243523> out 1 <243524> # join
add in 2 <243310 243524> out 1 <243525>  # join source bit 27
const-mul-2 in 1 <243525> out 1 <243526> # join
add in 2 <243309 243526> out 1 <243527>  # join source bit 26
const-mul-2 in 1 <243527> out 1 <243528> # join
add in 2 <243308 243528> out 1 <243529>  # join source bit 25
const-mul-2 in 1 <243529> out 1 <243530> # join
add in 2 <243307 243530> out 1 <243531>  # join source bit 24
const-mul-2 in 1 <243531> out 1 <243532> # join
add in 2 <243306 243532> out 1 <243533>  # join source bit 23
const-mul-2 in 1 <243533> out 1 <243534> # join
add in 2 <243305 243534> out 1 <243535>  # join source bit 22
const-mul-2 in 1 <243535> out 1 <243536> # join
add in 2 <243304 243536> out 1 <243537>  # join source bit 21
const-mul-2 in 1 <243537> out 1 <243538> # join
add in 2 <243303 243538> out 1 <243539>  # join source bit 20
const-mul-2 in 1 <243539> out 1 <243540> # join
add in 2 <243302 243540> out 1 <243541>  # join source bit 19
const-mul-2 in 1 <243541> out 1 <243542> # join
add in 2 <243301 243542> out 1 <243543>  # join source bit 18
const-mul-2 in 1 <243543> out 1 <243544> # join
add in 2 <243300 243544> out 1 <243545>  # join source bit 17
const-mul-2 in 1 <243545> out 1 <243546> # join
add in 2 <243299 243546> out 1 <243547>  # join source bit 16
const-mul-2 in 1 <243547> out 1 <243548> # join
add in 2 <243298 243548> out 1 <243549>  # join source bit 15
const-mul-2 in 1 <243549> out 1 <243550> # join
add in 2 <243297 243550> out 1 <243551>  # join source bit 14
const-mul-2 in 1 <243551> out 1 <243552> # join
add in 2 <243296 243552> out 1 <243553>  # join source bit 13
const-mul-2 in 1 <243553> out 1 <243554> # join
add in 2 <243295 243554> out 1 <243555>  # join source bit 12
const-mul-2 in 1 <243555> out 1 <243556> # join
add in 2 <243294 243556> out 1 <243557>  # join source bit 11
const-mul-2 in 1 <243557> out 1 <243558> # join
add in 2 <243293 243558> out 1 <243559>  # join source bit 10
const-mul-2 in 1 <243559> out 1 <243560> # join
add in 2 <243292 243560> out 1 <243561>  # join source bit 9
const-mul-2 in 1 <243561> out 1 <243562> # join
add in 2 <243291 243562> out 1 <243563>  # join source bit 8
const-mul-2 in 1 <243563> out 1 <243564> # join
add in 2 <243290 243564> out 1 <243565>  # join source bit 7
const-mul-2 in 1 <243565> out 1 <243566> # join
add in 2 <243289 243566> out 1 <243567>  # join source bit 6
const-mul-2 in 1 <243567> out 1 <243568> # join
add in 2 <243288 243568> out 1 <243569>  # join source bit 5
const-mul-2 in 1 <243569> out 1 <243570> # join
add in 2 <243287 243570> out 1 <243571>  # join source bit 4
const-mul-2 in 1 <243571> out 1 <243572> # join
add in 2 <243286 243572> out 1 <243573>  # join source bit 3
const-mul-2 in 1 <243573> out 1 <243574> # join
add in 2 <243285 243574> out 1 <243575>  # join source bit 2
const-mul-2 in 1 <243575> out 1 <243576> # join
add in 2 <243284 243576> out 1 <243577>  # join source bit 1
const-mul-2 in 1 <243577> out 1 <243578> # join
add in 2 <243283 243578> out 1 <243579>  # join source bit 0
add in 2 <243579 243579> out 1 <243580>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <243580> out 1 <243581> # multiply-by-constant 4294967295
add in 2 <243282 243581> out 1 <243582>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <243280> out 1 <243583> # multiply-by-constant 4294967295
add in 2 <243058 243583> out 1 <243584>  # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <243584> out 267 <243585 243586 243587 243588 243589 243590 243591 243592 243593 243594 243595 243596 243597 243598 243599 243600 243601 243602 243603 243604 243605 243606 243607 243608 243609 243610 243611 243612 243613 243614 243615 243616 243617 243618 243619 243620 243621 243622 243623 243624 243625 243626 243627 243628 243629 243630 243631 243632 243633 243634 243635 243636 243637 243638 243639 243640 243641 243642 243643 243644 243645 243646 243647 243648 243649 243650 243651 243652 243653 243654 243655 243656 243657 243658 243659 243660 243661 243662 243663 243664 243665 243666 243667 243668 243669 243670 243671 243672 243673 243674 243675 243676 243677 243678 243679 243680 243681 243682 243683 243684 243685 243686 243687 243688 243689 243690 243691 243692 243693 243694 243695 243696 243697 243698 243699 243700 243701 243702 243703 243704 243705 243706 243707 243708 243709 243710 243711 243712 243713 243714 243715 243716 243717 243718 243719 243720 243721 243722 243723 243724 243725 243726 243727 243728 243729 243730 243731 243732 243733 243734 243735 243736 243737 243738 243739 243740 243741 243742 243743 243744 243745 243746 243747 243748 243749 243750 243751 243752 243753 243754 243755 243756 243757 243758 243759 243760 243761 243762 243763 243764 243765 243766 243767 243768 243769 243770 243771 243772 243773 243774 243775 243776 243777 243778 243779 243780 243781 243782 243783 243784 243785 243786 243787 243788 243789 243790 243791 243792 243793 243794 243795 243796 243797 243798 243799 243800 243801 243802 243803 243804 243805 243806 243807 243808 243809 243810 243811 243812 243813 243814 243815 243816 243817 243818 243819 243820 243821 243822 243823 243824 243825 243826 243827 243828 243829 243830 243831 243832 243833 243834 243835 243836 243837 243838 243839 243840 243841 243842 243843 243844 243845 243846 243847 243848 243849 243850 243851> # SplitBus
mul in 2 <243616 243582> out 1 <243852>  # cond trueterm
const-mul-neg-1 in 1 <243616> out 1 <243853> # cond minuscond
add in 2 <100 243853> out 1 <243854>     # cond negcond
mul in 2 <243854 243058> out 1 <243855>  # cond falseterm
add in 2 <243852 243855> out 1 <243856>  # cond result
add in 2 <243856 104> out 1 <243857>     # ArithBusReq.AddReq(DFG.Conditional,DFG.Constant)
const-mul-ffffffff in 1 <76> out 1 <243858> # multiply-by-constant 4294967295
add in 2 <243857 243858> out 1 <243859>  # 'CmpLT DFG.Add - DFG.Input'
split in 1 <243859> out 238 <243860 243861 243862 243863 243864 243865 243866 243867 243868 243869 243870 243871 243872 243873 243874 243875 243876 243877 243878 243879 243880 243881 243882 243883 243884 243885 243886 243887 243888 243889 243890 243891 243892 243893 243894 243895 243896 243897 243898 243899 243900 243901 243902 243903 243904 243905 243906 243907 243908 243909 243910 243911 243912 243913 243914 243915 243916 243917 243918 243919 243920 243921 243922 243923 243924 243925 243926 243927 243928 243929 243930 243931 243932 243933 243934 243935 243936 243937 243938 243939 243940 243941 243942 243943 243944 243945 243946 243947 243948 243949 243950 243951 243952 243953 243954 243955 243956 243957 243958 243959 243960 243961 243962 243963 243964 243965 243966 243967 243968 243969 243970 243971 243972 243973 243974 243975 243976 243977 243978 243979 243980 243981 243982 243983 243984 243985 243986 243987 243988 243989 243990 243991 243992 243993 243994 243995 243996 243997 243998 243999 244000 244001 244002 244003 244004 244005 244006 244007 244008 244009 244010 244011 244012 244013 244014 244015 244016 244017 244018 244019 244020 244021 244022 244023 244024 244025 244026 244027 244028 244029 244030 244031 244032 244033 244034 244035 244036 244037 244038 244039 244040 244041 244042 244043 244044 244045 244046 244047 244048 244049 244050 244051 244052 244053 244054 244055 244056 244057 244058 244059 244060 244061 244062 244063 244064 244065 244066 244067 244068 244069 244070 244071 244072 244073 244074 244075 244076 244077 244078 244079 244080 244081 244082 244083 244084 244085 244086 244087 244088 244089 244090 244091 244092 244093 244094 244095 244096 244097> # SplitBus
mul in 2 <243891 103> out 1 <244098>     # cond trueterm
const-mul-neg-1 in 1 <243891> out 1 <244099> # cond minuscond
add in 2 <100 244099> out 1 <244100>     # cond negcond
mul in 2 <244100 102> out 1 <244101>     # cond falseterm
add in 2 <244098 244101> out 1 <244102>  # cond result
add in 2 <243856 3084> out 1 <244103>    # ArithBusReq.AddReq(DFG.Conditional,DFG.Negate)
const-mul-ffffffff in 1 <244103> out 1 <244104> # multiply-by-constant 4294967295
add in 2 <76 244104> out 1 <244105>      # 'CmpLT DFG.Input - DFG.Subtract'
split in 1 <244105> outplitBus
mul in 2 <244137 103> out 1 <244376>     # cond trueterm
const-mul-neg-1 in 1 <244137> out 1 <244377> # cond minuscond
add in 2 <100 244377> out 1 <244378>     # cond negcond
mul in 2 <244378 244102> out 1 <244379>  # cond falseterm
add in 2 <244376 244379> out 1 <244380>  # cond result
const-mul-ffffffff in 1 <75> out 1 <244381> # multiply-by-constant 4294967295
add in 2 <75 76> out 1 <244382>          # ArithBusReq.AddReq(DFG.Input,DFG.Input)
add in 2 <244382 244381> out 1 <244383>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <244383> out 1 <244384> # multiply-by-constant 4294967295
add in 2 <244382 244384> out 1 <244385>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <75> out 1 <244386> # multiply-by-constant 4294967295
add in 2 <76 244386> out 1 <244387>      # 'CmpLT DFG.Input - DFG.Input'
split in 1 <244387> out 65 <244388 244389 244390 244391 244392 244393 244394 244395 244396 244397 244398 244399 244400 244401 244402 244403 244404 244405 244406 244407 244408 244409 244410 244411 244412 244413 244414 244415 244416 244417 244418 244419 244420 244421 244422 244423 244424 244425 244426 244427 244428 244429 244430 244431 244432 244433 244434 244435 244436 244437 244438 244439 244440 244441 244442 244443 244444 244445 244446 244447 244448 244449 244450 244451 244452> # SplitBus
mul in 2 <244419 244385> out 1 <244453>  # cond trueterm
const-mul-neg-1 in 1 <244419> out 1 <244454> # cond minuscond
add in 2 <100 244454> out 1 <244455>     # cond negcond
mul in 2 <244455 76> out 1 <244456>      # cond falseterm
add in 2 <244453 244456> out 1 <244457>  # cond result
const-mul-ffffffff in 1 <244457> out 1 <244458> # multiply-by-constant 4294967295
add in 2 <244457 77> out 1 <244459>      # ArithBusReq.AddReq(DFG.Conditional,DFG.Input)
add in 2 <244459 244458> out 1 <244460>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <244460> out 1 <244461> # multiply-by-constant 4294967295
add in 2 <244459 244461> out 1 <244462>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <244457> out 1 <244463> # multiply-by-constant 4294967295
add in 2 <77 244463> out 1 <244464>      # 'CmpLT DFG.Input - DFG.Conditional'
split in 1 <244464> out 131 <244465 244466 244467 244468 244469 244470 244471 244472 244473 244474 244475 244476 244477 244478 244479 244480 244481 244482 244483 244484 244485 244486 244487 244488 244489 244490 244491 244492 244493 244494 244495 244496 244497 244498 244499 244500 244501 244502 244503 244504 244505 244506 244507 244508 244509 244510 244511 244512 244513 244514 244515 244516 244517 244518 244519 244520 244521 244522 244523 244524 244525 244526 244527 244528 244529 244530 244531 244532 244533 244534 244535 244536 244537 244538 244539 244540 244541 244542 244543 244544 244545 244546 244547 244548 244549 244550 244551 244552 244553 244554 244555 244556 244557 244558 244559 244560 244561 244562 244563 244564 244565 244566 244567 244568 244569 244570 244571 244572 244573 244574 244575 244576 244577 244578 244579 244580 244581 244582 244583 244584 244585 244586 244587 244588 244589 244590 244591 244592 244593 244594 244595> # SplitBus
mul in 2 <244496 244462> out 1 <244596>  # cond trueterm
const-mul-neg-1 in 1 <244496> out 1 <244597> # cond minuscond
add in 2 <100 244597> out 1 <244598>     # cond negcond
mul in 2 <244598 77> out 1 <244599>      # cond falseterm
add in 2 <244596 244599> out 1 <244600>  # cond result
const-mul-ffffffff in 1 <244600> out 1 <244601> # multiply-by-constant 4294967295
add in 2 <244600 78> out 1 <244602>      # ArithBusReq.AddReq(DFG.Conditional,DFG.Input)
add in 2 <244602 244601> out 1 <244603>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <244600> out 1 <244604> # multiply-by-constant 4294967295
add in 2 <78 244604> out 1 <244605>      # 'CmpLT DFG.Input - DFG.Conditional'
split in 1 <244605> out 197 <244606 244607 244608 244609 244610 244611 244612 244613 244614 244615 244616 244617 244618 244619 244620 244621 244622 244623 244624 244625 244626 244627 244628 244629 244630 244631 244632 244633 244634 244635 244636 244637 244638 244639 244640 244641 244642 244643 244644 244645 244646 244647 244648 244649 244650 244651 244652 244653 244654 244655 244656 244657 244658 244659 244660 244661 244662 244663 244664 244665 244666 244667 244668 244669 244670 244671 244672 244673 244674 244675 244676 244677 244678 244679 244680 244681 244682 244683 244684 244685 244686 244687 244688 244689 244690 244691 244692 244693 244694 244695 244696 244697 244698 244699 244700 244701 244702 244703 244704 244705 244706 244707 244708 244709 244710 244711 244712 244713 244714 244715 244716 244717 244718 244719 244720 244721 244722 244723 244724 244725 244726 244727 244728 244729 244730 244731 244732 244733 244734 244735 244736 244737 244738 244739 244740 244741 244742 244743 244744 244745 244746 244747 244748 244749 244750 244751 244752 244753 244754 244755 244756 244757 244758 244759 244760 244761 244762 244763 244764 244765 244766 244767 244768 244769 244770 244771 244772 244773 244774 244775 244776 244777 244778 244779 244780 244781 244782 244783 244784 244785 244786 244787 244788 244789 244790 244791 244792 244793 244794 244795 244796 244797 244798 244799 244800 244801 244802> # SplitBus
mul in 2 <244637 244603> out 1 <244803>  # cond trueterm
const-mul-neg-1 in 1 <244637> out 1 <244804> # cond minuscond
add in 2 <100 244804> out 1 <244805>     # cond negcond
mul in 2 <244805 244600> out 1 <244806>  # cond falseterm
add in 2 <244803 244806> out 1 <244807>  # cond result
mul in 2 <244496 244460> out 1 <244808>  # cond trueterm
const-mul-neg-1 in 1 <244496> out 1 <244809> # cond minuscond
add in 2 <100 244809> out 1 <244810>     # cond negcond
mul in 2 <244810 244457> out 1 <244811>  # cond falseterm
add in 2 <244808 244811> out 1 <244812>  # cond result
mul in 2 <244419 244383> out 1 <244813>  # cond trueterm
const-mul-neg-1 in 1 <244419> out 1 <244814> # cond minuscond
add in 2 <100 244814> out 1 <244815>     # cond negcond
mul in 2 <244815 75> out 1 <244816>      # cond falseterm
add in 2 <244813 244816> out 1 <244817>  # cond result
const-mul-ffffffff in 1 <244817> out 1 <244818> # multiply-by-constant 4294967295
add in 2 <244817 244812> out 1 <244819>  # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
add in 2 <244819 244818> out 1 <244820>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <244820> out 1 <244821> # multiply-by-constant 4294967295
add in 2 <244819 244821> out 1 <244822>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <244817> out 1 <244823> # multiply-by-constant 4294967295
add in 2 <244812 244823> out 1 <244824>  # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <244824> out 132 <244825 244826 244827 244828 244829 244830 244831 244832 244833 244834 244835 244836 244837 244838 244839 244840 244841 244842 244843 244844 244845 244846 244847 244848 244849 244850 244851 244852 244853 244854 244855 244856 244857 244858 244859 244860 244861 244862 244863 244864 244865 244866 244867 244868 244869 244870 244871 244872 244873 244874 244875 244876 244877 244878 244879 244880 244881 244882 244883 244884 244885 244886 244887 244888 244889 244890 244891 244892 244893 244894 244895 244896 244897 244898 244899 244900 244901 244902 244903 244904 244905 244906 244907 244908 244909 244910 244911 244912 244913 244914 244915 244916 244917 244918 244919 244920 244921 244922 244923 244924 244925 244926 244927 244928 244929 244930 244931 244932 244933 244934 244935 244936 244937 244938 244939 244940 244941 244942 244943 244944 244945 244946 244947 244948 244949 244950 244951 244952 244953 244954 244955 244956> # SplitBus
mul in 2 <244856 244822> out 1 <244957>  # cond trueterm
const-mul-neg-1 in 1 <244856> out 1 <244958> # cond minuscond
add in 2 <100 244958> out 1 <244959>     # cond negcond
mul in 2 <244959 244812> out 1 <244960>  # cond falseterm
add in 2 <244957 244960> out 1 <244961>  # cond result
const-mul-ffffffff in 1 <244961> out 1 <244962> # multiply-by-constant 4294967295
add in 2 <244961 244807> out 1 <244963>  # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
add in 2 <244963 244962> out 1 <244964>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <244964> out 1 <244965> # multiply-by-constant 4294967295
add in 2 <244963 244965> out 1 <244966>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <244961> out 1 <244967> # multiply-by-constant 4294967295
add in 2 <244807 244967> out 1 <244968>  # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <244968> out 199 <244969 244970 244971 244972 244973 244974 244975 244976 244977 244978 244979 244980 244981 244982 244983 244984 244985 244986 244987 244988 244989 244990 244991 244992 244993 244994 244995 244996 244997 244998 244999 245000 245001 245002 245003 245004 245005 245006 245007 245008 245009 245010 245011 245012 245013 245014 245015 245016 245017 245018 245019 245020 245021 245022 245023 245024 245025 245026 245027 245028 245029 245030 245031 245032 245033 245034 245035 245036 245037 245038 245039 245040 245041 245042 245043 245044 245045 245046 245047 245048 245049 245050 245051 245052 245053 245054 245055 245056 245057 245058 245059 245060 245061 245062 245063 245064 245065 245066 245067 245068 245069 245070 245071 245072 245073 245074 245075 245076 245077 245078 245079 245080 245081 245082 245083 245084 245085 245086 245087 245088 245089 245090 245091 245092 245093 245094 245095 245096 245097 245098 245099 245100 245101 245102 245103 245104 245105 245106 245107 245108 245109 245110 245111 245112 245113 245114 245115 245116 245117 245118 245119 245120 245121 245122 245123 245124 245125 245126 245127 245128 245129 245130 245131 245132 245133 245134 245135 245136 245137 245138 245139 245140 245141 245142 245143 245144 245145 245146 245147 245148 245149 245150 245151 245152 245153 245154 245155 245156 245157 245158 245159 245160 245161 245162 245163 245164 245165 245166 245167> # SplitBus
mul in 2 <245000 244966> out 1 <245168>  # cond trueterm
const-mul-neg-1 in 1 <245000> out 1 <245169> # cond minuscond
add in 2 <100 245169> out 1 <245170>     # cond negcond
mul in 2 <245170 244807> out 1 <245171>  # cond falseterm
add in 2 <245168 245171> out 1 <245172>  # cond result
const-mul-ffffffff in 1 <245172> out 1 <245173> # multiply-by-constant 4294967295
const-mul-ffffffff in 1 <244603> out 1 <245174> # multiply-by-constant 4294967295
add in 2 <244602 245174> out 1 <245175>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
mul in 2 <244637 245175> out 1 <245176>  # cond trueterm
const-mul-neg-1 in 1 <244637> out 1 <245177> # cond minuscond
add in 2 <100 245177> out 1 <245178>     # cond negcond
mul in 2 <245178 78> out 1 <245179>      # cond falseterm
add in 2 <245176 245179> out 1 <245180>  # cond result
const-mul-ffffffff in 1 <245180> out 1 <245181> # multiply-by-constant 4294967295
add in 2 <245180 79> out 1 <245182>      # ArithBusReq.AddReq(DFG.Conditional,DFG.Input)
split in 1 <245182> out 231 <245183 245184 245185 245186 245187 245188 245189 245190 245191 245192 245193 245194 245195 245196 245197 245198 245199 245200 245201 245202 245203 245204 245205 245206 245207 245208 245209 245210 245211 245212 245213 245214 245215 245216 245217 245218 245219 245220 245221 245222 245223 245224 245225 245226 245227 245228 245229 245230 245231 245232 245233 245234 245235 245236 245237 245238 245239 245240 245241 245242 245243 245244 245245 245246 245247 245248 245249 245250 245251 245252 245253 245254 245255 245256 245257 245258 245259 245260 245261 245262 245263 245264 245265 245266 245267 245268 245269 245270 245271 245272 245273 245274 245275 245276 245277 245278 245279 245280 245281 245282 245283 245284 245285 245286 245287 245288 245289 245290 245291 245292 245293 245294 245295 245296 245297 245298 245299 245300 245301 245302 245303 245304 245305 245306 245307 245308 245309 245310 245311 245312 245313 245314 245315 245316 245317 245318 245319 245320 245321 245322 245323 245324 245325 245326 245327 245328 245329 245330 245331 245332 245333 245334 245335 245336 245337 245338 245339 245340 245341 245342 245343 245344 245345 245346 245347 245348 245349 245350 245351 245352 245353 245354 245355 245356 245357 245358 245359 245360 245361 245362 245363 245364 245365 245366 245367 245368 245369 245370 245371 245372 245373 245374 245375 245376 245377 245378 245379 245380 245381 245382 245383 245384 245385 245386 245387 245388 245389 245390 245391 245392 245393 245394 245395 245396 245397 245398 245399 245400 245401 245402 245403 245404 245405 245406 245407 245408 245409 245410 245411 245412 245413> # SplitBus
const-mul-2 in 1 <245214> out 1 <245414> # join source bit 31
add in 2 <245213 245414> out 1 <245415>  # join source bit 30
const-mul-2 in 1 <245415> out 1 <245416> # join
add in 2 <245212 245416> out 1 <245417>  # join source bit 29
const-mul-2 in 1 <245417> out 1 <245418> # join
add in 2 <245211 245418> out 1 <245419>  # join source bit 28
const-mul-2 in 1 <245419> out 1 <245420> # join
add in 2 <245210 245420> out 1 <245421>  # join source bit 27
const-mul-2 in 1 <245421> out 1 <245422> # join
add in 2 <245209 245422> out 1 <245423>  # join source bit 26
const-mul-2 in 1 <245423> out 1 <245424> # join
add in 2 <245208 245424> out 1 <245425>  # join source bit 25
const-mul-2 in 1 <245425> out 1 <245426> # join
add in 2 <245207 245426> out 1 <245427>  # join source bit 24
const-mul-2 in 1 <245427> out 1 <245428> # join
add in 2 <245206 245428> out 1 <245429>  # join source bit 23
const-mul-2 in 1 <245429> out 1 <245430> # join
add in 2 <245205 245430> out 1 <245431>  # join source bit 22
const-mul-2 in 1 <245431> out 1 <245432> # join
add in 2 <245204 245432> out 1 <245433>  # join source bit 21
const-mul-2 in 1 <245433> out 1 <245434> # join
add in 2 <245203 245434> out 1 <245435>  # join source bit 20
const-mul-2 in 1 <245435> out 1 <245436> # join
add in 2 <245202 245436> out 1 <245437>  # join source bit 19
const-mul-2 in 1 <245437> out 1 <245438> # join
add in 2 <245201 245438> out 1 <245439>  # join source bit 18
const-mul-2 in 1 <245439> out 1 <245440> # join
add in 2 <245200 245440> out 1 <245441>  # join source bit 17
const-mul-2 in 1 <245441> out 1 <245442> # join
add in 2 <245199 245442> out 1 <245443>  # join source bit 16
const-mul-2 in 1 <245443> out 1 <245444> # join
add in 2 <245198 245444> out 1 <245445>  # join source bit 15
const-mul-2 in 1 <245445> out 1 <245446> # join
add in 2 <245197 245446> out 1 <245447>  # join source bit 14
const-mul-2 in 1 <245447> out 1 <245448> # join
add in 2 <245196 245448> out 1 <245449>  # join source bit 13
const-mul-2 in 1 <245449> out 1 <245450> # join
add in 2 <245195 245450> out 1 <245451>  # join source bit 12
const-mul-2 in 1 <245451> out 1 <245452> # join
add in 2 <245194 245452> out 1 <245453>  # join source bit 11
const-mul-2 in 1 <245453> out 1 <245454> # join
add in 2 <245193 245454> out 1 <245455>  # join source bit 10
const-mul-2 in 1 <245455> out 1 <245456> # join
add in 2 <245192 245456> out 1 <245457>  # join source bit 9
const-mul-2 in 1 <245457> out 1 <245458> # join
add in 2 <245191 245458> out 1 <245459>  # join source bit 8
const-mul-2 in 1 <245459> out 1 <245460> # join
add in 2 <245190 245460> out 1 <245461>  # join source bit 7
const-mul-2 in 1 <245461> out 1 <245462> # join
add in 2 <245189 245462> out 1 <245463>  # join source bit 6
const-mul-2 in 1 <245463> out 1 <245464> # join
add in 2 <245188 245464> out 1 <245465>  # join source bit 5
const-mul-2 in 1 <245465> out 1 <245466> # join
add in 2 <245187 245466> out 1 <245467>  # join source bit 4
const-mul-2 in 1 <245467> out 1 <245468> # join
add in 2 <245186 245468> out 1 <245469>  # join source bit 3
const-mul-2 in 1 <245469> out 1 <245470> # join
add in 2 <245185 245470> out 1 <245471>  # join source bit 2
const-mul-2 in 1 <245471> out 1 <245472> # join
add in 2 <245184 245472> out 1 <245473>  # join source bit 1
const-mul-2 in 1 <245473> out 1 <245474> # join
add in 2 <245183 245474> out 1 <245475>  # join source bit 0
add in 2 <245475 245475> out 1 <245476>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <245180> out 1 <245477> # multiply-by-constant 4294967295
add in 2 <79 245477> out 1 <245478>      # 'CmpLT DFG.Input - DFG.Conditional'
split in 1 <245478> out 263 <245479 245480 245481 245482 245483 245484 245485 245486 245487 245488 245489 245490 245491 245492 245493 245494 245495 245496 245497 245498 245499 245500 245501 245502 245503 245504 245505 245506 245507 245508 245509 245510 245511 245512 245513 245514 245515 245516 245517 245518 245519 245520 245521 245522 245523 245524 245525 245526 245527 245528 245529 245530 245531 245532 245533 245534 245535 245536 245537 245538 245539 245540 245541 245542 245543 245544 245545 245546 245547 245548 245549 245550 245551 245552 245553 245554 245555 245556 245557 245558 245559 245560 245561 245562 245563 245564 245565 245566 245567 245568 245569 245570 245571 245572 245573 245574 245575 245576 245577 245578 245579 245580 245581 245582 245583 245584 245585 245586 245587 245588 245589 245590 245591 245592 245593 245594 245595 245596 245597 245598 245599 245600 245601 245602 245603 245604 245605 245606 245607 245608 245609 245610 245611 245612 245613 245614 245615 245616 245617 245618 245619 245620 245621 245622 245623 245624 245625 245626 245627 245628 245629 245630 245631 245632 245633 245634 245635 245636 245637 245638 245639 245640 245641 245642 245643 245644 245645 245646 245647 245648 245649 245650 245651 245652 245653 245654 245655 245656 245657 245658 245659 245660 245661 245662 245663 245664 245665 245666 245667 245668 245669 245670 245671 245672 245673 245674 245675 245676 245677 245678 245679 245680 245681 245682 245683 245684 245685 245686 245687 245688 245689 245690 245691 245692 245693 245694 245695 245696 245697 245698 245699 245700 245701 245702 245703 245704 245705 245706 245707 245708 245709 245710 245711 245712 245713 245714 245715 245716 245717 245718 245719 245720 245721 245722 245723 245724 245725 245726 245727 245728 245729 245730 245731 245732 245733 245734 245735 245736 245737 245738 245739 245740 245741> # SplitBus
mul in 2 <245510 245476> out 1 <245742>  # cond trueterm
const-mul-neg-1 in 1 <245510> out 1 <245743> # cond minuscond
add in 2 <100 245743> out 1 <245744>     # cond negcond
mul in 2 <245744 245180> out 1 <245745>  # cond falseterm
add in 2 <245742 245745> out 1 <245746>  # cond result
add in 2 <245172 245746> out 1 <245747>  # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
split in 1 <245747> out 233 <245748 245749 245750 245751 245752 245753 245754 245755 245756 245757 245758 245759 245760 245761 245762 245763 245764 245765 245766 245767 245768 245769 245770 245771 245772 245773 245774 245775 245776 245777 245778 245779 245780 245781 245782 245783 245784 245785 245786 245787 245788 245789 245790 245791 245792 245793 245794 245795 245796 245797 245798 245799 245800 245801 245802 245803 245804 245805 245806 245807 245808 245809 245810 245811 245812 245813 245814 245815 245816 245817 245818 245819 245820 245821 245822 245823 245824 245825 245826 245827 245828 245829 245830 245831 245832 245833 245834 245835 245836 245837 245838 245839 245840 245841 245842 245843 245844 245845 245846 245847 245848 245849 245850 245851 245852 245853 245854 245855 245856 245857 245858 245859 245860 245861 245862 245863 245864 245865 245866 245867 245868 245869 245870 245871 245872 245873 245874 245875 245876 245877 245878 245879 245880 245881 245882 245883 245884 245885 245886 245887 245888 245889 245890 245891 245892 245893 245894 245895 245896 245897 245898 245899 245900 245901 245902 245903 245904 245905 245906 245907 245908 245909 245910 245911 245912 245913 245914 245915 245916 245917 245918 245919 245920 245921 245922 245923 245924 245925 245926 245927 245928 245929 245930 245931 245932 245933 245934 245935 245936 245937 245938 245939 245940 245941 245942 245943 245944 245945 245946 245947 245948 245949 245950 245951 245952 245953 245954 245955 245956 245957 245958 245959 245960 245961 245962 245963 245964 245965 245966 245967 245968 245969 245970 245971 245972 245973 245974 245975 245976 245977 245978 245979 245980> # SplitBus
const-mul-2 in 1 <245779> out 1 <245981> # join source bit 31
add in 2 <245778 245981> out 1 <245982>  # join source bit 30
const-mul-2 in 1 <245982> out 1 <245983> # join
add in 2 <245777 245983> out 1 <245984>  # join source bit 29
const-mul-2 in 1 <245984> out 1 <245985> # join
add in 2 <245776 245985> out 1 <245986>  # join source bit 28
const-mul-2 in 1 <245986> out 1 <245987> # join
add in 2 <245775 245987> out 1 <245988>  # join source bit 27
const-mul-2 in 1 <245988> out 1 <245989> # join
add in 2 <245774 245989> out 1 <245990>  # join source bit 26
const-mul-2 in 1 <245990> out 1 <245991> # join
add in 2 <245773 245991> out 1 <245992>  # join source bit 25
const-mul-2 in 1 <245992> out 1 <245993> # join
add in 2 <245772 245993> out 1 <245994>  # join source bit 24
const-mul-2 in 1 <245994> out 1 <245995> # join
add in 2 <245771 245995> out 1 <245996>  # join source bit 23
const-mul-2 in 1 <245996> out 1 <245997> # join
add in 2 <245770 245997> out 1 <245998>  # join source bit 22
const-mul-2 in 1 <245998> out 1 <245999> # join
add in 2 <245769 245999> out 1 <246000>  # join source bit 21
const-mul-2 in 1 <246000> out 1 <246001> # join
add in 2 <245768 246001> out 1 <246002>  # join source bit 20
const-mul-2 in 1 <246002> out 1 <246003> # join
add in 2 <245767 246003> out 1 <246004>  # join source bit 19
const-mul-2 in 1 <246004> out 1 <246005> # join
add in 2 <245766 246005> out 1 <246006>  # join source bit 18
const-mul-2 in 1 <246006> out 1 <246007> # join
add in 2 <245765 246007> out 1 <246008>  # join source bit 17
const-mul-2 in 1 <246008> out 1 <246009> # join
add in 2 <245764 246009> out 1 <246010>  # join source bit 16
const-mul-2 in 1 <246010> out 1 <246011> # join
add in 2 <245763 246011> out 1 <246012>  # join source bit 15
const-mul-2 in 1 <246012> out 1 <246013> # join
add in 2 <245762 246013> out 1 <246014>  # join source bit 14
const-mul-2 in 1 <246014> out 1 <246015> # join
add in 2 <245761 246015> out 1 <246016>  # join source bit 13
const-mul-2 in 1 <246016> out 1 <246017> # join
add in 2 <245760 246017> out 1 <246018>  # join source bit 12
const-mul-2 in 1 <246018> out 1 <246019> # join
add in 2 <245759 246019> out 1 <246020>  # join source bit 11
const-mul-2 in 1 <246020> out 1 <246021> # join
add in 2 <245758 246021> out 1 <246022>  # join source bit 10
const-mul-2 in 1 <246022> out 1 <246023> # join
add in 2 <245757 246023> out 1 <246024>  # join source bit 9
const-mul-2 in 1 <246024> out 1 <246025> # join
add in 2 <245756 246025> out 1 <246026>  # join source bit 8
const-mul-2 in 1 <246026> out 1 <246027> # join
add in 2 <245755 246027> out 1 <246028>  # join source bit 7
const-mul-2 in 1 <246028> out 1 <246029> # join
add in 2 <245754 246029> out 1 <246030>  # join source bit 6
const-mul-2 in 1 <246030> out 1 <246031> # join
add in 2 <245753 246031> out 1 <246032>  # join source bit 5
const-mul-2 in 1 <246032> out 1 <246033> # join
add in 2 <245752 246033> out 1 <246034>  # join source bit 4
const-mul-2 in 1 <246034> out 1 <246035> # join
add in 2 <245751 246035> out 1 <246036>  # join source bit 3
const-mul-2 in 1 <246036> out 1 <246037> # join
add in 2 <245750 246037> out 1 <246038>  # join source bit 2
const-mul-2 in 1 <246038> out 1 <246039> # join
add in 2 <245749 246039> out 1 <246040>  # join source bit 1
const-mul-2 in 1 <246040> out 1 <246041> # join
add in 2 <245748 246041> out 1 <246042>  # join source bit 0
add in 2 <246042 246042> out 1 <246043>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <245172> out 1 <246044> # multiply-by-constant 4294967295
add in 2 <245746 246044> out 1 <246045>  # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <246045> out 265 <246046 246047 246048 246049 246050 246051 246052 246053 246054 246055 246056 246057 246058 246059 246060 246061 246062 246063 246064 246065 246066 246067 246068 246069 246070 246071 246072 246073 246074 246075 246076 246077 246078 246079 246080 246081 246082 246083 246084 246085 246086 246087 246088 246089 246090 246091 246092 246093 246094 246095 246096 246097 246098 246099 246100 246101 246102 246103 246104 246105 246106 246107 246108 246109 246110 246111 246112 246113 246114 246115 246116 246117 246118 246119 246120 246121 246122 246123 246124 246125 246126 246127 246128 246129 246130 246131 246132 246133 246134 246135 246136 246137 246138 246139 246140 246141 246142 246143 246144 246145 246146 246147 246148 246149 246150 246151 246152 246153 246154 246155 246156 246157 246158 246159 246160 246161 246162 246163 246164 246165 246166 246167 246168 246169 246170 246171 246172 246173 246174 246175 246176 246177 246178 246179 246180 246181 246182 246183 246184 246185 246186 246187 246188 246189 246190 246191 246192 246193 246194 246195 246196 246197 246198 246199 246200 246201 246202 246203 246204 246205 246206 246207 246208 246209 246210 246211 246212 246213 246214 246215 246216 246217 246218 246219 246220 246221 246222 246223 246224 246225 246226 246227 246228 246229 246230 246231 246232 246233 246234 246235 246236 246237 246238 246239 246240 246241 246242 246243 246244 246245 246246 246247 246248 246249 246250 246251 246252 246253 246254 246255 246256 246257 246258 246259 246260 246261 246262 246263 246264 246265 246266 246267 246268 246269 246270 246271 246272 246273 246274 246275 246276 246277 246278 246279 246280 246281 246282 246283 246284 246285 246286 246287 246288 246289 246290 246291 246292 246293 246294 246295 246296 246297 246298 246299 246300 246301 246302 246303 246304 246305 246306 246307 246308 246309 246310> # SplitBus
mul in 2 <246077 246043> out 1 <246311>  # cond trueterm
const-mul-neg-1 in 1 <246077> out 1 <246312> # cond minuscond
add in 2 <100 246312> out 1 <246313>     # cond negcond
mul in 2 <246313 245172> out 1 <246314>  # cond falseterm
add in 2 <246311 246314> out 1 <246315>  # cond result
mul in 2 <245000 244964> out 1 <246316>  # cond trueterm
const-mul-neg-1 in 1 <245000> out 1 <246317> # cond minuscond
add in 2 <100 246317> out 1 <246318>     # cond negcond
mul in 2 <246318 244961> out 1 <246319>  # cond falseterm
add in 2 <246316 246319> out 1 <246320>  # cond result
mul in 2 <244856 244820> out 1 <246321>  # cond trueterm
const-mul-neg-1 in 1 <244856> out 1 <246322> # cond minuscond
add in 2 <100 246322> out 1 <246323>     # cond negcond
mul in 2 <246323 244817> out 1 <246324>  # cond falseterm
add in 2 <246321 246324> out 1 <246325>  # cond result
const-mul-ffffffff in 1 <246325> out 1 <246326> # multiply-by-constant 4294967295
add in 2 <246325 246320> out 1 <246327>  # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
add in 2 <246327 246326> out 1 <246328>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <246328> out 1 <246329> # multiply-by-constant 4294967295
add in 2 <246327 246329> out 1 <246330>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <246325> out 1 <246331> # multiply-by-constant 4294967295
add in 2 <246320 246331> out 1 <246332>  # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <246332> out 200 <246333 246334 246335 246336 246337 246338 246339 246340 246341 246342 246343 246344 246345 246346 246347 246348 246349 246350 246351 246352 246353 246354 246355 246356 246357 246358 246359 246360 246361 246362 246363 246364 246365 246366 246367 246368 246369 246370 246371 246372 246373 246374 246375 246376 246377 246378 246379 246380 246381 246382 246383 246384 246385 246386 246387 246388 246389 246390 246391 246392 246393 246394 246395 246396 246397 246398 246399 246400 246401 246402 246403 246404 246405 246406 246407 246408 246409 246410 246411 246412 246413 246414 246415 246416 246417 246418 246419 246420 246421 246422 246423 246424 246425 246426 246427 246428 246429 246430 246431 246432 246433 246434 246435 246436 246437 246438 246439 246440 246441 246442 246443 246444 246445 246446 246447 246448 246449 246450 246451 246452 246453 246454 246455 246456 246457 246458 246459 246460 246461 246462 246463 246464 246465 246466 246467 246468 246469 246470 246471 246472 246473 246474 246475 246476 246477 246478 246479 246480 246481 246482 246483 246484 246485 246486 246487 246488 246489 246490 246491 246492 246493 246494 246495 246496 246497 246498 246499 246500 246501 246502 246503 246504 246505 246506 246507 246508 246509 246510 246511 246512 246513 246514 246515 246516 246517 246518 246519 246520 246521 246522 246523 246524 246525 246526 246527 246528 246529 246530 246531 246532> # SplitBus
mul in 2 <246364 246330> out 1 <246533>  # cond trueterm
const-mul-neg-1 in 1 <246364> out 1 <246534> # cond minuscond
add in 2 <100 246534> out 1 <246535>     # cond negcond
mul in 2 <246535 246320> out 1 <246536>  # cond falseterm
add in 2 <246533 246536> out 1 <246537>  # cond result
const-mul-ffffffff in 1 <246537> out 1 <246538> # multiply-by-constant 4294967295
add in 2 <246537 246315> out 1 <246539>  # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
split in 1 <246539> out 235 <246540 246541 246542 246543 246544 246545 246546 246547 246548 246549 246550 246551 246552 246553 246554 246555 246556 246557 246558 246559 246560 246561 246562 246563 246564 246565 246566 246567 246568 246569 246570 246571 246572 246573 246574 246575 246576 246577 246578 246579 246580 246581 246582 246583 246584 246585 246586 246587 246588 246589 246590 246591 246592 246593 246594 246595 246596 246597 246598 246599 246600 246601 246602 246603 246604 246605 246606 246607 246608 246609 246610 246611 246612 246613 246614 246615 246616 246617 246618 246619 246620 246621 246622 246623 246624 246625 246626 246627 246628 246629 246630 246631 246632 246633 246634 246635 246636 246637 246638 246639 246640 246641 246642 246643 246644 246645 246646 246647 246648 246649 246650 246651 246652 246653 246654 246655 246656 246657 246658 246659 246660 246661 246662 246663 246664 246665 246666 246667 246668 246669 246670 246671 246672 246673 246674 246675 246676 246677 246678 246679 246680 246681 246682 246683 246684 246685 246686 246687 246688 246689 246690 246691 246692 246693 246694 246695 246696 246697 246698 246699 246700 246701 246702 246703 246704 246705 246706 246707 246708 246709 246710 246711 246712 246713 246714 246715 246716 246717 246718 246719 246720 246721 246722 246723 246724 246725 246726 246727 246728 246729 246730 246731 246732 246733 246734 246735 246736 246737 246738 246739 246740 246741 246742 246743 246744 246745 246746 246747 246748 246749 246750 246751 246752 246753 246754 246755 246756 246757 246758 246759 246760 246761 246762 246763 246764 246765 246766 246767 246768 246769 246770 246771 246772 246773 246774> # SplitBus
const-mul-2 in 1 <246571> out 1 <246775> # join source bit 31
add in 2 <246570 246775> out 1 <246776>  # join source bit 30
const-mul-2 in 1 <246776> out 1 <246777> # join
add in 2 <246569 246777> out 1 <246778>  # join source bit 29
const-mul-2 in 1 <246778> out 1 <246779> # join
add in 2 <246568 246779> out 1 <246780>  # join source bit 28
const-mul-2 in 1 <246780> out 1 <246781> # join
add in 2 <246567 246781> out 1 <246782>  # join source bit 27
const-mul-2 in 1 <246782> out 1 <246783> # join
add in 2 <246566 246783> out 1 <246784>  # join source bit 26
const-mul-2 in 1 <246784> out 1 <246785> # join
add in 2 <246565 246785> out 1 <246786>  # join source bit 25
const-mul-2 in 1 <246786> out 1 <246787> # join
add in 2 <246564 246787> out 1 <246788>  # join source bit 24
const-mul-2 in 1 <246788> out 1 <246789> # join
add in 2 <246563 246789> out 1 <246790>  # join source bit 23
const-mul-2 in 1 <246790> out 1 <246791> # join
add in 2 <246562 246791> out 1 <246792>  # join source bit 22
const-mul-2 in 1 <246792> out 1 <246793> # join
add in 2 <246561 246793> out 1 <246794>  # join source bit 21
const-mul-2 in 1 <246794> out 1 <246795> # join
add in 2 <246560 246795> out 1 <246796>  # join source bit 20
const-mul-2 in 1 <246796> out 1 <246797> # join
add in 2 <246559 246797> out 1 <246798>  # join source bit 19
const-mul-2 in 1 <246798> out 1 <246799> # join
add in 2 <246558 246799> out 1 <246800>  # join source bit 18
const-mul-2 in 1 <246800> out 1 <246801> # join
add in 2 <246557 246801> out 1 <246802>  # join source bit 17
const-mul-2 in 1 <246802> out 1 <246803> # join
add in 2 <246556 246803> out 1 <246804>  # join source bit 16
const-mul-2 in 1 <246804> out 1 <246805> # join
add in 2 <246555 246805> out 1 <246806>  # join source bit 15
const-mul-2 in 1 <246806> out 1 <246807> # join
add in 2 <246554 246807> out 1 <246808>  # join source bit 14
const-mul-2 in 1 <246808> out 1 <246809> # join
add in 2 <246553 246809> out 1 <246810>  # join source bit 13
const-mul-2 in 1 <246810> out 1 <246811> # join
add in 2 <246552 246811> out 1 <246812>  # join source bit 12
const-mul-2 in 1 <246812> out 1 <246813> # join
add in 2 <246551 246813> out 1 <246814>  # join source bit 11
const-mul-2 in 1 <246814> out 1 <246815> # join
add in 2 <246550 246815> out 1 <246816>  # join source bit 10
const-mul-2 in 1 <246816> out 1 <246817> # join
add in 2 <246549 246817> out 1 <246818>  # join source bit 9
const-mul-2 in 1 <246818> out 1 <246819> # join
add in 2 <246548 246819> out 1 <246820>  # join source bit 8
const-mul-2 in 1 <246820> out 1 <246821> # join
add in 2 <246547 246821> out 1 <246822>  # join source bit 7
const-mul-2 in 1 <246822> out 1 <246823> # join
add in 2 <246546 246823> out 1 <246824>  # join source bit 6
const-mul-2 in 1 <246824> out 1 <246825> # join
add in 2 <246545 246825> out 1 <246826>  # join source bit 5
const-mul-2 in 1 <246826> out 1 <246827> # join
add in 2 <246544 246827> out 1 <246828>  # join source bit 4
const-mul-2 in 1 <246828> out 1 <246829> # join
add in 2 <246543 246829> out 1 <246830>  # join source bit 3
const-mul-2 in 1 <246830> out 1 <246831> # join
add in 2 <246542 246831> out 1 <246832>  # join source bit 2
const-mul-2 in 1 <246832> out 1 <246833> # join
add in 2 <246541 246833> out 1 <246834>  # join source bit 1
const-mul-2 in 1 <246834> out 1 <246835> # join
add in 2 <246540 246835> out 1 <246836>  # join source bit 0
add in 2 <246836 246836> out 1 <246837>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <246837> out 1 <246838> # multiply-by-constant 4294967295
add in 2 <246539 246838> out 1 <246839>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <246537> out 1 <246840> # multiply-by-constant 4294967295
add in 2 <246315 246840> out 1 <246841>  # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <246841> out 267 <246842 246843 246844 246845 246846 246847 246848 246849 246850 246851 246852 246853 246854 246855 246856 246857 246858 246859 246860 246861 246862 246863 246864 246865 246866 246867 246868 246869 246870 246871 246872 246873 246874 246875 246876 246877 246878 246879 246880 246881 246882 246883 246884 246885 246886 246887 246888 246889 246890 246891 246892 246893 246894 246895 246896 246897 246898 246899 246900 246901 246902 246903 246904 246905 246906 246907 246908 246909 246910 246911 246912 246913 246914 246915 246916 246917 246918 246919 246920 246921 246922 246923 246924 246925 246926 246927 246928 246929 246930 246931 246932 246933 246934 246935 246936 246937 246938 246939 246940 246941 246942 246943 246944 246945 246946 246947 246948 246949 246950 246951 246952 246953 246954 246955 246956 246957 246958 246959 246960 246961 246962 246963 246964 246965 246966 246967 246968 246969 246970 246971 246972 246973 246974 246975 246976 246977 246978 246979 246980 246981 246982 246983 246984 246985 246986 246987 246988 246989 246990 246991 246992 246993 246994 246995 246996 246997 246998 246999 247000 247001 247002 247003 247004 247005 247006 247007 247008 247009 247010 247011 247012 247013 247014 247015 247016 247017 247018 247019 247020 247021 247022 247023 247024 247025 247026 247027 247028 247029 247030 247031 247032 247033 247034 247035 247036 247037 247038 247039 247040 247041 247042 247043 247044 247045 247046 247047 247048 247049 247050 247051 247052 247053 247054 247055 247056 247057 247058 247059 247060 247061 247062 247063 247064 247065 247066 247067 247068 247069 247070 247071 247072 247073 247074 247075 247076 247077 247078 247079 247080 247081 247082 247083 247084 247085 247086 247087 247088 247089 247090 247091 247092 247093 247094 247095 247096 247097 247098 247099 247100 247101 247102 247103 247104 247105 247106 247107 247108> # SplitBus
mul in 2 <246873 246839> out 1 <247109>  # cond trueterm
const-mul-neg-1 in 1 <246873> out 1 <247110> # cond minuscond
add in 2 <100 247110> out 1 <247111>     # cond negcond
mul in 2 <247111 246315> out 1 <247112>  # cond falseterm
add in 2 <247109 247112> out 1 <247113>  # cond result
add in 2 <247113 104> out 1 <247114>     # ArithBusReq.AddReq(DFG.Conditional,DFG.Constant)
const-mul-ffffffff in 1 <77> out 1 <247115> # multiply-by-constant 4294967295
add in 2 <247114 247115> out 1 <247116>  # 'CmpLT DFG.Add - DFG.Input'
split in 1 <247116> outplitBus
mul in 2 <247148 103> out 1 <247355>     # cond trueterm
const-mul-neg-1 in 1 <247148> out 1 <247356> # cond minuscond
add in 2 <100 247356> out 1 <247357>     # cond negcond
mul in 2 <247357 102> out 1 <247358>     # cond falseterm
add in 2 <247355 247358> out 1 <247359>  # cond result
add in 2 <247113 3084> out 1 <247360>    # ArithBusReq.AddReq(DFG.Conditional,DFG.Negate)
const-mul-ffffffff in 1 <247360> out 1 <247361> # multiply-by-constant 4294967295
add in 2 <77 247361> out 1 <247362>      # 'CmpLT DFG.Input - DFG.Subtract'
split in 1 <247362> out 270 <247363 247364 247365 247366 247367 247368 247369 247370 247371 247372 247373 247374 247375 247376 247377 247378 247379 247380 247381 247382 247383 247384 247385 247386 247387 247388 247389 247390 247391 247392 247393 247394 247395 247396 247397 247398 247399 247400 247401 247402 247403 247404 247405 247406 247407 247408 247409 247410 247411 247412 247413 247414 247415 247416 247417 247418 247419 247420 247421 247422 247423 247424 247425 247426 247427 247428 247429 247430 247431 247432 247433 247434 247435 247436 247437 247438 247439 247440 247441 247442 247443 247444 247445 247446 247447 247448 247449 247450 247451 247452 247453 247454 247455 247456 247457 247458 247459 247460 247461 247462 247463 247464 247465 247466 247467 247468 247469 247470 247471 247472 247473 247474 247475 247476 247477 247478 247479 247480 247481 247482 247483 247484 247485 247486 247487 247488 247489 247490 247491 247492 247493 247494 247495 247496 247497 247498 247499 247500 247501 247502 247503 247504 247505 247506 247507 247508 247509 247510 247511 247512 247513 247514 247515 247516 247517 247518 247519 247520 247521 247522 247523 247524 247525 247526 247527 247528 247529 247530 247531 247532 247533 247534 247535 247536 247537 247538 247539 247540 247541 247542 247543 247544 247545 247546 247547 247548 247549 247550 247551 247552 247553 247554 247555 247556 247557 247558 247559 247560 247561 247562 247563 247564 247565 247566 247567 247568 247569 247570 247571 247572 247573 247574 247575 247576 247577 247578 247579 247580 247581 247582 247583 247584 247585 247586 247587 247588 247589 247590 247591 247592 247593 247594 247595 247596 247597 247598 247599 247600 247601 247602 247603 247604 247605 247606 247607 247608 247609 247610 247611 247612 247613 247614 247615 247616 247617 247618 247619 247620 247621 247622 247623 247624 247625 247626 247627 247628 247629 247630 247631 247632> # SplitBus
mul in 2 <247394 103> out 1 <247633>     # cond trueterm
const-mul-neg-1 in 1 <247394> out 1 <247634> # cond minuscond
add in 2 <100 247634> out 1 <247635>     # cond negcond
mul in 2 <247635 247359> out 1 <247636>  # cond falseterm
add in 2 <247633 247636> out 1 <247637>  # cond result
const-mul-ffffffff in 1 <76> out 1 <247638> # multiply-by-constant 4294967295
add in 2 <76 77> out 1 <247639>          # ArithBusReq.AddReq(DFG.Input,DFG.Input)
add in 2 <247639 247638> out 1 <247640>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <247640> out 1 <247641> # multiply-by-constant 4294967295
add in 2 <247639 247641> out 1 <247642>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <76> out 1 <247643> # multiply-by-constant 4294967295
add in 2 <77 247643> out 1 <247644>      # 'CmpLT DFG.Input - DFG.Input'
split in 1 <247644> out 65 <247645 247646 247647 247648 247649 247650 247651 247652 247653 247654 247655 247656 247657 247658 247659 247660 247661 247662 247663 247664 247665 247666 247667 247668 247669 247670 247671 247672 247673 247674 247675 247676 247677 247678 247679 247680 247681 247682 247683 247684 247685 247686 247687 247688 247689 247690 247691 247692 247693 247694 247695 247696 247697 247698 247699 247700 247701 247702 247703 247704 247705 247706 247707 247708 247709> # SplitBus
mul in 2 <247676 247642> out 1 <247710>  # cond trueterm
const-mul-neg-1 in 1 <247676> out 1 <247711> # cond minuscond
add in 2 <100 247711> out 1 <247712>     # cond negcond
mul in 2 <247712 77> out 1 <247713>      # cond falseterm
add in 2 <247710 247713> out 1 <247714>  # cond result
const-mul-ffffffff in 1 <247714> out 1 <247715> # multiply-by-constant 4294967295
add in 2 <247714 78> out 1 <247716>      # ArithBusReq.AddReq(DFG.Conditional,DFG.Input)
add in 2 <247716 247715> out 1 <247717>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <247717> out 1 <247718> # multiply-by-constant 4294967295
add in 2 <247716 247718> out 1 <247719>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <247714> out 1 <247720> # multiply-by-constant 4294967295
add in 2 <78 247720> out 1 <247721>      # 'CmpLT DFG.Input - DFG.Conditional'
split in 1 <247721> out 131 <247722 247723 247724 247725 247726 247727 247728 247729 247730 247731 247732 247733 247734 247735 247736 247737 247738 247739 247740 247741 247742 247743 247744 247745 247746 247747 247748 247749 247750 247751 247752 247753 247754 247755 247756 247757 247758 247759 247760 247761 247762 247763 247764 247765 247766 247767 247768 247769 247770 247771 247772 247773 247774 247775 247776 247777 247778 247779 247780 247781 247782 247783 247784 247785 247786 247787 247788 247789 247790 247791 247792 247793 247794 247795 247796 247797 247798 247799 247800 247801 247802 247803 247804 247805 247806 247807 247808 247809 247810 247811 247812 247813 247814 247815 247816 247817 247818 247819 247820 247821 247822 247823 247824 247825 247826 247827 247828 247829 247830 247831 247832 247833 247834 247835 247836 247837 247838 247839 247840 247841 247842 247843 247844 247845 247846 247847 247848 247849 247850 247851 247852> # SplitBus
mul in 2 <247753 247719> out 1 <247853>  # cond trueterm
const-mul-neg-1 in 1 <247753> out 1 <247854> # cond minuscond
add in 2 <100 247854> out 1 <247855>     # cond negcond
mul in 2 <247855 78> out 1 <247856>      # cond falseterm
add in 2 <247853 247856> out 1 <247857>  # cond result
const-mul-ffffffff in 1 <247857> out 1 <247858> # multiply-by-constant 4294967295
add in 2 <247857 79> out 1 <247859>      # ArithBusReq.AddReq(DFG.Conditional,DFG.Input)
add in 2 <247859 247858> out 1 <247860>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <247857> out 1 <247861> # multiply-by-constant 4294967295
add in 2 <79 247861> out 1 <247862>      # 'CmpLT DFG.Input - DFG.Conditional'
split in 1 <247862> out 197 <247863 247864 247865 247866 247867 247868 247869 247870 247871 247872 247873 247874 247875 247876 247877 247878 247879 247880 247881 247882 247883 247884 247885 247886 247887 247888 247889 247890 247891 247892 247893 247894 247895 247896 247897 247898 247899 247900 247901 247902 247903 247904 247905 247906 247907 247908 247909 247910 247911 247912 247913 247914 247915 247916 247917 247918 247919 247920 247921 247922 247923 247924 247925 247926 247927 247928 247929 247930 247931 247932 247933 247934 247935 247936 247937 247938 247939 247940 247941 247942 247943 247944 247945 247946 247947 247948 247949 247950 247951 247952 247953 247954 247955 247956 247957 247958 247959 247960 247961 247962 247963 247964 247965 247966 247967 247968 247969 247970 247971 247972 247973 247974 247975 247976 247977 247978 247979 247980 247981 247982 247983 247984 247985 247986 247987 247988 247989 247990 247991 247992 247993 247994 247995 247996 247997 247998 247999 248000 248001 248002 248003 248004 248005 248006 248007 248008 248009 248010 248011 248012 248013 248014 248015 248016 248017 248018 248019 248020 248021 248022 248023 248024 248025 248026 248027 248028 248029 248030 248031 248032 248033 248034 248035 248036 248037 248038 248039 248040 248041 248042 248043 248044 248045 248046 248047 248048 248049 248050 248051 248052 248053 248054 248055 248056 248057 248058 248059> # SplitBus
mul in 2 <247894 247860> out 1 <248060>  # cond trueterm
const-mul-neg-1 in 1 <247894> out 1 <248061> # cond minuscond
add in 2 <100 248061> out 1 <248062>     # cond negcond
mul in 2 <248062 247857> out 1 <248063>  # cond falseterm
add in 2 <248060 248063> out 1 <248064>  # cond result
mul in 2 <247753 247717> out 1 <248065>  # cond trueterm
const-mul-neg-1 in 1 <247753> out 1 <248066> # cond minuscond
add in 2 <100 248066> out 1 <248067>     # cond negcond
mul in 2 <248067 247714> out 1 <248068>  # cond falseterm
add in 2 <248065 248068> out 1 <248069>  # cond result
mul in 2 <247676 247640> out 1 <248070>  # cond trueterm
const-mul-neg-1 in 1 <247676> out 1 <248071> # cond minuscond
add in 2 <100 248071> out 1 <248072>     # cond negcond
mul in 2 <248072 76> out 1 <248073>      # cond falseterm
add in 2 <248070 248073> out 1 <248074>  # cond result
const-mul-ffffffff in 1 <248074> out 1 <248075> # multiply-by-constant 4294967295
add in 2 <248074 248069> out 1 <248076>  # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
add in 2 <248076 248075> out 1 <248077>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <248077> out 1 <248078> # multiply-by-constant 4294967295
add in 2 <248076 248078> out 1 <248079>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <248074> out 1 <248080> # multiply-by-constant 4294967295
add in 2 <248069 248080> out 1 <248081>  # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <248081> out 132 <248082 248083 248084 248085 248086 248087 248088 248089 248090 248091 248092 248093 248094 248095 248096 248097 248098 248099 248100 248101 248102 248103 248104 248105 248106 248107 248108 248109 248110 248111 248112 248113 248114 248115 248116 248117 248118 248119 248120 248121 248122 248123 248124 248125 248126 248127 248128 248129 248130 248131 248132 248133 248134 248135 248136 248137 248138 248139 248140 248141 248142 248143 248144 248145 248146 248147 248148 248149 248150 248151 248152 248153 248154 248155 248156 248157 248158 248159 248160 248161 248162 248163 248164 248165 248166 248167 248168 248169 248170 248171 248172 248173 248174 248175 248176 248177 248178 248179 248180 248181 248182 248183 248184 248185 248186 248187 248188 248189 248190 248191 248192 248193 248194 248195 248196 248197 248198 248199 248200 248201 248202 248203 248204 248205 248206 248207 248208 248209 248210 248211 248212 248213> # SplitBus
mul in 2 <248113 248079> out 1 <248214>  # cond trueterm
const-mul-neg-1 in 1 <248113> out 1 <248215> # cond minuscond
add in 2 <100 248215> out 1 <248216>     # cond negcond
mul in 2 <248216 248069> out 1 <248217>  # cond falseterm
add in 2 <248214 248217> out 1 <248218>  # cond result
const-mul-ffffffff in 1 <248218> out 1 <248219> # multiply-by-constant 4294967295
add in 2 <248218 248064> out 1 <248220>  # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
add in 2 <248220 248219> out 1 <248221>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <248221> out 1 <248222> # multiply-by-constant 4294967295
add in 2 <248220 248222> out 1 <248223>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <248218> out 1 <248224> # multiply-by-constant 4294967295
add in 2 <248064 248224> out 1 <248225>  # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <248225> out 199 <248226 248227 248228 248229 248230 248231 248232 248233 248234 248235 248236 248237 248238 248239 248240 248241 248242 248243 248244 248245 248246 248247 248248 248249 248250 248251 248252 248253 248254 248255 248256 248257 248258 248259 248260 248261 248262 248263 248264 248265 248266 248267 248268 248269 248270 248271 248272 248273 248274 248275 248276 248277 248278 248279 248280 248281 248282 248283 248284 248285 248286 248287 248288 248289 248290 248291 248292 248293 248294 248295 248296 248297 248298 248299 248300 248301 248302 248303 248304 248305 248306 248307 248308 248309 248310 248311 248312 248313 248314 248315 248316 248317 248318 248319 248320 248321 248322 248323 248324 248325 248326 248327 248328 248329 248330 248331 248332 248333 248334 248335 248336 248337 248338 248339 248340 248341 248342 248343 248344 248345 248346 248347 248348 248349 248350 248351 248352 248353 248354 248355 248356 248357 248358 248359 248360 248361 248362 248363 248364 248365 248366 248367 248368 248369 248370 248371 248372 248373 248374 248375 248376 248377 248378 248379 248380 248381 248382 248383 248384 248385 248386 248387 248388 248389 248390 248391 248392 248393 248394 248395 248396 248397 248398 248399 248400 248401 248402 248403 248404 248405 248406 248407 248408 248409 248410 248411 248412 248413 248414 248415 248416 248417 248418 248419 248420 248421 248422 248423 248424> # SplitBus
mul in 2 <248257 248223> out 1 <248425>  # cond trueterm
const-mul-neg-1 in 1 <248257> out 1 <248426> # cond minuscond
add in 2 <100 248426> out 1 <248427>     # cond negcond
mul in 2 <248427 248064> out 1 <248428>  # cond falseterm
add in 2 <248425 248428> out 1 <248429>  # cond result
const-mul-ffffffff in 1 <248429> out 1 <248430> # multiply-by-constant 4294967295
const-mul-ffffffff in 1 <247860> out 1 <248431> # multiply-by-constant 4294967295
add in 2 <247859 248431> out 1 <248432>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
mul in 2 <247894 248432> out 1 <248433>  # cond trueterm
const-mul-neg-1 in 1 <247894> out 1 <248434> # cond minuscond
add in 2 <100 248434> out 1 <248435>     # cond negcond
mul in 2 <248435 79> out 1 <248436>      # cond falseterm
add in 2 <248433 248436> out 1 <248437>  # cond result
const-mul-ffffffff in 1 <248437> out 1 <248438> # multiply-by-constant 4294967295
add in 2 <248437 80> out 1 <248439>      # ArithBusReq.AddReq(DFG.Conditional,DFG.Input)
split in 1 <248439> out 231 <248440 248441 248442 248443 248444 248445 248446 248447 248448 248449 248450 248451 248452 248453 248454 248455 248456 248457 248458 248459 248460 248461 248462 248463 248464 248465 248466 248467 248468 248469 248470 248471 248472 248473 248474 248475 248476 248477 248478 248479 248480 248481 248482 248483 248484 248485 248486 248487 248488 248489 248490 248491 248492 248493 248494 248495 248496 248497 248498 248499 248500 248501 248502 248503 248504 248505 248506 248507 248508 248509 248510 248511 248512 248513 248514 248515 248516 248517 248518 248519 248520 248521 248522 248523 248524 248525 248526 248527 248528 248529 248530 248531 248532 248533 248534 248535 248536 248537 248538 248539 248540 248541 248542 248543 248544 248545 248546 248547 248548 248549 248550 248551 248552 248553 248554 248555 248556 248557 248558 248559 248560 248561 248562 248563 248564 248565 248566 248567 248568 248569 248570 248571 248572 248573 248574 248575 248576 248577 248578 248579 248580 248581 248582 248583 248584 248585 248586 248587 248588 248589 248590 248591 248592 248593 248594 248595 248596 248597 248598 248599 248600 248601 248602 248603 248604 248605 248606 248607 248608 248609 248610 248611 248612 248613 248614 248615 248616 248617 248618 248619 248620 248621 248622 248623 248624 248625 248626 248627 248628 248629 248630 248631 248632 248633 248634 248635 248636 248637 248638 248639 248640 248641 248642 248643 248644 248645 248646 248647 248648 248649 248650 248651 248652 248653 248654 248655 248656 248657 248658 248659 248660 248661 248662 248663 248664 248665 248666 248667 248668 248669 248670> # SplitBus
const-mul-2 in 1 <248471> out 1 <248671> # join source bit 31
add in 2 <248470 248671> out 1 <248672>  # join source bit 30
const-mul-2 in 1 <248672> out 1 <248673> # join
add in 2 <248469 248673> out 1 <248674>  # join source bit 29
const-mul-2 in 1 <248674> out 1 <248675> # join
add in 2 <248468 248675> out 1 <248676>  # join source bit 28
const-mul-2 in 1 <248676> out 1 <248677> # join
add in 2 <248467 248677> out 1 <248678>  # join source bit 27
const-mul-2 in 1 <248678> out 1 <248679> # join
add in 2 <248466 248679> out 1 <248680>  # join source bit 26
const-mul-2 in 1 <248680> out 1 <248681> # join
add in 2 <248465 248681> out 1 <248682>  # join source bit 25
const-mul-2 in 1 <248682> out 1 <248683> # join
add in 2 <248464 248683> out 1 <248684>  # join source bit 24
const-mul-2 in 1 <248684> out 1 <248685> # join
add in 2 <248463 248685> out 1 <248686>  # join source bit 23
const-mul-2 in 1 <248686> out 1 <248687> # join
add in 2 <248462 248687> out 1 <248688>  # join source bit 22
const-mul-2 in 1 <248688> out 1 <248689> # join
add in 2 <248461 248689> out 1 <248690>  # join source bit 21
const-mul-2 in 1 <248690> out 1 <248691> # join
add in 2 <248460 248691> out 1 <248692>  # join source bit 20
const-mul-2 in 1 <248692> out 1 <248693> # join
add in 2 <248459 248693> out 1 <248694>  # join source bit 19
const-mul-2 in 1 <248694> out 1 <248695> # join
add in 2 <248458 248695> out 1 <248696>  # join source bit 18
const-mul-2 in 1 <248696> out 1 <248697> # join
add in 2 <248457 248697> out 1 <248698>  # join source bit 17
const-mul-2 in 1 <248698> out 1 <248699> # join
add in 2 <248456 248699> out 1 <248700>  # join source bit 16
const-mul-2 in 1 <248700> out 1 <248701> # join
add in 2 <248455 248701> out 1 <248702>  # join source bit 15
const-mul-2 in 1 <248702> out 1 <248703> # join
add in 2 <248454 248703> out 1 <248704>  # join source bit 14
const-mul-2 in 1 <248704> out 1 <248705> # join
add in 2 <248453 248705> out 1 <248706>  # join source bit 13
const-mul-2 in 1 <248706> out 1 <248707> # join
add in 2 <248452 248707> out 1 <248708>  # join source bit 12
const-mul-2 in 1 <248708> out 1 <248709> # join
add in 2 <248451 248709> out 1 <248710>  # join source bit 11
const-mul-2 in 1 <248710> out 1 <248711> # join
add in 2 <248450 248711> out 1 <248712>  # join source bit 10
const-mul-2 in 1 <248712> out 1 <248713> # join
add in 2 <248449 248713> out 1 <248714>  # join source bit 9
const-mul-2 in 1 <248714> out 1 <248715> # join
add in 2 <248448 248715> out 1 <248716>  # join source bit 8
const-mul-2 in 1 <248716> out 1 <248717> # join
add in 2 <248447 248717> out 1 <248718>  # join source bit 7
const-mul-2 in 1 <248718> out 1 <248719> # join
add in 2 <248446 248719> out 1 <248720>  # join source bit 6
const-mul-2 in 1 <248720> out 1 <248721> # join
add in 2 <248445 248721> out 1 <248722>  # join source bit 5
const-mul-2 in 1 <248722> out 1 <248723> # join
add in 2 <248444 248723> out 1 <248724>  # join source bit 4
const-mul-2 in 1 <248724> out 1 <248725> # join
add in 2 <248443 248725> out 1 <248726>  # join source bit 3
const-mul-2 in 1 <248726> out 1 <248727> # join
add in 2 <248442 248727> out 1 <248728>  # join source bit 2
const-mul-2 in 1 <248728> out 1 <248729> # join
add in 2 <248441 248729> out 1 <248730>  # join source bit 1
const-mul-2 in 1 <248730> out 1 <248731> # join
add in 2 <248440 248731> out 1 <248732>  # join source bit 0
add in 2 <248732 248732> out 1 <248733>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <248437> out 1 <248734> # multiply-by-constant 4294967295
add in 2 <80 248734> out 1 <248735>      # 'CmpLT DFG.Input - DFG.Conditional'
split in 1 <248735> out 263 <248736 248737 248738 248739 248740 248741 248742 248743 248744 248745 248746 248747 248748 248749 248750 248751 248752 248753 248754 248755 248756 248757 248758 248759 248760 248761 248762 248763 248764 248765 248766 248767 248768 248769 248770 248771 248772 248773 248774 248775 248776 248777 248778 248779 248780 248781 248782 248783 248784 248785 248786 248787 248788 248789 248790 248791 248792 248793 248794 248795 248796 248797 248798 248799 248800 248801 248802 248803 248804 248805 248806 248807 248808 248809 248810 248811 248812 248813 248814 248815 248816 248817 248818 248819 248820 248821 248822 248823 248824 248825 248826 248827 248828 248829 248830 248831 248832 248833 248834 248835 248836 248837 248838 248839 248840 248841 248842 248843 248844 248845 248846 248847 248848 248849 248850 248851 248852 248853 248854 248855 248856 248857 248858 248859 248860 248861 248862 248863 248864 248865 248866 248867 248868 248869 248870 248871 248872 248873 248874 248875 248876 248877 248878 248879 248880 248881 248882 248883 248884 248885 248886 248887 248888 248889 248890 248891 248892 248893 248894 248895 248896 248897 248898 248899 248900 248901 248902 248903 248904 248905 248906 248907 248908 248909 248910 248911 248912 248913 248914 248915 248916 248917 248918 248919 248920 248921 248922 248923 248924 248925 248926 248927 248928 248929 248930 248931 248932 248933 248934 248935 248936 248937 248938 248939 248940 248941 248942 248943 248944 248945 248946 248947 248948 248949 248950 248951 248952 248953 248954 248955 248956 248957 248958 248959 248960 248961 248962 248963 248964 248965 248966 248967 248968 248969 248970 248971 248972 248973 248974 248975 248976 248977 248978 248979 248980 248981 248982 248983 248984 248985 248986 248987 248988 248989 248990 248991 248992 248993 248994 248995 248996 248997 248998> # SplitBus
mul in 2 <248767 248733> out 1 <248999>  # cond trueterm
const-mul-neg-1 in 1 <248767> out 1 <249000> # cond minuscond
add in 2 <100 249000> out 1 <249001>     # cond negcond
mul in 2 <249001 248437> out 1 <249002>  # cond falseterm
add in 2 <248999 249002> out 1 <249003>  # cond result
add in 2 <248429 249003> out 1 <249004>  # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
split in 1 <249004> outplitBus
const-mul-2 in 1 <249036> out 1 <249238> # join source bit 31
add in 2 <249035 249238> out 1 <249239>  # join source bit 30
const-mul-2 in 1 <249239> out 1 <249240> # join
add in 2 <249034 249240> out 1 <249241>  # join source bit 29
const-mul-2 in 1 <249241> out 1 <249242> # join
add in 2 <249033 249242> out 1 <249243>  # join source bit 28
const-mul-2 in 1 <249243> out 1 <249244> # join
add in 2 <249032 249244> out 1 <249245>  # join source bit 27
const-mul-2 in 1 <249245> out 1 <249246> # join
add in 2 <249031 249246> out 1 <249247>  # join source bit 26
const-mul-2 in 1 <249247> out 1 <249248> # join
add in 2 <249030 249248> out 1 <249249>  # join source bit 25
const-mul-2 in 1 <249249> out 1 <249250> # join
add in 2 <249029 249250> out 1 <249251>  # join source bit 24
const-mul-2 in 1 <249251> out 1 <249252> # join
add in 2 <249028 249252> out 1 <249253>  # join source bit 23
const-mul-2 in 1 <249253> out 1 <249254> # join
add in 2 <249027 249254> out 1 <249255>  # join source bit 22
const-mul-2 in 1 <249255> out 1 <249256> # join
add in 2 <249026 249256> out 1 <249257>  # join source bit 21
const-mul-2 in 1 <249257> out 1 <249258> # join
add in 2 <249025 249258> out 1 <249259>  # join source bit 20
const-mul-2 in 1 <249259> out 1 <249260> # join
add in 2 <249024 249260> out 1 <249261>  # join source bit 19
const-mul-2 in 1 <249261> out 1 <249262> # join
add in 2 <249023 249262> out 1 <249263>  # join source bit 18
const-mul-2 in 1 <249263> out 1 <249264> # join
add in 2 <249022 249264> out 1 <249265>  # join source bit 17
const-mul-2 in 1 <249265> out 1 <249266> # join
add in 2 <249021 249266> out 1 <249267>  # join source bit 16
const-mul-2 in 1 <249267> out 1 <249268> # join
add in 2 <249020 249268> out 1 <249269>  # join source bit 15
const-mul-2 in 1 <249269> out 1 <249270> # join
add in 2 <249019 249270> out 1 <249271>  # join source bit 14
const-mul-2 in 1 <249271> out 1 <249272> # join
add in 2 <249018 249272> out 1 <249273>  # join source bit 13
const-mul-2 in 1 <249273> out 1 <249274> # join
add in 2 <249017 249274> out 1 <249275>  # join source bit 12
const-mul-2 in 1 <249275> out 1 <249276> # join
add in 2 <249016 249276> out 1 <249277>  # join source bit 11
const-mul-2 in 1 <249277> out 1 <249278> # join
add in 2 <249015 249278> out 1 <249279>  # join source bit 10
const-mul-2 in 1 <249279> out 1 <249280> # join
add in 2 <249014 249280> out 1 <249281>  # join source bit 9
const-mul-2 in 1 <249281> out 1 <249282> # join
add in 2 <249013 249282> out 1 <249283>  # join source bit 8
const-mul-2 in 1 <249283> out 1 <249284> # join
add in 2 <249012 249284> out 1 <249285>  # join source bit 7
const-mul-2 in 1 <249285> out 1 <249286> # join
add in 2 <249011 249286> out 1 <249287>  # join source bit 6
const-mul-2 in 1 <249287> out 1 <249288> # join
add in 2 <249010 249288> out 1 <249289>  # join source bit 5
const-mul-2 in 1 <249289> out 1 <249290> # join
add in 2 <249009 249290> out 1 <249291>  # join source bit 4
const-mul-2 in 1 <249291> out 1 <249292> # join
add in 2 <249008 249292> out 1 <249293>  # join source bit 3
const-mul-2 in 1 <249293> out 1 <249294> # join
add in 2 <249007 249294> out 1 <249295>  # join source bit 2
const-mul-2 in 1 <249295> out 1 <249296> # join
add in 2 <249006 249296> out 1 <249297>  # join source bit 1
const-mul-2 in 1 <249297> out 1 <249298> # join
add in 2 <249005 249298> out 1 <249299>  # join source bit 0
add in 2 <249299 249299> out 1 <249300>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <248429> out 1 <249301> # multiply-by-constant 4294967295
add in 2 <249003 249301> out 1 <249302>  # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <249302> outplitBus
mul in 2 <249334 249300> out 1 <249568>  # cond trueterm
const-mul-neg-1 in 1 <249334> out 1 <249569> # cond minuscond
add in 2 <100 249569> out 1 <249570>     # cond negcond
mul in 2 <249570 248429> out 1 <249571>  # cond falseterm
add in 2 <249568 249571> out 1 <249572>  # cond result
mul in 2 <248257 248221> out 1 <249573>  # cond trueterm
const-mul-neg-1 in 1 <248257> out 1 <249574> # cond minuscond
add in 2 <100 249574> out 1 <249575>     # cond negcond
mul in 2 <249575 248218> out 1 <249576>  # cond falseterm
add in 2 <249573 249576> out 1 <249577>  # cond result
mul in 2 <248113 248077> out 1 <249578>  # cond trueterm
const-mul-neg-1 in 1 <248113> out 1 <249579> # cond minuscond
add in 2 <100 249579> out 1 <249580>     # cond negcond
mul in 2 <249580 248074> out 1 <249581>  # cond falseterm
add in 2 <249578 249581> out 1 <249582>  # cond result
const-mul-ffffffff in 1 <249582> out 1 <249583> # multiply-by-constant 4294967295
add in 2 <249582 249577> out 1 <249584>  # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
add in 2 <249584 249583> out 1 <249585>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <249585> out 1 <249586> # multiply-by-constant 4294967295
add in 2 <249584 249586> out 1 <249587>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <249582> out 1 <249588> # multiply-by-constant 4294967295
add in 2 <249577 249588> out 1 <249589>  # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <249589> out 200 <249590 249591 249592 249593 249594 249595 249596 249597 249598 249599 249600 249601 249602 249603 249604 249605 249606 249607 249608 249609 249610 249611 249612 249613 249614 249615 249616 249617 249618 249619 249620 249621 249622 249623 249624 249625 249626 249627 249628 249629 249630 249631 249632 249633 249634 249635 249636 249637 249638 249639 249640 249641 249642 249643 249644 249645 249646 249647 249648 249649 249650 249651 249652 249653 249654 249655 249656 249657 249658 249659 249660 249661 249662 249663 249664 249665 249666 249667 249668 249669 249670 249671 249672 249673 249674 249675 249676 249677 249678 249679 249680 249681 249682 249683 249684 249685 249686 249687 249688 249689 249690 249691 249692 249693 249694 249695 249696 249697 249698 249699 249700 249701 249702 249703 249704 249705 249706 249707 249708 249709 249710 249711 249712 249713 249714 249715 249716 249717 249718 249719 249720 249721 249722 249723 249724 249725 249726 249727 249728 249729 249730 249731 249732 249733 249734 249735 249736 249737 249738 249739 249740 249741 249742 249743 249744 249745 249746 249747 249748 249749 249750 249751 249752 249753 249754 249755 249756 249757 249758 249759 249760 249761 249762 249763 249764 249765 249766 249767 249768 249769 249770 249771 249772 249773 249774 249775 249776 249777 249778 249779 249780 249781 249782 249783 249784 249785 249786 249787 249788 249789> # SplitBus
mul in 2 <249621 249587> out 1 <249790>  # cond trueterm
const-mul-neg-1 in 1 <249621> out 1 <249791> # cond minuscond
add in 2 <100 249791> out 1 <249792>     # cond negcond
mul in 2 <249792 249577> out 1 <249793>  # cond falseterm
add in 2 <249790 249793> out 1 <249794>  # cond result
const-mul-ffffffff in 1 <249794> out 1 <249795> # multiply-by-constant 4294967295
add in 2 <249794 249572> out 1 <249796>  # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
split in 1 <249796> outplitBus
const-mul-2 in 1 <249828> out 1 <250032> # join source bit 31
add in 2 <249827 250032> out 1 <250033>  # join source bit 30
const-mul-2 in 1 <250033> out 1 <250034> # join
add in 2 <249826 250034> out 1 <250035>  # join source bit 29
const-mul-2 in 1 <250035> out 1 <250036> # join
add in 2 <249825 250036> out 1 <250037>  # join source bit 28
const-mul-2 in 1 <250037> out 1 <250038> # join
add in 2 <249824 250038> out 1 <250039>  # join source bit 27
const-mul-2 in 1 <250039> out 1 <250040> # join
add in 2 <249823 250040> out 1 <250041>  # join source bit 26
const-mul-2 in 1 <250041> out 1 <250042> # join
add in 2 <249822 250042> out 1 <250043>  # join source bit 25
const-mul-2 in 1 <250043> out 1 <250044> # join
add in 2 <249821 250044> out 1 <250045>  # join source bit 24
const-mul-2 in 1 <250045> out 1 <250046> # join
add in 2 <249820 250046> out 1 <250047>  # join source bit 23
const-mul-2 in 1 <250047> out 1 <250048> # join
add in 2 <249819 250048> out 1 <250049>  # join source bit 22
const-mul-2 in 1 <250049> out 1 <250050> # join
add in 2 <249818 250050> out 1 <250051>  # join source bit 21
const-mul-2 in 1 <250051> out 1 <250052> # join
add in 2 <249817 250052> out 1 <250053>  # join source bit 20
const-mul-2 in 1 <250053> out 1 <250054> # join
add in 2 <249816 250054> out 1 <250055>  # join source bit 19
const-mul-2 in 1 <250055> out 1 <250056> # join
add in 2 <249815 250056> out 1 <250057>  # join source bit 18
const-mul-2 in 1 <250057> out 1 <250058> # join
add in 2 <249814 250058> out 1 <250059>  # join source bit 17
const-mul-2 in 1 <250059> out 1 <250060> # join
add in 2 <249813 250060> out 1 <250061>  # join source bit 16
const-mul-2 in 1 <250061> out 1 <250062> # join
add in 2 <249812 250062> out 1 <250063>  # join source bit 15
const-mul-2 in 1 <250063> out 1 <250064> # join
add in 2 <249811 250064> out 1 <250065>  # join source bit 14
const-mul-2 in 1 <250065> out 1 <250066> # join
add in 2 <249810 250066> out 1 <250067>  # join source bit 13
const-mul-2 in 1 <250067> out 1 <250068> # join
add in 2 <249809 250068> out 1 <250069>  # join source bit 12
const-mul-2 in 1 <250069> out 1 <250070> # join
add in 2 <249808 250070> out 1 <250071>  # join source bit 11
const-mul-2 in 1 <250071> out 1 <250072> # join
add in 2 <249807 250072> out 1 <250073>  # join source bit 10
const-mul-2 in 1 <250073> out 1 <250074> # join
add in 2 <249806 250074> out 1 <250075>  # join source bit 9
const-mul-2 in 1 <250075> out 1 <250076> # join
add in 2 <249805 250076> out 1 <250077>  # join source bit 8
const-mul-2 in 1 <250077> out 1 <250078> # join
add in 2 <249804 250078> out 1 <250079>  # join source bit 7
const-mul-2 in 1 <250079> out 1 <250080> # join
add in 2 <249803 250080> out 1 <250081>  # join source bit 6
const-mul-2 in 1 <250081> out 1 <250082> # join
add in 2 <249802 250082> out 1 <250083>  # join source bit 5
const-mul-2 in 1 <250083> out 1 <250084> # join
add in 2 <249801 250084> out 1 <250085>  # join source bit 4
const-mul-2 in 1 <250085> out 1 <250086> # join
add in 2 <249800 250086> out 1 <250087>  # join source bit 3
const-mul-2 in 1 <250087> out 1 <250088> # join
add in 2 <249799 250088> out 1 <250089>  # join source bit 2
const-mul-2 in 1 <250089> out 1 <250090> # join
add in 2 <249798 250090> out 1 <250091>  # join source bit 1
const-mul-2 in 1 <250091> out 1 <250092> # join
add in 2 <249797 250092> out 1 <250093>  # join source bit 0
add in 2 <250093 250093> out 1 <250094>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <250094> out 1 <250095> # multiply-by-constant 4294967295
add in 2 <249796 250095> out 1 <250096>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <249794> out 1 <250097> # multiply-by-constant 4294967295
add in 2 <249572 250097> out 1 <250098>  # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <250098> outplitBus
mul in 2 <250130 250096> out 1 <250366>  # cond trueterm
const-mul-neg-1 in 1 <250130> out 1 <250367> # cond minuscond
add in 2 <100 250367> out 1 <250368>     # cond negcond
mul in 2 <250368 249572> out 1 <250369>  # cond falseterm
add in 2 <250366 250369> out 1 <250370>  # cond result
add in 2 <250370 104> out 1 <250371>     # ArithBusReq.AddReq(DFG.Conditional,DFG.Constant)
const-mul-ffffffff in 1 <78> out 1 <250372> # multiply-by-constant 4294967295
add in 2 <250371 250372> out 1 <250373>  # 'CmpLT DFG.Add - DFG.Input'
split in 1 <250373> out 238 <250374 250375 250376 250377 250378 250379 250380 250381 250382 250383 250384 250385 250386 250387 250388 250389 250390 250391 250392 250393 250394 250395 250396 250397 250398 250399 250400 250401 250402 250403 250404 250405 250406 250407 250408 250409 250410 250411 250412 250413 250414 250415 250416 250417 250418 250419 250420 250421 250422 250423 250424 250425 250426 250427 250428 250429 250430 250431 250432 250433 250434 250435 250436 250437 250438 250439 250440 250441 250442 250443 250444 250445 250446 250447 250448 250449 250450 250451 250452 250453 250454 250455 250456 250457 250458 250459 250460 250461 250462 250463 250464 250465 250466 250467 250468 250469 250470 250471 250472 250473 250474 250475 250476 250477 250478 250479 250480 250481 250482 250483 250484 250485 250486 250487 250488 250489 250490 250491 250492 250493 250494 250495 250496 250497 250498 250499 250500 250501 250502 250503 250504 250505 250506 250507 250508 250509 250510 250511 250512 250513 250514 250515 250516 250517 250518 250519 250520 250521 250522 250523 250524 250525 250526 250527 250528 250529 250530 250531 250532 250533 250534 250535 250536 250537 250538 250539 250540 250541 250542 250543 250544 250545 250546 250547 250548 250549 250550 250551 250552 250553 250554 250555 250556 250557 250558 250559 250560 250561 250562 250563 250564 250565 250566 250567 250568 250569 250570 250571 250572 250573 250574 250575 250576 250577 250578 250579 250580 250581 250582 250583 250584 250585 250586 250587 250588 250589 250590 250591 250592 250593 250594 250595 250596 250597 250598 250599 250600 250601 250602 250603 250604 250605 250606 250607 250608 250609 250610 250611> # SplitBus
mul in 2 <250405 103> out 1 <250612>     # cond trueterm
const-mul-neg-1 in 1 <250405> out 1 <250613> # cond minuscond
add in 2 <100 250613> out 1 <250614>     # cond negcond
mul in 2 <250614 102> out 1 <250615>     # cond falseterm
add in 2 <250612 250615> out 1 <250616>  # cond result
add in 2 <250370 3084> out 1 <250617>    # ArithBusReq.AddReq(DFG.Conditional,DFG.Negate)
const-mul-ffffffff in 1 <250617> out 1 <250618> # multiply-by-constant 4294967295
add in 2 <78 250618> out 1 <250619>      # 'CmpLT DFG.Input - DFG.Subtract'
split in 1 <250619> out 270 <250620 250621 250622 250623 250624 250625 250626 250627 250628 250629 250630 250631 250632 250633 250634 250635 250636 250637 250638 250639 250640 250641 250642 250643 250644 250645 250646 250647 250648 250649 250650 250651 250652 250653 250654 250655 250656 250657 250658 250659 250660 250661 250662 250663 250664 250665 250666 250667 250668 250669 250670 250671 250672 250673 250674 250675 250676 250677 250678 250679 250680 250681 250682 250683 250684 250685 250686 250687 250688 250689 250690 250691 250692 250693 250694 250695 250696 250697 250698 250699 250700 250701 250702 250703 250704 250705 250706 250707 250708 250709 250710 250711 250712 250713 250714 250715 250716 250717 250718 250719 250720 250721 250722 250723 250724 250725 250726 250727 250728 250729 250730 250731 250732 250733 250734 250735 250736 250737 250738 250739 250740 250741 250742 250743 250744 250745 250746 250747 250748 250749 250750 250751 250752 250753 250754 250755 250756 250757 250758 250759 250760 250761 250762 250763 250764 250765 250766 250767 250768 250769 250770 250771 250772 250773 250774 250775 250776 250777 250778 250779 250780 250781 250782 250783 250784 250785 250786 250787 250788 250789 250790 250791 250792 250793 250794 250795 250796 250797 250798 250799 250800 250801 250802 250803 250804 250805 250806 250807 250808 250809 250810 250811 250812 250813 250814 250815 250816 250817 250818 250819 250820 250821 250822 250823 250824 250825 250826 250827 250828 250829 250830 250831 250832 250833 250834 250835 250836 250837 250838 250839 250840 250841 250842 250843 250844 250845 250846 250847 250848 250849 250850 250851 250852 250853 250854 250855 250856 250857 250858 250859 250860 250861 250862 250863 250864 250865 250866 250867 250868 250869 250870 250871 250872 250873 250874 250875 250876 250877 250878 250879 250880 250881 250882 250883 250884 250885 250886 250887 250888 250889> # SplitBus
mul in 2 <250651 103> out 1 <250890>     # cond trueterm
const-mul-neg-1 in 1 <250651> out 1 <250891> # cond minuscond
add in 2 <100 250891> out 1 <250892>     # cond negcond
mul in 2 <250892 250616> out 1 <250893>  # cond falseterm
add in 2 <250890 250893> out 1 <250894>  # cond result
const-mul-ffffffff in 1 <77> out 1 <250895> # multiply-by-constant 4294967295
add in 2 <77 78> out 1 <250896>          # ArithBusReq.AddReq(DFG.Input,DFG.Input)
add in 2 <250896 250895> out 1 <250897>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <250897> out 1 <250898> # multiply-by-constant 4294967295
add in 2 <250896 250898> out 1 <250899>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <77> out 1 <250900> # multiply-by-constant 4294967295
add in 2 <78 250900> out 1 <250901>      # 'CmpLT DFG.Input - DFG.Input'
split in 1 <250901> out 65 <250902 250903 250904 250905 250906 250907 250908 250909 250910 250911 250912 250913 250914 250915 250916 250917 250918 250919 250920 250921 250922 250923 250924 250925 250926 250927 250928 250929 250930 250931 250932 250933 250934 250935 250936 250937 250938 250939 250940 250941 250942 250943 250944 250945 250946 250947 250948 250949 250950 250951 250952 250953 250954 250955 250956 250957 250958 250959 250960 250961 250962 250963 250964 250965 250966> # SplitBus
mul in 2 <250933 250899> out 1 <250967>  # cond trueterm
const-mul-neg-1 in 1 <250933> out 1 <250968> # cond minuscond
add in 2 <100 250968> out 1 <250969>     # cond negcond
mul in 2 <250969 78> out 1 <250970>      # cond falseterm
add in 2 <250967 250970> out 1 <250971>  # cond result
const-mul-ffffffff in 1 <250971> out 1 <250972> # multiply-by-constant 4294967295
add in 2 <250971 79> out 1 <250973>      # ArithBusReq.AddReq(DFG.Conditional,DFG.Input)
add in 2 <250973 250972> out 1 <250974>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <250974> out 1 <250975> # multiply-by-constant 4294967295
add in 2 <250973 250975> out 1 <250976>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <250971> out 1 <250977> # multiply-by-constant 4294967295
add in 2 <79 250977> out 1 <250978>      # 'CmpLT DFG.Input - DFG.Conditional'
split in 1 <250978> out 131 <250979 250980 250981 250982 250983 250984 250985 250986 250987 250988 250989 250990 250991 250992 250993 250994 250995 250996 250997 250998 250999 251000 251001 251002 251003 251004 251005 251006 251007 251008 251009 251010 251011 251012 251013 251014 251015 251016 251017 251018 251019 251020 251021 251022 251023 251024 251025 251026 251027 251028 251029 251030 251031 251032 251033 251034 251035 251036 251037 251038 251039 251040 251041 251042 251043 251044 251045 251046 251047 251048 251049 251050 251051 251052 251053 251054 251055 251056 251057 251058 251059 251060 251061 251062 251063 251064 251065 251066 251067 251068 251069 251070 251071 251072 251073 251074 251075 251076 251077 251078 251079 251080 251081 251082 251083 251084 251085 251086 251087 251088 251089 251090 251091 251092 251093 251094 251095 251096 251097 251098 251099 251100 251101 251102 251103 251104 251105 251106 251107 251108 251109> # SplitBus
mul in 2 <251010 250976> out 1 <251110>  # cond trueterm
const-mul-neg-1 in 1 <251010> out 1 <251111> # cond minuscond
add in 2 <100 251111> out 1 <251112>     # cond negcond
mul in 2 <251112 79> out 1 <251113>      # cond falseterm
add in 2 <251110 251113> out 1 <251114>  # cond result
const-mul-ffffffff in 1 <251114> out 1 <251115> # multiply-by-constant 4294967295
add in 2 <251114 80> out 1 <251116>      # ArithBusReq.AddReq(DFG.Conditional,DFG.Input)
add in 2 <251116 251115> out 1 <251117>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <251114> out 1 <251118> # multiply-by-constant 4294967295
add in 2 <80 251118> out 1 <251119>      # 'CmpLT DFG.Input - DFG.Conditional'
split in 1 <251119> out 197 <251120 251121 251122 251123 251124 251125 251126 251127 251128 251129 251130 251131 251132 251133 251134 251135 251136 251137 251138 251139 251140 251141 251142 251143 251144 251145 251146 251147 251148 251149 251150 251151 251152 251153 251154 251155 251156 251157 251158 251159 251160 251161 251162 251163 251164 251165 251166 251167 251168 251169 251170 251171 251172 251173 251174 251175 251176 251177 251178 251179 251180 251181 251182 251183 251184 251185 251186 251187 251188 251189 251190 251191 251192 251193 251194 251195 251196 251197 251198 251199 251200 251201 251202 251203 251204 251205 251206 251207 251208 251209 251210 251211 251212 251213 251214 251215 251216 251217 251218 251219 251220 251221 251222 251223 251224 251225 251226 251227 251228 251229 251230 251231 251232 251233 251234 251235 251236 251237 251238 251239 251240 251241 251242 251243 251244 251245 251246 251247 251248 251249 251250 251251 251252 251253 251254 251255 251256 251257 251258 251259 251260 251261 251262 251263 251264 251265 251266 251267 251268 251269 251270 251271 251272 251273 251274 251275 251276 251277 251278 251279 251280 251281 251282 251283 251284 251285 251286 251287 251288 251289 251290 251291 251292 251293 251294 251295 251296 251297 251298 251299 251300 251301 251302 251303 251304 251305 251306 251307 251308 251309 251310 251311 251312 251313 251314 251315 251316> # SplitBus
mul in 2 <251151 251117> out 1 <251317>  # cond trueterm
const-mul-neg-1 in 1 <251151> out 1 <251318> # cond minuscond
add in 2 <100 251318> out 1 <251319>     # cond negcond
mul in 2 <251319 251114> out 1 <251320>  # cond falseterm
add in 2 <251317 251320> out 1 <251321>  # cond result
mul in 2 <251010 250974> out 1 <251322>  # cond trueterm
const-mul-neg-1 in 1 <251010> out 1 <251323> # cond minuscond
add in 2 <100 251323> out 1 <251324>     # cond negcond
mul in 2 <251324 250971> out 1 <251325>  # cond falseterm
add in 2 <251322 251325> out 1 <251326>  # cond result
mul in 2 <250933 250897> out 1 <251327>  # cond trueterm
const-mul-neg-1 in 1 <250933> out 1 <251328> # cond minuscond
add in 2 <100 251328> out 1 <251329>     # cond negcond
mul in 2 <251329 77> out 1 <251330>      # cond falseterm
add in 2 <251327 251330> out 1 <251331>  # cond result
const-mul-ffffffff in 1 <251331> out 1 <251332> # multiply-by-constant 4294967295
add in 2 <251331 251326> out 1 <251333>  # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
add in 2 <251333 251332> out 1 <251334>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <251334> out 1 <251335> # multiply-by-constant 4294967295
add in 2 <251333 251335> out 1 <251336>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <251331> out 1 <251337> # multiply-by-constant 4294967295
add in 2 <251326 251337> out 1 <251338>  # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <251338> out 132 <251339 251340 251341 251342 251343 251344 251345 251346 251347 251348 251349 251350 251351 251352 251353 251354 251355 251356 251357 251358 251359 251360 251361 251362 251363 251364 251365 251366 251367 251368 251369 251370 251371 251372 251373 251374 251375 251376 251377 251378 251379 251380 251381 251382 251383 251384 251385 251386 251387 251388 251389 251390 251391 251392 251393 251394 251395 251396 251397 251398 251399 251400 251401 251402 251403 251404 251405 251406 251407 251408 251409 251410 251411 251412 251413 251414 251415 251416 251417 251418 251419 251420 251421 251422 251423 251424 251425 251426 251427 251428 251429 251430 251431 251432 251433 251434 251435 251436 251437 251438 251439 251440 251441 251442 251443 251444 251445 251446 251447 251448 251449 251450 251451 251452 251453 251454 251455 251456 251457 251458 251459 251460 251461 251462 251463 251464 251465 251466 251467 251468 251469 251470> # SplitBus
mul in 2 <251370 251336> out 1 <251471>  # cond trueterm
const-mul-neg-1 in 1 <251370> out 1 <251472> # cond minuscond
add in 2 <100 251472> out 1 <251473>     # cond negcond
mul in 2 <251473 251326> out 1 <251474>  # cond falseterm
add in 2 <251471 251474> out 1 <251475>  # cond result
const-mul-ffffffff in 1 <251475> out 1 <251476> # multiply-by-constant 4294967295
add in 2 <251475 251321> out 1 <251477>  # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
add in 2 <251477 251476> out 1 <251478>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <251478> out 1 <251479> # multiply-by-constant 4294967295
add in 2 <251477 251479> out 1 <251480>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <251475> out 1 <251481> # multiply-by-constant 4294967295
add in 2 <251321 251481> out 1 <251482>  # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <251482> out 199 <251483 251484 251485 251486 251487 251488 251489 251490 251491 251492 251493 251494 251495 251496 251497 251498 251499 251500 251501 251502 251503 251504 251505 251506 251507 251508 251509 251510 251511 251512 251513 251514 251515 251516 251517 251518 251519 251520 251521 251522 251523 251524 251525 251526 251527 251528 251529 251530 251531 251532 251533 251534 251535 251536 251537 251538 251539 251540 251541 251542 251543 251544 251545 251546 251547 251548 251549 251550 251551 251552 251553 251554 251555 251556 251557 251558 251559 251560 251561 251562 251563 251564 251565 251566 251567 251568 251569 251570 251571 251572 251573 251574 251575 251576 251577 251578 251579 251580 251581 251582 251583 251584 251585 251586 251587 251588 251589 251590 251591 251592 251593 251594 251595 251596 251597 251598 251599 251600 251601 251602 251603 251604 251605 251606 251607 251608 251609 251610 251611 251612 251613 251614 251615 251616 251617 251618 251619 251620 251621 251622 251623 251624 251625 251626 251627 251628 251629 251630 251631 251632 251633 251634 251635 251636 251637 251638 251639 251640 251641 251642 251643 251644 251645 251646 251647 251648 251649 251650 251651 251652 251653 251654 251655 251656 251657 251658 251659 251660 251661 251662 251663 251664 251665 251666 251667 251668 251669 251670 251671 251672 251673 251674 251675 251676 251677 251678 251679 251680 251681> # SplitBus
mul in 2 <251514 251480> out 1 <251682>  # cond trueterm
const-mul-neg-1 in 1 <251514> out 1 <251683> # cond minuscond
add in 2 <100 251683> out 1 <251684>     # cond negcond
mul in 2 <251684 251321> out 1 <251685>  # cond falseterm
add in 2 <251682 251685> out 1 <251686>  # cond result
const-mul-ffffffff in 1 <251686> out 1 <251687> # multiply-by-constant 4294967295
const-mul-ffffffff in 1 <251117> out 1 <251688> # multiply-by-constant 4294967295
add in 2 <251116 251688> out 1 <251689>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
mul in 2 <251151 251689> out 1 <251690>  # cond trueterm
const-mul-neg-1 in 1 <251151> out 1 <251691> # cond minuscond
add in 2 <100 251691> out 1 <251692>     # cond negcond
mul in 2 <251692 80> out 1 <251693>      # cond falseterm
add in 2 <251690 251693> out 1 <251694>  # cond result
const-mul-ffffffff in 1 <251694> out 1 <251695> # multiply-by-constant 4294967295
add in 2 <251694 81> out 1 <251696>      # ArithBusReq.AddReq(DFG.Conditional,DFG.Input)
split in 1 <251696> outplitBus
const-mul-2 in 1 <251728> out 1 <251928> # join source bit 31
add in 2 <251727 251928> out 1 <251929>  # join source bit 30
const-mul-2 in 1 <251929> out 1 <251930> # join
add in 2 <251726 251930> out 1 <251931>  # join source bit 29
const-mul-2 in 1 <251931> out 1 <251932> # join
add in 2 <251725 251932> out 1 <251933>  # join source bit 28
const-mul-2 in 1 <251933> out 1 <251934> # join
add in 2 <251724 251934> out 1 <251935>  # join source bit 27
const-mul-2 in 1 <251935> out 1 <251936> # join
add in 2 <251723 251936> out 1 <251937>  # join source bit 26
const-mul-2 in 1 <251937> out 1 <251938> # join
add in 2 <251722 251938> out 1 <251939>  # join source bit 25
const-mul-2 in 1 <251939> out 1 <251940> # join
add in 2 <251721 251940> out 1 <251941>  # join source bit 24
const-mul-2 in 1 <251941> out 1 <251942> # join
add in 2 <251720 251942> out 1 <251943>  # join source bit 23
const-mul-2 in 1 <251943> out 1 <251944> # join
add in 2 <251719 251944> out 1 <251945>  # join source bit 22
const-mul-2 in 1 <251945> out 1 <251946> # join
add in 2 <251718 251946> out 1 <251947>  # join source bit 21
const-mul-2 in 1 <251947> out 1 <251948> # join
add in 2 <251717 251948> out 1 <251949>  # join source bit 20
const-mul-2 in 1 <251949> out 1 <251950> # join
add in 2 <251716 251950> out 1 <251951>  # join source bit 19
const-mul-2 in 1 <251951> out 1 <251952> # join
add in 2 <251715 251952> out 1 <251953>  # join source bit 18
const-mul-2 in 1 <251953> out 1 <251954> # join
add in 2 <251714 251954> out 1 <251955>  # join source bit 17
const-mul-2 in 1 <251955> out 1 <251956> # join
add in 2 <251713 251956> out 1 <251957>  # join source bit 16
const-mul-2 in 1 <251957> out 1 <251958> # join
add in 2 <251712 251958> out 1 <251959>  # join source bit 15
const-mul-2 in 1 <251959> out 1 <251960> # join
add in 2 <251711 251960> out 1 <251961>  # join source bit 14
const-mul-2 in 1 <251961> out 1 <251962> # join
add in 2 <251710 251962> out 1 <251963>  # join source bit 13
const-mul-2 in 1 <251963> out 1 <251964> # join
add in 2 <251709 251964> out 1 <251965>  # join source bit 12
const-mul-2 in 1 <251965> out 1 <251966> # join
add in 2 <251708 251966> out 1 <251967>  # join source bit 11
const-mul-2 in 1 <251967> out 1 <251968> # join
add in 2 <251707 251968> out 1 <251969>  # join source bit 10
const-mul-2 in 1 <251969> out 1 <251970> # join
add in 2 <251706 251970> out 1 <251971>  # join source bit 9
const-mul-2 in 1 <251971> out 1 <251972> # join
add in 2 <251705 251972> out 1 <251973>  # join source bit 8
const-mul-2 in 1 <251973> out 1 <251974> # join
add in 2 <251704 251974> out 1 <251975>  # join source bit 7
const-mul-2 in 1 <251975> out 1 <251976> # join
add in 2 <251703 251976> out 1 <251977>  # join source bit 6
const-mul-2 in 1 <251977> out 1 <251978> # join
add in 2 <251702 251978> out 1 <251979>  # join source bit 5
const-mul-2 in 1 <251979> out 1 <251980> # join
add in 2 <251701 251980> out 1 <251981>  # join source bit 4
const-mul-2 in 1 <251981> out 1 <251982> # join
add in 2 <251700 251982> out 1 <251983>  # join source bit 3
const-mul-2 in 1 <251983> out 1 <251984> # join
add in 2 <251699 251984> out 1 <251985>  # join source bit 2
const-mul-2 in 1 <251985> out 1 <251986> # join
add in 2 <251698 251986> out 1 <251987>  # join source bit 1
const-mul-2 in 1 <251987> out 1 <251988> # join
add in 2 <251697 251988> out 1 <251989>  # join source bit 0
add in 2 <251989 251989> out 1 <251990>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <251694> out 1 <251991> # multiply-by-constant 4294967295
add in 2 <81 251991> out 1 <251992>      # 'CmpLT DFG.Input - DFG.Conditional'
split in 1 <251992> outplitBus
mul in 2 <252024 251990> out 1 <252256>  # cond trueterm
const-mul-neg-1 in 1 <252024> out 1 <252257> # cond minuscond
add in 2 <100 252257> out 1 <252258>     # cond negcond
mul in 2 <252258 251694> out 1 <252259>  # cond falseterm
add in 2 <252256 252259> out 1 <252260>  # cond result
add in 2 <251686 252260> out 1 <252261>  # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
split in 1 <252261> out 233 <252262 252263 252264 252265 252266 252267 252268 252269 252270 252271 252272 252273 252274 252275 252276 252277 252278 252279 252280 252281 252282 252283 252284 252285 252286 252287 252288 252289 252290 252291 252292 252293 252294 252295 252296 252297 252298 252299 252300 252301 252302 252303 252304 252305 252306 252307 252308 252309 252310 252311 252312 252313 252314 252315 252316 252317 252318 252319 252320 252321 252322 252323 252324 252325 252326 252327 252328 252329 252330 252331 252332 252333 252334 252335 252336 252337 252338 252339 252340 252341 252342 252343 252344 252345 252346 252347 252348 252349 252350 252351 252352 252353 252354 252355 252356 252357 252358 252359 252360 252361 252362 252363 252364 252365 252366 252367 252368 252369 252370 252371 252372 252373 252374 252375 252376 252377 252378 252379 252380 252381 252382 252383 252384 252385 252386 252387 252388 252389 252390 252391 252392 252393 252394 252395 252396 252397 252398 252399 252400 252401 252402 252403 252404 252405 252406 252407 252408 252409 252410 252411 252412 252413 252414 252415 252416 252417 252418 252419 252420 252421 252422 252423 252424 252425 252426 252427 252428 252429 252430 252431 252432 252433 252434 252435 252436 252437 252438 252439 252440 252441 252442 252443 252444 252445 252446 252447 252448 252449 252450 252451 252452 252453 252454 252455 252456 252457 252458 252459 252460 252461 252462 252463 252464 252465 252466 252467 252468 252469 252470 252471 252472 252473 252474 252475 252476 252477 252478 252479 252480 252481 252482 252483 252484 252485 252486 252487 252488 252489 252490 252491 252492 252493 252494> # SplitBus
const-mul-2 in 1 <252293> out 1 <252495> # join source bit 31
add in 2 <252292 252495> out 1 <252496>  # join source bit 30
const-mul-2 in 1 <252496> out 1 <252497> # join
add in 2 <252291 252497> out 1 <252498>  # join source bit 29
const-mul-2 in 1 <252498> out 1 <252499> # join
add in 2 <252290 252499> out 1 <252500>  # join source bit 28
const-mul-2 in 1 <252500> out 1 <252501> # join
add in 2 <252289 252501> out 1 <252502>  # join source bit 27
const-mul-2 in 1 <252502> out 1 <252503> # join
add in 2 <252288 252503> out 1 <252504>  # join source bit 26
const-mul-2 in 1 <252504> out 1 <252505> # join
add in 2 <252287 252505> out 1 <252506>  # join source bit 25
const-mul-2 in 1 <252506> out 1 <252507> # join
add in 2 <252286 252507> out 1 <252508>  # join source bit 24
const-mul-2 in 1 <252508> out 1 <252509> # join
add in 2 <252285 252509> out 1 <252510>  # join source bit 23
const-mul-2 in 1 <252510> out 1 <252511> # join
add in 2 <252284 252511> out 1 <252512>  # join source bit 22
const-mul-2 in 1 <252512> out 1 <252513> # join
add in 2 <252283 252513> out 1 <252514>  # join source bit 21
const-mul-2 in 1 <252514> out 1 <252515> # join
add in 2 <252282 252515> out 1 <252516>  # join source bit 20
const-mul-2 in 1 <252516> out 1 <252517> # join
add in 2 <252281 252517> out 1 <252518>  # join source bit 19
const-mul-2 in 1 <252518> out 1 <252519> # join
add in 2 <252280 252519> out 1 <252520>  # join source bit 18
const-mul-2 in 1 <252520> out 1 <252521> # join
add in 2 <252279 252521> out 1 <252522>  # join source bit 17
const-mul-2 in 1 <252522> out 1 <252523> # join
add in 2 <252278 252523> out 1 <252524>  # join source bit 16
const-mul-2 in 1 <252524> out 1 <252525> # join
add in 2 <252277 252525> out 1 <252526>  # join source bit 15
const-mul-2 in 1 <252526> out 1 <252527> # join
add in 2 <252276 252527> out 1 <252528>  # join source bit 14
const-mul-2 in 1 <252528> out 1 <252529> # join
add in 2 <252275 252529> out 1 <252530>  # join source bit 13
const-mul-2 in 1 <252530> out 1 <252531> # join
add in 2 <252274 252531> out 1 <252532>  # join source bit 12
const-mul-2 in 1 <252532> out 1 <252533> # join
add in 2 <252273 252533> out 1 <252534>  # join source bit 11
const-mul-2 in 1 <252534> out 1 <252535> # join
add in 2 <252272 252535> out 1 <252536>  # join source bit 10
const-mul-2 in 1 <252536> out 1 <252537> # join
add in 2 <252271 252537> out 1 <252538>  # join source bit 9
const-mul-2 in 1 <252538> out 1 <252539> # join
add in 2 <252270 252539> out 1 <252540>  # join source bit 8
const-mul-2 in 1 <252540> out 1 <252541> # join
add in 2 <252269 252541> out 1 <252542>  # join source bit 7
const-mul-2 in 1 <252542> out 1 <252543> # join
add in 2 <252268 252543> out 1 <252544>  # join source bit 6
const-mul-2 in 1 <252544> out 1 <252545> # join
add in 2 <252267 252545> out 1 <252546>  # join source bit 5
const-mul-2 in 1 <252546> out 1 <252547> # join
add in 2 <252266 252547> out 1 <252548>  # join source bit 4
const-mul-2 in 1 <252548> out 1 <252549> # join
add in 2 <252265 252549> out 1 <252550>  # join source bit 3
const-mul-2 in 1 <252550> out 1 <252551> # join
add in 2 <252264 252551> out 1 <252552>  # join source bit 2
const-mul-2 in 1 <252552> out 1 <252553> # join
add in 2 <252263 252553> out 1 <252554>  # join source bit 1
const-mul-2 in 1 <252554> out 1 <252555> # join
add in 2 <252262 252555> out 1 <252556>  # join source bit 0
add in 2 <252556 252556> out 1 <252557>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <251686> out 1 <252558> # multiply-by-constant 4294967295
add in 2 <252260 252558> out 1 <252559>  # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <252559> out 265 <252560 252561 252562 252563 252564 252565 252566 252567 252568 252569 252570 252571 252572 252573 252574 252575 252576 252577 252578 252579 252580 252581 252582 252583 252584 252585 252586 252587 252588 252589 252590 252591 252592 252593 252594 252595 252596 252597 252598 252599 252600 252601 252602 252603 252604 252605 252606 252607 252608 252609 252610 252611 252612 252613 252614 252615 252616 252617 252618 252619 252620 252621 252622 252623 252624 252625 252626 252627 252628 252629 252630 252631 252632 252633 252634 252635 252636 252637 252638 252639 252640 252641 252642 252643 252644 252645 252646 252647 252648 252649 252650 252651 252652 252653 252654 252655 252656 252657 252658 252659 252660 252661 252662 252663 252664 252665 252666 252667 252668 252669 252670 252671 252672 252673 252674 252675 252676 252677 252678 252679 252680 252681 252682 252683 252684 252685 252686 252687 252688 252689 252690 252691 252692 252693 252694 252695 252696 252697 252698 252699 252700 252701 252702 252703 252704 252705 252706 252707 252708 252709 252710 252711 252712 252713 252714 252715 252716 252717 252718 252719 252720 252721 252722 252723 252724 252725 252726 252727 252728 252729 252730 252731 252732 252733 252734 252735 252736 252737 252738 252739 252740 252741 252742 252743 252744 252745 252746 252747 252748 252749 252750 252751 252752 252753 252754 252755 252756 252757 252758 252759 252760 252761 252762 252763 252764 252765 252766 252767 252768 252769 252770 252771 252772 252773 252774 252775 252776 252777 252778 252779 252780 252781 252782 252783 252784 252785 252786 252787 252788 252789 252790 252791 252792 252793 252794 252795 252796 252797 252798 252799 252800 252801 252802 252803 252804 252805 252806 252807 252808 252809 252810 252811 252812 252813 252814 252815 252816 252817 252818 252819 252820 252821 252822 252823 252824> # SplitBus
mul in 2 <252591 252557> out 1 <252825>  # cond trueterm
const-mul-neg-1 in 1 <252591> out 1 <252826> # cond minuscond
add in 2 <100 252826> out 1 <252827>     # cond negcond
mul in 2 <252827 251686> out 1 <252828>  # cond falseterm
add in 2 <252825 252828> out 1 <252829>  # cond result
mul in 2 <251514 251478> out 1 <252830>  # cond trueterm
const-mul-neg-1 in 1 <251514> out 1 <252831> # cond minuscond
add in 2 <100 252831> out 1 <252832>     # cond negcond
mul in 2 <252832 251475> out 1 <252833>  # cond falseterm
add in 2 <252830 252833> out 1 <252834>  # cond result
mul in 2 <251370 251334> out 1 <252835>  # cond trueterm
const-mul-neg-1 in 1 <251370> out 1 <252836> # cond minuscond
add in 2 <100 252836> out 1 <252837>     # cond negcond
mul in 2 <252837 251331> out 1 <252838>  # cond falseterm
add in 2 <252835 252838> out 1 <252839>  # cond result
const-mul-ffffffff in 1 <252839> out 1 <252840> # multiply-by-constant 4294967295
add in 2 <252839 252834> out 1 <252841>  # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
add in 2 <252841 252840> out 1 <252842>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <252842> out 1 <252843> # multiply-by-constant 4294967295
add in 2 <252841 252843> out 1 <252844>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <252839> out 1 <252845> # multiply-by-constant 4294967295
add in 2 <252834 252845> out 1 <252846>  # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <252846> out 200 <252847 252848 252849 252850 252851 252852 252853 252854 252855 252856 252857 252858 252859 252860 252861 252862 252863 252864 252865 252866 252867 252868 252869 252870 252871 252872 252873 252874 252875 252876 252877 252878 252879 252880 252881 252882 252883 252884 252885 252886 252887 252888 252889 252890 252891 252892 252893 252894 252895 252896 252897 252898 252899 252900 252901 252902 252903 252904 252905 252906 252907 252908 252909 252910 252911 252912 252913 252914 252915 252916 252917 252918 252919 252920 252921 252922 252923 252924 252925 252926 252927 252928 252929 252930 252931 252932 252933 252934 252935 252936 252937 252938 252939 252940 252941 252942 252943 252944 252945 252946 252947 252948 252949 252950 252951 252952 252953 252954 252955 252956 252957 252958 252959 252960 252961 252962 252963 252964 252965 252966 252967 252968 252969 252970 252971 252972 252973 252974 252975 252976 252977 252978 252979 252980 252981 252982 252983 252984 252985 252986 252987 252988 252989 252990 252991 252992 252993 252994 252995 252996 252997 252998 252999 253000 253001 253002 253003 253004 253005 253006 253007 253008 253009 253010 253011 253012 253013 253014 253015 253016 253017 253018 253019 253020 253021 253022 253023 253024 253025 253026 253027 253028 253029 253030 253031 253032 253033 253034 253035 253036 253037 253038 253039 253040 253041 253042 253043 253044 253045 253046> # SplitBus
mul in 2 <252878 252844> out 1 <253047>  # cond trueterm
const-mul-neg-1 in 1 <252878> out 1 <253048> # cond minuscond
add in 2 <100 253048> out 1 <253049>     # cond negcond
mul in 2 <253049 252834> out 1 <253050>  # cond falseterm
add in 2 <253047 253050> out 1 <253051>  # cond result
const-mul-ffffffff in 1 <253051> out 1 <253052> # multiply-by-constant 4294967295
add in 2 <253051 252829> out 1 <253053>  # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
split in 1 <253053> out 235 <253054 253055 253056 253057 253058 253059 253060 253061 253062 253063 253064 253065 253066 253067 253068 253069 253070 253071 253072 253073 253074 253075 253076 253077 253078 253079 253080 253081 253082 253083 253084 253085 253086 253087 253088 253089 253090 253091 253092 253093 253094 253095 253096 253097 253098 253099 253100 253101 253102 253103 253104 253105 253106 253107 253108 253109 253110 253111 253112 253113 253114 253115 253116 253117 253118 253119 253120 253121 253122 253123 253124 253125 253126 253127 253128 253129 253130 253131 253132 253133 253134 253135 253136 253137 253138 253139 253140 253141 253142 253143 253144 253145 253146 253147 253148 253149 253150 253151 253152 253153 253154 253155 253156 253157 253158 253159 253160 253161 253162 253163 253164 253165 253166 253167 253168 253169 253170 253171 253172 253173 253174 253175 253176 253177 253178 253179 253180 253181 253182 253183 253184 253185 253186 253187 253188 253189 253190 253191 253192 253193 253194 253195 253196 253197 253198 253199 253200 253201 253202 253203 253204 253205 253206 253207 253208 253209 253210 253211 253212 253213 253214 253215 253216 253217 253218 253219 253220 253221 253222 253223 253224 253225 253226 253227 253228 253229 253230 253231 253232 253233 253234 253235 253236 253237 253238 253239 253240 253241 253242 253243 253244 253245 253246 253247 253248 253249 253250 253251 253252 253253 253254 253255 253256 253257 253258 253259 253260 253261 253262 253263 253264 253265 253266 253267 253268 253269 253270 253271 253272 253273 253274 253275 253276 253277 253278 253279 253280 253281 253282 253283 253284 253285 253286 253287 253288> # SplitBus
const-mul-2 in 1 <253085> out 1 <253289> # join source bit 31
add in 2 <253084 253289> out 1 <253290>  # join source bit 30
const-mul-2 in 1 <253290> out 1 <253291> # join
add in 2 <253083 253291> out 1 <253292>  # join source bit 29
const-mul-2 in 1 <253292> out 1 <253293> # join
add in 2 <253082 253293> out 1 <253294>  # join source bit 28
const-mul-2 in 1 <253294> out 1 <253295> # join
add in 2 <253081 253295> out 1 <253296>  # join source bit 27
const-mul-2 in 1 <253296> out 1 <253297> # join
add in 2 <253080 253297> out 1 <253298>  # join source bit 26
const-mul-2 in 1 <253298> out 1 <253299> # join
add in 2 <253079 253299> out 1 <253300>  # join source bit 25
const-mul-2 in 1 <253300> out 1 <253301> # join
add in 2 <253078 253301> out 1 <253302>  # join source bit 24
const-mul-2 in 1 <253302> out 1 <253303> # join
add in 2 <253077 253303> out 1 <253304>  # join source bit 23
const-mul-2 in 1 <253304> out 1 <253305> # join
add in 2 <253076 253305> out 1 <253306>  # join source bit 22
const-mul-2 in 1 <253306> out 1 <253307> # join
add in 2 <253075 253307> out 1 <253308>  # join source bit 21
const-mul-2 in 1 <253308> out 1 <253309> # join
add in 2 <253074 253309> out 1 <253310>  # join source bit 20
const-mul-2 in 1 <253310> out 1 <253311> # join
add in 2 <253073 253311> out 1 <253312>  # join source bit 19
const-mul-2 in 1 <253312> out 1 <253313> # join
add in 2 <253072 253313> out 1 <253314>  # join source bit 18
const-mul-2 in 1 <253314> out 1 <253315> # join
add in 2 <253071 253315> out 1 <253316>  # join source bit 17
const-mul-2 in 1 <253316> out 1 <253317> # join
add in 2 <253070 253317> out 1 <253318>  # join source bit 16
const-mul-2 in 1 <253318> out 1 <253319> # join
add in 2 <253069 253319> out 1 <253320>  # join source bit 15
const-mul-2 in 1 <253320> out 1 <253321> # join
add in 2 <253068 253321> out 1 <253322>  # join source bit 14
const-mul-2 in 1 <253322> out 1 <253323> # join
add in 2 <253067 253323> out 1 <253324>  # join source bit 13
const-mul-2 in 1 <253324> out 1 <253325> # join
add in 2 <253066 253325> out 1 <253326>  # join source bit 12
const-mul-2 in 1 <253326> out 1 <253327> # join
add in 2 <253065 253327> out 1 <253328>  # join source bit 11
const-mul-2 in 1 <253328> out 1 <253329> # join
add in 2 <253064 253329> out 1 <253330>  # join source bit 10
const-mul-2 in 1 <253330> out 1 <253331> # join
add in 2 <253063 253331> out 1 <253332>  # join source bit 9
const-mul-2 in 1 <253332> out 1 <253333> # join
add in 2 <253062 253333> out 1 <253334>  # join source bit 8
const-mul-2 in 1 <253334> out 1 <253335> # join
add in 2 <253061 253335> out 1 <253336>  # join source bit 7
const-mul-2 in 1 <253336> out 1 <253337> # join
add in 2 <253060 253337> out 1 <253338>  # join source bit 6
const-mul-2 in 1 <253338> out 1 <253339> # join
add in 2 <253059 253339> out 1 <253340>  # join source bit 5
const-mul-2 in 1 <253340> out 1 <253341> # join
add in 2 <253058 253341> out 1 <253342>  # join source bit 4
const-mul-2 in 1 <253342> out 1 <253343> # join
add in 2 <253057 253343> out 1 <253344>  # join source bit 3
const-mul-2 in 1 <253344> out 1 <253345> # join
add in 2 <253056 253345> out 1 <253346>  # join source bit 2
const-mul-2 in 1 <253346> out 1 <253347> # join
add in 2 <253055 253347> out 1 <253348>  # join source bit 1
const-mul-2 in 1 <253348> out 1 <253349> # join
add in 2 <253054 253349> out 1 <253350>  # join source bit 0
add in 2 <253350 253350> out 1 <253351>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <253351> out 1 <253352> # multiply-by-constant 4294967295
add in 2 <253053 253352> out 1 <253353>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <253051> out 1 <253354> # multiply-by-constant 4294967295
add in 2 <252829 253354> out 1 <253355>  # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <253355> out 267 <253356 253357 253358 253359 253360 253361 253362 253363 253364 253365 253366 253367 253368 253369 253370 253371 253372 253373 253374 253375 253376 253377 253378 253379 253380 253381 253382 253383 253384 253385 253386 253387 253388 253389 253390 253391 253392 253393 253394 253395 253396 253397 253398 253399 253400 253401 253402 253403 253404 253405 253406 253407 253408 253409 253410 253411 253412 253413 253414 253415 253416 253417 253418 253419 253420 253421 253422 253423 253424 253425 253426 253427 253428 253429 253430 253431 253432 253433 253434 253435 253436 253437 253438 253439 253440 253441 253442 253443 253444 253445 253446 253447 253448 253449 253450 253451 253452 253453 253454 253455 253456 253457 253458 253459 253460 253461 253462 253463 253464 253465 253466 253467 253468 253469 253470 253471 253472 253473 253474 253475 253476 253477 253478 253479 253480 253481 253482 253483 253484 253485 253486 253487 253488 253489 253490 253491 253492 253493 253494 253495 253496 253497 253498 253499 253500 253501 253502 253503 253504 253505 253506 253507 253508 253509 253510 253511 253512 253513 253514 253515 253516 253517 253518 253519 253520 253521 253522 253523 253524 253525 253526 253527 253528 253529 253530 253531 253532 253533 253534 253535 253536 253537 253538 253539 253540 253541 253542 253543 253544 253545 253546 253547 253548 253549 253550 253551 253552 253553 253554 253555 253556 253557 253558 253559 253560 253561 253562 253563 253564 253565 253566 253567 253568 253569 253570 253571 253572 253573 253574 253575 253576 253577 253578 253579 253580 253581 253582 253583 253584 253585 253586 253587 253588 253589 253590 253591 253592 253593 253594 253595 253596 253597 253598 253599 253600 253601 253602 253603 253604 253605 253606 253607 253608 253609 253610 253611 253612 253613 253614 253615 253616 253617 253618 253619 253620 253621 253622> # SplitBus
mul in 2 <253387 253353> out 1 <253623>  # cond trueterm
const-mul-neg-1 in 1 <253387> out 1 <253624> # cond minuscond
add in 2 <100 253624> out 1 <253625>     # cond negcond
mul in 2 <253625 252829> out 1 <253626>  # cond falseterm
add in 2 <253623 253626> out 1 <253627>  # cond result
add in 2 <253627 104> out 1 <253628>     # ArithBusReq.AddReq(DFG.Conditional,DFG.Constant)
const-mul-ffffffff in 1 <79> out 1 <253629> # multiply-by-constant 4294967295
add in 2 <253628 253629> out 1 <253630>  # 'CmpLT DFG.Add - DFG.Input'
split in 1 <253630> outplitBus
mul in 2 <253662 103> out 1 <253869>     # cond trueterm
const-mul-neg-1 in 1 <253662> out 1 <253870> # cond minuscond
add in 2 <100 253870> out 1 <253871>     # cond negcond
mul in 2 <253871 102> out 1 <253872>     # cond falseterm
add in 2 <253869 253872> out 1 <253873>  # cond result
add in 2 <253627 3084> out 1 <253874>    # ArithBusReq.AddReq(DFG.Conditional,DFG.Negate)
const-mul-ffffffff in 1 <253874> out 1 <253875> # multiply-by-constant 4294967295
add in 2 <79 253875> out 1 <253876>      # 'CmpLT DFG.Input - DFG.Subtract'
split in 1 <253876> out 270 <253877 253878 253879 253880 253881 253882 253883 253884 253885 253886 253887 253888 253889 253890 253891 253892 253893 253894 253895 253896 253897 253898 253899 253900 253901 253902 253903 253904 253905 253906 253907 253908 253909 253910 253911 253912 253913 253914 253915 253916 253917 253918 253919 253920 253921 253922 253923 253924 253925 253926 253927 253928 253929 253930 253931 253932 253933 253934 253935 253936 253937 253938 253939 253940 253941 253942 253943 253944 253945 253946 253947 253948 253949 253950 253951 253952 253953 253954 253955 253956 253957 253958 253959 253960 253961 253962 253963 253964 253965 253966 253967 253968 253969 253970 253971 253972 253973 253974 253975 253976 253977 253978 253979 253980 253981 253982 253983 253984 253985 253986 253987 253988 253989 253990 253991 253992 253993 253994 253995 253996 253997 253998 253999 254000 254001 254002 254003 254004 254005 254006 254007 254008 254009 254010 254011 254012 254013 254014 254015 254016 254017 254018 254019 254020 254021 254022 254023 254024 254025 254026 254027 254028 254029 254030 254031 254032 254033 254034 254035 254036 254037 254038 254039 254040 254041 254042 254043 254044 254045 254046 254047 254048 254049 254050 254051 254052 254053 254054 254055 254056 254057 254058 254059 254060 254061 254062 254063 254064 254065 254066 254067 254068 254069 254070 254071 254072 254073 254074 254075 254076 254077 254078 254079 254080 254081 254082 254083 254084 254085 254086 254087 254088 254089 254090 254091 254092 254093 254094 254095 254096 254097 254098 254099 254100 254101 254102 254103 254104 254105 254106 254107 254108 254109 254110 254111 254112 254113 254114 254115 254116 254117 254118 254119 254120 254121 254122 254123 254124 254125 254126 254127 254128 254129 254130 254131 254132 254133 254134 254135 254136 254137 254138 254139 254140 254141 254142 254143 254144 254145 254146> # SplitBus
mul in 2 <253908 103> out 1 <254147>     # cond trueterm
const-mul-neg-1 in 1 <253908> out 1 <254148> # cond minuscond
add in 2 <100 254148> out 1 <254149>     # cond negcond
mul in 2 <254149 253873> out 1 <254150>  # cond falseterm
add in 2 <254147 254150> out 1 <254151>  # cond result
const-mul-ffffffff in 1 <78> out 1 <254152> # multiply-by-constant 4294967295
add in 2 <78 79> out 1 <254153>          # ArithBusReq.AddReq(DFG.Input,DFG.Input)
add in 2 <254153 254152> out 1 <254154>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <254154> out 1 <254155> # multiply-by-constant 4294967295
add in 2 <254153 254155> out 1 <254156>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <78> out 1 <254157> # multiply-by-constant 4294967295
add in 2 <79 254157> out 1 <254158>      # 'CmpLT DFG.Input - DFG.Input'
split in 1 <254158> out 65 <254159 254160 254161 254162 254163 254164 254165 254166 254167 254168 254169 254170 254171 254172 254173 254174 254175 254176 254177 254178 254179 254180 254181 254182 254183 254184 254185 254186 254187 254188 254189 254190 254191 254192 254193 254194 254195 254196 254197 254198 254199 254200 254201 254202 254203 254204 254205 254206 254207 254208 254209 254210 254211 254212 254213 254214 254215 254216 254217 254218 254219 254220 254221 254222 254223> # SplitBus
mul in 2 <254190 254156> out 1 <254224>  # cond trueterm
const-mul-neg-1 in 1 <254190> out 1 <254225> # cond minuscond
add in 2 <100 254225> out 1 <254226>     # cond negcond
mul in 2 <254226 79> out 1 <254227>      # cond falseterm
add in 2 <254224 254227> out 1 <254228>  # cond result
const-mul-ffffffff in 1 <254228> out 1 <254229> # multiply-by-constant 4294967295
add in 2 <254228 80> out 1 <254230>      # ArithBusReq.AddReq(DFG.Conditional,DFG.Input)
add in 2 <254230 254229> out 1 <254231>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <254231> out 1 <254232> # multiply-by-constant 4294967295
add in 2 <254230 254232> out 1 <254233>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <254228> out 1 <254234> # multiply-by-constant 4294967295
add in 2 <80 254234> out 1 <254235>      # 'CmpLT DFG.Input - DFG.Conditional'
split in 1 <254235> out 131 <254236 254237 254238 254239 254240 254241 254242 254243 254244 254245 254246 254247 254248 254249 254250 254251 254252 254253 254254 254255 254256 254257 254258 254259 254260 254261 254262 254263 254264 254265 254266 254267 254268 254269 254270 254271 254272 254273 254274 254275 254276 254277 254278 254279 254280 254281 254282 254283 254284 254285 254286 254287 254288 254289 254290 254291 254292 254293 254294 254295 254296 254297 254298 254299 254300 254301 254302 254303 254304 254305 254306 254307 254308 254309 254310 254311 254312 254313 254314 254315 254316 254317 254318 254319 254320 254321 254322 254323 254324 254325 254326 254327 254328 254329 254330 254331 254332 254333 254334 254335 254336 254337 254338 254339 254340 254341 254342 254343 254344 254345 254346 254347 254348 254349 254350 254351 254352 254353 254354 254355 254356 254357 254358 254359 254360 254361 254362 254363 254364 254365 254366> # SplitBus
mul in 2 <254267 254233> out 1 <254367>  # cond trueterm
const-mul-neg-1 in 1 <254267> out 1 <254368> # cond minuscond
add in 2 <100 254368> out 1 <254369>     # cond negcond
mul in 2 <254369 80> out 1 <254370>      # cond falseterm
add in 2 <254367 254370> out 1 <254371>  # cond result
const-mul-ffffffff in 1 <254371> out 1 <254372> # multiply-by-constant 4294967295
add in 2 <254371 81> out 1 <254373>      # ArithBusReq.AddReq(DFG.Conditional,DFG.Input)
add in 2 <254373 254372> out 1 <254374>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <254371> out 1 <254375> # multiply-by-constant 4294967295
add in 2 <81 254375> out 1 <254376>      # 'CmpLT DFG.Input - DFG.Conditional'
split in 1 <254376> out 197 <254377 254378 254379 254380 254381 254382 254383 254384 254385 254386 254387 254388 254389 254390 254391 254392 254393 254394 254395 254396 254397 254398 254399 254400 254401 254402 254403 254404 254405 254406 254407 254408 254409 254410 254411 254412 254413 254414 254415 254416 254417 254418 254419 254420 254421 254422 254423 254424 254425 254426 254427 254428 254429 254430 254431 254432 254433 254434 254435 254436 254437 254438 254439 254440 254441 254442 254443 254444 254445 254446 254447 254448 254449 254450 254451 254452 254453 254454 254455 254456 254457 254458 254459 254460 254461 254462 254463 254464 254465 254466 254467 254468 254469 254470 254471 254472 254473 254474 254475 254476 254477 254478 254479 254480 254481 254482 254483 254484 254485 254486 254487 254488 254489 254490 254491 254492 254493 254494 254495 254496 254497 254498 254499 254500 254501 254502 254503 254504 254505 254506 254507 254508 254509 254510 254511 254512 254513 254514 254515 254516 254517 254518 254519 254520 254521 254522 254523 254524 254525 254526 254527 254528 254529 254530 254531 254532 254533 254534 254535 254536 254537 254538 254539 254540 254541 254542 254543 254544 254545 254546 254547 254548 254549 254550 254551 254552 254553 254554 254555 254556 254557 254558 254559 254560 254561 254562 254563 254564 254565 254566 254567 254568 254569 254570 254571 254572 254573> # SplitBus
mul in 2 <254408 254374> out 1 <254574>  # cond trueterm
const-mul-neg-1 in 1 <254408> out 1 <254575> # cond minuscond
add in 2 <100 254575> out 1 <254576>     # cond negcond
mul in 2 <254576 254371> out 1 <254577>  # cond falseterm
add in 2 <254574 254577> out 1 <254578>  # cond result
mul in 2 <254267 254231> out 1 <254579>  # cond trueterm
const-mul-neg-1 in 1 <254267> out 1 <254580> # cond minuscond
add in 2 <100 254580> out 1 <254581>     # cond negcond
mul in 2 <254581 254228> out 1 <254582>  # cond falseterm
add in 2 <254579 254582> out 1 <254583>  # cond result
mul in 2 <254190 254154> out 1 <254584>  # cond trueterm
const-mul-neg-1 in 1 <254190> out 1 <254585> # cond minuscond
add in 2 <100 254585> out 1 <254586>     # cond negcond
mul in 2 <254586 78> out 1 <254587>      # cond falseterm
add in 2 <254584 254587> out 1 <254588>  # cond result
const-mul-ffffffff in 1 <254588> out 1 <254589> # multiply-by-constant 4294967295
add in 2 <254588 254583> out 1 <254590>  # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
add in 2 <254590 254589> out 1 <254591>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <254591> out 1 <254592> # multiply-by-constant 4294967295
add in 2 <254590 254592> out 1 <254593>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <254588> out 1 <254594> # multiply-by-constant 4294967295
add in 2 <254583 254594> out 1 <254595>  # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <254595> out 132 <254596 254597 254598 254599 254600 254601 254602 254603 254604 254605 254606 254607 254608 254609 254610 254611 254612 254613 254614 254615 254616 254617 254618 254619 254620 254621 254622 254623 254624 254625 254626 254627 254628 254629 254630 254631 254632 254633 254634 254635 254636 254637 254638 254639 254640 254641 254642 254643 254644 254645 254646 254647 254648 254649 254650 254651 254652 254653 254654 254655 254656 254657 254658 254659 254660 254661 254662 254663 254664 254665 254666 254667 254668 254669 254670 254671 254672 254673 254674 254675 254676 254677 254678 254679 254680 254681 254682 254683 254684 254685 254686 254687 254688 254689 254690 254691 254692 254693 254694 254695 254696 254697 254698 254699 254700 254701 254702 254703 254704 254705 254706 254707 254708 254709 254710 254711 254712 254713 254714 254715 254716 254717 254718 254719 254720 254721 254722 254723 254724 254725 254726 254727> # SplitBus
mul in 2 <254627 254593> out 1 <254728>  # cond trueterm
const-mul-neg-1 in 1 <254627> out 1 <254729> # cond minuscond
add in 2 <100 254729> out 1 <254730>     # cond negcond
mul in 2 <254730 254583> out 1 <254731>  # cond falseterm
add in 2 <254728 254731> out 1 <254732>  # cond result
const-mul-ffffffff in 1 <254732> out 1 <254733> # multiply-by-constant 4294967295
add in 2 <254732 254578> out 1 <254734>  # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
add in 2 <254734 254733> out 1 <254735>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <254735> out 1 <254736> # multiply-by-constant 4294967295
add in 2 <254734 254736> out 1 <254737>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <254732> out 1 <254738> # multiply-by-constant 4294967295
add in 2 <254578 254738> out 1 <254739>  # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <254739> out 199 <254740 254741 254742 254743 254744 254745 254746 254747 254748 254749 254750 254751 254752 254753 254754 254755 254756 254757 254758 254759 254760 254761 254762 254763 254764 254765 254766 254767 254768 254769 254770 254771 254772 254773 254774 254775 254776 254777 254778 254779 254780 254781 254782 254783 254784 254785 254786 254787 254788 254789 254790 254791 254792 254793 254794 254795 254796 254797 254798 254799 254800 254801 254802 254803 254804 254805 254806 254807 254808 254809 254810 254811 254812 254813 254814 254815 254816 254817 254818 254819 254820 254821 254822 254823 254824 254825 254826 254827 254828 254829 254830 254831 254832 254833 254834 254835 254836 254837 254838 254839 254840 254841 254842 254843 254844 254845 254846 254847 254848 254849 254850 254851 254852 254853 254854 254855 254856 254857 254858 254859 254860 254861 254862 254863 254864 254865 254866 254867 254868 254869 254870 254871 254872 254873 254874 254875 254876 254877 254878 254879 254880 254881 254882 254883 254884 254885 254886 254887 254888 254889 254890 254891 254892 254893 254894 254895 254896 254897 254898 254899 254900 254901 254902 254903 254904 254905 254906 254907 254908 254909 254910 254911 254912 254913 254914 254915 254916 254917 254918 254919 254920 254921 254922 254923 254924 254925 254926 254927 254928 254929 254930 254931 254932 254933 254934 254935 254936 254937 254938> # SplitBus
mul in 2 <254771 254737> out 1 <254939>  # cond trueterm
const-mul-neg-1 in 1 <254771> out 1 <254940> # cond minuscond
add in 2 <100 254940> out 1 <254941>     # cond negcond
mul in 2 <254941 254578> out 1 <254942>  # cond falseterm
add in 2 <254939 254942> out 1 <254943>  # cond result
const-mul-ffffffff in 1 <254943> out 1 <254944> # multiply-by-constant 4294967295
const-mul-ffffffff in 1 <254374> out 1 <254945> # multiply-by-constant 4294967295
add in 2 <254373 254945> out 1 <254946>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
mul in 2 <254408 254946> out 1 <254947>  # cond trueterm
const-mul-neg-1 in 1 <254408> out 1 <254948> # cond minuscond
add in 2 <100 254948> out 1 <254949>     # cond negcond
mul in 2 <254949 81> out 1 <254950>      # cond falseterm
add in 2 <254947 254950> out 1 <254951>  # cond result
const-mul-ffffffff in 1 <254951> out 1 <254952> # multiply-by-constant 4294967295
add in 2 <254951 82> out 1 <254953>      # ArithBusReq.AddReq(DFG.Conditional,DFG.Input)
split in 1 <254953> out 231 <254954 254955 254956 254957 254958 254959 254960 254961 254962 254963 254964 254965 254966 254967 254968 254969 254970 254971 254972 254973 254974 254975 254976 254977 254978 254979 254980 254981 254982 254983 254984 254985 254986 254987 254988 254989 254990 254991 254992 254993 254994 254995 254996 254997 254998 254999 255000 255001 255002 255003 255004 255005 255006 255007 255008 255009 255010 255011 255012 255013 255014 255015 255016 255017 255018 255019 255020 255021 255022 255023 255024 255025 255026 255027 255028 255029 255030 255031 255032 255033 255034 255035 255036 255037 255038 255039 255040 255041 255042 255043 255044 255045 255046 255047 255048 255049 255050 255051 255052 255053 255054 255055 255056 255057 255058 255059 255060 255061 255062 255063 255064 255065 255066 255067 255068 255069 255070 255071 255072 255073 255074 255075 255076 255077 255078 255079 255080 255081 255082 255083 255084 255085 255086 255087 255088 255089 255090 255091 255092 255093 255094 255095 255096 255097 255098 255099 255100 255101 255102 255103 255104 255105 255106 255107 255108 255109 255110 255111 255112 255113 255114 255115 255116 255117 255118 255119 255120 255121 255122 255123 255124 255125 255126 255127 255128 255129 255130 255131 255132 255133 255134 255135 255136 255137 255138 255139 255140 255141 255142 255143 255144 255145 255146 255147 255148 255149 255150 255151 255152 255153 255154 255155 255156 255157 255158 255159 255160 255161 255162 255163 255164 255165 255166 255167 255168 255169 255170 255171 255172 255173 255174 255175 255176 255177 255178 255179 255180 255181 255182 255183 255184> # SplitBus
const-mul-2 in 1 <254985> out 1 <255185> # join source bit 31
add in 2 <254984 255185> out 1 <255186>  # join source bit 30
const-mul-2 in 1 <255186> out 1 <255187> # join
add in 2 <254983 255187> out 1 <255188>  # join source bit 29
const-mul-2 in 1 <255188> out 1 <255189> # join
add in 2 <254982 255189> out 1 <255190>  # join source bit 28
const-mul-2 in 1 <255190> out 1 <255191> # join
add in 2 <254981 255191> out 1 <255192>  # join source bit 27
const-mul-2 in 1 <255192> out 1 <255193> # join
add in 2 <254980 255193> out 1 <255194>  # join source bit 26
const-mul-2 in 1 <255194> out 1 <255195> # join
add in 2 <254979 255195> out 1 <255196>  # join source bit 25
const-mul-2 in 1 <255196> out 1 <255197> # join
add in 2 <254978 255197> out 1 <255198>  # join source bit 24
const-mul-2 in 1 <255198> out 1 <255199> # join
add in 2 <254977 255199> out 1 <255200>  # join source bit 23
const-mul-2 in 1 <255200> out 1 <255201> # join
add in 2 <254976 255201> out 1 <255202>  # join source bit 22
const-mul-2 in 1 <255202> out 1 <255203> # join
add in 2 <254975 255203> out 1 <255204>  # join source bit 21
const-mul-2 in 1 <255204> out 1 <255205> # join
add in 2 <254974 255205> out 1 <255206>  # join source bit 20
const-mul-2 in 1 <255206> out 1 <255207> # join
add in 2 <254973 255207> out 1 <255208>  # join source bit 19
const-mul-2 in 1 <255208> out 1 <255209> # join
add in 2 <254972 255209> out 1 <255210>  # join source bit 18
const-mul-2 in 1 <255210> out 1 <255211> # join
add in 2 <254971 255211> out 1 <255212>  # join source bit 17
const-mul-2 in 1 <255212> out 1 <255213> # join
add in 2 <254970 255213> out 1 <255214>  # join source bit 16
const-mul-2 in 1 <255214> out 1 <255215> # join
add in 2 <254969 255215> out 1 <255216>  # join source bit 15
const-mul-2 in 1 <255216> out 1 <255217> # join
add in 2 <254968 255217> out 1 <255218>  # join source bit 14
const-mul-2 in 1 <255218> out 1 <255219> # join
add in 2 <254967 255219> out 1 <255220>  # join source bit 13
const-mul-2 in 1 <255220> out 1 <255221> # join
add in 2 <254966 255221> out 1 <255222>  # join source bit 12
const-mul-2 in 1 <255222> out 1 <255223> # join
add in 2 <254965 255223> out 1 <255224>  # join source bit 11
const-mul-2 in 1 <255224> out 1 <255225> # join
add in 2 <254964 255225> out 1 <255226>  # join source bit 10
const-mul-2 in 1 <255226> out 1 <255227> # join
add in 2 <254963 255227> out 1 <255228>  # join source bit 9
const-mul-2 in 1 <255228> out 1 <255229> # join
add in 2 <254962 255229> out 1 <255230>  # join source bit 8
const-mul-2 in 1 <255230> out 1 <255231> # join
add in 2 <254961 255231> out 1 <255232>  # join source bit 7
const-mul-2 in 1 <255232> out 1 <255233> # join
add in 2 <254960 255233> out 1 <255234>  # join source bit 6
const-mul-2 in 1 <255234> out 1 <255235> # join
add in 2 <254959 255235> out 1 <255236>  # join source bit 5
const-mul-2 in 1 <255236> out 1 <255237> # join
add in 2 <254958 255237> out 1 <255238>  # join source bit 4
const-mul-2 in 1 <255238> out 1 <255239> # join
add in 2 <254957 255239> out 1 <255240>  # join source bit 3
const-mul-2 in 1 <255240> out 1 <255241> # join
add in 2 <254956 255241> out 1 <255242>  # join source bit 2
const-mul-2 in 1 <255242> out 1 <255243> # join
add in 2 <254955 255243> out 1 <255244>  # join source bit 1
const-mul-2 in 1 <255244> out 1 <255245> # join
add in 2 <254954 255245> out 1 <255246>  # join source bit 0
add in 2 <255246 255246> out 1 <255247>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <254951> out 1 <255248> # multiply-by-constant 4294967295
add in 2 <82 255248> out 1 <255249>      # 'CmpLT DFG.Input - DFG.Conditional'
split in 1 <255249> out 263 <255250 255251 255252 255253 255254 255255 255256 255257 255258 255259 255260 255261 255262 255263 255264 255265 255266 255267 255268 255269 255270 255271 255272 255273 255274 255275 255276 255277 255278 255279 255280 255281 255282 255283 255284 255285 255286 255287 255288 255289 255290 255291 255292 255293 255294 255295 255296 255297 255298 255299 255300 255301 255302 255303 255304 255305 255306 255307 255308 255309 255310 255311 255312 255313 255314 255315 255316 255317 255318 255319 255320 255321 255322 255323 255324 255325 255326 255327 255328 255329 255330 255331 255332 255333 255334 255335 255336 255337 255338 255339 255340 255341 255342 255343 255344 255345 255346 255347 255348 255349 255350 255351 255352 255353 255354 255355 255356 255357 255358 255359 255360 255361 255362 255363 255364 255365 255366 255367 255368 255369 255370 255371 255372 255373 255374 255375 255376 255377 255378 255379 255380 255381 255382 255383 255384 255385 255386 255387 255388 255389 255390 255391 255392 255393 255394 255395 255396 255397 255398 255399 255400 255401 255402 255403 255404 255405 255406 255407 255408 255409 255410 255411 255412 255413 255414 255415 255416 255417 255418 255419 255420 255421 255422 255423 255424 255425 255426 255427 255428 255429 255430 255431 255432 255433 255434 255435 255436 255437 255438 255439 255440 255441 255442 255443 255444 255445 255446 255447 255448 255449 255450 255451 255452 255453 255454 255455 255456 255457 255458 255459 255460 255461 255462 255463 255464 255465 255466 255467 255468 255469 255470 255471 255472 255473 255474 255475 255476 255477 255478 255479 255480 255481 255482 255483 255484 255485 255486 255487 255488 255489 255490 255491 255492 255493 255494 255495 255496 255497 255498 255499 255500 255501 255502 255503 255504 255505 255506 255507 255508 255509 255510 255511 255512> # SplitBus
mul in 2 <255281 255247> out 1 <255513>  # cond trueterm
const-mul-neg-1 in 1 <255281> out 1 <255514> # cond minuscond
add in 2 <100 255514> out 1 <255515>     # cond negcond
mul in 2 <255515 254951> out 1 <255516>  # cond falseterm
add in 2 <255513 255516> out 1 <255517>  # cond result
add in 2 <254943 255517> out 1 <255518>  # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
split in 1 <255518> outplitBus
const-mul-2 in 1 <255550> out 1 <255752> # join source bit 31
add in 2 <255549 255752> out 1 <255753>  # join source bit 30
const-mul-2 in 1 <255753> out 1 <255754> # join
add in 2 <255548 255754> out 1 <255755>  # join source bit 29
const-mul-2 in 1 <255755> out 1 <255756> # join
add in 2 <255547 255756> out 1 <255757>  # join source bit 28
const-mul-2 in 1 <255757> out 1 <255758> # join
add in 2 <255546 255758> out 1 <255759>  # join source bit 27
const-mul-2 in 1 <255759> out 1 <255760> # join
add in 2 <255545 255760> out 1 <255761>  # join source bit 26
const-mul-2 in 1 <255761> out 1 <255762> # join
add in 2 <255544 255762> out 1 <255763>  # join source bit 25
const-mul-2 in 1 <255763> out 1 <255764> # join
add in 2 <255543 255764> out 1 <255765>  # join source bit 24
const-mul-2 in 1 <255765> out 1 <255766> # join
add in 2 <255542 255766> out 1 <255767>  # join source bit 23
const-mul-2 in 1 <255767> out 1 <255768> # join
add in 2 <255541 255768> out 1 <255769>  # join source bit 22
const-mul-2 in 1 <255769> out 1 <255770> # join
add in 2 <255540 255770> out 1 <255771>  # join source bit 21
const-mul-2 in 1 <255771> out 1 <255772> # join
add in 2 <255539 255772> out 1 <255773>  # join source bit 20
const-mul-2 in 1 <255773> out 1 <255774> # join
add in 2 <255538 255774> out 1 <255775>  # join source bit 19
const-mul-2 in 1 <255775> out 1 <255776> # join
add in 2 <255537 255776> out 1 <255777>  # join source bit 18
const-mul-2 in 1 <255777> out 1 <255778> # join
add in 2 <255536 255778> out 1 <255779>  # join source bit 17
const-mul-2 in 1 <255779> out 1 <255780> # join
add in 2 <255535 255780> out 1 <255781>  # join source bit 16
const-mul-2 in 1 <255781> out 1 <255782> # join
add in 2 <255534 255782> out 1 <255783>  # join source bit 15
const-mul-2 in 1 <255783> out 1 <255784> # join
add in 2 <255533 255784> out 1 <255785>  # join source bit 14
const-mul-2 in 1 <255785> out 1 <255786> # join
add in 2 <255532 255786> out 1 <255787>  # join source bit 13
const-mul-2 in 1 <255787> out 1 <255788> # join
add in 2 <255531 255788> out 1 <255789>  # join source bit 12
const-mul-2 in 1 <255789> out 1 <255790> # join
add in 2 <255530 255790> out 1 <255791>  # join source bit 11
const-mul-2 in 1 <255791> out 1 <255792> # join
add in 2 <255529 255792> out 1 <255793>  # join source bit 10
const-mul-2 in 1 <255793> out 1 <255794> # join
add in 2 <255528 255794> out 1 <255795>  # join source bit 9
const-mul-2 in 1 <255795> out 1 <255796> # join
add in 2 <255527 255796> out 1 <255797>  # join source bit 8
const-mul-2 in 1 <255797> out 1 <255798> # join
add in 2 <255526 255798> out 1 <255799>  # join source bit 7
const-mul-2 in 1 <255799> out 1 <255800> # join
add in 2 <255525 255800> out 1 <255801>  # join source bit 6
const-mul-2 in 1 <255801> out 1 <255802> # join
add in 2 <255524 255802> out 1 <255803>  # join source bit 5
const-mul-2 in 1 <255803> out 1 <255804> # join
add in 2 <255523 255804> out 1 <255805>  # join source bit 4
const-mul-2 in 1 <255805> out 1 <255806> # join
add in 2 <255522 255806> out 1 <255807>  # join source bit 3
const-mul-2 in 1 <255807> out 1 <255808> # join
add in 2 <255521 255808> out 1 <255809>  # join source bit 2
const-mul-2 in 1 <255809> out 1 <255810> # join
add in 2 <255520 255810> out 1 <255811>  # join source bit 1
const-mul-2 in 1 <255811> out 1 <255812> # join
add in 2 <255519 255812> out 1 <255813>  # join source bit 0
add in 2 <255813 255813> out 1 <255814>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <254943> out 1 <255815> # multiply-by-constant 4294967295
add in 2 <255517 255815> out 1 <255816>  # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <255816> out 265 <255817 255818 255819 255820 255821 255822 255823 255824 255825 255826 255827 255828 255829 255830 255831 255832 255833 255834 255835 255836 255837 255838 255839 255840 255841 255842 255843 255844 255845 255846 255847 255848 255849 255850 255851 255852 255853 255854 255855 255856 255857 255858 255859 255860 255861 255862 255863 255864 255865 255866 255867 255868 255869 255870 255871 255872 255873 255874 255875 255876 255877 255878 255879 255880 255881 255882 255883 255884 255885 255886 255887 255888 255889 255890 255891 255892 255893 255894 255895 255896 255897 255898 255899 255900 255901 255902 255903 255904 255905 255906 255907 255908 255909 255910 255911 255912 255913 255914 255915 255916 255917 255918 255919 255920 255921 255922 255923 255924 255925 255926 255927 255928 255929 255930 255931 255932 255933 255934 255935 255936 255937 255938 255939 255940 255941 255942 255943 255944 255945 255946 255947 255948 255949 255950 255951 255952 255953 255954 255955 255956 255957 255958 255959 255960 255961 255962 255963 255964 255965 255966 255967 255968 255969 255970 255971 255972 255973 255974 255975 255976 255977 255978 255979 255980 255981 255982 255983 255984 255985 255986 255987 255988 255989 255990 255991 255992 255993 255994 255995 255996 255997 255998 255999 256000 256001 256002 256003 256004 256005 256006 256007 256008 256009 256010 256011 256012 256013 256014 256015 256016 256017 256018 256019 256020 256021 256022 256023 256024 256025 256026 256027 256028 256029 256030 256031 256032 256033 256034 256035 256036 256037 256038 256039 256040 256041 256042 256043 256044 256045 256046 256047 256048 256049 256050 256051 256052 256053 256054 256055 256056 256057 256058 256059 256060 256061 256062 256063 256064 256065 256066 256067 256068 256069 256070 256071 256072 256073 256074 256075 256076 256077 256078 256079 256080 256081> # SplitBus
mul in 2 <255848 255814> out 1 <256082>  # cond trueterm
const-mul-neg-1 in 1 <255848> out 1 <256083> # cond minuscond
add in 2 <100 256083> out 1 <256084>     # cond negcond
mul in 2 <256084 254943> out 1 <256085>  # cond falseterm
add in 2 <256082 256085> out 1 <256086>  # cond result
mul in 2 <254771 254735> out 1 <256087>  # cond trueterm
const-mul-neg-1 in 1 <254771> out 1 <256088> # cond minuscond
add in 2 <100 256088> out 1 <256089>     # cond negcond
mul in 2 <256089 254732> out 1 <256090>  # cond falseterm
add in 2 <256087 256090> out 1 <256091>  # cond result
mul in 2 <254627 254591> out 1 <256092>  # cond trueterm
const-mul-neg-1 in 1 <254627> out 1 <256093> # cond minuscond
add in 2 <100 256093> out 1 <256094>     # cond negcond
mul in 2 <256094 254588> out 1 <256095>  # cond falseterm
add in 2 <256092 256095> out 1 <256096>  # cond result
const-mul-ffffffff in 1 <256096> out 1 <256097> # multiply-by-constant 4294967295
add in 2 <256096 256091> out 1 <256098>  # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
add in 2 <256098 256097> out 1 <256099>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <256099> out 1 <256100> # multiply-by-constant 4294967295
add in 2 <256098 256100> out 1 <256101>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <256096> out 1 <256102> # multiply-by-constant 4294967295
add in 2 <256091 256102> out 1 <256103>  # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <256103> out 200 <256104 256105 256106 256107 256108 256109 256110 256111 256112 256113 256114 256115 256116 256117 256118 256119 256120 256121 256122 256123 256124 256125 256126 256127 256128 256129 256130 256131 256132 256133 256134 256135 256136 256137 256138 256139 256140 256141 256142 256143 256144 256145 256146 256147 256148 256149 256150 256151 256152 256153 256154 256155 256156 256157 256158 256159 256160 256161 256162 256163 256164 256165 256166 256167 256168 256169 256170 256171 256172 256173 256174 256175 256176 256177 256178 256179 256180 256181 256182 256183 256184 256185 256186 256187 256188 256189 256190 256191 256192 256193 256194 256195 256196 256197 256198 256199 256200 256201 256202 256203 256204 256205 256206 256207 256208 256209 256210 256211 256212 256213 256214 256215 256216 256217 256218 256219 256220 256221 256222 256223 256224 256225 256226 256227 256228 256229 256230 256231 256232 256233 256234 256235 256236 256237 256238 256239 256240 256241 256242 256243 256244 256245 256246 256247 256248 256249 256250 256251 256252 256253 256254 256255 256256 256257 256258 256259 256260 256261 256262 256263 256264 256265 256266 256267 256268 256269 256270 256271 256272 256273 256274 256275 256276 256277 256278 256279 256280 256281 256282 256283 256284 256285 256286 256287 256288 256289 256290 256291 256292 256293 256294 256295 256296 256297 256298 256299 256300 256301 256302 256303> # SplitBus
mul in 2 <256135 256101> out 1 <256304>  # cond trueterm
const-mul-neg-1 in 1 <256135> out 1 <256305> # cond minuscond
add in 2 <100 256305> out 1 <256306>     # cond negcond
mul in 2 <256306 256091> out 1 <256307>  # cond falseterm
add in 2 <256304 256307> out 1 <256308>  # cond result
const-mul-ffffffff in 1 <256308> out 1 <256309> # multiply-by-constant 4294967295
add in 2 <256308 256086> out 1 <256310>  # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
split in 1 <256310> outplitBus
const-mul-2 in 1 <256342> out 1 <256546> # join source bit 31
add in 2 <256341 256546> out 1 <256547>  # join source bit 30
const-mul-2 in 1 <256547> out 1 <256548> # join
add in 2 <256340 256548> out 1 <256549>  # join source bit 29
const-mul-2 in 1 <256549> out 1 <256550> # join
add in 2 <256339 256550> out 1 <256551>  # join source bit 28
const-mul-2 in 1 <256551> out 1 <256552> # join
add in 2 <256338 256552> out 1 <256553>  # join source bit 27
const-mul-2 in 1 <256553> out 1 <256554> # join
add in 2 <256337 256554> out 1 <256555>  # join source bit 26
const-mul-2 in 1 <256555> out 1 <256556> # join
add in 2 <256336 256556> out 1 <256557>  # join source bit 25
const-mul-2 in 1 <256557> out 1 <256558> # join
add in 2 <256335 256558> out 1 <256559>  # join source bit 24
const-mul-2 in 1 <256559> out 1 <256560> # join
add in 2 <256334 256560> out 1 <256561>  # join source bit 23
const-mul-2 in 1 <256561> out 1 <256562> # join
add in 2 <256333 256562> out 1 <256563>  # join source bit 22
const-mul-2 in 1 <256563> out 1 <256564> # join
add in 2 <256332 256564> out 1 <256565>  # join source bit 21
const-mul-2 in 1 <256565> out 1 <256566> # join
add in 2 <256331 256566> out 1 <256567>  # join source bit 20
const-mul-2 in 1 <256567> out 1 <256568> # join
add in 2 <256330 256568> out 1 <256569>  # join source bit 19
const-mul-2 in 1 <256569> out 1 <256570> # join
add in 2 <256329 256570> out 1 <256571>  # join source bit 18
const-mul-2 in 1 <256571> out 1 <256572> # join
add in 2 <256328 256572> out 1 <256573>  # join source bit 17
const-mul-2 in 1 <256573> out 1 <256574> # join
add in 2 <256327 256574> out 1 <256575>  # join source bit 16
const-mul-2 in 1 <256575> out 1 <256576> # join
add in 2 <256326 256576> out 1 <256577>  # join source bit 15
const-mul-2 in 1 <256577> out 1 <256578> # join
add in 2 <256325 256578> out 1 <256579>  # join source bit 14
const-mul-2 in 1 <256579> out 1 <256580> # join
add in 2 <256324 256580> out 1 <256581>  # join source bit 13
const-mul-2 in 1 <256581> out 1 <256582> # join
add in 2 <256323 256582> out 1 <256583>  # join source bit 12
const-mul-2 in 1 <256583> out 1 <256584> # join
add in 2 <256322 256584> out 1 <256585>  # join source bit 11
const-mul-2 in 1 <256585> out 1 <256586> # join
add in 2 <256321 256586> out 1 <256587>  # join source bit 10
const-mul-2 in 1 <256587> out 1 <256588> # join
add in 2 <256320 256588> out 1 <256589>  # join source bit 9
const-mul-2 in 1 <256589> out 1 <256590> # join
add in 2 <256319 256590> out 1 <256591>  # join source bit 8
const-mul-2 in 1 <256591> out 1 <256592> # join
add in 2 <256318 256592> out 1 <256593>  # join source bit 7
const-mul-2 in 1 <256593> out 1 <256594> # join
add in 2 <256317 256594> out 1 <256595>  # join source bit 6
const-mul-2 in 1 <256595> out 1 <256596> # join
add in 2 <256316 256596> out 1 <256597>  # join source bit 5
const-mul-2 in 1 <256597> out 1 <256598> # join
add in 2 <256315 256598> out 1 <256599>  # join source bit 4
const-mul-2 in 1 <256599> out 1 <256600> # join
add in 2 <256314 256600> out 1 <256601>  # join source bit 3
const-mul-2 in 1 <256601> out 1 <256602> # join
add in 2 <256313 256602> out 1 <256603>  # join source bit 2
const-mul-2 in 1 <256603> out 1 <256604> # join
add in 2 <256312 256604> out 1 <256605>  # join source bit 1
const-mul-2 in 1 <256605> out 1 <256606> # join
add in 2 <256311 256606> out 1 <256607>  # join source bit 0
add in 2 <256607 256607> out 1 <256608>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <256608> out 1 <256609> # multiply-by-constant 4294967295
add in 2 <256310 256609> out 1 <256610>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <256308> out 1 <256611> # multiply-by-constant 4294967295
add in 2 <256086 256611> out 1 <256612>  # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <256612> outplitBus
mul in 2 <256644 256610> out 1 <256880>  # cond trueterm
const-mul-neg-1 in 1 <256644> out 1 <256881> # cond minuscond
add in 2 <100 256881> out 1 <256882>     # cond negcond
mul in 2 <256882 256086> out 1 <256883>  # cond falseterm
add in 2 <256880 256883> out 1 <256884>  # cond result
add in 2 <256884 104> out 1 <256885>     # ArithBusReq.AddReq(DFG.Conditional,DFG.Constant)
const-mul-ffffffff in 1 <80> out 1 <256886> # multiply-by-constant 4294967295
add in 2 <256885 256886> out 1 <256887>  # 'CmpLT DFG.Add - DFG.Input'
split in 1 <256887> out 238 <256888 256889 256890 256891 256892 256893 256894 256895 256896 256897 256898 256899 256900 256901 256902 256903 256904 256905 256906 256907 256908 256909 256910 256911 256912 256913 256914 256915 256916 256917 256918 256919 256920 256921 256922 256923 256924 256925 256926 256927 256928 256929 256930 256931 256932 256933 256934 256935 256936 256937 256938 256939 256940 256941 256942 256943 256944 256945 256946 256947 256948 256949 256950 256951 256952 256953 256954 256955 256956 256957 256958 256959 256960 256961 256962 256963 256964 256965 256966 256967 256968 256969 256970 256971 256972 256973 256974 256975 256976 256977 256978 256979 256980 256981 256982 256983 256984 256985 256986 256987 256988 256989 256990 256991 256992 256993 256994 256995 256996 256997 256998 256999 257000 257001 257002 257003 257004 257005 257006 257007 257008 257009 257010 257011 257012 257013 257014 257015 257016 257017 257018 257019 257020 257021 257022 257023 257024 257025 257026 257027 257028 257029 257030 257031 257032 257033 257034 257035 257036 257037 257038 257039 257040 257041 257042 257043 257044 257045 257046 257047 257048 257049 257050 257051 257052 257053 257054 257055 257056 257057 257058 257059 257060 257061 257062 257063 257064 257065 257066 257067 257068 257069 257070 257071 257072 257073 257074 257075 257076 257077 257078 257079 257080 257081 257082 257083 257084 257085 257086 257087 257088 257089 257090 257091 257092 257093 257094 257095 257096 257097 257098 257099 257100 257101 257102 257103 257104 257105 257106 257107 257108 257109 257110 257111 257112 257113 257114 257115 257116 257117 257118 257119 257120 257121 257122 257123 257124 257125> # SplitBus
mul in 2 <256919 103> out 1 <257126>     # cond trueterm
const-mul-neg-1 in 1 <256919> out 1 <257127> # cond minuscond
add in 2 <100 257127> out 1 <257128>     # cond negcond
mul in 2 <257128 102> out 1 <257129>     # cond falseterm
add in 2 <257126 257129> out 1 <257130>  # cond result
add in 2 <256884 3084> out 1 <257131>    # ArithBusReq.AddReq(DFG.Conditional,DFG.Negate)
const-mul-ffffffff in 1 <257131> out 1 <257132> # multiply-by-constant 4294967295
add in 2 <80 257132> out 1 <257133>      # 'CmpLT DFG.Input - DFG.Subtract'
split in 1 <257133> outplitBus
mul in 2 <257165 103> out 1 <257404>     # cond trueterm
const-mul-neg-1 in 1 <257165> out 1 <257405> # cond minuscond
add in 2 <100 257405> out 1 <257406>     # cond negcond
mul in 2 <257406 257130> out 1 <257407>  # cond falseterm
add in 2 <257404 257407> out 1 <257408>  # cond result
const-mul-ffffffff in 1 <79> out 1 <257409> # multiply-by-constant 4294967295
add in 2 <79 80> out 1 <257410>          # ArithBusReq.AddReq(DFG.Input,DFG.Input)
add in 2 <257410 257409> out 1 <257411>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <257411> out 1 <257412> # multiply-by-constant 4294967295
add in 2 <257410 257412> out 1 <257413>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <79> out 1 <257414> # multiply-by-constant 4294967295
add in 2 <80 257414> out 1 <257415>      # 'CmpLT DFG.Input - DFG.Input'
split in 1 <257415> out 65 <257416 257417 257418 257419 257420 257421 257422 257423 257424 257425 257426 257427 257428 257429 257430 257431 257432 257433 257434 257435 257436 257437 257438 257439 257440 257441 257442 257443 257444 257445 257446 257447 257448 257449 257450 257451 257452 257453 257454 257455 257456 257457 257458 257459 257460 257461 257462 257463 257464 257465 257466 257467 257468 257469 257470 257471 257472 257473 257474 257475 257476 257477 257478 257479 257480> # SplitBus
mul in 2 <257447 257413> out 1 <257481>  # cond trueterm
const-mul-neg-1 in 1 <257447> out 1 <257482> # cond minuscond
add in 2 <100 257482> out 1 <257483>     # cond negcond
mul in 2 <257483 80> out 1 <257484>      # cond falseterm
add in 2 <257481 257484> out 1 <257485>  # cond result
const-mul-ffffffff in 1 <257485> out 1 <257486> # multiply-by-constant 4294967295
add in 2 <257485 81> out 1 <257487>      # ArithBusReq.AddReq(DFG.Conditional,DFG.Input)
add in 2 <257487 257486> out 1 <257488>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <257488> out 1 <257489> # multiply-by-constant 4294967295
add in 2 <257487 257489> out 1 <257490>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <257485> out 1 <257491> # multiply-by-constant 4294967295
add in 2 <81 257491> out 1 <257492>      # 'CmpLT DFG.Input - DFG.Conditional'
split in 1 <257492> out 131 <257493 257494 257495 257496 257497 257498 257499 257500 257501 257502 257503 257504 257505 257506 257507 257508 257509 257510 257511 257512 257513 257514 257515 257516 257517 257518 257519 257520 257521 257522 257523 257524 257525 257526 257527 257528 257529 257530 257531 257532 257533 257534 257535 257536 257537 257538 257539 257540 257541 257542 257543 257544 257545 257546 257547 257548 257549 257550 257551 257552 257553 257554 257555 257556 257557 257558 257559 257560 257561 257562 257563 257564 257565 257566 257567 257568 257569 257570 257571 257572 257573 257574 257575 257576 257577 257578 257579 257580 257581 257582 257583 257584 257585 257586 257587 257588 257589 257590 257591 257592 257593 257594 257595 257596 257597 257598 257599 257600 257601 257602 257603 257604 257605 257606 257607 257608 257609 257610 257611 257612 257613 257614 257615 257616 257617 257618 257619 257620 257621 257622 257623> # SplitBus
mul in 2 <257524 257490> out 1 <257624>  # cond trueterm
const-mul-neg-1 in 1 <257524> out 1 <257625> # cond minuscond
add in 2 <100 257625> out 1 <257626>     # cond negcond
mul in 2 <257626 81> out 1 <257627>      # cond falseterm
add in 2 <257624 257627> out 1 <257628>  # cond result
const-mul-ffffffff in 1 <257628> out 1 <257629> # multiply-by-constant 4294967295
add in 2 <257628 82> out 1 <257630>      # ArithBusReq.AddReq(DFG.Conditional,DFG.Input)
add in 2 <257630 257629> out 1 <257631>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <257628> out 1 <257632> # multiply-by-constant 4294967295
add in 2 <82 257632> out 1 <257633>      # 'CmpLT DFG.Input - DFG.Conditional'
split in 1 <257633> out 197 <257634 257635 257636 257637 257638 257639 257640 257641 257642 257643 257644 257645 257646 257647 257648 257649 257650 257651 257652 257653 257654 257655 257656 257657 257658 257659 257660 257661 257662 257663 257664 257665 257666 257667 257668 257669 257670 257671 257672 257673 257674 257675 257676 257677 257678 257679 257680 257681 257682 257683 257684 257685 257686 257687 257688 257689 257690 257691 257692 257693 257694 257695 257696 257697 257698 257699 257700 257701 257702 257703 257704 257705 257706 257707 257708 257709 257710 257711 257712 257713 257714 257715 257716 257717 257718 257719 257720 257721 257722 257723 257724 257725 257726 257727 257728 257729 257730 257731 257732 257733 257734 257735 257736 257737 257738 257739 257740 257741 257742 257743 257744 257745 257746 257747 257748 257749 257750 257751 257752 257753 257754 257755 257756 257757 257758 257759 257760 257761 257762 257763 257764 257765 257766 257767 257768 257769 257770 257771 257772 257773 257774 257775 257776 257777 257778 257779 257780 257781 257782 257783 257784 257785 257786 257787 257788 257789 257790 257791 257792 257793 257794 257795 257796 257797 257798 257799 257800 257801 257802 257803 257804 257805 257806 257807 257808 257809 257810 257811 257812 257813 257814 257815 257816 257817 257818 257819 257820 257821 257822 257823 257824 257825 257826 257827 257828 257829 257830> # SplitBus
mul in 2 <257665 257631> out 1 <257831>  # cond trueterm
const-mul-neg-1 in 1 <257665> out 1 <257832> # cond minuscond
add in 2 <100 257832> out 1 <257833>     # cond negcond
mul in 2 <257833 257628> out 1 <257834>  # cond falseterm
add in 2 <257831 257834> out 1 <257835>  # cond result
mul in 2 <257524 257488> out 1 <257836>  # cond trueterm
const-mul-neg-1 in 1 <257524> out 1 <257837> # cond minuscond
add in 2 <100 257837> out 1 <257838>     # cond negcond
mul in 2 <257838 257485> out 1 <257839>  # cond falseterm
add in 2 <257836 257839> out 1 <257840>  # cond result
mul in 2 <257447 257411> out 1 <257841>  # cond trueterm
const-mul-neg-1 in 1 <257447> out 1 <257842> # cond minuscond
add in 2 <100 257842> out 1 <257843>     # cond negcond
mul in 2 <257843 79> out 1 <257844>      # cond falseterm
add in 2 <257841 257844> out 1 <257845>  # cond result
const-mul-ffffffff in 1 <257845> out 1 <257846> # multiply-by-constant 4294967295
add in 2 <257845 257840> out 1 <257847>  # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
add in 2 <257847 257846> out 1 <257848>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <257848> out 1 <257849> # multiply-by-constant 4294967295
add in 2 <257847 257849> out 1 <257850>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <257845> out 1 <257851> # multiply-by-constant 4294967295
add in 2 <257840 257851> out 1 <257852>  # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <257852> out 132 <257853 257854 257855 257856 257857 257858 257859 257860 257861 257862 257863 257864 257865 257866 257867 257868 257869 257870 257871 257872 257873 257874 257875 257876 257877 257878 257879 257880 257881 257882 257883 257884 257885 257886 257887 257888 257889 257890 257891 257892 257893 257894 257895 257896 257897 257898 257899 257900 257901 257902 257903 257904 257905 257906 257907 257908 257909 257910 257911 257912 257913 257914 257915 257916 257917 257918 257919 257920 257921 257922 257923 257924 257925 257926 257927 257928 257929 257930 257931 257932 257933 257934 257935 257936 257937 257938 257939 257940 257941 257942 257943 257944 257945 257946 257947 257948 257949 257950 257951 257952 257953 257954 257955 257956 257957 257958 257959 257960 257961 257962 257963 257964 257965 257966 257967 257968 257969 257970 257971 257972 257973 257974 257975 257976 257977 257978 257979 257980 257981 257982 257983 257984> # SplitBus
mul in 2 <257884 257850> out 1 <257985>  # cond trueterm
const-mul-neg-1 in 1 <257884> out 1 <257986> # cond minuscond
add in 2 <100 257986> out 1 <257987>     # cond negcond
mul in 2 <257987 257840> out 1 <257988>  # cond falseterm
add in 2 <257985 257988> out 1 <257989>  # cond result
const-mul-ffffffff in 1 <257989> out 1 <257990> # multiply-by-constant 4294967295
add in 2 <257989 257835> out 1 <257991>  # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
add in 2 <257991 257990> out 1 <257992>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <257992> out 1 <257993> # multiply-by-constant 4294967295
add in 2 <257991 257993> out 1 <257994>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <257989> out 1 <257995> # multiply-by-constant 4294967295
add in 2 <257835 257995> out 1 <257996>  # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <257996> out 199 <257997 257998 257999 258000 258001 258002 258003 258004 258005 258006 258007 258008 258009 258010 258011 258012 258013 258014 258015 258016 258017 258018 258019 258020 258021 258022 258023 258024 258025 258026 258027 258028 258029 258030 258031 258032 258033 258034 258035 258036 258037 258038 258039 258040 258041 258042 258043 258044 258045 258046 258047 258048 258049 258050 258051 258052 258053 258054 258055 258056 258057 258058 258059 258060 258061 258062 258063 258064 258065 258066 258067 258068 258069 258070 258071 258072 258073 258074 258075 258076 258077 258078 258079 258080 258081 258082 258083 258084 258085 258086 258087 258088 258089 258090 258091 258092 258093 258094 258095 258096 258097 258098 258099 258100 258101 258102 258103 258104 258105 258106 258107 258108 258109 258110 258111 258112 258113 258114 258115 258116 258117 258118 258119 258120 258121 258122 258123 258124 258125 258126 258127 258128 258129 258130 258131 258132 258133 258134 258135 258136 258137 258138 258139 258140 258141 258142 258143 258144 258145 258146 258147 258148 258149 258150 258151 258152 258153 258154 258155 258156 258157 258158 258159 258160 258161 258162 258163 258164 258165 258166 258167 258168 258169 258170 258171 258172 258173 258174 258175 258176 258177 258178 258179 258180 258181 258182 258183 258184 258185 258186 258187 258188 258189 258190 258191 258192 258193 258194 258195> # SplitBus
mul in 2 <258028 257994> out 1 <258196>  # cond trueterm
const-mul-neg-1 in 1 <258028> out 1 <258197> # cond minuscond
add in 2 <100 258197> out 1 <258198>     # cond negcond
mul in 2 <258198 257835> out 1 <258199>  # cond falseterm
add in 2 <258196 258199> out 1 <258200>  # cond result
const-mul-ffffffff in 1 <258200> out 1 <258201> # multiply-by-constant 4294967295
const-mul-ffffffff in 1 <257631> out 1 <258202> # multiply-by-constant 4294967295
add in 2 <257630 258202> out 1 <258203>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
mul in 2 <257665 258203> out 1 <258204>  # cond trueterm
const-mul-neg-1 in 1 <257665> out 1 <258205> # cond minuscond
add in 2 <100 258205> out 1 <258206>     # cond negcond
mul in 2 <258206 82> out 1 <258207>      # cond falseterm
add in 2 <258204 258207> out 1 <258208>  # cond result
const-mul-ffffffff in 1 <258208> out 1 <258209> # multiply-by-constant 4294967295
add in 2 <258208 83> out 1 <258210>      # ArithBusReq.AddReq(DFG.Conditional,DFG.Input)
split in 1 <258210> outplitBus
const-mul-2 in 1 <258242> out 1 <258442> # join source bit 31
add in 2 <258241 258442> out 1 <258443>  # join source bit 30
const-mul-2 in 1 <258443> out 1 <258444> # join
add in 2 <258240 258444> out 1 <258445>  # join source bit 29
const-mul-2 in 1 <258445> out 1 <258446> # join
add in 2 <258239 258446> out 1 <258447>  # join source bit 28
const-mul-2 in 1 <258447> out 1 <258448> # join
add in 2 <258238 258448> out 1 <258449>  # join source bit 27
const-mul-2 in 1 <258449> out 1 <258450> # join
add in 2 <258237 258450> out 1 <258451>  # join source bit 26
const-mul-2 in 1 <258451> out 1 <258452> # join
add in 2 <258236 258452> out 1 <258453>  # join source bit 25
const-mul-2 in 1 <258453> out 1 <258454> # join
add in 2 <258235 258454> out 1 <258455>  # join source bit 24
const-mul-2 in 1 <258455> out 1 <258456> # join
add in 2 <258234 258456> out 1 <258457>  # join source bit 23
const-mul-2 in 1 <258457> out 1 <258458> # join
add in 2 <258233 258458> out 1 <258459>  # join source bit 22
const-mul-2 in 1 <258459> out 1 <258460> # join
add in 2 <258232 258460> out 1 <258461>  # join source bit 21
const-mul-2 in 1 <258461> out 1 <258462> # join
add in 2 <258231 258462> out 1 <258463>  # join source bit 20
const-mul-2 in 1 <258463> out 1 <258464> # join
add in 2 <258230 258464> out 1 <258465>  # join source bit 19
const-mul-2 in 1 <258465> out 1 <258466> # join
add in 2 <258229 258466> out 1 <258467>  # join source bit 18
const-mul-2 in 1 <258467> out 1 <258468> # join
add in 2 <258228 258468> out 1 <258469>  # join source bit 17
const-mul-2 in 1 <258469> out 1 <258470> # join
add in 2 <258227 258470> out 1 <258471>  # join source bit 16
const-mul-2 in 1 <258471> out 1 <258472> # join
add in 2 <258226 258472> out 1 <258473>  # join source bit 15
const-mul-2 in 1 <258473> out 1 <258474> # join
add in 2 <258225 258474> out 1 <258475>  # join source bit 14
const-mul-2 in 1 <258475> out 1 <258476> # join
add in 2 <258224 258476> out 1 <258477>  # join source bit 13
const-mul-2 in 1 <258477> out 1 <258478> # join
add in 2 <258223 258478> out 1 <258479>  # join source bit 12
const-mul-2 in 1 <258479> out 1 <258480> # join
add in 2 <258222 258480> out 1 <258481>  # join source bit 11
const-mul-2 in 1 <258481> out 1 <258482> # join
add in 2 <258221 258482> out 1 <258483>  # join source bit 10
const-mul-2 in 1 <258483> out 1 <258484> # join
add in 2 <258220 258484> out 1 <258485>  # join source bit 9
const-mul-2 in 1 <258485> out 1 <258486> # join
add in 2 <258219 258486> out 1 <258487>  # join source bit 8
const-mul-2 in 1 <258487> out 1 <258488> # join
add in 2 <258218 258488> out 1 <258489>  # join source bit 7
const-mul-2 in 1 <258489> out 1 <258490> # join
add in 2 <258217 258490> out 1 <258491>  # join source bit 6
const-mul-2 in 1 <258491> out 1 <258492> # join
add in 2 <258216 258492> out 1 <258493>  # join source bit 5
const-mul-2 in 1 <258493> out 1 <258494> # join
add in 2 <258215 258494> out 1 <258495>  # join source bit 4
const-mul-2 in 1 <258495> out 1 <258496> # join
add in 2 <258214 258496> out 1 <258497>  # join source bit 3
const-mul-2 in 1 <258497> out 1 <258498> # join
add in 2 <258213 258498> out 1 <258499>  # join source bit 2
const-mul-2 in 1 <258499> out 1 <258500> # join
add in 2 <258212 258500> out 1 <258501>  # join source bit 1
const-mul-2 in 1 <258501> out 1 <258502> # join
add in 2 <258211 258502> out 1 <258503>  # join source bit 0
add in 2 <258503 258503> out 1 <258504>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <258208> out 1 <258505> # multiply-by-constant 4294967295
add in 2 <83 258505> out 1 <258506>      # 'CmpLT DFG.Input - DFG.Conditional'
split in 1 <258506> outplitBus
mul in 2 <258538 258504> out 1 <258770>  # cond trueterm
const-mul-neg-1 in 1 <258538> out 1 <258771> # cond minuscond
add in 2 <100 258771> out 1 <258772>     # cond negcond
mul in 2 <258772 258208> out 1 <258773>  # cond falseterm
add in 2 <258770 258773> out 1 <258774>  # cond result
add in 2 <258200 258774> out 1 <258775>  # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
split in 1 <258775> out 233 <258776 258777 258778 258779 258780 258781 258782 258783 258784 258785 258786 258787 258788 258789 258790 258791 258792 258793 258794 258795 258796 258797 258798 258799 258800 258801 258802 258803 258804 258805 258806 258807 258808 258809 258810 258811 258812 258813 258814 258815 258816 258817 258818 258819 258820 258821 258822 258823 258824 258825 258826 258827 258828 258829 258830 258831 258832 258833 258834 258835 258836 258837 258838 258839 258840 258841 258842 258843 258844 258845 258846 258847 258848 258849 258850 258851 258852 258853 258854 258855 258856 258857 258858 258859 258860 258861 258862 258863 258864 258865 258866 258867 258868 258869 258870 258871 258872 258873 258874 258875 258876 258877 258878 258879 258880 258881 258882 258883 258884 258885 258886 258887 258888 258889 258890 258891 258892 258893 258894 258895 258896 258897 258898 258899 258900 258901 258902 258903 258904 258905 258906 258907 258908 258909 258910 258911 258912 258913 258914 258915 258916 258917 258918 258919 258920 258921 258922 258923 258924 258925 258926 258927 258928 258929 258930 258931 258932 258933 258934 258935 258936 258937 258938 258939 258940 258941 258942 258943 258944 258945 258946 258947 258948 258949 258950 258951 258952 258953 258954 258955 258956 258957 258958 258959 258960 258961 258962 258963 258964 258965 258966 258967 258968 258969 258970 258971 258972 258973 258974 258975 258976 258977 258978 258979 258980 258981 258982 258983 258984 258985 258986 258987 258988 258989 258990 258991 258992 258993 258994 258995 258996 258997 258998 258999 259000 259001 259002 259003 259004 259005 259006 259007 259008> # SplitBus
const-mul-2 in 1 <258807> out 1 <259009> # join source bit 31
add in 2 <258806 259009> out 1 <259010>  # join source bit 30
const-mul-2 in 1 <259010> out 1 <259011> # join
add in 2 <258805 259011> out 1 <259012>  # join source bit 29
const-mul-2 in 1 <259012> out 1 <259013> # join
add in 2 <258804 259013> out 1 <259014>  # join source bit 28
const-mul-2 in 1 <259014> out 1 <259015> # join
add in 2 <258803 259015> out 1 <259016>  # join source bit 27
const-mul-2 in 1 <259016> out 1 <259017> # join
add in 2 <258802 259017> out 1 <259018>  # join source bit 26
const-mul-2 in 1 <259018> out 1 <259019> # join
add in 2 <258801 259019> out 1 <259020>  # join source bit 25
const-mul-2 in 1 <259020> out 1 <259021> # join
add in 2 <258800 259021> out 1 <259022>  # join source bit 24
const-mul-2 in 1 <259022> out 1 <259023> # join
add in 2 <258799 259023> out 1 <259024>  # join source bit 23
const-mul-2 in 1 <259024> out 1 <259025> # join
add in 2 <258798 259025> out 1 <259026>  # join source bit 22
const-mul-2 in 1 <259026> out 1 <259027> # join
add in 2 <258797 259027> out 1 <259028>  # join source bit 21
const-mul-2 in 1 <259028> out 1 <259029> # join
add in 2 <258796 259029> out 1 <259030>  # join source bit 20
const-mul-2 in 1 <259030> out 1 <259031> # join
add in 2 <258795 259031> out 1 <259032>  # join source bit 19
const-mul-2 in 1 <259032> out 1 <259033> # join
add in 2 <258794 259033> out 1 <259034>  # join source bit 18
const-mul-2 in 1 <259034> out 1 <259035> # join
add in 2 <258793 259035> out 1 <259036>  # join source bit 17
const-mul-2 in 1 <259036> out 1 <259037> # join
add in 2 <258792 259037> out 1 <259038>  # join source bit 16
const-mul-2 in 1 <259038> out 1 <259039> # join
add in 2 <258791 259039> out 1 <259040>  # join source bit 15
const-mul-2 in 1 <259040> out 1 <259041> # join
add in 2 <258790 259041> out 1 <259042>  # join source bit 14
const-mul-2 in 1 <259042> out 1 <259043> # join
add in 2 <258789 259043> out 1 <259044>  # join source bit 13
const-mul-2 in 1 <259044> out 1 <259045> # join
add in 2 <258788 259045> out 1 <259046>  # join source bit 12
const-mul-2 in 1 <259046> out 1 <259047> # join
add in 2 <258787 259047> out 1 <259048>  # join source bit 11
const-mul-2 in 1 <259048> out 1 <259049> # join
add in 2 <258786 259049> out 1 <259050>  # join source bit 10
const-mul-2 in 1 <259050> out 1 <259051> # join
add in 2 <258785 259051> out 1 <259052>  # join source bit 9
const-mul-2 in 1 <259052> out 1 <259053> # join
add in 2 <258784 259053> out 1 <259054>  # join source bit 8
const-mul-2 in 1 <259054> out 1 <259055> # join
add in 2 <258783 259055> out 1 <259056>  # join source bit 7
const-mul-2 in 1 <259056> out 1 <259057> # join
add in 2 <258782 259057> out 1 <259058>  # join source bit 6
const-mul-2 in 1 <259058> out 1 <259059> # join
add in 2 <258781 259059> out 1 <259060>  # join source bit 5
const-mul-2 in 1 <259060> out 1 <259061> # join
add in 2 <258780 259061> out 1 <259062>  # join source bit 4
const-mul-2 in 1 <259062> out 1 <259063> # join
add in 2 <258779 259063> out 1 <259064>  # join source bit 3
const-mul-2 in 1 <259064> out 1 <259065> # join
add in 2 <258778 259065> out 1 <259066>  # join source bit 2
const-mul-2 in 1 <259066> out 1 <259067> # join
add in 2 <258777 259067> out 1 <259068>  # join source bit 1
const-mul-2 in 1 <259068> out 1 <259069> # join
add in 2 <258776 259069> out 1 <259070>  # join source bit 0
add in 2 <259070 259070> out 1 <259071>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <258200> out 1 <259072> # multiply-by-constant 4294967295
add in 2 <258774 259072> out 1 <259073>  # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <259073> out 265 <259074 259075 259076 259077 259078 259079 259080 259081 259082 259083 259084 259085 259086 259087 259088 259089 259090 259091 259092 259093 259094 259095 259096 259097 259098 259099 259100 259101 259102 259103 259104 259105 259106 259107 259108 259109 259110 259111 259112 259113 259114 259115 259116 259117 259118 259119 259120 259121 259122 259123 259124 259125 259126 259127 259128 259129 259130 259131 259132 259133 259134 259135 259136 259137 259138 259139 259140 259141 259142 259143 259144 259145 259146 259147 259148 259149 259150 259151 259152 259153 259154 259155 259156 259157 259158 259159 259160 259161 259162 259163 259164 259165 259166 259167 259168 259169 259170 259171 259172 259173 259174 259175 259176 259177 259178 259179 259180 259181 259182 259183 259184 259185 259186 259187 259188 259189 259190 259191 259192 259193 259194 259195 259196 259197 259198 259199 259200 259201 259202 259203 259204 259205 259206 259207 259208 259209 259210 259211 259212 259213 259214 259215 259216 259217 259218 259219 259220 259221 259222 259223 259224 259225 259226 259227 259228 259229 259230 259231 259232 259233 259234 259235 259236 259237 259238 259239 259240 259241 259242 259243 259244 259245 259246 259247 259248 259249 259250 259251 259252 259253 259254 259255 259256 259257 259258 259259 259260 259261 259262 259263 259264 259265 259266 259267 259268 259269 259270 259271 259272 259273 259274 259275 259276 259277 259278 259279 259280 259281 259282 259283 259284 259285 259286 259287 259288 259289 259290 259291 259292 259293 259294 259295 259296 259297 259298 259299 259300 259301 259302 259303 259304 259305 259306 259307 259308 259309 259310 259311 259312 259313 259314 259315 259316 259317 259318 259319 259320 259321 259322 259323 259324 259325 259326 259327 259328 259329 259330 259331 259332 259333 259334 259335 259336 259337 259338> # SplitBus
mul in 2 <259105 259071> out 1 <259339>  # cond trueterm
const-mul-neg-1 in 1 <259105> out 1 <259340> # cond minuscond
add in 2 <100 259340> out 1 <259341>     # cond negcond
mul in 2 <259341 258200> out 1 <259342>  # cond falseterm
add in 2 <259339 259342> out 1 <259343>  # cond result
mul in 2 <258028 257992> out 1 <259344>  # cond trueterm
const-mul-neg-1 in 1 <258028> out 1 <259345> # cond minuscond
add in 2 <100 259345> out 1 <259346>     # cond negcond
mul in 2 <259346 257989> out 1 <259347>  # cond falseterm
add in 2 <259344 259347> out 1 <259348>  # cond result
mul in 2 <257884 257848> out 1 <259349>  # cond trueterm
const-mul-neg-1 in 1 <257884> out 1 <259350> # cond minuscond
add in 2 <100 259350> out 1 <259351>     # cond negcond
mul in 2 <259351 257845> out 1 <259352>  # cond falseterm
add in 2 <259349 259352> out 1 <259353>  # cond result
const-mul-ffffffff in 1 <259353> out 1 <259354> # multiply-by-constant 4294967295
add in 2 <259353 259348> out 1 <259355>  # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
add in 2 <259355 259354> out 1 <259356>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <259356> out 1 <259357> # multiply-by-constant 4294967295
add in 2 <259355 259357> out 1 <259358>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <259353> out 1 <259359> # multiply-by-constant 4294967295
add in 2 <259348 259359> out 1 <259360>  # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <259360> out 200 <259361 259362 259363 259364 259365 259366 259367 259368 259369 259370 259371 259372 259373 259374 259375 259376 259377 259378 259379 259380 259381 259382 259383 259384 259385 259386 259387 259388 259389 259390 259391 259392 259393 259394 259395 259396 259397 259398 259399 259400 259401 259402 259403 259404 259405 259406 259407 259408 259409 259410 259411 259412 259413 259414 259415 259416 259417 259418 259419 259420 259421 259422 259423 259424 259425 259426 259427 259428 259429 259430 259431 259432 259433 259434 259435 259436 259437 259438 259439 259440 259441 259442 259443 259444 259445 259446 259447 259448 259449 259450 259451 259452 259453 259454 259455 259456 259457 259458 259459 259460 259461 259462 259463 259464 259465 259466 259467 259468 259469 259470 259471 259472 259473 259474 259475 259476 259477 259478 259479 259480 259481 259482 259483 259484 259485 259486 259487 259488 259489 259490 259491 259492 259493 259494 259495 259496 259497 259498 259499 259500 259501 259502 259503 259504 259505 259506 259507 259508 259509 259510 259511 259512 259513 259514 259515 259516 259517 259518 259519 259520 259521 259522 259523 259524 259525 259526 259527 259528 259529 259530 259531 259532 259533 259534 259535 259536 259537 259538 259539 259540 259541 259542 259543 259544 259545 259546 259547 259548 259549 259550 259551 259552 259553 259554 259555 259556 259557 259558 259559 259560> # SplitBus
mul in 2 <259392 259358> out 1 <259561>  # cond trueterm
const-mul-neg-1 in 1 <259392> out 1 <259562> # cond minuscond
add in 2 <100 259562> out 1 <259563>     # cond negcond
mul in 2 <259563 259348> out 1 <259564>  # cond falseterm
add in 2 <259561 259564> out 1 <259565>  # cond result
const-mul-ffffffff in 1 <259565> out 1 <259566> # multiply-by-constant 4294967295
add in 2 <259565 259343> out 1 <259567>  # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
split in 1 <259567> out 235 <259568 259569 259570 259571 259572 259573 259574 259575 259576 259577 259578 259579 259580 259581 259582 259583 259584 259585 259586 259587 259588 259589 259590 259591 259592 259593 259594 259595 259596 259597 259598 259599 259600 259601 259602 259603 259604 259605 259606 259607 259608 259609 259610 259611 259612 259613 259614 259615 259616 259617 259618 259619 259620 259621 259622 259623 259624 259625 259626 259627 259628 259629 259630 259631 259632 259633 259634 259635 259636 259637 259638 259639 259640 259641 259642 259643 259644 259645 259646 259647 259648 259649 259650 259651 259652 259653 259654 259655 259656 259657 259658 259659 259660 259661 259662 259663 259664 259665 259666 259667 259668 259669 259670 259671 259672 259673 259674 259675 259676 259677 259678 259679 259680 259681 259682 259683 259684 259685 259686 259687 259688 259689 259690 259691 259692 259693 259694 259695 259696 259697 259698 259699 259700 259701 259702 259703 259704 259705 259706 259707 259708 259709 259710 259711 259712 259713 259714 259715 259716 259717 259718 259719 259720 259721 259722 259723 259724 259725 259726 259727 259728 259729 259730 259731 259732 259733 259734 259735 259736 259737 259738 259739 259740 259741 259742 259743 259744 259745 259746 259747 259748 259749 259750 259751 259752 259753 259754 259755 259756 259757 259758 259759 259760 259761 259762 259763 259764 259765 259766 259767 259768 259769 259770 259771 259772 259773 259774 259775 259776 259777 259778 259779 259780 259781 259782 259783 259784 259785 259786 259787 259788 259789 259790 259791 259792 259793 259794 259795 259796 259797 259798 259799 259800 259801 259802> # SplitBus
const-mul-2 in 1 <259599> out 1 <259803> # join source bit 31
add in 2 <259598 259803> out 1 <259804>  # join source bit 30
const-mul-2 in 1 <259804> out 1 <259805> # join
add in 2 <259597 259805> out 1 <259806>  # join source bit 29
const-mul-2 in 1 <259806> out 1 <259807> # join
add in 2 <259596 259807> out 1 <259808>  # join source bit 28
const-mul-2 in 1 <259808> out 1 <259809> # join
add in 2 <259595 259809> out 1 <259810>  # join source bit 27
const-mul-2 in 1 <259810> out 1 <259811> # join
add in 2 <259594 259811> out 1 <259812>  # join source bit 26
const-mul-2 in 1 <259812> out 1 <259813> # join
add in 2 <259593 259813> out 1 <259814>  # join source bit 25
const-mul-2 in 1 <259814> out 1 <259815> # join
add in 2 <259592 259815> out 1 <259816>  # join source bit 24
const-mul-2 in 1 <259816> out 1 <259817> # join
add in 2 <259591 259817> out 1 <259818>  # join source bit 23
const-mul-2 in 1 <259818> out 1 <259819> # join
add in 2 <259590 259819> out 1 <259820>  # join source bit 22
const-mul-2 in 1 <259820> out 1 <259821> # join
add in 2 <259589 259821> out 1 <259822>  # join source bit 21
const-mul-2 in 1 <259822> out 1 <259823> # join
add in 2 <259588 259823> out 1 <259824>  # join source bit 20
const-mul-2 in 1 <259824> out 1 <259825> # join
add in 2 <259587 259825> out 1 <259826>  # join source bit 19
const-mul-2 in 1 <259826> out 1 <259827> # join
add in 2 <259586 259827> out 1 <259828>  # join source bit 18
const-mul-2 in 1 <259828> out 1 <259829> # join
add in 2 <259585 259829> out 1 <259830>  # join source bit 17
const-mul-2 in 1 <259830> out 1 <259831> # join
add in 2 <259584 259831> out 1 <259832>  # join source bit 16
const-mul-2 in 1 <259832> out 1 <259833> # join
add in 2 <259583 259833> out 1 <259834>  # join source bit 15
const-mul-2 in 1 <259834> out 1 <259835> # join
add in 2 <259582 259835> out 1 <259836>  # join source bit 14
const-mul-2 in 1 <259836> out 1 <259837> # join
add in 2 <259581 259837> out 1 <259838>  # join source bit 13
const-mul-2 in 1 <259838> out 1 <259839> # join
add in 2 <259580 259839> out 1 <259840>  # join source bit 12
const-mul-2 in 1 <259840> out 1 <259841> # join
add in 2 <259579 259841> out 1 <259842>  # join source bit 11
const-mul-2 in 1 <259842> out 1 <259843> # join
add in 2 <259578 259843> out 1 <259844>  # join source bit 10
const-mul-2 in 1 <259844> out 1 <259845> # join
add in 2 <259577 259845> out 1 <259846>  # join source bit 9
const-mul-2 in 1 <259846> out 1 <259847> # join
add in 2 <259576 259847> out 1 <259848>  # join source bit 8
const-mul-2 in 1 <259848> out 1 <259849> # join
add in 2 <259575 259849> out 1 <259850>  # join source bit 7
const-mul-2 in 1 <259850> out 1 <259851> # join
add in 2 <259574 259851> out 1 <259852>  # join source bit 6
const-mul-2 in 1 <259852> out 1 <259853> # join
add in 2 <259573 259853> out 1 <259854>  # join source bit 5
const-mul-2 in 1 <259854> out 1 <259855> # join
add in 2 <259572 259855> out 1 <259856>  # join source bit 4
const-mul-2 in 1 <259856> out 1 <259857> # join
add in 2 <259571 259857> out 1 <259858>  # join source bit 3
const-mul-2 in 1 <259858> out 1 <259859> # join
add in 2 <259570 259859> out 1 <259860>  # join source bit 2
const-mul-2 in 1 <259860> out 1 <259861> # join
add in 2 <259569 259861> out 1 <259862>  # join source bit 1
const-mul-2 in 1 <259862> out 1 <259863> # join
add in 2 <259568 259863> out 1 <259864>  # join source bit 0
add in 2 <259864 259864> out 1 <259865>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <259865> out 1 <259866> # multiply-by-constant 4294967295
add in 2 <259567 259866> out 1 <259867>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <259565> out 1 <259868> # multiply-by-constant 4294967295
add in 2 <259343 259868> out 1 <259869>  # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <259869> out 267 <259870 259871 259872 259873 259874 259875 259876 259877 259878 259879 259880 259881 259882 259883 259884 259885 259886 259887 259888 259889 259890 259891 259892 259893 259894 259895 259896 259897 259898 259899 259900 259901 259902 259903 259904 259905 259906 259907 259908 259909 259910 259911 259912 259913 259914 259915 259916 259917 259918 259919 259920 259921 259922 259923 259924 259925 259926 259927 259928 259929 259930 259931 259932 259933 259934 259935 259936 259937 259938 259939 259940 259941 259942 259943 259944 259945 259946 259947 259948 259949 259950 259951 259952 259953 259954 259955 259956 259957 259958 259959 259960 259961 259962 259963 259964 259965 259966 259967 259968 259969 259970 259971 259972 259973 259974 259975 259976 259977 259978 259979 259980 259981 259982 259983 259984 259985 259986 259987 259988 259989 259990 259991 259992 259993 259994 259995 259996 259997 259998 259999 260000 260001 260002 260003 260004 260005 260006 260007 260008 260009 260010 260011 260012 260013 260014 260015 260016 260017 260018 260019 260020 260021 260022 260023 260024 260025 260026 260027 260028 260029 260030 260031 260032 260033 260034 260035 260036 260037 260038 260039 260040 260041 260042 260043 260044 260045 260046 260047 260048 260049 260050 260051 260052 260053 260054 260055 260056 260057 260058 260059 260060 260061 260062 260063 260064 260065 260066 260067 260068 260069 260070 260071 260072 260073 260074 260075 260076 260077 260078 260079 260080 260081 260082 260083 260084 260085 260086 260087 260088 260089 260090 260091 260092 260093 260094 260095 260096 260097 260098 260099 260100 260101 260102 260103 260104 260105 260106 260107 260108 260109 260110 260111 260112 260113 260114 260115 260116 260117 260118 260119 260120 260121 260122 260123 260124 260125 260126 260127 260128 260129 260130 260131 260132 260133 260134 260135 260136> # SplitBus
mul in 2 <259901 259867> out 1 <260137>  # cond trueterm
const-mul-neg-1 in 1 <259901> out 1 <260138> # cond minuscond
add in 2 <100 260138> out 1 <260139>     # cond negcond
mul in 2 <260139 259343> out 1 <260140>  # cond falseterm
add in 2 <260137 260140> out 1 <260141>  # cond result
add in 2 <260141 104> out 1 <260142>     # ArithBusReq.AddReq(DFG.Conditional,DFG.Constant)
const-mul-ffffffff in 1 <81> out 1 <260143> # multiply-by-constant 4294967295
add in 2 <260142 260143> out 1 <260144>  # 'CmpLT DFG.Add - DFG.Input'
split in 1 <260144> out 238 <260145 260146 260147 260148 260149 260150 260151 260152 260153 260154 260155 260156 260157 260158 260159 260160 260161 260162 260163 260164 260165 260166 260167 260168 260169 260170 260171 260172 260173 260174 260175 260176 260177 260178 260179 260180 260181 260182 260183 260184 260185 260186 260187 260188 260189 260190 260191 260192 260193 260194 260195 260196 260197 260198 260199 260200 260201 260202 260203 260204 260205 260206 260207 260208 260209 260210 260211 260212 260213 260214 260215 260216 260217 260218 260219 260220 260221 260222 260223 260224 260225 260226 260227 260228 260229 260230 260231 260232 260233 260234 260235 260236 260237 260238 260239 260240 260241 260242 260243 260244 260245 260246 260247 260248 260249 260250 260251 260252 260253 260254 260255 260256 260257 260258 260259 260260 260261 260262 260263 260264 260265 260266 260267 260268 260269 260270 260271 260272 260273 260274 260275 260276 260277 260278 260279 260280 260281 260282 260283 260284 260285 260286 260287 260288 260289 260290 260291 260292 260293 260294 260295 260296 260297 260298 260299 260300 260301 260302 260303 260304 260305 260306 260307 260308 260309 260310 260311 260312 260313 260314 260315 260316 260317 260318 260319 260320 260321 260322 260323 260324 260325 260326 260327 260328 260329 260330 260331 260332 260333 260334 260335 260336 260337 260338 260339 260340 260341 260342 260343 260344 260345 260346 260347 260348 260349 260350 260351 260352 260353 260354 260355 260356 260357 260358 260359 260360 260361 260362 260363 260364 260365 260366 260367 260368 260369 260370 260371 260372 260373 260374 260375 260376 260377 260378 260379 260380 260381 260382> # SplitBus
mul in 2 <260176 103> out 1 <260383>     # cond trueterm
const-mul-neg-1 in 1 <260176> out 1 <260384> # cond minuscond
add in 2 <100 260384> out 1 <260385>     # cond negcond
mul in 2 <260385 102> out 1 <260386>     # cond falseterm
add in 2 <260383 260386> out 1 <260387>  # cond result
add in 2 <260141 3084> out 1 <260388>    # ArithBusReq.AddReq(DFG.Conditional,DFG.Negate)
const-mul-ffffffff in 1 <260388> out 1 <260389> # multiply-by-constant 4294967295
add in 2 <81 260389> out 1 <260390>      # 'CmpLT DFG.Input - DFG.Subtract'
split in 1 <260390> out 270 <260391 260392 260393 260394 260395 260396 260397 260398 260399 260400 260401 260402 260403 260404 260405 260406 260407 260408 260409 260410 260411 260412 260413 260414 260415 260416 260417 260418 260419 260420 260421 260422 260423 260424 260425 260426 260427 260428 260429 260430 260431 260432 260433 260434 260435 260436 260437 260438 260439 260440 260441 260442 260443 260444 260445 260446 260447 260448 260449 260450 260451 260452 260453 260454 260455 260456 260457 260458 260459 260460 260461 260462 260463 260464 260465 260466 260467 260468 260469 260470 260471 260472 260473 260474 260475 260476 260477 260478 260479 260480 260481 260482 260483 260484 260485 260486 260487 260488 260489 260490 260491 260492 260493 260494 260495 260496 260497 260498 260499 260500 260501 260502 260503 260504 260505 260506 260507 260508 260509 260510 260511 260512 260513 260514 260515 260516 260517 260518 260519 260520 260521 260522 260523 260524 260525 260526 260527 260528 260529 260530 260531 260532 260533 260534 260535 260536 260537 260538 260539 260540 260541 260542 260543 260544 260545 260546 260547 260548 260549 260550 260551 260552 260553 260554 260555 260556 260557 260558 260559 260560 260561 260562 260563 260564 260565 260566 260567 260568 260569 260570 260571 260572 260573 260574 260575 260576 260577 260578 260579 260580 260581 260582 260583 260584 260585 260586 260587 260588 260589 260590 260591 260592 260593 260594 260595 260596 260597 260598 260599 260600 260601 260602 260603 260604 260605 260606 260607 260608 260609 260610 260611 260612 260613 260614 260615 260616 260617 260618 260619 260620 260621 260622 260623 260624 260625 260626 260627 260628 260629 260630 260631 260632 260633 260634 260635 260636 260637 260638 260639 260640 260641 260642 260643 260644 260645 260646 260647 260648 260649 260650 260651 260652 260653 260654 260655 260656 260657 260658 260659 260660> # SplitBus
mul in 2 <260422 103> out 1 <260661>     # cond trueterm
const-mul-neg-1 in 1 <260422> out 1 <260662> # cond minuscond
add in 2 <100 260662> out 1 <260663>     # cond negcond
mul in 2 <260663 260387> out 1 <260664>  # cond falseterm
add in 2 <260661 260664> out 1 <260665>  # cond result
const-mul-ffffffff in 1 <80> out 1 <260666> # multiply-by-constant 4294967295
add in 2 <80 81> out 1 <260667>          # ArithBusReq.AddReq(DFG.Input,DFG.Input)
add in 2 <260667 260666> out 1 <260668>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <260668> out 1 <260669> # multiply-by-constant 4294967295
add in 2 <260667 260669> out 1 <260670>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <80> out 1 <260671> # multiply-by-constant 4294967295
add in 2 <81 260671> out 1 <260672>      # 'CmpLT DFG.Input - DFG.Input'
split in 1 <260672> out 65 <260673 260674 260675 260676 260677 260678 260679 260680 260681 260682 260683 260684 260685 260686 260687 260688 260689 260690 260691 260692 260693 260694 260695 260696 260697 260698 260699 260700 260701 260702 260703 260704 260705 260706 260707 260708 260709 260710 260711 260712 260713 260714 260715 260716 260717 260718 260719 260720 260721 260722 260723 260724 260725 260726 260727 260728 260729 260730 260731 260732 260733 260734 260735 260736 260737> # SplitBus
mul in 2 <260704 260670> out 1 <260738>  # cond trueterm
const-mul-neg-1 in 1 <260704> out 1 <260739> # cond minuscond
add in 2 <100 260739> out 1 <260740>     # cond negcond
mul in 2 <260740 81> out 1 <260741>      # cond falseterm
add in 2 <260738 260741> out 1 <260742>  # cond result
const-mul-ffffffff in 1 <260742> out 1 <260743> # multiply-by-constant 4294967295
add in 2 <260742 82> out 1 <260744>      # ArithBusReq.AddReq(DFG.Conditional,DFG.Input)
add in 2 <260744 260743> out 1 <260745>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <260745> out 1 <260746> # multiply-by-constant 4294967295
add in 2 <260744 260746> out 1 <260747>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <260742> out 1 <260748> # multiply-by-constant 4294967295
add in 2 <82 260748> out 1 <260749>      # 'CmpLT DFG.Input - DFG.Conditional'
split in 1 <260749> out 131 <260750 260751 260752 260753 260754 260755 260756 260757 260758 260759 260760 260761 260762 260763 260764 260765 260766 260767 260768 260769 260770 260771 260772 260773 260774 260775 260776 260777 260778 260779 260780 260781 260782 260783 260784 260785 260786 260787 260788 260789 260790 260791 260792 260793 260794 260795 260796 260797 260798 260799 260800 260801 260802 260803 260804 260805 260806 260807 260808 260809 260810 260811 260812 260813 260814 260815 260816 260817 260818 260819 260820 260821 260822 260823 260824 260825 260826 260827 260828 260829 260830 260831 260832 260833 260834 260835 260836 260837 260838 260839 260840 260841 260842 260843 260844 260845 260846 260847 260848 260849 260850 260851 260852 260853 260854 260855 260856 260857 260858 260859 260860 260861 260862 260863 260864 260865 260866 260867 260868 260869 260870 260871 260872 260873 260874 260875 260876 260877 260878 260879 260880> # SplitBus
mul in 2 <260781 260747> out 1 <260881>  # cond trueterm
const-mul-neg-1 in 1 <260781> out 1 <260882> # cond minuscond
add in 2 <100 260882> out 1 <260883>     # cond negcond
mul in 2 <260883 82> out 1 <260884>      # cond falseterm
add in 2 <260881 260884> out 1 <260885>  # cond result
const-mul-ffffffff in 1 <260885> out 1 <260886> # multiply-by-constant 4294967295
add in 2 <260885 83> out 1 <260887>      # ArithBusReq.AddReq(DFG.Conditional,DFG.Input)
add in 2 <260887 260886> out 1 <260888>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <260885> out 1 <260889> # multiply-by-constant 4294967295
add in 2 <83 260889> out 1 <260890>      # 'CmpLT DFG.Input - DFG.Conditional'
split in 1 <260890> out 197 <260891 260892 260893 260894 260895 260896 260897 260898 260899 260900 260901 260902 260903 260904 260905 260906 260907 260908 260909 260910 260911 260912 260913 260914 260915 260916 260917 260918 260919 260920 260921 260922 260923 260924 260925 260926 260927 260928 260929 260930 260931 260932 260933 260934 260935 260936 260937 260938 260939 260940 260941 260942 260943 260944 260945 260946 260947 260948 260949 260950 260951 260952 260953 260954 260955 260956 260957 260958 260959 260960 260961 260962 260963 260964 260965 260966 260967 260968 260969 260970 260971 260972 260973 260974 260975 260976 260977 260978 260979 260980 260981 260982 260983 260984 260985 260986 260987 260988 260989 260990 260991 260992 260993 260994 260995 260996 260997 260998 260999 261000 261001 261002 261003 261004 261005 261006 261007 261008 261009 261010 261011 261012 261013 261014 261015 261016 261017 261018 261019 261020 261021 261022 261023 261024 261025 261026 261027 261028 261029 261030 261031 261032 261033 261034 261035 261036 261037 261038 261039 261040 261041 261042 261043 261044 261045 261046 261047 261048 261049 261050 261051 261052 261053 261054 261055 261056 261057 261058 261059 261060 261061 261062 261063 261064 261065 261066 261067 261068 261069 261070 261071 261072 261073 261074 261075 261076 261077 261078 261079 261080 261081 261082 261083 261084 261085 261086 261087> # SplitBus
mul in 2 <260922 260888> out 1 <261088>  # cond trueterm
const-mul-neg-1 in 1 <260922> out 1 <261089> # cond minuscond
add in 2 <100 261089> out 1 <261090>     # cond negcond
mul in 2 <261090 260885> out 1 <261091>  # cond falseterm
add in 2 <261088 261091> out 1 <261092>  # cond result
mul in 2 <260781 260745> out 1 <261093>  # cond trueterm
const-mul-neg-1 in 1 <260781> out 1 <261094> # cond minuscond
add in 2 <100 261094> out 1 <261095>     # cond negcond
mul in 2 <261095 260742> out 1 <261096>  # cond falseterm
add in 2 <261093 261096> out 1 <261097>  # cond result
mul in 2 <260704 260668> out 1 <261098>  # cond trueterm
const-mul-neg-1 in 1 <260704> out 1 <261099> # cond minuscond
add in 2 <100 261099> out 1 <261100>     # cond negcond
mul in 2 <261100 80> out 1 <261101>      # cond falseterm
add in 2 <261098 261101> out 1 <261102>  # cond result
const-mul-ffffffff in 1 <261102> out 1 <261103> # multiply-by-constant 4294967295
add in 2 <261102 261097> out 1 <261104>  # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
add in 2 <261104 261103> out 1 <261105>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <261105> out 1 <261106> # multiply-by-constant 4294967295
add in 2 <261104 261106> out 1 <261107>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <261102> out 1 <261108> # multiply-by-constant 4294967295
add in 2 <261097 261108> out 1 <261109>  # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <261109> out 132 <261110 261111 261112 261113 261114 261115 261116 261117 261118 261119 261120 261121 261122 261123 261124 261125 261126 261127 261128 261129 261130 261131 261132 261133 261134 261135 261136 261137 261138 261139 261140 261141 261142 261143 261144 261145 261146 261147 261148 261149 261150 261151 261152 261153 261154 261155 261156 261157 261158 261159 261160 261161 261162 261163 261164 261165 261166 261167 261168 261169 261170 261171 261172 261173 261174 261175 261176 261177 261178 261179 261180 261181 261182 261183 261184 261185 261186 261187 261188 261189 261190 261191 261192 261193 261194 261195 261196 261197 261198 261199 261200 261201 261202 261203 261204 261205 261206 261207 261208 261209 261210 261211 261212 261213 261214 261215 261216 261217 261218 261219 261220 261221 261222 261223 261224 261225 261226 261227 261228 261229 261230 261231 261232 261233 261234 261235 261236 261237 261238 261239 261240 261241> # SplitBus
mul in 2 <261141 261107> out 1 <261242>  # cond trueterm
const-mul-neg-1 in 1 <261141> out 1 <261243> # cond minuscond
add in 2 <100 261243> out 1 <261244>     # cond negcond
mul in 2 <261244 261097> out 1 <261245>  # cond falseterm
add in 2 <261242 261245> out 1 <261246>  # cond result
const-mul-ffffffff in 1 <261246> out 1 <261247> # multiply-by-constant 4294967295
add in 2 <261246 261092> out 1 <261248>  # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
add in 2 <261248 261247> out 1 <261249>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <261249> out 1 <261250> # multiply-by-constant 4294967295
add in 2 <261248 261250> out 1 <261251>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <261246> out 1 <261252> # multiply-by-constant 4294967295
add in 2 <261092 261252> out 1 <261253>  # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <261253> out 199 <261254 261255 261256 261257 261258 261259 261260 261261 261262 261263 261264 261265 261266 261267 261268 261269 261270 261271 261272 261273 261274 261275 261276 261277 261278 261279 261280 261281 261282 261283 261284 261285 261286 261287 261288 261289 261290 261291 261292 261293 261294 261295 261296 261297 261298 261299 261300 261301 261302 261303 261304 261305 261306 261307 261308 261309 261310 261311 261312 261313 261314 261315 261316 261317 261318 261319 261320 261321 261322 261323 261324 261325 261326 261327 261328 261329 261330 261331 261332 261333 261334 261335 261336 261337 261338 261339 261340 261341 261342 261343 261344 261345 261346 261347 261348 261349 261350 261351 261352 261353 261354 261355 261356 261357 261358 261359 261360 261361 261362 261363 261364 261365 261366 261367 261368 261369 261370 261371 261372 261373 261374 261375 261376 261377 261378 261379 261380 261381 261382 261383 261384 261385 261386 261387 261388 261389 261390 261391 261392 261393 261394 261395 261396 261397 261398 261399 261400 261401 261402 261403 261404 261405 261406 261407 261408 261409 261410 261411 261412 261413 261414 261415 261416 261417 261418 261419 261420 261421 261422 261423 261424 261425 261426 261427 261428 261429 261430 261431 261432 261433 261434 261435 261436 261437 261438 261439 261440 261441 261442 261443 261444 261445 261446 261447 261448 261449 261450 261451 261452> # SplitBus
mul in 2 <261285 261251> out 1 <261453>  # cond trueterm
const-mul-neg-1 in 1 <261285> out 1 <261454> # cond minuscond
add in 2 <100 261454> out 1 <261455>     # cond negcond
mul in 2 <261455 261092> out 1 <261456>  # cond falseterm
add in 2 <261453 261456> out 1 <261457>  # cond result
const-mul-ffffffff in 1 <261457> out 1 <261458> # multiply-by-constant 4294967295
const-mul-ffffffff in 1 <260888> out 1 <261459> # multiply-by-constant 4294967295
add in 2 <260887 261459> out 1 <261460>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
mul in 2 <260922 261460> out 1 <261461>  # cond trueterm
const-mul-neg-1 in 1 <260922> out 1 <261462> # cond minuscond
add in 2 <100 261462> out 1 <261463>     # cond negcond
mul in 2 <261463 83> out 1 <261464>      # cond falseterm
add in 2 <261461 261464> out 1 <261465>  # cond result
const-mul-ffffffff in 1 <261465> out 1 <261466> # multiply-by-constant 4294967295
add in 2 <261465 84> out 1 <261467>      # ArithBusReq.AddReq(DFG.Conditional,DFG.Input)
split in 1 <261467> out 231 <261468 261469 261470 261471 261472 261473 261474 261475 261476 261477 261478 261479 261480 261481 261482 261483 261484 261485 261486 261487 261488 261489 261490 261491 261492 261493 261494 261495 261496 261497 261498 261499 261500 261501 261502 261503 261504 261505 261506 261507 261508 261509 261510 261511 261512 261513 261514 261515 261516 261517 261518 261519 261520 261521 261522 261523 261524 261525 261526 261527 261528 261529 261530 261531 261532 261533 261534 261535 261536 261537 261538 261539 261540 261541 261542 261543 261544 261545 261546 261547 261548 261549 261550 261551 261552 261553 261554 261555 261556 261557 261558 261559 261560 261561 261562 261563 261564 261565 261566 261567 261568 261569 261570 261571 261572 261573 261574 261575 261576 261577 261578 261579 261580 261581 261582 261583 261584 261585 261586 261587 261588 261589 261590 261591 261592 261593 261594 261595 261596 261597 261598 261599 261600 261601 261602 261603 261604 261605 261606 261607 261608 261609 261610 261611 261612 261613 261614 261615 261616 261617 261618 261619 261620 261621 261622 261623 261624 261625 261626 261627 261628 261629 261630 261631 261632 261633 261634 261635 261636 261637 261638 261639 261640 261641 261642 261643 261644 261645 261646 261647 261648 261649 261650 261651 261652 261653 261654 261655 261656 261657 261658 261659 261660 261661 261662 261663 261664 261665 261666 261667 261668 261669 261670 261671 261672 261673 261674 261675 261676 261677 261678 261679 261680 261681 261682 261683 261684 261685 261686 261687 261688 261689 261690 261691 261692 261693 261694 261695 261696 261697 261698> # SplitBus
const-mul-2 in 1 <261499> out 1 <261699> # join source bit 31
add in 2 <261498 261699> out 1 <261700>  # join source bit 30
const-mul-2 in 1 <261700> out 1 <261701> # join
add in 2 <261497 261701> out 1 <261702>  # join source bit 29
const-mul-2 in 1 <261702> out 1 <261703> # join
add in 2 <261496 261703> out 1 <261704>  # join source bit 28
const-mul-2 in 1 <261704> out 1 <261705> # join
add in 2 <261495 261705> out 1 <261706>  # join source bit 27
const-mul-2 in 1 <261706> out 1 <261707> # join
add in 2 <261494 261707> out 1 <261708>  # join source bit 26
const-mul-2 in 1 <261708> out 1 <261709> # join
add in 2 <261493 261709> out 1 <261710>  # join source bit 25
const-mul-2 in 1 <261710> out 1 <261711> # join
add in 2 <261492 261711> out 1 <261712>  # join source bit 24
const-mul-2 in 1 <261712> out 1 <261713> # join
add in 2 <261491 261713> out 1 <261714>  # join source bit 23
const-mul-2 in 1 <261714> out 1 <261715> # join
add in 2 <261490 261715> out 1 <261716>  # join source bit 22
const-mul-2 in 1 <261716> out 1 <261717> # join
add in 2 <261489 261717> out 1 <261718>  # join source bit 21
const-mul-2 in 1 <261718> out 1 <261719> # join
add in 2 <261488 261719> out 1 <261720>  # join source bit 20
const-mul-2 in 1 <261720> out 1 <261721> # join
add in 2 <261487 261721> out 1 <261722>  # join source bit 19
const-mul-2 in 1 <261722> out 1 <261723> # join
add in 2 <261486 261723> out 1 <261724>  # join source bit 18
const-mul-2 in 1 <261724> out 1 <261725> # join
add in 2 <261485 261725> out 1 <261726>  # join source bit 17
const-mul-2 in 1 <261726> out 1 <261727> # join
add in 2 <261484 261727> out 1 <261728>  # join source bit 16
const-mul-2 in 1 <261728> out 1 <261729> # join
add in 2 <261483 261729> out 1 <261730>  # join source bit 15
const-mul-2 in 1 <261730> out 1 <261731> # join
add in 2 <261482 261731> out 1 <261732>  # join source bit 14
const-mul-2 in 1 <261732> out 1 <261733> # join
add in 2 <261481 261733> out 1 <261734>  # join source bit 13
const-mul-2 in 1 <261734> out 1 <261735> # join
add in 2 <261480 261735> out 1 <261736>  # join source bit 12
const-mul-2 in 1 <261736> out 1 <261737> # join
add in 2 <261479 261737> out 1 <261738>  # join source bit 11
const-mul-2 in 1 <261738> out 1 <261739> # join
add in 2 <261478 261739> out 1 <261740>  # join source bit 10
const-mul-2 in 1 <261740> out 1 <261741> # join
add in 2 <261477 261741> out 1 <261742>  # join source bit 9
const-mul-2 in 1 <261742> out 1 <261743> # join
add in 2 <261476 261743> out 1 <261744>  # join source bit 8
const-mul-2 in 1 <261744> out 1 <261745> # join
add in 2 <261475 261745> out 1 <261746>  # join source bit 7
const-mul-2 in 1 <261746> out 1 <261747> # join
add in 2 <261474 261747> out 1 <261748>  # join source bit 6
const-mul-2 in 1 <261748> out 1 <261749> # join
add in 2 <261473 261749> out 1 <261750>  # join source bit 5
const-mul-2 in 1 <261750> out 1 <261751> # join
add in 2 <261472 261751> out 1 <261752>  # join source bit 4
const-mul-2 in 1 <261752> out 1 <261753> # join
add in 2 <261471 261753> out 1 <261754>  # join source bit 3
const-mul-2 in 1 <261754> out 1 <261755> # join
add in 2 <261470 261755> out 1 <261756>  # join source bit 2
const-mul-2 in 1 <261756> out 1 <261757> # join
add in 2 <261469 261757> out 1 <261758>  # join source bit 1
const-mul-2 in 1 <261758> out 1 <261759> # join
add in 2 <261468 261759> out 1 <261760>  # join source bit 0
add in 2 <261760 261760> out 1 <261761>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <261465> out 1 <261762> # multiply-by-constant 4294967295
add in 2 <84 261762> out 1 <261763>      # 'CmpLT DFG.Input - DFG.Conditional'
split in 1 <261763> out 263 <261764 261765 261766 261767 261768 261769 261770 261771 261772 261773 261774 261775 261776 261777 261778 261779 261780 261781 261782 261783 261784 261785 261786 261787 261788 261789 261790 261791 261792 261793 261794 261795 261796 261797 261798 261799 261800 261801 261802 261803 261804 261805 261806 261807 261808 261809 261810 261811 261812 261813 261814 261815 261816 261817 261818 261819 261820 261821 261822 261823 261824 261825 261826 261827 261828 261829 261830 261831 261832 261833 261834 261835 261836 261837 261838 261839 261840 261841 261842 261843 261844 261845 261846 261847 261848 261849 261850 261851 261852 261853 261854 261855 261856 261857 261858 261859 261860 261861 261862 261863 261864 261865 261866 261867 261868 261869 261870 261871 261872 261873 261874 261875 261876 261877 261878 261879 261880 261881 261882 261883 261884 261885 261886 261887 261888 261889 261890 261891 261892 261893 261894 261895 261896 261897 261898 261899 261900 261901 261902 261903 261904 261905 261906 261907 261908 261909 261910 261911 261912 261913 261914 261915 261916 261917 261918 261919 261920 261921 261922 261923 261924 261925 261926 261927 261928 261929 261930 261931 261932 261933 261934 261935 261936 261937 261938 261939 261940 261941 261942 261943 261944 261945 261946 261947 261948 261949 261950 261951 261952 261953 261954 261955 261956 261957 261958 261959 261960 261961 261962 261963 261964 261965 261966 261967 261968 261969 261970 261971 261972 261973 261974 261975 261976 261977 261978 261979 261980 261981 261982 261983 261984 261985 261986 261987 261988 261989 261990 261991 261992 261993 261994 261995 261996 261997 261998 261999 262000 262001 262002 262003 262004 262005 262006 262007 262008 262009 262010 262011 262012 262013 262014 262015 262016 262017 262018 262019 262020 262021 262022 262023 262024 262025 262026> # SplitBus
mul in 2 <261795 261761> out 1 <262027>  # cond trueterm
const-mul-neg-1 in 1 <261795> out 1 <262028> # cond minuscond
add in 2 <100 262028> out 1 <262029>     # cond negcond
mul in 2 <262029 261465> out 1 <262030>  # cond falseterm
add in 2 <262027 262030> out 1 <262031>  # cond result
add in 2 <261457 262031> out 1 <262032>  # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
split in 1 <262032> outplitBus
const-mul-2 in 1 <262064> out 1 <262266> # join source bit 31
add in 2 <262063 262266> out 1 <262267>  # join source bit 30
const-mul-2 in 1 <262267> out 1 <262268> # join
add in 2 <262062 262268> out 1 <262269>  # join source bit 29
const-mul-2 in 1 <262269> out 1 <262270> # join
add in 2 <262061 262270> out 1 <262271>  # join source bit 28
const-mul-2 in 1 <262271> out 1 <262272> # join
add in 2 <262060 262272> out 1 <262273>  # join source bit 27
const-mul-2 in 1 <262273> out 1 <262274> # join
add in 2 <262059 262274> out 1 <262275>  # join source bit 26
const-mul-2 in 1 <262275> out 1 <262276> # join
add in 2 <262058 262276> out 1 <262277>  # join source bit 25
const-mul-2 in 1 <262277> out 1 <262278> # join
add in 2 <262057 262278> out 1 <262279>  # join source bit 24
const-mul-2 in 1 <262279> out 1 <262280> # join
add in 2 <262056 262280> out 1 <262281>  # join source bit 23
const-mul-2 in 1 <262281> out 1 <262282> # join
add in 2 <262055 262282> out 1 <262283>  # join source bit 22
const-mul-2 in 1 <262283> out 1 <262284> # join
add in 2 <262054 262284> out 1 <262285>  # join source bit 21
const-mul-2 in 1 <262285> out 1 <262286> # join
add in 2 <262053 262286> out 1 <262287>  # join source bit 20
const-mul-2 in 1 <262287> out 1 <262288> # join
add in 2 <262052 262288> out 1 <262289>  # join source bit 19
const-mul-2 in 1 <262289> out 1 <262290> # join
add in 2 <262051 262290> out 1 <262291>  # join source bit 18
const-mul-2 in 1 <262291> out 1 <262292> # join
add in 2 <262050 262292> out 1 <262293>  # join source bit 17
const-mul-2 in 1 <262293> out 1 <262294> # join
add in 2 <262049 262294> out 1 <262295>  # join source bit 16
const-mul-2 in 1 <262295> out 1 <262296> # join
add in 2 <262048 262296> out 1 <262297>  # join source bit 15
const-mul-2 in 1 <262297> out 1 <262298> # join
add in 2 <262047 262298> out 1 <262299>  # join source bit 14
const-mul-2 in 1 <262299> out 1 <262300> # join
add in 2 <262046 262300> out 1 <262301>  # join source bit 13
const-mul-2 in 1 <262301> out 1 <262302> # join
add in 2 <262045 262302> out 1 <262303>  # join source bit 12
const-mul-2 in 1 <262303> out 1 <262304> # join
add in 2 <262044 262304> out 1 <262305>  # join source bit 11
const-mul-2 in 1 <262305> out 1 <262306> # join
add in 2 <262043 262306> out 1 <262307>  # join source bit 10
const-mul-2 in 1 <262307> out 1 <262308> # join
add in 2 <262042 262308> out 1 <262309>  # join source bit 9
const-mul-2 in 1 <262309> out 1 <262310> # join
add in 2 <262041 262310> out 1 <262311>  # join source bit 8
const-mul-2 in 1 <262311> out 1 <262312> # join
add in 2 <262040 262312> out 1 <262313>  # join source bit 7
const-mul-2 in 1 <262313> out 1 <262314> # join
add in 2 <262039 262314> out 1 <262315>  # join source bit 6
const-mul-2 in 1 <262315> out 1 <262316> # join
add in 2 <262038 262316> out 1 <262317>  # join source bit 5
const-mul-2 in 1 <262317> out 1 <262318> # join
add in 2 <262037 262318> out 1 <262319>  # join source bit 4
const-mul-2 in 1 <262319> out 1 <262320> # join
add in 2 <262036 262320> out 1 <262321>  # join source bit 3
const-mul-2 in 1 <262321> out 1 <262322> # join
add in 2 <262035 262322> out 1 <262323>  # join source bit 2
const-mul-2 in 1 <262323> out 1 <262324> # join
add in 2 <262034 262324> out 1 <262325>  # join source bit 1
const-mul-2 in 1 <262325> out 1 <262326> # join
add in 2 <262033 262326> out 1 <262327>  # join source bit 0
add in 2 <262327 262327> out 1 <262328>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <261457> out 1 <262329> # multiply-by-constant 4294967295
add in 2 <262031 262329> out 1 <262330>  # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <262330> outplitBus
mul in 2 <262362 262328> out 1 <262596>  # cond trueterm
const-mul-neg-1 in 1 <262362> out 1 <262597> # cond minuscond
add in 2 <100 262597> out 1 <262598>     # cond negcond
mul in 2 <262598 261457> out 1 <262599>  # cond falseterm
add in 2 <262596 262599> out 1 <262600>  # cond result
mul in 2 <261285 261249> out 1 <262601>  # cond trueterm
const-mul-neg-1 in 1 <261285> out 1 <262602> # cond minuscond
add in 2 <100 262602> out 1 <262603>     # cond negcond
mul in 2 <262603 261246> out 1 <262604>  # cond falseterm
add in 2 <262601 262604> out 1 <262605>  # cond result
mul in 2 <261141 261105> out 1 <262606>  # cond trueterm
const-mul-neg-1 in 1 <261141> out 1 <262607> # cond minuscond
add in 2 <100 262607> out 1 <262608>     # cond negcond
mul in 2 <262608 261102> out 1 <262609>  # cond falseterm
add in 2 <262606 262609> out 1 <262610>  # cond result
const-mul-ffffffff in 1 <262610> out 1 <262611> # multiply-by-constant 4294967295
add in 2 <262610 262605> out 1 <262612>  # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
add in 2 <262612 262611> out 1 <262613>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <262613> out 1 <262614> # multiply-by-constant 4294967295
add in 2 <262612 262614> out 1 <262615>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <262610> out 1 <262616> # multiply-by-constant 4294967295
add in 2 <262605 262616> out 1 <262617>  # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <262617> out 200 <262618 262619 262620 262621 262622 262623 262624 262625 262626 262627 262628 262629 262630 262631 262632 262633 262634 262635 262636 262637 262638 262639 262640 262641 262642 262643 262644 262645 262646 262647 262648 262649 262650 262651 262652 262653 262654 262655 262656 262657 262658 262659 262660 262661 262662 262663 262664 262665 262666 262667 262668 262669 262670 262671 262672 262673 262674 262675 262676 262677 262678 262679 262680 262681 262682 262683 262684 262685 262686 262687 262688 262689 262690 262691 262692 262693 262694 262695 262696 262697 262698 262699 262700 262701 262702 262703 262704 262705 262706 262707 262708 262709 262710 262711 262712 262713 262714 262715 262716 262717 262718 262719 262720 262721 262722 262723 262724 262725 262726 262727 262728 262729 262730 262731 262732 262733 262734 262735 262736 262737 262738 262739 262740 262741 262742 262743 262744 262745 262746 262747 262748 262749 262750 262751 262752 262753 262754 262755 262756 262757 262758 262759 262760 262761 262762 262763 262764 262765 262766 262767 262768 262769 262770 262771 262772 262773 262774 262775 262776 262777 262778 262779 262780 262781 262782 262783 262784 262785 262786 262787 262788 262789 262790 262791 262792 262793 262794 262795 262796 262797 262798 262799 262800 262801 262802 262803 262804 262805 262806 262807 262808 262809 262810 262811 262812 262813 262814 262815 262816 262817> # SplitBus
mul in 2 <262649 262615> out 1 <262818>  # cond trueterm
const-mul-neg-1 in 1 <262649> out 1 <262819> # cond minuscond
add in 2 <100 262819> out 1 <262820>     # cond negcond
mul in 2 <262820 262605> out 1 <262821>  # cond falseterm
add in 2 <262818 262821> out 1 <262822>  # cond result
const-mul-ffffffff in 1 <262822> out 1 <262823> # multiply-by-constant 4294967295
add in 2 <262822 262600> out 1 <262824>  # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
split in 1 <262824> outplitBus
const-mul-2 in 1 <262856> out 1 <263060> # join source bit 31
add in 2 <262855 263060> out 1 <263061>  # join source bit 30
const-mul-2 in 1 <263061> out 1 <263062> # join
add in 2 <262854 263062> out 1 <263063>  # join source bit 29
const-mul-2 in 1 <263063> out 1 <263064> # join
add in 2 <262853 263064> out 1 <263065>  # join source bit 28
const-mul-2 in 1 <263065> out 1 <263066> # join
add in 2 <262852 263066> out 1 <263067>  # join source bit 27
const-mul-2 in 1 <263067> out 1 <263068> # join
add in 2 <262851 263068> out 1 <263069>  # join source bit 26
const-mul-2 in 1 <263069> out 1 <263070> # join
add in 2 <262850 263070> out 1 <263071>  # join source bit 25
const-mul-2 in 1 <263071> out 1 <263072> # join
add in 2 <262849 263072> out 1 <263073>  # join source bit 24
const-mul-2 in 1 <263073> out 1 <263074> # join
add in 2 <262848 263074> out 1 <263075>  # join source bit 23
const-mul-2 in 1 <263075> out 1 <263076> # join
add in 2 <262847 263076> out 1 <263077>  # join source bit 22
const-mul-2 in 1 <263077> out 1 <263078> # join
add in 2 <262846 263078> out 1 <263079>  # join source bit 21
const-mul-2 in 1 <263079> out 1 <263080> # join
add in 2 <262845 263080> out 1 <263081>  # join source bit 20
const-mul-2 in 1 <263081> out 1 <263082> # join
add in 2 <262844 263082> out 1 <263083>  # join source bit 19
const-mul-2 in 1 <263083> out 1 <263084> # join
add in 2 <262843 263084> out 1 <263085>  # join source bit 18
const-mul-2 in 1 <263085> out 1 <263086> # join
add in 2 <262842 263086> out 1 <263087>  # join source bit 17
const-mul-2 in 1 <263087> out 1 <263088> # join
add in 2 <262841 263088> out 1 <263089>  # join source bit 16
const-mul-2 in 1 <263089> out 1 <263090> # join
add in 2 <262840 263090> out 1 <263091>  # join source bit 15
const-mul-2 in 1 <263091> out 1 <263092> # join
add in 2 <262839 263092> out 1 <263093>  # join source bit 14
const-mul-2 in 1 <263093> out 1 <263094> # join
add in 2 <262838 263094> out 1 <263095>  # join source bit 13
const-mul-2 in 1 <263095> out 1 <263096> # join
add in 2 <262837 263096> out 1 <263097>  # join source bit 12
const-mul-2 in 1 <263097> out 1 <263098> # join
add in 2 <262836 263098> out 1 <263099>  # join source bit 11
const-mul-2 in 1 <263099> out 1 <263100> # join
add in 2 <262835 263100> out 1 <263101>  # join source bit 10
const-mul-2 in 1 <263101> out 1 <263102> # join
add in 2 <262834 263102> out 1 <263103>  # join source bit 9
const-mul-2 in 1 <263103> out 1 <263104> # join
add in 2 <262833 263104> out 1 <263105>  # join source bit 8
const-mul-2 in 1 <263105> out 1 <263106> # join
add in 2 <262832 263106> out 1 <263107>  # join source bit 7
const-mul-2 in 1 <263107> out 1 <263108> # join
add in 2 <262831 263108> out 1 <263109>  # join source bit 6
const-mul-2 in 1 <263109> out 1 <263110> # join
add in 2 <262830 263110> out 1 <263111>  # join source bit 5
const-mul-2 in 1 <263111> out 1 <263112> # join
add in 2 <262829 263112> out 1 <263113>  # join source bit 4
const-mul-2 in 1 <263113> out 1 <263114> # join
add in 2 <262828 263114> out 1 <263115>  # join source bit 3
const-mul-2 in 1 <263115> out 1 <263116> # join
add in 2 <262827 263116> out 1 <263117>  # join source bit 2
const-mul-2 in 1 <263117> out 1 <263118> # join
add in 2 <262826 263118> out 1 <263119>  # join source bit 1
const-mul-2 in 1 <263119> out 1 <263120> # join
add in 2 <262825 263120> out 1 <263121>  # join source bit 0
add in 2 <263121 263121> out 1 <263122>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <263122> out 1 <263123> # multiply-by-constant 4294967295
add in 2 <262824 263123> out 1 <263124>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <262822> out 1 <263125> # multiply-by-constant 4294967295
add in 2 <262600 263125> out 1 <263126>  # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <263126> outplitBus
mul in 2 <263158 263124> out 1 <263394>  # cond trueterm
const-mul-neg-1 in 1 <263158> out 1 <263395> # cond minuscond
add in 2 <100 263395> out 1 <263396>     # cond negcond
mul in 2 <263396 262600> out 1 <263397>  # cond falseterm
add in 2 <263394 263397> out 1 <263398>  # cond result
add in 2 <263398 104> out 1 <263399>     # ArithBusReq.AddReq(DFG.Conditional,DFG.Constant)
const-mul-ffffffff in 1 <82> out 1 <263400> # multiply-by-constant 4294967295
add in 2 <263399 263400> out 1 <263401>  # 'CmpLT DFG.Add - DFG.Input'
split in 1 <263401> outplitBus
mul in 2 <263433 103> out 1 <263640>     # cond trueterm
const-mul-neg-1 in 1 <263433> out 1 <263641> # cond minuscond
add in 2 <100 263641> out 1 <263642>     # cond negcond
mul in 2 <263642 102> out 1 <263643>     # cond falseterm
add in 2 <263640 263643> out 1 <263644>  # cond result
add in 2 <263398 3084> out 1 <263645>    # ArithBusReq.AddReq(DFG.Conditional,DFG.Negate)
const-mul-ffffffff in 1 <263645> out 1 <263646> # multiply-by-constant 4294967295
add in 2 <82 263646> out 1 <263647>      # 'CmpLT DFG.Input - DFG.Subtract'
split in 1 <263647> out 270 <263648 263649 263650 263651 263652 263653 263654 263655 263656 263657 263658 263659 263660 263661 263662 263663 263664 263665 263666 263667 263668 263669 263670 263671 263672 263673 263674 263675 263676 263677 263678 263679 263680 263681 263682 263683 263684 263685 263686 263687 263688 263689 263690 263691 263692 263693 263694 263695 263696 263697 263698 263699 263700 263701 263702 263703 263704 263705 263706 263707 263708 263709 263710 263711 263712 263713 263714 263715 263716 263717 263718 263719 263720 263721 263722 263723 263724 263725 263726 263727 263728 263729 263730 263731 263732 263733 263734 263735 263736 263737 263738 263739 263740 263741 263742 263743 263744 263745 263746 263747 263748 263749 263750 263751 263752 263753 263754 263755 263756 263757 263758 263759 263760 263761 263762 263763 263764 263765 263766 263767 263768 263769 263770 263771 263772 263773 263774 263775 263776 263777 263778 263779 263780 263781 263782 263783 263784 263785 263786 263787 263788 263789 263790 263791 263792 263793 263794 263795 263796 263797 263798 263799 263800 263801 263802 263803 263804 263805 263806 263807 263808 263809 263810 263811 263812 263813 263814 263815 263816 263817 263818 263819 263820 263821 263822 263823 263824 263825 263826 263827 263828 263829 263830 263831 263832 263833 263834 263835 263836 263837 263838 263839 263840 263841 263842 263843 263844 263845 263846 263847 263848 263849 263850 263851 263852 263853 263854 263855 263856 263857 263858 263859 263860 263861 263862 263863 263864 263865 263866 263867 263868 263869 263870 263871 263872 263873 263874 263875 263876 263877 263878 263879 263880 263881 263882 263883 263884 263885 263886 263887 263888 263889 263890 263891 263892 263893 263894 263895 263896 263897 263898 263899 263900 263901 263902 263903 263904 263905 263906 263907 263908 263909 263910 263911 263912 263913 263914 263915 263916 263917> # SplitBus
mul in 2 <263679 103> out 1 <263918>     # cond trueterm
const-mul-neg-1 in 1 <263679> out 1 <263919> # cond minuscond
add in 2 <100 263919> out 1 <263920>     # cond negcond
mul in 2 <263920 263644> out 1 <263921>  # cond falseterm
add in 2 <263918 263921> out 1 <263922>  # cond result
const-mul-ffffffff in 1 <81> out 1 <263923> # multiply-by-constant 4294967295
add in 2 <81 82> out 1 <263924>          # ArithBusReq.AddReq(DFG.Input,DFG.Input)
add in 2 <263924 263923> out 1 <263925>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <263925> out 1 <263926> # multiply-by-constant 4294967295
add in 2 <263924 263926> out 1 <263927>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <81> out 1 <263928> # multiply-by-constant 4294967295
add in 2 <82 263928> out 1 <263929>      # 'CmpLT DFG.Input - DFG.Input'
split in 1 <263929> out 65 <263930 263931 263932 263933 263934 263935 263936 263937 263938 263939 263940 263941 263942 263943 263944 263945 263946 263947 263948 263949 263950 263951 263952 263953 263954 263955 263956 263957 263958 263959 263960 263961 263962 263963 263964 263965 263966 263967 263968 263969 263970 263971 263972 263973 263974 263975 263976 263977 263978 263979 263980 263981 263982 263983 263984 263985 263986 263987 263988 263989 263990 263991 263992 263993 263994> # SplitBus
mul in 2 <263961 263927> out 1 <263995>  # cond trueterm
const-mul-neg-1 in 1 <263961> out 1 <263996> # cond minuscond
add in 2 <100 263996> out 1 <263997>     # cond negcond
mul in 2 <263997 82> out 1 <263998>      # cond falseterm
add in 2 <263995 263998> out 1 <263999>  # cond result
const-mul-ffffffff in 1 <263999> out 1 <264000> # multiply-by-constant 4294967295
add in 2 <263999 83> out 1 <264001>      # ArithBusReq.AddReq(DFG.Conditional,DFG.Input)
add in 2 <264001 264000> out 1 <264002>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <264002> out 1 <264003> # multiply-by-constant 4294967295
add in 2 <264001 264003> out 1 <264004>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <263999> out 1 <264005> # multiply-by-constant 4294967295
add in 2 <83 264005> out 1 <264006>      # 'CmpLT DFG.Input - DFG.Conditional'
split in 1 <264006> out 131 <264007 264008 264009 264010 264011 264012 264013 264014 264015 264016 264017 264018 264019 264020 264021 264022 264023 264024 264025 264026 264027 264028 264029 264030 264031 264032 264033 264034 264035 264036 264037 264038 264039 264040 264041 264042 264043 264044 264045 264046 264047 264048 264049 264050 264051 264052 264053 264054 264055 264056 264057 264058 264059 264060 264061 264062 264063 264064 264065 264066 264067 264068 264069 264070 264071 264072 264073 264074 264075 264076 264077 264078 264079 264080 264081 264082 264083 264084 264085 264086 264087 264088 264089 264090 264091 264092 264093 264094 264095 264096 264097 264098 264099 264100 264101 264102 264103 264104 264105 264106 264107 264108 264109 264110 264111 264112 264113 264114 264115 264116 264117 264118 264119 264120 264121 264122 264123 264124 264125 264126 264127 264128 264129 264130 264131 264132 264133 264134 264135 264136 264137> # SplitBus
mul in 2 <264038 264004> out 1 <264138>  # cond trueterm
const-mul-neg-1 in 1 <264038> out 1 <264139> # cond minuscond
add in 2 <100 264139> out 1 <264140>     # cond negcond
mul in 2 <264140 83> out 1 <264141>      # cond falseterm
add in 2 <264138 264141> out 1 <264142>  # cond result
const-mul-ffffffff in 1 <264142> out 1 <264143> # multiply-by-constant 4294967295
add in 2 <264142 84> out 1 <264144>      # ArithBusReq.AddReq(DFG.Conditional,DFG.Input)
add in 2 <264144 264143> out 1 <264145>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <264142> out 1 <264146> # multiply-by-constant 4294967295
add in 2 <84 264146> out 1 <264147>      # 'CmpLT DFG.Input - DFG.Conditional'
split in 1 <264147> out 197 <264148 264149 264150 264151 264152 264153 264154 264155 264156 264157 264158 264159 264160 264161 264162 264163 264164 264165 264166 264167 264168 264169 264170 264171 264172 264173 264174 264175 264176 264177 264178 264179 264180 264181 264182 264183 264184 264185 264186 264187 264188 264189 264190 264191 264192 264193 264194 264195 264196 264197 264198 264199 264200 264201 264202 264203 264204 264205 264206 264207 264208 264209 264210 264211 264212 264213 264214 264215 264216 264217 264218 264219 264220 264221 264222 264223 264224 264225 264226 264227 264228 264229 264230 264231 264232 264233 264234 264235 264236 264237 264238 264239 264240 264241 264242 264243 264244 264245 264246 264247 264248 264249 264250 264251 264252 264253 264254 264255 264256 264257 264258 264259 264260 264261 264262 264263 264264 264265 264266 264267 264268 264269 264270 264271 264272 264273 264274 264275 264276 264277 264278 264279 264280 264281 264282 264283 264284 264285 264286 264287 264288 264289 264290 264291 264292 264293 264294 264295 264296 264297 264298 264299 264300 264301 264302 264303 264304 264305 264306 264307 264308 264309 264310 264311 264312 264313 264314 264315 264316 264317 264318 264319 264320 264321 264322 264323 264324 264325 264326 264327 264328 264329 264330 264331 264332 264333 264334 264335 264336 264337 264338 264339 264340 264341 264342 264343 264344> # SplitBus
mul in 2 <264179 264145> out 1 <264345>  # cond trueterm
const-mul-neg-1 in 1 <264179> out 1 <264346> # cond minuscond
add in 2 <100 264346> out 1 <264347>     # cond negcond
mul in 2 <264347 264142> out 1 <264348>  # cond falseterm
add in 2 <264345 264348> out 1 <264349>  # cond result
mul in 2 <264038 264002> out 1 <264350>  # cond trueterm
const-mul-neg-1 in 1 <264038> out 1 <264351> # cond minuscond
add in 2 <100 264351> out 1 <264352>     # cond negcond
mul in 2 <264352 263999> out 1 <264353>  # cond falseterm
add in 2 <264350 264353> out 1 <264354>  # cond result
mul in 2 <263961 263925> out 1 <264355>  # cond trueterm
const-mul-neg-1 in 1 <263961> out 1 <264356> # cond minuscond
add in 2 <100 264356> out 1 <264357>     # cond negcond
mul in 2 <264357 81> out 1 <264358>      # cond falseterm
add in 2 <264355 264358> out 1 <264359>  # cond result
const-mul-ffffffff in 1 <264359> out 1 <264360> # multiply-by-constant 4294967295
add in 2 <264359 264354> out 1 <264361>  # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
add in 2 <264361 264360> out 1 <264362>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <264362> out 1 <264363> # multiply-by-constant 4294967295
add in 2 <264361 264363> out 1 <264364>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <264359> out 1 <264365> # multiply-by-constant 4294967295
add in 2 <264354 264365> out 1 <264366>  # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <264366> out 132 <264367 264368 264369 264370 264371 264372 264373 264374 264375 264376 264377 264378 264379 264380 264381 264382 264383 264384 264385 264386 264387 264388 264389 264390 264391 264392 264393 264394 264395 264396 264397 264398 264399 264400 264401 264402 264403 264404 264405 264406 264407 264408 264409 264410 264411 264412 264413 264414 264415 264416 264417 264418 264419 264420 264421 264422 264423 264424 264425 264426 264427 264428 264429 264430 264431 264432 264433 264434 264435 264436 264437 264438 264439 264440 264441 264442 264443 264444 264445 264446 264447 264448 264449 264450 264451 264452 264453 264454 264455 264456 264457 264458 264459 264460 264461 264462 264463 264464 264465 264466 264467 264468 264469 264470 264471 264472 264473 264474 264475 264476 264477 264478 264479 264480 264481 264482 264483 264484 264485 264486 264487 264488 264489 264490 264491 264492 264493 264494 264495 264496 264497 264498> # SplitBus
mul in 2 <264398 264364> out 1 <264499>  # cond trueterm
const-mul-neg-1 in 1 <264398> out 1 <264500> # cond minuscond
add in 2 <100 264500> out 1 <264501>     # cond negcond
mul in 2 <264501 264354> out 1 <264502>  # cond falseterm
add in 2 <264499 264502> out 1 <264503>  # cond result
const-mul-ffffffff in 1 <264503> out 1 <264504> # multiply-by-constant 4294967295
add in 2 <264503 264349> out 1 <264505>  # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
add in 2 <264505 264504> out 1 <264506>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <264506> out 1 <264507> # multiply-by-constant 4294967295
add in 2 <264505 264507> out 1 <264508>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <264503> out 1 <264509> # multiply-by-constant 4294967295
add in 2 <264349 264509> out 1 <264510>  # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <264510> out 199 <264511 264512 264513 264514 264515 264516 264517 264518 264519 264520 264521 264522 264523 264524 264525 264526 264527 264528 264529 264530 264531 264532 264533 264534 264535 264536 264537 264538 264539 264540 264541 264542 264543 264544 264545 264546 264547 264548 264549 264550 264551 264552 264553 264554 264555 264556 264557 264558 264559 264560 264561 264562 264563 264564 264565 264566 264567 264568 264569 264570 264571 264572 264573 264574 264575 264576 264577 264578 264579 264580 264581 264582 264583 264584 264585 264586 264587 264588 264589 264590 264591 264592 264593 264594 264595 264596 264597 264598 264599 264600 264601 264602 264603 264604 264605 264606 264607 264608 264609 264610 264611 264612 264613 264614 264615 264616 264617 264618 264619 264620 264621 264622 264623 264624 264625 264626 264627 264628 264629 264630 264631 264632 264633 264634 264635 264636 264637 264638 264639 264640 264641 264642 264643 264644 264645 264646 264647 264648 264649 264650 264651 264652 264653 264654 264655 264656 264657 264658 264659 264660 264661 264662 264663 264664 264665 264666 264667 264668 264669 264670 264671 264672 264673 264674 264675 264676 264677 264678 264679 264680 264681 264682 264683 264684 264685 264686 264687 264688 264689 264690 264691 264692 264693 264694 264695 264696 264697 264698 264699 264700 264701 264702 264703 264704 264705 264706 264707 264708 264709> # SplitBus
mul in 2 <264542 264508> out 1 <264710>  # cond trueterm
const-mul-neg-1 in 1 <264542> out 1 <264711> # cond minuscond
add in 2 <100 264711> out 1 <264712>     # cond negcond
mul in 2 <264712 264349> out 1 <264713>  # cond falseterm
add in 2 <264710 264713> out 1 <264714>  # cond result
const-mul-ffffffff in 1 <264714> out 1 <264715> # multiply-by-constant 4294967295
const-mul-ffffffff in 1 <264145> out 1 <264716> # multiply-by-constant 4294967295
add in 2 <264144 264716> out 1 <264717>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
mul in 2 <264179 264717> out 1 <264718>  # cond trueterm
const-mul-neg-1 in 1 <264179> out 1 <264719> # cond minuscond
add in 2 <100 264719> out 1 <264720>     # cond negcond
mul in 2 <264720 84> out 1 <264721>      # cond falseterm
add in 2 <264718 264721> out 1 <264722>  # cond result
const-mul-ffffffff in 1 <264722> out 1 <264723> # multiply-by-constant 4294967295
add in 2 <264722 85> out 1 <264724>      # ArithBusReq.AddReq(DFG.Conditional,DFG.Input)
split in 1 <264724> outplitBus
const-mul-2 in 1 <264756> out 1 <264956> # join source bit 31
add in 2 <264755 264956> out 1 <264957>  # join source bit 30
const-mul-2 in 1 <264957> out 1 <264958> # join
add in 2 <264754 264958> out 1 <264959>  # join source bit 29
const-mul-2 in 1 <264959> out 1 <264960> # join
add in 2 <264753 264960> out 1 <264961>  # join source bit 28
const-mul-2 in 1 <264961> out 1 <264962> # join
add in 2 <264752 264962> out 1 <264963>  # join source bit 27
const-mul-2 in 1 <264963> out 1 <264964> # join
add in 2 <264751 264964> out 1 <264965>  # join source bit 26
const-mul-2 in 1 <264965> out 1 <264966> # join
add in 2 <264750 264966> out 1 <264967>  # join source bit 25
const-mul-2 in 1 <264967> out 1 <264968> # join
add in 2 <264749 264968> out 1 <264969>  # join source bit 24
const-mul-2 in 1 <264969> out 1 <264970> # join
add in 2 <264748 264970> out 1 <264971>  # join source bit 23
const-mul-2 in 1 <264971> out 1 <264972> # join
add in 2 <264747 264972> out 1 <264973>  # join source bit 22
const-mul-2 in 1 <264973> out 1 <264974> # join
add in 2 <264746 264974> out 1 <264975>  # join source bit 21
const-mul-2 in 1 <264975> out 1 <264976> # join
add in 2 <264745 264976> out 1 <264977>  # join source bit 20
const-mul-2 in 1 <264977> out 1 <264978> # join
add in 2 <264744 264978> out 1 <264979>  # join source bit 19
const-mul-2 in 1 <264979> out 1 <264980> # join
add in 2 <264743 264980> out 1 <264981>  # join source bit 18
const-mul-2 in 1 <264981> out 1 <264982> # join
add in 2 <264742 264982> out 1 <264983>  # join source bit 17
const-mul-2 in 1 <264983> out 1 <264984> # join
add in 2 <264741 264984> out 1 <264985>  # join source bit 16
const-mul-2 in 1 <264985> out 1 <264986> # join
add in 2 <264740 264986> out 1 <264987>  # join source bit 15
const-mul-2 in 1 <264987> out 1 <264988> # join
add in 2 <264739 264988> out 1 <264989>  # join source bit 14
const-mul-2 in 1 <264989> out 1 <264990> # join
add in 2 <264738 264990> out 1 <264991>  # join source bit 13
const-mul-2 in 1 <264991> out 1 <264992> # join
add in 2 <264737 264992> out 1 <264993>  # join source bit 12
const-mul-2 in 1 <264993> out 1 <264994> # join
add in 2 <264736 264994> out 1 <264995>  # join source bit 11
const-mul-2 in 1 <264995> out 1 <264996> # join
add in 2 <264735 264996> out 1 <264997>  # join source bit 10
const-mul-2 in 1 <264997> out 1 <264998> # join
add in 2 <264734 264998> out 1 <264999>  # join source bit 9
const-mul-2 in 1 <264999> out 1 <265000> # join
add in 2 <264733 265000> out 1 <265001>  # join source bit 8
const-mul-2 in 1 <265001> out 1 <265002> # join
add in 2 <264732 265002> out 1 <265003>  # join source bit 7
const-mul-2 in 1 <265003> out 1 <265004> # join
add in 2 <264731 265004> out 1 <265005>  # join source bit 6
const-mul-2 in 1 <265005> out 1 <265006> # join
add in 2 <264730 265006> out 1 <265007>  # join source bit 5
const-mul-2 in 1 <265007> out 1 <265008> # join
add in 2 <264729 265008> out 1 <265009>  # join source bit 4
const-mul-2 in 1 <265009> out 1 <265010> # join
add in 2 <264728 265010> out 1 <265011>  # join source bit 3
const-mul-2 in 1 <265011> out 1 <265012> # join
add in 2 <264727 265012> out 1 <265013>  # join source bit 2
const-mul-2 in 1 <265013> out 1 <265014> # join
add in 2 <264726 265014> out 1 <265015>  # join source bit 1
const-mul-2 in 1 <265015> out 1 <265016> # join
add in 2 <264725 265016> out 1 <265017>  # join source bit 0
add in 2 <265017 265017> out 1 <265018>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <264722> out 1 <265019> # multiply-by-constant 4294967295
add in 2 <85 265019> out 1 <265020>      # 'CmpLT DFG.Input - DFG.Conditional'
split in 1 <265020> outplitBus
mul in 2 <265052 265018> out 1 <265284>  # cond trueterm
const-mul-neg-1 in 1 <265052> out 1 <265285> # cond minuscond
add in 2 <100 265285> out 1 <265286>     # cond negcond
mul in 2 <265286 264722> out 1 <265287>  # cond falseterm
add in 2 <265284 265287> out 1 <265288>  # cond result
add in 2 <264714 265288> out 1 <265289>  # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
split in 1 <265289> out 233 <265290 265291 265292 265293 265294 265295 265296 265297 265298 265299 265300 265301 265302 265303 265304 265305 265306 265307 265308 265309 265310 265311 265312 265313 265314 265315 265316 265317 265318 265319 265320 265321 265322 265323 265324 265325 265326 265327 265328 265329 265330 265331 265332 265333 265334 265335 265336 265337 265338 265339 265340 265341 265342 265343 265344 265345 265346 265347 265348 265349 265350 265351 265352 265353 265354 265355 265356 265357 265358 265359 265360 265361 265362 265363 265364 265365 265366 265367 265368 265369 265370 265371 265372 265373 265374 265375 265376 265377 265378 265379 265380 265381 265382 265383 265384 265385 265386 265387 265388 265389 265390 265391 265392 265393 265394 265395 265396 265397 265398 265399 265400 265401 265402 265403 265404 265405 265406 265407 265408 265409 265410 265411 265412 265413 265414 265415 265416 265417 265418 265419 265420 265421 265422 265423 265424 265425 265426 265427 265428 265429 265430 265431 265432 265433 265434 265435 265436 265437 265438 265439 265440 265441 265442 265443 265444 265445 265446 265447 265448 265449 265450 265451 265452 265453 265454 265455 265456 265457 265458 265459 265460 265461 265462 265463 265464 265465 265466 265467 265468 265469 265470 265471 265472 265473 265474 265475 265476 265477 265478 265479 265480 265481 265482 265483 265484 265485 265486 265487 265488 265489 265490 265491 265492 265493 265494 265495 265496 265497 265498 265499 265500 265501 265502 265503 265504 265505 265506 265507 265508 265509 265510 265511 265512 265513 265514 265515 265516 265517 265518 265519 265520 265521 265522> # SplitBus
const-mul-2 in 1 <265321> out 1 <265523> # join source bit 31
add in 2 <265320 265523> out 1 <265524>  # join source bit 30
const-mul-2 in 1 <265524> out 1 <265525> # join
add in 2 <265319 265525> out 1 <265526>  # join source bit 29
const-mul-2 in 1 <265526> out 1 <265527> # join
add in 2 <265318 265527> out 1 <265528>  # join source bit 28
const-mul-2 in 1 <265528> out 1 <265529> # join
add in 2 <265317 265529> out 1 <265530>  # join source bit 27
const-mul-2 in 1 <265530> out 1 <265531> # join
add in 2 <265316 265531> out 1 <265532>  # join source bit 26
const-mul-2 in 1 <265532> out 1 <265533> # join
add in 2 <265315 265533> out 1 <265534>  # join source bit 25
const-mul-2 in 1 <265534> out 1 <265535> # join
add in 2 <265314 265535> out 1 <265536>  # join source bit 24
const-mul-2 in 1 <265536> out 1 <265537> # join
add in 2 <265313 265537> out 1 <265538>  # join source bit 23
const-mul-2 in 1 <265538> out 1 <265539> # join
add in 2 <265312 265539> out 1 <265540>  # join source bit 22
const-mul-2 in 1 <265540> out 1 <265541> # join
add in 2 <265311 265541> out 1 <265542>  # join source bit 21
const-mul-2 in 1 <265542> out 1 <265543> # join
add in 2 <265310 265543> out 1 <265544>  # join source bit 20
const-mul-2 in 1 <265544> out 1 <265545> # join
add in 2 <265309 265545> out 1 <265546>  # join source bit 19
const-mul-2 in 1 <265546> out 1 <265547> # join
add in 2 <265308 265547> out 1 <265548>  # join source bit 18
const-mul-2 in 1 <265548> out 1 <265549> # join
add in 2 <265307 265549> out 1 <265550>  # join source bit 17
const-mul-2 in 1 <265550> out 1 <265551> # join
add in 2 <265306 265551> out 1 <265552>  # join source bit 16
const-mul-2 in 1 <265552> out 1 <265553> # join
add in 2 <265305 265553> out 1 <265554>  # join source bit 15
const-mul-2 in 1 <265554> out 1 <265555> # join
add in 2 <265304 265555> out 1 <265556>  # join source bit 14
const-mul-2 in 1 <265556> out 1 <265557> # join
add in 2 <265303 265557> out 1 <265558>  # join source bit 13
const-mul-2 in 1 <265558> out 1 <265559> # join
add in 2 <265302 265559> out 1 <265560>  # join source bit 12
const-mul-2 in 1 <265560> out 1 <265561> # join
add in 2 <265301 265561> out 1 <265562>  # join source bit 11
const-mul-2 in 1 <265562> out 1 <265563> # join
add in 2 <265300 265563> out 1 <265564>  # join source bit 10
const-mul-2 in 1 <265564> out 1 <265565> # join
add in 2 <265299 265565> out 1 <265566>  # join source bit 9
const-mul-2 in 1 <265566> out 1 <265567> # join
add in 2 <265298 265567> out 1 <265568>  # join source bit 8
const-mul-2 in 1 <265568> out 1 <265569> # join
add in 2 <265297 265569> out 1 <265570>  # join source bit 7
const-mul-2 in 1 <265570> out 1 <265571> # join
add in 2 <265296 265571> out 1 <265572>  # join source bit 6
const-mul-2 in 1 <265572> out 1 <265573> # join
add in 2 <265295 265573> out 1 <265574>  # join source bit 5
const-mul-2 in 1 <265574> out 1 <265575> # join
add in 2 <265294 265575> out 1 <265576>  # join source bit 4
const-mul-2 in 1 <265576> out 1 <265577> # join
add in 2 <265293 265577> out 1 <265578>  # join source bit 3
const-mul-2 in 1 <265578> out 1 <265579> # join
add in 2 <265292 265579> out 1 <265580>  # join source bit 2
const-mul-2 in 1 <265580> out 1 <265581> # join
add in 2 <265291 265581> out 1 <265582>  # join source bit 1
const-mul-2 in 1 <265582> out 1 <265583> # join
add in 2 <265290 265583> out 1 <265584>  # join source bit 0
add in 2 <265584 265584> out 1 <265585>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <264714> out 1 <265586> # multiply-by-constant 4294967295
add in 2 <265288 265586> out 1 <265587>  # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <265587> out 265 <265588 265589 265590 265591 265592 265593 265594 265595 265596 265597 265598 265599 265600 265601 265602 265603 265604 265605 265606 265607 265608 265609 265610 265611 265612 265613 265614 265615 265616 265617 265618 265619 265620 265621 265622 265623 265624 265625 265626 265627 265628 265629 265630 265631 265632 265633 265634 265635 265636 265637 265638 265639 265640 265641 265642 265643 265644 265645 265646 265647 265648 265649 265650 265651 265652 265653 265654 265655 265656 265657 265658 265659 265660 265661 265662 265663 265664 265665 265666 265667 265668 265669 265670 265671 265672 265673 265674 265675 265676 265677 265678 265679 265680 265681 265682 265683 265684 265685 265686 265687 265688 265689 265690 265691 265692 265693 265694 265695 265696 265697 265698 265699 265700 265701 265702 265703 265704 265705 265706 265707 265708 265709 265710 265711 265712 265713 265714 265715 265716 265717 265718 265719 265720 265721 265722 265723 265724 265725 265726 265727 265728 265729 265730 265731 265732 265733 265734 265735 265736 265737 265738 265739 265740 265741 265742 265743 265744 265745 265746 265747 265748 265749 265750 265751 265752 265753 265754 265755 265756 265757 265758 265759 265760 265761 265762 265763 265764 265765 265766 265767 265768 265769 265770 265771 265772 265773 265774 265775 265776 265777 265778 265779 265780 265781 265782 265783 265784 265785 265786 265787 265788 265789 265790 265791 265792 265793 265794 265795 265796 265797 265798 265799 265800 265801 265802 265803 265804 265805 265806 265807 265808 265809 265810 265811 265812 265813 265814 265815 265816 265817 265818 265819 265820 265821 265822 265823 265824 265825 265826 265827 265828 265829 265830 265831 265832 265833 265834 265835 265836 265837 265838 265839 265840 265841 265842 265843 265844 265845 265846 265847 265848 265849 265850 265851 265852> # SplitBus
mul in 2 <265619 265585> out 1 <265853>  # cond trueterm
const-mul-neg-1 in 1 <265619> out 1 <265854> # cond minuscond
add in 2 <100 265854> out 1 <265855>     # cond negcond
mul in 2 <265855 264714> out 1 <265856>  # cond falseterm
add in 2 <265853 265856> out 1 <265857>  # cond result
mul in 2 <264542 264506> out 1 <265858>  # cond trueterm
const-mul-neg-1 in 1 <264542> out 1 <265859> # cond minuscond
add in 2 <100 265859> out 1 <265860>     # cond negcond
mul in 2 <265860 264503> out 1 <265861>  # cond falseterm
add in 2 <265858 265861> out 1 <265862>  # cond result
mul in 2 <264398 264362> out 1 <265863>  # cond trueterm
const-mul-neg-1 in 1 <264398> out 1 <265864> # cond minuscond
add in 2 <100 265864> out 1 <265865>     # cond negcond
mul in 2 <265865 264359> out 1 <265866>  # cond falseterm
add in 2 <265863 265866> out 1 <265867>  # cond result
const-mul-ffffffff in 1 <265867> out 1 <265868> # multiply-by-constant 4294967295
add in 2 <265867 265862> out 1 <265869>  # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
add in 2 <265869 265868> out 1 <265870>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <265870> out 1 <265871> # multiply-by-constant 4294967295
add in 2 <265869 265871> out 1 <265872>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <265867> out 1 <265873> # multiply-by-constant 4294967295
add in 2 <265862 265873> out 1 <265874>  # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <265874> out 200 <265875 265876 265877 265878 265879 265880 265881 265882 265883 265884 265885 265886 265887 265888 265889 265890 265891 265892 265893 265894 265895 265896 265897 265898 265899 265900 265901 265902 265903 265904 265905 265906 265907 265908 265909 265910 265911 265912 265913 265914 265915 265916 265917 265918 265919 265920 265921 265922 265923 265924 265925 265926 265927 265928 265929 265930 265931 265932 265933 265934 265935 265936 265937 265938 265939 265940 265941 265942 265943 265944 265945 265946 265947 265948 265949 265950 265951 265952 265953 265954 265955 265956 265957 265958 265959 265960 265961 265962 265963 265964 265965 265966 265967 265968 265969 265970 265971 265972 265973 265974 265975 265976 265977 265978 265979 265980 265981 265982 265983 265984 265985 265986 265987 265988 265989 265990 265991 265992 265993 265994 265995 265996 265997 265998 265999 266000 266001 266002 266003 266004 266005 266006 266007 266008 266009 266010 266011 266012 266013 266014 266015 266016 266017 266018 266019 266020 266021 266022 266023 266024 266025 266026 266027 266028 266029 266030 266031 266032 266033 266034 266035 266036 266037 266038 266039 266040 266041 266042 266043 266044 266045 266046 266047 266048 266049 266050 266051 266052 266053 266054 266055 266056 266057 266058 266059 266060 266061 266062 266063 266064 266065 266066 266067 266068 266069 266070 266071 266072 266073 266074> # SplitBus
mul in 2 <265906 265872> out 1 <266075>  # cond trueterm
const-mul-neg-1 in 1 <265906> out 1 <266076> # cond minuscond
add in 2 <100 266076> out 1 <266077>     # cond negcond
mul in 2 <266077 265862> out 1 <266078>  # cond falseterm
add in 2 <266075 266078> out 1 <266079>  # cond result
const-mul-ffffffff in 1 <266079> out 1 <266080> # multiply-by-constant 4294967295
add in 2 <266079 265857> out 1 <266081>  # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
split in 1 <266081> out 235 <266082 266083 266084 266085 266086 266087 266088 266089 266090 266091 266092 266093 266094 266095 266096 266097 266098 266099 266100 266101 266102 266103 266104 266105 266106 266107 266108 266109 266110 266111 266112 266113 266114 266115 266116 266117 266118 266119 266120 266121 266122 266123 266124 266125 266126 266127 266128 266129 266130 266131 266132 266133 266134 266135 266136 266137 266138 266139 266140 266141 266142 266143 266144 266145 266146 266147 266148 266149 266150 266151 266152 266153 266154 266155 266156 266157 266158 266159 266160 266161 266162 266163 266164 266165 266166 266167 266168 266169 266170 266171 266172 266173 266174 266175 266176 266177 266178 266179 266180 266181 266182 266183 266184 266185 266186 266187 266188 266189 266190 266191 266192 266193 266194 266195 266196 266197 266198 266199 266200 266201 266202 266203 266204 266205 266206 266207 266208 266209 266210 266211 266212 266213 266214 266215 266216 266217 266218 266219 266220 266221 266222 266223 266224 266225 266226 266227 266228 266229 266230 266231 266232 266233 266234 266235 266236 266237 266238 266239 266240 266241 266242 266243 266244 266245 266246 266247 266248 266249 266250 266251 266252 266253 266254 266255 266256 266257 266258 266259 266260 266261 266262 266263 266264 266265 266266 266267 266268 266269 266270 266271 266272 266273 266274 266275 266276 266277 266278 266279 266280 266281 266282 266283 266284 266285 266286 266287 266288 266289 266290 266291 266292 266293 266294 266295 266296 266297 266298 266299 266300 266301 266302 266303 266304 266305 266306 266307 266308 266309 266310 266311 266312 266313 266314 266315 266316> # SplitBus
const-mul-2 in 1 <266113> out 1 <266317> # join source bit 31
add in 2 <266112 266317> out 1 <266318>  # join source bit 30
const-mul-2 in 1 <266318> out 1 <266319> # join
add in 2 <266111 266319> out 1 <266320>  # join source bit 29
const-mul-2 in 1 <266320> out 1 <266321> # join
add in 2 <266110 266321> out 1 <266322>  # join source bit 28
const-mul-2 in 1 <266322> out 1 <266323> # join
add in 2 <266109 266323> out 1 <266324>  # join source bit 27
const-mul-2 in 1 <266324> out 1 <266325> # join
add in 2 <266108 266325> out 1 <266326>  # join source bit 26
const-mul-2 in 1 <266326> out 1 <266327> # join
add in 2 <266107 266327> out 1 <266328>  # join source bit 25
const-mul-2 in 1 <266328> out 1 <266329> # join
add in 2 <266106 266329> out 1 <266330>  # join source bit 24
const-mul-2 in 1 <266330> out 1 <266331> # join
add in 2 <266105 266331> out 1 <266332>  # join source bit 23
const-mul-2 in 1 <266332> out 1 <266333> # join
add in 2 <266104 266333> out 1 <266334>  # join source bit 22
const-mul-2 in 1 <266334> out 1 <266335> # join
add in 2 <266103 266335> out 1 <266336>  # join source bit 21
const-mul-2 in 1 <266336> out 1 <266337> # join
add in 2 <266102 266337> out 1 <266338>  # join source bit 20
const-mul-2 in 1 <266338> out 1 <266339> # join
add in 2 <266101 266339> out 1 <266340>  # join source bit 19
const-mul-2 in 1 <266340> out 1 <266341> # join
add in 2 <266100 266341> out 1 <266342>  # join source bit 18
const-mul-2 in 1 <266342> out 1 <266343> # join
add in 2 <266099 266343> out 1 <266344>  # join source bit 17
const-mul-2 in 1 <266344> out 1 <266345> # join
add in 2 <266098 266345> out 1 <266346>  # join source bit 16
const-mul-2 in 1 <266346> out 1 <266347> # join
add in 2 <266097 266347> out 1 <266348>  # join source bit 15
const-mul-2 in 1 <266348> out 1 <266349> # join
add in 2 <266096 266349> out 1 <266350>  # join source bit 14
const-mul-2 in 1 <266350> out 1 <266351> # join
add in 2 <266095 266351> out 1 <266352>  # join source bit 13
const-mul-2 in 1 <266352> out 1 <266353> # join
add in 2 <266094 266353> out 1 <266354>  # join source bit 12
const-mul-2 in 1 <266354> out 1 <266355> # join
add in 2 <266093 266355> out 1 <266356>  # join source bit 11
const-mul-2 in 1 <266356> out 1 <266357> # join
add in 2 <266092 266357> out 1 <266358>  # join source bit 10
const-mul-2 in 1 <266358> out 1 <266359> # join
add in 2 <266091 266359> out 1 <266360>  # join source bit 9
const-mul-2 in 1 <266360> out 1 <266361> # join
add in 2 <266090 266361> out 1 <266362>  # join source bit 8
const-mul-2 in 1 <266362> out 1 <266363> # join
add in 2 <266089 266363> out 1 <266364>  # join source bit 7
const-mul-2 in 1 <266364> out 1 <266365> # join
add in 2 <266088 266365> out 1 <266366>  # join source bit 6
const-mul-2 in 1 <266366> out 1 <266367> # join
add in 2 <266087 266367> out 1 <266368>  # join source bit 5
const-mul-2 in 1 <266368> out 1 <266369> # join
add in 2 <266086 266369> out 1 <266370>  # join source bit 4
const-mul-2 in 1 <266370> out 1 <266371> # join
add in 2 <266085 266371> out 1 <266372>  # join source bit 3
const-mul-2 in 1 <266372> out 1 <266373> # join
add in 2 <266084 266373> out 1 <266374>  # join source bit 2
const-mul-2 in 1 <266374> out 1 <266375> # join
add in 2 <266083 266375> out 1 <266376>  # join source bit 1
const-mul-2 in 1 <266376> out 1 <266377> # join
add in 2 <266082 266377> out 1 <266378>  # join source bit 0
add in 2 <266378 266378> out 1 <266379>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <266379> out 1 <266380> # multiply-by-constant 4294967295
add in 2 <266081 266380> out 1 <266381>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <266079> out 1 <266382> # multiply-by-constant 4294967295
add in 2 <265857 266382> out 1 <266383>  # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <266383> out 267 <266384 266385 266386 266387 266388 266389 266390 266391 266392 266393 266394 266395 266396 266397 266398 266399 266400 266401 266402 266403 266404 266405 266406 266407 266408 266409 266410 266411 266412 266413 266414 266415 266416 266417 266418 266419 266420 266421 266422 266423 266424 266425 266426 266427 266428 266429 266430 266431 266432 266433 266434 266435 266436 266437 266438 266439 266440 266441 266442 266443 266444 266445 266446 266447 266448 266449 266450 266451 266452 266453 266454 266455 266456 266457 266458 266459 266460 266461 266462 266463 266464 266465 266466 266467 266468 266469 266470 266471 266472 266473 266474 266475 266476 266477 266478 266479 266480 266481 266482 266483 266484 266485 266486 266487 266488 266489 266490 266491 266492 266493 266494 266495 266496 266497 266498 266499 266500 266501 266502 266503 266504 266505 266506 266507 266508 266509 266510 266511 266512 266513 266514 266515 266516 266517 266518 266519 266520 266521 266522 266523 266524 266525 266526 266527 266528 266529 266530 266531 266532 266533 266534 266535 266536 266537 266538 266539 266540 266541 266542 266543 266544 266545 266546 266547 266548 266549 266550 266551 266552 266553 266554 266555 266556 266557 266558 266559 266560 266561 266562 266563 266564 266565 266566 266567 266568 266569 266570 266571 266572 266573 266574 266575 266576 266577 266578 266579 266580 266581 266582 266583 266584 266585 266586 266587 266588 266589 266590 266591 266592 266593 266594 266595 266596 266597 266598 266599 266600 266601 266602 266603 266604 266605 266606 266607 266608 266609 266610 266611 266612 266613 266614 266615 266616 266617 266618 266619 266620 266621 266622 266623 266624 266625 266626 266627 266628 266629 266630 266631 266632 266633 266634 266635 266636 266637 266638 266639 266640 266641 266642 266643 266644 266645 266646 266647 266648 266649 266650> # SplitBus
mul in 2 <266415 266381> out 1 <266651>  # cond trueterm
const-mul-neg-1 in 1 <266415> out 1 <266652> # cond minuscond
add in 2 <100 266652> out 1 <266653>     # cond negcond
mul in 2 <266653 265857> out 1 <266654>  # cond falseterm
add in 2 <266651 266654> out 1 <266655>  # cond result
add in 2 <266655 104> out 1 <266656>     # ArithBusReq.AddReq(DFG.Conditional,DFG.Constant)
const-mul-ffffffff in 1 <83> out 1 <266657> # multiply-by-constant 4294967295
add in 2 <266656 266657> out 1 <266658>  # 'CmpLT DFG.Add - DFG.Input'
split in 1 <266658> out 238 <266659 266660 266661 266662 266663 266664 266665 266666 266667 266668 266669 266670 266671 266672 266673 266674 266675 266676 266677 266678 266679 266680 266681 266682 266683 266684 266685 266686 266687 266688 266689 266690 266691 266692 266693 266694 266695 266696 266697 266698 266699 266700 266701 266702 266703 266704 266705 266706 266707 266708 266709 266710 266711 266712 266713 266714 266715 266716 266717 266718 266719 266720 266721 266722 266723 266724 266725 266726 266727 266728 266729 266730 266731 266732 266733 266734 266735 266736 266737 266738 266739 266740 266741 266742 266743 266744 266745 266746 266747 266748 266749 266750 266751 266752 266753 266754 266755 266756 266757 266758 266759 266760 266761 266762 266763 266764 266765 266766 266767 266768 266769 266770 266771 266772 266773 266774 266775 266776 266777 266778 266779 266780 266781 266782 266783 266784 266785 266786 266787 266788 266789 266790 266791 266792 266793 266794 266795 266796 266797 266798 266799 266800 266801 266802 266803 266804 266805 266806 266807 266808 266809 266810 266811 266812 266813 266814 266815 266816 266817 266818 266819 266820 266821 266822 266823 266824 266825 266826 266827 266828 266829 266830 266831 266832 266833 266834 266835 266836 266837 266838 266839 266840 266841 266842 266843 266844 266845 266846 266847 266848 266849 266850 266851 266852 266853 266854 266855 266856 266857 266858 266859 266860 266861 266862 266863 266864 266865 266866 266867 266868 266869 266870 266871 266872 266873 266874 266875 266876 266877 266878 266879 266880 266881 266882 266883 266884 266885 266886 266887 266888 266889 266890 266891 266892 266893 266894 266895 266896> # SplitBus
mul in 2 <266690 103> out 1 <266897>     # cond trueterm
const-mul-neg-1 in 1 <266690> out 1 <266898> # cond minuscond
add in 2 <100 266898> out 1 <266899>     # cond negcond
mul in 2 <266899 102> out 1 <266900>     # cond falseterm
add in 2 <266897 266900> out 1 <266901>  # cond result
add in 2 <266655 3084> out 1 <266902>    # ArithBusReq.AddReq(DFG.Conditional,DFG.Negate)
const-mul-ffffffff in 1 <266902> out 1 <266903> # multiply-by-constant 4294967295
add in 2 <83 266903> out 1 <266904>      # 'CmpLT DFG.Input - DFG.Subtract'
split in 1 <266904> outplitBus
mul in 2 <266936 103> out 1 <267175>     # cond trueterm
const-mul-neg-1 in 1 <266936> out 1 <267176> # cond minuscond
add in 2 <100 267176> out 1 <267177>     # cond negcond
mul in 2 <267177 266901> out 1 <267178>  # cond falseterm
add in 2 <267175 267178> out 1 <267179>  # cond result
const-mul-ffffffff in 1 <82> out 1 <267180> # multiply-by-constant 4294967295
add in 2 <82 83> out 1 <267181>          # ArithBusReq.AddReq(DFG.Input,DFG.Input)
add in 2 <267181 267180> out 1 <267182>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <267182> out 1 <267183> # multiply-by-constant 4294967295
add in 2 <267181 267183> out 1 <267184>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <82> out 1 <267185> # multiply-by-constant 4294967295
add in 2 <83 267185> out 1 <267186>      # 'CmpLT DFG.Input - DFG.Input'
split in 1 <267186> out 65 <267187 267188 267189 267190 267191 267192 267193 267194 267195 267196 267197 267198 267199 267200 267201 267202 267203 267204 267205 267206 267207 267208 267209 267210 267211 267212 267213 267214 267215 267216 267217 267218 267219 267220 267221 267222 267223 267224 267225 267226 267227 267228 267229 267230 267231 267232 267233 267234 267235 267236 267237 267238 267239 267240 267241 267242 267243 267244 267245 267246 267247 267248 267249 267250 267251> # SplitBus
mul in 2 <267218 267184> out 1 <267252>  # cond trueterm
const-mul-neg-1 in 1 <267218> out 1 <267253> # cond minuscond
add in 2 <100 267253> out 1 <267254>     # cond negcond
mul in 2 <267254 83> out 1 <267255>      # cond falseterm
add in 2 <267252 267255> out 1 <267256>  # cond result
const-mul-ffffffff in 1 <267256> out 1 <267257> # multiply-by-constant 4294967295
add in 2 <267256 84> out 1 <267258>      # ArithBusReq.AddReq(DFG.Conditional,DFG.Input)
add in 2 <267258 267257> out 1 <267259>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <267259> out 1 <267260> # multiply-by-constant 4294967295
add in 2 <267258 267260> out 1 <267261>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <267256> out 1 <267262> # multiply-by-constant 4294967295
add in 2 <84 267262> out 1 <267263>      # 'CmpLT DFG.Input - DFG.Conditional'
split in 1 <267263> out 131 <267264 267265 267266 267267 267268 267269 267270 267271 267272 267273 267274 267275 267276 267277 267278 267279 267280 267281 267282 267283 267284 267285 267286 267287 267288 267289 267290 267291 267292 267293 267294 267295 267296 267297 267298 267299 267300 267301 267302 267303 267304 267305 267306 267307 267308 267309 267310 267311 267312 267313 267314 267315 267316 267317 267318 267319 267320 267321 267322 267323 267324 267325 267326 267327 267328 267329 267330 267331 267332 267333 267334 267335 267336 267337 267338 267339 267340 267341 267342 267343 267344 267345 267346 267347 267348 267349 267350 267351 267352 267353 267354 267355 267356 267357 267358 267359 267360 267361 267362 267363 267364 267365 267366 267367 267368 267369 267370 267371 267372 267373 267374 267375 267376 267377 267378 267379 267380 267381 267382 267383 267384 267385 267386 267387 267388 267389 267390 267391 267392 267393 267394> # SplitBus
mul in 2 <267295 267261> out 1 <267395>  # cond trueterm
const-mul-neg-1 in 1 <267295> out 1 <267396> # cond minuscond
add in 2 <100 267396> out 1 <267397>     # cond negcond
mul in 2 <267397 84> out 1 <267398>      # cond falseterm
add in 2 <267395 267398> out 1 <267399>  # cond result
const-mul-ffffffff in 1 <267399> out 1 <267400> # multiply-by-constant 4294967295
add in 2 <267399 85> out 1 <267401>      # ArithBusReq.AddReq(DFG.Conditional,DFG.Input)
add in 2 <267401 267400> out 1 <267402>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <267399> out 1 <267403> # multiply-by-constant 4294967295
add in 2 <85 267403> out 1 <267404>      # 'CmpLT DFG.Input - DFG.Conditional'
split in 1 <267404> out 197 <267405 267406 267407 267408 267409 267410 267411 267412 267413 267414 267415 267416 267417 267418 267419 267420 267421 267422 267423 267424 267425 267426 267427 267428 267429 267430 267431 267432 267433 267434 267435 267436 267437 267438 267439 267440 267441 267442 267443 267444 267445 267446 267447 267448 267449 267450 267451 267452 267453 267454 267455 267456 267457 267458 267459 267460 267461 267462 267463 267464 267465 267466 267467 267468 267469 267470 267471 267472 267473 267474 267475 267476 267477 267478 267479 267480 267481 267482 267483 267484 267485 267486 267487 267488 267489 267490 267491 267492 267493 267494 267495 267496 267497 267498 267499 267500 267501 267502 267503 267504 267505 267506 267507 267508 267509 267510 267511 267512 267513 267514 267515 267516 267517 267518 267519 267520 267521 267522 267523 267524 267525 267526 267527 267528 267529 267530 267531 267532 267533 267534 267535 267536 267537 267538 267539 267540 267541 267542 267543 267544 267545 267546 267547 267548 267549 267550 267551 267552 267553 267554 267555 267556 267557 267558 267559 267560 267561 267562 267563 267564 267565 267566 267567 267568 267569 267570 267571 267572 267573 267574 267575 267576 267577 267578 267579 267580 267581 267582 267583 267584 267585 267586 267587 267588 267589 267590 267591 267592 267593 267594 267595 267596 267597 267598 267599 267600 267601> # SplitBus
mul in 2 <267436 267402> out 1 <267602>  # cond trueterm
const-mul-neg-1 in 1 <267436> out 1 <267603> # cond minuscond
add in 2 <100 267603> out 1 <267604>     # cond negcond
mul in 2 <267604 267399> out 1 <267605>  # cond falseterm
add in 2 <267602 267605> out 1 <267606>  # cond result
mul in 2 <267295 267259> out 1 <267607>  # cond trueterm
const-mul-neg-1 in 1 <267295> out 1 <267608> # cond minuscond
add in 2 <100 267608> out 1 <267609>     # cond negcond
mul in 2 <267609 267256> out 1 <267610>  # cond falseterm
add in 2 <267607 267610> out 1 <267611>  # cond result
mul in 2 <267218 267182> out 1 <267612>  # cond trueterm
const-mul-neg-1 in 1 <267218> out 1 <267613> # cond minuscond
add in 2 <100 267613> out 1 <267614>     # cond negcond
mul in 2 <267614 82> out 1 <267615>      # cond falseterm
add in 2 <267612 267615> out 1 <267616>  # cond result
const-mul-ffffffff in 1 <267616> out 1 <267617> # multiply-by-constant 4294967295
add in 2 <267616 267611> out 1 <267618>  # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
add in 2 <267618 267617> out 1 <267619>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <267619> out 1 <267620> # multiply-by-constant 4294967295
add in 2 <267618 267620> out 1 <267621>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <267616> out 1 <267622> # multiply-by-constant 4294967295
add in 2 <267611 267622> out 1 <267623>  # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <267623> out 132 <267624 267625 267626 267627 267628 267629 267630 267631 267632 267633 267634 267635 267636 267637 267638 267639 267640 267641 267642 267643 267644 267645 267646 267647 267648 267649 267650 267651 267652 267653 267654 267655 267656 267657 267658 267659 267660 267661 267662 267663 267664 267665 267666 267667 267668 267669 267670 267671 267672 267673 267674 267675 267676 267677 267678 267679 267680 267681 267682 267683 267684 267685 267686 267687 267688 267689 267690 267691 267692 267693 267694 267695 267696 267697 267698 267699 267700 267701 267702 267703 267704 267705 267706 267707 267708 267709 267710 267711 267712 267713 267714 267715 267716 267717 267718 267719 267720 267721 267722 267723 267724 267725 267726 267727 267728 267729 267730 267731 267732 267733 267734 267735 267736 267737 267738 267739 267740 267741 267742 267743 267744 267745 267746 267747 267748 267749 267750 267751 267752 267753 267754 267755> # SplitBus
mul in 2 <267655 267621> out 1 <267756>  # cond trueterm
const-mul-neg-1 in 1 <267655> out 1 <267757> # cond minuscond
add in 2 <100 267757> out 1 <267758>     # cond negcond
mul in 2 <267758 267611> out 1 <267759>  # cond falseterm
add in 2 <267756 267759> out 1 <267760>  # cond result
const-mul-ffffffff in 1 <267760> out 1 <267761> # multiply-by-constant 4294967295
add in 2 <267760 267606> out 1 <267762>  # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
add in 2 <267762 267761> out 1 <267763>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <267763> out 1 <267764> # multiply-by-constant 4294967295
add in 2 <267762 267764> out 1 <267765>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <267760> out 1 <267766> # multiply-by-constant 4294967295
add in 2 <267606 267766> out 1 <267767>  # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <267767> out 199 <267768 267769 267770 267771 267772 267773 267774 267775 267776 267777 267778 267779 267780 267781 267782 267783 267784 267785 267786 267787 267788 267789 267790 267791 267792 267793 267794 267795 267796 267797 267798 267799 267800 267801 267802 267803 267804 267805 267806 267807 267808 267809 267810 267811 267812 267813 267814 267815 267816 267817 267818 267819 267820 267821 267822 267823 267824 267825 267826 267827 267828 267829 267830 267831 267832 267833 267834 267835 267836 267837 267838 267839 267840 267841 267842 267843 267844 267845 267846 267847 267848 267849 267850 267851 267852 267853 267854 267855 267856 267857 267858 267859 267860 267861 267862 267863 267864 267865 267866 267867 267868 267869 267870 267871 267872 267873 267874 267875 267876 267877 267878 267879 267880 267881 267882 267883 267884 267885 267886 267887 267888 267889 267890 267891 267892 267893 267894 267895 267896 267897 267898 267899 267900 267901 267902 267903 267904 267905 267906 267907 267908 267909 267910 267911 267912 267913 267914 267915 267916 267917 267918 267919 267920 267921 267922 267923 267924 267925 267926 267927 267928 267929 267930 267931 267932 267933 267934 267935 267936 267937 267938 267939 267940 267941 267942 267943 267944 267945 267946 267947 267948 267949 267950 267951 267952 267953 267954 267955 267956 267957 267958 267959 267960 267961 267962 267963 267964 267965 267966> # SplitBus
mul in 2 <267799 267765> out 1 <267967>  # cond trueterm
const-mul-neg-1 in 1 <267799> out 1 <267968> # cond minuscond
add in 2 <100 267968> out 1 <267969>     # cond negcond
mul in 2 <267969 267606> out 1 <267970>  # cond falseterm
add in 2 <267967 267970> out 1 <267971>  # cond result
const-mul-ffffffff in 1 <267971> out 1 <267972> # multiply-by-constant 4294967295
const-mul-ffffffff in 1 <267402> out 1 <267973> # multiply-by-constant 4294967295
add in 2 <267401 267973> out 1 <267974>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
mul in 2 <267436 267974> out 1 <267975>  # cond trueterm
const-mul-neg-1 in 1 <267436> out 1 <267976> # cond minuscond
add in 2 <100 267976> out 1 <267977>     # cond negcond
mul in 2 <267977 85> out 1 <267978>      # cond falseterm
add in 2 <267975 267978> out 1 <267979>  # cond result
const-mul-ffffffff in 1 <267979> out 1 <267980> # multiply-by-constant 4294967295
add in 2 <267979 86> out 1 <267981>      # ArithBusReq.AddReq(DFG.Conditional,DFG.Input)
split in 1 <267981> out 231 <267982 267983 267984 267985 267986 267987 267988 267989 267990 267991 267992 267993 267994 267995 267996 267997 267998 267999 268000 268001 268002 268003 268004 268005 268006 268007 268008 268009 268010 268011 268012 268013 268014 268015 268016 268017 268018 268019 268020 268021 268022 268023 268024 268025 268026 268027 268028 268029 268030 268031 268032 268033 268034 268035 268036 268037 268038 268039 268040 268041 268042 268043 268044 268045 268046 268047 268048 268049 268050 268051 268052 268053 268054 268055 268056 268057 268058 268059 268060 268061 268062 268063 268064 268065 268066 268067 268068 268069 268070 268071 268072 268073 268074 268075 268076 268077 268078 268079 268080 268081 268082 268083 268084 268085 268086 268087 268088 268089 268090 268091 268092 268093 268094 268095 268096 268097 268098 268099 268100 268101 268102 268103 268104 268105 268106 268107 268108 268109 268110 268111 268112 268113 268114 268115 268116 268117 268118 268119 268120 268121 268122 268123 268124 268125 268126 268127 268128 268129 268130 268131 268132 268133 268134 268135 268136 268137 268138 268139 268140 268141 268142 268143 268144 268145 268146 268147 268148 268149 268150 268151 268152 268153 268154 268155 268156 268157 268158 268159 268160 268161 268162 268163 268164 268165 268166 268167 268168 268169 268170 268171 268172 268173 268174 268175 268176 268177 268178 268179 268180 268181 268182 268183 268184 268185 268186 268187 268188 268189 268190 268191 268192 268193 268194 268195 268196 268197 268198 268199 268200 268201 268202 268203 268204 268205 268206 268207 268208 268209 268210 268211 268212> # SplitBus
const-mul-2 in 1 <268013> out 1 <268213> # join source bit 31
add in 2 <268012 268213> out 1 <268214>  # join source bit 30
const-mul-2 in 1 <268214> out 1 <268215> # join
add in 2 <268011 268215> out 1 <268216>  # join source bit 29
const-mul-2 in 1 <268216> out 1 <268217> # join
add in 2 <268010 268217> out 1 <268218>  # join source bit 28
const-mul-2 in 1 <268218> out 1 <268219> # join
add in 2 <268009 268219> out 1 <268220>  # join source bit 27
const-mul-2 in 1 <268220> out 1 <268221> # join
add in 2 <268008 268221> out 1 <268222>  # join source bit 26
const-mul-2 in 1 <268222> out 1 <268223> # join
add in 2 <268007 268223> out 1 <268224>  # join source bit 25
const-mul-2 in 1 <268224> out 1 <268225> # join
add in 2 <268006 268225> out 1 <268226>  # join source bit 24
const-mul-2 in 1 <268226> out 1 <268227> # join
add in 2 <268005 268227> out 1 <268228>  # join source bit 23
const-mul-2 in 1 <268228> out 1 <268229> # join
add in 2 <268004 268229> out 1 <268230>  # join source bit 22
const-mul-2 in 1 <268230> out 1 <268231> # join
add in 2 <268003 268231> out 1 <268232>  # join source bit 21
const-mul-2 in 1 <268232> out 1 <268233> # join
add in 2 <268002 268233> out 1 <268234>  # join source bit 20
const-mul-2 in 1 <268234> out 1 <268235> # join
add in 2 <268001 268235> out 1 <268236>  # join source bit 19
const-mul-2 in 1 <268236> out 1 <268237> # join
add in 2 <268000 268237> out 1 <268238>  # join source bit 18
const-mul-2 in 1 <268238> out 1 <268239> # join
add in 2 <267999 268239> out 1 <268240>  # join source bit 17
const-mul-2 in 1 <268240> out 1 <268241> # join
add in 2 <267998 268241> out 1 <268242>  # join source bit 16
const-mul-2 in 1 <268242> out 1 <268243> # join
add in 2 <267997 268243> out 1 <268244>  # join source bit 15
const-mul-2 in 1 <268244> out 1 <268245> # join
add in 2 <267996 268245> out 1 <268246>  # join source bit 14
const-mul-2 in 1 <268246> out 1 <268247> # join
add in 2 <267995 268247> out 1 <268248>  # join source bit 13
const-mul-2 in 1 <268248> out 1 <268249> # join
add in 2 <267994 268249> out 1 <268250>  # join source bit 12
const-mul-2 in 1 <268250> out 1 <268251> # join
add in 2 <267993 268251> out 1 <268252>  # join source bit 11
const-mul-2 in 1 <268252> out 1 <268253> # join
add in 2 <267992 268253> out 1 <268254>  # join source bit 10
const-mul-2 in 1 <268254> out 1 <268255> # join
add in 2 <267991 268255> out 1 <268256>  # join source bit 9
const-mul-2 in 1 <268256> out 1 <268257> # join
add in 2 <267990 268257> out 1 <268258>  # join source bit 8
const-mul-2 in 1 <268258> out 1 <268259> # join
add in 2 <267989 268259> out 1 <268260>  # join source bit 7
const-mul-2 in 1 <268260> out 1 <268261> # join
add in 2 <267988 268261> out 1 <268262>  # join source bit 6
const-mul-2 in 1 <268262> out 1 <268263> # join
add in 2 <267987 268263> out 1 <268264>  # join source bit 5
const-mul-2 in 1 <268264> out 1 <268265> # join
add in 2 <267986 268265> out 1 <268266>  # join source bit 4
const-mul-2 in 1 <268266> out 1 <268267> # join
add in 2 <267985 268267> out 1 <268268>  # join source bit 3
const-mul-2 in 1 <268268> out 1 <268269> # join
add in 2 <267984 268269> out 1 <268270>  # join source bit 2
const-mul-2 in 1 <268270> out 1 <268271> # join
add in 2 <267983 268271> out 1 <268272>  # join source bit 1
const-mul-2 in 1 <268272> out 1 <268273> # join
add in 2 <267982 268273> out 1 <268274>  # join source bit 0
add in 2 <268274 268274> out 1 <268275>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <267979> out 1 <268276> # multiply-by-constant 4294967295
add in 2 <86 268276> out 1 <268277>      # 'CmpLT DFG.Input - DFG.Conditional'
split in 1 <268277> out 263 <268278 268279 268280 268281 268282 268283 268284 268285 268286 268287 268288 268289 268290 268291 268292 268293 268294 268295 268296 268297 268298 268299 268300 268301 268302 268303 268304 268305 268306 268307 268308 268309 268310 268311 268312 268313 268314 268315 268316 268317 268318 268319 268320 268321 268322 268323 268324 268325 268326 268327 268328 268329 268330 268331 268332 268333 268334 268335 268336 268337 268338 268339 268340 268341 268342 268343 268344 268345 268346 268347 268348 268349 268350 268351 268352 268353 268354 268355 268356 268357 268358 268359 268360 268361 268362 268363 268364 268365 268366 268367 268368 268369 268370 268371 268372 268373 268374 268375 268376 268377 268378 268379 268380 268381 268382 268383 268384 268385 268386 268387 268388 268389 268390 268391 268392 268393 268394 268395 268396 268397 268398 268399 268400 268401 268402 268403 268404 268405 268406 268407 268408 268409 268410 268411 268412 268413 268414 268415 268416 268417 268418 268419 268420 268421 268422 268423 268424 268425 268426 268427 268428 268429 268430 268431 268432 268433 268434 268435 268436 268437 268438 268439 268440 268441 268442 268443 268444 268445 268446 268447 268448 268449 268450 268451 268452 268453 268454 268455 268456 268457 268458 268459 268460 268461 268462 268463 268464 268465 268466 268467 268468 268469 268470 268471 268472 268473 268474 268475 268476 268477 268478 268479 268480 268481 268482 268483 268484 268485 268486 268487 268488 268489 268490 268491 268492 268493 268494 268495 268496 268497 268498 268499 268500 268501 268502 268503 268504 268505 268506 268507 268508 268509 268510 268511 268512 268513 268514 268515 268516 268517 268518 268519 268520 268521 268522 268523 268524 268525 268526 268527 268528 268529 268530 268531 268532 268533 268534 268535 268536 268537 268538 268539 268540> # SplitBus
mul in 2 <268309 268275> out 1 <268541>  # cond trueterm
const-mul-neg-1 in 1 <268309> out 1 <268542> # cond minuscond
add in 2 <100 268542> out 1 <268543>     # cond negcond
mul in 2 <268543 267979> out 1 <268544>  # cond falseterm
add in 2 <268541 268544> out 1 <268545>  # cond result
add in 2 <267971 268545> out 1 <268546>  # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
split in 1 <268546> out 233 <268547 268548 268549 268550 268551 268552 268553 268554 268555 268556 268557 268558 268559 268560 268561 268562 268563 268564 268565 268566 268567 268568 268569 268570 268571 268572 268573 268574 268575 268576 268577 268578 268579 268580 268581 268582 268583 268584 268585 268586 268587 268588 268589 268590 268591 268592 268593 268594 268595 268596 268597 268598 268599 268600 268601 268602 268603 268604 268605 268606 268607 268608 268609 268610 268611 268612 268613 268614 268615 268616 268617 268618 268619 268620 268621 268622 268623 268624 268625 268626 268627 268628 268629 268630 268631 268632 268633 268634 268635 268636 268637 268638 268639 268640 268641 268642 268643 268644 268645 268646 268647 268648 268649 268650 268651 268652 268653 268654 268655 268656 268657 268658 268659 268660 268661 268662 268663 268664 268665 268666 268667 268668 268669 268670 268671 268672 268673 268674 268675 268676 268677 268678 268679 268680 268681 268682 268683 268684 268685 268686 268687 268688 268689 268690 268691 268692 268693 268694 268695 268696 268697 268698 268699 268700 268701 268702 268703 268704 268705 268706 268707 268708 268709 268710 268711 268712 268713 268714 268715 268716 268717 268718 268719 268720 268721 268722 268723 268724 268725 268726 268727 268728 268729 268730 268731 268732 268733 268734 268735 268736 268737 268738 268739 268740 268741 268742 268743 268744 268745 268746 268747 268748 268749 268750 268751 268752 268753 268754 268755 268756 268757 268758 268759 268760 268761 268762 268763 268764 268765 268766 268767 268768 268769 268770 268771 268772 268773 268774 268775 268776 268777 268778 268779> # SplitBus
const-mul-2 in 1 <268578> out 1 <268780> # join source bit 31
add in 2 <268577 268780> out 1 <268781>  # join source bit 30
const-mul-2 in 1 <268781> out 1 <268782> # join
add in 2 <268576 268782> out 1 <268783>  # join source bit 29
const-mul-2 in 1 <268783> out 1 <268784> # join
add in 2 <268575 268784> out 1 <268785>  # join source bit 28
const-mul-2 in 1 <268785> out 1 <268786> # join
add in 2 <268574 268786> out 1 <268787>  # join source bit 27
const-mul-2 in 1 <268787> out 1 <268788> # join
add in 2 <268573 268788> out 1 <268789>  # join source bit 26
const-mul-2 in 1 <268789> out 1 <268790> # join
add in 2 <268572 268790> out 1 <268791>  # join source bit 25
const-mul-2 in 1 <268791> out 1 <268792> # join
add in 2 <268571 268792> out 1 <268793>  # join source bit 24
const-mul-2 in 1 <268793> out 1 <268794> # join
add in 2 <268570 268794> out 1 <268795>  # join source bit 23
const-mul-2 in 1 <268795> out 1 <268796> # join
add in 2 <268569 268796> out 1 <268797>  # join source bit 22
const-mul-2 in 1 <268797> out 1 <268798> # join
add in 2 <268568 268798> out 1 <268799>  # join source bit 21
const-mul-2 in 1 <268799> out 1 <268800> # join
add in 2 <268567 268800> out 1 <268801>  # join source bit 20
const-mul-2 in 1 <268801> out 1 <268802> # join
add in 2 <268566 268802> out 1 <268803>  # join source bit 19
const-mul-2 in 1 <268803> out 1 <268804> # join
add in 2 <268565 268804> out 1 <268805>  # join source bit 18
const-mul-2 in 1 <268805> out 1 <268806> # join
add in 2 <268564 268806> out 1 <268807>  # join source bit 17
const-mul-2 in 1 <268807> out 1 <268808> # join
add in 2 <268563 268808> out 1 <268809>  # join source bit 16
const-mul-2 in 1 <268809> out 1 <268810> # join
add in 2 <268562 268810> out 1 <268811>  # join source bit 15
const-mul-2 in 1 <268811> out 1 <268812> # join
add in 2 <268561 268812> out 1 <268813>  # join source bit 14
const-mul-2 in 1 <268813> out 1 <268814> # join
add in 2 <268560 268814> out 1 <268815>  # join source bit 13
const-mul-2 in 1 <268815> out 1 <268816> # join
add in 2 <268559 268816> out 1 <268817>  # join source bit 12
const-mul-2 in 1 <268817> out 1 <268818> # join
add in 2 <268558 268818> out 1 <268819>  # join source bit 11
const-mul-2 in 1 <268819> out 1 <268820> # join
add in 2 <268557 268820> out 1 <268821>  # join source bit 10
const-mul-2 in 1 <268821> out 1 <268822> # join
add in 2 <268556 268822> out 1 <268823>  # join source bit 9
const-mul-2 in 1 <268823> out 1 <268824> # join
add in 2 <268555 268824> out 1 <268825>  # join source bit 8
const-mul-2 in 1 <268825> out 1 <268826> # join
add in 2 <268554 268826> out 1 <268827>  # join source bit 7
const-mul-2 in 1 <268827> out 1 <268828> # join
add in 2 <268553 268828> out 1 <268829>  # join source bit 6
const-mul-2 in 1 <268829> out 1 <268830> # join
add in 2 <268552 268830> out 1 <268831>  # join source bit 5
const-mul-2 in 1 <268831> out 1 <268832> # join
add in 2 <268551 268832> out 1 <268833>  # join source bit 4
const-mul-2 in 1 <268833> out 1 <268834> # join
add in 2 <268550 268834> out 1 <268835>  # join source bit 3
const-mul-2 in 1 <268835> out 1 <268836> # join
add in 2 <268549 268836> out 1 <268837>  # join source bit 2
const-mul-2 in 1 <268837> out 1 <268838> # join
add in 2 <268548 268838> out 1 <268839>  # join source bit 1
const-mul-2 in 1 <268839> out 1 <268840> # join
add in 2 <268547 268840> out 1 <268841>  # join source bit 0
add in 2 <268841 268841> out 1 <268842>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <267971> out 1 <268843> # multiply-by-constant 4294967295
add in 2 <268545 268843> out 1 <268844>  # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <268844> out 265 <268845 268846 268847 268848 268849 268850 268851 268852 268853 268854 268855 268856 268857 268858 268859 268860 268861 268862 268863 268864 268865 268866 268867 268868 268869 268870 268871 268872 268873 268874 268875 268876 268877 268878 268879 268880 268881 268882 268883 268884 268885 268886 268887 268888 268889 268890 268891 268892 268893 268894 268895 268896 268897 268898 268899 268900 268901 268902 268903 268904 268905 268906 268907 268908 268909 268910 268911 268912 268913 268914 268915 268916 268917 268918 268919 268920 268921 268922 268923 268924 268925 268926 268927 268928 268929 268930 268931 268932 268933 268934 268935 268936 268937 268938 268939 268940 268941 268942 268943 268944 268945 268946 268947 268948 268949 268950 268951 268952 268953 268954 268955 268956 268957 268958 268959 268960 268961 268962 268963 268964 268965 268966 268967 268968 268969 268970 268971 268972 268973 268974 268975 268976 268977 268978 268979 268980 268981 268982 268983 268984 268985 268986 268987 268988 268989 268990 268991 268992 268993 268994 268995 268996 268997 268998 268999 269000 269001 269002 269003 269004 269005 269006 269007 269008 269009 269010 269011 269012 269013 269014 269015 269016 269017 269018 269019 269020 269021 269022 269023 269024 269025 269026 269027 269028 269029 269030 269031 269032 269033 269034 269035 269036 269037 269038 269039 269040 269041 269042 269043 269044 269045 269046 269047 269048 269049 269050 269051 269052 269053 269054 269055 269056 269057 269058 269059 269060 269061 269062 269063 269064 269065 269066 269067 269068 269069 269070 269071 269072 269073 269074 269075 269076 269077 269078 269079 269080 269081 269082 269083 269084 269085 269086 269087 269088 269089 269090 269091 269092 269093 269094 269095 269096 269097 269098 269099 269100 269101 269102 269103 269104 269105 269106 269107 269108 269109> # SplitBus
mul in 2 <268876 268842> out 1 <269110>  # cond trueterm
const-mul-neg-1 in 1 <268876> out 1 <269111> # cond minuscond
add in 2 <100 269111> out 1 <269112>     # cond negcond
mul in 2 <269112 267971> out 1 <269113>  # cond falseterm
add in 2 <269110 269113> out 1 <269114>  # cond result
mul in 2 <267799 267763> out 1 <269115>  # cond trueterm
const-mul-neg-1 in 1 <267799> out 1 <269116> # cond minuscond
add in 2 <100 269116> out 1 <269117>     # cond negcond
mul in 2 <269117 267760> out 1 <269118>  # cond falseterm
add in 2 <269115 269118> out 1 <269119>  # cond result
mul in 2 <267655 267619> out 1 <269120>  # cond trueterm
const-mul-neg-1 in 1 <267655> out 1 <269121> # cond minuscond
add in 2 <100 269121> out 1 <269122>     # cond negcond
mul in 2 <269122 267616> out 1 <269123>  # cond falseterm
add in 2 <269120 269123> out 1 <269124>  # cond result
const-mul-ffffffff in 1 <269124> out 1 <269125> # multiply-by-constant 4294967295
add in 2 <269124 269119> out 1 <269126>  # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
add in 2 <269126 269125> out 1 <269127>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <269127> out 1 <269128> # multiply-by-constant 4294967295
add in 2 <269126 269128> out 1 <269129>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <269124> out 1 <269130> # multiply-by-constant 4294967295
add in 2 <269119 269130> out 1 <269131>  # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <269131> out 200 <269132 269133 269134 269135 269136 269137 269138 269139 269140 269141 269142 269143 269144 269145 269146 269147 269148 269149 269150 269151 269152 269153 269154 269155 269156 269157 269158 269159 269160 269161 269162 269163 269164 269165 269166 269167 269168 269169 269170 269171 269172 269173 269174 269175 269176 269177 269178 269179 269180 269181 269182 269183 269184 269185 269186 269187 269188 269189 269190 269191 269192 269193 269194 269195 269196 269197 269198 269199 269200 269201 269202 269203 269204 269205 269206 269207 269208 269209 269210 269211 269212 269213 269214 269215 269216 269217 269218 269219 269220 269221 269222 269223 269224 269225 269226 269227 269228 269229 269230 269231 269232 269233 269234 269235 269236 269237 269238 269239 269240 269241 269242 269243 269244 269245 269246 269247 269248 269249 269250 269251 269252 269253 269254 269255 269256 269257 269258 269259 269260 269261 269262 269263 269264 269265 269266 269267 269268 269269 269270 269271 269272 269273 269274 269275 269276 269277 269278 269279 269280 269281 269282 269283 269284 269285 269286 269287 269288 269289 269290 269291 269292 269293 269294 269295 269296 269297 269298 269299 269300 269301 269302 269303 269304 269305 269306 269307 269308 269309 269310 269311 269312 269313 269314 269315 269316 269317 269318 269319 269320 269321 269322 269323 269324 269325 269326 269327 269328 269329 269330 269331> # SplitBus
mul in 2 <269163 269129> out 1 <269332>  # cond trueterm
const-mul-neg-1 in 1 <269163> out 1 <269333> # cond minuscond
add in 2 <100 269333> out 1 <269334>     # cond negcond
mul in 2 <269334 269119> out 1 <269335>  # cond falseterm
add in 2 <269332 269335> out 1 <269336>  # cond result
const-mul-ffffffff in 1 <269336> out 1 <269337> # multiply-by-constant 4294967295
add in 2 <269336 269114> out 1 <269338>  # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
split in 1 <269338> out 235 <269339 269340 269341 269342 269343 269344 269345 269346 269347 269348 269349 269350 269351 269352 269353 269354 269355 269356 269357 269358 269359 269360 269361 269362 269363 269364 269365 269366 269367 269368 269369 269370 269371 269372 269373 269374 269375 269376 269377 269378 269379 269380 269381 269382 269383 269384 269385 269386 269387 269388 269389 269390 269391 269392 269393 269394 269395 269396 269397 269398 269399 269400 269401 269402 269403 269404 269405 269406 269407 269408 269409 269410 269411 269412 269413 269414 269415 269416 269417 269418 269419 269420 269421 269422 269423 269424 269425 269426 269427 269428 269429 269430 269431 269432 269433 269434 269435 269436 269437 269438 269439 269440 269441 269442 269443 269444 269445 269446 269447 269448 269449 269450 269451 269452 269453 269454 269455 269456 269457 269458 269459 269460 269461 269462 269463 269464 269465 269466 269467 269468 269469 269470 269471 269472 269473 269474 269475 269476 269477 269478 269479 269480 269481 269482 269483 269484 269485 269486 269487 269488 269489 269490 269491 269492 269493 269494 269495 269496 269497 269498 269499 269500 269501 269502 269503 269504 269505 269506 269507 269508 269509 269510 269511 269512 269513 269514 269515 269516 269517 269518 269519 269520 269521 269522 269523 269524 269525 269526 269527 269528 269529 269530 269531 269532 269533 269534 269535 269536 269537 269538 269539 269540 269541 269542 269543 269544 269545 269546 269547 269548 269549 269550 269551 269552 269553 269554 269555 269556 269557 269558 269559 269560 269561 269562 269563 269564 269565 269566 269567 269568 269569 269570 269571 269572 269573> # SplitBus
const-mul-2 in 1 <269370> out 1 <269574> # join source bit 31
add in 2 <269369 269574> out 1 <269575>  # join source bit 30
const-mul-2 in 1 <269575> out 1 <269576> # join
add in 2 <269368 269576> out 1 <269577>  # join source bit 29
const-mul-2 in 1 <269577> out 1 <269578> # join
add in 2 <269367 269578> out 1 <269579>  # join source bit 28
const-mul-2 in 1 <269579> out 1 <269580> # join
add in 2 <269366 269580> out 1 <269581>  # join source bit 27
const-mul-2 in 1 <269581> out 1 <269582> # join
add in 2 <269365 269582> out 1 <269583>  # join source bit 26
const-mul-2 in 1 <269583> out 1 <269584> # join
add in 2 <269364 269584> out 1 <269585>  # join source bit 25
const-mul-2 in 1 <269585> out 1 <269586> # join
add in 2 <269363 269586> out 1 <269587>  # join source bit 24
const-mul-2 in 1 <269587> out 1 <269588> # join
add in 2 <269362 269588> out 1 <269589>  # join source bit 23
const-mul-2 in 1 <269589> out 1 <269590> # join
add in 2 <269361 269590> out 1 <269591>  # join source bit 22
const-mul-2 in 1 <269591> out 1 <269592> # join
add in 2 <269360 269592> out 1 <269593>  # join source bit 21
const-mul-2 in 1 <269593> out 1 <269594> # join
add in 2 <269359 269594> out 1 <269595>  # join source bit 20
const-mul-2 in 1 <269595> out 1 <269596> # join
add in 2 <269358 269596> out 1 <269597>  # join source bit 19
const-mul-2 in 1 <269597> out 1 <269598> # join
add in 2 <269357 269598> out 1 <269599>  # join source bit 18
const-mul-2 in 1 <269599> out 1 <269600> # join
add in 2 <269356 269600> out 1 <269601>  # join source bit 17
const-mul-2 in 1 <269601> out 1 <269602> # join
add in 2 <269355 269602> out 1 <269603>  # join source bit 16
const-mul-2 in 1 <269603> out 1 <269604> # join
add in 2 <269354 269604> out 1 <269605>  # join source bit 15
const-mul-2 in 1 <269605> out 1 <269606> # join
add in 2 <269353 269606> out 1 <269607>  # join source bit 14
const-mul-2 in 1 <269607> out 1 <269608> # join
add in 2 <269352 269608> out 1 <269609>  # join source bit 13
const-mul-2 in 1 <269609> out 1 <269610> # join
add in 2 <269351 269610> out 1 <269611>  # join source bit 12
const-mul-2 in 1 <269611> out 1 <269612> # join
add in 2 <269350 269612> out 1 <269613>  # join source bit 11
const-mul-2 in 1 <269613> out 1 <269614> # join
add in 2 <269349 269614> out 1 <269615>  # join source bit 10
const-mul-2 in 1 <269615> out 1 <269616> # join
add in 2 <269348 269616> out 1 <269617>  # join source bit 9
const-mul-2 in 1 <269617> out 1 <269618> # join
add in 2 <269347 269618> out 1 <269619>  # join source bit 8
const-mul-2 in 1 <269619> out 1 <269620> # join
add in 2 <269346 269620> out 1 <269621>  # join source bit 7
const-mul-2 in 1 <269621> out 1 <269622> # join
add in 2 <269345 269622> out 1 <269623>  # join source bit 6
const-mul-2 in 1 <269623> out 1 <269624> # join
add in 2 <269344 269624> out 1 <269625>  # join source bit 5
const-mul-2 in 1 <269625> out 1 <269626> # join
add in 2 <269343 269626> out 1 <269627>  # join source bit 4
const-mul-2 in 1 <269627> out 1 <269628> # join
add in 2 <269342 269628> out 1 <269629>  # join source bit 3
const-mul-2 in 1 <269629> out 1 <269630> # join
add in 2 <269341 269630> out 1 <269631>  # join source bit 2
const-mul-2 in 1 <269631> out 1 <269632> # join
add in 2 <269340 269632> out 1 <269633>  # join source bit 1
const-mul-2 in 1 <269633> out 1 <269634> # join
add in 2 <269339 269634> out 1 <269635>  # join source bit 0
add in 2 <269635 269635> out 1 <269636>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <269636> out 1 <269637> # multiply-by-constant 4294967295
add in 2 <269338 269637> out 1 <269638>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <269336> out 1 <269639> # multiply-by-constant 4294967295
add in 2 <269114 269639> out 1 <269640>  # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <269640> out 267 <269641 269642 269643 269644 269645 269646 269647 269648 269649 269650 269651 269652 269653 269654 269655 269656 269657 269658 269659 269660 269661 269662 269663 269664 269665 269666 269667 269668 269669 269670 269671 269672 269673 269674 269675 269676 269677 269678 269679 269680 269681 269682 269683 269684 269685 269686 269687 269688 269689 269690 269691 269692 269693 269694 269695 269696 269697 269698 269699 269700 269701 269702 269703 269704 269705 269706 269707 269708 269709 269710 269711 269712 269713 269714 269715 269716 269717 269718 269719 269720 269721 269722 269723 269724 269725 269726 269727 269728 269729 269730 269731 269732 269733 269734 269735 269736 269737 269738 269739 269740 269741 269742 269743 269744 269745 269746 269747 269748 269749 269750 269751 269752 269753 269754 269755 269756 269757 269758 269759 269760 269761 269762 269763 269764 269765 269766 269767 269768 269769 269770 269771 269772 269773 269774 269775 269776 269777 269778 269779 269780 269781 269782 269783 269784 269785 269786 269787 269788 269789 269790 269791 269792 269793 269794 269795 269796 269797 269798 269799 269800 269801 269802 269803 269804 269805 269806 269807 269808 269809 269810 269811 269812 269813 269814 269815 269816 269817 269818 269819 269820 269821 269822 269823 269824 269825 269826 269827 269828 269829 269830 269831 269832 269833 269834 269835 269836 269837 269838 269839 269840 269841 269842 269843 269844 269845 269846 269847 269848 269849 269850 269851 269852 269853 269854 269855 269856 269857 269858 269859 269860 269861 269862 269863 269864 269865 269866 269867 269868 269869 269870 269871 269872 269873 269874 269875 269876 269877 269878 269879 269880 269881 269882 269883 269884 269885 269886 269887 269888 269889 269890 269891 269892 269893 269894 269895 269896 269897 269898 269899 269900 269901 269902 269903 269904 269905 269906 269907> # SplitBus
mul in 2 <269672 269638> out 1 <269908>  # cond trueterm
const-mul-neg-1 in 1 <269672> out 1 <269909> # cond minuscond
add in 2 <100 269909> out 1 <269910>     # cond negcond
mul in 2 <269910 269114> out 1 <269911>  # cond falseterm
add in 2 <269908 269911> out 1 <269912>  # cond result
add in 2 <269912 104> out 1 <269913>     # ArithBusReq.AddReq(DFG.Conditional,DFG.Constant)
const-mul-ffffffff in 1 <84> out 1 <269914> # multiply-by-constant 4294967295
add in 2 <269913 269914> out 1 <269915>  # 'CmpLT DFG.Add - DFG.Input'
split in 1 <269915> outplitBus
mul in 2 <269947 103> out 1 <270154>     # cond trueterm
const-mul-neg-1 in 1 <269947> out 1 <270155> # cond minuscond
add in 2 <100 270155> out 1 <270156>     # cond negcond
mul in 2 <270156 102> out 1 <270157>     # cond falseterm
add in 2 <270154 270157> out 1 <270158>  # cond result
add in 2 <269912 3084> out 1 <270159>    # ArithBusReq.AddReq(DFG.Conditional,DFG.Negate)
const-mul-ffffffff in 1 <270159> out 1 <270160> # multiply-by-constant 4294967295
add in 2 <84 270160> out 1 <270161>      # 'CmpLT DFG.Input - DFG.Subtract'
split in 1 <270161> out 270 <270162 270163 270164 270165 270166 270167 270168 270169 270170 270171 270172 270173 270174 270175 270176 270177 270178 270179 270180 270181 270182 270183 270184 270185 270186 270187 270188 270189 270190 270191 270192 270193 270194 270195 270196 270197 270198 270199 270200 270201 270202 270203 270204 270205 270206 270207 270208 270209 270210 270211 270212 270213 270214 270215 270216 270217 270218 270219 270220 270221 270222 270223 270224 270225 270226 270227 270228 270229 270230 270231 270232 270233 270234 270235 270236 270237 270238 270239 270240 270241 270242 270243 270244 270245 270246 270247 270248 270249 270250 270251 270252 270253 270254 270255 270256 270257 270258 270259 270260 270261 270262 270263 270264 270265 270266 270267 270268 270269 270270 270271 270272 270273 270274 270275 270276 270277 270278 270279 270280 270281 270282 270283 270284 270285 270286 270287 270288 270289 270290 270291 270292 270293 270294 270295 270296 270297 270298 270299 270300 270301 270302 270303 270304 270305 270306 270307 270308 270309 270310 270311 270312 270313 270314 270315 270316 270317 270318 270319 270320 270321 270322 270323 270324 270325 270326 270327 270328 270329 270330 270331 270332 270333 270334 270335 270336 270337 270338 270339 270340 270341 270342 270343 270344 270345 270346 270347 270348 270349 270350 270351 270352 270353 270354 270355 270356 270357 270358 270359 270360 270361 270362 270363 270364 270365 270366 270367 270368 270369 270370 270371 270372 270373 270374 270375 270376 270377 270378 270379 270380 270381 270382 270383 270384 270385 270386 270387 270388 270389 270390 270391 270392 270393 270394 270395 270396 270397 270398 270399 270400 270401 270402 270403 270404 270405 270406 270407 270408 270409 270410 270411 270412 270413 270414 270415 270416 270417 270418 270419 270420 270421 270422 270423 270424 270425 270426 270427 270428 270429 270430 270431> # SplitBus
mul in 2 <270193 103> out 1 <270432>     # cond trueterm
const-mul-neg-1 in 1 <270193> out 1 <270433> # cond minuscond
add in 2 <100 270433> out 1 <270434>     # cond negcond
mul in 2 <270434 270158> out 1 <270435>  # cond falseterm
add in 2 <270432 270435> out 1 <270436>  # cond result
const-mul-ffffffff in 1 <83> out 1 <270437> # multiply-by-constant 4294967295
add in 2 <83 84> out 1 <270438>          # ArithBusReq.AddReq(DFG.Input,DFG.Input)
add in 2 <270438 270437> out 1 <270439>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <270439> out 1 <270440> # multiply-by-constant 4294967295
add in 2 <270438 270440> out 1 <270441>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <83> out 1 <270442> # multiply-by-constant 4294967295
add in 2 <84 270442> out 1 <270443>      # 'CmpLT DFG.Input - DFG.Input'
split in 1 <270443> out 65 <270444 270445 270446 270447 270448 270449 270450 270451 270452 270453 270454 270455 270456 270457 270458 270459 270460 270461 270462 270463 270464 270465 270466 270467 270468 270469 270470 270471 270472 270473 270474 270475 270476 270477 270478 270479 270480 270481 270482 270483 270484 270485 270486 270487 270488 270489 270490 270491 270492 270493 270494 270495 270496 270497 270498 270499 270500 270501 270502 270503 270504 270505 270506 270507 270508> # SplitBus
mul in 2 <270475 270441> out 1 <270509>  # cond trueterm
const-mul-neg-1 in 1 <270475> out 1 <270510> # cond minuscond
add in 2 <100 270510> out 1 <270511>     # cond negcond
mul in 2 <270511 84> out 1 <270512>      # cond falseterm
add in 2 <270509 270512> out 1 <270513>  # cond result
const-mul-ffffffff in 1 <270513> out 1 <270514> # multiply-by-constant 4294967295
add in 2 <270513 85> out 1 <270515>      # ArithBusReq.AddReq(DFG.Conditional,DFG.Input)
add in 2 <270515 270514> out 1 <270516>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <270516> out 1 <270517> # multiply-by-constant 4294967295
add in 2 <270515 270517> out 1 <270518>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <270513> out 1 <270519> # multiply-by-constant 4294967295
add in 2 <85 270519> out 1 <270520>      # 'CmpLT DFG.Input - DFG.Conditional'
split in 1 <270520> out 131 <270521 270522 270523 270524 270525 270526 270527 270528 270529 270530 270531 270532 270533 270534 270535 270536 270537 270538 270539 270540 270541 270542 270543 270544 270545 270546 270547 270548 270549 270550 270551 270552 270553 270554 270555 270556 270557 270558 270559 270560 270561 270562 270563 270564 270565 270566 270567 270568 270569 270570 270571 270572 270573 270574 270575 270576 270577 270578 270579 270580 270581 270582 270583 270584 270585 270586 270587 270588 270589 270590 270591 270592 270593 270594 270595 270596 270597 270598 270599 270600 270601 270602 270603 270604 270605 270606 270607 270608 270609 270610 270611 270612 270613 270614 270615 270616 270617 270618 270619 270620 270621 270622 270623 270624 270625 270626 270627 270628 270629 270630 270631 270632 270633 270634 270635 270636 270637 270638 270639 270640 270641 270642 270643 270644 270645 270646 270647 270648 270649 270650 270651> # SplitBus
mul in 2 <270552 270518> out 1 <270652>  # cond trueterm
const-mul-neg-1 in 1 <270552> out 1 <270653> # cond minuscond
add in 2 <100 270653> out 1 <270654>     # cond negcond
mul in 2 <270654 85> out 1 <270655>      # cond falseterm
add in 2 <270652 270655> out 1 <270656>  # cond result
const-mul-ffffffff in 1 <270656> out 1 <270657> # multiply-by-constant 4294967295
add in 2 <270656 86> out 1 <270658>      # ArithBusReq.AddReq(DFG.Conditional,DFG.Input)
add in 2 <270658 270657> out 1 <270659>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <270656> out 1 <270660> # multiply-by-constant 4294967295
add in 2 <86 270660> out 1 <270661>      # 'CmpLT DFG.Input - DFG.Conditional'
split in 1 <270661> out 197 <270662 270663 270664 270665 270666 270667 270668 270669 270670 270671 270672 270673 270674 270675 270676 270677 270678 270679 270680 270681 270682 270683 270684 270685 270686 270687 270688 270689 270690 270691 270692 270693 270694 270695 270696 270697 270698 270699 270700 270701 270702 270703 270704 270705 270706 270707 270708 270709 270710 270711 270712 270713 270714 270715 270716 270717 270718 270719 270720 270721 270722 270723 270724 270725 270726 270727 270728 270729 270730 270731 270732 270733 270734 270735 270736 270737 270738 270739 270740 270741 270742 270743 270744 270745 270746 270747 270748 270749 270750 270751 270752 270753 270754 270755 270756 270757 270758 270759 270760 270761 270762 270763 270764 270765 270766 270767 270768 270769 270770 270771 270772 270773 270774 270775 270776 270777 270778 270779 270780 270781 270782 270783 270784 270785 270786 270787 270788 270789 270790 270791 270792 270793 270794 270795 270796 270797 270798 270799 270800 270801 270802 270803 270804 270805 270806 270807 270808 270809 270810 270811 270812 270813 270814 270815 270816 270817 270818 270819 270820 270821 270822 270823 270824 270825 270826 270827 270828 270829 270830 270831 270832 270833 270834 270835 270836 270837 270838 270839 270840 270841 270842 270843 270844 270845 270846 270847 270848 270849 270850 270851 270852 270853 270854 270855 270856 270857 270858> # SplitBus
mul in 2 <270693 270659> out 1 <270859>  # cond trueterm
const-mul-neg-1 in 1 <270693> out 1 <270860> # cond minuscond
add in 2 <100 270860> out 1 <270861>     # cond negcond
mul in 2 <270861 270656> out 1 <270862>  # cond falseterm
add in 2 <270859 270862> out 1 <270863>  # cond result
mul in 2 <270552 270516> out 1 <270864>  # cond trueterm
const-mul-neg-1 in 1 <270552> out 1 <270865> # cond minuscond
add in 2 <100 270865> out 1 <270866>     # cond negcond
mul in 2 <270866 270513> out 1 <270867>  # cond falseterm
add in 2 <270864 270867> out 1 <270868>  # cond result
mul in 2 <270475 270439> out 1 <270869>  # cond trueterm
const-mul-neg-1 in 1 <270475> out 1 <270870> # cond minuscond
add in 2 <100 270870> out 1 <270871>     # cond negcond
mul in 2 <270871 83> out 1 <270872>      # cond falseterm
add in 2 <270869 270872> out 1 <270873>  # cond result
const-mul-ffffffff in 1 <270873> out 1 <270874> # multiply-by-constant 4294967295
add in 2 <270873 270868> out 1 <270875>  # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
add in 2 <270875 270874> out 1 <270876>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <270876> out 1 <270877> # multiply-by-constant 4294967295
add in 2 <270875 270877> out 1 <270878>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <270873> out 1 <270879> # multiply-by-constant 4294967295
add in 2 <270868 270879> out 1 <270880>  # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <270880> out 132 <270881 270882 270883 270884 270885 270886 270887 270888 270889 270890 270891 270892 270893 270894 270895 270896 270897 270898 270899 270900 270901 270902 270903 270904 270905 270906 270907 270908 270909 270910 270911 270912 270913 270914 270915 270916 270917 270918 270919 270920 270921 270922 270923 270924 270925 270926 270927 270928 270929 270930 270931 270932 270933 270934 270935 270936 270937 270938 270939 270940 270941 270942 270943 270944 270945 270946 270947 270948 270949 270950 270951 270952 270953 270954 270955 270956 270957 270958 270959 270960 270961 270962 270963 270964 270965 270966 270967 270968 270969 270970 270971 270972 270973 270974 270975 270976 270977 270978 270979 270980 270981 270982 270983 270984 270985 270986 270987 270988 270989 270990 270991 270992 270993 270994 270995 270996 270997 270998 270999 271000 271001 271002 271003 271004 271005 271006 271007 271008 271009 271010 271011 271012> # SplitBus
mul in 2 <270912 270878> out 1 <271013>  # cond trueterm
const-mul-neg-1 in 1 <270912> out 1 <271014> # cond minuscond
add in 2 <100 271014> out 1 <271015>     # cond negcond
mul in 2 <271015 270868> out 1 <271016>  # cond falseterm
add in 2 <271013 271016> out 1 <271017>  # cond result
const-mul-ffffffff in 1 <271017> out 1 <271018> # multiply-by-constant 4294967295
add in 2 <271017 270863> out 1 <271019>  # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
add in 2 <271019 271018> out 1 <271020>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <271020> out 1 <271021> # multiply-by-constant 4294967295
add in 2 <271019 271021> out 1 <271022>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <271017> out 1 <271023> # multiply-by-constant 4294967295
add in 2 <270863 271023> out 1 <271024>  # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <271024> out 199 <271025 271026 271027 271028 271029 271030 271031 271032 271033 271034 271035 271036 271037 271038 271039 271040 271041 271042 271043 271044 271045 271046 271047 271048 271049 271050 271051 271052 271053 271054 271055 271056 271057 271058 271059 271060 271061 271062 271063 271064 271065 271066 271067 271068 271069 271070 271071 271072 271073 271074 271075 271076 271077 271078 271079 271080 271081 271082 271083 271084 271085 271086 271087 271088 271089 271090 271091 271092 271093 271094 271095 271096 271097 271098 271099 271100 271101 271102 271103 271104 271105 271106 271107 271108 271109 271110 271111 271112 271113 271114 271115 271116 271117 271118 271119 271120 271121 271122 271123 271124 271125 271126 271127 271128 271129 271130 271131 271132 271133 271134 271135 271136 271137 271138 271139 271140 271141 271142 271143 271144 271145 271146 271147 271148 271149 271150 271151 271152 271153 271154 271155 271156 271157 271158 271159 271160 271161 271162 271163 271164 271165 271166 271167 271168 271169 271170 271171 271172 271173 271174 271175 271176 271177 271178 271179 271180 271181 271182 271183 271184 271185 271186 271187 271188 271189 271190 271191 271192 271193 271194 271195 271196 271197 271198 271199 271200 271201 271202 271203 271204 271205 271206 271207 271208 271209 271210 271211 271212 271213 271214 271215 271216 271217 271218 271219 271220 271221 271222 271223> # SplitBus
mul in 2 <271056 271022> out 1 <271224>  # cond trueterm
const-mul-neg-1 in 1 <271056> out 1 <271225> # cond minuscond
add in 2 <100 271225> out 1 <271226>     # cond negcond
mul in 2 <271226 270863> out 1 <271227>  # cond falseterm
add in 2 <271224 271227> out 1 <271228>  # cond result
const-mul-ffffffff in 1 <271228> out 1 <271229> # multiply-by-constant 4294967295
const-mul-ffffffff in 1 <270659> out 1 <271230> # multiply-by-constant 4294967295
add in 2 <270658 271230> out 1 <271231>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
mul in 2 <270693 271231> out 1 <271232>  # cond trueterm
const-mul-neg-1 in 1 <270693> out 1 <271233> # cond minuscond
add in 2 <100 271233> out 1 <271234>     # cond negcond
mul in 2 <271234 86> out 1 <271235>      # cond falseterm
add in 2 <271232 271235> out 1 <271236>  # cond result
const-mul-ffffffff in 1 <271236> out 1 <271237> # multiply-by-constant 4294967295
add in 2 <271236 87> out 1 <271238>      # ArithBusReq.AddReq(DFG.Conditional,DFG.Input)
split in 1 <271238> out 231 <271239 271240 271241 271242 271243 271244 271245 271246 271247 271248 271249 271250 271251 271252 271253 271254 271255 271256 271257 271258 271259 271260 271261 271262 271263 271264 271265 271266 271267 271268 271269 271270 271271 271272 271273 271274 271275 271276 271277 271278 271279 271280 271281 271282 271283 271284 271285 271286 271287 271288 271289 271290 271291 271292 271293 271294 271295 271296 271297 271298 271299 271300 271301 271302 271303 271304 271305 271306 271307 271308 271309 271310 271311 271312 271313 271314 271315 271316 271317 271318 271319 271320 271321 271322 271323 271324 271325 271326 271327 271328 271329 271330 271331 271332 271333 271334 271335 271336 271337 271338 271339 271340 271341 271342 271343 271344 271345 271346 271347 271348 271349 271350 271351 271352 271353 271354 271355 271356 271357 271358 271359 271360 271361 271362 271363 271364 271365 271366 271367 271368 271369 271370 271371 271372 271373 271374 271375 271376 271377 271378 271379 271380 271381 271382 271383 271384 271385 271386 271387 271388 271389 271390 271391 271392 271393 271394 271395 271396 271397 271398 271399 271400 271401 271402 271403 271404 271405 271406 271407 271408 271409 271410 271411 271412 271413 271414 271415 271416 271417 271418 271419 271420 271421 271422 271423 271424 271425 271426 271427 271428 271429 271430 271431 271432 271433 271434 271435 271436 271437 271438 271439 271440 271441 271442 271443 271444 271445 271446 271447 271448 271449 271450 271451 271452 271453 271454 271455 271456 271457 271458 271459 271460 271461 271462 271463 271464 271465 271466 271467 271468 271469> # SplitBus
const-mul-2 in 1 <271270> out 1 <271470> # join source bit 31
add in 2 <271269 271470> out 1 <271471>  # join source bit 30
const-mul-2 in 1 <271471> out 1 <271472> # join
add in 2 <271268 271472> out 1 <271473>  # join source bit 29
const-mul-2 in 1 <271473> out 1 <271474> # join
add in 2 <271267 271474> out 1 <271475>  # join source bit 28
const-mul-2 in 1 <271475> out 1 <271476> # join
add in 2 <271266 271476> out 1 <271477>  # join source bit 27
const-mul-2 in 1 <271477> out 1 <271478> # join
add in 2 <271265 271478> out 1 <271479>  # join source bit 26
const-mul-2 in 1 <271479> out 1 <271480> # join
add in 2 <271264 271480> out 1 <271481>  # join source bit 25
const-mul-2 in 1 <271481> out 1 <271482> # join
add in 2 <271263 271482> out 1 <271483>  # join source bit 24
const-mul-2 in 1 <271483> out 1 <271484> # join
add in 2 <271262 271484> out 1 <271485>  # join source bit 23
const-mul-2 in 1 <271485> out 1 <271486> # join
add in 2 <271261 271486> out 1 <271487>  # join source bit 22
const-mul-2 in 1 <271487> out 1 <271488> # join
add in 2 <271260 271488> out 1 <271489>  # join source bit 21
const-mul-2 in 1 <271489> out 1 <271490> # join
add in 2 <271259 271490> out 1 <271491>  # join source bit 20
const-mul-2 in 1 <271491> out 1 <271492> # join
add in 2 <271258 271492> out 1 <271493>  # join source bit 19
const-mul-2 in 1 <271493> out 1 <271494> # join
add in 2 <271257 271494> out 1 <271495>  # join source bit 18
const-mul-2 in 1 <271495> out 1 <271496> # join
add in 2 <271256 271496> out 1 <271497>  # join source bit 17
const-mul-2 in 1 <271497> out 1 <271498> # join
add in 2 <271255 271498> out 1 <271499>  # join source bit 16
const-mul-2 in 1 <271499> out 1 <271500> # join
add in 2 <271254 271500> out 1 <271501>  # join source bit 15
const-mul-2 in 1 <271501> out 1 <271502> # join
add in 2 <271253 271502> out 1 <271503>  # join source bit 14
const-mul-2 in 1 <271503> out 1 <271504> # join
add in 2 <271252 271504> out 1 <271505>  # join source bit 13
const-mul-2 in 1 <271505> out 1 <271506> # join
add in 2 <271251 271506> out 1 <271507>  # join source bit 12
const-mul-2 in 1 <271507> out 1 <271508> # join
add in 2 <271250 271508> out 1 <271509>  # join source bit 11
const-mul-2 in 1 <271509> out 1 <271510> # join
add in 2 <271249 271510> out 1 <271511>  # join source bit 10
const-mul-2 in 1 <271511> out 1 <271512> # join
add in 2 <271248 271512> out 1 <271513>  # join source bit 9
const-mul-2 in 1 <271513> out 1 <271514> # join
add in 2 <271247 271514> out 1 <271515>  # join source bit 8
const-mul-2 in 1 <271515> out 1 <271516> # join
add in 2 <271246 271516> out 1 <271517>  # join source bit 7
const-mul-2 in 1 <271517> out 1 <271518> # join
add in 2 <271245 271518> out 1 <271519>  # join source bit 6
const-mul-2 in 1 <271519> out 1 <271520> # join
add in 2 <271244 271520> out 1 <271521>  # join source bit 5
const-mul-2 in 1 <271521> out 1 <271522> # join
add in 2 <271243 271522> out 1 <271523>  # join source bit 4
const-mul-2 in 1 <271523> out 1 <271524> # join
add in 2 <271242 271524> out 1 <271525>  # join source bit 3
const-mul-2 in 1 <271525> out 1 <271526> # join
add in 2 <271241 271526> out 1 <271527>  # join source bit 2
const-mul-2 in 1 <271527> out 1 <271528> # join
add in 2 <271240 271528> out 1 <271529>  # join source bit 1
const-mul-2 in 1 <271529> out 1 <271530> # join
add in 2 <271239 271530> out 1 <271531>  # join source bit 0
add in 2 <271531 271531> out 1 <271532>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <271236> out 1 <271533> # multiply-by-constant 4294967295
add in 2 <87 271533> out 1 <271534>      # 'CmpLT DFG.Input - DFG.Conditional'
split in 1 <271534> outplitBus
mul in 2 <271566 271532> out 1 <271798>  # cond trueterm
const-mul-neg-1 in 1 <271566> out 1 <271799> # cond minuscond
add in 2 <100 271799> out 1 <271800>     # cond negcond
mul in 2 <271800 271236> out 1 <271801>  # cond falseterm
add in 2 <271798 271801> out 1 <271802>  # cond result
add in 2 <271228 271802> out 1 <271803>  # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
split in 1 <271803> outplitBus
const-mul-2 in 1 <271835> out 1 <272037> # join source bit 31
add in 2 <271834 272037> out 1 <272038>  # join source bit 30
const-mul-2 in 1 <272038> out 1 <272039> # join
add in 2 <271833 272039> out 1 <272040>  # join source bit 29
const-mul-2 in 1 <272040> out 1 <272041> # join
add in 2 <271832 272041> out 1 <272042>  # join source bit 28
const-mul-2 in 1 <272042> out 1 <272043> # join
add in 2 <271831 272043> out 1 <272044>  # join source bit 27
const-mul-2 in 1 <272044> out 1 <272045> # join
add in 2 <271830 272045> out 1 <272046>  # join source bit 26
const-mul-2 in 1 <272046> out 1 <272047> # join
add in 2 <271829 272047> out 1 <272048>  # join source bit 25
const-mul-2 in 1 <272048> out 1 <272049> # join
add in 2 <271828 272049> out 1 <272050>  # join source bit 24
const-mul-2 in 1 <272050> out 1 <272051> # join
add in 2 <271827 272051> out 1 <272052>  # join source bit 23
const-mul-2 in 1 <272052> out 1 <272053> # join
add in 2 <271826 272053> out 1 <272054>  # join source bit 22
const-mul-2 in 1 <272054> out 1 <272055> # join
add in 2 <271825 272055> out 1 <272056>  # join source bit 21
const-mul-2 in 1 <272056> out 1 <272057> # join
add in 2 <271824 272057> out 1 <272058>  # join source bit 20
const-mul-2 in 1 <272058> out 1 <272059> # join
add in 2 <271823 272059> out 1 <272060>  # join source bit 19
const-mul-2 in 1 <272060> out 1 <272061> # join
add in 2 <271822 272061> out 1 <272062>  # join source bit 18
const-mul-2 in 1 <272062> out 1 <272063> # join
add in 2 <271821 272063> out 1 <272064>  # join source bit 17
const-mul-2 in 1 <272064> out 1 <272065> # join
add in 2 <271820 272065> out 1 <272066>  # join source bit 16
const-mul-2 in 1 <272066> out 1 <272067> # join
add in 2 <271819 272067> out 1 <272068>  # join source bit 15
const-mul-2 in 1 <272068> out 1 <272069> # join
add in 2 <271818 272069> out 1 <272070>  # join source bit 14
const-mul-2 in 1 <272070> out 1 <272071> # join
add in 2 <271817 272071> out 1 <272072>  # join source bit 13
const-mul-2 in 1 <272072> out 1 <272073> # join
add in 2 <271816 272073> out 1 <272074>  # join source bit 12
const-mul-2 in 1 <272074> out 1 <272075> # join
add in 2 <271815 272075> out 1 <272076>  # join source bit 11
const-mul-2 in 1 <272076> out 1 <272077> # join
add in 2 <271814 272077> out 1 <272078>  # join source bit 10
const-mul-2 in 1 <272078> out 1 <272079> # join
add in 2 <271813 272079> out 1 <272080>  # join source bit 9
const-mul-2 in 1 <272080> out 1 <272081> # join
add in 2 <271812 272081> out 1 <272082>  # join source bit 8
const-mul-2 in 1 <272082> out 1 <272083> # join
add in 2 <271811 272083> out 1 <272084>  # join source bit 7
const-mul-2 in 1 <272084> out 1 <272085> # join
add in 2 <271810 272085> out 1 <272086>  # join source bit 6
const-mul-2 in 1 <272086> out 1 <272087> # join
add in 2 <271809 272087> out 1 <272088>  # join source bit 5
const-mul-2 in 1 <272088> out 1 <272089> # join
add in 2 <271808 272089> out 1 <272090>  # join source bit 4
const-mul-2 in 1 <272090> out 1 <272091> # join
add in 2 <271807 272091> out 1 <272092>  # join source bit 3
const-mul-2 in 1 <272092> out 1 <272093> # join
add in 2 <271806 272093> out 1 <272094>  # join source bit 2
const-mul-2 in 1 <272094> out 1 <272095> # join
add in 2 <271805 272095> out 1 <272096>  # join source bit 1
const-mul-2 in 1 <272096> out 1 <272097> # join
add in 2 <271804 272097> out 1 <272098>  # join source bit 0
add in 2 <272098 272098> out 1 <272099>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <271228> out 1 <272100> # multiply-by-constant 4294967295
add in 2 <271802 272100> out 1 <272101>  # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <272101> outplitBus
mul in 2 <272133 272099> out 1 <272367>  # cond trueterm
const-mul-neg-1 in 1 <272133> out 1 <272368> # cond minuscond
add in 2 <100 272368> out 1 <272369>     # cond negcond
mul in 2 <272369 271228> out 1 <272370>  # cond falseterm
add in 2 <272367 272370> out 1 <272371>  # cond result
mul in 2 <271056 271020> out 1 <272372>  # cond trueterm
const-mul-neg-1 in 1 <271056> out 1 <272373> # cond minuscond
add in 2 <100 272373> out 1 <272374>     # cond negcond
mul in 2 <272374 271017> out 1 <272375>  # cond falseterm
add in 2 <272372 272375> out 1 <272376>  # cond result
mul in 2 <270912 270876> out 1 <272377>  # cond trueterm
const-mul-neg-1 in 1 <270912> out 1 <272378> # cond minuscond
add in 2 <100 272378> out 1 <272379>     # cond negcond
mul in 2 <272379 270873> out 1 <272380>  # cond falseterm
add in 2 <272377 272380> out 1 <272381>  # cond result
const-mul-ffffffff in 1 <272381> out 1 <272382> # multiply-by-constant 4294967295
add in 2 <272381 272376> out 1 <272383>  # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
add in 2 <272383 272382> out 1 <272384>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <272384> out 1 <272385> # multiply-by-constant 4294967295
add in 2 <272383 272385> out 1 <272386>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <272381> out 1 <272387> # multiply-by-constant 4294967295
add in 2 <272376 272387> out 1 <272388>  # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <272388> out 200 <272389 272390 272391 272392 272393 272394 272395 272396 272397 272398 272399 272400 272401 272402 272403 272404 272405 272406 272407 272408 272409 272410 272411 272412 272413 272414 272415 272416 272417 272418 272419 272420 272421 272422 272423 272424 272425 272426 272427 272428 272429 272430 272431 272432 272433 272434 272435 272436 272437 272438 272439 272440 272441 272442 272443 272444 272445 272446 272447 272448 272449 272450 272451 272452 272453 272454 272455 272456 272457 272458 272459 272460 272461 272462 272463 272464 272465 272466 272467 272468 272469 272470 272471 272472 272473 272474 272475 272476 272477 272478 272479 272480 272481 272482 272483 272484 272485 272486 272487 272488 272489 272490 272491 272492 272493 272494 272495 272496 272497 272498 272499 272500 272501 272502 272503 272504 272505 272506 272507 272508 272509 272510 272511 272512 272513 272514 272515 272516 272517 272518 272519 272520 272521 272522 272523 272524 272525 272526 272527 272528 272529 272530 272531 272532 272533 272534 272535 272536 272537 272538 272539 272540 272541 272542 272543 272544 272545 272546 272547 272548 272549 272550 272551 272552 272553 272554 272555 272556 272557 272558 272559 272560 272561 272562 272563 272564 272565 272566 272567 272568 272569 272570 272571 272572 272573 272574 272575 272576 272577 272578 272579 272580 272581 272582 272583 272584 272585 272586 272587 272588> # SplitBus
mul in 2 <272420 272386> out 1 <272589>  # cond trueterm
const-mul-neg-1 in 1 <272420> out 1 <272590> # cond minuscond
add in 2 <100 272590> out 1 <272591>     # cond negcond
mul in 2 <272591 272376> out 1 <272592>  # cond falseterm
add in 2 <272589 272592> out 1 <272593>  # cond result
const-mul-ffffffff in 1 <272593> out 1 <272594> # multiply-by-constant 4294967295
add in 2 <272593 272371> out 1 <272595>  # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
split in 1 <272595> outplitBus
const-mul-2 in 1 <272627> out 1 <272831> # join source bit 31
add in 2 <272626 272831> out 1 <272832>  # join source bit 30
const-mul-2 in 1 <272832> out 1 <272833> # join
add in 2 <272625 272833> out 1 <272834>  # join source bit 29
const-mul-2 in 1 <272834> out 1 <272835> # join
add in 2 <272624 272835> out 1 <272836>  # join source bit 28
const-mul-2 in 1 <272836> out 1 <272837> # join
add in 2 <272623 272837> out 1 <272838>  # join source bit 27
const-mul-2 in 1 <272838> out 1 <272839> # join
add in 2 <272622 272839> out 1 <272840>  # join source bit 26
const-mul-2 in 1 <272840> out 1 <272841> # join
add in 2 <272621 272841> out 1 <272842>  # join source bit 25
const-mul-2 in 1 <272842> out 1 <272843> # join
add in 2 <272620 272843> out 1 <272844>  # join source bit 24
const-mul-2 in 1 <272844> out 1 <272845> # join
add in 2 <272619 272845> out 1 <272846>  # join source bit 23
const-mul-2 in 1 <272846> out 1 <272847> # join
add in 2 <272618 272847> out 1 <272848>  # join source bit 22
const-mul-2 in 1 <272848> out 1 <272849> # join
add in 2 <272617 272849> out 1 <272850>  # join source bit 21
const-mul-2 in 1 <272850> out 1 <272851> # join
add in 2 <272616 272851> out 1 <272852>  # join source bit 20
const-mul-2 in 1 <272852> out 1 <272853> # join
add in 2 <272615 272853> out 1 <272854>  # join source bit 19
const-mul-2 in 1 <272854> out 1 <272855> # join
add in 2 <272614 272855> out 1 <272856>  # join source bit 18
const-mul-2 in 1 <272856> out 1 <272857> # join
add in 2 <272613 272857> out 1 <272858>  # join source bit 17
const-mul-2 in 1 <272858> out 1 <272859> # join
add in 2 <272612 272859> out 1 <272860>  # join source bit 16
const-mul-2 in 1 <272860> out 1 <272861> # join
add in 2 <272611 272861> out 1 <272862>  # join source bit 15
const-mul-2 in 1 <272862> out 1 <272863> # join
add in 2 <272610 272863> out 1 <272864>  # join source bit 14
const-mul-2 in 1 <272864> out 1 <272865> # join
add in 2 <272609 272865> out 1 <272866>  # join source bit 13
const-mul-2 in 1 <272866> out 1 <272867> # join
add in 2 <272608 272867> out 1 <272868>  # join source bit 12
const-mul-2 in 1 <272868> out 1 <272869> # join
add in 2 <272607 272869> out 1 <272870>  # join source bit 11
const-mul-2 in 1 <272870> out 1 <272871> # join
add in 2 <272606 272871> out 1 <272872>  # join source bit 10
const-mul-2 in 1 <272872> out 1 <272873> # join
add in 2 <272605 272873> out 1 <272874>  # join source bit 9
const-mul-2 in 1 <272874> out 1 <272875> # join
add in 2 <272604 272875> out 1 <272876>  # join source bit 8
const-mul-2 in 1 <272876> out 1 <272877> # join
add in 2 <272603 272877> out 1 <272878>  # join source bit 7
const-mul-2 in 1 <272878> out 1 <272879> # join
add in 2 <272602 272879> out 1 <272880>  # join source bit 6
const-mul-2 in 1 <272880> out 1 <272881> # join
add in 2 <272601 272881> out 1 <272882>  # join source bit 5
const-mul-2 in 1 <272882> out 1 <272883> # join
add in 2 <272600 272883> out 1 <272884>  # join source bit 4
const-mul-2 in 1 <272884> out 1 <272885> # join
add in 2 <272599 272885> out 1 <272886>  # join source bit 3
const-mul-2 in 1 <272886> out 1 <272887> # join
add in 2 <272598 272887> out 1 <272888>  # join source bit 2
const-mul-2 in 1 <272888> out 1 <272889> # join
add in 2 <272597 272889> out 1 <272890>  # join source bit 1
const-mul-2 in 1 <272890> out 1 <272891> # join
add in 2 <272596 272891> out 1 <272892>  # join source bit 0
add in 2 <272892 272892> out 1 <272893>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <272893> out 1 <272894> # multiply-by-constant 4294967295
add in 2 <272595 272894> out 1 <272895>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <272593> out 1 <272896> # multiply-by-constant 4294967295
add in 2 <272371 272896> out 1 <272897>  # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <272897> outplitBus
mul in 2 <272929 272895> out 1 <273165>  # cond trueterm
const-mul-neg-1 in 1 <272929> out 1 <273166> # cond minuscond
add in 2 <100 273166> out 1 <273167>     # cond negcond
mul in 2 <273167 272371> out 1 <273168>  # cond falseterm
add in 2 <273165 273168> out 1 <273169>  # cond result
add in 2 <273169 104> out 1 <273170>     # ArithBusReq.AddReq(DFG.Conditional,DFG.Constant)
const-mul-ffffffff in 1 <85> out 1 <273171> # multiply-by-constant 4294967295
add in 2 <273170 273171> out 1 <273172>  # 'CmpLT DFG.Add - DFG.Input'
split in 1 <273172> out 238 <273173 273174 273175 273176 273177 273178 273179 273180 273181 273182 273183 273184 273185 273186 273187 273188 273189 273190 273191 273192 273193 273194 273195 273196 273197 273198 273199 273200 273201 273202 273203 273204 273205 273206 273207 273208 273209 273210 273211 273212 273213 273214 273215 273216 273217 273218 273219 273220 273221 273222 273223 273224 273225 273226 273227 273228 273229 273230 273231 273232 273233 273234 273235 273236 273237 273238 273239 273240 273241 273242 273243 273244 273245 273246 273247 273248 273249 273250 273251 273252 273253 273254 273255 273256 273257 273258 273259 273260 273261 273262 273263 273264 273265 273266 273267 273268 273269 273270 273271 273272 273273 273274 273275 273276 273277 273278 273279 273280 273281 273282 273283 273284 273285 273286 273287 273288 273289 273290 273291 273292 273293 273294 273295 273296 273297 273298 273299 273300 273301 273302 273303 273304 273305 273306 273307 273308 273309 273310 273311 273312 273313 273314 273315 273316 273317 273318 273319 273320 273321 273322 273323 273324 273325 273326 273327 273328 273329 273330 273331 273332 273333 273334 273335 273336 273337 273338 273339 273340 273341 273342 273343 273344 273345 273346 273347 273348 273349 273350 273351 273352 273353 273354 273355 273356 273357 273358 273359 273360 273361 273362 273363 273364 273365 273366 273367 273368 273369 273370 273371 273372 273373 273374 273375 273376 273377 273378 273379 273380 273381 273382 273383 273384 273385 273386 273387 273388 273389 273390 273391 273392 273393 273394 273395 273396 273397 273398 273399 273400 273401 273402 273403 273404 273405 273406 273407 273408 273409 273410> # SplitBus
mul in 2 <273204 103> out 1 <273411>     # cond trueterm
const-mul-neg-1 in 1 <273204> out 1 <273412> # cond minuscond
add in 2 <100 273412> out 1 <273413>     # cond negcond
mul in 2 <273413 102> out 1 <273414>     # cond falseterm
add in 2 <273411 273414> out 1 <273415>  # cond result
add in 2 <273169 3084> out 1 <273416>    # ArithBusReq.AddReq(DFG.Conditional,DFG.Negate)
const-mul-ffffffff in 1 <273416> out 1 <273417> # multiply-by-constant 4294967295
add in 2 <85 273417> out 1 <273418>      # 'CmpLT DFG.Input - DFG.Subtract'
split in 1 <273418> outplitBus
mul in 2 <273450 103> out 1 <273689>     # cond trueterm
const-mul-neg-1 in 1 <273450> out 1 <273690> # cond minuscond
add in 2 <100 273690> out 1 <273691>     # cond negcond
mul in 2 <273691 273415> out 1 <273692>  # cond falseterm
add in 2 <273689 273692> out 1 <273693>  # cond result
const-mul-ffffffff in 1 <84> out 1 <273694> # multiply-by-constant 4294967295
add in 2 <84 85> out 1 <273695>          # ArithBusReq.AddReq(DFG.Input,DFG.Input)
add in 2 <273695 273694> out 1 <273696>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <273696> out 1 <273697> # multiply-by-constant 4294967295
add in 2 <273695 273697> out 1 <273698>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <84> out 1 <273699> # multiply-by-constant 4294967295
add in 2 <85 273699> out 1 <273700>      # 'CmpLT DFG.Input - DFG.Input'
split in 1 <273700> out 65 <273701 273702 273703 273704 273705 273706 273707 273708 273709 273710 273711 273712 273713 273714 273715 273716 273717 273718 273719 273720 273721 273722 273723 273724 273725 273726 273727 273728 273729 273730 273731 273732 273733 273734 273735 273736 273737 273738 273739 273740 273741 273742 273743 273744 273745 273746 273747 273748 273749 273750 273751 273752 273753 273754 273755 273756 273757 273758 273759 273760 273761 273762 273763 273764 273765> # SplitBus
mul in 2 <273732 273698> out 1 <273766>  # cond trueterm
const-mul-neg-1 in 1 <273732> out 1 <273767> # cond minuscond
add in 2 <100 273767> out 1 <273768>     # cond negcond
mul in 2 <273768 85> out 1 <273769>      # cond falseterm
add in 2 <273766 273769> out 1 <273770>  # cond result
const-mul-ffffffff in 1 <273770> out 1 <273771> # multiply-by-constant 4294967295
add in 2 <273770 86> out 1 <273772>      # ArithBusReq.AddReq(DFG.Conditional,DFG.Input)
add in 2 <273772 273771> out 1 <273773>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <273773> out 1 <273774> # multiply-by-constant 4294967295
add in 2 <273772 273774> out 1 <273775>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <273770> out 1 <273776> # multiply-by-constant 4294967295
add in 2 <86 273776> out 1 <273777>      # 'CmpLT DFG.Input - DFG.Conditional'
split in 1 <273777> out 131 <273778 273779 273780 273781 273782 273783 273784 273785 273786 273787 273788 273789 273790 273791 273792 273793 273794 273795 273796 273797 273798 273799 273800 273801 273802 273803 273804 273805 273806 273807 273808 273809 273810 273811 273812 273813 273814 273815 273816 273817 273818 273819 273820 273821 273822 273823 273824 273825 273826 273827 273828 273829 273830 273831 273832 273833 273834 273835 273836 273837 273838 273839 273840 273841 273842 273843 273844 273845 273846 273847 273848 273849 273850 273851 273852 273853 273854 273855 273856 273857 273858 273859 273860 273861 273862 273863 273864 273865 273866 273867 273868 273869 273870 273871 273872 273873 273874 273875 273876 273877 273878 273879 273880 273881 273882 273883 273884 273885 273886 273887 273888 273889 273890 273891 273892 273893 273894 273895 273896 273897 273898 273899 273900 273901 273902 273903 273904 273905 273906 273907 273908> # SplitBus
mul in 2 <273809 273775> out 1 <273909>  # cond trueterm
const-mul-neg-1 in 1 <273809> out 1 <273910> # cond minuscond
add in 2 <100 273910> out 1 <273911>     # cond negcond
mul in 2 <273911 86> out 1 <273912>      # cond falseterm
add in 2 <273909 273912> out 1 <273913>  # cond result
const-mul-ffffffff in 1 <273913> out 1 <273914> # multiply-by-constant 4294967295
add in 2 <273913 87> out 1 <273915>      # ArithBusReq.AddReq(DFG.Conditional,DFG.Input)
add in 2 <273915 273914> out 1 <273916>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <273913> out 1 <273917> # multiply-by-constant 4294967295
add in 2 <87 273917> out 1 <273918>      # 'CmpLT DFG.Input - DFG.Conditional'
split in 1 <273918> out 197 <273919 273920 273921 273922 273923 273924 273925 273926 273927 273928 273929 273930 273931 273932 273933 273934 273935 273936 273937 273938 273939 273940 273941 273942 273943 273944 273945 273946 273947 273948 273949 273950 273951 273952 273953 273954 273955 273956 273957 273958 273959 273960 273961 273962 273963 273964 273965 273966 273967 273968 273969 273970 273971 273972 273973 273974 273975 273976 273977 273978 273979 273980 273981 273982 273983 273984 273985 273986 273987 273988 273989 273990 273991 273992 273993 273994 273995 273996 273997 273998 273999 274000 274001 274002 274003 274004 274005 274006 274007 274008 274009 274010 274011 274012 274013 274014 274015 274016 274017 274018 274019 274020 274021 274022 274023 274024 274025 274026 274027 274028 274029 274030 274031 274032 274033 274034 274035 274036 274037 274038 274039 274040 274041 274042 274043 274044 274045 274046 274047 274048 274049 274050 274051 274052 274053 274054 274055 274056 274057 274058 274059 274060 274061 274062 274063 274064 274065 274066 274067 274068 274069 274070 274071 274072 274073 274074 274075 274076 274077 274078 274079 274080 274081 274082 274083 274084 274085 274086 274087 274088 274089 274090 274091 274092 274093 274094 274095 274096 274097 274098 274099 274100 274101 274102 274103 274104 274105 274106 274107 274108 274109 274110 274111 274112 274113 274114 274115> # SplitBus
mul in 2 <273950 273916> out 1 <274116>  # cond trueterm
const-mul-neg-1 in 1 <273950> out 1 <274117> # cond minuscond
add in 2 <100 274117> out 1 <274118>     # cond negcond
mul in 2 <274118 273913> out 1 <274119>  # cond falseterm
add in 2 <274116 274119> out 1 <274120>  # cond result
mul in 2 <273809 273773> out 1 <274121>  # cond trueterm
const-mul-neg-1 in 1 <273809> out 1 <274122> # cond minuscond
add in 2 <100 274122> out 1 <274123>     # cond negcond
mul in 2 <274123 273770> out 1 <274124>  # cond falseterm
add in 2 <274121 274124> out 1 <274125>  # cond result
mul in 2 <273732 273696> out 1 <274126>  # cond trueterm
const-mul-neg-1 in 1 <273732> out 1 <274127> # cond minuscond
add in 2 <100 274127> out 1 <274128>     # cond negcond
mul in 2 <274128 84> out 1 <274129>      # cond falseterm
add in 2 <274126 274129> out 1 <274130>  # cond result
const-mul-ffffffff in 1 <274130> out 1 <274131> # multiply-by-constant 4294967295
add in 2 <274130 274125> out 1 <274132>  # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
add in 2 <274132 274131> out 1 <274133>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <274133> out 1 <274134> # multiply-by-constant 4294967295
add in 2 <274132 274134> out 1 <274135>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <274130> out 1 <274136> # multiply-by-constant 4294967295
add in 2 <274125 274136> out 1 <274137>  # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <274137> out 132 <274138 274139 274140 274141 274142 274143 274144 274145 274146 274147 274148 274149 274150 274151 274152 274153 274154 274155 274156 274157 274158 274159 274160 274161 274162 274163 274164 274165 274166 274167 274168 274169 274170 274171 274172 274173 274174 274175 274176 274177 274178 274179 274180 274181 274182 274183 274184 274185 274186 274187 274188 274189 274190 274191 274192 274193 274194 274195 274196 274197 274198 274199 274200 274201 274202 274203 274204 274205 274206 274207 274208 274209 274210 274211 274212 274213 274214 274215 274216 274217 274218 274219 274220 274221 274222 274223 274224 274225 274226 274227 274228 274229 274230 274231 274232 274233 274234 274235 274236 274237 274238 274239 274240 274241 274242 274243 274244 274245 274246 274247 274248 274249 274250 274251 274252 274253 274254 274255 274256 274257 274258 274259 274260 274261 274262 274263 274264 274265 274266 274267 274268 274269> # SplitBus
mul in 2 <274169 274135> out 1 <274270>  # cond trueterm
const-mul-neg-1 in 1 <274169> out 1 <274271> # cond minuscond
add in 2 <100 274271> out 1 <274272>     # cond negcond
mul in 2 <274272 274125> out 1 <274273>  # cond falseterm
add in 2 <274270 274273> out 1 <274274>  # cond result
const-mul-ffffffff in 1 <274274> out 1 <274275> # multiply-by-constant 4294967295
add in 2 <274274 274120> out 1 <274276>  # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
add in 2 <274276 274275> out 1 <274277>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <274277> out 1 <274278> # multiply-by-constant 4294967295
add in 2 <274276 274278> out 1 <274279>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <274274> out 1 <274280> # multiply-by-constant 4294967295
add in 2 <274120 274280> out 1 <274281>  # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <274281> out 199 <274282 274283 274284 274285 274286 274287 274288 274289 274290 274291 274292 274293 274294 274295 274296 274297 274298 274299 274300 274301 274302 274303 274304 274305 274306 274307 274308 274309 274310 274311 274312 274313 274314 274315 274316 274317 274318 274319 274320 274321 274322 274323 274324 274325 274326 274327 274328 274329 274330 274331 274332 274333 274334 274335 274336 274337 274338 274339 274340 274341 274342 274343 274344 274345 274346 274347 274348 274349 274350 274351 274352 274353 274354 274355 274356 274357 274358 274359 274360 274361 274362 274363 274364 274365 274366 274367 274368 274369 274370 274371 274372 274373 274374 274375 274376 274377 274378 274379 274380 274381 274382 274383 274384 274385 274386 274387 274388 274389 274390 274391 274392 274393 274394 274395 274396 274397 274398 274399 274400 274401 274402 274403 274404 274405 274406 274407 274408 274409 274410 274411 274412 274413 274414 274415 274416 274417 274418 274419 274420 274421 274422 274423 274424 274425 274426 274427 274428 274429 274430 274431 274432 274433 274434 274435 274436 274437 274438 274439 274440 274441 274442 274443 274444 274445 274446 274447 274448 274449 274450 274451 274452 274453 274454 274455 274456 274457 274458 274459 274460 274461 274462 274463 274464 274465 274466 274467 274468 274469 274470 274471 274472 274473 274474 274475 274476 274477 274478 274479 274480> # SplitBus
mul in 2 <274313 274279> out 1 <274481>  # cond trueterm
const-mul-neg-1 in 1 <274313> out 1 <274482> # cond minuscond
add in 2 <100 274482> out 1 <274483>     # cond negcond
mul in 2 <274483 274120> out 1 <274484>  # cond falseterm
add in 2 <274481 274484> out 1 <274485>  # cond result
const-mul-ffffffff in 1 <274485> out 1 <274486> # multiply-by-constant 4294967295
const-mul-ffffffff in 1 <273916> out 1 <274487> # multiply-by-constant 4294967295
add in 2 <273915 274487> out 1 <274488>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
mul in 2 <273950 274488> out 1 <274489>  # cond trueterm
const-mul-neg-1 in 1 <273950> out 1 <274490> # cond minuscond
add in 2 <100 274490> out 1 <274491>     # cond negcond
mul in 2 <274491 87> out 1 <274492>      # cond falseterm
add in 2 <274489 274492> out 1 <274493>  # cond result
const-mul-ffffffff in 1 <274493> out 1 <274494> # multiply-by-constant 4294967295
add in 2 <274493 88> out 1 <274495>      # ArithBusReq.AddReq(DFG.Conditional,DFG.Input)
split in 1 <274495> outplitBus
const-mul-2 in 1 <274527> out 1 <274727> # join source bit 31
add in 2 <274526 274727> out 1 <274728>  # join source bit 30
const-mul-2 in 1 <274728> out 1 <274729> # join
add in 2 <274525 274729> out 1 <274730>  # join source bit 29
const-mul-2 in 1 <274730> out 1 <274731> # join
add in 2 <274524 274731> out 1 <274732>  # join source bit 28
const-mul-2 in 1 <274732> out 1 <274733> # join
add in 2 <274523 274733> out 1 <274734>  # join source bit 27
const-mul-2 in 1 <274734> out 1 <274735> # join
add in 2 <274522 274735> out 1 <274736>  # join source bit 26
const-mul-2 in 1 <274736> out 1 <274737> # join
add in 2 <274521 274737> out 1 <274738>  # join source bit 25
const-mul-2 in 1 <274738> out 1 <274739> # join
add in 2 <274520 274739> out 1 <274740>  # join source bit 24
const-mul-2 in 1 <274740> out 1 <274741> # join
add in 2 <274519 274741> out 1 <274742>  # join source bit 23
const-mul-2 in 1 <274742> out 1 <274743> # join
add in 2 <274518 274743> out 1 <274744>  # join source bit 22
const-mul-2 in 1 <274744> out 1 <274745> # join
add in 2 <274517 274745> out 1 <274746>  # join source bit 21
const-mul-2 in 1 <274746> out 1 <274747> # join
add in 2 <274516 274747> out 1 <274748>  # join source bit 20
const-mul-2 in 1 <274748> out 1 <274749> # join
add in 2 <274515 274749> out 1 <274750>  # join source bit 19
const-mul-2 in 1 <274750> out 1 <274751> # join
add in 2 <274514 274751> out 1 <274752>  # join source bit 18
const-mul-2 in 1 <274752> out 1 <274753> # join
add in 2 <274513 274753> out 1 <274754>  # join source bit 17
const-mul-2 in 1 <274754> out 1 <274755> # join
add in 2 <274512 274755> out 1 <274756>  # join source bit 16
const-mul-2 in 1 <274756> out 1 <274757> # join
add in 2 <274511 274757> out 1 <274758>  # join source bit 15
const-mul-2 in 1 <274758> out 1 <274759> # join
add in 2 <274510 274759> out 1 <274760>  # join source bit 14
const-mul-2 in 1 <274760> out 1 <274761> # join
add in 2 <274509 274761> out 1 <274762>  # join source bit 13
const-mul-2 in 1 <274762> out 1 <274763> # join
add in 2 <274508 274763> out 1 <274764>  # join source bit 12
const-mul-2 in 1 <274764> out 1 <274765> # join
add in 2 <274507 274765> out 1 <274766>  # join source bit 11
const-mul-2 in 1 <274766> out 1 <274767> # join
add in 2 <274506 274767> out 1 <274768>  # join source bit 10
const-mul-2 in 1 <274768> out 1 <274769> # join
add in 2 <274505 274769> out 1 <274770>  # join source bit 9
const-mul-2 in 1 <274770> out 1 <274771> # join
add in 2 <274504 274771> out 1 <274772>  # join source bit 8
const-mul-2 in 1 <274772> out 1 <274773> # join
add in 2 <274503 274773> out 1 <274774>  # join source bit 7
const-mul-2 in 1 <274774> out 1 <274775> # join
add in 2 <274502 274775> out 1 <274776>  # join source bit 6
const-mul-2 in 1 <274776> out 1 <274777> # join
add in 2 <274501 274777> out 1 <274778>  # join source bit 5
const-mul-2 in 1 <274778> out 1 <274779> # join
add in 2 <274500 274779> out 1 <274780>  # join source bit 4
const-mul-2 in 1 <274780> out 1 <274781> # join
add in 2 <274499 274781> out 1 <274782>  # join source bit 3
const-mul-2 in 1 <274782> out 1 <274783> # join
add in 2 <274498 274783> out 1 <274784>  # join source bit 2
const-mul-2 in 1 <274784> out 1 <274785> # join
add in 2 <274497 274785> out 1 <274786>  # join source bit 1
const-mul-2 in 1 <274786> out 1 <274787> # join
add in 2 <274496 274787> out 1 <274788>  # join source bit 0
add in 2 <274788 274788> out 1 <274789>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <274493> out 1 <274790> # multiply-by-constant 4294967295
add in 2 <88 274790> out 1 <274791>      # 'CmpLT DFG.Input - DFG.Conditional'
split in 1 <274791> out 263 <274792 274793 274794 274795 274796 274797 274798 274799 274800 274801 274802 274803 274804 274805 274806 274807 274808 274809 274810 274811 274812 274813 274814 274815 274816 274817 274818 274819 274820 274821 274822 274823 274824 274825 274826 274827 274828 274829 274830 274831 274832 274833 274834 274835 274836 274837 274838 274839 274840 274841 274842 274843 274844 274845 274846 274847 274848 274849 274850 274851 274852 274853 274854 274855 274856 274857 274858 274859 274860 274861 274862 274863 274864 274865 274866 274867 274868 274869 274870 274871 274872 274873 274874 274875 274876 274877 274878 274879 274880 274881 274882 274883 274884 274885 274886 274887 274888 274889 274890 274891 274892 274893 274894 274895 274896 274897 274898 274899 274900 274901 274902 274903 274904 274905 274906 274907 274908 274909 274910 274911 274912 274913 274914 274915 274916 274917 274918 274919 274920 274921 274922 274923 274924 274925 274926 274927 274928 274929 274930 274931 274932 274933 274934 274935 274936 274937 274938 274939 274940 274941 274942 274943 274944 274945 274946 274947 274948 274949 274950 274951 274952 274953 274954 274955 274956 274957 274958 274959 274960 274961 274962 274963 274964 274965 274966 274967 274968 274969 274970 274971 274972 274973 274974 274975 274976 274977 274978 274979 274980 274981 274982 274983 274984 274985 274986 274987 274988 274989 274990 274991 274992 274993 274994 274995 274996 274997 274998 274999 275000 275001 275002 275003 275004 275005 275006 275007 275008 275009 275010 275011 275012 275013 275014 275015 275016 275017 275018 275019 275020 275021 275022 275023 275024 275025 275026 275027 275028 275029 275030 275031 275032 275033 275034 275035 275036 275037 275038 275039 275040 275041 275042 275043 275044 275045 275046 275047 275048 275049 275050 275051 275052 275053 275054> # SplitBus
mul in 2 <274823 274789> out 1 <275055>  # cond trueterm
const-mul-neg-1 in 1 <274823> out 1 <275056> # cond minuscond
add in 2 <100 275056> out 1 <275057>     # cond negcond
mul in 2 <275057 274493> out 1 <275058>  # cond falseterm
add in 2 <275055 275058> out 1 <275059>  # cond result
add in 2 <274485 275059> out 1 <275060>  # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
split in 1 <275060> out 233 <275061 275062 275063 275064 275065 275066 275067 275068 275069 275070 275071 275072 275073 275074 275075 275076 275077 275078 275079 275080 275081 275082 275083 275084 275085 275086 275087 275088 275089 275090 275091 275092 275093 275094 275095 275096 275097 275098 275099 275100 275101 275102 275103 275104 275105 275106 275107 275108 275109 275110 275111 275112 275113 275114 275115 275116 275117 275118 275119 275120 275121 275122 275123 275124 275125 275126 275127 275128 275129 275130 275131 275132 275133 275134 275135 275136 275137 275138 275139 275140 275141 275142 275143 275144 275145 275146 275147 275148 275149 275150 275151 275152 275153 275154 275155 275156 275157 275158 275159 275160 275161 275162 275163 275164 275165 275166 275167 275168 275169 275170 275171 275172 275173 275174 275175 275176 275177 275178 275179 275180 275181 275182 275183 275184 275185 275186 275187 275188 275189 275190 275191 275192 275193 275194 275195 275196 275197 275198 275199 275200 275201 275202 275203 275204 275205 275206 275207 275208 275209 275210 275211 275212 275213 275214 275215 275216 275217 275218 275219 275220 275221 275222 275223 275224 275225 275226 275227 275228 275229 275230 275231 275232 275233 275234 275235 275236 275237 275238 275239 275240 275241 275242 275243 275244 275245 275246 275247 275248 275249 275250 275251 275252 275253 275254 275255 275256 275257 275258 275259 275260 275261 275262 275263 275264 275265 275266 275267 275268 275269 275270 275271 275272 275273 275274 275275 275276 275277 275278 275279 275280 275281 275282 275283 275284 275285 275286 275287 275288 275289 275290 275291 275292 275293> # SplitBus
const-mul-2 in 1 <275092> out 1 <275294> # join source bit 31
add in 2 <275091 275294> out 1 <275295>  # join source bit 30
const-mul-2 in 1 <275295> out 1 <275296> # join
add in 2 <275090 275296> out 1 <275297>  # join source bit 29
const-mul-2 in 1 <275297> out 1 <275298> # join
add in 2 <275089 275298> out 1 <275299>  # join source bit 28
const-mul-2 in 1 <275299> out 1 <275300> # join
add in 2 <275088 275300> out 1 <275301>  # join source bit 27
const-mul-2 in 1 <275301> out 1 <275302> # join
add in 2 <275087 275302> out 1 <275303>  # join source bit 26
const-mul-2 in 1 <275303> out 1 <275304> # join
add in 2 <275086 275304> out 1 <275305>  # join source bit 25
const-mul-2 in 1 <275305> out 1 <275306> # join
add in 2 <275085 275306> out 1 <275307>  # join source bit 24
const-mul-2 in 1 <275307> out 1 <275308> # join
add in 2 <275084 275308> out 1 <275309>  # join source bit 23
const-mul-2 in 1 <275309> out 1 <275310> # join
add in 2 <275083 275310> out 1 <275311>  # join source bit 22
const-mul-2 in 1 <275311> out 1 <275312> # join
add in 2 <275082 275312> out 1 <275313>  # join source bit 21
const-mul-2 in 1 <275313> out 1 <275314> # join
add in 2 <275081 275314> out 1 <275315>  # join source bit 20
const-mul-2 in 1 <275315> out 1 <275316> # join
add in 2 <275080 275316> out 1 <275317>  # join source bit 19
const-mul-2 in 1 <275317> out 1 <275318> # join
add in 2 <275079 275318> out 1 <275319>  # join source bit 18
const-mul-2 in 1 <275319> out 1 <275320> # join
add in 2 <275078 275320> out 1 <275321>  # join source bit 17
const-mul-2 in 1 <275321> out 1 <275322> # join
add in 2 <275077 275322> out 1 <275323>  # join source bit 16
const-mul-2 in 1 <275323> out 1 <275324> # join
add in 2 <275076 275324> out 1 <275325>  # join source bit 15
const-mul-2 in 1 <275325> out 1 <275326> # join
add in 2 <275075 275326> out 1 <275327>  # join source bit 14
const-mul-2 in 1 <275327> out 1 <275328> # join
add in 2 <275074 275328> out 1 <275329>  # join source bit 13
const-mul-2 in 1 <275329> out 1 <275330> # join
add in 2 <275073 275330> out 1 <275331>  # join source bit 12
const-mul-2 in 1 <275331> out 1 <275332> # join
add in 2 <275072 275332> out 1 <275333>  # join source bit 11
const-mul-2 in 1 <275333> out 1 <275334> # join
add in 2 <275071 275334> out 1 <275335>  # join source bit 10
const-mul-2 in 1 <275335> out 1 <275336> # join
add in 2 <275070 275336> out 1 <275337>  # join source bit 9
const-mul-2 in 1 <275337> out 1 <275338> # join
add in 2 <275069 275338> out 1 <275339>  # join source bit 8
const-mul-2 in 1 <275339> out 1 <275340> # join
add in 2 <275068 275340> out 1 <275341>  # join source bit 7
const-mul-2 in 1 <275341> out 1 <275342> # join
add in 2 <275067 275342> out 1 <275343>  # join source bit 6
const-mul-2 in 1 <275343> out 1 <275344> # join
add in 2 <275066 275344> out 1 <275345>  # join source bit 5
const-mul-2 in 1 <275345> out 1 <275346> # join
add in 2 <275065 275346> out 1 <275347>  # join source bit 4
const-mul-2 in 1 <275347> out 1 <275348> # join
add in 2 <275064 275348> out 1 <275349>  # join source bit 3
const-mul-2 in 1 <275349> out 1 <275350> # join
add in 2 <275063 275350> out 1 <275351>  # join source bit 2
const-mul-2 in 1 <275351> out 1 <275352> # join
add in 2 <275062 275352> out 1 <275353>  # join source bit 1
const-mul-2 in 1 <275353> out 1 <275354> # join
add in 2 <275061 275354> out 1 <275355>  # join source bit 0
add in 2 <275355 275355> out 1 <275356>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <274485> out 1 <275357> # multiply-by-constant 4294967295
add in 2 <275059 275357> out 1 <275358>  # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <275358> out 265 <275359 275360 275361 275362 275363 275364 275365 275366 275367 275368 275369 275370 275371 275372 275373 275374 275375 275376 275377 275378 275379 275380 275381 275382 275383 275384 275385 275386 275387 275388 275389 275390 275391 275392 275393 275394 275395 275396 275397 275398 275399 275400 275401 275402 275403 275404 275405 275406 275407 275408 275409 275410 275411 275412 275413 275414 275415 275416 275417 275418 275419 275420 275421 275422 275423 275424 275425 275426 275427 275428 275429 275430 275431 275432 275433 275434 275435 275436 275437 275438 275439 275440 275441 275442 275443 275444 275445 275446 275447 275448 275449 275450 275451 275452 275453 275454 275455 275456 275457 275458 275459 275460 275461 275462 275463 275464 275465 275466 275467 275468 275469 275470 275471 275472 275473 275474 275475 275476 275477 275478 275479 275480 275481 275482 275483 275484 275485 275486 275487 275488 275489 275490 275491 275492 275493 275494 275495 275496 275497 275498 275499 275500 275501 275502 275503 275504 275505 275506 275507 275508 275509 275510 275511 275512 275513 275514 275515 275516 275517 275518 275519 275520 275521 275522 275523 275524 275525 275526 275527 275528 275529 275530 275531 275532 275533 275534 275535 275536 275537 275538 275539 275540 275541 275542 275543 275544 275545 275546 275547 275548 275549 275550 275551 275552 275553 275554 275555 275556 275557 275558 275559 275560 275561 275562 275563 275564 275565 275566 275567 275568 275569 275570 275571 275572 275573 275574 275575 275576 275577 275578 275579 275580 275581 275582 275583 275584 275585 275586 275587 275588 275589 275590 275591 275592 275593 275594 275595 275596 275597 275598 275599 275600 275601 275602 275603 275604 275605 275606 275607 275608 275609 275610 275611 275612 275613 275614 275615 275616 275617 275618 275619 275620 275621 275622 275623> # SplitBus
mul in 2 <275390 275356> out 1 <275624>  # cond trueterm
const-mul-neg-1 in 1 <275390> out 1 <275625> # cond minuscond
add in 2 <100 275625> out 1 <275626>     # cond negcond
mul in 2 <275626 274485> out 1 <275627>  # cond falseterm
add in 2 <275624 275627> out 1 <275628>  # cond result
mul in 2 <274313 274277> out 1 <275629>  # cond trueterm
const-mul-neg-1 in 1 <274313> out 1 <275630> # cond minuscond
add in 2 <100 275630> out 1 <275631>     # cond negcond
mul in 2 <275631 274274> out 1 <275632>  # cond falseterm
add in 2 <275629 275632> out 1 <275633>  # cond result
mul in 2 <274169 274133> out 1 <275634>  # cond trueterm
const-mul-neg-1 in 1 <274169> out 1 <275635> # cond minuscond
add in 2 <100 275635> out 1 <275636>     # cond negcond
mul in 2 <275636 274130> out 1 <275637>  # cond falseterm
add in 2 <275634 275637> out 1 <275638>  # cond result
const-mul-ffffffff in 1 <275638> out 1 <275639> # multiply-by-constant 4294967295
add in 2 <275638 275633> out 1 <275640>  # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
add in 2 <275640 275639> out 1 <275641>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <275641> out 1 <275642> # multiply-by-constant 4294967295
add in 2 <275640 275642> out 1 <275643>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <275638> out 1 <275644> # multiply-by-constant 4294967295
add in 2 <275633 275644> out 1 <275645>  # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <275645> out 200 <275646 275647 275648 275649 275650 275651 275652 275653 275654 275655 275656 275657 275658 275659 275660 275661 275662 275663 275664 275665 275666 275667 275668 275669 275670 275671 275672 275673 275674 275675 275676 275677 275678 275679 275680 275681 275682 275683 275684 275685 275686 275687 275688 275689 275690 275691 275692 275693 275694 275695 275696 275697 275698 275699 275700 275701 275702 275703 275704 275705 275706 275707 275708 275709 275710 275711 275712 275713 275714 275715 275716 275717 275718 275719 275720 275721 275722 275723 275724 275725 275726 275727 275728 275729 275730 275731 275732 275733 275734 275735 275736 275737 275738 275739 275740 275741 275742 275743 275744 275745 275746 275747 275748 275749 275750 275751 275752 275753 275754 275755 275756 275757 275758 275759 275760 275761 275762 275763 275764 275765 275766 275767 275768 275769 275770 275771 275772 275773 275774 275775 275776 275777 275778 275779 275780 275781 275782 275783 275784 275785 275786 275787 275788 275789 275790 275791 275792 275793 275794 275795 275796 275797 275798 275799 275800 275801 275802 275803 275804 275805 275806 275807 275808 275809 275810 275811 275812 275813 275814 275815 275816 275817 275818 275819 275820 275821 275822 275823 275824 275825 275826 275827 275828 275829 275830 275831 275832 275833 275834 275835 275836 275837 275838 275839 275840 275841 275842 275843 275844 275845> # SplitBus
mul in 2 <275677 275643> out 1 <275846>  # cond trueterm
const-mul-neg-1 in 1 <275677> out 1 <275847> # cond minuscond
add in 2 <100 275847> out 1 <275848>     # cond negcond
mul in 2 <275848 275633> out 1 <275849>  # cond falseterm
add in 2 <275846 275849> out 1 <275850>  # cond result
const-mul-ffffffff in 1 <275850> out 1 <275851> # multiply-by-constant 4294967295
add in 2 <275850 275628> out 1 <275852>  # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
split in 1 <275852> out 235 <275853 275854 275855 275856 275857 275858 275859 275860 275861 275862 275863 275864 275865 275866 275867 275868 275869 275870 275871 275872 275873 275874 275875 275876 275877 275878 275879 275880 275881 275882 275883 275884 275885 275886 275887 275888 275889 275890 275891 275892 275893 275894 275895 275896 275897 275898 275899 275900 275901 275902 275903 275904 275905 275906 275907 275908 275909 275910 275911 275912 275913 275914 275915 275916 275917 275918 275919 275920 275921 275922 275923 275924 275925 275926 275927 275928 275929 275930 275931 275932 275933 275934 275935 275936 275937 275938 275939 275940 275941 275942 275943 275944 275945 275946 275947 275948 275949 275950 275951 275952 275953 275954 275955 275956 275957 275958 275959 275960 275961 275962 275963 275964 275965 275966 275967 275968 275969 275970 275971 275972 275973 275974 275975 275976 275977 275978 275979 275980 275981 275982 275983 275984 275985 275986 275987 275988 275989 275990 275991 275992 275993 275994 275995 275996 275997 275998 275999 276000 276001 276002 276003 276004 276005 276006 276007 276008 276009 276010 276011 276012 276013 276014 276015 276016 276017 276018 276019 276020 276021 276022 276023 276024 276025 276026 276027 276028 276029 276030 276031 276032 276033 276034 276035 276036 276037 276038 276039 276040 276041 276042 276043 276044 276045 276046 276047 276048 276049 276050 276051 276052 276053 276054 276055 276056 276057 276058 276059 276060 276061 276062 276063 276064 276065 276066 276067 276068 276069 276070 276071 276072 276073 276074 276075 276076 276077 276078 276079 276080 276081 276082 276083 276084 276085 276086 276087> # SplitBus
const-mul-2 in 1 <275884> out 1 <276088> # join source bit 31
add in 2 <275883 276088> out 1 <276089>  # join source bit 30
const-mul-2 in 1 <276089> out 1 <276090> # join
add in 2 <275882 276090> out 1 <276091>  # join source bit 29
const-mul-2 in 1 <276091> out 1 <276092> # join
add in 2 <275881 276092> out 1 <276093>  # join source bit 28
const-mul-2 in 1 <276093> out 1 <276094> # join
add in 2 <275880 276094> out 1 <276095>  # join source bit 27
const-mul-2 in 1 <276095> out 1 <276096> # join
add in 2 <275879 276096> out 1 <276097>  # join source bit 26
const-mul-2 in 1 <276097> out 1 <276098> # join
add in 2 <275878 276098> out 1 <276099>  # join source bit 25
const-mul-2 in 1 <276099> out 1 <276100> # join
add in 2 <275877 276100> out 1 <276101>  # join source bit 24
const-mul-2 in 1 <276101> out 1 <276102> # join
add in 2 <275876 276102> out 1 <276103>  # join source bit 23
const-mul-2 in 1 <276103> out 1 <276104> # join
add in 2 <275875 276104> out 1 <276105>  # join source bit 22
const-mul-2 in 1 <276105> out 1 <276106> # join
add in 2 <275874 276106> out 1 <276107>  # join source bit 21
const-mul-2 in 1 <276107> out 1 <276108> # join
add in 2 <275873 276108> out 1 <276109>  # join source bit 20
const-mul-2 in 1 <276109> out 1 <276110> # join
add in 2 <275872 276110> out 1 <276111>  # join source bit 19
const-mul-2 in 1 <276111> out 1 <276112> # join
add in 2 <275871 276112> out 1 <276113>  # join source bit 18
const-mul-2 in 1 <276113> out 1 <276114> # join
add in 2 <275870 276114> out 1 <276115>  # join source bit 17
const-mul-2 in 1 <276115> out 1 <276116> # join
add in 2 <275869 276116> out 1 <276117>  # join source bit 16
const-mul-2 in 1 <276117> out 1 <276118> # join
add in 2 <275868 276118> out 1 <276119>  # join source bit 15
const-mul-2 in 1 <276119> out 1 <276120> # join
add in 2 <275867 276120> out 1 <276121>  # join source bit 14
const-mul-2 in 1 <276121> out 1 <276122> # join
add in 2 <275866 276122> out 1 <276123>  # join source bit 13
const-mul-2 in 1 <276123> out 1 <276124> # join
add in 2 <275865 276124> out 1 <276125>  # join source bit 12
const-mul-2 in 1 <276125> out 1 <276126> # join
add in 2 <275864 276126> out 1 <276127>  # join source bit 11
const-mul-2 in 1 <276127> out 1 <276128> # join
add in 2 <275863 276128> out 1 <276129>  # join source bit 10
const-mul-2 in 1 <276129> out 1 <276130> # join
add in 2 <275862 276130> out 1 <276131>  # join source bit 9
const-mul-2 in 1 <276131> out 1 <276132> # join
add in 2 <275861 276132> out 1 <276133>  # join source bit 8
const-mul-2 in 1 <276133> out 1 <276134> # join
add in 2 <275860 276134> out 1 <276135>  # join source bit 7
const-mul-2 in 1 <276135> out 1 <276136> # join
add in 2 <275859 276136> out 1 <276137>  # join source bit 6
const-mul-2 in 1 <276137> out 1 <276138> # join
add in 2 <275858 276138> out 1 <276139>  # join source bit 5
const-mul-2 in 1 <276139> out 1 <276140> # join
add in 2 <275857 276140> out 1 <276141>  # join source bit 4
const-mul-2 in 1 <276141> out 1 <276142> # join
add in 2 <275856 276142> out 1 <276143>  # join source bit 3
const-mul-2 in 1 <276143> out 1 <276144> # join
add in 2 <275855 276144> out 1 <276145>  # join source bit 2
const-mul-2 in 1 <276145> out 1 <276146> # join
add in 2 <275854 276146> out 1 <276147>  # join source bit 1
const-mul-2 in 1 <276147> out 1 <276148> # join
add in 2 <275853 276148> out 1 <276149>  # join source bit 0
add in 2 <276149 276149> out 1 <276150>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <276150> out 1 <276151> # multiply-by-constant 4294967295
add in 2 <275852 276151> out 1 <276152>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <275850> out 1 <276153> # multiply-by-constant 4294967295
add in 2 <275628 276153> out 1 <276154>  # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <276154> out 267 <276155 276156 276157 276158 276159 276160 276161 276162 276163 276164 276165 276166 276167 276168 276169 276170 276171 276172 276173 276174 276175 276176 276177 276178 276179 276180 276181 276182 276183 276184 276185 276186 276187 276188 276189 276190 276191 276192 276193 276194 276195 276196 276197 276198 276199 276200 276201 276202 276203 276204 276205 276206 276207 276208 276209 276210 276211 276212 276213 276214 276215 276216 276217 276218 276219 276220 276221 276222 276223 276224 276225 276226 276227 276228 276229 276230 276231 276232 276233 276234 276235 276236 276237 276238 276239 276240 276241 276242 276243 276244 276245 276246 276247 276248 276249 276250 276251 276252 276253 276254 276255 276256 276257 276258 276259 276260 276261 276262 276263 276264 276265 276266 276267 276268 276269 276270 276271 276272 276273 276274 276275 276276 276277 276278 276279 276280 276281 276282 276283 276284 276285 276286 276287 276288 276289 276290 276291 276292 276293 276294 276295 276296 276297 276298 276299 276300 276301 276302 276303 276304 276305 276306 276307 276308 276309 276310 276311 276312 276313 276314 276315 276316 276317 276318 276319 276320 276321 276322 276323 276324 276325 276326 276327 276328 276329 276330 276331 276332 276333 276334 276335 276336 276337 276338 276339 276340 276341 276342 276343 276344 276345 276346 276347 276348 276349 276350 276351 276352 276353 276354 276355 276356 276357 276358 276359 276360 276361 276362 276363 276364 276365 276366 276367 276368 276369 276370 276371 276372 276373 276374 276375 276376 276377 276378 276379 276380 276381 276382 276383 276384 276385 276386 276387 276388 276389 276390 276391 276392 276393 276394 276395 276396 276397 276398 276399 276400 276401 276402 276403 276404 276405 276406 276407 276408 276409 276410 276411 276412 276413 276414 276415 276416 276417 276418 276419 276420 276421> # SplitBus
mul in 2 <276186 276152> out 1 <276422>  # cond trueterm
const-mul-neg-1 in 1 <276186> out 1 <276423> # cond minuscond
add in 2 <100 276423> out 1 <276424>     # cond negcond
mul in 2 <276424 275628> out 1 <276425>  # cond falseterm
add in 2 <276422 276425> out 1 <276426>  # cond result
add in 2 <276426 104> out 1 <276427>     # ArithBusReq.AddReq(DFG.Conditional,DFG.Constant)
const-mul-ffffffff in 1 <86> out 1 <276428> # multiply-by-constant 4294967295
add in 2 <276427 276428> out 1 <276429>  # 'CmpLT DFG.Add - DFG.Input'
split in 1 <276429> outplitBus
mul in 2 <276461 103> out 1 <276668>     # cond trueterm
const-mul-neg-1 in 1 <276461> out 1 <276669> # cond minuscond
add in 2 <100 276669> out 1 <276670>     # cond negcond
mul in 2 <276670 102> out 1 <276671>     # cond falseterm
add in 2 <276668 276671> out 1 <276672>  # cond result
add in 2 <276426 3084> out 1 <276673>    # ArithBusReq.AddReq(DFG.Conditional,DFG.Negate)
const-mul-ffffffff in 1 <276673> out 1 <276674> # multiply-by-constant 4294967295
add in 2 <86 276674> out 1 <276675>      # 'CmpLT DFG.Input - DFG.Subtract'
split in 1 <276675> out 270 <276676 276677 276678 276679 276680 276681 276682 276683 276684 276685 276686 276687 276688 276689 276690 276691 276692 276693 276694 276695 276696 276697 276698 276699 276700 276701 276702 276703 276704 276705 276706 276707 276708 276709 276710 276711 276712 276713 276714 276715 276716 276717 276718 276719 276720 276721 276722 276723 276724 276725 276726 276727 276728 276729 276730 276731 276732 276733 276734 276735 276736 276737 276738 276739 276740 276741 276742 276743 276744 276745 276746 276747 276748 276749 276750 276751 276752 276753 276754 276755 276756 276757 276758 276759 276760 276761 276762 276763 276764 276765 276766 276767 276768 276769 276770 276771 276772 276773 276774 276775 276776 276777 276778 276779 276780 276781 276782 276783 276784 276785 276786 276787 276788 276789 276790 276791 276792 276793 276794 276795 276796 276797 276798 276799 276800 276801 276802 276803 276804 276805 276806 276807 276808 276809 276810 276811 276812 276813 276814 276815 276816 276817 276818 276819 276820 276821 276822 276823 276824 276825 276826 276827 276828 276829 276830 276831 276832 276833 276834 276835 276836 276837 276838 276839 276840 276841 276842 276843 276844 276845 276846 276847 276848 276849 276850 276851 276852 276853 276854 276855 276856 276857 276858 276859 276860 276861 276862 276863 276864 276865 276866 276867 276868 276869 276870 276871 276872 276873 276874 276875 276876 276877 276878 276879 276880 276881 276882 276883 276884 276885 276886 276887 276888 276889 276890 276891 276892 276893 276894 276895 276896 276897 276898 276899 276900 276901 276902 276903 276904 276905 276906 276907 276908 276909 276910 276911 276912 276913 276914 276915 276916 276917 276918 276919 276920 276921 276922 276923 276924 276925 276926 276927 276928 276929 276930 276931 276932 276933 276934 276935 276936 276937 276938 276939 276940 276941 276942 276943 276944 276945> # SplitBus
mul in 2 <276707 103> out 1 <276946>     # cond trueterm
const-mul-neg-1 in 1 <276707> out 1 <276947> # cond minuscond
add in 2 <100 276947> out 1 <276948>     # cond negcond
mul in 2 <276948 276672> out 1 <276949>  # cond falseterm
add in 2 <276946 276949> out 1 <276950>  # cond result
const-mul-ffffffff in 1 <85> out 1 <276951> # multiply-by-constant 4294967295
add in 2 <85 86> out 1 <276952>          # ArithBusReq.AddReq(DFG.Input,DFG.Input)
add in 2 <276952 276951> out 1 <276953>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <276953> out 1 <276954> # multiply-by-constant 4294967295
add in 2 <276952 276954> out 1 <276955>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <85> out 1 <276956> # multiply-by-constant 4294967295
add in 2 <86 276956> out 1 <276957>      # 'CmpLT DFG.Input - DFG.Input'
split in 1 <276957> out 65 <276958 276959 276960 276961 276962 276963 276964 276965 276966 276967 276968 276969 276970 276971 276972 276973 276974 276975 276976 276977 276978 276979 276980 276981 276982 276983 276984 276985 276986 276987 276988 276989 276990 276991 276992 276993 276994 276995 276996 276997 276998 276999 277000 277001 277002 277003 277004 277005 277006 277007 277008 277009 277010 277011 277012 277013 277014 277015 277016 277017 277018 277019 277020 277021 277022> # SplitBus
mul in 2 <276989 276955> out 1 <277023>  # cond trueterm
const-mul-neg-1 in 1 <276989> out 1 <277024> # cond minuscond
add in 2 <100 277024> out 1 <277025>     # cond negcond
mul in 2 <277025 86> out 1 <277026>      # cond falseterm
add in 2 <277023 277026> out 1 <277027>  # cond result
const-mul-ffffffff in 1 <277027> out 1 <277028> # multiply-by-constant 4294967295
add in 2 <277027 87> out 1 <277029>      # ArithBusReq.AddReq(DFG.Conditional,DFG.Input)
add in 2 <277029 277028> out 1 <277030>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <277030> out 1 <277031> # multiply-by-constant 4294967295
add in 2 <277029 277031> out 1 <277032>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <277027> out 1 <277033> # multiply-by-constant 4294967295
add in 2 <87 277033> out 1 <277034>      # 'CmpLT DFG.Input - DFG.Conditional'
split in 1 <277034> out 131 <277035 277036 277037 277038 277039 277040 277041 277042 277043 277044 277045 277046 277047 277048 277049 277050 277051 277052 277053 277054 277055 277056 277057 277058 277059 277060 277061 277062 277063 277064 277065 277066 277067 277068 277069 277070 277071 277072 277073 277074 277075 277076 277077 277078 277079 277080 277081 277082 277083 277084 277085 277086 277087 277088 277089 277090 277091 277092 277093 277094 277095 277096 277097 277098 277099 277100 277101 277102 277103 277104 277105 277106 277107 277108 277109 277110 277111 277112 277113 277114 277115 277116 277117 277118 277119 277120 277121 277122 277123 277124 277125 277126 277127 277128 277129 277130 277131 277132 277133 277134 277135 277136 277137 277138 277139 277140 277141 277142 277143 277144 277145 277146 277147 277148 277149 277150 277151 277152 277153 277154 277155 277156 277157 277158 277159 277160 277161 277162 277163 277164 277165> # SplitBus
mul in 2 <277066 277032> out 1 <277166>  # cond trueterm
const-mul-neg-1 in 1 <277066> out 1 <277167> # cond minuscond
add in 2 <100 277167> out 1 <277168>     # cond negcond
mul in 2 <277168 87> out 1 <277169>      # cond falseterm
add in 2 <277166 277169> out 1 <277170>  # cond result
const-mul-ffffffff in 1 <277170> out 1 <277171> # multiply-by-constant 4294967295
add in 2 <277170 88> out 1 <277172>      # ArithBusReq.AddReq(DFG.Conditional,DFG.Input)
add in 2 <277172 277171> out 1 <277173>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <277170> out 1 <277174> # multiply-by-constant 4294967295
add in 2 <88 277174> out 1 <277175>      # 'CmpLT DFG.Input - DFG.Conditional'
split in 1 <277175> out 197 <277176 277177 277178 277179 277180 277181 277182 277183 277184 277185 277186 277187 277188 277189 277190 277191 277192 277193 277194 277195 277196 277197 277198 277199 277200 277201 277202 277203 277204 277205 277206 277207 277208 277209 277210 277211 277212 277213 277214 277215 277216 277217 277218 277219 277220 277221 277222 277223 277224 277225 277226 277227 277228 277229 277230 277231 277232 277233 277234 277235 277236 277237 277238 277239 277240 277241 277242 277243 277244 277245 277246 277247 277248 277249 277250 277251 277252 277253 277254 277255 277256 277257 277258 277259 277260 277261 277262 277263 277264 277265 277266 277267 277268 277269 277270 277271 277272 277273 277274 277275 277276 277277 277278 277279 277280 277281 277282 277283 277284 277285 277286 277287 277288 277289 277290 277291 277292 277293 277294 277295 277296 277297 277298 277299 277300 277301 277302 277303 277304 277305 277306 277307 277308 277309 277310 277311 277312 277313 277314 277315 277316 277317 277318 277319 277320 277321 277322 277323 277324 277325 277326 277327 277328 277329 277330 277331 277332 277333 277334 277335 277336 277337 277338 277339 277340 277341 277342 277343 277344 277345 277346 277347 277348 277349 277350 277351 277352 277353 277354 277355 277356 277357 277358 277359 277360 277361 277362 277363 277364 277365 277366 277367 277368 277369 277370 277371 277372> # SplitBus
mul in 2 <277207 277173> out 1 <277373>  # cond trueterm
const-mul-neg-1 in 1 <277207> out 1 <277374> # cond minuscond
add in 2 <100 277374> out 1 <277375>     # cond negcond
mul in 2 <277375 277170> out 1 <277376>  # cond falseterm
add in 2 <277373 277376> out 1 <277377>  # cond result
mul in 2 <277066 277030> out 1 <277378>  # cond trueterm
const-mul-neg-1 in 1 <277066> out 1 <277379> # cond minuscond
add in 2 <100 277379> out 1 <277380>     # cond negcond
mul in 2 <277380 277027> out 1 <277381>  # cond falseterm
add in 2 <277378 277381> out 1 <277382>  # cond result
mul in 2 <276989 276953> out 1 <277383>  # cond trueterm
const-mul-neg-1 in 1 <276989> out 1 <277384> # cond minuscond
add in 2 <100 277384> out 1 <277385>     # cond negcond
mul in 2 <277385 85> out 1 <277386>      # cond falseterm
add in 2 <277383 277386> out 1 <277387>  # cond result
const-mul-ffffffff in 1 <277387> out 1 <277388> # multiply-by-constant 4294967295
add in 2 <277387 277382> out 1 <277389>  # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
add in 2 <277389 277388> out 1 <277390>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <277390> out 1 <277391> # multiply-by-constant 4294967295
add in 2 <277389 277391> out 1 <277392>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <277387> out 1 <277393> # multiply-by-constant 4294967295
add in 2 <277382 277393> out 1 <277394>  # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <277394> out 132 <277395 277396 277397 277398 277399 277400 277401 277402 277403 277404 277405 277406 277407 277408 277409 277410 277411 277412 277413 277414 277415 277416 277417 277418 277419 277420 277421 277422 277423 277424 277425 277426 277427 277428 277429 277430 277431 277432 277433 277434 277435 277436 277437 277438 277439 277440 277441 277442 277443 277444 277445 277446 277447 277448 277449 277450 277451 277452 277453 277454 277455 277456 277457 277458 277459 277460 277461 277462 277463 277464 277465 277466 277467 277468 277469 277470 277471 277472 277473 277474 277475 277476 277477 277478 277479 277480 277481 277482 277483 277484 277485 277486 277487 277488 277489 277490 277491 277492 277493 277494 277495 277496 277497 277498 277499 277500 277501 277502 277503 277504 277505 277506 277507 277508 277509 277510 277511 277512 277513 277514 277515 277516 277517 277518 277519 277520 277521 277522 277523 277524 277525 277526> # SplitBus
mul in 2 <277426 277392> out 1 <277527>  # cond trueterm
const-mul-neg-1 in 1 <277426> out 1 <277528> # cond minuscond
add in 2 <100 277528> out 1 <277529>     # cond negcond
mul in 2 <277529 277382> out 1 <277530>  # cond falseterm
add in 2 <277527 277530> out 1 <277531>  # cond result
const-mul-ffffffff in 1 <277531> out 1 <277532> # multiply-by-constant 4294967295
add in 2 <277531 277377> out 1 <277533>  # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
add in 2 <277533 277532> out 1 <277534>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <277534> out 1 <277535> # multiply-by-constant 4294967295
add in 2 <277533 277535> out 1 <277536>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <277531> out 1 <277537> # multiply-by-constant 4294967295
add in 2 <277377 277537> out 1 <277538>  # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <277538> out 199 <277539 277540 277541 277542 277543 277544 277545 277546 277547 277548 277549 277550 277551 277552 277553 277554 277555 277556 277557 277558 277559 277560 277561 277562 277563 277564 277565 277566 277567 277568 277569 277570 277571 277572 277573 277574 277575 277576 277577 277578 277579 277580 277581 277582 277583 277584 277585 277586 277587 277588 277589 277590 277591 277592 277593 277594 277595 277596 277597 277598 277599 277600 277601 277602 277603 277604 277605 277606 277607 277608 277609 277610 277611 277612 277613 277614 277615 277616 277617 277618 277619 277620 277621 277622 277623 277624 277625 277626 277627 277628 277629 277630 277631 277632 277633 277634 277635 277636 277637 277638 277639 277640 277641 277642 277643 277644 277645 277646 277647 277648 277649 277650 277651 277652 277653 277654 277655 277656 277657 277658 277659 277660 277661 277662 277663 277664 277665 277666 277667 277668 277669 277670 277671 277672 277673 277674 277675 277676 277677 277678 277679 277680 277681 277682 277683 277684 277685 277686 277687 277688 277689 277690 277691 277692 277693 277694 277695 277696 277697 277698 277699 277700 277701 277702 277703 277704 277705 277706 277707 277708 277709 277710 277711 277712 277713 277714 277715 277716 277717 277718 277719 277720 277721 277722 277723 277724 277725 277726 277727 277728 277729 277730 277731 277732 277733 277734 277735 277736 277737> # SplitBus
mul in 2 <277570 277536> out 1 <277738>  # cond trueterm
const-mul-neg-1 in 1 <277570> out 1 <277739> # cond minuscond
add in 2 <100 277739> out 1 <277740>     # cond negcond
mul in 2 <277740 277377> out 1 <277741>  # cond falseterm
add in 2 <277738 277741> out 1 <277742>  # cond result
const-mul-ffffffff in 1 <277742> out 1 <277743> # multiply-by-constant 4294967295
const-mul-ffffffff in 1 <277173> out 1 <277744> # multiply-by-constant 4294967295
add in 2 <277172 277744> out 1 <277745>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
mul in 2 <277207 277745> out 1 <277746>  # cond trueterm
const-mul-neg-1 in 1 <277207> out 1 <277747> # cond minuscond
add in 2 <100 277747> out 1 <277748>     # cond negcond
mul in 2 <277748 88> out 1 <277749>      # cond falseterm
add in 2 <277746 277749> out 1 <277750>  # cond result
const-mul-ffffffff in 1 <277750> out 1 <277751> # multiply-by-constant 4294967295
add in 2 <277750 89> out 1 <277752>      # ArithBusReq.AddReq(DFG.Conditional,DFG.Input)
split in 1 <277752> out 231 <277753 277754 277755 277756 277757 277758 277759 277760 277761 277762 277763 277764 277765 277766 277767 277768 277769 277770 277771 277772 277773 277774 277775 277776 277777 277778 277779 277780 277781 277782 277783 277784 277785 277786 277787 277788 277789 277790 277791 277792 277793 277794 277795 277796 277797 277798 277799 277800 277801 277802 277803 277804 277805 277806 277807 277808 277809 277810 277811 277812 277813 277814 277815 277816 277817 277818 277819 277820 277821 277822 277823 277824 277825 277826 277827 277828 277829 277830 277831 277832 277833 277834 277835 277836 277837 277838 277839 277840 277841 277842 277843 277844 277845 277846 277847 277848 277849 277850 277851 277852 277853 277854 277855 277856 277857 277858 277859 277860 277861 277862 277863 277864 277865 277866 277867 277868 277869 277870 277871 277872 277873 277874 277875 277876 277877 277878 277879 277880 277881 277882 277883 277884 277885 277886 277887 277888 277889 277890 277891 277892 277893 277894 277895 277896 277897 277898 277899 277900 277901 277902 277903 277904 277905 277906 277907 277908 277909 277910 277911 277912 277913 277914 277915 277916 277917 277918 277919 277920 277921 277922 277923 277924 277925 277926 277927 277928 277929 277930 277931 277932 277933 277934 277935 277936 277937 277938 277939 277940 277941 277942 277943 277944 277945 277946 277947 277948 277949 277950 277951 277952 277953 277954 277955 277956 277957 277958 277959 277960 277961 277962 277963 277964 277965 277966 277967 277968 277969 277970 277971 277972 277973 277974 277975 277976 277977 277978 277979 277980 277981 277982 277983> # SplitBus
const-mul-2 in 1 <277784> out 1 <277984> # join source bit 31
add in 2 <277783 277984> out 1 <277985>  # join source bit 30
const-mul-2 in 1 <277985> out 1 <277986> # join
add in 2 <277782 277986> out 1 <277987>  # join source bit 29
const-mul-2 in 1 <277987> out 1 <277988> # join
add in 2 <277781 277988> out 1 <277989>  # join source bit 28
const-mul-2 in 1 <277989> out 1 <277990> # join
add in 2 <277780 277990> out 1 <277991>  # join source bit 27
const-mul-2 in 1 <277991> out 1 <277992> # join
add in 2 <277779 277992> out 1 <277993>  # join source bit 26
const-mul-2 in 1 <277993> out 1 <277994> # join
add in 2 <277778 277994> out 1 <277995>  # join source bit 25
const-mul-2 in 1 <277995> out 1 <277996> # join
add in 2 <277777 277996> out 1 <277997>  # join source bit 24
const-mul-2 in 1 <277997> out 1 <277998> # join
add in 2 <277776 277998> out 1 <277999>  # join source bit 23
const-mul-2 in 1 <277999> out 1 <278000> # join
add in 2 <277775 278000> out 1 <278001>  # join source bit 22
const-mul-2 in 1 <278001> out 1 <278002> # join
add in 2 <277774 278002> out 1 <278003>  # join source bit 21
const-mul-2 in 1 <278003> out 1 <278004> # join
add in 2 <277773 278004> out 1 <278005>  # join source bit 20
const-mul-2 in 1 <278005> out 1 <278006> # join
add in 2 <277772 278006> out 1 <278007>  # join source bit 19
const-mul-2 in 1 <278007> out 1 <278008> # join
add in 2 <277771 278008> out 1 <278009>  # join source bit 18
const-mul-2 in 1 <278009> out 1 <278010> # join
add in 2 <277770 278010> out 1 <278011>  # join source bit 17
const-mul-2 in 1 <278011> out 1 <278012> # join
add in 2 <277769 278012> out 1 <278013>  # join source bit 16
const-mul-2 in 1 <278013> out 1 <278014> # join
add in 2 <277768 278014> out 1 <278015>  # join source bit 15
const-mul-2 in 1 <278015> out 1 <278016> # join
add in 2 <277767 278016> out 1 <278017>  # join source bit 14
const-mul-2 in 1 <278017> out 1 <278018> # join
add in 2 <277766 278018> out 1 <278019>  # join source bit 13
const-mul-2 in 1 <278019> out 1 <278020> # join
add in 2 <277765 278020> out 1 <278021>  # join source bit 12
const-mul-2 in 1 <278021> out 1 <278022> # join
add in 2 <277764 278022> out 1 <278023>  # join source bit 11
const-mul-2 in 1 <278023> out 1 <278024> # join
add in 2 <277763 278024> out 1 <278025>  # join source bit 10
const-mul-2 in 1 <278025> out 1 <278026> # join
add in 2 <277762 278026> out 1 <278027>  # join source bit 9
const-mul-2 in 1 <278027> out 1 <278028> # join
add in 2 <277761 278028> out 1 <278029>  # join source bit 8
const-mul-2 in 1 <278029> out 1 <278030> # join
add in 2 <277760 278030> out 1 <278031>  # join source bit 7
const-mul-2 in 1 <278031> out 1 <278032> # join
add in 2 <277759 278032> out 1 <278033>  # join source bit 6
const-mul-2 in 1 <278033> out 1 <278034> # join
add in 2 <277758 278034> out 1 <278035>  # join source bit 5
const-mul-2 in 1 <278035> out 1 <278036> # join
add in 2 <277757 278036> out 1 <278037>  # join source bit 4
const-mul-2 in 1 <278037> out 1 <278038> # join
add in 2 <277756 278038> out 1 <278039>  # join source bit 3
const-mul-2 in 1 <278039> out 1 <278040> # join
add in 2 <277755 278040> out 1 <278041>  # join source bit 2
const-mul-2 in 1 <278041> out 1 <278042> # join
add in 2 <277754 278042> out 1 <278043>  # join source bit 1
const-mul-2 in 1 <278043> out 1 <278044> # join
add in 2 <277753 278044> out 1 <278045>  # join source bit 0
add in 2 <278045 278045> out 1 <278046>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <277750> out 1 <278047> # multiply-by-constant 4294967295
add in 2 <89 278047> out 1 <278048>      # 'CmpLT DFG.Input - DFG.Conditional'
split in 1 <278048> out 263 <278049 278050 278051 278052 278053 278054 278055 278056 278057 278058 278059 278060 278061 278062 278063 278064 278065 278066 278067 278068 278069 278070 278071 278072 278073 278074 278075 278076 278077 278078 278079 278080 278081 278082 278083 278084 278085 278086 278087 278088 278089 278090 278091 278092 278093 278094 278095 278096 278097 278098 278099 278100 278101 278102 278103 278104 278105 278106 278107 278108 278109 278110 278111 278112 278113 278114 278115 278116 278117 278118 278119 278120 278121 278122 278123 278124 278125 278126 278127 278128 278129 278130 278131 278132 278133 278134 278135 278136 278137 278138 278139 278140 278141 278142 278143 278144 278145 278146 278147 278148 278149 278150 278151 278152 278153 278154 278155 278156 278157 278158 278159 278160 278161 278162 278163 278164 278165 278166 278167 278168 278169 278170 278171 278172 278173 278174 278175 278176 278177 278178 278179 278180 278181 278182 278183 278184 278185 278186 278187 278188 278189 278190 278191 278192 278193 278194 278195 278196 278197 278198 278199 278200 278201 278202 278203 278204 278205 278206 278207 278208 278209 278210 278211 278212 278213 278214 278215 278216 278217 278218 278219 278220 278221 278222 278223 278224 278225 278226 278227 278228 278229 278230 278231 278232 278233 278234 278235 278236 278237 278238 278239 278240 278241 278242 278243 278244 278245 278246 278247 278248 278249 278250 278251 278252 278253 278254 278255 278256 278257 278258 278259 278260 278261 278262 278263 278264 278265 278266 278267 278268 278269 278270 278271 278272 278273 278274 278275 278276 278277 278278 278279 278280 278281 278282 278283 278284 278285 278286 278287 278288 278289 278290 278291 278292 278293 278294 278295 278296 278297 278298 278299 278300 278301 278302 278303 278304 278305 278306 278307 278308 278309 278310 278311> # SplitBus
mul in 2 <278080 278046> out 1 <278312>  # cond trueterm
const-mul-neg-1 in 1 <278080> out 1 <278313> # cond minuscond
add in 2 <100 278313> out 1 <278314>     # cond negcond
mul in 2 <278314 277750> out 1 <278315>  # cond falseterm
add in 2 <278312 278315> out 1 <278316>  # cond result
add in 2 <277742 278316> out 1 <278317>  # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
split in 1 <278317> outplitBus
const-mul-2 in 1 <278349> out 1 <278551> # join source bit 31
add in 2 <278348 278551> out 1 <278552>  # join source bit 30
const-mul-2 in 1 <278552> out 1 <278553> # join
add in 2 <278347 278553> out 1 <278554>  # join source bit 29
const-mul-2 in 1 <278554> out 1 <278555> # join
add in 2 <278346 278555> out 1 <278556>  # join source bit 28
const-mul-2 in 1 <278556> out 1 <278557> # join
add in 2 <278345 278557> out 1 <278558>  # join source bit 27
const-mul-2 in 1 <278558> out 1 <278559> # join
add in 2 <278344 278559> out 1 <278560>  # join source bit 26
const-mul-2 in 1 <278560> out 1 <278561> # join
add in 2 <278343 278561> out 1 <278562>  # join source bit 25
const-mul-2 in 1 <278562> out 1 <278563> # join
add in 2 <278342 278563> out 1 <278564>  # join source bit 24
const-mul-2 in 1 <278564> out 1 <278565> # join
add in 2 <278341 278565> out 1 <278566>  # join source bit 23
const-mul-2 in 1 <278566> out 1 <278567> # join
add in 2 <278340 278567> out 1 <278568>  # join source bit 22
const-mul-2 in 1 <278568> out 1 <278569> # join
add in 2 <278339 278569> out 1 <278570>  # join source bit 21
const-mul-2 in 1 <278570> out 1 <278571> # join
add in 2 <278338 278571> out 1 <278572>  # join source bit 20
const-mul-2 in 1 <278572> out 1 <278573> # join
add in 2 <278337 278573> out 1 <278574>  # join source bit 19
const-mul-2 in 1 <278574> out 1 <278575> # join
add in 2 <278336 278575> out 1 <278576>  # join source bit 18
const-mul-2 in 1 <278576> out 1 <278577> # join
add in 2 <278335 278577> out 1 <278578>  # join source bit 17
const-mul-2 in 1 <278578> out 1 <278579> # join
add in 2 <278334 278579> out 1 <278580>  # join source bit 16
const-mul-2 in 1 <278580> out 1 <278581> # join
add in 2 <278333 278581> out 1 <278582>  # join source bit 15
const-mul-2 in 1 <278582> out 1 <278583> # join
add in 2 <278332 278583> out 1 <278584>  # join source bit 14
const-mul-2 in 1 <278584> out 1 <278585> # join
add in 2 <278331 278585> out 1 <278586>  # join source bit 13
const-mul-2 in 1 <278586> out 1 <278587> # join
add in 2 <278330 278587> out 1 <278588>  # join source bit 12
const-mul-2 in 1 <278588> out 1 <278589> # join
add in 2 <278329 278589> out 1 <278590>  # join source bit 11
const-mul-2 in 1 <278590> out 1 <278591> # join
add in 2 <278328 278591> out 1 <278592>  # join source bit 10
const-mul-2 in 1 <278592> out 1 <278593> # join
add in 2 <278327 278593> out 1 <278594>  # join source bit 9
const-mul-2 in 1 <278594> out 1 <278595> # join
add in 2 <278326 278595> out 1 <278596>  # join source bit 8
const-mul-2 in 1 <278596> out 1 <278597> # join
add in 2 <278325 278597> out 1 <278598>  # join source bit 7
const-mul-2 in 1 <278598> out 1 <278599> # join
add in 2 <278324 278599> out 1 <278600>  # join source bit 6
const-mul-2 in 1 <278600> out 1 <278601> # join
add in 2 <278323 278601> out 1 <278602>  # join source bit 5
const-mul-2 in 1 <278602> out 1 <278603> # join
add in 2 <278322 278603> out 1 <278604>  # join source bit 4
const-mul-2 in 1 <278604> out 1 <278605> # join
add in 2 <278321 278605> out 1 <278606>  # join source bit 3
const-mul-2 in 1 <278606> out 1 <278607> # join
add in 2 <278320 278607> out 1 <278608>  # join source bit 2
const-mul-2 in 1 <278608> out 1 <278609> # join
add in 2 <278319 278609> out 1 <278610>  # join source bit 1
const-mul-2 in 1 <278610> out 1 <278611> # join
add in 2 <278318 278611> out 1 <278612>  # join source bit 0
add in 2 <278612 278612> out 1 <278613>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <277742> out 1 <278614> # multiply-by-constant 4294967295
add in 2 <278316 278614> out 1 <278615>  # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <278615> outplitBus
mul in 2 <278647 278613> out 1 <278881>  # cond trueterm
const-mul-neg-1 in 1 <278647> out 1 <278882> # cond minuscond
add in 2 <100 278882> out 1 <278883>     # cond negcond
mul in 2 <278883 277742> out 1 <278884>  # cond falseterm
add in 2 <278881 278884> out 1 <278885>  # cond result
mul in 2 <277570 277534> out 1 <278886>  # cond trueterm
const-mul-neg-1 in 1 <277570> out 1 <278887> # cond minuscond
add in 2 <100 278887> out 1 <278888>     # cond negcond
mul in 2 <278888 277531> out 1 <278889>  # cond falseterm
add in 2 <278886 278889> out 1 <278890>  # cond result
mul in 2 <277426 277390> out 1 <278891>  # cond trueterm
const-mul-neg-1 in 1 <277426> out 1 <278892> # cond minuscond
add in 2 <100 278892> out 1 <278893>     # cond negcond
mul in 2 <278893 277387> out 1 <278894>  # cond falseterm
add in 2 <278891 278894> out 1 <278895>  # cond result
const-mul-ffffffff in 1 <278895> out 1 <278896> # multiply-by-constant 4294967295
add in 2 <278895 278890> out 1 <278897>  # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
add in 2 <278897 278896> out 1 <278898>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <278898> out 1 <278899> # multiply-by-constant 4294967295
add in 2 <278897 278899> out 1 <278900>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <278895> out 1 <278901> # multiply-by-constant 4294967295
add in 2 <278890 278901> out 1 <278902>  # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <278902> out 200 <278903 278904 278905 278906 278907 278908 278909 278910 278911 278912 278913 278914 278915 278916 278917 278918 278919 278920 278921 278922 278923 278924 278925 278926 278927 278928 278929 278930 278931 278932 278933 278934 278935 278936 278937 278938 278939 278940 278941 278942 278943 278944 278945 278946 278947 278948 278949 278950 278951 278952 278953 278954 278955 278956 278957 278958 278959 278960 278961 278962 278963 278964 278965 278966 278967 278968 278969 278970 278971 278972 278973 278974 278975 278976 278977 278978 278979 278980 278981 278982 278983 278984 278985 278986 278987 278988 278989 278990 278991 278992 278993 278994 278995 278996 278997 278998 278999 279000 279001 279002 279003 279004 279005 279006 279007 279008 279009 279010 279011 279012 279013 279014 279015 279016 279017 279018 279019 279020 279021 279022 279023 279024 279025 279026 279027 279028 279029 279030 279031 279032 279033 279034 279035 279036 279037 279038 279039 279040 279041 279042 279043 279044 279045 279046 279047 279048 279049 279050 279051 279052 279053 279054 279055 279056 279057 279058 279059 279060 279061 279062 279063 279064 279065 279066 279067 279068 279069 279070 279071 279072 279073 279074 279075 279076 279077 279078 279079 279080 279081 279082 279083 279084 279085 279086 279087 279088 279089 279090 279091 279092 279093 279094 279095 279096 279097 279098 279099 279100 279101 279102> # SplitBus
mul in 2 <278934 278900> out 1 <279103>  # cond trueterm
const-mul-neg-1 in 1 <278934> out 1 <279104> # cond minuscond
add in 2 <100 279104> out 1 <279105>     # cond negcond
mul in 2 <279105 278890> out 1 <279106>  # cond falseterm
add in 2 <279103 279106> out 1 <279107>  # cond result
const-mul-ffffffff in 1 <279107> out 1 <279108> # multiply-by-constant 4294967295
add in 2 <279107 278885> out 1 <279109>  # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
split in 1 <279109> outplitBus
const-mul-2 in 1 <279141> out 1 <279345> # join source bit 31
add in 2 <279140 279345> out 1 <279346>  # join source bit 30
const-mul-2 in 1 <279346> out 1 <279347> # join
add in 2 <279139 279347> out 1 <279348>  # join source bit 29
const-mul-2 in 1 <279348> out 1 <279349> # join
add in 2 <279138 279349> out 1 <279350>  # join source bit 28
const-mul-2 in 1 <279350> out 1 <279351> # join
add in 2 <279137 279351> out 1 <279352>  # join source bit 27
const-mul-2 in 1 <279352> out 1 <279353> # join
add in 2 <279136 279353> out 1 <279354>  # join source bit 26
const-mul-2 in 1 <279354> out 1 <279355> # join
add in 2 <279135 279355> out 1 <279356>  # join source bit 25
const-mul-2 in 1 <279356> out 1 <279357> # join
add in 2 <279134 279357> out 1 <279358>  # join source bit 24
const-mul-2 in 1 <279358> out 1 <279359> # join
add in 2 <279133 279359> out 1 <279360>  # join source bit 23
const-mul-2 in 1 <279360> out 1 <279361> # join
add in 2 <279132 279361> out 1 <279362>  # join source bit 22
const-mul-2 in 1 <279362> out 1 <279363> # join
add in 2 <279131 279363> out 1 <279364>  # join source bit 21
const-mul-2 in 1 <279364> out 1 <279365> # join
add in 2 <279130 279365> out 1 <279366>  # join source bit 20
const-mul-2 in 1 <279366> out 1 <279367> # join
add in 2 <279129 279367> out 1 <279368>  # join source bit 19
const-mul-2 in 1 <279368> out 1 <279369> # join
add in 2 <279128 279369> out 1 <279370>  # join source bit 18
const-mul-2 in 1 <279370> out 1 <279371> # join
add in 2 <279127 279371> out 1 <279372>  # join source bit 17
const-mul-2 in 1 <279372> out 1 <279373> # join
add in 2 <279126 279373> out 1 <279374>  # join source bit 16
const-mul-2 in 1 <279374> out 1 <279375> # join
add in 2 <279125 279375> out 1 <279376>  # join source bit 15
const-mul-2 in 1 <279376> out 1 <279377> # join
add in 2 <279124 279377> out 1 <279378>  # join source bit 14
const-mul-2 in 1 <279378> out 1 <279379> # join
add in 2 <279123 279379> out 1 <279380>  # join source bit 13
const-mul-2 in 1 <279380> out 1 <279381> # join
add in 2 <279122 279381> out 1 <279382>  # join source bit 12
const-mul-2 in 1 <279382> out 1 <279383> # join
add in 2 <279121 279383> out 1 <279384>  # join source bit 11
const-mul-2 in 1 <279384> out 1 <279385> # join
add in 2 <279120 279385> out 1 <279386>  # join source bit 10
const-mul-2 in 1 <279386> out 1 <279387> # join
add in 2 <279119 279387> out 1 <279388>  # join source bit 9
const-mul-2 in 1 <279388> out 1 <279389> # join
add in 2 <279118 279389> out 1 <279390>  # join source bit 8
const-mul-2 in 1 <279390> out 1 <279391> # join
add in 2 <279117 279391> out 1 <279392>  # join source bit 7
const-mul-2 in 1 <279392> out 1 <279393> # join
add in 2 <279116 279393> out 1 <279394>  # join source bit 6
const-mul-2 in 1 <279394> out 1 <279395> # join
add in 2 <279115 279395> out 1 <279396>  # join source bit 5
const-mul-2 in 1 <279396> out 1 <279397> # join
add in 2 <279114 279397> out 1 <279398>  # join source bit 4
const-mul-2 in 1 <279398> out 1 <279399> # join
add in 2 <279113 279399> out 1 <279400>  # join source bit 3
const-mul-2 in 1 <279400> out 1 <279401> # join
add in 2 <279112 279401> out 1 <279402>  # join source bit 2
const-mul-2 in 1 <279402> out 1 <279403> # join
add in 2 <279111 279403> out 1 <279404>  # join source bit 1
const-mul-2 in 1 <279404> out 1 <279405> # join
add in 2 <279110 279405> out 1 <279406>  # join source bit 0
add in 2 <279406 279406> out 1 <279407>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <279407> out 1 <279408> # multiply-by-constant 4294967295
add in 2 <279109 279408> out 1 <279409>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <279107> out 1 <279410> # multiply-by-constant 4294967295
add in 2 <278885 279410> out 1 <279411>  # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <279411> outplitBus
mul in 2 <279443 279409> out 1 <279679>  # cond trueterm
const-mul-neg-1 in 1 <279443> out 1 <279680> # cond minuscond
add in 2 <100 279680> out 1 <279681>     # cond negcond
mul in 2 <279681 278885> out 1 <279682>  # cond falseterm
add in 2 <279679 279682> out 1 <279683>  # cond result
add in 2 <279683 104> out 1 <279684>     # ArithBusReq.AddReq(DFG.Conditional,DFG.Constant)
const-mul-ffffffff in 1 <87> out 1 <279685> # multiply-by-constant 4294967295
add in 2 <279684 279685> out 1 <279686>  # 'CmpLT DFG.Add - DFG.Input'
split in 1 <279686> out 238 <279687 279688 279689 279690 279691 279692 279693 279694 279695 279696 279697 279698 279699 279700 279701 279702 279703 279704 279705 279706 279707 279708 279709 279710 279711 279712 279713 279714 279715 279716 279717 279718 279719 279720 279721 279722 279723 279724 279725 279726 279727 279728 279729 279730 279731 279732 279733 279734 279735 279736 279737 279738 279739 279740 279741 279742 279743 279744 279745 279746 279747 279748 279749 279750 279751 279752 279753 279754 279755 279756 279757 279758 279759 279760 279761 279762 279763 279764 279765 279766 279767 279768 279769 279770 279771 279772 279773 279774 279775 279776 279777 279778 279779 279780 279781 279782 279783 279784 279785 279786 279787 279788 279789 279790 279791 279792 279793 279794 279795 279796 279797 279798 279799 279800 279801 279802 279803 279804 279805 279806 279807 279808 279809 279810 279811 279812 279813 279814 279815 279816 279817 279818 279819 279820 279821 279822 279823 279824 279825 279826 279827 279828 279829 279830 279831 279832 279833 279834 279835 279836 279837 279838 279839 279840 279841 279842 279843 279844 279845 279846 279847 279848 279849 279850 279851 279852 279853 279854 279855 279856 279857 279858 279859 279860 279861 279862 279863 279864 279865 279866 279867 279868 279869 279870 279871 279872 279873 279874 279875 279876 279877 279878 279879 279880 279881 279882 279883 279884 279885 279886 279887 279888 279889 279890 279891 279892 279893 279894 279895 279896 279897 279898 279899 279900 279901 279902 279903 279904 279905 279906 279907 279908 279909 279910 279911 279912 279913 279914 279915 279916 279917 279918 279919 279920 279921 279922 279923 279924> # SplitBus
mul in 2 <279718 103> out 1 <279925>     # cond trueterm
const-mul-neg-1 in 1 <279718> out 1 <279926> # cond minuscond
add in 2 <100 279926> out 1 <279927>     # cond negcond
mul in 2 <279927 102> out 1 <279928>     # cond falseterm
add in 2 <279925 279928> out 1 <279929>  # cond result
add in 2 <279683 3084> out 1 <279930>    # ArithBusReq.AddReq(DFG.Conditional,DFG.Negate)
const-mul-ffffffff in 1 <279930> out 1 <279931> # multiply-by-constant 4294967295
add in 2 <87 279931> out 1 <279932>      # 'CmpLT DFG.Input - DFG.Subtract'
split in 1 <279932> outplitBus
mul in 2 <279964 103> out 1 <280203>     # cond trueterm
const-mul-neg-1 in 1 <279964> out 1 <280204> # cond minuscond
add in 2 <100 280204> out 1 <280205>     # cond negcond
mul in 2 <280205 279929> out 1 <280206>  # cond falseterm
add in 2 <280203 280206> out 1 <280207>  # cond result
const-mul-ffffffff in 1 <86> out 1 <280208> # multiply-by-constant 4294967295
add in 2 <86 87> out 1 <280209>          # ArithBusReq.AddReq(DFG.Input,DFG.Input)
add in 2 <280209 280208> out 1 <280210>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <280210> out 1 <280211> # multiply-by-constant 4294967295
add in 2 <280209 280211> out 1 <280212>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <86> out 1 <280213> # multiply-by-constant 4294967295
add in 2 <87 280213> out 1 <280214>      # 'CmpLT DFG.Input - DFG.Input'
split in 1 <280214> out 65 <280215 280216 280217 280218 280219 280220 280221 280222 280223 280224 280225 280226 280227 280228 280229 280230 280231 280232 280233 280234 280235 280236 280237 280238 280239 280240 280241 280242 280243 280244 280245 280246 280247 280248 280249 280250 280251 280252 280253 280254 280255 280256 280257 280258 280259 280260 280261 280262 280263 280264 280265 280266 280267 280268 280269 280270 280271 280272 280273 280274 280275 280276 280277 280278 280279> # SplitBus
mul in 2 <280246 280212> out 1 <280280>  # cond trueterm
const-mul-neg-1 in 1 <280246> out 1 <280281> # cond minuscond
add in 2 <100 280281> out 1 <280282>     # cond negcond
mul in 2 <280282 87> out 1 <280283>      # cond falseterm
add in 2 <280280 280283> out 1 <280284>  # cond result
const-mul-ffffffff in 1 <280284> out 1 <280285> # multiply-by-constant 4294967295
add in 2 <280284 88> out 1 <280286>      # ArithBusReq.AddReq(DFG.Conditional,DFG.Input)
add in 2 <280286 280285> out 1 <280287>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <280287> out 1 <280288> # multiply-by-constant 4294967295
add in 2 <280286 280288> out 1 <280289>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <280284> out 1 <280290> # multiply-by-constant 4294967295
add in 2 <88 280290> out 1 <280291>      # 'CmpLT DFG.Input - DFG.Conditional'
split in 1 <280291> out 131 <280292 280293 280294 280295 280296 280297 280298 280299 280300 280301 280302 280303 280304 280305 280306 280307 280308 280309 280310 280311 280312 280313 280314 280315 280316 280317 280318 280319 280320 280321 280322 280323 280324 280325 280326 280327 280328 280329 280330 280331 280332 280333 280334 280335 280336 280337 280338 280339 280340 280341 280342 280343 280344 280345 280346 280347 280348 280349 280350 280351 280352 280353 280354 280355 280356 280357 280358 280359 280360 280361 280362 280363 280364 280365 280366 280367 280368 280369 280370 280371 280372 280373 280374 280375 280376 280377 280378 280379 280380 280381 280382 280383 280384 280385 280386 280387 280388 280389 280390 280391 280392 280393 280394 280395 280396 280397 280398 280399 280400 280401 280402 280403 280404 280405 280406 280407 280408 280409 280410 280411 280412 280413 280414 280415 280416 280417 280418 280419 280420 280421 280422> # SplitBus
mul in 2 <280323 280289> out 1 <280423>  # cond trueterm
const-mul-neg-1 in 1 <280323> out 1 <280424> # cond minuscond
add in 2 <100 280424> out 1 <280425>     # cond negcond
mul in 2 <280425 88> out 1 <280426>      # cond falseterm
add in 2 <280423 280426> out 1 <280427>  # cond result
const-mul-ffffffff in 1 <280427> out 1 <280428> # multiply-by-constant 4294967295
add in 2 <280427 89> out 1 <280429>      # ArithBusReq.AddReq(DFG.Conditional,DFG.Input)
add in 2 <280429 280428> out 1 <280430>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <280427> out 1 <280431> # multiply-by-constant 4294967295
add in 2 <89 280431> out 1 <280432>      # 'CmpLT DFG.Input - DFG.Conditional'
split in 1 <280432> out 197 <280433 280434 280435 280436 280437 280438 280439 280440 280441 280442 280443 280444 280445 280446 280447 280448 280449 280450 280451 280452 280453 280454 280455 280456 280457 280458 280459 280460 280461 280462 280463 280464 280465 280466 280467 280468 280469 280470 280471 280472 280473 280474 280475 280476 280477 280478 280479 280480 280481 280482 280483 280484 280485 280486 280487 280488 280489 280490 280491 280492 280493 280494 280495 280496 280497 280498 280499 280500 280501 280502 280503 280504 280505 280506 280507 280508 280509 280510 280511 280512 280513 280514 280515 280516 280517 280518 280519 280520 280521 280522 280523 280524 280525 280526 280527 280528 280529 280530 280531 280532 280533 280534 280535 280536 280537 280538 280539 280540 280541 280542 280543 280544 280545 280546 280547 280548 280549 280550 280551 280552 280553 280554 280555 280556 280557 280558 280559 280560 280561 280562 280563 280564 280565 280566 280567 280568 280569 280570 280571 280572 280573 280574 280575 280576 280577 280578 280579 280580 280581 280582 280583 280584 280585 280586 280587 280588 280589 280590 280591 280592 280593 280594 280595 280596 280597 280598 280599 280600 280601 280602 280603 280604 280605 280606 280607 280608 280609 280610 280611 280612 280613 280614 280615 280616 280617 280618 280619 280620 280621 280622 280623 280624 280625 280626 280627 280628 280629> # SplitBus
mul in 2 <280464 280430> out 1 <280630>  # cond trueterm
const-mul-neg-1 in 1 <280464> out 1 <280631> # cond minuscond
add in 2 <100 280631> out 1 <280632>     # cond negcond
mul in 2 <280632 280427> out 1 <280633>  # cond falseterm
add in 2 <280630 280633> out 1 <280634>  # cond result
mul in 2 <280323 280287> out 1 <280635>  # cond trueterm
const-mul-neg-1 in 1 <280323> out 1 <280636> # cond minuscond
add in 2 <100 280636> out 1 <280637>     # cond negcond
mul in 2 <280637 280284> out 1 <280638>  # cond falseterm
add in 2 <280635 280638> out 1 <280639>  # cond result
mul in 2 <280246 280210> out 1 <280640>  # cond trueterm
const-mul-neg-1 in 1 <280246> out 1 <280641> # cond minuscond
add in 2 <100 280641> out 1 <280642>     # cond negcond
mul in 2 <280642 86> out 1 <280643>      # cond falseterm
add in 2 <280640 280643> out 1 <280644>  # cond result
const-mul-ffffffff in 1 <280644> out 1 <280645> # multiply-by-constant 4294967295
add in 2 <280644 280639> out 1 <280646>  # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
add in 2 <280646 280645> out 1 <280647>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <280647> out 1 <280648> # multiply-by-constant 4294967295
add in 2 <280646 280648> out 1 <280649>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <280644> out 1 <280650> # multiply-by-constant 4294967295
add in 2 <280639 280650> out 1 <280651>  # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <280651> out 132 <280652 280653 280654 280655 280656 280657 280658 280659 280660 280661 280662 280663 280664 280665 280666 280667 280668 280669 280670 280671 280672 280673 280674 280675 280676 280677 280678 280679 280680 280681 280682 280683 280684 280685 280686 280687 280688 280689 280690 280691 280692 280693 280694 280695 280696 280697 280698 280699 280700 280701 280702 280703 280704 280705 280706 280707 280708 280709 280710 280711 280712 280713 280714 280715 280716 280717 280718 280719 280720 280721 280722 280723 280724 280725 280726 280727 280728 280729 280730 280731 280732 280733 280734 280735 280736 280737 280738 280739 280740 280741 280742 280743 280744 280745 280746 280747 280748 280749 280750 280751 280752 280753 280754 280755 280756 280757 280758 280759 280760 280761 280762 280763 280764 280765 280766 280767 280768 280769 280770 280771 280772 280773 280774 280775 280776 280777 280778 280779 280780 280781 280782 280783> # SplitBus
mul in 2 <280683 280649> out 1 <280784>  # cond trueterm
const-mul-neg-1 in 1 <280683> out 1 <280785> # cond minuscond
add in 2 <100 280785> out 1 <280786>     # cond negcond
mul in 2 <280786 280639> out 1 <280787>  # cond falseterm
add in 2 <280784 280787> out 1 <280788>  # cond result
const-mul-ffffffff in 1 <280788> out 1 <280789> # multiply-by-constant 4294967295
add in 2 <280788 280634> out 1 <280790>  # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
add in 2 <280790 280789> out 1 <280791>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <280791> out 1 <280792> # multiply-by-constant 4294967295
add in 2 <280790 280792> out 1 <280793>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <280788> out 1 <280794> # multiply-by-constant 4294967295
add in 2 <280634 280794> out 1 <280795>  # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <280795> out 199 <280796 280797 280798 280799 280800 280801 280802 280803 280804 280805 280806 280807 280808 280809 280810 280811 280812 280813 280814 280815 280816 280817 280818 280819 280820 280821 280822 280823 280824 280825 280826 280827 280828 280829 280830 280831 280832 280833 280834 280835 280836 280837 280838 280839 280840 280841 280842 280843 280844 280845 280846 280847 280848 280849 280850 280851 280852 280853 280854 280855 280856 280857 280858 280859 280860 280861 280862 280863 280864 280865 280866 280867 280868 280869 280870 280871 280872 280873 280874 280875 280876 280877 280878 280879 280880 280881 280882 280883 280884 280885 280886 280887 280888 280889 280890 280891 280892 280893 280894 280895 280896 280897 280898 280899 280900 280901 280902 280903 280904 280905 280906 280907 280908 280909 280910 280911 280912 280913 280914 280915 280916 280917 280918 280919 280920 280921 280922 280923 280924 280925 280926 280927 280928 280929 280930 280931 280932 280933 280934 280935 280936 280937 280938 280939 280940 280941 280942 280943 280944 280945 280946 280947 280948 280949 280950 280951 280952 280953 280954 280955 280956 280957 280958 280959 280960 280961 280962 280963 280964 280965 280966 280967 280968 280969 280970 280971 280972 280973 280974 280975 280976 280977 280978 280979 280980 280981 280982 280983 280984 280985 280986 280987 280988 280989 280990 280991 280992 280993 280994> # SplitBus
mul in 2 <280827 280793> out 1 <280995>  # cond trueterm
const-mul-neg-1 in 1 <280827> out 1 <280996> # cond minuscond
add in 2 <100 280996> out 1 <280997>     # cond negcond
mul in 2 <280997 280634> out 1 <280998>  # cond falseterm
add in 2 <280995 280998> out 1 <280999>  # cond result
const-mul-ffffffff in 1 <280999> out 1 <281000> # multiply-by-constant 4294967295
const-mul-ffffffff in 1 <280430> out 1 <281001> # multiply-by-constant 4294967295
add in 2 <280429 281001> out 1 <281002>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
mul in 2 <280464 281002> out 1 <281003>  # cond trueterm
const-mul-neg-1 in 1 <280464> out 1 <281004> # cond minuscond
add in 2 <100 281004> out 1 <281005>     # cond negcond
mul in 2 <281005 89> out 1 <281006>      # cond falseterm
add in 2 <281003 281006> out 1 <281007>  # cond result
const-mul-ffffffff in 1 <281007> out 1 <281008> # multiply-by-constant 4294967295
add in 2 <281007 90> out 1 <281009>      # ArithBusReq.AddReq(DFG.Conditional,DFG.Input)
split in 1 <281009> outplitBus
const-mul-2 in 1 <281041> out 1 <281241> # join source bit 31
add in 2 <281040 281241> out 1 <281242>  # join source bit 30
const-mul-2 in 1 <281242> out 1 <281243> # join
add in 2 <281039 281243> out 1 <281244>  # join source bit 29
const-mul-2 in 1 <281244> out 1 <281245> # join
add in 2 <281038 281245> out 1 <281246>  # join source bit 28
const-mul-2 in 1 <281246> out 1 <281247> # join
add in 2 <281037 281247> out 1 <281248>  # join source bit 27
const-mul-2 in 1 <281248> out 1 <281249> # join
add in 2 <281036 281249> out 1 <281250>  # join source bit 26
const-mul-2 in 1 <281250> out 1 <281251> # join
add in 2 <281035 281251> out 1 <281252>  # join source bit 25
const-mul-2 in 1 <281252> out 1 <281253> # join
add in 2 <281034 281253> out 1 <281254>  # join source bit 24
const-mul-2 in 1 <281254> out 1 <281255> # join
add in 2 <281033 281255> out 1 <281256>  # join source bit 23
const-mul-2 in 1 <281256> out 1 <281257> # join
add in 2 <281032 281257> out 1 <281258>  # join source bit 22
const-mul-2 in 1 <281258> out 1 <281259> # join
add in 2 <281031 281259> out 1 <281260>  # join source bit 21
const-mul-2 in 1 <281260> out 1 <281261> # join
add in 2 <281030 281261> out 1 <281262>  # join source bit 20
const-mul-2 in 1 <281262> out 1 <281263> # join
add in 2 <281029 281263> out 1 <281264>  # join source bit 19
const-mul-2 in 1 <281264> out 1 <281265> # join
add in 2 <281028 281265> out 1 <281266>  # join source bit 18
const-mul-2 in 1 <281266> out 1 <281267> # join
add in 2 <281027 281267> out 1 <281268>  # join source bit 17
const-mul-2 in 1 <281268> out 1 <281269> # join
add in 2 <281026 281269> out 1 <281270>  # join source bit 16
const-mul-2 in 1 <281270> out 1 <281271> # join
add in 2 <281025 281271> out 1 <281272>  # join source bit 15
const-mul-2 in 1 <281272> out 1 <281273> # join
add in 2 <281024 281273> out 1 <281274>  # join source bit 14
const-mul-2 in 1 <281274> out 1 <281275> # join
add in 2 <281023 281275> out 1 <281276>  # join source bit 13
const-mul-2 in 1 <281276> out 1 <281277> # join
add in 2 <281022 281277> out 1 <281278>  # join source bit 12
const-mul-2 in 1 <281278> out 1 <281279> # join
add in 2 <281021 281279> out 1 <281280>  # join source bit 11
const-mul-2 in 1 <281280> out 1 <281281> # join
add in 2 <281020 281281> out 1 <281282>  # join source bit 10
const-mul-2 in 1 <281282> out 1 <281283> # join
add in 2 <281019 281283> out 1 <281284>  # join source bit 9
const-mul-2 in 1 <281284> out 1 <281285> # join
add in 2 <281018 281285> out 1 <281286>  # join source bit 8
const-mul-2 in 1 <281286> out 1 <281287> # join
add in 2 <281017 281287> out 1 <281288>  # join source bit 7
const-mul-2 in 1 <281288> out 1 <281289> # join
add in 2 <281016 281289> out 1 <281290>  # join source bit 6
const-mul-2 in 1 <281290> out 1 <281291> # join
add in 2 <281015 281291> out 1 <281292>  # join source bit 5
const-mul-2 in 1 <281292> out 1 <281293> # join
add in 2 <281014 281293> out 1 <281294>  # join source bit 4
const-mul-2 in 1 <281294> out 1 <281295> # join
add in 2 <281013 281295> out 1 <281296>  # join source bit 3
const-mul-2 in 1 <281296> out 1 <281297> # join
add in 2 <281012 281297> out 1 <281298>  # join source bit 2
const-mul-2 in 1 <281298> out 1 <281299> # join
add in 2 <281011 281299> out 1 <281300>  # join source bit 1
const-mul-2 in 1 <281300> out 1 <281301> # join
add in 2 <281010 281301> out 1 <281302>  # join source bit 0
add in 2 <281302 281302> out 1 <281303>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <281007> out 1 <281304> # multiply-by-constant 4294967295
add in 2 <90 281304> out 1 <281305>      # 'CmpLT DFG.Input - DFG.Conditional'
split in 1 <281305> out 263 <281306 281307 281308 281309 281310 281311 281312 281313 281314 281315 281316 281317 281318 281319 281320 281321 281322 281323 281324 281325 281326 281327 281328 281329 281330 281331 281332 281333 281334 281335 281336 281337 281338 281339 281340 281341 281342 281343 281344 281345 281346 281347 281348 281349 281350 281351 281352 281353 281354 281355 281356 281357 281358 281359 281360 281361 281362 281363 281364 281365 281366 281367 281368 281369 281370 281371 281372 281373 281374 281375 281376 281377 281378 281379 281380 281381 281382 281383 281384 281385 281386 281387 281388 281389 281390 281391 281392 281393 281394 281395 281396 281397 281398 281399 281400 281401 281402 281403 281404 281405 281406 281407 281408 281409 281410 281411 281412 281413 281414 281415 281416 281417 281418 281419 281420 281421 281422 281423 281424 281425 281426 281427 281428 281429 281430 281431 281432 281433 281434 281435 281436 281437 281438 281439 281440 281441 281442 281443 281444 281445 281446 281447 281448 281449 281450 281451 281452 281453 281454 281455 281456 281457 281458 281459 281460 281461 281462 281463 281464 281465 281466 281467 281468 281469 281470 281471 281472 281473 281474 281475 281476 281477 281478 281479 281480 281481 281482 281483 281484 281485 281486 281487 281488 281489 281490 281491 281492 281493 281494 281495 281496 281497 281498 281499 281500 281501 281502 281503 281504 281505 281506 281507 281508 281509 281510 281511 281512 281513 281514 281515 281516 281517 281518 281519 281520 281521 281522 281523 281524 281525 281526 281527 281528 281529 281530 281531 281532 281533 281534 281535 281536 281537 281538 281539 281540 281541 281542 281543 281544 281545 281546 281547 281548 281549 281550 281551 281552 281553 281554 281555 281556 281557 281558 281559 281560 281561 281562 281563 281564 281565 281566 281567 281568> # SplitBus
mul in 2 <281337 281303> out 1 <281569>  # cond trueterm
const-mul-neg-1 in 1 <281337> out 1 <281570> # cond minuscond
add in 2 <100 281570> out 1 <281571>     # cond negcond
mul in 2 <281571 281007> out 1 <281572>  # cond falseterm
add in 2 <281569 281572> out 1 <281573>  # cond result
add in 2 <280999 281573> out 1 <281574>  # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
split in 1 <281574> out 233 <281575 281576 281577 281578 281579 281580 281581 281582 281583 281584 281585 281586 281587 281588 281589 281590 281591 281592 281593 281594 281595 281596 281597 281598 281599 281600 281601 281602 281603 281604 281605 281606 281607 281608 281609 281610 281611 281612 281613 281614 281615 281616 281617 281618 281619 281620 281621 281622 281623 281624 281625 281626 281627 281628 281629 281630 281631 281632 281633 281634 281635 281636 281637 281638 281639 281640 281641 281642 281643 281644 281645 281646 281647 281648 281649 281650 281651 281652 281653 281654 281655 281656 281657 281658 281659 281660 281661 281662 281663 281664 281665 281666 281667 281668 281669 281670 281671 281672 281673 281674 281675 281676 281677 281678 281679 281680 281681 281682 281683 281684 281685 281686 281687 281688 281689 281690 281691 281692 281693 281694 281695 281696 281697 281698 281699 281700 281701 281702 281703 281704 281705 281706 281707 281708 281709 281710 281711 281712 281713 281714 281715 281716 281717 281718 281719 281720 281721 281722 281723 281724 281725 281726 281727 281728 281729 281730 281731 281732 281733 281734 281735 281736 281737 281738 281739 281740 281741 281742 281743 281744 281745 281746 281747 281748 281749 281750 281751 281752 281753 281754 281755 281756 281757 281758 281759 281760 281761 281762 281763 281764 281765 281766 281767 281768 281769 281770 281771 281772 281773 281774 281775 281776 281777 281778 281779 281780 281781 281782 281783 281784 281785 281786 281787 281788 281789 281790 281791 281792 281793 281794 281795 281796 281797 281798 281799 281800 281801 281802 281803 281804 281805 281806 281807> # SplitBus
const-mul-2 in 1 <281606> out 1 <281808> # join source bit 31
add in 2 <281605 281808> out 1 <281809>  # join source bit 30
const-mul-2 in 1 <281809> out 1 <281810> # join
add in 2 <281604 281810> out 1 <281811>  # join source bit 29
const-mul-2 in 1 <281811> out 1 <281812> # join
add in 2 <281603 281812> out 1 <281813>  # join source bit 28
const-mul-2 in 1 <281813> out 1 <281814> # join
add in 2 <281602 281814> out 1 <281815>  # join source bit 27
const-mul-2 in 1 <281815> out 1 <281816> # join
add in 2 <281601 281816> out 1 <281817>  # join source bit 26
const-mul-2 in 1 <281817> out 1 <281818> # join
add in 2 <281600 281818> out 1 <281819>  # join source bit 25
const-mul-2 in 1 <281819> out 1 <281820> # join
add in 2 <281599 281820> out 1 <281821>  # join source bit 24
const-mul-2 in 1 <281821> out 1 <281822> # join
add in 2 <281598 281822> out 1 <281823>  # join source bit 23
const-mul-2 in 1 <281823> out 1 <281824> # join
add in 2 <281597 281824> out 1 <281825>  # join source bit 22
const-mul-2 in 1 <281825> out 1 <281826> # join
add in 2 <281596 281826> out 1 <281827>  # join source bit 21
const-mul-2 in 1 <281827> out 1 <281828> # join
add in 2 <281595 281828> out 1 <281829>  # join source bit 20
const-mul-2 in 1 <281829> out 1 <281830> # join
add in 2 <281594 281830> out 1 <281831>  # join source bit 19
const-mul-2 in 1 <281831> out 1 <281832> # join
add in 2 <281593 281832> out 1 <281833>  # join source bit 18
const-mul-2 in 1 <281833> out 1 <281834> # join
add in 2 <281592 281834> out 1 <281835>  # join source bit 17
const-mul-2 in 1 <281835> out 1 <281836> # join
add in 2 <281591 281836> out 1 <281837>  # join source bit 16
const-mul-2 in 1 <281837> out 1 <281838> # join
add in 2 <281590 281838> out 1 <281839>  # join source bit 15
const-mul-2 in 1 <281839> out 1 <281840> # join
add in 2 <281589 281840> out 1 <281841>  # join source bit 14
const-mul-2 in 1 <281841> out 1 <281842> # join
add in 2 <281588 281842> out 1 <281843>  # join source bit 13
const-mul-2 in 1 <281843> out 1 <281844> # join
add in 2 <281587 281844> out 1 <281845>  # join source bit 12
const-mul-2 in 1 <281845> out 1 <281846> # join
add in 2 <281586 281846> out 1 <281847>  # join source bit 11
const-mul-2 in 1 <281847> out 1 <281848> # join
add in 2 <281585 281848> out 1 <281849>  # join source bit 10
const-mul-2 in 1 <281849> out 1 <281850> # join
add in 2 <281584 281850> out 1 <281851>  # join source bit 9
const-mul-2 in 1 <281851> out 1 <281852> # join
add in 2 <281583 281852> out 1 <281853>  # join source bit 8
const-mul-2 in 1 <281853> out 1 <281854> # join
add in 2 <281582 281854> out 1 <281855>  # join source bit 7
const-mul-2 in 1 <281855> out 1 <281856> # join
add in 2 <281581 281856> out 1 <281857>  # join source bit 6
const-mul-2 in 1 <281857> out 1 <281858> # join
add in 2 <281580 281858> out 1 <281859>  # join source bit 5
const-mul-2 in 1 <281859> out 1 <281860> # join
add in 2 <281579 281860> out 1 <281861>  # join source bit 4
const-mul-2 in 1 <281861> out 1 <281862> # join
add in 2 <281578 281862> out 1 <281863>  # join source bit 3
const-mul-2 in 1 <281863> out 1 <281864> # join
add in 2 <281577 281864> out 1 <281865>  # join source bit 2
const-mul-2 in 1 <281865> out 1 <281866> # join
add in 2 <281576 281866> out 1 <281867>  # join source bit 1
const-mul-2 in 1 <281867> out 1 <281868> # join
add in 2 <281575 281868> out 1 <281869>  # join source bit 0
add in 2 <281869 281869> out 1 <281870>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <280999> out 1 <281871> # multiply-by-constant 4294967295
add in 2 <281573 281871> out 1 <281872>  # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <281872> out 265 <281873 281874 281875 281876 281877 281878 281879 281880 281881 281882 281883 281884 281885 281886 281887 281888 281889 281890 281891 281892 281893 281894 281895 281896 281897 281898 281899 281900 281901 281902 281903 281904 281905 281906 281907 281908 281909 281910 281911 281912 281913 281914 281915 281916 281917 281918 281919 281920 281921 281922 281923 281924 281925 281926 281927 281928 281929 281930 281931 281932 281933 281934 281935 281936 281937 281938 281939 281940 281941 281942 281943 281944 281945 281946 281947 281948 281949 281950 281951 281952 281953 281954 281955 281956 281957 281958 281959 281960 281961 281962 281963 281964 281965 281966 281967 281968 281969 281970 281971 281972 281973 281974 281975 281976 281977 281978 281979 281980 281981 281982 281983 281984 281985 281986 281987 281988 281989 281990 281991 281992 281993 281994 281995 281996 281997 281998 281999 282000 282001 282002 282003 282004 282005 282006 282007 282008 282009 282010 282011 282012 282013 282014 282015 282016 282017 282018 282019 282020 282021 282022 282023 282024 282025 282026 282027 282028 282029 282030 282031 282032 282033 282034 282035 282036 282037 282038 282039 282040 282041 282042 282043 282044 282045 282046 282047 282048 282049 282050 282051 282052 282053 282054 282055 282056 282057 282058 282059 282060 282061 282062 282063 282064 282065 282066 282067 282068 282069 282070 282071 282072 282073 282074 282075 282076 282077 282078 282079 282080 282081 282082 282083 282084 282085 282086 282087 282088 282089 282090 282091 282092 282093 282094 282095 282096 282097 282098 282099 282100 282101 282102 282103 282104 282105 282106 282107 282108 282109 282110 282111 282112 282113 282114 282115 282116 282117 282118 282119 282120 282121 282122 282123 282124 282125 282126 282127 282128 282129 282130 282131 282132 282133 282134 282135 282136 282137> # SplitBus
mul in 2 <281904 281870> out 1 <282138>  # cond trueterm
const-mul-neg-1 in 1 <281904> out 1 <282139> # cond minuscond
add in 2 <100 282139> out 1 <282140>     # cond negcond
mul in 2 <282140 280999> out 1 <282141>  # cond falseterm
add in 2 <282138 282141> out 1 <282142>  # cond result
mul in 2 <280827 280791> out 1 <282143>  # cond trueterm
const-mul-neg-1 in 1 <280827> out 1 <282144> # cond minuscond
add in 2 <100 282144> out 1 <282145>     # cond negcond
mul in 2 <282145 280788> out 1 <282146>  # cond falseterm
add in 2 <282143 282146> out 1 <282147>  # cond result
mul in 2 <280683 280647> out 1 <282148>  # cond trueterm
const-mul-neg-1 in 1 <280683> out 1 <282149> # cond minuscond
add in 2 <100 282149> out 1 <282150>     # cond negcond
mul in 2 <282150 280644> out 1 <282151>  # cond falseterm
add in 2 <282148 282151> out 1 <282152>  # cond result
const-mul-ffffffff in 1 <282152> out 1 <282153> # multiply-by-constant 4294967295
add in 2 <282152 282147> out 1 <282154>  # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
add in 2 <282154 282153> out 1 <282155>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <282155> out 1 <282156> # multiply-by-constant 4294967295
add in 2 <282154 282156> out 1 <282157>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <282152> out 1 <282158> # multiply-by-constant 4294967295
add in 2 <282147 282158> out 1 <282159>  # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <282159> out 200 <282160 282161 282162 282163 282164 282165 282166 282167 282168 282169 282170 282171 282172 282173 282174 282175 282176 282177 282178 282179 282180 282181 282182 282183 282184 282185 282186 282187 282188 282189 282190 282191 282192 282193 282194 282195 282196 282197 282198 282199 282200 282201 282202 282203 282204 282205 282206 282207 282208 282209 282210 282211 282212 282213 282214 282215 282216 282217 282218 282219 282220 282221 282222 282223 282224 282225 282226 282227 282228 282229 282230 282231 282232 282233 282234 282235 282236 282237 282238 282239 282240 282241 282242 282243 282244 282245 282246 282247 282248 282249 282250 282251 282252 282253 282254 282255 282256 282257 282258 282259 282260 282261 282262 282263 282264 282265 282266 282267 282268 282269 282270 282271 282272 282273 282274 282275 282276 282277 282278 282279 282280 282281 282282 282283 282284 282285 282286 282287 282288 282289 282290 282291 282292 282293 282294 282295 282296 282297 282298 282299 282300 282301 282302 282303 282304 282305 282306 282307 282308 282309 282310 282311 282312 282313 282314 282315 282316 282317 282318 282319 282320 282321 282322 282323 282324 282325 282326 282327 282328 282329 282330 282331 282332 282333 282334 282335 282336 282337 282338 282339 282340 282341 282342 282343 282344 282345 282346 282347 282348 282349 282350 282351 282352 282353 282354 282355 282356 282357 282358 282359> # SplitBus
mul in 2 <282191 282157> out 1 <282360>  # cond trueterm
const-mul-neg-1 in 1 <282191> out 1 <282361> # cond minuscond
add in 2 <100 282361> out 1 <282362>     # cond negcond
mul in 2 <282362 282147> out 1 <282363>  # cond falseterm
add in 2 <282360 282363> out 1 <282364>  # cond result
const-mul-ffffffff in 1 <282364> out 1 <282365> # multiply-by-constant 4294967295
add in 2 <282364 282142> out 1 <282366>  # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
split in 1 <282366> out 235 <282367 282368 282369 282370 282371 282372 282373 282374 282375 282376 282377 282378 282379 282380 282381 282382 282383 282384 282385 282386 282387 282388 282389 282390 282391 282392 282393 282394 282395 282396 282397 282398 282399 282400 282401 282402 282403 282404 282405 282406 282407 282408 282409 282410 282411 282412 282413 282414 282415 282416 282417 282418 282419 282420 282421 282422 282423 282424 282425 282426 282427 282428 282429 282430 282431 282432 282433 282434 282435 282436 282437 282438 282439 282440 282441 282442 282443 282444 282445 282446 282447 282448 282449 282450 282451 282452 282453 282454 282455 282456 282457 282458 282459 282460 282461 282462 282463 282464 282465 282466 282467 282468 282469 282470 282471 282472 282473 282474 282475 282476 282477 282478 282479 282480 282481 282482 282483 282484 282485 282486 282487 282488 282489 282490 282491 282492 282493 282494 282495 282496 282497 282498 282499 282500 282501 282502 282503 282504 282505 282506 282507 282508 282509 282510 282511 282512 282513 282514 282515 282516 282517 282518 282519 282520 282521 282522 282523 282524 282525 282526 282527 282528 282529 282530 282531 282532 282533 282534 282535 282536 282537 282538 282539 282540 282541 282542 282543 282544 282545 282546 282547 282548 282549 282550 282551 282552 282553 282554 282555 282556 282557 282558 282559 282560 282561 282562 282563 282564 282565 282566 282567 282568 282569 282570 282571 282572 282573 282574 282575 282576 282577 282578 282579 282580 282581 282582 282583 282584 282585 282586 282587 282588 282589 282590 282591 282592 282593 282594 282595 282596 282597 282598 282599 282600 282601> # SplitBus
const-mul-2 in 1 <282398> out 1 <282602> # join source bit 31
add in 2 <282397 282602> out 1 <282603>  # join source bit 30
const-mul-2 in 1 <282603> out 1 <282604> # join
add in 2 <282396 282604> out 1 <282605>  # join source bit 29
const-mul-2 in 1 <282605> out 1 <282606> # join
add in 2 <282395 282606> out 1 <282607>  # join source bit 28
const-mul-2 in 1 <282607> out 1 <282608> # join
add in 2 <282394 282608> out 1 <282609>  # join source bit 27
const-mul-2 in 1 <282609> out 1 <282610> # join
add in 2 <282393 282610> out 1 <282611>  # join source bit 26
const-mul-2 in 1 <282611> out 1 <282612> # join
add in 2 <282392 282612> out 1 <282613>  # join source bit 25
const-mul-2 in 1 <282613> out 1 <282614> # join
add in 2 <282391 282614> out 1 <282615>  # join source bit 24
const-mul-2 in 1 <282615> out 1 <282616> # join
add in 2 <282390 282616> out 1 <282617>  # join source bit 23
const-mul-2 in 1 <282617> out 1 <282618> # join
add in 2 <282389 282618> out 1 <282619>  # join source bit 22
const-mul-2 in 1 <282619> out 1 <282620> # join
add in 2 <282388 282620> out 1 <282621>  # join source bit 21
const-mul-2 in 1 <282621> out 1 <282622> # join
add in 2 <282387 282622> out 1 <282623>  # join source bit 20
const-mul-2 in 1 <282623> out 1 <282624> # join
add in 2 <282386 282624> out 1 <282625>  # join source bit 19
const-mul-2 in 1 <282625> out 1 <282626> # join
add in 2 <282385 282626> out 1 <282627>  # join source bit 18
const-mul-2 in 1 <282627> out 1 <282628> # join
add in 2 <282384 282628> out 1 <282629>  # join source bit 17
const-mul-2 in 1 <282629> out 1 <282630> # join
add in 2 <282383 282630> out 1 <282631>  # join source bit 16
const-mul-2 in 1 <282631> out 1 <282632> # join
add in 2 <282382 282632> out 1 <282633>  # join source bit 15
const-mul-2 in 1 <282633> out 1 <282634> # join
add in 2 <282381 282634> out 1 <282635>  # join source bit 14
const-mul-2 in 1 <282635> out 1 <282636> # join
add in 2 <282380 282636> out 1 <282637>  # join source bit 13
const-mul-2 in 1 <282637> out 1 <282638> # join
add in 2 <282379 282638> out 1 <282639>  # join source bit 12
const-mul-2 in 1 <282639> out 1 <282640> # join
add in 2 <282378 282640> out 1 <282641>  # join source bit 11
const-mul-2 in 1 <282641> out 1 <282642> # join
add in 2 <282377 282642> out 1 <282643>  # join source bit 10
const-mul-2 in 1 <282643> out 1 <282644> # join
add in 2 <282376 282644> out 1 <282645>  # join source bit 9
const-mul-2 in 1 <282645> out 1 <282646> # join
add in 2 <282375 282646> out 1 <282647>  # join source bit 8
const-mul-2 in 1 <282647> out 1 <282648> # join
add in 2 <282374 282648> out 1 <282649>  # join source bit 7
const-mul-2 in 1 <282649> out 1 <282650> # join
add in 2 <282373 282650> out 1 <282651>  # join source bit 6
const-mul-2 in 1 <282651> out 1 <282652> # join
add in 2 <282372 282652> out 1 <282653>  # join source bit 5
const-mul-2 in 1 <282653> out 1 <282654> # join
add in 2 <282371 282654> out 1 <282655>  # join source bit 4
const-mul-2 in 1 <282655> out 1 <282656> # join
add in 2 <282370 282656> out 1 <282657>  # join source bit 3
const-mul-2 in 1 <282657> out 1 <282658> # join
add in 2 <282369 282658> out 1 <282659>  # join source bit 2
const-mul-2 in 1 <282659> out 1 <282660> # join
add in 2 <282368 282660> out 1 <282661>  # join source bit 1
const-mul-2 in 1 <282661> out 1 <282662> # join
add in 2 <282367 282662> out 1 <282663>  # join source bit 0
add in 2 <282663 282663> out 1 <282664>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <282664> out 1 <282665> # multiply-by-constant 4294967295
add in 2 <282366 282665> out 1 <282666>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <282364> out 1 <282667> # multiply-by-constant 4294967295
add in 2 <282142 282667> out 1 <282668>  # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <282668> out 267 <282669 282670 282671 282672 282673 282674 282675 282676 282677 282678 282679 282680 282681 282682 282683 282684 282685 282686 282687 282688 282689 282690 282691 282692 282693 282694 282695 282696 282697 282698 282699 282700 282701 282702 282703 282704 282705 282706 282707 282708 282709 282710 282711 282712 282713 282714 282715 282716 282717 282718 282719 282720 282721 282722 282723 282724 282725 282726 282727 282728 282729 282730 282731 282732 282733 282734 282735 282736 282737 282738 282739 282740 282741 282742 282743 282744 282745 282746 282747 282748 282749 282750 282751 282752 282753 282754 282755 282756 282757 282758 282759 282760 282761 282762 282763 282764 282765 282766 282767 282768 282769 282770 282771 282772 282773 282774 282775 282776 282777 282778 282779 282780 282781 282782 282783 282784 282785 282786 282787 282788 282789 282790 282791 282792 282793 282794 282795 282796 282797 282798 282799 282800 282801 282802 282803 282804 282805 282806 282807 282808 282809 282810 282811 282812 282813 282814 282815 282816 282817 282818 282819 282820 282821 282822 282823 282824 282825 282826 282827 282828 282829 282830 282831 282832 282833 282834 282835 282836 282837 282838 282839 282840 282841 282842 282843 282844 282845 282846 282847 282848 282849 282850 282851 282852 282853 282854 282855 282856 282857 282858 282859 282860 282861 282862 282863 282864 282865 282866 282867 282868 282869 282870 282871 282872 282873 282874 282875 282876 282877 282878 282879 282880 282881 282882 282883 282884 282885 282886 282887 282888 282889 282890 282891 282892 282893 282894 282895 282896 282897 282898 282899 282900 282901 282902 282903 282904 282905 282906 282907 282908 282909 282910 282911 282912 282913 282914 282915 282916 282917 282918 282919 282920 282921 282922 282923 282924 282925 282926 282927 282928 282929 282930 282931 282932 282933 282934 282935> # SplitBus
mul in 2 <282700 282666> out 1 <282936>  # cond trueterm
const-mul-neg-1 in 1 <282700> out 1 <282937> # cond minuscond
add in 2 <100 282937> out 1 <282938>     # cond negcond
mul in 2 <282938 282142> out 1 <282939>  # cond falseterm
add in 2 <282936 282939> out 1 <282940>  # cond result
add in 2 <282940 104> out 1 <282941>     # ArithBusReq.AddReq(DFG.Conditional,DFG.Constant)
const-mul-ffffffff in 1 <88> out 1 <282942> # multiply-by-constant 4294967295
add in 2 <282941 282942> out 1 <282943>  # 'CmpLT DFG.Add - DFG.Input'
split in 1 <282943> out 238 <282944 282945 282946 282947 282948 282949 282950 282951 282952 282953 282954 282955 282956 282957 282958 282959 282960 282961 282962 282963 282964 282965 282966 282967 282968 282969 282970 282971 282972 282973 282974 282975 282976 282977 282978 282979 282980 282981 282982 282983 282984 282985 282986 282987 282988 282989 282990 282991 282992 282993 282994 282995 282996 282997 282998 282999 283000 283001 283002 283003 283004 283005 283006 283007 283008 283009 283010 283011 283012 283013 283014 283015 283016 283017 283018 283019 283020 283021 283022 283023 283024 283025 283026 283027 283028 283029 283030 283031 283032 283033 283034 283035 283036 283037 283038 283039 283040 283041 283042 283043 283044 283045 283046 283047 283048 283049 283050 283051 283052 283053 283054 283055 283056 283057 283058 283059 283060 283061 283062 283063 283064 283065 283066 283067 283068 283069 283070 283071 283072 283073 283074 283075 283076 283077 283078 283079 283080 283081 283082 283083 283084 283085 283086 283087 283088 283089 283090 283091 283092 283093 283094 283095 283096 283097 283098 283099 283100 283101 283102 283103 283104 283105 283106 283107 283108 283109 283110 283111 283112 283113 283114 283115 283116 283117 283118 283119 283120 283121 283122 283123 283124 283125 283126 283127 283128 283129 283130 283131 283132 283133 283134 283135 283136 283137 283138 283139 283140 283141 283142 283143 283144 283145 283146 283147 283148 283149 283150 283151 283152 283153 283154 283155 283156 283157 283158 283159 283160 283161 283162 283163 283164 283165 283166 283167 283168 283169 283170 283171 283172 283173 283174 283175 283176 283177 283178 283179 283180 283181> # SplitBus
mul in 2 <282975 103> out 1 <283182>     # cond trueterm
const-mul-neg-1 in 1 <282975> out 1 <283183> # cond minuscond
add in 2 <100 283183> out 1 <283184>     # cond negcond
mul in 2 <283184 102> out 1 <283185>     # cond falseterm
add in 2 <283182 283185> out 1 <283186>  # cond result
add in 2 <282940 3084> out 1 <283187>    # ArithBusReq.AddReq(DFG.Conditional,DFG.Negate)
const-mul-ffffffff in 1 <283187> out 1 <283188> # multiply-by-constant 4294967295
add in 2 <88 283188> out 1 <283189>      # 'CmpLT DFG.Input - DFG.Subtract'
split in 1 <283189> out 270 <283190 283191 283192 283193 283194 283195 283196 283197 283198 283199 283200 283201 283202 283203 283204 283205 283206 283207 283208 283209 283210 283211 283212 283213 283214 283215 283216 283217 283218 283219 283220 283221 283222 283223 283224 283225 283226 283227 283228 283229 283230 283231 283232 283233 283234 283235 283236 283237 283238 283239 283240 283241 283242 283243 283244 283245 283246 283247 283248 283249 283250 283251 283252 283253 283254 283255 283256 283257 283258 283259 283260 283261 283262 283263 283264 283265 283266 283267 283268 283269 283270 283271 283272 283273 283274 283275 283276 283277 283278 283279 283280 283281 283282 283283 283284 283285 283286 283287 283288 283289 283290 283291 283292 283293 283294 283295 283296 283297 283298 283299 283300 283301 283302 283303 283304 283305 283306 283307 283308 283309 283310 283311 283312 283313 283314 283315 283316 283317 283318 283319 283320 283321 283322 283323 283324 283325 283326 283327 283328 283329 283330 283331 283332 283333 283334 283335 283336 283337 283338 283339 283340 283341 283342 283343 283344 283345 283346 283347 283348 283349 283350 283351 283352 283353 283354 283355 283356 283357 283358 283359 283360 283361 283362 283363 283364 283365 283366 283367 283368 283369 283370 283371 283372 283373 283374 283375 283376 283377 283378 283379 283380 283381 283382 283383 283384 283385 283386 283387 283388 283389 283390 283391 283392 283393 283394 283395 283396 283397 283398 283399 283400 283401 283402 283403 283404 283405 283406 283407 283408 283409 283410 283411 283412 283413 283414 283415 283416 283417 283418 283419 283420 283421 283422 283423 283424 283425 283426 283427 283428 283429 283430 283431 283432 283433 283434 283435 283436 283437 283438 283439 283440 283441 283442 283443 283444 283445 283446 283447 283448 283449 283450 283451 283452 283453 283454 283455 283456 283457 283458 283459> # SplitBus
mul in 2 <283221 103> out 1 <283460>     # cond trueterm
const-mul-neg-1 in 1 <283221> out 1 <283461> # cond minuscond
add in 2 <100 283461> out 1 <283462>     # cond negcond
mul in 2 <283462 283186> out 1 <283463>  # cond falseterm
add in 2 <283460 283463> out 1 <283464>  # cond result
const-mul-ffffffff in 1 <87> out 1 <283465> # multiply-by-constant 4294967295
add in 2 <87 88> out 1 <283466>          # ArithBusReq.AddReq(DFG.Input,DFG.Input)
add in 2 <283466 283465> out 1 <283467>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <283467> out 1 <283468> # multiply-by-constant 4294967295
add in 2 <283466 283468> out 1 <283469>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <87> out 1 <283470> # multiply-by-constant 4294967295
add in 2 <88 283470> out 1 <283471>      # 'CmpLT DFG.Input - DFG.Input'
split in 1 <283471> out 65 <283472 283473 283474 283475 283476 283477 283478 283479 283480 283481 283482 283483 283484 283485 283486 283487 283488 283489 283490 283491 283492 283493 283494 283495 283496 283497 283498 283499 283500 283501 283502 283503 283504 283505 283506 283507 283508 283509 283510 283511 283512 283513 283514 283515 283516 283517 283518 283519 283520 283521 283522 283523 283524 283525 283526 283527 283528 283529 283530 283531 283532 283533 283534 283535 283536> # SplitBus
mul in 2 <283503 283469> out 1 <283537>  # cond trueterm
const-mul-neg-1 in 1 <283503> out 1 <283538> # cond minuscond
add in 2 <100 283538> out 1 <283539>     # cond negcond
mul in 2 <283539 88> out 1 <283540>      # cond falseterm
add in 2 <283537 283540> out 1 <283541>  # cond result
const-mul-ffffffff in 1 <283541> out 1 <283542> # multiply-by-constant 4294967295
add in 2 <283541 89> out 1 <283543>      # ArithBusReq.AddReq(DFG.Conditional,DFG.Input)
add in 2 <283543 283542> out 1 <283544>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <283544> out 1 <283545> # multiply-by-constant 4294967295
add in 2 <283543 283545> out 1 <283546>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <283541> out 1 <283547> # multiply-by-constant 4294967295
add in 2 <89 283547> out 1 <283548>      # 'CmpLT DFG.Input - DFG.Conditional'
split in 1 <283548> out 131 <283549 283550 283551 283552 283553 283554 283555 283556 283557 283558 283559 283560 283561 283562 283563 283564 283565 283566 283567 283568 283569 283570 283571 283572 283573 283574 283575 283576 283577 283578 283579 283580 283581 283582 283583 283584 283585 283586 283587 283588 283589 283590 283591 283592 283593 283594 283595 283596 283597 283598 283599 283600 283601 283602 283603 283604 283605 283606 283607 283608 283609 283610 283611 283612 283613 283614 283615 283616 283617 283618 283619 283620 283621 283622 283623 283624 283625 283626 283627 283628 283629 283630 283631 283632 283633 283634 283635 283636 283637 283638 283639 283640 283641 283642 283643 283644 283645 283646 283647 283648 283649 283650 283651 283652 283653 283654 283655 283656 283657 283658 283659 283660 283661 283662 283663 283664 283665 283666 283667 283668 283669 283670 283671 283672 283673 283674 283675 283676 283677 283678 283679> # SplitBus
mul in 2 <283580 283546> out 1 <283680>  # cond trueterm
const-mul-neg-1 in 1 <283580> out 1 <283681> # cond minuscond
add in 2 <100 283681> out 1 <283682>     # cond negcond
mul in 2 <283682 89> out 1 <283683>      # cond falseterm
add in 2 <283680 283683> out 1 <283684>  # cond result
const-mul-ffffffff in 1 <283684> out 1 <283685> # multiply-by-constant 4294967295
add in 2 <283684 90> out 1 <283686>      # ArithBusReq.AddReq(DFG.Conditional,DFG.Input)
add in 2 <283686 283685> out 1 <283687>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <283684> out 1 <283688> # multiply-by-constant 4294967295
add in 2 <90 283688> out 1 <283689>      # 'CmpLT DFG.Input - DFG.Conditional'
split in 1 <283689> out 197 <283690 283691 283692 283693 283694 283695 283696 283697 283698 283699 283700 283701 283702 283703 283704 283705 283706 283707 283708 283709 283710 283711 283712 283713 283714 283715 283716 283717 283718 283719 283720 283721 283722 283723 283724 283725 283726 283727 283728 283729 283730 283731 283732 283733 283734 283735 283736 283737 283738 283739 283740 283741 283742 283743 283744 283745 283746 283747 283748 283749 283750 283751 283752 283753 283754 283755 283756 283757 283758 283759 283760 283761 283762 283763 283764 283765 283766 283767 283768 283769 283770 283771 283772 283773 283774 283775 283776 283777 283778 283779 283780 283781 283782 283783 283784 283785 283786 283787 283788 283789 283790 283791 283792 283793 283794 283795 283796 283797 283798 283799 283800 283801 283802 283803 283804 283805 283806 283807 283808 283809 283810 283811 283812 283813 283814 283815 283816 283817 283818 283819 283820 283821 283822 283823 283824 283825 283826 283827 283828 283829 283830 283831 283832 283833 283834 283835 283836 283837 283838 283839 283840 283841 283842 283843 283844 283845 283846 283847 283848 283849 283850 283851 283852 283853 283854 283855 283856 283857 283858 283859 283860 283861 283862 283863 283864 283865 283866 283867 283868 283869 283870 283871 283872 283873 283874 283875 283876 283877 283878 283879 283880 283881 283882 283883 283884 283885 283886> # SplitBus
mul in 2 <283721 283687> out 1 <283887>  # cond trueterm
const-mul-neg-1 in 1 <283721> out 1 <283888> # cond minuscond
add in 2 <100 283888> out 1 <283889>     # cond negcond
mul in 2 <283889 283684> out 1 <283890>  # cond falseterm
add in 2 <283887 283890> out 1 <283891>  # cond result
mul in 2 <283580 283544> out 1 <283892>  # cond trueterm
const-mul-neg-1 in 1 <283580> out 1 <283893> # cond minuscond
add in 2 <100 283893> out 1 <283894>     # cond negcond
mul in 2 <283894 283541> out 1 <283895>  # cond falseterm
add in 2 <283892 283895> out 1 <283896>  # cond result
mul in 2 <283503 283467> out 1 <283897>  # cond trueterm
const-mul-neg-1 in 1 <283503> out 1 <283898> # cond minuscond
add in 2 <100 283898> out 1 <283899>     # cond negcond
mul in 2 <283899 87> out 1 <283900>      # cond falseterm
add in 2 <283897 283900> out 1 <283901>  # cond result
const-mul-ffffffff in 1 <283901> out 1 <283902> # multiply-by-constant 4294967295
add in 2 <283901 283896> out 1 <283903>  # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
add in 2 <283903 283902> out 1 <283904>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <283904> out 1 <283905> # multiply-by-constant 4294967295
add in 2 <283903 283905> out 1 <283906>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <283901> out 1 <283907> # multiply-by-constant 4294967295
add in 2 <283896 283907> out 1 <283908>  # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <283908> out 132 <283909 283910 283911 283912 283913 283914 283915 283916 283917 283918 283919 283920 283921 283922 283923 283924 283925 283926 283927 283928 283929 283930 283931 283932 283933 283934 283935 283936 283937 283938 283939 283940 283941 283942 283943 283944 283945 283946 283947 283948 283949 283950 283951 283952 283953 283954 283955 283956 283957 283958 283959 283960 283961 283962 283963 283964 283965 283966 283967 283968 283969 283970 283971 283972 283973 283974 283975 283976 283977 283978 283979 283980 283981 283982 283983 283984 283985 283986 283987 283988 283989 283990 283991 283992 283993 283994 283995 283996 283997 283998 283999 284000 284001 284002 284003 284004 284005 284006 284007 284008 284009 284010 284011 284012 284013 284014 284015 284016 284017 284018 284019 284020 284021 284022 284023 284024 284025 284026 284027 284028 284029 284030 284031 284032 284033 284034 284035 284036 284037 284038 284039 284040> # SplitBus
mul in 2 <283940 283906> out 1 <284041>  # cond trueterm
const-mul-neg-1 in 1 <283940> out 1 <284042> # cond minuscond
add in 2 <100 284042> out 1 <284043>     # cond negcond
mul in 2 <284043 283896> out 1 <284044>  # cond falseterm
add in 2 <284041 284044> out 1 <284045>  # cond result
const-mul-ffffffff in 1 <284045> out 1 <284046> # multiply-by-constant 4294967295
add in 2 <284045 283891> out 1 <284047>  # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
add in 2 <284047 284046> out 1 <284048>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <284048> out 1 <284049> # multiply-by-constant 4294967295
add in 2 <284047 284049> out 1 <284050>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <284045> out 1 <284051> # multiply-by-constant 4294967295
add in 2 <283891 284051> out 1 <284052>  # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <284052> out 199 <284053 284054 284055 284056 284057 284058 284059 284060 284061 284062 284063 284064 284065 284066 284067 284068 284069 284070 284071 284072 284073 284074 284075 284076 284077 284078 284079 284080 284081 284082 284083 284084 284085 284086 284087 284088 284089 284090 284091 284092 284093 284094 284095 284096 284097 284098 284099 284100 284101 284102 284103 284104 284105 284106 284107 284108 284109 284110 284111 284112 284113 284114 284115 284116 284117 284118 284119 284120 284121 284122 284123 284124 284125 284126 284127 284128 284129 284130 284131 284132 284133 284134 284135 284136 284137 284138 284139 284140 284141 284142 284143 284144 284145 284146 284147 284148 284149 284150 284151 284152 284153 284154 284155 284156 284157 284158 284159 284160 284161 284162 284163 284164 284165 284166 284167 284168 284169 284170 284171 284172 284173 284174 284175 284176 284177 284178 284179 284180 284181 284182 284183 284184 284185 284186 284187 284188 284189 284190 284191 284192 284193 284194 284195 284196 284197 284198 284199 284200 284201 284202 284203 284204 284205 284206 284207 284208 284209 284210 284211 284212 284213 284214 284215 284216 284217 284218 284219 284220 284221 284222 284223 284224 284225 284226 284227 284228 284229 284230 284231 284232 284233 284234 284235 284236 284237 284238 284239 284240 284241 284242 284243 284244 284245 284246 284247 284248 284249 284250 284251> # SplitBus
mul in 2 <284084 284050> out 1 <284252>  # cond trueterm
const-mul-neg-1 in 1 <284084> out 1 <284253> # cond minuscond
add in 2 <100 284253> out 1 <284254>     # cond negcond
mul in 2 <284254 283891> out 1 <284255>  # cond falseterm
add in 2 <284252 284255> out 1 <284256>  # cond result
const-mul-ffffffff in 1 <284256> out 1 <284257> # multiply-by-constant 4294967295
const-mul-ffffffff in 1 <283687> out 1 <284258> # multiply-by-constant 4294967295
add in 2 <283686 284258> out 1 <284259>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
mul in 2 <283721 284259> out 1 <284260>  # cond trueterm
const-mul-neg-1 in 1 <283721> out 1 <284261> # cond minuscond
add in 2 <100 284261> out 1 <284262>     # cond negcond
mul in 2 <284262 90> out 1 <284263>      # cond falseterm
add in 2 <284260 284263> out 1 <284264>  # cond result
const-mul-ffffffff in 1 <284264> out 1 <284265> # multiply-by-constant 4294967295
add in 2 <284264 91> out 1 <284266>      # ArithBusReq.AddReq(DFG.Conditional,DFG.Input)
split in 1 <284266> out 231 <284267 284268 284269 284270 284271 284272 284273 284274 284275 284276 284277 284278 284279 284280 284281 284282 284283 284284 284285 284286 284287 284288 284289 284290 284291 284292 284293 284294 284295 284296 284297 284298 284299 284300 284301 284302 284303 284304 284305 284306 284307 284308 284309 284310 284311 284312 284313 284314 284315 284316 284317 284318 284319 284320 284321 284322 284323 284324 284325 284326 284327 284328 284329 284330 284331 284332 284333 284334 284335 284336 284337 284338 284339 284340 284341 284342 284343 284344 284345 284346 284347 284348 284349 284350 284351 284352 284353 284354 284355 284356 284357 284358 284359 284360 284361 284362 284363 284364 284365 284366 284367 284368 284369 284370 284371 284372 284373 284374 284375 284376 284377 284378 284379 284380 284381 284382 284383 284384 284385 284386 284387 284388 284389 284390 284391 284392 284393 284394 284395 284396 284397 284398 284399 284400 284401 284402 284403 284404 284405 284406 284407 284408 284409 284410 284411 284412 284413 284414 284415 284416 284417 284418 284419 284420 284421 284422 284423 284424 284425 284426 284427 284428 284429 284430 284431 284432 284433 284434 284435 284436 284437 284438 284439 284440 284441 284442 284443 284444 284445 284446 284447 284448 284449 284450 284451 284452 284453 284454 284455 284456 284457 284458 284459 284460 284461 284462 284463 284464 284465 284466 284467 284468 284469 284470 284471 284472 284473 284474 284475 284476 284477 284478 284479 284480 284481 284482 284483 284484 284485 284486 284487 284488 284489 284490 284491 284492 284493 284494 284495 284496 284497> # SplitBus
const-mul-2 in 1 <284298> out 1 <284498> # join source bit 31
add in 2 <284297 284498> out 1 <284499>  # join source bit 30
const-mul-2 in 1 <284499> out 1 <284500> # join
add in 2 <284296 284500> out 1 <284501>  # join source bit 29
const-mul-2 in 1 <284501> out 1 <284502> # join
add in 2 <284295 284502> out 1 <284503>  # join source bit 28
const-mul-2 in 1 <284503> out 1 <284504> # join
add in 2 <284294 284504> out 1 <284505>  # join source bit 27
const-mul-2 in 1 <284505> out 1 <284506> # join
add in 2 <284293 284506> out 1 <284507>  # join source bit 26
const-mul-2 in 1 <284507> out 1 <284508> # join
add in 2 <284292 284508> out 1 <284509>  # join source bit 25
const-mul-2 in 1 <284509> out 1 <284510> # join
add in 2 <284291 284510> out 1 <284511>  # join source bit 24
const-mul-2 in 1 <284511> out 1 <284512> # join
add in 2 <284290 284512> out 1 <284513>  # join source bit 23
const-mul-2 in 1 <284513> out 1 <284514> # join
add in 2 <284289 284514> out 1 <284515>  # join source bit 22
const-mul-2 in 1 <284515> out 1 <284516> # join
add in 2 <284288 284516> out 1 <284517>  # join source bit 21
const-mul-2 in 1 <284517> out 1 <284518> # join
add in 2 <284287 284518> out 1 <284519>  # join source bit 20
const-mul-2 in 1 <284519> out 1 <284520> # join
add in 2 <284286 284520> out 1 <284521>  # join source bit 19
const-mul-2 in 1 <284521> out 1 <284522> # join
add in 2 <284285 284522> out 1 <284523>  # join source bit 18
const-mul-2 in 1 <284523> out 1 <284524> # join
add in 2 <284284 284524> out 1 <284525>  # join source bit 17
const-mul-2 in 1 <284525> out 1 <284526> # join
add in 2 <284283 284526> out 1 <284527>  # join source bit 16
const-mul-2 in 1 <284527> out 1 <284528> # join
add in 2 <284282 284528> out 1 <284529>  # join source bit 15
const-mul-2 in 1 <284529> out 1 <284530> # join
add in 2 <284281 284530> out 1 <284531>  # join source bit 14
const-mul-2 in 1 <284531> out 1 <284532> # join
add in 2 <284280 284532> out 1 <284533>  # join source bit 13
const-mul-2 in 1 <284533> out 1 <284534> # join
add in 2 <284279 284534> out 1 <284535>  # join source bit 12
const-mul-2 in 1 <284535> out 1 <284536> # join
add in 2 <284278 284536> out 1 <284537>  # join source bit 11
const-mul-2 in 1 <284537> out 1 <284538> # join
add in 2 <284277 284538> out 1 <284539>  # join source bit 10
const-mul-2 in 1 <284539> out 1 <284540> # join
add in 2 <284276 284540> out 1 <284541>  # join source bit 9
const-mul-2 in 1 <284541> out 1 <284542> # join
add in 2 <284275 284542> out 1 <284543>  # join source bit 8
const-mul-2 in 1 <284543> out 1 <284544> # join
add in 2 <284274 284544> out 1 <284545>  # join source bit 7
const-mul-2 in 1 <284545> out 1 <284546> # join
add in 2 <284273 284546> out 1 <284547>  # join source bit 6
const-mul-2 in 1 <284547> out 1 <284548> # join
add in 2 <284272 284548> out 1 <284549>  # join source bit 5
const-mul-2 in 1 <284549> out 1 <284550> # join
add in 2 <284271 284550> out 1 <284551>  # join source bit 4
const-mul-2 in 1 <284551> out 1 <284552> # join
add in 2 <284270 284552> out 1 <284553>  # join source bit 3
const-mul-2 in 1 <284553> out 1 <284554> # join
add in 2 <284269 284554> out 1 <284555>  # join source bit 2
const-mul-2 in 1 <284555> out 1 <284556> # join
add in 2 <284268 284556> out 1 <284557>  # join source bit 1
const-mul-2 in 1 <284557> out 1 <284558> # join
add in 2 <284267 284558> out 1 <284559>  # join source bit 0
add in 2 <284559 284559> out 1 <284560>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <284264> out 1 <284561> # multiply-by-constant 4294967295
add in 2 <91 284561> out 1 <284562>      # 'CmpLT DFG.Input - DFG.Conditional'
split in 1 <284562> out 263 <284563 284564 284565 284566 284567 284568 284569 284570 284571 284572 284573 284574 284575 284576 284577 284578 284579 284580 284581 284582 284583 284584 284585 284586 284587 284588 284589 284590 284591 284592 284593 284594 284595 284596 284597 284598 284599 284600 284601 284602 284603 284604 284605 284606 284607 284608 284609 284610 284611 284612 284613 284614 284615 284616 284617 284618 284619 284620 284621 284622 284623 284624 284625 284626 284627 284628 284629 284630 284631 284632 284633 284634 284635 284636 284637 284638 284639 284640 284641 284642 284643 284644 284645 284646 284647 284648 284649 284650 284651 284652 284653 284654 284655 284656 284657 284658 284659 284660 284661 284662 284663 284664 284665 284666 284667 284668 284669 284670 284671 284672 284673 284674 284675 284676 284677 284678 284679 284680 284681 284682 284683 284684 284685 284686 284687 284688 284689 284690 284691 284692 284693 284694 284695 284696 284697 284698 284699 284700 284701 284702 284703 284704 284705 284706 284707 284708 284709 284710 284711 284712 284713 284714 284715 284716 284717 284718 284719 284720 284721 284722 284723 284724 284725 284726 284727 284728 284729 284730 284731 284732 284733 284734 284735 284736 284737 284738 284739 284740 284741 284742 284743 284744 284745 284746 284747 284748 284749 284750 284751 284752 284753 284754 284755 284756 284757 284758 284759 284760 284761 284762 284763 284764 284765 284766 284767 284768 284769 284770 284771 284772 284773 284774 284775 284776 284777 284778 284779 284780 284781 284782 284783 284784 284785 284786 284787 284788 284789 284790 284791 284792 284793 284794 284795 284796 284797 284798 284799 284800 284801 284802 284803 284804 284805 284806 284807 284808 284809 284810 284811 284812 284813 284814 284815 284816 284817 284818 284819 284820 284821 284822 284823 284824 284825> # SplitBus
mul in 2 <284594 284560> out 1 <284826>  # cond trueterm
const-mul-neg-1 in 1 <284594> out 1 <284827> # cond minuscond
add in 2 <100 284827> out 1 <284828>     # cond negcond
mul in 2 <284828 284264> out 1 <284829>  # cond falseterm
add in 2 <284826 284829> out 1 <284830>  # cond result
add in 2 <284256 284830> out 1 <284831>  # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
split in 1 <284831> outplitBus
const-mul-2 in 1 <284863> out 1 <285065> # join source bit 31
add in 2 <284862 285065> out 1 <285066>  # join source bit 30
const-mul-2 in 1 <285066> out 1 <285067> # join
add in 2 <284861 285067> out 1 <285068>  # join source bit 29
const-mul-2 in 1 <285068> out 1 <285069> # join
add in 2 <284860 285069> out 1 <285070>  # join source bit 28
const-mul-2 in 1 <285070> out 1 <285071> # join
add in 2 <284859 285071> out 1 <285072>  # join source bit 27
const-mul-2 in 1 <285072> out 1 <285073> # join
add in 2 <284858 285073> out 1 <285074>  # join source bit 26
const-mul-2 in 1 <285074> out 1 <285075> # join
add in 2 <284857 285075> out 1 <285076>  # join source bit 25
const-mul-2 in 1 <285076> out 1 <285077> # join
add in 2 <284856 285077> out 1 <285078>  # join source bit 24
const-mul-2 in 1 <285078> out 1 <285079> # join
add in 2 <284855 285079> out 1 <285080>  # join source bit 23
const-mul-2 in 1 <285080> out 1 <285081> # join
add in 2 <284854 285081> out 1 <285082>  # join source bit 22
const-mul-2 in 1 <285082> out 1 <285083> # join
add in 2 <284853 285083> out 1 <285084>  # join source bit 21
const-mul-2 in 1 <285084> out 1 <285085> # join
add in 2 <284852 285085> out 1 <285086>  # join source bit 20
const-mul-2 in 1 <285086> out 1 <285087> # join
add in 2 <284851 285087> out 1 <285088>  # join source bit 19
const-mul-2 in 1 <285088> out 1 <285089> # join
add in 2 <284850 285089> out 1 <285090>  # join source bit 18
const-mul-2 in 1 <285090> out 1 <285091> # join
add in 2 <284849 285091> out 1 <285092>  # join source bit 17
const-mul-2 in 1 <285092> out 1 <285093> # join
add in 2 <284848 285093> out 1 <285094>  # join source bit 16
const-mul-2 in 1 <285094> out 1 <285095> # join
add in 2 <284847 285095> out 1 <285096>  # join source bit 15
const-mul-2 in 1 <285096> out 1 <285097> # join
add in 2 <284846 285097> out 1 <285098>  # join source bit 14
const-mul-2 in 1 <285098> out 1 <285099> # join
add in 2 <284845 285099> out 1 <285100>  # join source bit 13
const-mul-2 in 1 <285100> out 1 <285101> # join
add in 2 <284844 285101> out 1 <285102>  # join source bit 12
const-mul-2 in 1 <285102> out 1 <285103> # join
add in 2 <284843 285103> out 1 <285104>  # join source bit 11
const-mul-2 in 1 <285104> out 1 <285105> # join
add in 2 <284842 285105> out 1 <285106>  # join source bit 10
const-mul-2 in 1 <285106> out 1 <285107> # join
add in 2 <284841 285107> out 1 <285108>  # join source bit 9
const-mul-2 in 1 <285108> out 1 <285109> # join
add in 2 <284840 285109> out 1 <285110>  # join source bit 8
const-mul-2 in 1 <285110> out 1 <285111> # join
add in 2 <284839 285111> out 1 <285112>  # join source bit 7
const-mul-2 in 1 <285112> out 1 <285113> # join
add in 2 <284838 285113> out 1 <285114>  # join source bit 6
const-mul-2 in 1 <285114> out 1 <285115> # join
add in 2 <284837 285115> out 1 <285116>  # join source bit 5
const-mul-2 in 1 <285116> out 1 <285117> # join
add in 2 <284836 285117> out 1 <285118>  # join source bit 4
const-mul-2 in 1 <285118> out 1 <285119> # join
add in 2 <284835 285119> out 1 <285120>  # join source bit 3
const-mul-2 in 1 <285120> out 1 <285121> # join
add in 2 <284834 285121> out 1 <285122>  # join source bit 2
const-mul-2 in 1 <285122> out 1 <285123> # join
add in 2 <284833 285123> out 1 <285124>  # join source bit 1
const-mul-2 in 1 <285124> out 1 <285125> # join
add in 2 <284832 285125> out 1 <285126>  # join source bit 0
add in 2 <285126 285126> out 1 <285127>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <284256> out 1 <285128> # multiply-by-constant 4294967295
add in 2 <284830 285128> out 1 <285129>  # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <285129> out 265 <285130 285131 285132 285133 285134 285135 285136 285137 285138 285139 285140 285141 285142 285143 285144 285145 285146 285147 285148 285149 285150 285151 285152 285153 285154 285155 285156 285157 285158 285159 285160 285161 285162 285163 285164 285165 285166 285167 285168 285169 285170 285171 285172 285173 285174 285175 285176 285177 285178 285179 285180 285181 285182 285183 285184 285185 285186 285187 285188 285189 285190 285191 285192 285193 285194 285195 285196 285197 285198 285199 285200 285201 285202 285203 285204 285205 285206 285207 285208 285209 285210 285211 285212 285213 285214 285215 285216 285217 285218 285219 285220 285221 285222 285223 285224 285225 285226 285227 285228 285229 285230 285231 285232 285233 285234 285235 285236 285237 285238 285239 285240 285241 285242 285243 285244 285245 285246 285247 285248 285249 285250 285251 285252 285253 285254 285255 285256 285257 285258 285259 285260 285261 285262 285263 285264 285265 285266 285267 285268 285269 285270 285271 285272 285273 285274 285275 285276 285277 285278 285279 285280 285281 285282 285283 285284 285285 285286 285287 285288 285289 285290 285291 285292 285293 285294 285295 285296 285297 285298 285299 285300 285301 285302 285303 285304 285305 285306 285307 285308 285309 285310 285311 285312 285313 285314 285315 285316 285317 285318 285319 285320 285321 285322 285323 285324 285325 285326 285327 285328 285329 285330 285331 285332 285333 285334 285335 285336 285337 285338 285339 285340 285341 285342 285343 285344 285345 285346 285347 285348 285349 285350 285351 285352 285353 285354 285355 285356 285357 285358 285359 285360 285361 285362 285363 285364 285365 285366 285367 285368 285369 285370 285371 285372 285373 285374 285375 285376 285377 285378 285379 285380 285381 285382 285383 285384 285385 285386 285387 285388 285389 285390 285391 285392 285393 285394> # SplitBus
mul in 2 <285161 285127> out 1 <285395>  # cond trueterm
const-mul-neg-1 in 1 <285161> out 1 <285396> # cond minuscond
add in 2 <100 285396> out 1 <285397>     # cond negcond
mul in 2 <285397 284256> out 1 <285398>  # cond falseterm
add in 2 <285395 285398> out 1 <285399>  # cond result
mul in 2 <284084 284048> out 1 <285400>  # cond trueterm
const-mul-neg-1 in 1 <284084> out 1 <285401> # cond minuscond
add in 2 <100 285401> out 1 <285402>     # cond negcond
mul in 2 <285402 284045> out 1 <285403>  # cond falseterm
add in 2 <285400 285403> out 1 <285404>  # cond result
mul in 2 <283940 283904> out 1 <285405>  # cond trueterm
const-mul-neg-1 in 1 <283940> out 1 <285406> # cond minuscond
add in 2 <100 285406> out 1 <285407>     # cond negcond
mul in 2 <285407 283901> out 1 <285408>  # cond falseterm
add in 2 <285405 285408> out 1 <285409>  # cond result
const-mul-ffffffff in 1 <285409> out 1 <285410> # multiply-by-constant 4294967295
add in 2 <285409 285404> out 1 <285411>  # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
add in 2 <285411 285410> out 1 <285412>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <285412> out 1 <285413> # multiply-by-constant 4294967295
add in 2 <285411 285413> out 1 <285414>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <285409> out 1 <285415> # multiply-by-constant 4294967295
add in 2 <285404 285415> out 1 <285416>  # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <285416> out 200 <285417 285418 285419 285420 285421 285422 285423 285424 285425 285426 285427 285428 285429 285430 285431 285432 285433 285434 285435 285436 285437 285438 285439 285440 285441 285442 285443 285444 285445 285446 285447 285448 285449 285450 285451 285452 285453 285454 285455 285456 285457 285458 285459 285460 285461 285462 285463 285464 285465 285466 285467 285468 285469 285470 285471 285472 285473 285474 285475 285476 285477 285478 285479 285480 285481 285482 285483 285484 285485 285486 285487 285488 285489 285490 285491 285492 285493 285494 285495 285496 285497 285498 285499 285500 285501 285502 285503 285504 285505 285506 285507 285508 285509 285510 285511 285512 285513 285514 285515 285516 285517 285518 285519 285520 285521 285522 285523 285524 285525 285526 285527 285528 285529 285530 285531 285532 285533 285534 285535 285536 285537 285538 285539 285540 285541 285542 285543 285544 285545 285546 285547 285548 285549 285550 285551 285552 285553 285554 285555 285556 285557 285558 285559 285560 285561 285562 285563 285564 285565 285566 285567 285568 285569 285570 285571 285572 285573 285574 285575 285576 285577 285578 285579 285580 285581 285582 285583 285584 285585 285586 285587 285588 285589 285590 285591 285592 285593 285594 285595 285596 285597 285598 285599 285600 285601 285602 285603 285604 285605 285606 285607 285608 285609 285610 285611 285612 285613 285614 285615 285616> # SplitBus
mul in 2 <285448 285414> out 1 <285617>  # cond trueterm
const-mul-neg-1 in 1 <285448> out 1 <285618> # cond minuscond
add in 2 <100 285618> out 1 <285619>     # cond negcond
mul in 2 <285619 285404> out 1 <285620>  # cond falseterm
add in 2 <285617 285620> out 1 <285621>  # cond result
const-mul-ffffffff in 1 <285621> out 1 <285622> # multiply-by-constant 4294967295
add in 2 <285621 285399> out 1 <285623>  # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
split in 1 <285623> outplitBus
const-mul-2 in 1 <285655> out 1 <285859> # join source bit 31
add in 2 <285654 285859> out 1 <285860>  # join source bit 30
const-mul-2 in 1 <285860> out 1 <285861> # join
add in 2 <285653 285861> out 1 <285862>  # join source bit 29
const-mul-2 in 1 <285862> out 1 <285863> # join
add in 2 <285652 285863> out 1 <285864>  # join source bit 28
const-mul-2 in 1 <285864> out 1 <285865> # join
add in 2 <285651 285865> out 1 <285866>  # join source bit 27
const-mul-2 in 1 <285866> out 1 <285867> # join
add in 2 <285650 285867> out 1 <285868>  # join source bit 26
const-mul-2 in 1 <285868> out 1 <285869> # join
add in 2 <285649 285869> out 1 <285870>  # join source bit 25
const-mul-2 in 1 <285870> out 1 <285871> # join
add in 2 <285648 285871> out 1 <285872>  # join source bit 24
const-mul-2 in 1 <285872> out 1 <285873> # join
add in 2 <285647 285873> out 1 <285874>  # join source bit 23
const-mul-2 in 1 <285874> out 1 <285875> # join
add in 2 <285646 285875> out 1 <285876>  # join source bit 22
const-mul-2 in 1 <285876> out 1 <285877> # join
add in 2 <285645 285877> out 1 <285878>  # join source bit 21
const-mul-2 in 1 <285878> out 1 <285879> # join
add in 2 <285644 285879> out 1 <285880>  # join source bit 20
const-mul-2 in 1 <285880> out 1 <285881> # join
add in 2 <285643 285881> out 1 <285882>  # join source bit 19
const-mul-2 in 1 <285882> out 1 <285883> # join
add in 2 <285642 285883> out 1 <285884>  # join source bit 18
const-mul-2 in 1 <285884> out 1 <285885> # join
add in 2 <285641 285885> out 1 <285886>  # join source bit 17
const-mul-2 in 1 <285886> out 1 <285887> # join
add in 2 <285640 285887> out 1 <285888>  # join source bit 16
const-mul-2 in 1 <285888> out 1 <285889> # join
add in 2 <285639 285889> out 1 <285890>  # join source bit 15
const-mul-2 in 1 <285890> out 1 <285891> # join
add in 2 <285638 285891> out 1 <285892>  # join source bit 14
const-mul-2 in 1 <285892> out 1 <285893> # join
add in 2 <285637 285893> out 1 <285894>  # join source bit 13
const-mul-2 in 1 <285894> out 1 <285895> # join
add in 2 <285636 285895> out 1 <285896>  # join source bit 12
const-mul-2 in 1 <285896> out 1 <285897> # join
add in 2 <285635 285897> out 1 <285898>  # join source bit 11
const-mul-2 in 1 <285898> out 1 <285899> # join
add in 2 <285634 285899> out 1 <285900>  # join source bit 10
const-mul-2 in 1 <285900> out 1 <285901> # join
add in 2 <285633 285901> out 1 <285902>  # join source bit 9
const-mul-2 in 1 <285902> out 1 <285903> # join
add in 2 <285632 285903> out 1 <285904>  # join source bit 8
const-mul-2 in 1 <285904> out 1 <285905> # join
add in 2 <285631 285905> out 1 <285906>  # join source bit 7
const-mul-2 in 1 <285906> out 1 <285907> # join
add in 2 <285630 285907> out 1 <285908>  # join source bit 6
const-mul-2 in 1 <285908> out 1 <285909> # join
add in 2 <285629 285909> out 1 <285910>  # join source bit 5
const-mul-2 in 1 <285910> out 1 <285911> # join
add in 2 <285628 285911> out 1 <285912>  # join source bit 4
const-mul-2 in 1 <285912> out 1 <285913> # join
add in 2 <285627 285913> out 1 <285914>  # join source bit 3
const-mul-2 in 1 <285914> out 1 <285915> # join
add in 2 <285626 285915> out 1 <285916>  # join source bit 2
const-mul-2 in 1 <285916> out 1 <285917> # join
add in 2 <285625 285917> out 1 <285918>  # join source bit 1
const-mul-2 in 1 <285918> out 1 <285919> # join
add in 2 <285624 285919> out 1 <285920>  # join source bit 0
add in 2 <285920 285920> out 1 <285921>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <285921> out 1 <285922> # multiply-by-constant 4294967295
add in 2 <285623 285922> out 1 <285923>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <285621> out 1 <285924> # multiply-by-constant 4294967295
add in 2 <285399 285924> out 1 <285925>  # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <285925> outplitBus
mul in 2 <285957 285923> out 1 <286193>  # cond trueterm
const-mul-neg-1 in 1 <285957> out 1 <286194> # cond minuscond
add in 2 <100 286194> out 1 <286195>     # cond negcond
mul in 2 <286195 285399> out 1 <286196>  # cond falseterm
add in 2 <286193 286196> out 1 <286197>  # cond result
add in 2 <286197 104> out 1 <286198>     # ArithBusReq.AddReq(DFG.Conditional,DFG.Constant)
const-mul-ffffffff in 1 <89> out 1 <286199> # multiply-by-constant 4294967295
add in 2 <286198 286199> out 1 <286200>  # 'CmpLT DFG.Add - DFG.Input'
split in 1 <286200> outplitBus
mul in 2 <286232 103> out 1 <286439>     # cond trueterm
const-mul-neg-1 in 1 <286232> out 1 <286440> # cond minuscond
add in 2 <100 286440> out 1 <286441>     # cond negcond
mul in 2 <286441 102> out 1 <286442>     # cond falseterm
add in 2 <286439 286442> out 1 <286443>  # cond result
add in 2 <286197 3084> out 1 <286444>    # ArithBusReq.AddReq(DFG.Conditional,DFG.Negate)
const-mul-ffffffff in 1 <286444> out 1 <286445> # multiply-by-constant 4294967295
add in 2 <89 286445> out 1 <286446>      # 'CmpLT DFG.Input - DFG.Subtract'
split in 1 <286446> out 270 <286447 286448 286449 286450 286451 286452 286453 286454 286455 286456 286457 286458 286459 286460 286461 286462 286463 286464 286465 286466 286467 286468 286469 286470 286471 286472 286473 286474 286475 286476 286477 286478 286479 286480 286481 286482 286483 286484 286485 286486 286487 286488 286489 286490 286491 286492 286493 286494 286495 286496 286497 286498 286499 286500 286501 286502 286503 286504 286505 286506 286507 286508 286509 286510 286511 286512 286513 286514 286515 286516 286517 286518 286519 286520 286521 286522 286523 286524 286525 286526 286527 286528 286529 286530 286531 286532 286533 286534 286535 286536 286537 286538 286539 286540 286541 286542 286543 286544 286545 286546 286547 286548 286549 286550 286551 286552 286553 286554 286555 286556 286557 286558 286559 286560 286561 286562 286563 286564 286565 286566 286567 286568 286569 286570 286571 286572 286573 286574 286575 286576 286577 286578 286579 286580 286581 286582 286583 286584 286585 286586 286587 286588 286589 286590 286591 286592 286593 286594 286595 286596 286597 286598 286599 286600 286601 286602 286603 286604 286605 286606 286607 286608 286609 286610 286611 286612 286613 286614 286615 286616 286617 286618 286619 286620 286621 286622 286623 286624 286625 286626 286627 286628 286629 286630 286631 286632 286633 286634 286635 286636 286637 286638 286639 286640 286641 286642 286643 286644 286645 286646 286647 286648 286649 286650 286651 286652 286653 286654 286655 286656 286657 286658 286659 286660 286661 286662 286663 286664 286665 286666 286667 286668 286669 286670 286671 286672 286673 286674 286675 286676 286677 286678 286679 286680 286681 286682 286683 286684 286685 286686 286687 286688 286689 286690 286691 286692 286693 286694 286695 286696 286697 286698 286699 286700 286701 286702 286703 286704 286705 286706 286707 286708 286709 286710 286711 286712 286713 286714 286715 286716> # SplitBus
mul in 2 <286478 103> out 1 <286717>     # cond trueterm
const-mul-neg-1 in 1 <286478> out 1 <286718> # cond minuscond
add in 2 <100 286718> out 1 <286719>     # cond negcond
mul in 2 <286719 286443> out 1 <286720>  # cond falseterm
add in 2 <286717 286720> out 1 <286721>  # cond result
const-mul-ffffffff in 1 <88> out 1 <286722> # multiply-by-constant 4294967295
add in 2 <88 89> out 1 <286723>          # ArithBusReq.AddReq(DFG.Input,DFG.Input)
add in 2 <286723 286722> out 1 <286724>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <286724> out 1 <286725> # multiply-by-constant 4294967295
add in 2 <286723 286725> out 1 <286726>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <88> out 1 <286727> # multiply-by-constant 4294967295
add in 2 <89 286727> out 1 <286728>      # 'CmpLT DFG.Input - DFG.Input'
split in 1 <286728> out 65 <286729 286730 286731 286732 286733 286734 286735 286736 286737 286738 286739 286740 286741 286742 286743 286744 286745 286746 286747 286748 286749 286750 286751 286752 286753 286754 286755 286756 286757 286758 286759 286760 286761 286762 286763 286764 286765 286766 286767 286768 286769 286770 286771 286772 286773 286774 286775 286776 286777 286778 286779 286780 286781 286782 286783 286784 286785 286786 286787 286788 286789 286790 286791 286792 286793> # SplitBus
mul in 2 <286760 286726> out 1 <286794>  # cond trueterm
const-mul-neg-1 in 1 <286760> out 1 <286795> # cond minuscond
add in 2 <100 286795> out 1 <286796>     # cond negcond
mul in 2 <286796 89> out 1 <286797>      # cond falseterm
add in 2 <286794 286797> out 1 <286798>  # cond result
const-mul-ffffffff in 1 <286798> out 1 <286799> # multiply-by-constant 4294967295
add in 2 <286798 90> out 1 <286800>      # ArithBusReq.AddReq(DFG.Conditional,DFG.Input)
add in 2 <286800 286799> out 1 <286801>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <286801> out 1 <286802> # multiply-by-constant 4294967295
add in 2 <286800 286802> out 1 <286803>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <286798> out 1 <286804> # multiply-by-constant 4294967295
add in 2 <90 286804> out 1 <286805>      # 'CmpLT DFG.Input - DFG.Conditional'
split in 1 <286805> out 131 <286806 286807 286808 286809 286810 286811 286812 286813 286814 286815 286816 286817 286818 286819 286820 286821 286822 286823 286824 286825 286826 286827 286828 286829 286830 286831 286832 286833 286834 286835 286836 286837 286838 286839 286840 286841 286842 286843 286844 286845 286846 286847 286848 286849 286850 286851 286852 286853 286854 286855 286856 286857 286858 286859 286860 286861 286862 286863 286864 286865 286866 286867 286868 286869 286870 286871 286872 286873 286874 286875 286876 286877 286878 286879 286880 286881 286882 286883 286884 286885 286886 286887 286888 286889 286890 286891 286892 286893 286894 286895 286896 286897 286898 286899 286900 286901 286902 286903 286904 286905 286906 286907 286908 286909 286910 286911 286912 286913 286914 286915 286916 286917 286918 286919 286920 286921 286922 286923 286924 286925 286926 286927 286928 286929 286930 286931 286932 286933 286934 286935 286936> # SplitBus
mul in 2 <286837 286803> out 1 <286937>  # cond trueterm
const-mul-neg-1 in 1 <286837> out 1 <286938> # cond minuscond
add in 2 <100 286938> out 1 <286939>     # cond negcond
mul in 2 <286939 90> out 1 <286940>      # cond falseterm
add in 2 <286937 286940> out 1 <286941>  # cond result
const-mul-ffffffff in 1 <286941> out 1 <286942> # multiply-by-constant 4294967295
add in 2 <286941 91> out 1 <286943>      # ArithBusReq.AddReq(DFG.Conditional,DFG.Input)
add in 2 <286943 286942> out 1 <286944>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <286941> out 1 <286945> # multiply-by-constant 4294967295
add in 2 <91 286945> out 1 <286946>      # 'CmpLT DFG.Input - DFG.Conditional'
split in 1 <286946> out 197 <286947 286948 286949 286950 286951 286952 286953 286954 286955 286956 286957 286958 286959 286960 286961 286962 286963 286964 286965 286966 286967 286968 286969 286970 286971 286972 286973 286974 286975 286976 286977 286978 286979 286980 286981 286982 286983 286984 286985 286986 286987 286988 286989 286990 286991 286992 286993 286994 286995 286996 286997 286998 286999 287000 287001 287002 287003 287004 287005 287006 287007 287008 287009 287010 287011 287012 287013 287014 287015 287016 287017 287018 287019 287020 287021 287022 287023 287024 287025 287026 287027 287028 287029 287030 287031 287032 287033 287034 287035 287036 287037 287038 287039 287040 287041 287042 287043 287044 287045 287046 287047 287048 287049 287050 287051 287052 287053 287054 287055 287056 287057 287058 287059 287060 287061 287062 287063 287064 287065 287066 287067 287068 287069 287070 287071 287072 287073 287074 287075 287076 287077 287078 287079 287080 287081 287082 287083 287084 287085 287086 287087 287088 287089 287090 287091 287092 287093 287094 287095 287096 287097 287098 287099 287100 287101 287102 287103 287104 287105 287106 287107 287108 287109 287110 287111 287112 287113 287114 287115 287116 287117 287118 287119 287120 287121 287122 287123 287124 287125 287126 287127 287128 287129 287130 287131 287132 287133 287134 287135 287136 287137 287138 287139 287140 287141 287142 287143> # SplitBus
mul in 2 <286978 286944> out 1 <287144>  # cond trueterm
const-mul-neg-1 in 1 <286978> out 1 <287145> # cond minuscond
add in 2 <100 287145> out 1 <287146>     # cond negcond
mul in 2 <287146 286941> out 1 <287147>  # cond falseterm
add in 2 <287144 287147> out 1 <287148>  # cond result
mul in 2 <286837 286801> out 1 <287149>  # cond trueterm
const-mul-neg-1 in 1 <286837> out 1 <287150> # cond minuscond
add in 2 <100 287150> out 1 <287151>     # cond negcond
mul in 2 <287151 286798> out 1 <287152>  # cond falseterm
add in 2 <287149 287152> out 1 <287153>  # cond result
mul in 2 <286760 286724> out 1 <287154>  # cond trueterm
const-mul-neg-1 in 1 <286760> out 1 <287155> # cond minuscond
add in 2 <100 287155> out 1 <287156>     # cond negcond
mul in 2 <287156 88> out 1 <287157>      # cond falseterm
add in 2 <287154 287157> out 1 <287158>  # cond result
const-mul-ffffffff in 1 <287158> out 1 <287159> # multiply-by-constant 4294967295
add in 2 <287158 287153> out 1 <287160>  # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
add in 2 <287160 287159> out 1 <287161>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <287161> out 1 <287162> # multiply-by-constant 4294967295
add in 2 <287160 287162> out 1 <287163>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <287158> out 1 <287164> # multiply-by-constant 4294967295
add in 2 <287153 287164> out 1 <287165>  # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <287165> out 132 <287166 287167 287168 287169 287170 287171 287172 287173 287174 287175 287176 287177 287178 287179 287180 287181 287182 287183 287184 287185 287186 287187 287188 287189 287190 287191 287192 287193 287194 287195 287196 287197 287198 287199 287200 287201 287202 287203 287204 287205 287206 287207 287208 287209 287210 287211 287212 287213 287214 287215 287216 287217 287218 287219 287220 287221 287222 287223 287224 287225 287226 287227 287228 287229 287230 287231 287232 287233 287234 287235 287236 287237 287238 287239 287240 287241 287242 287243 287244 287245 287246 287247 287248 287249 287250 287251 287252 287253 287254 287255 287256 287257 287258 287259 287260 287261 287262 287263 287264 287265 287266 287267 287268 287269 287270 287271 287272 287273 287274 287275 287276 287277 287278 287279 287280 287281 287282 287283 287284 287285 287286 287287 287288 287289 287290 287291 287292 287293 287294 287295 287296 287297> # SplitBus
mul in 2 <287197 287163> out 1 <287298>  # cond trueterm
const-mul-neg-1 in 1 <287197> out 1 <287299> # cond minuscond
add in 2 <100 287299> out 1 <287300>     # cond negcond
mul in 2 <287300 287153> out 1 <287301>  # cond falseterm
add in 2 <287298 287301> out 1 <287302>  # cond result
const-mul-ffffffff in 1 <287302> out 1 <287303> # multiply-by-constant 4294967295
add in 2 <287302 287148> out 1 <287304>  # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
add in 2 <287304 287303> out 1 <287305>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <287305> out 1 <287306> # multiply-by-constant 4294967295
add in 2 <287304 287306> out 1 <287307>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <287302> out 1 <287308> # multiply-by-constant 4294967295
add in 2 <287148 287308> out 1 <287309>  # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <287309> out 199 <287310 287311 287312 287313 287314 287315 287316 287317 287318 287319 287320 287321 287322 287323 287324 287325 287326 287327 287328 287329 287330 287331 287332 287333 287334 287335 287336 287337 287338 287339 287340 287341 287342 287343 287344 287345 287346 287347 287348 287349 287350 287351 287352 287353 287354 287355 287356 287357 287358 287359 287360 287361 287362 287363 287364 287365 287366 287367 287368 287369 287370 287371 287372 287373 287374 287375 287376 287377 287378 287379 287380 287381 287382 287383 287384 287385 287386 287387 287388 287389 287390 287391 287392 287393 287394 287395 287396 287397 287398 287399 287400 287401 287402 287403 287404 287405 287406 287407 287408 287409 287410 287411 287412 287413 287414 287415 287416 287417 287418 287419 287420 287421 287422 287423 287424 287425 287426 287427 287428 287429 287430 287431 287432 287433 287434 287435 287436 287437 287438 287439 287440 287441 287442 287443 287444 287445 287446 287447 287448 287449 287450 287451 287452 287453 287454 287455 287456 287457 287458 287459 287460 287461 287462 287463 287464 287465 287466 287467 287468 287469 287470 287471 287472 287473 287474 287475 287476 287477 287478 287479 287480 287481 287482 287483 287484 287485 287486 287487 287488 287489 287490 287491 287492 287493 287494 287495 287496 287497 287498 287499 287500 287501 287502 287503 287504 287505 287506 287507 287508> # SplitBus
mul in 2 <287341 287307> out 1 <287509>  # cond trueterm
const-mul-neg-1 in 1 <287341> out 1 <287510> # cond minuscond
add in 2 <100 287510> out 1 <287511>     # cond negcond
mul in 2 <287511 287148> out 1 <287512>  # cond falseterm
add in 2 <287509 287512> out 1 <287513>  # cond result
const-mul-ffffffff in 1 <287513> out 1 <287514> # multiply-by-constant 4294967295
const-mul-ffffffff in 1 <286944> out 1 <287515> # multiply-by-constant 4294967295
add in 2 <286943 287515> out 1 <287516>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
mul in 2 <286978 287516> out 1 <287517>  # cond trueterm
const-mul-neg-1 in 1 <286978> out 1 <287518> # cond minuscond
add in 2 <100 287518> out 1 <287519>     # cond negcond
mul in 2 <287519 91> out 1 <287520>      # cond falseterm
add in 2 <287517 287520> out 1 <287521>  # cond result
const-mul-ffffffff in 1 <287521> out 1 <287522> # multiply-by-constant 4294967295
add in 2 <287521 92> out 1 <287523>      # ArithBusReq.AddReq(DFG.Conditional,DFG.Input)
split in 1 <287523> outplitBus
const-mul-2 in 1 <287555> out 1 <287755> # join source bit 31
add in 2 <287554 287755> out 1 <287756>  # join source bit 30
const-mul-2 in 1 <287756> out 1 <287757> # join
add in 2 <287553 287757> out 1 <287758>  # join source bit 29
const-mul-2 in 1 <287758> out 1 <287759> # join
add in 2 <287552 287759> out 1 <287760>  # join source bit 28
const-mul-2 in 1 <287760> out 1 <287761> # join
add in 2 <287551 287761> out 1 <287762>  # join source bit 27
const-mul-2 in 1 <287762> out 1 <287763> # join
add in 2 <287550 287763> out 1 <287764>  # join source bit 26
const-mul-2 in 1 <287764> out 1 <287765> # join
add in 2 <287549 287765> out 1 <287766>  # join source bit 25
const-mul-2 in 1 <287766> out 1 <287767> # join
add in 2 <287548 287767> out 1 <287768>  # join source bit 24
const-mul-2 in 1 <287768> out 1 <287769> # join
add in 2 <287547 287769> out 1 <287770>  # join source bit 23
const-mul-2 in 1 <287770> out 1 <287771> # join
add in 2 <287546 287771> out 1 <287772>  # join source bit 22
const-mul-2 in 1 <287772> out 1 <287773> # join
add in 2 <287545 287773> out 1 <287774>  # join source bit 21
const-mul-2 in 1 <287774> out 1 <287775> # join
add in 2 <287544 287775> out 1 <287776>  # join source bit 20
const-mul-2 in 1 <287776> out 1 <287777> # join
add in 2 <287543 287777> out 1 <287778>  # join source bit 19
const-mul-2 in 1 <287778> out 1 <287779> # join
add in 2 <287542 287779> out 1 <287780>  # join source bit 18
const-mul-2 in 1 <287780> out 1 <287781> # join
add in 2 <287541 287781> out 1 <287782>  # join source bit 17
const-mul-2 in 1 <287782> out 1 <287783> # join
add in 2 <287540 287783> out 1 <287784>  # join source bit 16
const-mul-2 in 1 <287784> out 1 <287785> # join
add in 2 <287539 287785> out 1 <287786>  # join source bit 15
const-mul-2 in 1 <287786> out 1 <287787> # join
add in 2 <287538 287787> out 1 <287788>  # join source bit 14
const-mul-2 in 1 <287788> out 1 <287789> # join
add in 2 <287537 287789> out 1 <287790>  # join source bit 13
const-mul-2 in 1 <287790> out 1 <287791> # join
add in 2 <287536 287791> out 1 <287792>  # join source bit 12
const-mul-2 in 1 <287792> out 1 <287793> # join
add in 2 <287535 287793> out 1 <287794>  # join source bit 11
const-mul-2 in 1 <287794> out 1 <287795> # join
add in 2 <287534 287795> out 1 <287796>  # join source bit 10
const-mul-2 in 1 <287796> out 1 <287797> # join
add in 2 <287533 287797> out 1 <287798>  # join source bit 9
const-mul-2 in 1 <287798> out 1 <287799> # join
add in 2 <287532 287799> out 1 <287800>  # join source bit 8
const-mul-2 in 1 <287800> out 1 <287801> # join
add in 2 <287531 287801> out 1 <287802>  # join source bit 7
const-mul-2 in 1 <287802> out 1 <287803> # join
add in 2 <287530 287803> out 1 <287804>  # join source bit 6
const-mul-2 in 1 <287804> out 1 <287805> # join
add in 2 <287529 287805> out 1 <287806>  # join source bit 5
const-mul-2 in 1 <287806> out 1 <287807> # join
add in 2 <287528 287807> out 1 <287808>  # join source bit 4
const-mul-2 in 1 <287808> out 1 <287809> # join
add in 2 <287527 287809> out 1 <287810>  # join source bit 3
const-mul-2 in 1 <287810> out 1 <287811> # join
add in 2 <287526 287811> out 1 <287812>  # join source bit 2
const-mul-2 in 1 <287812> out 1 <287813> # join
add in 2 <287525 287813> out 1 <287814>  # join source bit 1
const-mul-2 in 1 <287814> out 1 <287815> # join
add in 2 <287524 287815> out 1 <287816>  # join source bit 0
add in 2 <287816 287816> out 1 <287817>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <287521> out 1 <287818> # multiply-by-constant 4294967295
add in 2 <92 287818> out 1 <287819>      # 'CmpLT DFG.Input - DFG.Conditional'
split in 1 <287819> outplitBus
mul in 2 <287851 287817> out 1 <288083>  # cond trueterm
const-mul-neg-1 in 1 <287851> out 1 <288084> # cond minuscond
add in 2 <100 288084> out 1 <288085>     # cond negcond
mul in 2 <288085 287521> out 1 <288086>  # cond falseterm
add in 2 <288083 288086> out 1 <288087>  # cond result
add in 2 <287513 288087> out 1 <288088>  # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
split in 1 <288088> out 233 <288089 288090 288091 288092 288093 288094 288095 288096 288097 288098 288099 288100 288101 288102 288103 288104 288105 288106 288107 288108 288109 288110 288111 288112 288113 288114 288115 288116 288117 288118 288119 288120 288121 288122 288123 288124 288125 288126 288127 288128 288129 288130 288131 288132 288133 288134 288135 288136 288137 288138 288139 288140 288141 288142 288143 288144 288145 288146 288147 288148 288149 288150 288151 288152 288153 288154 288155 288156 288157 288158 288159 288160 288161 288162 288163 288164 288165 288166 288167 288168 288169 288170 288171 288172 288173 288174 288175 288176 288177 288178 288179 288180 288181 288182 288183 288184 288185 288186 288187 288188 288189 288190 288191 288192 288193 288194 288195 288196 288197 288198 288199 288200 288201 288202 288203 288204 288205 288206 288207 288208 288209 288210 288211 288212 288213 288214 288215 288216 288217 288218 288219 288220 288221 288222 288223 288224 288225 288226 288227 288228 288229 288230 288231 288232 288233 288234 288235 288236 288237 288238 288239 288240 288241 288242 288243 288244 288245 288246 288247 288248 288249 288250 288251 288252 288253 288254 288255 288256 288257 288258 288259 288260 288261 288262 288263 288264 288265 288266 288267 288268 288269 288270 288271 288272 288273 288274 288275 288276 288277 288278 288279 288280 288281 288282 288283 288284 288285 288286 288287 288288 288289 288290 288291 288292 288293 288294 288295 288296 288297 288298 288299 288300 288301 288302 288303 288304 288305 288306 288307 288308 288309 288310 288311 288312 288313 288314 288315 288316 288317 288318 288319 288320 288321> # SplitBus
const-mul-2 in 1 <288120> out 1 <288322> # join source bit 31
add in 2 <288119 288322> out 1 <288323>  # join source bit 30
const-mul-2 in 1 <288323> out 1 <288324> # join
add in 2 <288118 288324> out 1 <288325>  # join source bit 29
const-mul-2 in 1 <288325> out 1 <288326> # join
add in 2 <288117 288326> out 1 <288327>  # join source bit 28
const-mul-2 in 1 <288327> out 1 <288328> # join
add in 2 <288116 288328> out 1 <288329>  # join source bit 27
const-mul-2 in 1 <288329> out 1 <288330> # join
add in 2 <288115 288330> out 1 <288331>  # join source bit 26
const-mul-2 in 1 <288331> out 1 <288332> # join
add in 2 <288114 288332> out 1 <288333>  # join source bit 25
const-mul-2 in 1 <288333> out 1 <288334> # join
add in 2 <288113 288334> out 1 <288335>  # join source bit 24
const-mul-2 in 1 <288335> out 1 <288336> # join
add in 2 <288112 288336> out 1 <288337>  # join source bit 23
const-mul-2 in 1 <288337> out 1 <288338> # join
add in 2 <288111 288338> out 1 <288339>  # join source bit 22
const-mul-2 in 1 <288339> out 1 <288340> # join
add in 2 <288110 288340> out 1 <288341>  # join source bit 21
const-mul-2 in 1 <288341> out 1 <288342> # join
add in 2 <288109 288342> out 1 <288343>  # join source bit 20
const-mul-2 in 1 <288343> out 1 <288344> # join
add in 2 <288108 288344> out 1 <288345>  # join source bit 19
const-mul-2 in 1 <288345> out 1 <288346> # join
add in 2 <288107 288346> out 1 <288347>  # join source bit 18
const-mul-2 in 1 <288347> out 1 <288348> # join
add in 2 <288106 288348> out 1 <288349>  # join source bit 17
const-mul-2 in 1 <288349> out 1 <288350> # join
add in 2 <288105 288350> out 1 <288351>  # join source bit 16
const-mul-2 in 1 <288351> out 1 <288352> # join
add in 2 <288104 288352> out 1 <288353>  # join source bit 15
const-mul-2 in 1 <288353> out 1 <288354> # join
add in 2 <288103 288354> out 1 <288355>  # join source bit 14
const-mul-2 in 1 <288355> out 1 <288356> # join
add in 2 <288102 288356> out 1 <288357>  # join source bit 13
const-mul-2 in 1 <288357> out 1 <288358> # join
add in 2 <288101 288358> out 1 <288359>  # join source bit 12
const-mul-2 in 1 <288359> out 1 <288360> # join
add in 2 <288100 288360> out 1 <288361>  # join source bit 11
const-mul-2 in 1 <288361> out 1 <288362> # join
add in 2 <288099 288362> out 1 <288363>  # join source bit 10
const-mul-2 in 1 <288363> out 1 <288364> # join
add in 2 <288098 288364> out 1 <288365>  # join source bit 9
const-mul-2 in 1 <288365> out 1 <288366> # join
add in 2 <288097 288366> out 1 <288367>  # join source bit 8
const-mul-2 in 1 <288367> out 1 <288368> # join
add in 2 <288096 288368> out 1 <288369>  # join source bit 7
const-mul-2 in 1 <288369> out 1 <288370> # join
add in 2 <288095 288370> out 1 <288371>  # join source bit 6
const-mul-2 in 1 <288371> out 1 <288372> # join
add in 2 <288094 288372> out 1 <288373>  # join source bit 5
const-mul-2 in 1 <288373> out 1 <288374> # join
add in 2 <288093 288374> out 1 <288375>  # join source bit 4
const-mul-2 in 1 <288375> out 1 <288376> # join
add in 2 <288092 288376> out 1 <288377>  # join source bit 3
const-mul-2 in 1 <288377> out 1 <288378> # join
add in 2 <288091 288378> out 1 <288379>  # join source bit 2
const-mul-2 in 1 <288379> out 1 <288380> # join
add in 2 <288090 288380> out 1 <288381>  # join source bit 1
const-mul-2 in 1 <288381> out 1 <288382> # join
add in 2 <288089 288382> out 1 <288383>  # join source bit 0
add in 2 <288383 288383> out 1 <288384>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <287513> out 1 <288385> # multiply-by-constant 4294967295
add in 2 <288087 288385> out 1 <288386>  # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <288386> out 265 <288387 288388 288389 288390 288391 288392 288393 288394 288395 288396 288397 288398 288399 288400 288401 288402 288403 288404 288405 288406 288407 288408 288409 288410 288411 288412 288413 288414 288415 288416 288417 288418 288419 288420 288421 288422 288423 288424 288425 288426 288427 288428 288429 288430 288431 288432 288433 288434 288435 288436 288437 288438 288439 288440 288441 288442 288443 288444 288445 288446 288447 288448 288449 288450 288451 288452 288453 288454 288455 288456 288457 288458 288459 288460 288461 288462 288463 288464 288465 288466 288467 288468 288469 288470 288471 288472 288473 288474 288475 288476 288477 288478 288479 288480 288481 288482 288483 288484 288485 288486 288487 288488 288489 288490 288491 288492 288493 288494 288495 288496 288497 288498 288499 288500 288501 288502 288503 288504 288505 288506 288507 288508 288509 288510 288511 288512 288513 288514 288515 288516 288517 288518 288519 288520 288521 288522 288523 288524 288525 288526 288527 288528 288529 288530 288531 288532 288533 288534 288535 288536 288537 288538 288539 288540 288541 288542 288543 288544 288545 288546 288547 288548 288549 288550 288551 288552 288553 288554 288555 288556 288557 288558 288559 288560 288561 288562 288563 288564 288565 288566 288567 288568 288569 288570 288571 288572 288573 288574 288575 288576 288577 288578 288579 288580 288581 288582 288583 288584 288585 288586 288587 288588 288589 288590 288591 288592 288593 288594 288595 288596 288597 288598 288599 288600 288601 288602 288603 288604 288605 288606 288607 288608 288609 288610 288611 288612 288613 288614 288615 288616 288617 288618 288619 288620 288621 288622 288623 288624 288625 288626 288627 288628 288629 288630 288631 288632 288633 288634 288635 288636 288637 288638 288639 288640 288641 288642 288643 288644 288645 288646 288647 288648 288649 288650 288651> # SplitBus
mul in 2 <288418 288384> out 1 <288652>  # cond trueterm
const-mul-neg-1 in 1 <288418> out 1 <288653> # cond minuscond
add in 2 <100 288653> out 1 <288654>     # cond negcond
mul in 2 <288654 287513> out 1 <288655>  # cond falseterm
add in 2 <288652 288655> out 1 <288656>  # cond result
mul in 2 <287341 287305> out 1 <288657>  # cond trueterm
const-mul-neg-1 in 1 <287341> out 1 <288658> # cond minuscond
add in 2 <100 288658> out 1 <288659>     # cond negcond
mul in 2 <288659 287302> out 1 <288660>  # cond falseterm
add in 2 <288657 288660> out 1 <288661>  # cond result
mul in 2 <287197 287161> out 1 <288662>  # cond trueterm
const-mul-neg-1 in 1 <287197> out 1 <288663> # cond minuscond
add in 2 <100 288663> out 1 <288664>     # cond negcond
mul in 2 <288664 287158> out 1 <288665>  # cond falseterm
add in 2 <288662 288665> out 1 <288666>  # cond result
const-mul-ffffffff in 1 <288666> out 1 <288667> # multiply-by-constant 4294967295
add in 2 <288666 288661> out 1 <288668>  # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
add in 2 <288668 288667> out 1 <288669>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <288669> out 1 <288670> # multiply-by-constant 4294967295
add in 2 <288668 288670> out 1 <288671>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <288666> out 1 <288672> # multiply-by-constant 4294967295
add in 2 <288661 288672> out 1 <288673>  # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <288673> out 200 <288674 288675 288676 288677 288678 288679 288680 288681 288682 288683 288684 288685 288686 288687 288688 288689 288690 288691 288692 288693 288694 288695 288696 288697 288698 288699 288700 288701 288702 288703 288704 288705 288706 288707 288708 288709 288710 288711 288712 288713 288714 288715 288716 288717 288718 288719 288720 288721 288722 288723 288724 288725 288726 288727 288728 288729 288730 288731 288732 288733 288734 288735 288736 288737 288738 288739 288740 288741 288742 288743 288744 288745 288746 288747 288748 288749 288750 288751 288752 288753 288754 288755 288756 288757 288758 288759 288760 288761 288762 288763 288764 288765 288766 288767 288768 288769 288770 288771 288772 288773 288774 288775 288776 288777 288778 288779 288780 288781 288782 288783 288784 288785 288786 288787 288788 288789 288790 288791 288792 288793 288794 288795 288796 288797 288798 288799 288800 288801 288802 288803 288804 288805 288806 288807 288808 288809 288810 288811 288812 288813 288814 288815 288816 288817 288818 288819 288820 288821 288822 288823 288824 288825 288826 288827 288828 288829 288830 288831 288832 288833 288834 288835 288836 288837 288838 288839 288840 288841 288842 288843 288844 288845 288846 288847 288848 288849 288850 288851 288852 288853 288854 288855 288856 288857 288858 288859 288860 288861 288862 288863 288864 288865 288866 288867 288868 288869 288870 288871 288872 288873> # SplitBus
mul in 2 <288705 288671> out 1 <288874>  # cond trueterm
const-mul-neg-1 in 1 <288705> out 1 <288875> # cond minuscond
add in 2 <100 288875> out 1 <288876>     # cond negcond
mul in 2 <288876 288661> out 1 <288877>  # cond falseterm
add in 2 <288874 288877> out 1 <288878>  # cond result
const-mul-ffffffff in 1 <288878> out 1 <288879> # multiply-by-constant 4294967295
add in 2 <288878 288656> out 1 <288880>  # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
split in 1 <288880> out 235 <288881 288882 288883 288884 288885 288886 288887 288888 288889 288890 288891 288892 288893 288894 288895 288896 288897 288898 288899 288900 288901 288902 288903 288904 288905 288906 288907 288908 288909 288910 288911 288912 288913 288914 288915 288916 288917 288918 288919 288920 288921 288922 288923 288924 288925 288926 288927 288928 288929 288930 288931 288932 288933 288934 288935 288936 288937 288938 288939 288940 288941 288942 288943 288944 288945 288946 288947 288948 288949 288950 288951 288952 288953 288954 288955 288956 288957 288958 288959 288960 288961 288962 288963 288964 288965 288966 288967 288968 288969 288970 288971 288972 288973 288974 288975 288976 288977 288978 288979 288980 288981 288982 288983 288984 288985 288986 288987 288988 288989 288990 288991 288992 288993 288994 288995 288996 288997 288998 288999 289000 289001 289002 289003 289004 289005 289006 289007 289008 289009 289010 289011 289012 289013 289014 289015 289016 289017 289018 289019 289020 289021 289022 289023 289024 289025 289026 289027 289028 289029 289030 289031 289032 289033 289034 289035 289036 289037 289038 289039 289040 289041 289042 289043 289044 289045 289046 289047 289048 289049 289050 289051 289052 289053 289054 289055 289056 289057 289058 289059 289060 289061 289062 289063 289064 289065 289066 289067 289068 289069 289070 289071 289072 289073 289074 289075 289076 289077 289078 289079 289080 289081 289082 289083 289084 289085 289086 289087 289088 289089 289090 289091 289092 289093 289094 289095 289096 289097 289098 289099 289100 289101 289102 289103 289104 289105 289106 289107 289108 289109 289110 289111 289112 289113 289114 289115> # SplitBus
const-mul-2 in 1 <288912> out 1 <289116> # join source bit 31
add in 2 <288911 289116> out 1 <289117>  # join source bit 30
const-mul-2 in 1 <289117> out 1 <289118> # join
add in 2 <288910 289118> out 1 <289119>  # join source bit 29
const-mul-2 in 1 <289119> out 1 <289120> # join
add in 2 <288909 289120> out 1 <289121>  # join source bit 28
const-mul-2 in 1 <289121> out 1 <289122> # join
add in 2 <288908 289122> out 1 <289123>  # join source bit 27
const-mul-2 in 1 <289123> out 1 <289124> # join
add in 2 <288907 289124> out 1 <289125>  # join source bit 26
const-mul-2 in 1 <289125> out 1 <289126> # join
add in 2 <288906 289126> out 1 <289127>  # join source bit 25
const-mul-2 in 1 <289127> out 1 <289128> # join
add in 2 <288905 289128> out 1 <289129>  # join source bit 24
const-mul-2 in 1 <289129> out 1 <289130> # join
add in 2 <288904 289130> out 1 <289131>  # join source bit 23
const-mul-2 in 1 <289131> out 1 <289132> # join
add in 2 <288903 289132> out 1 <289133>  # join source bit 22
const-mul-2 in 1 <289133> out 1 <289134> # join
add in 2 <288902 289134> out 1 <289135>  # join source bit 21
const-mul-2 in 1 <289135> out 1 <289136> # join
add in 2 <288901 289136> out 1 <289137>  # join source bit 20
const-mul-2 in 1 <289137> out 1 <289138> # join
add in 2 <288900 289138> out 1 <289139>  # join source bit 19
const-mul-2 in 1 <289139> out 1 <289140> # join
add in 2 <288899 289140> out 1 <289141>  # join source bit 18
const-mul-2 in 1 <289141> out 1 <289142> # join
add in 2 <288898 289142> out 1 <289143>  # join source bit 17
const-mul-2 in 1 <289143> out 1 <289144> # join
add in 2 <288897 289144> out 1 <289145>  # join source bit 16
const-mul-2 in 1 <289145> out 1 <289146> # join
add in 2 <288896 289146> out 1 <289147>  # join source bit 15
const-mul-2 in 1 <289147> out 1 <289148> # join
add in 2 <288895 289148> out 1 <289149>  # join source bit 14
const-mul-2 in 1 <289149> out 1 <289150> # join
add in 2 <288894 289150> out 1 <289151>  # join source bit 13
const-mul-2 in 1 <289151> out 1 <289152> # join
add in 2 <288893 289152> out 1 <289153>  # join source bit 12
const-mul-2 in 1 <289153> out 1 <289154> # join
add in 2 <288892 289154> out 1 <289155>  # join source bit 11
const-mul-2 in 1 <289155> out 1 <289156> # join
add in 2 <288891 289156> out 1 <289157>  # join source bit 10
const-mul-2 in 1 <289157> out 1 <289158> # join
add in 2 <288890 289158> out 1 <289159>  # join source bit 9
const-mul-2 in 1 <289159> out 1 <289160> # join
add in 2 <288889 289160> out 1 <289161>  # join source bit 8
const-mul-2 in 1 <289161> out 1 <289162> # join
add in 2 <288888 289162> out 1 <289163>  # join source bit 7
const-mul-2 in 1 <289163> out 1 <289164> # join
add in 2 <288887 289164> out 1 <289165>  # join source bit 6
const-mul-2 in 1 <289165> out 1 <289166> # join
add in 2 <288886 289166> out 1 <289167>  # join source bit 5
const-mul-2 in 1 <289167> out 1 <289168> # join
add in 2 <288885 289168> out 1 <289169>  # join source bit 4
const-mul-2 in 1 <289169> out 1 <289170> # join
add in 2 <288884 289170> out 1 <289171>  # join source bit 3
const-mul-2 in 1 <289171> out 1 <289172> # join
add in 2 <288883 289172> out 1 <289173>  # join source bit 2
const-mul-2 in 1 <289173> out 1 <289174> # join
add in 2 <288882 289174> out 1 <289175>  # join source bit 1
const-mul-2 in 1 <289175> out 1 <289176> # join
add in 2 <288881 289176> out 1 <289177>  # join source bit 0
add in 2 <289177 289177> out 1 <289178>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <289178> out 1 <289179> # multiply-by-constant 4294967295
add in 2 <288880 289179> out 1 <289180>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <288878> out 1 <289181> # multiply-by-constant 4294967295
add in 2 <288656 289181> out 1 <289182>  # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <289182> out 267 <289183 289184 289185 289186 289187 289188 289189 289190 289191 289192 289193 289194 289195 289196 289197 289198 289199 289200 289201 289202 289203 289204 289205 289206 289207 289208 289209 289210 289211 289212 289213 289214 289215 289216 289217 289218 289219 289220 289221 289222 289223 289224 289225 289226 289227 289228 289229 289230 289231 289232 289233 289234 289235 289236 289237 289238 289239 289240 289241 289242 289243 289244 289245 289246 289247 289248 289249 289250 289251 289252 289253 289254 289255 289256 289257 289258 289259 289260 289261 289262 289263 289264 289265 289266 289267 289268 289269 289270 289271 289272 289273 289274 289275 289276 289277 289278 289279 289280 289281 289282 289283 289284 289285 289286 289287 289288 289289 289290 289291 289292 289293 289294 289295 289296 289297 289298 289299 289300 289301 289302 289303 289304 289305 289306 289307 289308 289309 289310 289311 289312 289313 289314 289315 289316 289317 289318 289319 289320 289321 289322 289323 289324 289325 289326 289327 289328 289329 289330 289331 289332 289333 289334 289335 289336 289337 289338 289339 289340 289341 289342 289343 289344 289345 289346 289347 289348 289349 289350 289351 289352 289353 289354 289355 289356 289357 289358 289359 289360 289361 289362 289363 289364 289365 289366 289367 289368 289369 289370 289371 289372 289373 289374 289375 289376 289377 289378 289379 289380 289381 289382 289383 289384 289385 289386 289387 289388 289389 289390 289391 289392 289393 289394 289395 289396 289397 289398 289399 289400 289401 289402 289403 289404 289405 289406 289407 289408 289409 289410 289411 289412 289413 289414 289415 289416 289417 289418 289419 289420 289421 289422 289423 289424 289425 289426 289427 289428 289429 289430 289431 289432 289433 289434 289435 289436 289437 289438 289439 289440 289441 289442 289443 289444 289445 289446 289447 289448 289449> # SplitBus
mul in 2 <289214 289180> out 1 <289450>  # cond trueterm
const-mul-neg-1 in 1 <289214> out 1 <289451> # cond minuscond
add in 2 <100 289451> out 1 <289452>     # cond negcond
mul in 2 <289452 288656> out 1 <289453>  # cond falseterm
add in 2 <289450 289453> out 1 <289454>  # cond result
add in 2 <289454 104> out 1 <289455>     # ArithBusReq.AddReq(DFG.Conditional,DFG.Constant)
const-mul-ffffffff in 1 <90> out 1 <289456> # multiply-by-constant 4294967295
add in 2 <289455 289456> out 1 <289457>  # 'CmpLT DFG.Add - DFG.Input'
split in 1 <289457> out 238 <289458 289459 289460 289461 289462 289463 289464 289465 289466 289467 289468 289469 289470 289471 289472 289473 289474 289475 289476 289477 289478 289479 289480 289481 289482 289483 289484 289485 289486 289487 289488 289489 289490 289491 289492 289493 289494 289495 289496 289497 289498 289499 289500 289501 289502 289503 289504 289505 289506 289507 289508 289509 289510 289511 289512 289513 289514 289515 289516 289517 289518 289519 289520 289521 289522 289523 289524 289525 289526 289527 289528 289529 289530 289531 289532 289533 289534 289535 289536 289537 289538 289539 289540 289541 289542 289543 289544 289545 289546 289547 289548 289549 289550 289551 289552 289553 289554 289555 289556 289557 289558 289559 289560 289561 289562 289563 289564 289565 289566 289567 289568 289569 289570 289571 289572 289573 289574 289575 289576 289577 289578 289579 289580 289581 289582 289583 289584 289585 289586 289587 289588 289589 289590 289591 289592 289593 289594 289595 289596 289597 289598 289599 289600 289601 289602 289603 289604 289605 289606 289607 289608 289609 289610 289611 289612 289613 289614 289615 289616 289617 289618 289619 289620 289621 289622 289623 289624 289625 289626 289627 289628 289629 289630 289631 289632 289633 289634 289635 289636 289637 289638 289639 289640 289641 289642 289643 289644 289645 289646 289647 289648 289649 289650 289651 289652 289653 289654 289655 289656 289657 289658 289659 289660 289661 289662 289663 289664 289665 289666 289667 289668 289669 289670 289671 289672 289673 289674 289675 289676 289677 289678 289679 289680 289681 289682 289683 289684 289685 289686 289687 289688 289689 289690 289691 289692 289693 289694 289695> # SplitBus
mul in 2 <289489 103> out 1 <289696>     # cond trueterm
const-mul-neg-1 in 1 <289489> out 1 <289697> # cond minuscond
add in 2 <100 289697> out 1 <289698>     # cond negcond
mul in 2 <289698 102> out 1 <289699>     # cond falseterm
add in 2 <289696 289699> out 1 <289700>  # cond result
add in 2 <289454 3084> out 1 <289701>    # ArithBusReq.AddReq(DFG.Conditional,DFG.Negate)
const-mul-ffffffff in 1 <289701> out 1 <289702> # multiply-by-constant 4294967295
add in 2 <90 289702> out 1 <289703>      # 'CmpLT DFG.Input - DFG.Subtract'
split in 1 <289703> outplitBus
mul in 2 <289735 103> out 1 <289974>     # cond trueterm
const-mul-neg-1 in 1 <289735> out 1 <289975> # cond minuscond
add in 2 <100 289975> out 1 <289976>     # cond negcond
mul in 2 <289976 289700> out 1 <289977>  # cond falseterm
add in 2 <289974 289977> out 1 <289978>  # cond result
const-mul-ffffffff in 1 <89> out 1 <289979> # multiply-by-constant 4294967295
add in 2 <89 90> out 1 <289980>          # ArithBusReq.AddReq(DFG.Input,DFG.Input)
add in 2 <289980 289979> out 1 <289981>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <289981> out 1 <289982> # multiply-by-constant 4294967295
add in 2 <289980 289982> out 1 <289983>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <89> out 1 <289984> # multiply-by-constant 4294967295
add in 2 <90 289984> out 1 <289985>      # 'CmpLT DFG.Input - DFG.Input'
split in 1 <289985> out 65 <289986 289987 289988 289989 289990 289991 289992 289993 289994 289995 289996 289997 289998 289999 290000 290001 290002 290003 290004 290005 290006 290007 290008 290009 290010 290011 290012 290013 290014 290015 290016 290017 290018 290019 290020 290021 290022 290023 290024 290025 290026 290027 290028 290029 290030 290031 290032 290033 290034 290035 290036 290037 290038 290039 290040 290041 290042 290043 290044 290045 290046 290047 290048 290049 290050> # SplitBus
mul in 2 <290017 289983> out 1 <290051>  # cond trueterm
const-mul-neg-1 in 1 <290017> out 1 <290052> # cond minuscond
add in 2 <100 290052> out 1 <290053>     # cond negcond
mul in 2 <290053 90> out 1 <290054>      # cond falseterm
add in 2 <290051 290054> out 1 <290055>  # cond result
const-mul-ffffffff in 1 <290055> out 1 <290056> # multiply-by-constant 4294967295
add in 2 <290055 91> out 1 <290057>      # ArithBusReq.AddReq(DFG.Conditional,DFG.Input)
add in 2 <290057 290056> out 1 <290058>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <290058> out 1 <290059> # multiply-by-constant 4294967295
add in 2 <290057 290059> out 1 <290060>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <290055> out 1 <290061> # multiply-by-constant 4294967295
add in 2 <91 290061> out 1 <290062>      # 'CmpLT DFG.Input - DFG.Conditional'
split in 1 <290062> out 131 <290063 290064 290065 290066 290067 290068 290069 290070 290071 290072 290073 290074 290075 290076 290077 290078 290079 290080 290081 290082 290083 290084 290085 290086 290087 290088 290089 290090 290091 290092 290093 290094 290095 290096 290097 290098 290099 290100 290101 290102 290103 290104 290105 290106 290107 290108 290109 290110 290111 290112 290113 290114 290115 290116 290117 290118 290119 290120 290121 290122 290123 290124 290125 290126 290127 290128 290129 290130 290131 290132 290133 290134 290135 290136 290137 290138 290139 290140 290141 290142 290143 290144 290145 290146 290147 290148 290149 290150 290151 290152 290153 290154 290155 290156 290157 290158 290159 290160 290161 290162 290163 290164 290165 290166 290167 290168 290169 290170 290171 290172 290173 290174 290175 290176 290177 290178 290179 290180 290181 290182 290183 290184 290185 290186 290187 290188 290189 290190 290191 290192 290193> # SplitBus
mul in 2 <290094 290060> out 1 <290194>  # cond trueterm
const-mul-neg-1 in 1 <290094> out 1 <290195> # cond minuscond
add in 2 <100 290195> out 1 <290196>     # cond negcond
mul in 2 <290196 91> out 1 <290197>      # cond falseterm
add in 2 <290194 290197> out 1 <290198>  # cond result
const-mul-ffffffff in 1 <290198> out 1 <290199> # multiply-by-constant 4294967295
add in 2 <290198 92> out 1 <290200>      # ArithBusReq.AddReq(DFG.Conditional,DFG.Input)
add in 2 <290200 290199> out 1 <290201>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <290198> out 1 <290202> # multiply-by-constant 4294967295
add in 2 <92 290202> out 1 <290203>      # 'CmpLT DFG.Input - DFG.Conditional'
split in 1 <290203> out 197 <290204 290205 290206 290207 290208 290209 290210 290211 290212 290213 290214 290215 290216 290217 290218 290219 290220 290221 290222 290223 290224 290225 290226 290227 290228 290229 290230 290231 290232 290233 290234 290235 290236 290237 290238 290239 290240 290241 290242 290243 290244 290245 290246 290247 290248 290249 290250 290251 290252 290253 290254 290255 290256 290257 290258 290259 290260 290261 290262 290263 290264 290265 290266 290267 290268 290269 290270 290271 290272 290273 290274 290275 290276 290277 290278 290279 290280 290281 290282 290283 290284 290285 290286 290287 290288 290289 290290 290291 290292 290293 290294 290295 290296 290297 290298 290299 290300 290301 290302 290303 290304 290305 290306 290307 290308 290309 290310 290311 290312 290313 290314 290315 290316 290317 290318 290319 290320 290321 290322 290323 290324 290325 290326 290327 290328 290329 290330 290331 290332 290333 290334 290335 290336 290337 290338 290339 290340 290341 290342 290343 290344 290345 290346 290347 290348 290349 290350 290351 290352 290353 290354 290355 290356 290357 290358 290359 290360 290361 290362 290363 290364 290365 290366 290367 290368 290369 290370 290371 290372 290373 290374 290375 290376 290377 290378 290379 290380 290381 290382 290383 290384 290385 290386 290387 290388 290389 290390 290391 290392 290393 290394 290395 290396 290397 290398 290399 290400> # SplitBus
mul in 2 <290235 290201> out 1 <290401>  # cond trueterm
const-mul-neg-1 in 1 <290235> out 1 <290402> # cond minuscond
add in 2 <100 290402> out 1 <290403>     # cond negcond
mul in 2 <290403 290198> out 1 <290404>  # cond falseterm
add in 2 <290401 290404> out 1 <290405>  # cond result
mul in 2 <290094 290058> out 1 <290406>  # cond trueterm
const-mul-neg-1 in 1 <290094> out 1 <290407> # cond minuscond
add in 2 <100 290407> out 1 <290408>     # cond negcond
mul in 2 <290408 290055> out 1 <290409>  # cond falseterm
add in 2 <290406 290409> out 1 <290410>  # cond result
mul in 2 <290017 289981> out 1 <290411>  # cond trueterm
const-mul-neg-1 in 1 <290017> out 1 <290412> # cond minuscond
add in 2 <100 290412> out 1 <290413>     # cond negcond
mul in 2 <290413 89> out 1 <290414>      # cond falseterm
add in 2 <290411 290414> out 1 <290415>  # cond result
const-mul-ffffffff in 1 <290415> out 1 <290416> # multiply-by-constant 4294967295
add in 2 <290415 290410> out 1 <290417>  # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
add in 2 <290417 290416> out 1 <290418>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <290418> out 1 <290419> # multiply-by-constant 4294967295
add in 2 <290417 290419> out 1 <290420>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <290415> out 1 <290421> # multiply-by-constant 4294967295
add in 2 <290410 290421> out 1 <290422>  # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <290422> out 132 <290423 290424 290425 290426 290427 290428 290429 290430 290431 290432 290433 290434 290435 290436 290437 290438 290439 290440 290441 290442 290443 290444 290445 290446 290447 290448 290449 290450 290451 290452 290453 290454 290455 290456 290457 290458 290459 290460 290461 290462 290463 290464 290465 290466 290467 290468 290469 290470 290471 290472 290473 290474 290475 290476 290477 290478 290479 290480 290481 290482 290483 290484 290485 290486 290487 290488 290489 290490 290491 290492 290493 290494 290495 290496 290497 290498 290499 290500 290501 290502 290503 290504 290505 290506 290507 290508 290509 290510 290511 290512 290513 290514 290515 290516 290517 290518 290519 290520 290521 290522 290523 290524 290525 290526 290527 290528 290529 290530 290531 290532 290533 290534 290535 290536 290537 290538 290539 290540 290541 290542 290543 290544 290545 290546 290547 290548 290549 290550 290551 290552 290553 290554> # SplitBus
mul in 2 <290454 290420> out 1 <290555>  # cond trueterm
const-mul-neg-1 in 1 <290454> out 1 <290556> # cond minuscond
add in 2 <100 290556> out 1 <290557>     # cond negcond
mul in 2 <290557 290410> out 1 <290558>  # cond falseterm
add in 2 <290555 290558> out 1 <290559>  # cond result
const-mul-ffffffff in 1 <290559> out 1 <290560> # multiply-by-constant 4294967295
add in 2 <290559 290405> out 1 <290561>  # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
add in 2 <290561 290560> out 1 <290562>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <290562> out 1 <290563> # multiply-by-constant 4294967295
add in 2 <290561 290563> out 1 <290564>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <290559> out 1 <290565> # multiply-by-constant 4294967295
add in 2 <290405 290565> out 1 <290566>  # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <290566> out 199 <290567 290568 290569 290570 290571 290572 290573 290574 290575 290576 290577 290578 290579 290580 290581 290582 290583 290584 290585 290586 290587 290588 290589 290590 290591 290592 290593 290594 290595 290596 290597 290598 290599 290600 290601 290602 290603 290604 290605 290606 290607 290608 290609 290610 290611 290612 290613 290614 290615 290616 290617 290618 290619 290620 290621 290622 290623 290624 290625 290626 290627 290628 290629 290630 290631 290632 290633 290634 290635 290636 290637 290638 290639 290640 290641 290642 290643 290644 290645 290646 290647 290648 290649 290650 290651 290652 290653 290654 290655 290656 290657 290658 290659 290660 290661 290662 290663 290664 290665 290666 290667 290668 290669 290670 290671 290672 290673 290674 290675 290676 290677 290678 290679 290680 290681 290682 290683 290684 290685 290686 290687 290688 290689 290690 290691 290692 290693 290694 290695 290696 290697 290698 290699 290700 290701 290702 290703 290704 290705 290706 290707 290708 290709 290710 290711 290712 290713 290714 290715 290716 290717 290718 290719 290720 290721 290722 290723 290724 290725 290726 290727 290728 290729 290730 290731 290732 290733 290734 290735 290736 290737 290738 290739 290740 290741 290742 290743 290744 290745 290746 290747 290748 290749 290750 290751 290752 290753 290754 290755 290756 290757 290758 290759 290760 290761 290762 290763 290764 290765> # SplitBus
mul in 2 <290598 290564> out 1 <290766>  # cond trueterm
const-mul-neg-1 in 1 <290598> out 1 <290767> # cond minuscond
add in 2 <100 290767> out 1 <290768>     # cond negcond
mul in 2 <290768 290405> out 1 <290769>  # cond falseterm
add in 2 <290766 290769> out 1 <290770>  # cond result
const-mul-ffffffff in 1 <290770> out 1 <290771> # multiply-by-constant 4294967295
const-mul-ffffffff in 1 <290201> out 1 <290772> # multiply-by-constant 4294967295
add in 2 <290200 290772> out 1 <290773>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
mul in 2 <290235 290773> out 1 <290774>  # cond trueterm
const-mul-neg-1 in 1 <290235> out 1 <290775> # cond minuscond
add in 2 <100 290775> out 1 <290776>     # cond negcond
mul in 2 <290776 92> out 1 <290777>      # cond falseterm
add in 2 <290774 290777> out 1 <290778>  # cond result
const-mul-ffffffff in 1 <290778> out 1 <290779> # multiply-by-constant 4294967295
add in 2 <290778 93> out 1 <290780>      # ArithBusReq.AddReq(DFG.Conditional,DFG.Input)
split in 1 <290780> out 231 <290781 290782 290783 290784 290785 290786 290787 290788 290789 290790 290791 290792 290793 290794 290795 290796 290797 290798 290799 290800 290801 290802 290803 290804 290805 290806 290807 290808 290809 290810 290811 290812 290813 290814 290815 290816 290817 290818 290819 290820 290821 290822 290823 290824 290825 290826 290827 290828 290829 290830 290831 290832 290833 290834 290835 290836 290837 290838 290839 290840 290841 290842 290843 290844 290845 290846 290847 290848 290849 290850 290851 290852 290853 290854 290855 290856 290857 290858 290859 290860 290861 290862 290863 290864 290865 290866 290867 290868 290869 290870 290871 290872 290873 290874 290875 290876 290877 290878 290879 290880 290881 290882 290883 290884 290885 290886 290887 290888 290889 290890 290891 290892 290893 290894 290895 290896 290897 290898 290899 290900 290901 290902 290903 290904 290905 290906 290907 290908 290909 290910 290911 290912 290913 290914 290915 290916 290917 290918 290919 290920 290921 290922 290923 290924 290925 290926 290927 290928 290929 290930 290931 290932 290933 290934 290935 290936 290937 290938 290939 290940 290941 290942 290943 290944 290945 290946 290947 290948 290949 290950 290951 290952 290953 290954 290955 290956 290957 290958 290959 290960 290961 290962 290963 290964 290965 290966 290967 290968 290969 290970 290971 290972 290973 290974 290975 290976 290977 290978 290979 290980 290981 290982 290983 290984 290985 290986 290987 290988 290989 290990 290991 290992 290993 290994 290995 290996 290997 290998 290999 291000 291001 291002 291003 291004 291005 291006 291007 291008 291009 291010 291011> # SplitBus
const-mul-2 in 1 <290812> out 1 <291012> # join source bit 31
add in 2 <290811 291012> out 1 <291013>  # join source bit 30
const-mul-2 in 1 <291013> out 1 <291014> # join
add in 2 <290810 291014> out 1 <291015>  # join source bit 29
const-mul-2 in 1 <291015> out 1 <291016> # join
add in 2 <290809 291016> out 1 <291017>  # join source bit 28
const-mul-2 in 1 <291017> out 1 <291018> # join
add in 2 <290808 291018> out 1 <291019>  # join source bit 27
const-mul-2 in 1 <291019> out 1 <291020> # join
add in 2 <290807 291020> out 1 <291021>  # join source bit 26
const-mul-2 in 1 <291021> out 1 <291022> # join
add in 2 <290806 291022> out 1 <291023>  # join source bit 25
const-mul-2 in 1 <291023> out 1 <291024> # join
add in 2 <290805 291024> out 1 <291025>  # join source bit 24
const-mul-2 in 1 <291025> out 1 <291026> # join
add in 2 <290804 291026> out 1 <291027>  # join source bit 23
const-mul-2 in 1 <291027> out 1 <291028> # join
add in 2 <290803 291028> out 1 <291029>  # join source bit 22
const-mul-2 in 1 <291029> out 1 <291030> # join
add in 2 <290802 291030> out 1 <291031>  # join source bit 21
const-mul-2 in 1 <291031> out 1 <291032> # join
add in 2 <290801 291032> out 1 <291033>  # join source bit 20
const-mul-2 in 1 <291033> out 1 <291034> # join
add in 2 <290800 291034> out 1 <291035>  # join source bit 19
const-mul-2 in 1 <291035> out 1 <291036> # join
add in 2 <290799 291036> out 1 <291037>  # join source bit 18
const-mul-2 in 1 <291037> out 1 <291038> # join
add in 2 <290798 291038> out 1 <291039>  # join source bit 17
const-mul-2 in 1 <291039> out 1 <291040> # join
add in 2 <290797 291040> out 1 <291041>  # join source bit 16
const-mul-2 in 1 <291041> out 1 <291042> # join
add in 2 <290796 291042> out 1 <291043>  # join source bit 15
const-mul-2 in 1 <291043> out 1 <291044> # join
add in 2 <290795 291044> out 1 <291045>  # join source bit 14
const-mul-2 in 1 <291045> out 1 <291046> # join
add in 2 <290794 291046> out 1 <291047>  # join source bit 13
const-mul-2 in 1 <291047> out 1 <291048> # join
add in 2 <290793 291048> out 1 <291049>  # join source bit 12
const-mul-2 in 1 <291049> out 1 <291050> # join
add in 2 <290792 291050> out 1 <291051>  # join source bit 11
const-mul-2 in 1 <291051> out 1 <291052> # join
add in 2 <290791 291052> out 1 <291053>  # join source bit 10
const-mul-2 in 1 <291053> out 1 <291054> # join
add in 2 <290790 291054> out 1 <291055>  # join source bit 9
const-mul-2 in 1 <291055> out 1 <291056> # join
add in 2 <290789 291056> out 1 <291057>  # join source bit 8
const-mul-2 in 1 <291057> out 1 <291058> # join
add in 2 <290788 291058> out 1 <291059>  # join source bit 7
const-mul-2 in 1 <291059> out 1 <291060> # join
add in 2 <290787 291060> out 1 <291061>  # join source bit 6
const-mul-2 in 1 <291061> out 1 <291062> # join
add in 2 <290786 291062> out 1 <291063>  # join source bit 5
const-mul-2 in 1 <291063> out 1 <291064> # join
add in 2 <290785 291064> out 1 <291065>  # join source bit 4
const-mul-2 in 1 <291065> out 1 <291066> # join
add in 2 <290784 291066> out 1 <291067>  # join source bit 3
const-mul-2 in 1 <291067> out 1 <291068> # join
add in 2 <290783 291068> out 1 <291069>  # join source bit 2
const-mul-2 in 1 <291069> out 1 <291070> # join
add in 2 <290782 291070> out 1 <291071>  # join source bit 1
const-mul-2 in 1 <291071> out 1 <291072> # join
add in 2 <290781 291072> out 1 <291073>  # join source bit 0
add in 2 <291073 291073> out 1 <291074>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <290778> out 1 <291075> # multiply-by-constant 4294967295
add in 2 <93 291075> out 1 <291076>      # 'CmpLT DFG.Input - DFG.Conditional'
split in 1 <291076> out 263 <291077 291078 291079 291080 291081 291082 291083 291084 291085 291086 291087 291088 291089 291090 291091 291092 291093 291094 291095 291096 291097 291098 291099 291100 291101 291102 291103 291104 291105 291106 291107 291108 291109 291110 291111 291112 291113 291114 291115 291116 291117 291118 291119 291120 291121 291122 291123 291124 291125 291126 291127 291128 291129 291130 291131 291132 291133 291134 291135 291136 291137 291138 291139 291140 291141 291142 291143 291144 291145 291146 291147 291148 291149 291150 291151 291152 291153 291154 291155 291156 291157 291158 291159 291160 291161 291162 291163 291164 291165 291166 291167 291168 291169 291170 291171 291172 291173 291174 291175 291176 291177 291178 291179 291180 291181 291182 291183 291184 291185 291186 291187 291188 291189 291190 291191 291192 291193 291194 291195 291196 291197 291198 291199 291200 291201 291202 291203 291204 291205 291206 291207 291208 291209 291210 291211 291212 291213 291214 291215 291216 291217 291218 291219 291220 291221 291222 291223 291224 291225 291226 291227 291228 291229 291230 291231 291232 291233 291234 291235 291236 291237 291238 291239 291240 291241 291242 291243 291244 291245 291246 291247 291248 291249 291250 291251 291252 291253 291254 291255 291256 291257 291258 291259 291260 291261 291262 291263 291264 291265 291266 291267 291268 291269 291270 291271 291272 291273 291274 291275 291276 291277 291278 291279 291280 291281 291282 291283 291284 291285 291286 291287 291288 291289 291290 291291 291292 291293 291294 291295 291296 291297 291298 291299 291300 291301 291302 291303 291304 291305 291306 291307 291308 291309 291310 291311 291312 291313 291314 291315 291316 291317 291318 291319 291320 291321 291322 291323 291324 291325 291326 291327 291328 291329 291330 291331 291332 291333 291334 291335 291336 291337 291338 291339> # SplitBus
mul in 2 <291108 291074> out 1 <291340>  # cond trueterm
const-mul-neg-1 in 1 <291108> out 1 <291341> # cond minuscond
add in 2 <100 291341> out 1 <291342>     # cond negcond
mul in 2 <291342 290778> out 1 <291343>  # cond falseterm
add in 2 <291340 291343> out 1 <291344>  # cond result
add in 2 <290770 291344> out 1 <291345>  # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
split in 1 <291345> out 233 <291346 291347 291348 291349 291350 291351 291352 291353 291354 291355 291356 291357 291358 291359 291360 291361 291362 291363 291364 291365 291366 291367 291368 291369 291370 291371 291372 291373 291374 291375 291376 291377 291378 291379 291380 291381 291382 291383 291384 291385 291386 291387 291388 291389 291390 291391 291392 291393 291394 291395 291396 291397 291398 291399 291400 291401 291402 291403 291404 291405 291406 291407 291408 291409 291410 291411 291412 291413 291414 291415 291416 291417 291418 291419 291420 291421 291422 291423 291424 291425 291426 291427 291428 291429 291430 291431 291432 291433 291434 291435 291436 291437 291438 291439 291440 291441 291442 291443 291444 291445 291446 291447 291448 291449 291450 291451 291452 291453 291454 291455 291456 291457 291458 291459 291460 291461 291462 291463 291464 291465 291466 291467 291468 291469 291470 291471 291472 291473 291474 291475 291476 291477 291478 291479 291480 291481 291482 291483 291484 291485 291486 291487 291488 291489 291490 291491 291492 291493 291494 291495 291496 291497 291498 291499 291500 291501 291502 291503 291504 291505 291506 291507 291508 291509 291510 291511 291512 291513 291514 291515 291516 291517 291518 291519 291520 291521 291522 291523 291524 291525 291526 291527 291528 291529 291530 291531 291532 291533 291534 291535 291536 291537 291538 291539 291540 291541 291542 291543 291544 291545 291546 291547 291548 291549 291550 291551 291552 291553 291554 291555 291556 291557 291558 291559 291560 291561 291562 291563 291564 291565 291566 291567 291568 291569 291570 291571 291572 291573 291574 291575 291576 291577 291578> # SplitBus
const-mul-2 in 1 <291377> out 1 <291579> # join source bit 31
add in 2 <291376 291579> out 1 <291580>  # join source bit 30
const-mul-2 in 1 <291580> out 1 <291581> # join
add in 2 <291375 291581> out 1 <291582>  # join source bit 29
const-mul-2 in 1 <291582> out 1 <291583> # join
add in 2 <291374 291583> out 1 <291584>  # join source bit 28
const-mul-2 in 1 <291584> out 1 <291585> # join
add in 2 <291373 291585> out 1 <291586>  # join source bit 27
const-mul-2 in 1 <291586> out 1 <291587> # join
add in 2 <291372 291587> out 1 <291588>  # join source bit 26
const-mul-2 in 1 <291588> out 1 <291589> # join
add in 2 <291371 291589> out 1 <291590>  # join source bit 25
const-mul-2 in 1 <291590> out 1 <291591> # join
add in 2 <291370 291591> out 1 <291592>  # join source bit 24
const-mul-2 in 1 <291592> out 1 <291593> # join
add in 2 <291369 291593> out 1 <291594>  # join source bit 23
const-mul-2 in 1 <291594> out 1 <291595> # join
add in 2 <291368 291595> out 1 <291596>  # join source bit 22
const-mul-2 in 1 <291596> out 1 <291597> # join
add in 2 <291367 291597> out 1 <291598>  # join source bit 21
const-mul-2 in 1 <291598> out 1 <291599> # join
add in 2 <291366 291599> out 1 <291600>  # join source bit 20
const-mul-2 in 1 <291600> out 1 <291601> # join
add in 2 <291365 291601> out 1 <291602>  # join source bit 19
const-mul-2 in 1 <291602> out 1 <291603> # join
add in 2 <291364 291603> out 1 <291604>  # join source bit 18
const-mul-2 in 1 <291604> out 1 <291605> # join
add in 2 <291363 291605> out 1 <291606>  # join source bit 17
const-mul-2 in 1 <291606> out 1 <291607> # join
add in 2 <291362 291607> out 1 <291608>  # join source bit 16
const-mul-2 in 1 <291608> out 1 <291609> # join
add in 2 <291361 291609> out 1 <291610>  # join source bit 15
const-mul-2 in 1 <291610> out 1 <291611> # join
add in 2 <291360 291611> out 1 <291612>  # join source bit 14
const-mul-2 in 1 <291612> out 1 <291613> # join
add in 2 <291359 291613> out 1 <291614>  # join source bit 13
const-mul-2 in 1 <291614> out 1 <291615> # join
add in 2 <291358 291615> out 1 <291616>  # join source bit 12
const-mul-2 in 1 <291616> out 1 <291617> # join
add in 2 <291357 291617> out 1 <291618>  # join source bit 11
const-mul-2 in 1 <291618> out 1 <291619> # join
add in 2 <291356 291619> out 1 <291620>  # join source bit 10
const-mul-2 in 1 <291620> out 1 <291621> # join
add in 2 <291355 291621> out 1 <291622>  # join source bit 9
const-mul-2 in 1 <291622> out 1 <291623> # join
add in 2 <291354 291623> out 1 <291624>  # join source bit 8
const-mul-2 in 1 <291624> out 1 <291625> # join
add in 2 <291353 291625> out 1 <291626>  # join source bit 7
const-mul-2 in 1 <291626> out 1 <291627> # join
add in 2 <291352 291627> out 1 <291628>  # join source bit 6
const-mul-2 in 1 <291628> out 1 <291629> # join
add in 2 <291351 291629> out 1 <291630>  # join source bit 5
const-mul-2 in 1 <291630> out 1 <291631> # join
add in 2 <291350 291631> out 1 <291632>  # join source bit 4
const-mul-2 in 1 <291632> out 1 <291633> # join
add in 2 <291349 291633> out 1 <291634>  # join source bit 3
const-mul-2 in 1 <291634> out 1 <291635> # join
add in 2 <291348 291635> out 1 <291636>  # join source bit 2
const-mul-2 in 1 <291636> out 1 <291637> # join
add in 2 <291347 291637> out 1 <291638>  # join source bit 1
const-mul-2 in 1 <291638> out 1 <291639> # join
add in 2 <291346 291639> out 1 <291640>  # join source bit 0
add in 2 <291640 291640> out 1 <291641>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <290770> out 1 <291642> # multiply-by-constant 4294967295
add in 2 <291344 291642> out 1 <291643>  # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <291643> out 265 <291644 291645 291646 291647 291648 291649 291650 291651 291652 291653 291654 291655 291656 291657 291658 291659 291660 291661 291662 291663 291664 291665 291666 291667 291668 291669 291670 291671 291672 291673 291674 291675 291676 291677 291678 291679 291680 291681 291682 291683 291684 291685 291686 291687 291688 291689 291690 291691 291692 291693 291694 291695 291696 291697 291698 291699 291700 291701 291702 291703 291704 291705 291706 291707 291708 291709 291710 291711 291712 291713 291714 291715 291716 291717 291718 291719 291720 291721 291722 291723 291724 291725 291726 291727 291728 291729 291730 291731 291732 291733 291734 291735 291736 291737 291738 291739 291740 291741 291742 291743 291744 291745 291746 291747 291748 291749 291750 291751 291752 291753 291754 291755 291756 291757 291758 291759 291760 291761 291762 291763 291764 291765 291766 291767 291768 291769 291770 291771 291772 291773 291774 291775 291776 291777 291778 291779 291780 291781 291782 291783 291784 291785 291786 291787 291788 291789 291790 291791 291792 291793 291794 291795 291796 291797 291798 291799 291800 291801 291802 291803 291804 291805 291806 291807 291808 291809 291810 291811 291812 291813 291814 291815 291816 291817 291818 291819 291820 291821 291822 291823 291824 291825 291826 291827 291828 291829 291830 291831 291832 291833 291834 291835 291836 291837 291838 291839 291840 291841 291842 291843 291844 291845 291846 291847 291848 291849 291850 291851 291852 291853 291854 291855 291856 291857 291858 291859 291860 291861 291862 291863 291864 291865 291866 291867 291868 291869 291870 291871 291872 291873 291874 291875 291876 291877 291878 291879 291880 291881 291882 291883 291884 291885 291886 291887 291888 291889 291890 291891 291892 291893 291894 291895 291896 291897 291898 291899 291900 291901 291902 291903 291904 291905 291906 291907 291908> # SplitBus
mul in 2 <291675 291641> out 1 <291909>  # cond trueterm
const-mul-neg-1 in 1 <291675> out 1 <291910> # cond minuscond
add in 2 <100 291910> out 1 <291911>     # cond negcond
mul in 2 <291911 290770> out 1 <291912>  # cond falseterm
add in 2 <291909 291912> out 1 <291913>  # cond result
mul in 2 <290598 290562> out 1 <291914>  # cond trueterm
const-mul-neg-1 in 1 <290598> out 1 <291915> # cond minuscond
add in 2 <100 291915> out 1 <291916>     # cond negcond
mul in 2 <291916 290559> out 1 <291917>  # cond falseterm
add in 2 <291914 291917> out 1 <291918>  # cond result
mul in 2 <290454 290418> out 1 <291919>  # cond trueterm
const-mul-neg-1 in 1 <290454> out 1 <291920> # cond minuscond
add in 2 <100 291920> out 1 <291921>     # cond negcond
mul in 2 <291921 290415> out 1 <291922>  # cond falseterm
add in 2 <291919 291922> out 1 <291923>  # cond result
const-mul-ffffffff in 1 <291923> out 1 <291924> # multiply-by-constant 4294967295
add in 2 <291923 291918> out 1 <291925>  # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
add in 2 <291925 291924> out 1 <291926>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <291926> out 1 <291927> # multiply-by-constant 4294967295
add in 2 <291925 291927> out 1 <291928>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <291923> out 1 <291929> # multiply-by-constant 4294967295
add in 2 <291918 291929> out 1 <291930>  # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <291930> out 200 <291931 291932 291933 291934 291935 291936 291937 291938 291939 291940 291941 291942 291943 291944 291945 291946 291947 291948 291949 291950 291951 291952 291953 291954 291955 291956 291957 291958 291959 291960 291961 291962 291963 291964 291965 291966 291967 291968 291969 291970 291971 291972 291973 291974 291975 291976 291977 291978 291979 291980 291981 291982 291983 291984 291985 291986 291987 291988 291989 291990 291991 291992 291993 291994 291995 291996 291997 291998 291999 292000 292001 292002 292003 292004 292005 292006 292007 292008 292009 292010 292011 292012 292013 292014 292015 292016 292017 292018 292019 292020 292021 292022 292023 292024 292025 292026 292027 292028 292029 292030 292031 292032 292033 292034 292035 292036 292037 292038 292039 292040 292041 292042 292043 292044 292045 292046 292047 292048 292049 292050 292051 292052 292053 292054 292055 292056 292057 292058 292059 292060 292061 292062 292063 292064 292065 292066 292067 292068 292069 292070 292071 292072 292073 292074 292075 292076 292077 292078 292079 292080 292081 292082 292083 292084 292085 292086 292087 292088 292089 292090 292091 292092 292093 292094 292095 292096 292097 292098 292099 292100 292101 292102 292103 292104 292105 292106 292107 292108 292109 292110 292111 292112 292113 292114 292115 292116 292117 292118 292119 292120 292121 292122 292123 292124 292125 292126 292127 292128 292129 292130> # SplitBus
mul in 2 <291962 291928> out 1 <292131>  # cond trueterm
const-mul-neg-1 in 1 <291962> out 1 <292132> # cond minuscond
add in 2 <100 292132> out 1 <292133>     # cond negcond
mul in 2 <292133 291918> out 1 <292134>  # cond falseterm
add in 2 <292131 292134> out 1 <292135>  # cond result
const-mul-ffffffff in 1 <292135> out 1 <292136> # multiply-by-constant 4294967295
add in 2 <292135 291913> out 1 <292137>  # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
split in 1 <292137> out 235 <292138 292139 292140 292141 292142 292143 292144 292145 292146 292147 292148 292149 292150 292151 292152 292153 292154 292155 292156 292157 292158 292159 292160 292161 292162 292163 292164 292165 292166 292167 292168 292169 292170 292171 292172 292173 292174 292175 292176 292177 292178 292179 292180 292181 292182 292183 292184 292185 292186 292187 292188 292189 292190 292191 292192 292193 292194 292195 292196 292197 292198 292199 292200 292201 292202 292203 292204 292205 292206 292207 292208 292209 292210 292211 292212 292213 292214 292215 292216 292217 292218 292219 292220 292221 292222 292223 292224 292225 292226 292227 292228 292229 292230 292231 292232 292233 292234 292235 292236 292237 292238 292239 292240 292241 292242 292243 292244 292245 292246 292247 292248 292249 292250 292251 292252 292253 292254 292255 292256 292257 292258 292259 292260 292261 292262 292263 292264 292265 292266 292267 292268 292269 292270 292271 292272 292273 292274 292275 292276 292277 292278 292279 292280 292281 292282 292283 292284 292285 292286 292287 292288 292289 292290 292291 292292 292293 292294 292295 292296 292297 292298 292299 292300 292301 292302 292303 292304 292305 292306 292307 292308 292309 292310 292311 292312 292313 292314 292315 292316 292317 292318 292319 292320 292321 292322 292323 292324 292325 292326 292327 292328 292329 292330 292331 292332 292333 292334 292335 292336 292337 292338 292339 292340 292341 292342 292343 292344 292345 292346 292347 292348 292349 292350 292351 292352 292353 292354 292355 292356 292357 292358 292359 292360 292361 292362 292363 292364 292365 292366 292367 292368 292369 292370 292371 292372> # SplitBus
const-mul-2 in 1 <292169> out 1 <292373> # join source bit 31
add in 2 <292168 292373> out 1 <292374>  # join source bit 30
const-mul-2 in 1 <292374> out 1 <292375> # join
add in 2 <292167 292375> out 1 <292376>  # join source bit 29
const-mul-2 in 1 <292376> out 1 <292377> # join
add in 2 <292166 292377> out 1 <292378>  # join source bit 28
const-mul-2 in 1 <292378> out 1 <292379> # join
add in 2 <292165 292379> out 1 <292380>  # join source bit 27
const-mul-2 in 1 <292380> out 1 <292381> # join
add in 2 <292164 292381> out 1 <292382>  # join source bit 26
const-mul-2 in 1 <292382> out 1 <292383> # join
add in 2 <292163 292383> out 1 <292384>  # join source bit 25
const-mul-2 in 1 <292384> out 1 <292385> # join
add in 2 <292162 292385> out 1 <292386>  # join source bit 24
const-mul-2 in 1 <292386> out 1 <292387> # join
add in 2 <292161 292387> out 1 <292388>  # join source bit 23
const-mul-2 in 1 <292388> out 1 <292389> # join
add in 2 <292160 292389> out 1 <292390>  # join source bit 22
const-mul-2 in 1 <292390> out 1 <292391> # join
add in 2 <292159 292391> out 1 <292392>  # join source bit 21
const-mul-2 in 1 <292392> out 1 <292393> # join
add in 2 <292158 292393> out 1 <292394>  # join source bit 20
const-mul-2 in 1 <292394> out 1 <292395> # join
add in 2 <292157 292395> out 1 <292396>  # join source bit 19
const-mul-2 in 1 <292396> out 1 <292397> # join
add in 2 <292156 292397> out 1 <292398>  # join source bit 18
const-mul-2 in 1 <292398> out 1 <292399> # join
add in 2 <292155 292399> out 1 <292400>  # join source bit 17
const-mul-2 in 1 <292400> out 1 <292401> # join
add in 2 <292154 292401> out 1 <292402>  # join source bit 16
const-mul-2 in 1 <292402> out 1 <292403> # join
add in 2 <292153 292403> out 1 <292404>  # join source bit 15
const-mul-2 in 1 <292404> out 1 <292405> # join
add in 2 <292152 292405> out 1 <292406>  # join source bit 14
const-mul-2 in 1 <292406> out 1 <292407> # join
add in 2 <292151 292407> out 1 <292408>  # join source bit 13
const-mul-2 in 1 <292408> out 1 <292409> # join
add in 2 <292150 292409> out 1 <292410>  # join source bit 12
const-mul-2 in 1 <292410> out 1 <292411> # join
add in 2 <292149 292411> out 1 <292412>  # join source bit 11
const-mul-2 in 1 <292412> out 1 <292413> # join
add in 2 <292148 292413> out 1 <292414>  # join source bit 10
const-mul-2 in 1 <292414> out 1 <292415> # join
add in 2 <292147 292415> out 1 <292416>  # join source bit 9
const-mul-2 in 1 <292416> out 1 <292417> # join
add in 2 <292146 292417> out 1 <292418>  # join source bit 8
const-mul-2 in 1 <292418> out 1 <292419> # join
add in 2 <292145 292419> out 1 <292420>  # join source bit 7
const-mul-2 in 1 <292420> out 1 <292421> # join
add in 2 <292144 292421> out 1 <292422>  # join source bit 6
const-mul-2 in 1 <292422> out 1 <292423> # join
add in 2 <292143 292423> out 1 <292424>  # join source bit 5
const-mul-2 in 1 <292424> out 1 <292425> # join
add in 2 <292142 292425> out 1 <292426>  # join source bit 4
const-mul-2 in 1 <292426> out 1 <292427> # join
add in 2 <292141 292427> out 1 <292428>  # join source bit 3
const-mul-2 in 1 <292428> out 1 <292429> # join
add in 2 <292140 292429> out 1 <292430>  # join source bit 2
const-mul-2 in 1 <292430> out 1 <292431> # join
add in 2 <292139 292431> out 1 <292432>  # join source bit 1
const-mul-2 in 1 <292432> out 1 <292433> # join
add in 2 <292138 292433> out 1 <292434>  # join source bit 0
add in 2 <292434 292434> out 1 <292435>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <292435> out 1 <292436> # multiply-by-constant 4294967295
add in 2 <292137 292436> out 1 <292437>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <292135> out 1 <292438> # multiply-by-constant 4294967295
add in 2 <291913 292438> out 1 <292439>  # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <292439> out 267 <292440 292441 292442 292443 292444 292445 292446 292447 292448 292449 292450 292451 292452 292453 292454 292455 292456 292457 292458 292459 292460 292461 292462 292463 292464 292465 292466 292467 292468 292469 292470 292471 292472 292473 292474 292475 292476 292477 292478 292479 292480 292481 292482 292483 292484 292485 292486 292487 292488 292489 292490 292491 292492 292493 292494 292495 292496 292497 292498 292499 292500 292501 292502 292503 292504 292505 292506 292507 292508 292509 292510 292511 292512 292513 292514 292515 292516 292517 292518 292519 292520 292521 292522 292523 292524 292525 292526 292527 292528 292529 292530 292531 292532 292533 292534 292535 292536 292537 292538 292539 292540 292541 292542 292543 292544 292545 292546 292547 292548 292549 292550 292551 292552 292553 292554 292555 292556 292557 292558 292559 292560 292561 292562 292563 292564 292565 292566 292567 292568 292569 292570 292571 292572 292573 292574 292575 292576 292577 292578 292579 292580 292581 292582 292583 292584 292585 292586 292587 292588 292589 292590 292591 292592 292593 292594 292595 292596 292597 292598 292599 292600 292601 292602 292603 292604 292605 292606 292607 292608 292609 292610 292611 292612 292613 292614 292615 292616 292617 292618 292619 292620 292621 292622 292623 292624 292625 292626 292627 292628 292629 292630 292631 292632 292633 292634 292635 292636 292637 292638 292639 292640 292641 292642 292643 292644 292645 292646 292647 292648 292649 292650 292651 292652 292653 292654 292655 292656 292657 292658 292659 292660 292661 292662 292663 292664 292665 292666 292667 292668 292669 292670 292671 292672 292673 292674 292675 292676 292677 292678 292679 292680 292681 292682 292683 292684 292685 292686 292687 292688 292689 292690 292691 292692 292693 292694 292695 292696 292697 292698 292699 292700 292701 292702 292703 292704 292705 292706> # SplitBus
mul in 2 <292471 292437> out 1 <292707>  # cond trueterm
const-mul-neg-1 in 1 <292471> out 1 <292708> # cond minuscond
add in 2 <100 292708> out 1 <292709>     # cond negcond
mul in 2 <292709 291913> out 1 <292710>  # cond falseterm
add in 2 <292707 292710> out 1 <292711>  # cond result
add in 2 <292711 104> out 1 <292712>     # ArithBusReq.AddReq(DFG.Conditional,DFG.Constant)
const-mul-ffffffff in 1 <91> out 1 <292713> # multiply-by-constant 4294967295
add in 2 <292712 292713> out 1 <292714>  # 'CmpLT DFG.Add - DFG.Input'
split in 1 <292714> outplitBus
mul in 2 <292746 103> out 1 <292953>     # cond trueterm
const-mul-neg-1 in 1 <292746> out 1 <292954> # cond minuscond
add in 2 <100 292954> out 1 <292955>     # cond negcond
mul in 2 <292955 102> out 1 <292956>     # cond falseterm
add in 2 <292953 292956> out 1 <292957>  # cond result
add in 2 <292711 3084> out 1 <292958>    # ArithBusReq.AddReq(DFG.Conditional,DFG.Negate)
const-mul-ffffffff in 1 <292958> out 1 <292959> # multiply-by-constant 4294967295
add in 2 <91 292959> out 1 <292960>      # 'CmpLT DFG.Input - DFG.Subtract'
split in 1 <292960> out 270 <292961 292962 292963 292964 292965 292966 292967 292968 292969 292970 292971 292972 292973 292974 292975 292976 292977 292978 292979 292980 292981 292982 292983 292984 292985 292986 292987 292988 292989 292990 292991 292992 292993 292994 292995 292996 292997 292998 292999 293000 293001 293002 293003 293004 293005 293006 293007 293008 293009 293010 293011 293012 293013 293014 293015 293016 293017 293018 293019 293020 293021 293022 293023 293024 293025 293026 293027 293028 293029 293030 293031 293032 293033 293034 293035 293036 293037 293038 293039 293040 293041 293042 293043 293044 293045 293046 293047 293048 293049 293050 293051 293052 293053 293054 293055 293056 293057 293058 293059 293060 293061 293062 293063 293064 293065 293066 293067 293068 293069 293070 293071 293072 293073 293074 293075 293076 293077 293078 293079 293080 293081 293082 293083 293084 293085 293086 293087 293088 293089 293090 293091 293092 293093 293094 293095 293096 293097 293098 293099 293100 293101 293102 293103 293104 293105 293106 293107 293108 293109 293110 293111 293112 293113 293114 293115 293116 293117 293118 293119 293120 293121 293122 293123 293124 293125 293126 293127 293128 293129 293130 293131 293132 293133 293134 293135 293136 293137 293138 293139 293140 293141 293142 293143 293144 293145 293146 293147 293148 293149 293150 293151 293152 293153 293154 293155 293156 293157 293158 293159 293160 293161 293162 293163 293164 293165 293166 293167 293168 293169 293170 293171 293172 293173 293174 293175 293176 293177 293178 293179 293180 293181 293182 293183 293184 293185 293186 293187 293188 293189 293190 293191 293192 293193 293194 293195 293196 293197 293198 293199 293200 293201 293202 293203 293204 293205 293206 293207 293208 293209 293210 293211 293212 293213 293214 293215 293216 293217 293218 293219 293220 293221 293222 293223 293224 293225 293226 293227 293228 293229 293230> # SplitBus
mul in 2 <292992 103> out 1 <293231>     # cond trueterm
const-mul-neg-1 in 1 <292992> out 1 <293232> # cond minuscond
add in 2 <100 293232> out 1 <293233>     # cond negcond
mul in 2 <293233 292957> out 1 <293234>  # cond falseterm
add in 2 <293231 293234> out 1 <293235>  # cond result
const-mul-ffffffff in 1 <90> out 1 <293236> # multiply-by-constant 4294967295
add in 2 <90 91> out 1 <293237>          # ArithBusReq.AddReq(DFG.Input,DFG.Input)
add in 2 <293237 293236> out 1 <293238>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <293238> out 1 <293239> # multiply-by-constant 4294967295
add in 2 <293237 293239> out 1 <293240>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <90> out 1 <293241> # multiply-by-constant 4294967295
add in 2 <91 293241> out 1 <293242>      # 'CmpLT DFG.Input - DFG.Input'
split in 1 <293242> out 65 <293243 293244 293245 293246 293247 293248 293249 293250 293251 293252 293253 293254 293255 293256 293257 293258 293259 293260 293261 293262 293263 293264 293265 293266 293267 293268 293269 293270 293271 293272 293273 293274 293275 293276 293277 293278 293279 293280 293281 293282 293283 293284 293285 293286 293287 293288 293289 293290 293291 293292 293293 293294 293295 293296 293297 293298 293299 293300 293301 293302 293303 293304 293305 293306 293307> # SplitBus
mul in 2 <293274 293240> out 1 <293308>  # cond trueterm
const-mul-neg-1 in 1 <293274> out 1 <293309> # cond minuscond
add in 2 <100 293309> out 1 <293310>     # cond negcond
mul in 2 <293310 91> out 1 <293311>      # cond falseterm
add in 2 <293308 293311> out 1 <293312>  # cond result
const-mul-ffffffff in 1 <293312> out 1 <293313> # multiply-by-constant 4294967295
add in 2 <293312 92> out 1 <293314>      # ArithBusReq.AddReq(DFG.Conditional,DFG.Input)
add in 2 <293314 293313> out 1 <293315>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <293315> out 1 <293316> # multiply-by-constant 4294967295
add in 2 <293314 293316> out 1 <293317>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <293312> out 1 <293318> # multiply-by-constant 4294967295
add in 2 <92 293318> out 1 <293319>      # 'CmpLT DFG.Input - DFG.Conditional'
split in 1 <293319> out 131 <293320 293321 293322 293323 293324 293325 293326 293327 293328 293329 293330 293331 293332 293333 293334 293335 293336 293337 293338 293339 293340 293341 293342 293343 293344 293345 293346 293347 293348 293349 293350 293351 293352 293353 293354 293355 293356 293357 293358 293359 293360 293361 293362 293363 293364 293365 293366 293367 293368 293369 293370 293371 293372 293373 293374 293375 293376 293377 293378 293379 293380 293381 293382 293383 293384 293385 293386 293387 293388 293389 293390 293391 293392 293393 293394 293395 293396 293397 293398 293399 293400 293401 293402 293403 293404 293405 293406 293407 293408 293409 293410 293411 293412 293413 293414 293415 293416 293417 293418 293419 293420 293421 293422 293423 293424 293425 293426 293427 293428 293429 293430 293431 293432 293433 293434 293435 293436 293437 293438 293439 293440 293441 293442 293443 293444 293445 293446 293447 293448 293449 293450> # SplitBus
mul in 2 <293351 293317> out 1 <293451>  # cond trueterm
const-mul-neg-1 in 1 <293351> out 1 <293452> # cond minuscond
add in 2 <100 293452> out 1 <293453>     # cond negcond
mul in 2 <293453 92> out 1 <293454>      # cond falseterm
add in 2 <293451 293454> out 1 <293455>  # cond result
const-mul-ffffffff in 1 <293455> out 1 <293456> # multiply-by-constant 4294967295
add in 2 <293455 93> out 1 <293457>      # ArithBusReq.AddReq(DFG.Conditional,DFG.Input)
add in 2 <293457 293456> out 1 <293458>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <293455> out 1 <293459> # multiply-by-constant 4294967295
add in 2 <93 293459> out 1 <293460>      # 'CmpLT DFG.Input - DFG.Conditional'
split in 1 <293460> out 197 <293461 293462 293463 293464 293465 293466 293467 293468 293469 293470 293471 293472 293473 293474 293475 293476 293477 293478 293479 293480 293481 293482 293483 293484 293485 293486 293487 293488 293489 293490 293491 293492 293493 293494 293495 293496 293497 293498 293499 293500 293501 293502 293503 293504 293505 293506 293507 293508 293509 293510 293511 293512 293513 293514 293515 293516 293517 293518 293519 293520 293521 293522 293523 293524 293525 293526 293527 293528 293529 293530 293531 293532 293533 293534 293535 293536 293537 293538 293539 293540 293541 293542 293543 293544 293545 293546 293547 293548 293549 293550 293551 293552 293553 293554 293555 293556 293557 293558 293559 293560 293561 293562 293563 293564 293565 293566 293567 293568 293569 293570 293571 293572 293573 293574 293575 293576 293577 293578 293579 293580 293581 293582 293583 293584 293585 293586 293587 293588 293589 293590 293591 293592 293593 293594 293595 293596 293597 293598 293599 293600 293601 293602 293603 293604 293605 293606 293607 293608 293609 293610 293611 293612 293613 293614 293615 293616 293617 293618 293619 293620 293621 293622 293623 293624 293625 293626 293627 293628 293629 293630 293631 293632 293633 293634 293635 293636 293637 293638 293639 293640 293641 293642 293643 293644 293645 293646 293647 293648 293649 293650 293651 293652 293653 293654 293655 293656 293657> # SplitBus
mul in 2 <293492 293458> out 1 <293658>  # cond trueterm
const-mul-neg-1 in 1 <293492> out 1 <293659> # cond minuscond
add in 2 <100 293659> out 1 <293660>     # cond negcond
mul in 2 <293660 293455> out 1 <293661>  # cond falseterm
add in 2 <293658 293661> out 1 <293662>  # cond result
mul in 2 <293351 293315> out 1 <293663>  # cond trueterm
const-mul-neg-1 in 1 <293351> out 1 <293664> # cond minuscond
add in 2 <100 293664> out 1 <293665>     # cond negcond
mul in 2 <293665 293312> out 1 <293666>  # cond falseterm
add in 2 <293663 293666> out 1 <293667>  # cond result
mul in 2 <293274 293238> out 1 <293668>  # cond trueterm
const-mul-neg-1 in 1 <293274> out 1 <293669> # cond minuscond
add in 2 <100 293669> out 1 <293670>     # cond negcond
mul in 2 <293670 90> out 1 <293671>      # cond falseterm
add in 2 <293668 293671> out 1 <293672>  # cond result
const-mul-ffffffff in 1 <293672> out 1 <293673> # multiply-by-constant 4294967295
add in 2 <293672 293667> out 1 <293674>  # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
add in 2 <293674 293673> out 1 <293675>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <293675> out 1 <293676> # multiply-by-constant 4294967295
add in 2 <293674 293676> out 1 <293677>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <293672> out 1 <293678> # multiply-by-constant 4294967295
add in 2 <293667 293678> out 1 <293679>  # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <293679> out 132 <293680 293681 293682 293683 293684 293685 293686 293687 293688 293689 293690 293691 293692 293693 293694 293695 293696 293697 293698 293699 293700 293701 293702 293703 293704 293705 293706 293707 293708 293709 293710 293711 293712 293713 293714 293715 293716 293717 293718 293719 293720 293721 293722 293723 293724 293725 293726 293727 293728 293729 293730 293731 293732 293733 293734 293735 293736 293737 293738 293739 293740 293741 293742 293743 293744 293745 293746 293747 293748 293749 293750 293751 293752 293753 293754 293755 293756 293757 293758 293759 293760 293761 293762 293763 293764 293765 293766 293767 293768 293769 293770 293771 293772 293773 293774 293775 293776 293777 293778 293779 293780 293781 293782 293783 293784 293785 293786 293787 293788 293789 293790 293791 293792 293793 293794 293795 293796 293797 293798 293799 293800 293801 293802 293803 293804 293805 293806 293807 293808 293809 293810 293811> # SplitBus
mul in 2 <293711 293677> out 1 <293812>  # cond trueterm
const-mul-neg-1 in 1 <293711> out 1 <293813> # cond minuscond
add in 2 <100 293813> out 1 <293814>     # cond negcond
mul in 2 <293814 293667> out 1 <293815>  # cond falseterm
add in 2 <293812 293815> out 1 <293816>  # cond result
const-mul-ffffffff in 1 <293816> out 1 <293817> # multiply-by-constant 4294967295
add in 2 <293816 293662> out 1 <293818>  # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
add in 2 <293818 293817> out 1 <293819>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <293819> out 1 <293820> # multiply-by-constant 4294967295
add in 2 <293818 293820> out 1 <293821>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <293816> out 1 <293822> # multiply-by-constant 4294967295
add in 2 <293662 293822> out 1 <293823>  # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <293823> out 199 <293824 293825 293826 293827 293828 293829 293830 293831 293832 293833 293834 293835 293836 293837 293838 293839 293840 293841 293842 293843 293844 293845 293846 293847 293848 293849 293850 293851 293852 293853 293854 293855 293856 293857 293858 293859 293860 293861 293862 293863 293864 293865 293866 293867 293868 293869 293870 293871 293872 293873 293874 293875 293876 293877 293878 293879 293880 293881 293882 293883 293884 293885 293886 293887 293888 293889 293890 293891 293892 293893 293894 293895 293896 293897 293898 293899 293900 293901 293902 293903 293904 293905 293906 293907 293908 293909 293910 293911 293912 293913 293914 293915 293916 293917 293918 293919 293920 293921 293922 293923 293924 293925 293926 293927 293928 293929 293930 293931 293932 293933 293934 293935 293936 293937 293938 293939 293940 293941 293942 293943 293944 293945 293946 293947 293948 293949 293950 293951 293952 293953 293954 293955 293956 293957 293958 293959 293960 293961 293962 293963 293964 293965 293966 293967 293968 293969 293970 293971 293972 293973 293974 293975 293976 293977 293978 293979 293980 293981 293982 293983 293984 293985 293986 293987 293988 293989 293990 293991 293992 293993 293994 293995 293996 293997 293998 293999 294000 294001 294002 294003 294004 294005 294006 294007 294008 294009 294010 294011 294012 294013 294014 294015 294016 294017 294018 294019 294020 294021 294022> # SplitBus
mul in 2 <293855 293821> out 1 <294023>  # cond trueterm
const-mul-neg-1 in 1 <293855> out 1 <294024> # cond minuscond
add in 2 <100 294024> out 1 <294025>     # cond negcond
mul in 2 <294025 293662> out 1 <294026>  # cond falseterm
add in 2 <294023 294026> out 1 <294027>  # cond result
const-mul-ffffffff in 1 <294027> out 1 <294028> # multiply-by-constant 4294967295
const-mul-ffffffff in 1 <293458> out 1 <294029> # multiply-by-constant 4294967295
add in 2 <293457 294029> out 1 <294030>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
mul in 2 <293492 294030> out 1 <294031>  # cond trueterm
const-mul-neg-1 in 1 <293492> out 1 <294032> # cond minuscond
add in 2 <100 294032> out 1 <294033>     # cond negcond
mul in 2 <294033 93> out 1 <294034>      # cond falseterm
add in 2 <294031 294034> out 1 <294035>  # cond result
const-mul-ffffffff in 1 <294035> out 1 <294036> # multiply-by-constant 4294967295
add in 2 <294035 94> out 1 <294037>      # ArithBusReq.AddReq(DFG.Conditional,DFG.Input)
split in 1 <294037> out 231 <294038 294039 294040 294041 294042 294043 294044 294045 294046 294047 294048 294049 294050 294051 294052 294053 294054 294055 294056 294057 294058 294059 294060 294061 294062 294063 294064 294065 294066 294067 294068 294069 294070 294071 294072 294073 294074 294075 294076 294077 294078 294079 294080 294081 294082 294083 294084 294085 294086 294087 294088 294089 294090 294091 294092 294093 294094 294095 294096 294097 294098 294099 294100 294101 294102 294103 294104 294105 294106 294107 294108 294109 294110 294111 294112 294113 294114 294115 294116 294117 294118 294119 294120 294121 294122 294123 294124 294125 294126 294127 294128 294129 294130 294131 294132 294133 294134 294135 294136 294137 294138 294139 294140 294141 294142 294143 294144 294145 294146 294147 294148 294149 294150 294151 294152 294153 294154 294155 294156 294157 294158 294159 294160 294161 294162 294163 294164 294165 294166 294167 294168 294169 294170 294171 294172 294173 294174 294175 294176 294177 294178 294179 294180 294181 294182 294183 294184 294185 294186 294187 294188 294189 294190 294191 294192 294193 294194 294195 294196 294197 294198 294199 294200 294201 294202 294203 294204 294205 294206 294207 294208 294209 294210 294211 294212 294213 294214 294215 294216 294217 294218 294219 294220 294221 294222 294223 294224 294225 294226 294227 294228 294229 294230 294231 294232 294233 294234 294235 294236 294237 294238 294239 294240 294241 294242 294243 294244 294245 294246 294247 294248 294249 294250 294251 294252 294253 294254 294255 294256 294257 294258 294259 294260 294261 294262 294263 294264 294265 294266 294267 294268> # SplitBus
const-mul-2 in 1 <294069> out 1 <294269> # join source bit 31
add in 2 <294068 294269> out 1 <294270>  # join source bit 30
const-mul-2 in 1 <294270> out 1 <294271> # join
add in 2 <294067 294271> out 1 <294272>  # join source bit 29
const-mul-2 in 1 <294272> out 1 <294273> # join
add in 2 <294066 294273> out 1 <294274>  # join source bit 28
const-mul-2 in 1 <294274> out 1 <294275> # join
add in 2 <294065 294275> out 1 <294276>  # join source bit 27
const-mul-2 in 1 <294276> out 1 <294277> # join
add in 2 <294064 294277> out 1 <294278>  # join source bit 26
const-mul-2 in 1 <294278> out 1 <294279> # join
add in 2 <294063 294279> out 1 <294280>  # join source bit 25
const-mul-2 in 1 <294280> out 1 <294281> # join
add in 2 <294062 294281> out 1 <294282>  # join source bit 24
const-mul-2 in 1 <294282> out 1 <294283> # join
add in 2 <294061 294283> out 1 <294284>  # join source bit 23
const-mul-2 in 1 <294284> out 1 <294285> # join
add in 2 <294060 294285> out 1 <294286>  # join source bit 22
const-mul-2 in 1 <294286> out 1 <294287> # join
add in 2 <294059 294287> out 1 <294288>  # join source bit 21
const-mul-2 in 1 <294288> out 1 <294289> # join
add in 2 <294058 294289> out 1 <294290>  # join source bit 20
const-mul-2 in 1 <294290> out 1 <294291> # join
add in 2 <294057 294291> out 1 <294292>  # join source bit 19
const-mul-2 in 1 <294292> out 1 <294293> # join
add in 2 <294056 294293> out 1 <294294>  # join source bit 18
const-mul-2 in 1 <294294> out 1 <294295> # join
add in 2 <294055 294295> out 1 <294296>  # join source bit 17
const-mul-2 in 1 <294296> out 1 <294297> # join
add in 2 <294054 294297> out 1 <294298>  # join source bit 16
const-mul-2 in 1 <294298> out 1 <294299> # join
add in 2 <294053 294299> out 1 <294300>  # join source bit 15
const-mul-2 in 1 <294300> out 1 <294301> # join
add in 2 <294052 294301> out 1 <294302>  # join source bit 14
const-mul-2 in 1 <294302> out 1 <294303> # join
add in 2 <294051 294303> out 1 <294304>  # join source bit 13
const-mul-2 in 1 <294304> out 1 <294305> # join
add in 2 <294050 294305> out 1 <294306>  # join source bit 12
const-mul-2 in 1 <294306> out 1 <294307> # join
add in 2 <294049 294307> out 1 <294308>  # join source bit 11
const-mul-2 in 1 <294308> out 1 <294309> # join
add in 2 <294048 294309> out 1 <294310>  # join source bit 10
const-mul-2 in 1 <294310> out 1 <294311> # join
add in 2 <294047 294311> out 1 <294312>  # join source bit 9
const-mul-2 in 1 <294312> out 1 <294313> # join
add in 2 <294046 294313> out 1 <294314>  # join source bit 8
const-mul-2 in 1 <294314> out 1 <294315> # join
add in 2 <294045 294315> out 1 <294316>  # join source bit 7
const-mul-2 in 1 <294316> out 1 <294317> # join
add in 2 <294044 294317> out 1 <294318>  # join source bit 6
const-mul-2 in 1 <294318> out 1 <294319> # join
add in 2 <294043 294319> out 1 <294320>  # join source bit 5
const-mul-2 in 1 <294320> out 1 <294321> # join
add in 2 <294042 294321> out 1 <294322>  # join source bit 4
const-mul-2 in 1 <294322> out 1 <294323> # join
add in 2 <294041 294323> out 1 <294324>  # join source bit 3
const-mul-2 in 1 <294324> out 1 <294325> # join
add in 2 <294040 294325> out 1 <294326>  # join source bit 2
const-mul-2 in 1 <294326> out 1 <294327> # join
add in 2 <294039 294327> out 1 <294328>  # join source bit 1
const-mul-2 in 1 <294328> out 1 <294329> # join
add in 2 <294038 294329> out 1 <294330>  # join source bit 0
add in 2 <294330 294330> out 1 <294331>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <294035> out 1 <294332> # multiply-by-constant 4294967295
add in 2 <94 294332> out 1 <294333>      # 'CmpLT DFG.Input - DFG.Conditional'
split in 1 <294333> outplitBus
mul in 2 <294365 294331> out 1 <294597>  # cond trueterm
const-mul-neg-1 in 1 <294365> out 1 <294598> # cond minuscond
add in 2 <100 294598> out 1 <294599>     # cond negcond
mul in 2 <294599 294035> out 1 <294600>  # cond falseterm
add in 2 <294597 294600> out 1 <294601>  # cond result
add in 2 <294027 294601> out 1 <294602>  # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
split in 1 <294602> outplitBus
const-mul-2 in 1 <294634> out 1 <294836> # join source bit 31
add in 2 <294633 294836> out 1 <294837>  # join source bit 30
const-mul-2 in 1 <294837> out 1 <294838> # join
add in 2 <294632 294838> out 1 <294839>  # join source bit 29
const-mul-2 in 1 <294839> out 1 <294840> # join
add in 2 <294631 294840> out 1 <294841>  # join source bit 28
const-mul-2 in 1 <294841> out 1 <294842> # join
add in 2 <294630 294842> out 1 <294843>  # join source bit 27
const-mul-2 in 1 <294843> out 1 <294844> # join
add in 2 <294629 294844> out 1 <294845>  # join source bit 26
const-mul-2 in 1 <294845> out 1 <294846> # join
add in 2 <294628 294846> out 1 <294847>  # join source bit 25
const-mul-2 in 1 <294847> out 1 <294848> # join
add in 2 <294627 294848> out 1 <294849>  # join source bit 24
const-mul-2 in 1 <294849> out 1 <294850> # join
add in 2 <294626 294850> out 1 <294851>  # join source bit 23
const-mul-2 in 1 <294851> out 1 <294852> # join
add in 2 <294625 294852> out 1 <294853>  # join source bit 22
const-mul-2 in 1 <294853> out 1 <294854> # join
add in 2 <294624 294854> out 1 <294855>  # join source bit 21
const-mul-2 in 1 <294855> out 1 <294856> # join
add in 2 <294623 294856> out 1 <294857>  # join source bit 20
const-mul-2 in 1 <294857> out 1 <294858> # join
add in 2 <294622 294858> out 1 <294859>  # join source bit 19
const-mul-2 in 1 <294859> out 1 <294860> # join
add in 2 <294621 294860> out 1 <294861>  # join source bit 18
const-mul-2 in 1 <294861> out 1 <294862> # join
add in 2 <294620 294862> out 1 <294863>  # join source bit 17
const-mul-2 in 1 <294863> out 1 <294864> # join
add in 2 <294619 294864> out 1 <294865>  # join source bit 16
const-mul-2 in 1 <294865> out 1 <294866> # join
add in 2 <294618 294866> out 1 <294867>  # join source bit 15
const-mul-2 in 1 <294867> out 1 <294868> # join
add in 2 <294617 294868> out 1 <294869>  # join source bit 14
const-mul-2 in 1 <294869> out 1 <294870> # join
add in 2 <294616 294870> out 1 <294871>  # join source bit 13
const-mul-2 in 1 <294871> out 1 <294872> # join
add in 2 <294615 294872> out 1 <294873>  # join source bit 12
const-mul-2 in 1 <294873> out 1 <294874> # join
add in 2 <294614 294874> out 1 <294875>  # join source bit 11
const-mul-2 in 1 <294875> out 1 <294876> # join
add in 2 <294613 294876> out 1 <294877>  # join source bit 10
const-mul-2 in 1 <294877> out 1 <294878> # join
add in 2 <294612 294878> out 1 <294879>  # join source bit 9
const-mul-2 in 1 <294879> out 1 <294880> # join
add in 2 <294611 294880> out 1 <294881>  # join source bit 8
const-mul-2 in 1 <294881> out 1 <294882> # join
add in 2 <294610 294882> out 1 <294883>  # join source bit 7
const-mul-2 in 1 <294883> out 1 <294884> # join
add in 2 <294609 294884> out 1 <294885>  # join source bit 6
const-mul-2 in 1 <294885> out 1 <294886> # join
add in 2 <294608 294886> out 1 <294887>  # join source bit 5
const-mul-2 in 1 <294887> out 1 <294888> # join
add in 2 <294607 294888> out 1 <294889>  # join source bit 4
const-mul-2 in 1 <294889> out 1 <294890> # join
add in 2 <294606 294890> out 1 <294891>  # join source bit 3
const-mul-2 in 1 <294891> out 1 <294892> # join
add in 2 <294605 294892> out 1 <294893>  # join source bit 2
const-mul-2 in 1 <294893> out 1 <294894> # join
add in 2 <294604 294894> out 1 <294895>  # join source bit 1
const-mul-2 in 1 <294895> out 1 <294896> # join
add in 2 <294603 294896> out 1 <294897>  # join source bit 0
add in 2 <294897 294897> out 1 <294898>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <294027> out 1 <294899> # multiply-by-constant 4294967295
add in 2 <294601 294899> out 1 <294900>  # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <294900> outplitBus
mul in 2 <294932 294898> out 1 <295166>  # cond trueterm
const-mul-neg-1 in 1 <294932> out 1 <295167> # cond minuscond
add in 2 <100 295167> out 1 <295168>     # cond negcond
mul in 2 <295168 294027> out 1 <295169>  # cond falseterm
add in 2 <295166 295169> out 1 <295170>  # cond result
mul in 2 <293855 293819> out 1 <295171>  # cond trueterm
const-mul-neg-1 in 1 <293855> out 1 <295172> # cond minuscond
add in 2 <100 295172> out 1 <295173>     # cond negcond
mul in 2 <295173 293816> out 1 <295174>  # cond falseterm
add in 2 <295171 295174> out 1 <295175>  # cond result
mul in 2 <293711 293675> out 1 <295176>  # cond trueterm
const-mul-neg-1 in 1 <293711> out 1 <295177> # cond minuscond
add in 2 <100 295177> out 1 <295178>     # cond negcond
mul in 2 <295178 293672> out 1 <295179>  # cond falseterm
add in 2 <295176 295179> out 1 <295180>  # cond result
const-mul-ffffffff in 1 <295180> out 1 <295181> # multiply-by-constant 4294967295
add in 2 <295180 295175> out 1 <295182>  # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
add in 2 <295182 295181> out 1 <295183>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <295183> out 1 <295184> # multiply-by-constant 4294967295
add in 2 <295182 295184> out 1 <295185>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <295180> out 1 <295186> # multiply-by-constant 4294967295
add in 2 <295175 295186> out 1 <295187>  # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <295187> out 200 <295188 295189 295190 295191 295192 295193 295194 295195 295196 295197 295198 295199 295200 295201 295202 295203 295204 295205 295206 295207 295208 295209 295210 295211 295212 295213 295214 295215 295216 295217 295218 295219 295220 295221 295222 295223 295224 295225 295226 295227 295228 295229 295230 295231 295232 295233 295234 295235 295236 295237 295238 295239 295240 295241 295242 295243 295244 295245 295246 295247 295248 295249 295250 295251 295252 295253 295254 295255 295256 295257 295258 295259 295260 295261 295262 295263 295264 295265 295266 295267 295268 295269 295270 295271 295272 295273 295274 295275 295276 295277 295278 295279 295280 295281 295282 295283 295284 295285 295286 295287 295288 295289 295290 295291 295292 295293 295294 295295 295296 295297 295298 295299 295300 295301 295302 295303 295304 295305 295306 295307 295308 295309 295310 295311 295312 295313 295314 295315 295316 295317 295318 295319 295320 295321 295322 295323 295324 295325 295326 295327 295328 295329 295330 295331 295332 295333 295334 295335 295336 295337 295338 295339 295340 295341 295342 295343 295344 295345 295346 295347 295348 295349 295350 295351 295352 295353 295354 295355 295356 295357 295358 295359 295360 295361 295362 295363 295364 295365 295366 295367 295368 295369 295370 295371 295372 295373 295374 295375 295376 295377 295378 295379 295380 295381 295382 295383 295384 295385 295386 295387> # SplitBus
mul in 2 <295219 295185> out 1 <295388>  # cond trueterm
const-mul-neg-1 in 1 <295219> out 1 <295389> # cond minuscond
add in 2 <100 295389> out 1 <295390>     # cond negcond
mul in 2 <295390 295175> out 1 <295391>  # cond falseterm
add in 2 <295388 295391> out 1 <295392>  # cond result
const-mul-ffffffff in 1 <295392> out 1 <295393> # multiply-by-constant 4294967295
add in 2 <295392 295170> out 1 <295394>  # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
split in 1 <295394> outplitBus
const-mul-2 in 1 <295426> out 1 <295630> # join source bit 31
add in 2 <295425 295630> out 1 <295631>  # join source bit 30
const-mul-2 in 1 <295631> out 1 <295632> # join
add in 2 <295424 295632> out 1 <295633>  # join source bit 29
const-mul-2 in 1 <295633> out 1 <295634> # join
add in 2 <295423 295634> out 1 <295635>  # join source bit 28
const-mul-2 in 1 <295635> out 1 <295636> # join
add in 2 <295422 295636> out 1 <295637>  # join source bit 27
const-mul-2 in 1 <295637> out 1 <295638> # join
add in 2 <295421 295638> out 1 <295639>  # join source bit 26
const-mul-2 in 1 <295639> out 1 <295640> # join
add in 2 <295420 295640> out 1 <295641>  # join source bit 25
const-mul-2 in 1 <295641> out 1 <295642> # join
add in 2 <295419 295642> out 1 <295643>  # join source bit 24
const-mul-2 in 1 <295643> out 1 <295644> # join
add in 2 <295418 295644> out 1 <295645>  # join source bit 23
const-mul-2 in 1 <295645> out 1 <295646> # join
add in 2 <295417 295646> out 1 <295647>  # join source bit 22
const-mul-2 in 1 <295647> out 1 <295648> # join
add in 2 <295416 295648> out 1 <295649>  # join source bit 21
const-mul-2 in 1 <295649> out 1 <295650> # join
add in 2 <295415 295650> out 1 <295651>  # join source bit 20
const-mul-2 in 1 <295651> out 1 <295652> # join
add in 2 <295414 295652> out 1 <295653>  # join source bit 19
const-mul-2 in 1 <295653> out 1 <295654> # join
add in 2 <295413 295654> out 1 <295655>  # join source bit 18
const-mul-2 in 1 <295655> out 1 <295656> # join
add in 2 <295412 295656> out 1 <295657>  # join source bit 17
const-mul-2 in 1 <295657> out 1 <295658> # join
add in 2 <295411 295658> out 1 <295659>  # join source bit 16
const-mul-2 in 1 <295659> out 1 <295660> # join
add in 2 <295410 295660> out 1 <295661>  # join source bit 15
const-mul-2 in 1 <295661> out 1 <295662> # join
add in 2 <295409 295662> out 1 <295663>  # join source bit 14
const-mul-2 in 1 <295663> out 1 <295664> # join
add in 2 <295408 295664> out 1 <295665>  # join source bit 13
const-mul-2 in 1 <295665> out 1 <295666> # join
add in 2 <295407 295666> out 1 <295667>  # join source bit 12
const-mul-2 in 1 <295667> out 1 <295668> # join
add in 2 <295406 295668> out 1 <295669>  # join source bit 11
const-mul-2 in 1 <295669> out 1 <295670> # join
add in 2 <295405 295670> out 1 <295671>  # join source bit 10
const-mul-2 in 1 <295671> out 1 <295672> # join
add in 2 <295404 295672> out 1 <295673>  # join source bit 9
const-mul-2 in 1 <295673> out 1 <295674> # join
add in 2 <295403 295674> out 1 <295675>  # join source bit 8
const-mul-2 in 1 <295675> out 1 <295676> # join
add in 2 <295402 295676> out 1 <295677>  # join source bit 7
const-mul-2 in 1 <295677> out 1 <295678> # join
add in 2 <295401 295678> out 1 <295679>  # join source bit 6
const-mul-2 in 1 <295679> out 1 <295680> # join
add in 2 <295400 295680> out 1 <295681>  # join source bit 5
const-mul-2 in 1 <295681> out 1 <295682> # join
add in 2 <295399 295682> out 1 <295683>  # join source bit 4
const-mul-2 in 1 <295683> out 1 <295684> # join
add in 2 <295398 295684> out 1 <295685>  # join source bit 3
const-mul-2 in 1 <295685> out 1 <295686> # join
add in 2 <295397 295686> out 1 <295687>  # join source bit 2
const-mul-2 in 1 <295687> out 1 <295688> # join
add in 2 <295396 295688> out 1 <295689>  # join source bit 1
const-mul-2 in 1 <295689> out 1 <295690> # join
add in 2 <295395 295690> out 1 <295691>  # join source bit 0
add in 2 <295691 295691> out 1 <295692>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <295692> out 1 <295693> # multiply-by-constant 4294967295
add in 2 <295394 295693> out 1 <295694>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <295392> out 1 <295695> # multiply-by-constant 4294967295
add in 2 <295170 295695> out 1 <295696>  # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <295696> outplitBus
mul in 2 <295728 295694> out 1 <295964>  # cond trueterm
const-mul-neg-1 in 1 <295728> out 1 <295965> # cond minuscond
add in 2 <100 295965> out 1 <295966>     # cond negcond
mul in 2 <295966 295170> out 1 <295967>  # cond falseterm
add in 2 <295964 295967> out 1 <295968>  # cond result
add in 2 <295968 104> out 1 <295969>     # ArithBusReq.AddReq(DFG.Conditional,DFG.Constant)
const-mul-ffffffff in 1 <92> out 1 <295970> # multiply-by-constant 4294967295
add in 2 <295969 295970> out 1 <295971>  # 'CmpLT DFG.Add - DFG.Input'
split in 1 <295971> out 238 <295972 295973 295974 295975 295976 295977 295978 295979 295980 295981 295982 295983 295984 295985 295986 295987 295988 295989 295990 295991 295992 295993 295994 295995 295996 295997 295998 295999 296000 296001 296002 296003 296004 296005 296006 296007 296008 296009 296010 296011 296012 296013 296014 296015 296016 296017 296018 296019 296020 296021 296022 296023 296024 296025 296026 296027 296028 296029 296030 296031 296032 296033 296034 296035 296036 296037 296038 296039 296040 296041 296042 296043 296044 296045 296046 296047 296048 296049 296050 296051 296052 296053 296054 296055 296056 296057 296058 296059 296060 296061 296062 296063 296064 296065 296066 296067 296068 296069 296070 296071 296072 296073 296074 296075 296076 296077 296078 296079 296080 296081 296082 296083 296084 296085 296086 296087 296088 296089 296090 296091 296092 296093 296094 296095 296096 296097 296098 296099 296100 296101 296102 296103 296104 296105 296106 296107 296108 296109 296110 296111 296112 296113 296114 296115 296116 296117 296118 296119 296120 296121 296122 296123 296124 296125 296126 296127 296128 296129 296130 296131 296132 296133 296134 296135 296136 296137 296138 296139 296140 296141 296142 296143 296144 296145 296146 296147 296148 296149 296150 296151 296152 296153 296154 296155 296156 296157 296158 296159 296160 296161 296162 296163 296164 296165 296166 296167 296168 296169 296170 296171 296172 296173 296174 296175 296176 296177 296178 296179 296180 296181 296182 296183 296184 296185 296186 296187 296188 296189 296190 296191 296192 296193 296194 296195 296196 296197 296198 296199 296200 296201 296202 296203 296204 296205 296206 296207 296208 296209> # SplitBus
mul in 2 <296003 103> out 1 <296210>     # cond trueterm
const-mul-neg-1 in 1 <296003> out 1 <296211> # cond minuscond
add in 2 <100 296211> out 1 <296212>     # cond negcond
mul in 2 <296212 102> out 1 <296213>     # cond falseterm
add in 2 <296210 296213> out 1 <296214>  # cond result
add in 2 <295968 3084> out 1 <296215>    # ArithBusReq.AddReq(DFG.Conditional,DFG.Negate)
const-mul-ffffffff in 1 <296215> out 1 <296216> # multiply-by-constant 4294967295
add in 2 <92 296216> out 1 <296217>      # 'CmpLT DFG.Input - DFG.Subtract'
split in 1 <296217> outplitBus
mul in 2 <296249 103> out 1 <296488>     # cond trueterm
const-mul-neg-1 in 1 <296249> out 1 <296489> # cond minuscond
add in 2 <100 296489> out 1 <296490>     # cond negcond
mul in 2 <296490 296214> out 1 <296491>  # cond falseterm
add in 2 <296488 296491> out 1 <296492>  # cond result
const-mul-ffffffff in 1 <91> out 1 <296493> # multiply-by-constant 4294967295
add in 2 <91 92> out 1 <296494>          # ArithBusReq.AddReq(DFG.Input,DFG.Input)
add in 2 <296494 296493> out 1 <296495>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <296495> out 1 <296496> # multiply-by-constant 4294967295
add in 2 <296494 296496> out 1 <296497>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <91> out 1 <296498> # multiply-by-constant 4294967295
add in 2 <92 296498> out 1 <296499>      # 'CmpLT DFG.Input - DFG.Input'
split in 1 <296499> out 65 <296500 296501 296502 296503 296504 296505 296506 296507 296508 296509 296510 296511 296512 296513 296514 296515 296516 296517 296518 296519 296520 296521 296522 296523 296524 296525 296526 296527 296528 296529 296530 296531 296532 296533 296534 296535 296536 296537 296538 296539 296540 296541 296542 296543 296544 296545 296546 296547 296548 296549 296550 296551 296552 296553 296554 296555 296556 296557 296558 296559 296560 296561 296562 296563 296564> # SplitBus
mul in 2 <296531 296497> out 1 <296565>  # cond trueterm
const-mul-neg-1 in 1 <296531> out 1 <296566> # cond minuscond
add in 2 <100 296566> out 1 <296567>     # cond negcond
mul in 2 <296567 92> out 1 <296568>      # cond falseterm
add in 2 <296565 296568> out 1 <296569>  # cond result
const-mul-ffffffff in 1 <296569> out 1 <296570> # multiply-by-constant 4294967295
add in 2 <296569 93> out 1 <296571>      # ArithBusReq.AddReq(DFG.Conditional,DFG.Input)
add in 2 <296571 296570> out 1 <296572>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <296572> out 1 <296573> # multiply-by-constant 4294967295
add in 2 <296571 296573> out 1 <296574>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <296569> out 1 <296575> # multiply-by-constant 4294967295
add in 2 <93 296575> out 1 <296576>      # 'CmpLT DFG.Input - DFG.Conditional'
split in 1 <296576> out 131 <296577 296578 296579 296580 296581 296582 296583 296584 296585 296586 296587 296588 296589 296590 296591 296592 296593 296594 296595 296596 296597 296598 296599 296600 296601 296602 296603 296604 296605 296606 296607 296608 296609 296610 296611 296612 296613 296614 296615 296616 296617 296618 296619 296620 296621 296622 296623 296624 296625 296626 296627 296628 296629 296630 296631 296632 296633 296634 296635 296636 296637 296638 296639 296640 296641 296642 296643 296644 296645 296646 296647 296648 296649 296650 296651 296652 296653 296654 296655 296656 296657 296658 296659 296660 296661 296662 296663 296664 296665 296666 296667 296668 296669 296670 296671 296672 296673 296674 296675 296676 296677 296678 296679 296680 296681 296682 296683 296684 296685 296686 296687 296688 296689 296690 296691 296692 296693 296694 296695 296696 296697 296698 296699 296700 296701 296702 296703 296704 296705 296706 296707> # SplitBus
mul in 2 <296608 296574> out 1 <296708>  # cond trueterm
const-mul-neg-1 in 1 <296608> out 1 <296709> # cond minuscond
add in 2 <100 296709> out 1 <296710>     # cond negcond
mul in 2 <296710 93> out 1 <296711>      # cond falseterm
add in 2 <296708 296711> out 1 <296712>  # cond result
const-mul-ffffffff in 1 <296712> out 1 <296713> # multiply-by-constant 4294967295
add in 2 <296712 94> out 1 <296714>      # ArithBusReq.AddReq(DFG.Conditional,DFG.Input)
add in 2 <296714 296713> out 1 <296715>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <296712> out 1 <296716> # multiply-by-constant 4294967295
add in 2 <94 296716> out 1 <296717>      # 'CmpLT DFG.Input - DFG.Conditional'
split in 1 <296717> out 197 <296718 296719 296720 296721 296722 296723 296724 296725 296726 296727 296728 296729 296730 296731 296732 296733 296734 296735 296736 296737 296738 296739 296740 296741 296742 296743 296744 296745 296746 296747 296748 296749 296750 296751 296752 296753 296754 296755 296756 296757 296758 296759 296760 296761 296762 296763 296764 296765 296766 296767 296768 296769 296770 296771 296772 296773 296774 296775 296776 296777 296778 296779 296780 296781 296782 296783 296784 296785 296786 296787 296788 296789 296790 296791 296792 296793 296794 296795 296796 296797 296798 296799 296800 296801 296802 296803 296804 296805 296806 296807 296808 296809 296810 296811 296812 296813 296814 296815 296816 296817 296818 296819 296820 296821 296822 296823 296824 296825 296826 296827 296828 296829 296830 296831 296832 296833 296834 296835 296836 296837 296838 296839 296840 296841 296842 296843 296844 296845 296846 296847 296848 296849 296850 296851 296852 296853 296854 296855 296856 296857 296858 296859 296860 296861 296862 296863 296864 296865 296866 296867 296868 296869 296870 296871 296872 296873 296874 296875 296876 296877 296878 296879 296880 296881 296882 296883 296884 296885 296886 296887 296888 296889 296890 296891 296892 296893 296894 296895 296896 296897 296898 296899 296900 296901 296902 296903 296904 296905 296906 296907 296908 296909 296910 296911 296912 296913 296914> # SplitBus
mul in 2 <296749 296715> out 1 <296915>  # cond trueterm
const-mul-neg-1 in 1 <296749> out 1 <296916> # cond minuscond
add in 2 <100 296916> out 1 <296917>     # cond negcond
mul in 2 <296917 296712> out 1 <296918>  # cond falseterm
add in 2 <296915 296918> out 1 <296919>  # cond result
mul in 2 <296608 296572> out 1 <296920>  # cond trueterm
const-mul-neg-1 in 1 <296608> out 1 <296921> # cond minuscond
add in 2 <100 296921> out 1 <296922>     # cond negcond
mul in 2 <296922 296569> out 1 <296923>  # cond falseterm
add in 2 <296920 296923> out 1 <296924>  # cond result
mul in 2 <296531 296495> out 1 <296925>  # cond trueterm
const-mul-neg-1 in 1 <296531> out 1 <296926> # cond minuscond
add in 2 <100 296926> out 1 <296927>     # cond negcond
mul in 2 <296927 91> out 1 <296928>      # cond falseterm
add in 2 <296925 296928> out 1 <296929>  # cond result
const-mul-ffffffff in 1 <296929> out 1 <296930> # multiply-by-constant 4294967295
add in 2 <296929 296924> out 1 <296931>  # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
add in 2 <296931 296930> out 1 <296932>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <296932> out 1 <296933> # multiply-by-constant 4294967295
add in 2 <296931 296933> out 1 <296934>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <296929> out 1 <296935> # multiply-by-constant 4294967295
add in 2 <296924 296935> out 1 <296936>  # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <296936> out 132 <296937 296938 296939 296940 296941 296942 296943 296944 296945 296946 296947 296948 296949 296950 296951 296952 296953 296954 296955 296956 296957 296958 296959 296960 296961 296962 296963 296964 296965 296966 296967 296968 296969 296970 296971 296972 296973 296974 296975 296976 296977 296978 296979 296980 296981 296982 296983 296984 296985 296986 296987 296988 296989 296990 296991 296992 296993 296994 296995 296996 296997 296998 296999 297000 297001 297002 297003 297004 297005 297006 297007 297008 297009 297010 297011 297012 297013 297014 297015 297016 297017 297018 297019 297020 297021 297022 297023 297024 297025 297026 297027 297028 297029 297030 297031 297032 297033 297034 297035 297036 297037 297038 297039 297040 297041 297042 297043 297044 297045 297046 297047 297048 297049 297050 297051 297052 297053 297054 297055 297056 297057 297058 297059 297060 297061 297062 297063 297064 297065 297066 297067 297068> # SplitBus
mul in 2 <296968 296934> out 1 <297069>  # cond trueterm
const-mul-neg-1 in 1 <296968> out 1 <297070> # cond minuscond
add in 2 <100 297070> out 1 <297071>     # cond negcond
mul in 2 <297071 296924> out 1 <297072>  # cond falseterm
add in 2 <297069 297072> out 1 <297073>  # cond result
const-mul-ffffffff in 1 <297073> out 1 <297074> # multiply-by-constant 4294967295
add in 2 <297073 296919> out 1 <297075>  # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
add in 2 <297075 297074> out 1 <297076>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <297076> out 1 <297077> # multiply-by-constant 4294967295
add in 2 <297075 297077> out 1 <297078>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <297073> out 1 <297079> # multiply-by-constant 4294967295
add in 2 <296919 297079> out 1 <297080>  # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <297080> out 199 <297081 297082 297083 297084 297085 297086 297087 297088 297089 297090 297091 297092 297093 297094 297095 297096 297097 297098 297099 297100 297101 297102 297103 297104 297105 297106 297107 297108 297109 297110 297111 297112 297113 297114 297115 297116 297117 297118 297119 297120 297121 297122 297123 297124 297125 297126 297127 297128 297129 297130 297131 297132 297133 297134 297135 297136 297137 297138 297139 297140 297141 297142 297143 297144 297145 297146 297147 297148 297149 297150 297151 297152 297153 297154 297155 297156 297157 297158 297159 297160 297161 297162 297163 297164 297165 297166 297167 297168 297169 297170 297171 297172 297173 297174 297175 297176 297177 297178 297179 297180 297181 297182 297183 297184 297185 297186 297187 297188 297189 297190 297191 297192 297193 297194 297195 297196 297197 297198 297199 297200 297201 297202 297203 297204 297205 297206 297207 297208 297209 297210 297211 297212 297213 297214 297215 297216 297217 297218 297219 297220 297221 297222 297223 297224 297225 297226 297227 297228 297229 297230 297231 297232 297233 297234 297235 297236 297237 297238 297239 297240 297241 297242 297243 297244 297245 297246 297247 297248 297249 297250 297251 297252 297253 297254 297255 297256 297257 297258 297259 297260 297261 297262 297263 297264 297265 297266 297267 297268 297269 297270 297271 297272 297273 297274 297275 297276 297277 297278 297279> # SplitBus
mul in 2 <297112 297078> out 1 <297280>  # cond trueterm
const-mul-neg-1 in 1 <297112> out 1 <297281> # cond minuscond
add in 2 <100 297281> out 1 <297282>     # cond negcond
mul in 2 <297282 296919> out 1 <297283>  # cond falseterm
add in 2 <297280 297283> out 1 <297284>  # cond result
const-mul-ffffffff in 1 <297284> out 1 <297285> # multiply-by-constant 4294967295
const-mul-ffffffff in 1 <296715> out 1 <297286> # multiply-by-constant 4294967295
add in 2 <296714 297286> out 1 <297287>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
mul in 2 <296749 297287> out 1 <297288>  # cond trueterm
const-mul-neg-1 in 1 <296749> out 1 <297289> # cond minuscond
add in 2 <100 297289> out 1 <297290>     # cond negcond
mul in 2 <297290 94> out 1 <297291>      # cond falseterm
add in 2 <297288 297291> out 1 <297292>  # cond result
const-mul-ffffffff in 1 <297292> out 1 <297293> # multiply-by-constant 4294967295
add in 2 <297292 95> out 1 <297294>      # ArithBusReq.AddReq(DFG.Conditional,DFG.Input)
split in 1 <297294> outplitBus
const-mul-2 in 1 <297326> out 1 <297526> # join source bit 31
add in 2 <297325 297526> out 1 <297527>  # join source bit 30
const-mul-2 in 1 <297527> out 1 <297528> # join
add in 2 <297324 297528> out 1 <297529>  # join source bit 29
const-mul-2 in 1 <297529> out 1 <297530> # join
add in 2 <297323 297530> out 1 <297531>  # join source bit 28
const-mul-2 in 1 <297531> out 1 <297532> # join
add in 2 <297322 297532> out 1 <297533>  # join source bit 27
const-mul-2 in 1 <297533> out 1 <297534> # join
add in 2 <297321 297534> out 1 <297535>  # join source bit 26
const-mul-2 in 1 <297535> out 1 <297536> # join
add in 2 <297320 297536> out 1 <297537>  # join source bit 25
const-mul-2 in 1 <297537> out 1 <297538> # join
add in 2 <297319 297538> out 1 <297539>  # join source bit 24
const-mul-2 in 1 <297539> out 1 <297540> # join
add in 2 <297318 297540> out 1 <297541>  # join source bit 23
const-mul-2 in 1 <297541> out 1 <297542> # join
add in 2 <297317 297542> out 1 <297543>  # join source bit 22
const-mul-2 in 1 <297543> out 1 <297544> # join
add in 2 <297316 297544> out 1 <297545>  # join source bit 21
const-mul-2 in 1 <297545> out 1 <297546> # join
add in 2 <297315 297546> out 1 <297547>  # join source bit 20
const-mul-2 in 1 <297547> out 1 <297548> # join
add in 2 <297314 297548> out 1 <297549>  # join source bit 19
const-mul-2 in 1 <297549> out 1 <297550> # join
add in 2 <297313 297550> out 1 <297551>  # join source bit 18
const-mul-2 in 1 <297551> out 1 <297552> # join
add in 2 <297312 297552> out 1 <297553>  # join source bit 17
const-mul-2 in 1 <297553> out 1 <297554> # join
add in 2 <297311 297554> out 1 <297555>  # join source bit 16
const-mul-2 in 1 <297555> out 1 <297556> # join
add in 2 <297310 297556> out 1 <297557>  # join source bit 15
const-mul-2 in 1 <297557> out 1 <297558> # join
add in 2 <297309 297558> out 1 <297559>  # join source bit 14
const-mul-2 in 1 <297559> out 1 <297560> # join
add in 2 <297308 297560> out 1 <297561>  # join source bit 13
const-mul-2 in 1 <297561> out 1 <297562> # join
add in 2 <297307 297562> out 1 <297563>  # join source bit 12
const-mul-2 in 1 <297563> out 1 <297564> # join
add in 2 <297306 297564> out 1 <297565>  # join source bit 11
const-mul-2 in 1 <297565> out 1 <297566> # join
add in 2 <297305 297566> out 1 <297567>  # join source bit 10
const-mul-2 in 1 <297567> out 1 <297568> # join
add in 2 <297304 297568> out 1 <297569>  # join source bit 9
const-mul-2 in 1 <297569> out 1 <297570> # join
add in 2 <297303 297570> out 1 <297571>  # join source bit 8
const-mul-2 in 1 <297571> out 1 <297572> # join
add in 2 <297302 297572> out 1 <297573>  # join source bit 7
const-mul-2 in 1 <297573> out 1 <297574> # join
add in 2 <297301 297574> out 1 <297575>  # join source bit 6
const-mul-2 in 1 <297575> out 1 <297576> # join
add in 2 <297300 297576> out 1 <297577>  # join source bit 5
const-mul-2 in 1 <297577> out 1 <297578> # join
add in 2 <297299 297578> out 1 <297579>  # join source bit 4
const-mul-2 in 1 <297579> out 1 <297580> # join
add in 2 <297298 297580> out 1 <297581>  # join source bit 3
const-mul-2 in 1 <297581> out 1 <297582> # join
add in 2 <297297 297582> out 1 <297583>  # join source bit 2
const-mul-2 in 1 <297583> out 1 <297584> # join
add in 2 <297296 297584> out 1 <297585>  # join source bit 1
const-mul-2 in 1 <297585> out 1 <297586> # join
add in 2 <297295 297586> out 1 <297587>  # join source bit 0
add in 2 <297587 297587> out 1 <297588>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <297292> out 1 <297589> # multiply-by-constant 4294967295
add in 2 <95 297589> out 1 <297590>      # 'CmpLT DFG.Input - DFG.Conditional'
split in 1 <297590> out 263 <297591 297592 297593 297594 297595 297596 297597 297598 297599 297600 297601 297602 297603 297604 297605 297606 297607 297608 297609 297610 297611 297612 297613 297614 297615 297616 297617 297618 297619 297620 297621 297622 297623 297624 297625 297626 297627 297628 297629 297630 297631 297632 297633 297634 297635 297636 297637 297638 297639 297640 297641 297642 297643 297644 297645 297646 297647 297648 297649 297650 297651 297652 297653 297654 297655 297656 297657 297658 297659 297660 297661 297662 297663 297664 297665 297666 297667 297668 297669 297670 297671 297672 297673 297674 297675 297676 297677 297678 297679 297680 297681 297682 297683 297684 297685 297686 297687 297688 297689 297690 297691 297692 297693 297694 297695 297696 297697 297698 297699 297700 297701 297702 297703 297704 297705 297706 297707 297708 297709 297710 297711 297712 297713 297714 297715 297716 297717 297718 297719 297720 297721 297722 297723 297724 297725 297726 297727 297728 297729 297730 297731 297732 297733 297734 297735 297736 297737 297738 297739 297740 297741 297742 297743 297744 297745 297746 297747 297748 297749 297750 297751 297752 297753 297754 297755 297756 297757 297758 297759 297760 297761 297762 297763 297764 297765 297766 297767 297768 297769 297770 297771 297772 297773 297774 297775 297776 297777 297778 297779 297780 297781 297782 297783 297784 297785 297786 297787 297788 297789 297790 297791 297792 297793 297794 297795 297796 297797 297798 297799 297800 297801 297802 297803 297804 297805 297806 297807 297808 297809 297810 297811 297812 297813 297814 297815 297816 297817 297818 297819 297820 297821 297822 297823 297824 297825 297826 297827 297828 297829 297830 297831 297832 297833 297834 297835 297836 297837 297838 297839 297840 297841 297842 297843 297844 297845 297846 297847 297848 297849 297850 297851 297852 297853> # SplitBus
mul in 2 <297622 297588> out 1 <297854>  # cond trueterm
const-mul-neg-1 in 1 <297622> out 1 <297855> # cond minuscond
add in 2 <100 297855> out 1 <297856>     # cond negcond
mul in 2 <297856 297292> out 1 <297857>  # cond falseterm
add in 2 <297854 297857> out 1 <297858>  # cond result
add in 2 <297284 297858> out 1 <297859>  # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
split in 1 <297859> out 233 <297860 297861 297862 297863 297864 297865 297866 297867 297868 297869 297870 297871 297872 297873 297874 297875 297876 297877 297878 297879 297880 297881 297882 297883 297884 297885 297886 297887 297888 297889 297890 297891 297892 297893 297894 297895 297896 297897 297898 297899 297900 297901 297902 297903 297904 297905 297906 297907 297908 297909 297910 297911 297912 297913 297914 297915 297916 297917 297918 297919 297920 297921 297922 297923 297924 297925 297926 297927 297928 297929 297930 297931 297932 297933 297934 297935 297936 297937 297938 297939 297940 297941 297942 297943 297944 297945 297946 297947 297948 297949 297950 297951 297952 297953 297954 297955 297956 297957 297958 297959 297960 297961 297962 297963 297964 297965 297966 297967 297968 297969 297970 297971 297972 297973 297974 297975 297976 297977 297978 297979 297980 297981 297982 297983 297984 297985 297986 297987 297988 297989 297990 297991 297992 297993 297994 297995 297996 297997 297998 297999 298000 298001 298002 298003 298004 298005 298006 298007 298008 298009 298010 298011 298012 298013 298014 298015 298016 298017 298018 298019 298020 298021 298022 298023 298024 298025 298026 298027 298028 298029 298030 298031 298032 298033 298034 298035 298036 298037 298038 298039 298040 298041 298042 298043 298044 298045 298046 298047 298048 298049 298050 298051 298052 298053 298054 298055 298056 298057 298058 298059 298060 298061 298062 298063 298064 298065 298066 298067 298068 298069 298070 298071 298072 298073 298074 298075 298076 298077 298078 298079 298080 298081 298082 298083 298084 298085 298086 298087 298088 298089 298090 298091 298092> # SplitBus
const-mul-2 in 1 <297891> out 1 <298093> # join source bit 31
add in 2 <297890 298093> out 1 <298094>  # join source bit 30
const-mul-2 in 1 <298094> out 1 <298095> # join
add in 2 <297889 298095> out 1 <298096>  # join source bit 29
const-mul-2 in 1 <298096> out 1 <298097> # join
add in 2 <297888 298097> out 1 <298098>  # join source bit 28
const-mul-2 in 1 <298098> out 1 <298099> # join
add in 2 <297887 298099> out 1 <298100>  # join source bit 27
const-mul-2 in 1 <298100> out 1 <298101> # join
add in 2 <297886 298101> out 1 <298102>  # join source bit 26
const-mul-2 in 1 <298102> out 1 <298103> # join
add in 2 <297885 298103> out 1 <298104>  # join source bit 25
const-mul-2 in 1 <298104> out 1 <298105> # join
add in 2 <297884 298105> out 1 <298106>  # join source bit 24
const-mul-2 in 1 <298106> out 1 <298107> # join
add in 2 <297883 298107> out 1 <298108>  # join source bit 23
const-mul-2 in 1 <298108> out 1 <298109> # join
add in 2 <297882 298109> out 1 <298110>  # join source bit 22
const-mul-2 in 1 <298110> out 1 <298111> # join
add in 2 <297881 298111> out 1 <298112>  # join source bit 21
const-mul-2 in 1 <298112> out 1 <298113> # join
add in 2 <297880 298113> out 1 <298114>  # join source bit 20
const-mul-2 in 1 <298114> out 1 <298115> # join
add in 2 <297879 298115> out 1 <298116>  # join source bit 19
const-mul-2 in 1 <298116> out 1 <298117> # join
add in 2 <297878 298117> out 1 <298118>  # join source bit 18
const-mul-2 in 1 <298118> out 1 <298119> # join
add in 2 <297877 298119> out 1 <298120>  # join source bit 17
const-mul-2 in 1 <298120> out 1 <298121> # join
add in 2 <297876 298121> out 1 <298122>  # join source bit 16
const-mul-2 in 1 <298122> out 1 <298123> # join
add in 2 <297875 298123> out 1 <298124>  # join source bit 15
const-mul-2 in 1 <298124> out 1 <298125> # join
add in 2 <297874 298125> out 1 <298126>  # join source bit 14
const-mul-2 in 1 <298126> out 1 <298127> # join
add in 2 <297873 298127> out 1 <298128>  # join source bit 13
const-mul-2 in 1 <298128> out 1 <298129> # join
add in 2 <297872 298129> out 1 <298130>  # join source bit 12
const-mul-2 in 1 <298130> out 1 <298131> # join
add in 2 <297871 298131> out 1 <298132>  # join source bit 11
const-mul-2 in 1 <298132> out 1 <298133> # join
add in 2 <297870 298133> out 1 <298134>  # join source bit 10
const-mul-2 in 1 <298134> out 1 <298135> # join
add in 2 <297869 298135> out 1 <298136>  # join source bit 9
const-mul-2 in 1 <298136> out 1 <298137> # join
add in 2 <297868 298137> out 1 <298138>  # join source bit 8
const-mul-2 in 1 <298138> out 1 <298139> # join
add in 2 <297867 298139> out 1 <298140>  # join source bit 7
const-mul-2 in 1 <298140> out 1 <298141> # join
add in 2 <297866 298141> out 1 <298142>  # join source bit 6
const-mul-2 in 1 <298142> out 1 <298143> # join
add in 2 <297865 298143> out 1 <298144>  # join source bit 5
const-mul-2 in 1 <298144> out 1 <298145> # join
add in 2 <297864 298145> out 1 <298146>  # join source bit 4
const-mul-2 in 1 <298146> out 1 <298147> # join
add in 2 <297863 298147> out 1 <298148>  # join source bit 3
const-mul-2 in 1 <298148> out 1 <298149> # join
add in 2 <297862 298149> out 1 <298150>  # join source bit 2
const-mul-2 in 1 <298150> out 1 <298151> # join
add in 2 <297861 298151> out 1 <298152>  # join source bit 1
const-mul-2 in 1 <298152> out 1 <298153> # join
add in 2 <297860 298153> out 1 <298154>  # join source bit 0
add in 2 <298154 298154> out 1 <298155>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <297284> out 1 <298156> # multiply-by-constant 4294967295
add in 2 <297858 298156> out 1 <298157>  # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <298157> out 265 <298158 298159 298160 298161 298162 298163 298164 298165 298166 298167 298168 298169 298170 298171 298172 298173 298174 298175 298176 298177 298178 298179 298180 298181 298182 298183 298184 298185 298186 298187 298188 298189 298190 298191 298192 298193 298194 298195 298196 298197 298198 298199 298200 298201 298202 298203 298204 298205 298206 298207 298208 298209 298210 298211 298212 298213 298214 298215 298216 298217 298218 298219 298220 298221 298222 298223 298224 298225 298226 298227 298228 298229 298230 298231 298232 298233 298234 298235 298236 298237 298238 298239 298240 298241 298242 298243 298244 298245 298246 298247 298248 298249 298250 298251 298252 298253 298254 298255 298256 298257 298258 298259 298260 298261 298262 298263 298264 298265 298266 298267 298268 298269 298270 298271 298272 298273 298274 298275 298276 298277 298278 298279 298280 298281 298282 298283 298284 298285 298286 298287 298288 298289 298290 298291 298292 298293 298294 298295 298296 298297 298298 298299 298300 298301 298302 298303 298304 298305 298306 298307 298308 298309 298310 298311 298312 298313 298314 298315 298316 298317 298318 298319 298320 298321 298322 298323 298324 298325 298326 298327 298328 298329 298330 298331 298332 298333 298334 298335 298336 298337 298338 298339 298340 298341 298342 298343 298344 298345 298346 298347 298348 298349 298350 298351 298352 298353 298354 298355 298356 298357 298358 298359 298360 298361 298362 298363 298364 298365 298366 298367 298368 298369 298370 298371 298372 298373 298374 298375 298376 298377 298378 298379 298380 298381 298382 298383 298384 298385 298386 298387 298388 298389 298390 298391 298392 298393 298394 298395 298396 298397 298398 298399 298400 298401 298402 298403 298404 298405 298406 298407 298408 298409 298410 298411 298412 298413 298414 298415 298416 298417 298418 298419 298420 298421 298422> # SplitBus
mul in 2 <298189 298155> out 1 <298423>  # cond trueterm
const-mul-neg-1 in 1 <298189> out 1 <298424> # cond minuscond
add in 2 <100 298424> out 1 <298425>     # cond negcond
mul in 2 <298425 297284> out 1 <298426>  # cond falseterm
add in 2 <298423 298426> out 1 <298427>  # cond result
mul in 2 <297112 297076> out 1 <298428>  # cond trueterm
const-mul-neg-1 in 1 <297112> out 1 <298429> # cond minuscond
add in 2 <100 298429> out 1 <298430>     # cond negcond
mul in 2 <298430 297073> out 1 <298431>  # cond falseterm
add in 2 <298428 298431> out 1 <298432>  # cond result
mul in 2 <296968 296932> out 1 <298433>  # cond trueterm
const-mul-neg-1 in 1 <296968> out 1 <298434> # cond minuscond
add in 2 <100 298434> out 1 <298435>     # cond negcond
mul in 2 <298435 296929> out 1 <298436>  # cond falseterm
add in 2 <298433 298436> out 1 <298437>  # cond result
const-mul-ffffffff in 1 <298437> out 1 <298438> # multiply-by-constant 4294967295
add in 2 <298437 298432> out 1 <298439>  # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
add in 2 <298439 298438> out 1 <298440>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <298440> out 1 <298441> # multiply-by-constant 4294967295
add in 2 <298439 298441> out 1 <298442>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <298437> out 1 <298443> # multiply-by-constant 4294967295
add in 2 <298432 298443> out 1 <298444>  # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <298444> out 200 <298445 298446 298447 298448 298449 298450 298451 298452 298453 298454 298455 298456 298457 298458 298459 298460 298461 298462 298463 298464 298465 298466 298467 298468 298469 298470 298471 298472 298473 298474 298475 298476 298477 298478 298479 298480 298481 298482 298483 298484 298485 298486 298487 298488 298489 298490 298491 298492 298493 298494 298495 298496 298497 298498 298499 298500 298501 298502 298503 298504 298505 298506 298507 298508 298509 298510 298511 298512 298513 298514 298515 298516 298517 298518 298519 298520 298521 298522 298523 298524 298525 298526 298527 298528 298529 298530 298531 298532 298533 298534 298535 298536 298537 298538 298539 298540 298541 298542 298543 298544 298545 298546 298547 298548 298549 298550 298551 298552 298553 298554 298555 298556 298557 298558 298559 298560 298561 298562 298563 298564 298565 298566 298567 298568 298569 298570 298571 298572 298573 298574 298575 298576 298577 298578 298579 298580 298581 298582 298583 298584 298585 298586 298587 298588 298589 298590 298591 298592 298593 298594 298595 298596 298597 298598 298599 298600 298601 298602 298603 298604 298605 298606 298607 298608 298609 298610 298611 298612 298613 298614 298615 298616 298617 298618 298619 298620 298621 298622 298623 298624 298625 298626 298627 298628 298629 298630 298631 298632 298633 298634 298635 298636 298637 298638 298639 298640 298641 298642 298643 298644> # SplitBus
mul in 2 <298476 298442> out 1 <298645>  # cond trueterm
const-mul-neg-1 in 1 <298476> out 1 <298646> # cond minuscond
add in 2 <100 298646> out 1 <298647>     # cond negcond
mul in 2 <298647 298432> out 1 <298648>  # cond falseterm
add in 2 <298645 298648> out 1 <298649>  # cond result
const-mul-ffffffff in 1 <298649> out 1 <298650> # multiply-by-constant 4294967295
add in 2 <298649 298427> out 1 <298651>  # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
split in 1 <298651> out 235 <298652 298653 298654 298655 298656 298657 298658 298659 298660 298661 298662 298663 298664 298665 298666 298667 298668 298669 298670 298671 298672 298673 298674 298675 298676 298677 298678 298679 298680 298681 298682 298683 298684 298685 298686 298687 298688 298689 298690 298691 298692 298693 298694 298695 298696 298697 298698 298699 298700 298701 298702 298703 298704 298705 298706 298707 298708 298709 298710 298711 298712 298713 298714 298715 298716 298717 298718 298719 298720 298721 298722 298723 298724 298725 298726 298727 298728 298729 298730 298731 298732 298733 298734 298735 298736 298737 298738 298739 298740 298741 298742 298743 298744 298745 298746 298747 298748 298749 298750 298751 298752 298753 298754 298755 298756 298757 298758 298759 298760 298761 298762 298763 298764 298765 298766 298767 298768 298769 298770 298771 298772 298773 298774 298775 298776 298777 298778 298779 298780 298781 298782 298783 298784 298785 298786 298787 298788 298789 298790 298791 298792 298793 298794 298795 298796 298797 298798 298799 298800 298801 298802 298803 298804 298805 298806 298807 298808 298809 298810 298811 298812 298813 298814 298815 298816 298817 298818 298819 298820 298821 298822 298823 298824 298825 298826 298827 298828 298829 298830 298831 298832 298833 298834 298835 298836 298837 298838 298839 298840 298841 298842 298843 298844 298845 298846 298847 298848 298849 298850 298851 298852 298853 298854 298855 298856 298857 298858 298859 298860 298861 298862 298863 298864 298865 298866 298867 298868 298869 298870 298871 298872 298873 298874 298875 298876 298877 298878 298879 298880 298881 298882 298883 298884 298885 298886> # SplitBus
const-mul-2 in 1 <298683> out 1 <298887> # join source bit 31
add in 2 <298682 298887> out 1 <298888>  # join source bit 30
const-mul-2 in 1 <298888> out 1 <298889> # join
add in 2 <298681 298889> out 1 <298890>  # join source bit 29
const-mul-2 in 1 <298890> out 1 <298891> # join
add in 2 <298680 298891> out 1 <298892>  # join source bit 28
const-mul-2 in 1 <298892> out 1 <298893> # join
add in 2 <298679 298893> out 1 <298894>  # join source bit 27
const-mul-2 in 1 <298894> out 1 <298895> # join
add in 2 <298678 298895> out 1 <298896>  # join source bit 26
const-mul-2 in 1 <298896> out 1 <298897> # join
add in 2 <298677 298897> out 1 <298898>  # join source bit 25
const-mul-2 in 1 <298898> out 1 <298899> # join
add in 2 <298676 298899> out 1 <298900>  # join source bit 24
const-mul-2 in 1 <298900> out 1 <298901> # join
add in 2 <298675 298901> out 1 <298902>  # join source bit 23
const-mul-2 in 1 <298902> out 1 <298903> # join
add in 2 <298674 298903> out 1 <298904>  # join source bit 22
const-mul-2 in 1 <298904> out 1 <298905> # join
add in 2 <298673 298905> out 1 <298906>  # join source bit 21
const-mul-2 in 1 <298906> out 1 <298907> # join
add in 2 <298672 298907> out 1 <298908>  # join source bit 20
const-mul-2 in 1 <298908> out 1 <298909> # join
add in 2 <298671 298909> out 1 <298910>  # join source bit 19
const-mul-2 in 1 <298910> out 1 <298911> # join
add in 2 <298670 298911> out 1 <298912>  # join source bit 18
const-mul-2 in 1 <298912> out 1 <298913> # join
add in 2 <298669 298913> out 1 <298914>  # join source bit 17
const-mul-2 in 1 <298914> out 1 <298915> # join
add in 2 <298668 298915> out 1 <298916>  # join source bit 16
const-mul-2 in 1 <298916> out 1 <298917> # join
add in 2 <298667 298917> out 1 <298918>  # join source bit 15
const-mul-2 in 1 <298918> out 1 <298919> # join
add in 2 <298666 298919> out 1 <298920>  # join source bit 14
const-mul-2 in 1 <298920> out 1 <298921> # join
add in 2 <298665 298921> out 1 <298922>  # join source bit 13
const-mul-2 in 1 <298922> out 1 <298923> # join
add in 2 <298664 298923> out 1 <298924>  # join source bit 12
const-mul-2 in 1 <298924> out 1 <298925> # join
add in 2 <298663 298925> out 1 <298926>  # join source bit 11
const-mul-2 in 1 <298926> out 1 <298927> # join
add in 2 <298662 298927> out 1 <298928>  # join source bit 10
const-mul-2 in 1 <298928> out 1 <298929> # join
add in 2 <298661 298929> out 1 <298930>  # join source bit 9
const-mul-2 in 1 <298930> out 1 <298931> # join
add in 2 <298660 298931> out 1 <298932>  # join source bit 8
const-mul-2 in 1 <298932> out 1 <298933> # join
add in 2 <298659 298933> out 1 <298934>  # join source bit 7
const-mul-2 in 1 <298934> out 1 <298935> # join
add in 2 <298658 298935> out 1 <298936>  # join source bit 6
const-mul-2 in 1 <298936> out 1 <298937> # join
add in 2 <298657 298937> out 1 <298938>  # join source bit 5
const-mul-2 in 1 <298938> out 1 <298939> # join
add in 2 <298656 298939> out 1 <298940>  # join source bit 4
const-mul-2 in 1 <298940> out 1 <298941> # join
add in 2 <298655 298941> out 1 <298942>  # join source bit 3
const-mul-2 in 1 <298942> out 1 <298943> # join
add in 2 <298654 298943> out 1 <298944>  # join source bit 2
const-mul-2 in 1 <298944> out 1 <298945> # join
add in 2 <298653 298945> out 1 <298946>  # join source bit 1
const-mul-2 in 1 <298946> out 1 <298947> # join
add in 2 <298652 298947> out 1 <298948>  # join source bit 0
add in 2 <298948 298948> out 1 <298949>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <298949> out 1 <298950> # multiply-by-constant 4294967295
add in 2 <298651 298950> out 1 <298951>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <298649> out 1 <298952> # multiply-by-constant 4294967295
add in 2 <298427 298952> out 1 <298953>  # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <298953> out 267 <298954 298955 298956 298957 298958 298959 298960 298961 298962 298963 298964 298965 298966 298967 298968 298969 298970 298971 298972 298973 298974 298975 298976 298977 298978 298979 298980 298981 298982 298983 298984 298985 298986 298987 298988 298989 298990 298991 298992 298993 298994 298995 298996 298997 298998 298999 299000 299001 299002 299003 299004 299005 299006 299007 299008 299009 299010 299011 299012 299013 299014 299015 299016 299017 299018 299019 299020 299021 299022 299023 299024 299025 299026 299027 299028 299029 299030 299031 299032 299033 299034 299035 299036 299037 299038 299039 299040 299041 299042 299043 299044 299045 299046 299047 299048 299049 299050 299051 299052 299053 299054 299055 299056 299057 299058 299059 299060 299061 299062 299063 299064 299065 299066 299067 299068 299069 299070 299071 299072 299073 299074 299075 299076 299077 299078 299079 299080 299081 299082 299083 299084 299085 299086 299087 299088 299089 299090 299091 299092 299093 299094 299095 299096 299097 299098 299099 299100 299101 299102 299103 299104 299105 299106 299107 299108 299109 299110 299111 299112 299113 299114 299115 299116 299117 299118 299119 299120 299121 299122 299123 299124 299125 299126 299127 299128 299129 299130 299131 299132 299133 299134 299135 299136 299137 299138 299139 299140 299141 299142 299143 299144 299145 299146 299147 299148 299149 299150 299151 299152 299153 299154 299155 299156 299157 299158 299159 299160 299161 299162 299163 299164 299165 299166 299167 299168 299169 299170 299171 299172 299173 299174 299175 299176 299177 299178 299179 299180 299181 299182 299183 299184 299185 299186 299187 299188 299189 299190 299191 299192 299193 299194 299195 299196 299197 299198 299199 299200 299201 299202 299203 299204 299205 299206 299207 299208 299209 299210 299211 299212 299213 299214 299215 299216 299217 299218 299219 299220> # SplitBus
mul in 2 <298985 298951> out 1 <299221>  # cond trueterm
const-mul-neg-1 in 1 <298985> out 1 <299222> # cond minuscond
add in 2 <100 299222> out 1 <299223>     # cond negcond
mul in 2 <299223 298427> out 1 <299224>  # cond falseterm
add in 2 <299221 299224> out 1 <299225>  # cond result
add in 2 <299225 104> out 1 <299226>     # ArithBusReq.AddReq(DFG.Conditional,DFG.Constant)
const-mul-ffffffff in 1 <93> out 1 <299227> # multiply-by-constant 4294967295
add in 2 <299226 299227> out 1 <299228>  # 'CmpLT DFG.Add - DFG.Input'
split in 1 <299228> outplitBus
mul in 2 <299260 103> out 1 <299467>     # cond trueterm
const-mul-neg-1 in 1 <299260> out 1 <299468> # cond minuscond
add in 2 <100 299468> out 1 <299469>     # cond negcond
mul in 2 <299469 102> out 1 <299470>     # cond falseterm
add in 2 <299467 299470> out 1 <299471>  # cond result
add in 2 <299225 3084> out 1 <299472>    # ArithBusReq.AddReq(DFG.Conditional,DFG.Negate)
const-mul-ffffffff in 1 <299472> out 1 <299473> # multiply-by-constant 4294967295
add in 2 <93 299473> out 1 <299474>      # 'CmpLT DFG.Input - DFG.Subtract'
split in 1 <299474> out 270 <299475 299476 299477 299478 299479 299480 299481 299482 299483 299484 299485 299486 299487 299488 299489 299490 299491 299492 299493 299494 299495 299496 299497 299498 299499 299500 299501 299502 299503 299504 299505 299506 299507 299508 299509 299510 299511 299512 299513 299514 299515 299516 299517 299518 299519 299520 299521 299522 299523 299524 299525 299526 299527 299528 299529 299530 299531 299532 299533 299534 299535 299536 299537 299538 299539 299540 299541 299542 299543 299544 299545 299546 299547 299548 299549 299550 299551 299552 299553 299554 299555 299556 299557 299558 299559 299560 299561 299562 299563 299564 299565 299566 299567 299568 299569 299570 299571 299572 299573 299574 299575 299576 299577 299578 299579 299580 299581 299582 299583 299584 299585 299586 299587 299588 299589 299590 299591 299592 299593 299594 299595 299596 299597 299598 299599 299600 299601 299602 299603 299604 299605 299606 299607 299608 299609 299610 299611 299612 299613 299614 299615 299616 299617 299618 299619 299620 299621 299622 299623 299624 299625 299626 299627 299628 299629 299630 299631 299632 299633 299634 299635 299636 299637 299638 299639 299640 299641 299642 299643 299644 299645 299646 299647 299648 299649 299650 299651 299652 299653 299654 299655 299656 299657 299658 299659 299660 299661 299662 299663 299664 299665 299666 299667 299668 299669 299670 299671 299672 299673 299674 299675 299676 299677 299678 299679 299680 299681 299682 299683 299684 299685 299686 299687 299688 299689 299690 299691 299692 299693 299694 299695 299696 299697 299698 299699 299700 299701 299702 299703 299704 299705 299706 299707 299708 299709 299710 299711 299712 299713 299714 299715 299716 299717 299718 299719 299720 299721 299722 299723 299724 299725 299726 299727 299728 299729 299730 299731 299732 299733 299734 299735 299736 299737 299738 299739 299740 299741 299742 299743 299744> # SplitBus
mul in 2 <299506 103> out 1 <299745>     # cond trueterm
const-mul-neg-1 in 1 <299506> out 1 <299746> # cond minuscond
add in 2 <100 299746> out 1 <299747>     # cond negcond
mul in 2 <299747 299471> out 1 <299748>  # cond falseterm
add in 2 <299745 299748> out 1 <299749>  # cond result
const-mul-ffffffff in 1 <92> out 1 <299750> # multiply-by-constant 4294967295
add in 2 <92 93> out 1 <299751>          # ArithBusReq.AddReq(DFG.Input,DFG.Input)
add in 2 <299751 299750> out 1 <299752>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <299752> out 1 <299753> # multiply-by-constant 4294967295
add in 2 <299751 299753> out 1 <299754>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <92> out 1 <299755> # multiply-by-constant 4294967295
add in 2 <93 299755> out 1 <299756>      # 'CmpLT DFG.Input - DFG.Input'
split in 1 <299756> out 65 <299757 299758 299759 299760 299761 299762 299763 299764 299765 299766 299767 299768 299769 299770 299771 299772 299773 299774 299775 299776 299777 299778 299779 299780 299781 299782 299783 299784 299785 299786 299787 299788 299789 299790 299791 299792 299793 299794 299795 299796 299797 299798 299799 299800 299801 299802 299803 299804 299805 299806 299807 299808 299809 299810 299811 299812 299813 299814 299815 299816 299817 299818 299819 299820 299821> # SplitBus
mul in 2 <299788 299754> out 1 <299822>  # cond trueterm
const-mul-neg-1 in 1 <299788> out 1 <299823> # cond minuscond
add in 2 <100 299823> out 1 <299824>     # cond negcond
mul in 2 <299824 93> out 1 <299825>      # cond falseterm
add in 2 <299822 299825> out 1 <299826>  # cond result
const-mul-ffffffff in 1 <299826> out 1 <299827> # multiply-by-constant 4294967295
add in 2 <299826 94> out 1 <299828>      # ArithBusReq.AddReq(DFG.Conditional,DFG.Input)
add in 2 <299828 299827> out 1 <299829>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <299829> out 1 <299830> # multiply-by-constant 4294967295
add in 2 <299828 299830> out 1 <299831>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <299826> out 1 <299832> # multiply-by-constant 4294967295
add in 2 <94 299832> out 1 <299833>      # 'CmpLT DFG.Input - DFG.Conditional'
split in 1 <299833> out 131 <299834 299835 299836 299837 299838 299839 299840 299841 299842 299843 299844 299845 299846 299847 299848 299849 299850 299851 299852 299853 299854 299855 299856 299857 299858 299859 299860 299861 299862 299863 299864 299865 299866 299867 299868 299869 299870 299871 299872 299873 299874 299875 299876 299877 299878 299879 299880 299881 299882 299883 299884 299885 299886 299887 299888 299889 299890 299891 299892 299893 299894 299895 299896 299897 299898 299899 299900 299901 299902 299903 299904 299905 299906 299907 299908 299909 299910 299911 299912 299913 299914 299915 299916 299917 299918 299919 299920 299921 299922 299923 299924 299925 299926 299927 299928 299929 299930 299931 299932 299933 299934 299935 299936 299937 299938 299939 299940 299941 299942 299943 299944 299945 299946 299947 299948 299949 299950 299951 299952 299953 299954 299955 299956 299957 299958 299959 299960 299961 299962 299963 299964> # SplitBus
mul in 2 <299865 299831> out 1 <299965>  # cond trueterm
const-mul-neg-1 in 1 <299865> out 1 <299966> # cond minuscond
add in 2 <100 299966> out 1 <299967>     # cond negcond
mul in 2 <299967 94> out 1 <299968>      # cond falseterm
add in 2 <299965 299968> out 1 <299969>  # cond result
const-mul-ffffffff in 1 <299969> out 1 <299970> # multiply-by-constant 4294967295
add in 2 <299969 95> out 1 <299971>      # ArithBusReq.AddReq(DFG.Conditional,DFG.Input)
add in 2 <299971 299970> out 1 <299972>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <299969> out 1 <299973> # multiply-by-constant 4294967295
add in 2 <95 299973> out 1 <299974>      # 'CmpLT DFG.Input - DFG.Conditional'
split in 1 <299974> out 197 <299975 299976 299977 299978 299979 299980 299981 299982 299983 299984 299985 299986 299987 299988 299989 299990 299991 299992 299993 299994 299995 299996 299997 299998 299999 300000 300001 300002 300003 300004 300005 300006 300007 300008 300009 300010 300011 300012 300013 300014 300015 300016 300017 300018 300019 300020 300021 300022 300023 300024 300025 300026 300027 300028 300029 300030 300031 300032 300033 300034 300035 300036 300037 300038 300039 300040 300041 300042 300043 300044 300045 300046 300047 300048 300049 300050 300051 300052 300053 300054 300055 300056 300057 300058 300059 300060 300061 300062 300063 300064 300065 300066 300067 300068 300069 300070 300071 300072 300073 300074 300075 300076 300077 300078 300079 300080 300081 300082 300083 300084 300085 300086 300087 300088 300089 300090 300091 300092 300093 300094 300095 300096 300097 300098 300099 300100 300101 300102 300103 300104 300105 300106 300107 300108 300109 300110 300111 300112 300113 300114 300115 300116 300117 300118 300119 300120 300121 300122 300123 300124 300125 300126 300127 300128 300129 300130 300131 300132 300133 300134 300135 300136 300137 300138 300139 300140 300141 300142 300143 300144 300145 300146 300147 300148 300149 300150 300151 300152 300153 300154 300155 300156 300157 300158 300159 300160 300161 300162 300163 300164 300165 300166 300167 300168 300169 300170 300171> # SplitBus
mul in 2 <300006 299972> out 1 <300172>  # cond trueterm
const-mul-neg-1 in 1 <300006> out 1 <300173> # cond minuscond
add in 2 <100 300173> out 1 <300174>     # cond negcond
mul in 2 <300174 299969> out 1 <300175>  # cond falseterm
add in 2 <300172 300175> out 1 <300176>  # cond result
mul in 2 <299865 299829> out 1 <300177>  # cond trueterm
const-mul-neg-1 in 1 <299865> out 1 <300178> # cond minuscond
add in 2 <100 300178> out 1 <300179>     # cond negcond
mul in 2 <300179 299826> out 1 <300180>  # cond falseterm
add in 2 <300177 300180> out 1 <300181>  # cond result
mul in 2 <299788 299752> out 1 <300182>  # cond trueterm
const-mul-neg-1 in 1 <299788> out 1 <300183> # cond minuscond
add in 2 <100 300183> out 1 <300184>     # cond negcond
mul in 2 <300184 92> out 1 <300185>      # cond falseterm
add in 2 <300182 300185> out 1 <300186>  # cond result
const-mul-ffffffff in 1 <300186> out 1 <300187> # multiply-by-constant 4294967295
add in 2 <300186 300181> out 1 <300188>  # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
add in 2 <300188 300187> out 1 <300189>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <300189> out 1 <300190> # multiply-by-constant 4294967295
add in 2 <300188 300190> out 1 <300191>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <300186> out 1 <300192> # multiply-by-constant 4294967295
add in 2 <300181 300192> out 1 <300193>  # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <300193> out 132 <300194 300195 300196 300197 300198 300199 300200 300201 300202 300203 300204 300205 300206 300207 300208 300209 300210 300211 300212 300213 300214 300215 300216 300217 300218 300219 300220 300221 300222 300223 300224 300225 300226 300227 300228 300229 300230 300231 300232 300233 300234 300235 300236 300237 300238 300239 300240 300241 300242 300243 300244 300245 300246 300247 300248 300249 300250 300251 300252 300253 300254 300255 300256 300257 300258 300259 300260 300261 300262 300263 300264 300265 300266 300267 300268 300269 300270 300271 300272 300273 300274 300275 300276 300277 300278 300279 300280 300281 300282 300283 300284 300285 300286 300287 300288 300289 300290 300291 300292 300293 300294 300295 300296 300297 300298 300299 300300 300301 300302 300303 300304 300305 300306 300307 300308 300309 300310 300311 300312 300313 300314 300315 300316 300317 300318 300319 300320 300321 300322 300323 300324 300325> # SplitBus
mul in 2 <300225 300191> out 1 <300326>  # cond trueterm
const-mul-neg-1 in 1 <300225> out 1 <300327> # cond minuscond
add in 2 <100 300327> out 1 <300328>     # cond negcond
mul in 2 <300328 300181> out 1 <300329>  # cond falseterm
add in 2 <300326 300329> out 1 <300330>  # cond result
const-mul-ffffffff in 1 <300330> out 1 <300331> # multiply-by-constant 4294967295
add in 2 <300330 300176> out 1 <300332>  # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
add in 2 <300332 300331> out 1 <300333>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <300333> out 1 <300334> # multiply-by-constant 4294967295
add in 2 <300332 300334> out 1 <300335>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <300330> out 1 <300336> # multiply-by-constant 4294967295
add in 2 <300176 300336> out 1 <300337>  # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <300337> out 199 <300338 300339 300340 300341 300342 300343 300344 300345 300346 300347 300348 300349 300350 300351 300352 300353 300354 300355 300356 300357 300358 300359 300360 300361 300362 300363 300364 300365 300366 300367 300368 300369 300370 300371 300372 300373 300374 300375 300376 300377 300378 300379 300380 300381 300382 300383 300384 300385 300386 300387 300388 300389 300390 300391 300392 300393 300394 300395 300396 300397 300398 300399 300400 300401 300402 300403 300404 300405 300406 300407 300408 300409 300410 300411 300412 300413 300414 300415 300416 300417 300418 300419 300420 300421 300422 300423 300424 300425 300426 300427 300428 300429 300430 300431 300432 300433 300434 300435 300436 300437 300438 300439 300440 300441 300442 300443 300444 300445 300446 300447 300448 300449 300450 300451 300452 300453 300454 300455 300456 300457 300458 300459 300460 300461 300462 300463 300464 300465 300466 300467 300468 300469 300470 300471 300472 300473 300474 300475 300476 300477 300478 300479 300480 300481 300482 300483 300484 300485 300486 300487 300488 300489 300490 300491 300492 300493 300494 300495 300496 300497 300498 300499 300500 300501 300502 300503 300504 300505 300506 300507 300508 300509 300510 300511 300512 300513 300514 300515 300516 300517 300518 300519 300520 300521 300522 300523 300524 300525 300526 300527 300528 300529 300530 300531 300532 300533 300534 300535 300536> # SplitBus
mul in 2 <300369 300335> out 1 <300537>  # cond trueterm
const-mul-neg-1 in 1 <300369> out 1 <300538> # cond minuscond
add in 2 <100 300538> out 1 <300539>     # cond negcond
mul in 2 <300539 300176> out 1 <300540>  # cond falseterm
add in 2 <300537 300540> out 1 <300541>  # cond result
const-mul-ffffffff in 1 <300541> out 1 <300542> # multiply-by-constant 4294967295
const-mul-ffffffff in 1 <299972> out 1 <300543> # multiply-by-constant 4294967295
add in 2 <299971 300543> out 1 <300544>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
mul in 2 <300006 300544> out 1 <300545>  # cond trueterm
const-mul-neg-1 in 1 <300006> out 1 <300546> # cond minuscond
add in 2 <100 300546> out 1 <300547>     # cond negcond
mul in 2 <300547 95> out 1 <300548>      # cond falseterm
add in 2 <300545 300548> out 1 <300549>  # cond result
const-mul-ffffffff in 1 <300549> out 1 <300550> # multiply-by-constant 4294967295
add in 2 <300549 96> out 1 <300551>      # ArithBusReq.AddReq(DFG.Conditional,DFG.Input)
split in 1 <300551> out 231 <300552 300553 300554 300555 300556 300557 300558 300559 300560 300561 300562 300563 300564 300565 300566 300567 300568 300569 300570 300571 300572 300573 300574 300575 300576 300577 300578 300579 300580 300581 300582 300583 300584 300585 300586 300587 300588 300589 300590 300591 300592 300593 300594 300595 300596 300597 300598 300599 300600 300601 300602 300603 300604 300605 300606 300607 300608 300609 300610 300611 300612 300613 300614 300615 300616 300617 300618 300619 300620 300621 300622 300623 300624 300625 300626 300627 300628 300629 300630 300631 300632 300633 300634 300635 300636 300637 300638 300639 300640 300641 300642 300643 300644 300645 300646 300647 300648 300649 300650 300651 300652 300653 300654 300655 300656 300657 300658 300659 300660 300661 300662 300663 300664 300665 300666 300667 300668 300669 300670 300671 300672 300673 300674 300675 300676 300677 300678 300679 300680 300681 300682 300683 300684 300685 300686 300687 300688 300689 300690 300691 300692 300693 300694 300695 300696 300697 300698 300699 300700 300701 300702 300703 300704 300705 300706 300707 300708 300709 300710 300711 300712 300713 300714 300715 300716 300717 300718 300719 300720 300721 300722 300723 300724 300725 300726 300727 300728 300729 300730 300731 300732 300733 300734 300735 300736 300737 300738 300739 300740 300741 300742 300743 300744 300745 300746 300747 300748 300749 300750 300751 300752 300753 300754 300755 300756 300757 300758 300759 300760 300761 300762 300763 300764 300765 300766 300767 300768 300769 300770 300771 300772 300773 300774 300775 300776 300777 300778 300779 300780 300781 300782> # SplitBus
const-mul-2 in 1 <300583> out 1 <300783> # join source bit 31
add in 2 <300582 300783> out 1 <300784>  # join source bit 30
const-mul-2 in 1 <300784> out 1 <300785> # join
add in 2 <300581 300785> out 1 <300786>  # join source bit 29
const-mul-2 in 1 <300786> out 1 <300787> # join
add in 2 <300580 300787> out 1 <300788>  # join source bit 28
const-mul-2 in 1 <300788> out 1 <300789> # join
add in 2 <300579 300789> out 1 <300790>  # join source bit 27
const-mul-2 in 1 <300790> out 1 <300791> # join
add in 2 <300578 300791> out 1 <300792>  # join source bit 26
const-mul-2 in 1 <300792> out 1 <300793> # join
add in 2 <300577 300793> out 1 <300794>  # join source bit 25
const-mul-2 in 1 <300794> out 1 <300795> # join
add in 2 <300576 300795> out 1 <300796>  # join source bit 24
const-mul-2 in 1 <300796> out 1 <300797> # join
add in 2 <300575 300797> out 1 <300798>  # join source bit 23
const-mul-2 in 1 <300798> out 1 <300799> # join
add in 2 <300574 300799> out 1 <300800>  # join source bit 22
const-mul-2 in 1 <300800> out 1 <300801> # join
add in 2 <300573 300801> out 1 <300802>  # join source bit 21
const-mul-2 in 1 <300802> out 1 <300803> # join
add in 2 <300572 300803> out 1 <300804>  # join source bit 20
const-mul-2 in 1 <300804> out 1 <300805> # join
add in 2 <300571 300805> out 1 <300806>  # join source bit 19
const-mul-2 in 1 <300806> out 1 <300807> # join
add in 2 <300570 300807> out 1 <300808>  # join source bit 18
const-mul-2 in 1 <300808> out 1 <300809> # join
add in 2 <300569 300809> out 1 <300810>  # join source bit 17
const-mul-2 in 1 <300810> out 1 <300811> # join
add in 2 <300568 300811> out 1 <300812>  # join source bit 16
const-mul-2 in 1 <300812> out 1 <300813> # join
add in 2 <300567 300813> out 1 <300814>  # join source bit 15
const-mul-2 in 1 <300814> out 1 <300815> # join
add in 2 <300566 300815> out 1 <300816>  # join source bit 14
const-mul-2 in 1 <300816> out 1 <300817> # join
add in 2 <300565 300817> out 1 <300818>  # join source bit 13
const-mul-2 in 1 <300818> out 1 <300819> # join
add in 2 <300564 300819> out 1 <300820>  # join source bit 12
const-mul-2 in 1 <300820> out 1 <300821> # join
add in 2 <300563 300821> out 1 <300822>  # join source bit 11
const-mul-2 in 1 <300822> out 1 <300823> # join
add in 2 <300562 300823> out 1 <300824>  # join source bit 10
const-mul-2 in 1 <300824> out 1 <300825> # join
add in 2 <300561 300825> out 1 <300826>  # join source bit 9
const-mul-2 in 1 <300826> out 1 <300827> # join
add in 2 <300560 300827> out 1 <300828>  # join source bit 8
const-mul-2 in 1 <300828> out 1 <300829> # join
add in 2 <300559 300829> out 1 <300830>  # join source bit 7
const-mul-2 in 1 <300830> out 1 <300831> # join
add in 2 <300558 300831> out 1 <300832>  # join source bit 6
const-mul-2 in 1 <300832> out 1 <300833> # join
add in 2 <300557 300833> out 1 <300834>  # join source bit 5
const-mul-2 in 1 <300834> out 1 <300835> # join
add in 2 <300556 300835> out 1 <300836>  # join source bit 4
const-mul-2 in 1 <300836> out 1 <300837> # join
add in 2 <300555 300837> out 1 <300838>  # join source bit 3
const-mul-2 in 1 <300838> out 1 <300839> # join
add in 2 <300554 300839> out 1 <300840>  # join source bit 2
const-mul-2 in 1 <300840> out 1 <300841> # join
add in 2 <300553 300841> out 1 <300842>  # join source bit 1
const-mul-2 in 1 <300842> out 1 <300843> # join
add in 2 <300552 300843> out 1 <300844>  # join source bit 0
add in 2 <300844 300844> out 1 <300845>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <300549> out 1 <300846> # multiply-by-constant 4294967295
add in 2 <96 300846> out 1 <300847>      # 'CmpLT DFG.Input - DFG.Conditional'
split in 1 <300847> out 263 <300848 300849 300850 300851 300852 300853 300854 300855 300856 300857 300858 300859 300860 300861 300862 300863 300864 300865 300866 300867 300868 300869 300870 300871 300872 300873 300874 300875 300876 300877 300878 300879 300880 300881 300882 300883 300884 300885 300886 300887 300888 300889 300890 300891 300892 300893 300894 300895 300896 300897 300898 300899 300900 300901 300902 300903 300904 300905 300906 300907 300908 300909 300910 300911 300912 300913 300914 300915 300916 300917 300918 300919 300920 300921 300922 300923 300924 300925 300926 300927 300928 300929 300930 300931 300932 300933 300934 300935 300936 300937 300938 300939 300940 300941 300942 300943 300944 300945 300946 300947 300948 300949 300950 300951 300952 300953 300954 300955 300956 300957 300958 300959 300960 300961 300962 300963 300964 300965 300966 300967 300968 300969 300970 300971 300972 300973 300974 300975 300976 300977 300978 300979 300980 300981 300982 300983 300984 300985 300986 300987 300988 300989 300990 300991 300992 300993 300994 300995 300996 300997 300998 300999 301000 301001 301002 301003 301004 301005 301006 301007 301008 301009 301010 301011 301012 301013 301014 301015 301016 301017 301018 301019 301020 301021 301022 301023 301024 301025 301026 301027 301028 301029 301030 301031 301032 301033 301034 301035 301036 301037 301038 301039 301040 301041 301042 301043 301044 301045 301046 301047 301048 301049 301050 301051 301052 301053 301054 301055 301056 301057 301058 301059 301060 301061 301062 301063 301064 301065 301066 301067 301068 301069 301070 301071 301072 301073 301074 301075 301076 301077 301078 301079 301080 301081 301082 301083 301084 301085 301086 301087 301088 301089 301090 301091 301092 301093 301094 301095 301096 301097 301098 301099 301100 301101 301102 301103 301104 301105 301106 301107 301108 301109 301110> # SplitBus
mul in 2 <300879 300845> out 1 <301111>  # cond trueterm
const-mul-neg-1 in 1 <300879> out 1 <301112> # cond minuscond
add in 2 <100 301112> out 1 <301113>     # cond negcond
mul in 2 <301113 300549> out 1 <301114>  # cond falseterm
add in 2 <301111 301114> out 1 <301115>  # cond result
add in 2 <300541 301115> out 1 <301116>  # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
split in 1 <301116> outplitBus
const-mul-2 in 1 <301148> out 1 <301350> # join source bit 31
add in 2 <301147 301350> out 1 <301351>  # join source bit 30
const-mul-2 in 1 <301351> out 1 <301352> # join
add in 2 <301146 301352> out 1 <301353>  # join source bit 29
const-mul-2 in 1 <301353> out 1 <301354> # join
add in 2 <301145 301354> out 1 <301355>  # join source bit 28
const-mul-2 in 1 <301355> out 1 <301356> # join
add in 2 <301144 301356> out 1 <301357>  # join source bit 27
const-mul-2 in 1 <301357> out 1 <301358> # join
add in 2 <301143 301358> out 1 <301359>  # join source bit 26
const-mul-2 in 1 <301359> out 1 <301360> # join
add in 2 <301142 301360> out 1 <301361>  # join source bit 25
const-mul-2 in 1 <301361> out 1 <301362> # join
add in 2 <301141 301362> out 1 <301363>  # join source bit 24
const-mul-2 in 1 <301363> out 1 <301364> # join
add in 2 <301140 301364> out 1 <301365>  # join source bit 23
const-mul-2 in 1 <301365> out 1 <301366> # join
add in 2 <301139 301366> out 1 <301367>  # join source bit 22
const-mul-2 in 1 <301367> out 1 <301368> # join
add in 2 <301138 301368> out 1 <301369>  # join source bit 21
const-mul-2 in 1 <301369> out 1 <301370> # join
add in 2 <301137 301370> out 1 <301371>  # join source bit 20
const-mul-2 in 1 <301371> out 1 <301372> # join
add in 2 <301136 301372> out 1 <301373>  # join source bit 19
const-mul-2 in 1 <301373> out 1 <301374> # join
add in 2 <301135 301374> out 1 <301375>  # join source bit 18
const-mul-2 in 1 <301375> out 1 <301376> # join
add in 2 <301134 301376> out 1 <301377>  # join source bit 17
const-mul-2 in 1 <301377> out 1 <301378> # join
add in 2 <301133 301378> out 1 <301379>  # join source bit 16
const-mul-2 in 1 <301379> out 1 <301380> # join
add in 2 <301132 301380> out 1 <301381>  # join source bit 15
const-mul-2 in 1 <301381> out 1 <301382> # join
add in 2 <301131 301382> out 1 <301383>  # join source bit 14
const-mul-2 in 1 <301383> out 1 <301384> # join
add in 2 <301130 301384> out 1 <301385>  # join source bit 13
const-mul-2 in 1 <301385> out 1 <301386> # join
add in 2 <301129 301386> out 1 <301387>  # join source bit 12
const-mul-2 in 1 <301387> out 1 <301388> # join
add in 2 <301128 301388> out 1 <301389>  # join source bit 11
const-mul-2 in 1 <301389> out 1 <301390> # join
add in 2 <301127 301390> out 1 <301391>  # join source bit 10
const-mul-2 in 1 <301391> out 1 <301392> # join
add in 2 <301126 301392> out 1 <301393>  # join source bit 9
const-mul-2 in 1 <301393> out 1 <301394> # join
add in 2 <301125 301394> out 1 <301395>  # join source bit 8
const-mul-2 in 1 <301395> out 1 <301396> # join
add in 2 <301124 301396> out 1 <301397>  # join source bit 7
const-mul-2 in 1 <301397> out 1 <301398> # join
add in 2 <301123 301398> out 1 <301399>  # join source bit 6
const-mul-2 in 1 <301399> out 1 <301400> # join
add in 2 <301122 301400> out 1 <301401>  # join source bit 5
const-mul-2 in 1 <301401> out 1 <301402> # join
add in 2 <301121 301402> out 1 <301403>  # join source bit 4
const-mul-2 in 1 <301403> out 1 <301404> # join
add in 2 <301120 301404> out 1 <301405>  # join source bit 3
const-mul-2 in 1 <301405> out 1 <301406> # join
add in 2 <301119 301406> out 1 <301407>  # join source bit 2
const-mul-2 in 1 <301407> out 1 <301408> # join
add in 2 <301118 301408> out 1 <301409>  # join source bit 1
const-mul-2 in 1 <301409> out 1 <301410> # join
add in 2 <301117 301410> out 1 <301411>  # join source bit 0
add in 2 <301411 301411> out 1 <301412>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <300541> out 1 <301413> # multiply-by-constant 4294967295
add in 2 <301115 301413> out 1 <301414>  # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <301414> outplitBus
mul in 2 <301446 301412> out 1 <301680>  # cond trueterm
const-mul-neg-1 in 1 <301446> out 1 <301681> # cond minuscond
add in 2 <100 301681> out 1 <301682>     # cond negcond
mul in 2 <301682 300541> out 1 <301683>  # cond falseterm
add in 2 <301680 301683> out 1 <301684>  # cond result
mul in 2 <300369 300333> out 1 <301685>  # cond trueterm
const-mul-neg-1 in 1 <300369> out 1 <301686> # cond minuscond
add in 2 <100 301686> out 1 <301687>     # cond negcond
mul in 2 <301687 300330> out 1 <301688>  # cond falseterm
add in 2 <301685 301688> out 1 <301689>  # cond result
mul in 2 <300225 300189> out 1 <301690>  # cond trueterm
const-mul-neg-1 in 1 <300225> out 1 <301691> # cond minuscond
add in 2 <100 301691> out 1 <301692>     # cond negcond
mul in 2 <301692 300186> out 1 <301693>  # cond falseterm
add in 2 <301690 301693> out 1 <301694>  # cond result
const-mul-ffffffff in 1 <301694> out 1 <301695> # multiply-by-constant 4294967295
add in 2 <301694 301689> out 1 <301696>  # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
add in 2 <301696 301695> out 1 <301697>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <301697> out 1 <301698> # multiply-by-constant 4294967295
add in 2 <301696 301698> out 1 <301699>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <301694> out 1 <301700> # multiply-by-constant 4294967295
add in 2 <301689 301700> out 1 <301701>  # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <301701> out 200 <301702 301703 301704 301705 301706 301707 301708 301709 301710 301711 301712 301713 301714 301715 301716 301717 301718 301719 301720 301721 301722 301723 301724 301725 301726 301727 301728 301729 301730 301731 301732 301733 301734 301735 301736 301737 301738 301739 301740 301741 301742 301743 301744 301745 301746 301747 301748 301749 301750 301751 301752 301753 301754 301755 301756 301757 301758 301759 301760 301761 301762 301763 301764 301765 301766 301767 301768 301769 301770 301771 301772 301773 301774 301775 301776 301777 301778 301779 301780 301781 301782 301783 301784 301785 301786 301787 301788 301789 301790 301791 301792 301793 301794 301795 301796 301797 301798 301799 301800 301801 301802 301803 301804 301805 301806 301807 301808 301809 301810 301811 301812 301813 301814 301815 301816 301817 301818 301819 301820 301821 301822 301823 301824 301825 301826 301827 301828 301829 301830 301831 301832 301833 301834 301835 301836 301837 301838 301839 301840 301841 301842 301843 301844 301845 301846 301847 301848 301849 301850 301851 301852 301853 301854 301855 301856 301857 301858 301859 301860 301861 301862 301863 301864 301865 301866 301867 301868 301869 301870 301871 301872 301873 301874 301875 301876 301877 301878 301879 301880 301881 301882 301883 301884 301885 301886 301887 301888 301889 301890 301891 301892 301893 301894 301895 301896 301897 301898 301899 301900 301901> # SplitBus
mul in 2 <301733 301699> out 1 <301902>  # cond trueterm
const-mul-neg-1 in 1 <301733> out 1 <301903> # cond minuscond
add in 2 <100 301903> out 1 <301904>     # cond negcond
mul in 2 <301904 301689> out 1 <301905>  # cond falseterm
add in 2 <301902 301905> out 1 <301906>  # cond result
const-mul-ffffffff in 1 <301906> out 1 <301907> # multiply-by-constant 4294967295
add in 2 <301906 301684> out 1 <301908>  # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
split in 1 <301908> outplitBus
const-mul-2 in 1 <301940> out 1 <302144> # join source bit 31
add in 2 <301939 302144> out 1 <302145>  # join source bit 30
const-mul-2 in 1 <302145> out 1 <302146> # join
add in 2 <301938 302146> out 1 <302147>  # join source bit 29
const-mul-2 in 1 <302147> out 1 <302148> # join
add in 2 <301937 302148> out 1 <302149>  # join source bit 28
const-mul-2 in 1 <302149> out 1 <302150> # join
add in 2 <301936 302150> out 1 <302151>  # join source bit 27
const-mul-2 in 1 <302151> out 1 <302152> # join
add in 2 <301935 302152> out 1 <302153>  # join source bit 26
const-mul-2 in 1 <302153> out 1 <302154> # join
add in 2 <301934 302154> out 1 <302155>  # join source bit 25
const-mul-2 in 1 <302155> out 1 <302156> # join
add in 2 <301933 302156> out 1 <302157>  # join source bit 24
const-mul-2 in 1 <302157> out 1 <302158> # join
add in 2 <301932 302158> out 1 <302159>  # join source bit 23
const-mul-2 in 1 <302159> out 1 <302160> # join
add in 2 <301931 302160> out 1 <302161>  # join source bit 22
const-mul-2 in 1 <302161> out 1 <302162> # join
add in 2 <301930 302162> out 1 <302163>  # join source bit 21
const-mul-2 in 1 <302163> out 1 <302164> # join
add in 2 <301929 302164> out 1 <302165>  # join source bit 20
const-mul-2 in 1 <302165> out 1 <302166> # join
add in 2 <301928 302166> out 1 <302167>  # join source bit 19
const-mul-2 in 1 <302167> out 1 <302168> # join
add in 2 <301927 302168> out 1 <302169>  # join source bit 18
const-mul-2 in 1 <302169> out 1 <302170> # join
add in 2 <301926 302170> out 1 <302171>  # join source bit 17
const-mul-2 in 1 <302171> out 1 <302172> # join
add in 2 <301925 302172> out 1 <302173>  # join source bit 16
const-mul-2 in 1 <302173> out 1 <302174> # join
add in 2 <301924 302174> out 1 <302175>  # join source bit 15
const-mul-2 in 1 <302175> out 1 <302176> # join
add in 2 <301923 302176> out 1 <302177>  # join source bit 14
const-mul-2 in 1 <302177> out 1 <302178> # join
add in 2 <301922 302178> out 1 <302179>  # join source bit 13
const-mul-2 in 1 <302179> out 1 <302180> # join
add in 2 <301921 302180> out 1 <302181>  # join source bit 12
const-mul-2 in 1 <302181> out 1 <302182> # join
add in 2 <301920 302182> out 1 <302183>  # join source bit 11
const-mul-2 in 1 <302183> out 1 <302184> # join
add in 2 <301919 302184> out 1 <302185>  # join source bit 10
const-mul-2 in 1 <302185> out 1 <302186> # join
add in 2 <301918 302186> out 1 <302187>  # join source bit 9
const-mul-2 in 1 <302187> out 1 <302188> # join
add in 2 <301917 302188> out 1 <302189>  # join source bit 8
const-mul-2 in 1 <302189> out 1 <302190> # join
add in 2 <301916 302190> out 1 <302191>  # join source bit 7
const-mul-2 in 1 <302191> out 1 <302192> # join
add in 2 <301915 302192> out 1 <302193>  # join source bit 6
const-mul-2 in 1 <302193> out 1 <302194> # join
add in 2 <301914 302194> out 1 <302195>  # join source bit 5
const-mul-2 in 1 <302195> out 1 <302196> # join
add in 2 <301913 302196> out 1 <302197>  # join source bit 4
const-mul-2 in 1 <302197> out 1 <302198> # join
add in 2 <301912 302198> out 1 <302199>  # join source bit 3
const-mul-2 in 1 <302199> out 1 <302200> # join
add in 2 <301911 302200> out 1 <302201>  # join source bit 2
const-mul-2 in 1 <302201> out 1 <302202> # join
add in 2 <301910 302202> out 1 <302203>  # join source bit 1
const-mul-2 in 1 <302203> out 1 <302204> # join
add in 2 <301909 302204> out 1 <302205>  # join source bit 0
add in 2 <302205 302205> out 1 <302206>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <302206> out 1 <302207> # multiply-by-constant 4294967295
add in 2 <301908 302207> out 1 <302208>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <301906> out 1 <302209> # multiply-by-constant 4294967295
add in 2 <301684 302209> out 1 <302210>  # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <302210> outplitBus
mul in 2 <302242 302208> out 1 <302478>  # cond trueterm
const-mul-neg-1 in 1 <302242> out 1 <302479> # cond minuscond
add in 2 <100 302479> out 1 <302480>     # cond negcond
mul in 2 <302480 301684> out 1 <302481>  # cond falseterm
add in 2 <302478 302481> out 1 <302482>  # cond result
add in 2 <302482 104> out 1 <302483>     # ArithBusReq.AddReq(DFG.Conditional,DFG.Constant)
const-mul-ffffffff in 1 <94> out 1 <302484> # multiply-by-constant 4294967295
add in 2 <302483 302484> out 1 <302485>  # 'CmpLT DFG.Add - DFG.Input'
split in 1 <302485> out 238 <302486 302487 302488 302489 302490 302491 302492 302493 302494 302495 302496 302497 302498 302499 302500 302501 302502 302503 302504 302505 302506 302507 302508 302509 302510 302511 302512 302513 302514 302515 302516 302517 302518 302519 302520 302521 302522 302523 302524 302525 302526 302527 302528 302529 302530 302531 302532 302533 302534 302535 302536 302537 302538 302539 302540 302541 302542 302543 302544 302545 302546 302547 302548 302549 302550 302551 302552 302553 302554 302555 302556 302557 302558 302559 302560 302561 302562 302563 302564 302565 302566 302567 302568 302569 302570 302571 302572 302573 302574 302575 302576 302577 302578 302579 302580 302581 302582 302583 302584 302585 302586 302587 302588 302589 302590 302591 302592 302593 302594 302595 302596 302597 302598 302599 302600 302601 302602 302603 302604 302605 302606 302607 302608 302609 302610 302611 302612 302613 302614 302615 302616 302617 302618 302619 302620 302621 302622 302623 302624 302625 302626 302627 302628 302629 302630 302631 302632 302633 302634 302635 302636 302637 302638 302639 302640 302641 302642 302643 302644 302645 302646 302647 302648 302649 302650 302651 302652 302653 302654 302655 302656 302657 302658 302659 302660 302661 302662 302663 302664 302665 302666 302667 302668 302669 302670 302671 302672 302673 302674 302675 302676 302677 302678 302679 302680 302681 302682 302683 302684 302685 302686 302687 302688 302689 302690 302691 302692 302693 302694 302695 302696 302697 302698 302699 302700 302701 302702 302703 302704 302705 302706 302707 302708 302709 302710 302711 302712 302713 302714 302715 302716 302717 302718 302719 302720 302721 302722 302723> # SplitBus
mul in 2 <302517 103> out 1 <302724>     # cond trueterm
const-mul-neg-1 in 1 <302517> out 1 <302725> # cond minuscond
add in 2 <100 302725> out 1 <302726>     # cond negcond
mul in 2 <302726 102> out 1 <302727>     # cond falseterm
add in 2 <302724 302727> out 1 <302728>  # cond result
add in 2 <302482 3084> out 1 <302729>    # ArithBusReq.AddReq(DFG.Conditional,DFG.Negate)
const-mul-ffffffff in 1 <302729> out 1 <302730> # multiply-by-constant 4294967295
add in 2 <94 302730> out 1 <302731>      # 'CmpLT DFG.Input - DFG.Subtract'
split in 1 <302731> outplitBus
mul in 2 <302763 103> out 1 <303002>     # cond trueterm
const-mul-neg-1 in 1 <302763> out 1 <303003> # cond minuscond
add in 2 <100 303003> out 1 <303004>     # cond negcond
mul in 2 <303004 302728> out 1 <303005>  # cond falseterm
add in 2 <303002 303005> out 1 <303006>  # cond result
const-mul-ffffffff in 1 <93> out 1 <303007> # multiply-by-constant 4294967295
add in 2 <93 94> out 1 <303008>          # ArithBusReq.AddReq(DFG.Input,DFG.Input)
add in 2 <303008 303007> out 1 <303009>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <303009> out 1 <303010> # multiply-by-constant 4294967295
add in 2 <303008 303010> out 1 <303011>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <93> out 1 <303012> # multiply-by-constant 4294967295
add in 2 <94 303012> out 1 <303013>      # 'CmpLT DFG.Input - DFG.Input'
split in 1 <303013> out 65 <303014 303015 303016 303017 303018 303019 303020 303021 303022 303023 303024 303025 303026 303027 303028 303029 303030 303031 303032 303033 303034 303035 303036 303037 303038 303039 303040 303041 303042 303043 303044 303045 303046 303047 303048 303049 303050 303051 303052 303053 303054 303055 303056 303057 303058 303059 303060 303061 303062 303063 303064 303065 303066 303067 303068 303069 303070 303071 303072 303073 303074 303075 303076 303077 303078> # SplitBus
mul in 2 <303045 303011> out 1 <303079>  # cond trueterm
const-mul-neg-1 in 1 <303045> out 1 <303080> # cond minuscond
add in 2 <100 303080> out 1 <303081>     # cond negcond
mul in 2 <303081 94> out 1 <303082>      # cond falseterm
add in 2 <303079 303082> out 1 <303083>  # cond result
const-mul-ffffffff in 1 <303083> out 1 <303084> # multiply-by-constant 4294967295
add in 2 <303083 95> out 1 <303085>      # ArithBusReq.AddReq(DFG.Conditional,DFG.Input)
add in 2 <303085 303084> out 1 <303086>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <303086> out 1 <303087> # multiply-by-constant 4294967295
add in 2 <303085 303087> out 1 <303088>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <303083> out 1 <303089> # multiply-by-constant 4294967295
add in 2 <95 303089> out 1 <303090>      # 'CmpLT DFG.Input - DFG.Conditional'
split in 1 <303090> out 131 <303091 303092 303093 303094 303095 303096 303097 303098 303099 303100 303101 303102 303103 303104 303105 303106 303107 303108 303109 303110 303111 303112 303113 303114 303115 303116 303117 303118 303119 303120 303121 303122 303123 303124 303125 303126 303127 303128 303129 303130 303131 303132 303133 303134 303135 303136 303137 303138 303139 303140 303141 303142 303143 303144 303145 303146 303147 303148 303149 303150 303151 303152 303153 303154 303155 303156 303157 303158 303159 303160 303161 303162 303163 303164 303165 303166 303167 303168 303169 303170 303171 303172 303173 303174 303175 303176 303177 303178 303179 303180 303181 303182 303183 303184 303185 303186 303187 303188 303189 303190 303191 303192 303193 303194 303195 303196 303197 303198 303199 303200 303201 303202 303203 303204 303205 303206 303207 303208 303209 303210 303211 303212 303213 303214 303215 303216 303217 303218 303219 303220 303221> # SplitBus
mul in 2 <303122 303088> out 1 <303222>  # cond trueterm
const-mul-neg-1 in 1 <303122> out 1 <303223> # cond minuscond
add in 2 <100 303223> out 1 <303224>     # cond negcond
mul in 2 <303224 95> out 1 <303225>      # cond falseterm
add in 2 <303222 303225> out 1 <303226>  # cond result
const-mul-ffffffff in 1 <303226> out 1 <303227> # multiply-by-constant 4294967295
add in 2 <303226 96> out 1 <303228>      # ArithBusReq.AddReq(DFG.Conditional,DFG.Input)
add in 2 <303228 303227> out 1 <303229>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <303226> out 1 <303230> # multiply-by-constant 4294967295
add in 2 <96 303230> out 1 <303231>      # 'CmpLT DFG.Input - DFG.Conditional'
split in 1 <303231> out 197 <303232 303233 303234 303235 303236 303237 303238 303239 303240 303241 303242 303243 303244 303245 303246 303247 303248 303249 303250 303251 303252 303253 303254 303255 303256 303257 303258 303259 303260 303261 303262 303263 303264 303265 303266 303267 303268 303269 303270 303271 303272 303273 303274 303275 303276 303277 303278 303279 303280 303281 303282 303283 303284 303285 303286 303287 303288 303289 303290 303291 303292 303293 303294 303295 303296 303297 303298 303299 303300 303301 303302 303303 303304 303305 303306 303307 303308 303309 303310 303311 303312 303313 303314 303315 303316 303317 303318 303319 303320 303321 303322 303323 303324 303325 303326 303327 303328 303329 303330 303331 303332 303333 303334 303335 303336 303337 303338 303339 303340 303341 303342 303343 303344 303345 303346 303347 303348 303349 303350 303351 303352 303353 303354 303355 303356 303357 303358 303359 303360 303361 303362 303363 303364 303365 303366 303367 303368 303369 303370 303371 303372 303373 303374 303375 303376 303377 303378 303379 303380 303381 303382 303383 303384 303385 303386 303387 303388 303389 303390 303391 303392 303393 303394 303395 303396 303397 303398 303399 303400 303401 303402 303403 303404 303405 303406 303407 303408 303409 303410 303411 303412 303413 303414 303415 303416 303417 303418 303419 303420 303421 303422 303423 303424 303425 303426 303427 303428> # SplitBus
mul in 2 <303263 303229> out 1 <303429>  # cond trueterm
const-mul-neg-1 in 1 <303263> out 1 <303430> # cond minuscond
add in 2 <100 303430> out 1 <303431>     # cond negcond
mul in 2 <303431 303226> out 1 <303432>  # cond falseterm
add in 2 <303429 303432> out 1 <303433>  # cond result
mul in 2 <303122 303086> out 1 <303434>  # cond trueterm
const-mul-neg-1 in 1 <303122> out 1 <303435> # cond minuscond
add in 2 <100 303435> out 1 <303436>     # cond negcond
mul in 2 <303436 303083> out 1 <303437>  # cond falseterm
add in 2 <303434 303437> out 1 <303438>  # cond result
mul in 2 <303045 303009> out 1 <303439>  # cond trueterm
const-mul-neg-1 in 1 <303045> out 1 <303440> # cond minuscond
add in 2 <100 303440> out 1 <303441>     # cond negcond
mul in 2 <303441 93> out 1 <303442>      # cond falseterm
add in 2 <303439 303442> out 1 <303443>  # cond result
const-mul-ffffffff in 1 <303443> out 1 <303444> # multiply-by-constant 4294967295
add in 2 <303443 303438> out 1 <303445>  # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
add in 2 <303445 303444> out 1 <303446>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <303446> out 1 <303447> # multiply-by-constant 4294967295
add in 2 <303445 303447> out 1 <303448>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <303443> out 1 <303449> # multiply-by-constant 4294967295
add in 2 <303438 303449> out 1 <303450>  # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <303450> out 132 <303451 303452 303453 303454 303455 303456 303457 303458 303459 303460 303461 303462 303463 303464 303465 303466 303467 303468 303469 303470 303471 303472 303473 303474 303475 303476 303477 303478 303479 303480 303481 303482 303483 303484 303485 303486 303487 303488 303489 303490 303491 303492 303493 303494 303495 303496 303497 303498 303499 303500 303501 303502 303503 303504 303505 303506 303507 303508 303509 303510 303511 303512 303513 303514 303515 303516 303517 303518 303519 303520 303521 303522 303523 303524 303525 303526 303527 303528 303529 303530 303531 303532 303533 303534 303535 303536 303537 303538 303539 303540 303541 303542 303543 303544 303545 303546 303547 303548 303549 303550 303551 303552 303553 303554 303555 303556 303557 303558 303559 303560 303561 303562 303563 303564 303565 303566 303567 303568 303569 303570 303571 303572 303573 303574 303575 303576 303577 303578 303579 303580 303581 303582> # SplitBus
mul in 2 <303482 303448> out 1 <303583>  # cond trueterm
const-mul-neg-1 in 1 <303482> out 1 <303584> # cond minuscond
add in 2 <100 303584> out 1 <303585>     # cond negcond
mul in 2 <303585 303438> out 1 <303586>  # cond falseterm
add in 2 <303583 303586> out 1 <303587>  # cond result
const-mul-ffffffff in 1 <303587> out 1 <303588> # multiply-by-constant 4294967295
add in 2 <303587 303433> out 1 <303589>  # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
add in 2 <303589 303588> out 1 <303590>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <303590> out 1 <303591> # multiply-by-constant 4294967295
add in 2 <303589 303591> out 1 <303592>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <303587> out 1 <303593> # multiply-by-constant 4294967295
add in 2 <303433 303593> out 1 <303594>  # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <303594> out 199 <303595 303596 303597 303598 303599 303600 303601 303602 303603 303604 303605 303606 303607 303608 303609 303610 303611 303612 303613 303614 303615 303616 303617 303618 303619 303620 303621 303622 303623 303624 303625 303626 303627 303628 303629 303630 303631 303632 303633 303634 303635 303636 303637 303638 303639 303640 303641 303642 303643 303644 303645 303646 303647 303648 303649 303650 303651 303652 303653 303654 303655 303656 303657 303658 303659 303660 303661 303662 303663 303664 303665 303666 303667 303668 303669 303670 303671 303672 303673 303674 303675 303676 303677 303678 303679 303680 303681 303682 303683 303684 303685 303686 303687 303688 303689 303690 303691 303692 303693 303694 303695 303696 303697 303698 303699 303700 303701 303702 303703 303704 303705 303706 303707 303708 303709 303710 303711 303712 303713 303714 303715 303716 303717 303718 303719 303720 303721 303722 303723 303724 303725 303726 303727 303728 303729 303730 303731 303732 303733 303734 303735 303736 303737 303738 303739 303740 303741 303742 303743 303744 303745 303746 303747 303748 303749 303750 303751 303752 303753 303754 303755 303756 303757 303758 303759 303760 303761 303762 303763 303764 303765 303766 303767 303768 303769 303770 303771 303772 303773 303774 303775 303776 303777 303778 303779 303780 303781 303782 303783 303784 303785 303786 303787 303788 303789 303790 303791 303792 303793> # SplitBus
mul in 2 <303626 303592> out 1 <303794>  # cond trueterm
const-mul-neg-1 in 1 <303626> out 1 <303795> # cond minuscond
add in 2 <100 303795> out 1 <303796>     # cond negcond
mul in 2 <303796 303433> out 1 <303797>  # cond falseterm
add in 2 <303794 303797> out 1 <303798>  # cond result
const-mul-ffffffff in 1 <303798> out 1 <303799> # multiply-by-constant 4294967295
const-mul-ffffffff in 1 <303229> out 1 <303800> # multiply-by-constant 4294967295
add in 2 <303228 303800> out 1 <303801>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
mul in 2 <303263 303801> out 1 <303802>  # cond trueterm
const-mul-neg-1 in 1 <303263> out 1 <303803> # cond minuscond
add in 2 <100 303803> out 1 <303804>     # cond negcond
mul in 2 <303804 96> out 1 <303805>      # cond falseterm
add in 2 <303802 303805> out 1 <303806>  # cond result
const-mul-ffffffff in 1 <303806> out 1 <303807> # multiply-by-constant 4294967295
add in 2 <303806 97> out 1 <303808>      # ArithBusReq.AddReq(DFG.Conditional,DFG.Input)
split in 1 <303808> outplitBus
const-mul-2 in 1 <303840> out 1 <304040> # join source bit 31
add in 2 <303839 304040> out 1 <304041>  # join source bit 30
const-mul-2 in 1 <304041> out 1 <304042> # join
add in 2 <303838 304042> out 1 <304043>  # join source bit 29
const-mul-2 in 1 <304043> out 1 <304044> # join
add in 2 <303837 304044> out 1 <304045>  # join source bit 28
const-mul-2 in 1 <304045> out 1 <304046> # join
add in 2 <303836 304046> out 1 <304047>  # join source bit 27
const-mul-2 in 1 <304047> out 1 <304048> # join
add in 2 <303835 304048> out 1 <304049>  # join source bit 26
const-mul-2 in 1 <304049> out 1 <304050> # join
add in 2 <303834 304050> out 1 <304051>  # join source bit 25
const-mul-2 in 1 <304051> out 1 <304052> # join
add in 2 <303833 304052> out 1 <304053>  # join source bit 24
const-mul-2 in 1 <304053> out 1 <304054> # join
add in 2 <303832 304054> out 1 <304055>  # join source bit 23
const-mul-2 in 1 <304055> out 1 <304056> # join
add in 2 <303831 304056> out 1 <304057>  # join source bit 22
const-mul-2 in 1 <304057> out 1 <304058> # join
add in 2 <303830 304058> out 1 <304059>  # join source bit 21
const-mul-2 in 1 <304059> out 1 <304060> # join
add in 2 <303829 304060> out 1 <304061>  # join source bit 20
const-mul-2 in 1 <304061> out 1 <304062> # join
add in 2 <303828 304062> out 1 <304063>  # join source bit 19
const-mul-2 in 1 <304063> out 1 <304064> # join
add in 2 <303827 304064> out 1 <304065>  # join source bit 18
const-mul-2 in 1 <304065> out 1 <304066> # join
add in 2 <303826 304066> out 1 <304067>  # join source bit 17
const-mul-2 in 1 <304067> out 1 <304068> # join
add in 2 <303825 304068> out 1 <304069>  # join source bit 16
const-mul-2 in 1 <304069> out 1 <304070> # join
add in 2 <303824 304070> out 1 <304071>  # join source bit 15
const-mul-2 in 1 <304071> out 1 <304072> # join
add in 2 <303823 304072> out 1 <304073>  # join source bit 14
const-mul-2 in 1 <304073> out 1 <304074> # join
add in 2 <303822 304074> out 1 <304075>  # join source bit 13
const-mul-2 in 1 <304075> out 1 <304076> # join
add in 2 <303821 304076> out 1 <304077>  # join source bit 12
const-mul-2 in 1 <304077> out 1 <304078> # join
add in 2 <303820 304078> out 1 <304079>  # join source bit 11
const-mul-2 in 1 <304079> out 1 <304080> # join
add in 2 <303819 304080> out 1 <304081>  # join source bit 10
const-mul-2 in 1 <304081> out 1 <304082> # join
add in 2 <303818 304082> out 1 <304083>  # join source bit 9
const-mul-2 in 1 <304083> out 1 <304084> # join
add in 2 <303817 304084> out 1 <304085>  # join source bit 8
const-mul-2 in 1 <304085> out 1 <304086> # join
add in 2 <303816 304086> out 1 <304087>  # join source bit 7
const-mul-2 in 1 <304087> out 1 <304088> # join
add in 2 <303815 304088> out 1 <304089>  # join source bit 6
const-mul-2 in 1 <304089> out 1 <304090> # join
add in 2 <303814 304090> out 1 <304091>  # join source bit 5
const-mul-2 in 1 <304091> out 1 <304092> # join
add in 2 <303813 304092> out 1 <304093>  # join source bit 4
const-mul-2 in 1 <304093> out 1 <304094> # join
add in 2 <303812 304094> out 1 <304095>  # join source bit 3
const-mul-2 in 1 <304095> out 1 <304096> # join
add in 2 <303811 304096> out 1 <304097>  # join source bit 2
const-mul-2 in 1 <304097> out 1 <304098> # join
add in 2 <303810 304098> out 1 <304099>  # join source bit 1
const-mul-2 in 1 <304099> out 1 <304100> # join
add in 2 <303809 304100> out 1 <304101>  # join source bit 0
add in 2 <304101 304101> out 1 <304102>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <303806> out 1 <304103> # multiply-by-constant 4294967295
add in 2 <97 304103> out 1 <304104>      # 'CmpLT DFG.Input - DFG.Conditional'
split in 1 <304104> out 263 <304105 304106 304107 304108 304109 304110 304111 304112 304113 304114 304115 304116 304117 304118 304119 304120 304121 304122 304123 304124 304125 304126 304127 304128 304129 304130 304131 304132 304133 304134 304135 304136 304137 304138 304139 304140 304141 304142 304143 304144 304145 304146 304147 304148 304149 304150 304151 304152 304153 304154 304155 304156 304157 304158 304159 304160 304161 304162 304163 304164 304165 304166 304167 304168 304169 304170 304171 304172 304173 304174 304175 304176 304177 304178 304179 304180 304181 304182 304183 304184 304185 304186 304187 304188 304189 304190 304191 304192 304193 304194 304195 304196 304197 304198 304199 304200 304201 304202 304203 304204 304205 304206 304207 304208 304209 304210 304211 304212 304213 304214 304215 304216 304217 304218 304219 304220 304221 304222 304223 304224 304225 304226 304227 304228 304229 304230 304231 304232 304233 304234 304235 304236 304237 304238 304239 304240 304241 304242 304243 304244 304245 304246 304247 304248 304249 304250 304251 304252 304253 304254 304255 304256 304257 304258 304259 304260 304261 304262 304263 304264 304265 304266 304267 304268 304269 304270 304271 304272 304273 304274 304275 304276 304277 304278 304279 304280 304281 304282 304283 304284 304285 304286 304287 304288 304289 304290 304291 304292 304293 304294 304295 304296 304297 304298 304299 304300 304301 304302 304303 304304 304305 304306 304307 304308 304309 304310 304311 304312 304313 304314 304315 304316 304317 304318 304319 304320 304321 304322 304323 304324 304325 304326 304327 304328 304329 304330 304331 304332 304333 304334 304335 304336 304337 304338 304339 304340 304341 304342 304343 304344 304345 304346 304347 304348 304349 304350 304351 304352 304353 304354 304355 304356 304357 304358 304359 304360 304361 304362 304363 304364 304365 304366 304367> # SplitBus
mul in 2 <304136 304102> out 1 <304368>  # cond trueterm
const-mul-neg-1 in 1 <304136> out 1 <304369> # cond minuscond
add in 2 <100 304369> out 1 <304370>     # cond negcond
mul in 2 <304370 303806> out 1 <304371>  # cond falseterm
add in 2 <304368 304371> out 1 <304372>  # cond result
add in 2 <303798 304372> out 1 <304373>  # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
split in 1 <304373> out 233 <304374 304375 304376 304377 304378 304379 304380 304381 304382 304383 304384 304385 304386 304387 304388 304389 304390 304391 304392 304393 304394 304395 304396 304397 304398 304399 304400 304401 304402 304403 304404 304405 304406 304407 304408 304409 304410 304411 304412 304413 304414 304415 304416 304417 304418 304419 304420 304421 304422 304423 304424 304425 304426 304427 304428 304429 304430 304431 304432 304433 304434 304435 304436 304437 304438 304439 304440 304441 304442 304443 304444 304445 304446 304447 304448 304449 304450 304451 304452 304453 304454 304455 304456 304457 304458 304459 304460 304461 304462 304463 304464 304465 304466 304467 304468 304469 304470 304471 304472 304473 304474 304475 304476 304477 304478 304479 304480 304481 304482 304483 304484 304485 304486 304487 304488 304489 304490 304491 304492 304493 304494 304495 304496 304497 304498 304499 304500 304501 304502 304503 304504 304505 304506 304507 304508 304509 304510 304511 304512 304513 304514 304515 304516 304517 304518 304519 304520 304521 304522 304523 304524 304525 304526 304527 304528 304529 304530 304531 304532 304533 304534 304535 304536 304537 304538 304539 304540 304541 304542 304543 304544 304545 304546 304547 304548 304549 304550 304551 304552 304553 304554 304555 304556 304557 304558 304559 304560 304561 304562 304563 304564 304565 304566 304567 304568 304569 304570 304571 304572 304573 304574 304575 304576 304577 304578 304579 304580 304581 304582 304583 304584 304585 304586 304587 304588 304589 304590 304591 304592 304593 304594 304595 304596 304597 304598 304599 304600 304601 304602 304603 304604 304605 304606> # SplitBus
const-mul-2 in 1 <304405> out 1 <304607> # join source bit 31
add in 2 <304404 304607> out 1 <304608>  # join source bit 30
const-mul-2 in 1 <304608> out 1 <304609> # join
add in 2 <304403 304609> out 1 <304610>  # join source bit 29
const-mul-2 in 1 <304610> out 1 <304611> # join
add in 2 <304402 304611> out 1 <304612>  # join source bit 28
const-mul-2 in 1 <304612> out 1 <304613> # join
add in 2 <304401 304613> out 1 <304614>  # join source bit 27
const-mul-2 in 1 <304614> out 1 <304615> # join
add in 2 <304400 304615> out 1 <304616>  # join source bit 26
const-mul-2 in 1 <304616> out 1 <304617> # join
add in 2 <304399 304617> out 1 <304618>  # join source bit 25
const-mul-2 in 1 <304618> out 1 <304619> # join
add in 2 <304398 304619> out 1 <304620>  # join source bit 24
const-mul-2 in 1 <304620> out 1 <304621> # join
add in 2 <304397 304621> out 1 <304622>  # join source bit 23
const-mul-2 in 1 <304622> out 1 <304623> # join
add in 2 <304396 304623> out 1 <304624>  # join source bit 22
const-mul-2 in 1 <304624> out 1 <304625> # join
add in 2 <304395 304625> out 1 <304626>  # join source bit 21
const-mul-2 in 1 <304626> out 1 <304627> # join
add in 2 <304394 304627> out 1 <304628>  # join source bit 20
const-mul-2 in 1 <304628> out 1 <304629> # join
add in 2 <304393 304629> out 1 <304630>  # join source bit 19
const-mul-2 in 1 <304630> out 1 <304631> # join
add in 2 <304392 304631> out 1 <304632>  # join source bit 18
const-mul-2 in 1 <304632> out 1 <304633> # join
add in 2 <304391 304633> out 1 <304634>  # join source bit 17
const-mul-2 in 1 <304634> out 1 <304635> # join
add in 2 <304390 304635> out 1 <304636>  # join source bit 16
const-mul-2 in 1 <304636> out 1 <304637> # join
add in 2 <304389 304637> out 1 <304638>  # join source bit 15
const-mul-2 in 1 <304638> out 1 <304639> # join
add in 2 <304388 304639> out 1 <304640>  # join source bit 14
const-mul-2 in 1 <304640> out 1 <304641> # join
add in 2 <304387 304641> out 1 <304642>  # join source bit 13
const-mul-2 in 1 <304642> out 1 <304643> # join
add in 2 <304386 304643> out 1 <304644>  # join source bit 12
const-mul-2 in 1 <304644> out 1 <304645> # join
add in 2 <304385 304645> out 1 <304646>  # join source bit 11
const-mul-2 in 1 <304646> out 1 <304647> # join
add in 2 <304384 304647> out 1 <304648>  # join source bit 10
const-mul-2 in 1 <304648> out 1 <304649> # join
add in 2 <304383 304649> out 1 <304650>  # join source bit 9
const-mul-2 in 1 <304650> out 1 <304651> # join
add in 2 <304382 304651> out 1 <304652>  # join source bit 8
const-mul-2 in 1 <304652> out 1 <304653> # join
add in 2 <304381 304653> out 1 <304654>  # join source bit 7
const-mul-2 in 1 <304654> out 1 <304655> # join
add in 2 <304380 304655> out 1 <304656>  # join source bit 6
const-mul-2 in 1 <304656> out 1 <304657> # join
add in 2 <304379 304657> out 1 <304658>  # join source bit 5
const-mul-2 in 1 <304658> out 1 <304659> # join
add in 2 <304378 304659> out 1 <304660>  # join source bit 4
const-mul-2 in 1 <304660> out 1 <304661> # join
add in 2 <304377 304661> out 1 <304662>  # join source bit 3
const-mul-2 in 1 <304662> out 1 <304663> # join
add in 2 <304376 304663> out 1 <304664>  # join source bit 2
const-mul-2 in 1 <304664> out 1 <304665> # join
add in 2 <304375 304665> out 1 <304666>  # join source bit 1
const-mul-2 in 1 <304666> out 1 <304667> # join
add in 2 <304374 304667> out 1 <304668>  # join source bit 0
add in 2 <304668 304668> out 1 <304669>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <303798> out 1 <304670> # multiply-by-constant 4294967295
add in 2 <304372 304670> out 1 <304671>  # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <304671> out 265 <304672 304673 304674 304675 304676 304677 304678 304679 304680 304681 304682 304683 304684 304685 304686 304687 304688 304689 304690 304691 304692 304693 304694 304695 304696 304697 304698 304699 304700 304701 304702 304703 304704 304705 304706 304707 304708 304709 304710 304711 304712 304713 304714 304715 304716 304717 304718 304719 304720 304721 304722 304723 304724 304725 304726 304727 304728 304729 304730 304731 304732 304733 304734 304735 304736 304737 304738 304739 304740 304741 304742 304743 304744 304745 304746 304747 304748 304749 304750 304751 304752 304753 304754 304755 304756 304757 304758 304759 304760 304761 304762 304763 304764 304765 304766 304767 304768 304769 304770 304771 304772 304773 304774 304775 304776 304777 304778 304779 304780 304781 304782 304783 304784 304785 304786 304787 304788 304789 304790 304791 304792 304793 304794 304795 304796 304797 304798 304799 304800 304801 304802 304803 304804 304805 304806 304807 304808 304809 304810 304811 304812 304813 304814 304815 304816 304817 304818 304819 304820 304821 304822 304823 304824 304825 304826 304827 304828 304829 304830 304831 304832 304833 304834 304835 304836 304837 304838 304839 304840 304841 304842 304843 304844 304845 304846 304847 304848 304849 304850 304851 304852 304853 304854 304855 304856 304857 304858 304859 304860 304861 304862 304863 304864 304865 304866 304867 304868 304869 304870 304871 304872 304873 304874 304875 304876 304877 304878 304879 304880 304881 304882 304883 304884 304885 304886 304887 304888 304889 304890 304891 304892 304893 304894 304895 304896 304897 304898 304899 304900 304901 304902 304903 304904 304905 304906 304907 304908 304909 304910 304911 304912 304913 304914 304915 304916 304917 304918 304919 304920 304921 304922 304923 304924 304925 304926 304927 304928 304929 304930 304931 304932 304933 304934 304935 304936> # SplitBus
mul in 2 <304703 304669> out 1 <304937>  # cond trueterm
const-mul-neg-1 in 1 <304703> out 1 <304938> # cond minuscond
add in 2 <100 304938> out 1 <304939>     # cond negcond
mul in 2 <304939 303798> out 1 <304940>  # cond falseterm
add in 2 <304937 304940> out 1 <304941>  # cond result
mul in 2 <303626 303590> out 1 <304942>  # cond trueterm
const-mul-neg-1 in 1 <303626> out 1 <304943> # cond minuscond
add in 2 <100 304943> out 1 <304944>     # cond negcond
mul in 2 <304944 303587> out 1 <304945>  # cond falseterm
add in 2 <304942 304945> out 1 <304946>  # cond result
mul in 2 <303482 303446> out 1 <304947>  # cond trueterm
const-mul-neg-1 in 1 <303482> out 1 <304948> # cond minuscond
add in 2 <100 304948> out 1 <304949>     # cond negcond
mul in 2 <304949 303443> out 1 <304950>  # cond falseterm
add in 2 <304947 304950> out 1 <304951>  # cond result
const-mul-ffffffff in 1 <304951> out 1 <304952> # multiply-by-constant 4294967295
add in 2 <304951 304946> out 1 <304953>  # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
add in 2 <304953 304952> out 1 <304954>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <304954> out 1 <304955> # multiply-by-constant 4294967295
add in 2 <304953 304955> out 1 <304956>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <304951> out 1 <304957> # multiply-by-constant 4294967295
add in 2 <304946 304957> out 1 <304958>  # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <304958> out 200 <304959 304960 304961 304962 304963 304964 304965 304966 304967 304968 304969 304970 304971 304972 304973 304974 304975 304976 304977 304978 304979 304980 304981 304982 304983 304984 304985 304986 304987 304988 304989 304990 304991 304992 304993 304994 304995 304996 304997 304998 304999 305000 305001 305002 305003 305004 305005 305006 305007 305008 305009 305010 305011 305012 305013 305014 305015 305016 305017 305018 305019 305020 305021 305022 305023 305024 305025 305026 305027 305028 305029 305030 305031 305032 305033 305034 305035 305036 305037 305038 305039 305040 305041 305042 305043 305044 305045 305046 305047 305048 305049 305050 305051 305052 305053 305054 305055 305056 305057 305058 305059 305060 305061 305062 305063 305064 305065 305066 305067 305068 305069 305070 305071 305072 305073 305074 305075 305076 305077 305078 305079 305080 305081 305082 305083 305084 305085 305086 305087 305088 305089 305090 305091 305092 305093 305094 305095 305096 305097 305098 305099 305100 305101 305102 305103 305104 305105 305106 305107 305108 305109 305110 305111 305112 305113 305114 305115 305116 305117 305118 305119 305120 305121 305122 305123 305124 305125 305126 305127 305128 305129 305130 305131 305132 305133 305134 305135 305136 305137 305138 305139 305140 305141 305142 305143 305144 305145 305146 305147 305148 305149 305150 305151 305152 305153 305154 305155 305156 305157 305158> # SplitBus
mul in 2 <304990 304956> out 1 <305159>  # cond trueterm
const-mul-neg-1 in 1 <304990> out 1 <305160> # cond minuscond
add in 2 <100 305160> out 1 <305161>     # cond negcond
mul in 2 <305161 304946> out 1 <305162>  # cond falseterm
add in 2 <305159 305162> out 1 <305163>  # cond result
const-mul-ffffffff in 1 <305163> out 1 <305164> # multiply-by-constant 4294967295
add in 2 <305163 304941> out 1 <305165>  # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
split in 1 <305165> out 235 <305166 305167 305168 305169 305170 305171 305172 305173 305174 305175 305176 305177 305178 305179 305180 305181 305182 305183 305184 305185 305186 305187 305188 305189 305190 305191 305192 305193 305194 305195 305196 305197 305198 305199 305200 305201 305202 305203 305204 305205 305206 305207 305208 305209 305210 305211 305212 305213 305214 305215 305216 305217 305218 305219 305220 305221 305222 305223 305224 305225 305226 305227 305228 305229 305230 305231 305232 305233 305234 305235 305236 305237 305238 305239 305240 305241 305242 305243 305244 305245 305246 305247 305248 305249 305250 305251 305252 305253 305254 305255 305256 305257 305258 305259 305260 305261 305262 305263 305264 305265 305266 305267 305268 305269 305270 305271 305272 305273 305274 305275 305276 305277 305278 305279 305280 305281 305282 305283 305284 305285 305286 305287 305288 305289 305290 305291 305292 305293 305294 305295 305296 305297 305298 305299 305300 305301 305302 305303 305304 305305 305306 305307 305308 305309 305310 305311 305312 305313 305314 305315 305316 305317 305318 305319 305320 305321 305322 305323 305324 305325 305326 305327 305328 305329 305330 305331 305332 305333 305334 305335 305336 305337 305338 305339 305340 305341 305342 305343 305344 305345 305346 305347 305348 305349 305350 305351 305352 305353 305354 305355 305356 305357 305358 305359 305360 305361 305362 305363 305364 305365 305366 305367 305368 305369 305370 305371 305372 305373 305374 305375 305376 305377 305378 305379 305380 305381 305382 305383 305384 305385 305386 305387 305388 305389 305390 305391 305392 305393 305394 305395 305396 305397 305398 305399 305400> # SplitBus
const-mul-2 in 1 <305197> out 1 <305401> # join source bit 31
add in 2 <305196 305401> out 1 <305402>  # join source bit 30
const-mul-2 in 1 <305402> out 1 <305403> # join
add in 2 <305195 305403> out 1 <305404>  # join source bit 29
const-mul-2 in 1 <305404> out 1 <305405> # join
add in 2 <305194 305405> out 1 <305406>  # join source bit 28
const-mul-2 in 1 <305406> out 1 <305407> # join
add in 2 <305193 305407> out 1 <305408>  # join source bit 27
const-mul-2 in 1 <305408> out 1 <305409> # join
add in 2 <305192 305409> out 1 <305410>  # join source bit 26
const-mul-2 in 1 <305410> out 1 <305411> # join
add in 2 <305191 305411> out 1 <305412>  # join source bit 25
const-mul-2 in 1 <305412> out 1 <305413> # join
add in 2 <305190 305413> out 1 <305414>  # join source bit 24
const-mul-2 in 1 <305414> out 1 <305415> # join
add in 2 <305189 305415> out 1 <305416>  # join source bit 23
const-mul-2 in 1 <305416> out 1 <305417> # join
add in 2 <305188 305417> out 1 <305418>  # join source bit 22
const-mul-2 in 1 <305418> out 1 <305419> # join
add in 2 <305187 305419> out 1 <305420>  # join source bit 21
const-mul-2 in 1 <305420> out 1 <305421> # join
add in 2 <305186 305421> out 1 <305422>  # join source bit 20
const-mul-2 in 1 <305422> out 1 <305423> # join
add in 2 <305185 305423> out 1 <305424>  # join source bit 19
const-mul-2 in 1 <305424> out 1 <305425> # join
add in 2 <305184 305425> out 1 <305426>  # join source bit 18
const-mul-2 in 1 <305426> out 1 <305427> # join
add in 2 <305183 305427> out 1 <305428>  # join source bit 17
const-mul-2 in 1 <305428> out 1 <305429> # join
add in 2 <305182 305429> out 1 <305430>  # join source bit 16
const-mul-2 in 1 <305430> out 1 <305431> # join
add in 2 <305181 305431> out 1 <305432>  # join source bit 15
const-mul-2 in 1 <305432> out 1 <305433> # join
add in 2 <305180 305433> out 1 <305434>  # join source bit 14
const-mul-2 in 1 <305434> out 1 <305435> # join
add in 2 <305179 305435> out 1 <305436>  # join source bit 13
const-mul-2 in 1 <305436> out 1 <305437> # join
add in 2 <305178 305437> out 1 <305438>  # join source bit 12
const-mul-2 in 1 <305438> out 1 <305439> # join
add in 2 <305177 305439> out 1 <305440>  # join source bit 11
const-mul-2 in 1 <305440> out 1 <305441> # join
add in 2 <305176 305441> out 1 <305442>  # join source bit 10
const-mul-2 in 1 <305442> out 1 <305443> # join
add in 2 <305175 305443> out 1 <305444>  # join source bit 9
const-mul-2 in 1 <305444> out 1 <305445> # join
add in 2 <305174 305445> out 1 <305446>  # join source bit 8
const-mul-2 in 1 <305446> out 1 <305447> # join
add in 2 <305173 305447> out 1 <305448>  # join source bit 7
const-mul-2 in 1 <305448> out 1 <305449> # join
add in 2 <305172 305449> out 1 <305450>  # join source bit 6
const-mul-2 in 1 <305450> out 1 <305451> # join
add in 2 <305171 305451> out 1 <305452>  # join source bit 5
const-mul-2 in 1 <305452> out 1 <305453> # join
add in 2 <305170 305453> out 1 <305454>  # join source bit 4
const-mul-2 in 1 <305454> out 1 <305455> # join
add in 2 <305169 305455> out 1 <305456>  # join source bit 3
const-mul-2 in 1 <305456> out 1 <305457> # join
add in 2 <305168 305457> out 1 <305458>  # join source bit 2
const-mul-2 in 1 <305458> out 1 <305459> # join
add in 2 <305167 305459> out 1 <305460>  # join source bit 1
const-mul-2 in 1 <305460> out 1 <305461> # join
add in 2 <305166 305461> out 1 <305462>  # join source bit 0
add in 2 <305462 305462> out 1 <305463>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <305463> out 1 <305464> # multiply-by-constant 4294967295
add in 2 <305165 305464> out 1 <305465>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <305163> out 1 <305466> # multiply-by-constant 4294967295
add in 2 <304941 305466> out 1 <305467>  # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <305467> out 267 <305468 305469 305470 305471 305472 305473 305474 305475 305476 305477 305478 305479 305480 305481 305482 305483 305484 305485 305486 305487 305488 305489 305490 305491 305492 305493 305494 305495 305496 305497 305498 305499 305500 305501 305502 305503 305504 305505 305506 305507 305508 305509 305510 305511 305512 305513 305514 305515 305516 305517 305518 305519 305520 305521 305522 305523 305524 305525 305526 305527 305528 305529 305530 305531 305532 305533 305534 305535 305536 305537 305538 305539 305540 305541 305542 305543 305544 305545 305546 305547 305548 305549 305550 305551 305552 305553 305554 305555 305556 305557 305558 305559 305560 305561 305562 305563 305564 305565 305566 305567 305568 305569 305570 305571 305572 305573 305574 305575 305576 305577 305578 305579 305580 305581 305582 305583 305584 305585 305586 305587 305588 305589 305590 305591 305592 305593 305594 305595 305596 305597 305598 305599 305600 305601 305602 305603 305604 305605 305606 305607 305608 305609 305610 305611 305612 305613 305614 305615 305616 305617 305618 305619 305620 305621 305622 305623 305624 305625 305626 305627 305628 305629 305630 305631 305632 305633 305634 305635 305636 305637 305638 305639 305640 305641 305642 305643 305644 305645 305646 305647 305648 305649 305650 305651 305652 305653 305654 305655 305656 305657 305658 305659 305660 305661 305662 305663 305664 305665 305666 305667 305668 305669 305670 305671 305672 305673 305674 305675 305676 305677 305678 305679 305680 305681 305682 305683 305684 305685 305686 305687 305688 305689 305690 305691 305692 305693 305694 305695 305696 305697 305698 305699 305700 305701 305702 305703 305704 305705 305706 305707 305708 305709 305710 305711 305712 305713 305714 305715 305716 305717 305718 305719 305720 305721 305722 305723 305724 305725 305726 305727 305728 305729 305730 305731 305732 305733 305734> # SplitBus
mul in 2 <305499 305465> out 1 <305735>  # cond trueterm
const-mul-neg-1 in 1 <305499> out 1 <305736> # cond minuscond
add in 2 <100 305736> out 1 <305737>     # cond negcond
mul in 2 <305737 304941> out 1 <305738>  # cond falseterm
add in 2 <305735 305738> out 1 <305739>  # cond result
add in 2 <305739 104> out 1 <305740>     # ArithBusReq.AddReq(DFG.Conditional,DFG.Constant)
const-mul-ffffffff in 1 <95> out 1 <305741> # multiply-by-constant 4294967295
add in 2 <305740 305741> out 1 <305742>  # 'CmpLT DFG.Add - DFG.Input'
split in 1 <305742> out 238 <305743 305744 305745 305746 305747 305748 305749 305750 305751 305752 305753 305754 305755 305756 305757 305758 305759 305760 305761 305762 305763 305764 305765 305766 305767 305768 305769 305770 305771 305772 305773 305774 305775 305776 305777 305778 305779 305780 305781 305782 305783 305784 305785 305786 305787 305788 305789 305790 305791 305792 305793 305794 305795 305796 305797 305798 305799 305800 305801 305802 305803 305804 305805 305806 305807 305808 305809 305810 305811 305812 305813 305814 305815 305816 305817 305818 305819 305820 305821 305822 305823 305824 305825 305826 305827 305828 305829 305830 305831 305832 305833 305834 305835 305836 305837 305838 305839 305840 305841 305842 305843 305844 305845 305846 305847 305848 305849 305850 305851 305852 305853 305854 305855 305856 305857 305858 305859 305860 305861 305862 305863 305864 305865 305866 305867 305868 305869 305870 305871 305872 305873 305874 305875 305876 305877 305878 305879 305880 305881 305882 305883 305884 305885 305886 305887 305888 305889 305890 305891 305892 305893 305894 305895 305896 305897 305898 305899 305900 305901 305902 305903 305904 305905 305906 305907 305908 305909 305910 305911 305912 305913 305914 305915 305916 305917 305918 305919 305920 305921 305922 305923 305924 305925 305926 305927 305928 305929 305930 305931 305932 305933 305934 305935 305936 305937 305938 305939 305940 305941 305942 305943 305944 305945 305946 305947 305948 305949 305950 305951 305952 305953 305954 305955 305956 305957 305958 305959 305960 305961 305962 305963 305964 305965 305966 305967 305968 305969 305970 305971 305972 305973 305974 305975 305976 305977 305978 305979 305980> # SplitBus
mul in 2 <305774 103> out 1 <305981>     # cond trueterm
const-mul-neg-1 in 1 <305774> out 1 <305982> # cond minuscond
add in 2 <100 305982> out 1 <305983>     # cond negcond
mul in 2 <305983 102> out 1 <305984>     # cond falseterm
add in 2 <305981 305984> out 1 <305985>  # cond result
add in 2 <305739 3084> out 1 <305986>    # ArithBusReq.AddReq(DFG.Conditional,DFG.Negate)
const-mul-ffffffff in 1 <305986> out 1 <305987> # multiply-by-constant 4294967295
add in 2 <95 305987> out 1 <305988>      # 'CmpLT DFG.Input - DFG.Subtract'
split in 1 <305988> out 270 <305989 305990 305991 305992 305993 305994 305995 305996 305997 305998 305999 306000 306001 306002 306003 306004 306005 306006 306007 306008 306009 306010 306011 306012 306013 306014 306015 306016 306017 306018 306019 306020 306021 306022 306023 306024 306025 306026 306027 306028 306029 306030 306031 306032 306033 306034 306035 306036 306037 306038 306039 306040 306041 306042 306043 306044 306045 306046 306047 306048 306049 306050 306051 306052 306053 306054 306055 306056 306057 306058 306059 306060 306061 306062 306063 306064 306065 306066 306067 306068 306069 306070 306071 306072 306073 306074 306075 306076 306077 306078 306079 306080 306081 306082 306083 306084 306085 306086 306087 306088 306089 306090 306091 306092 306093 306094 306095 306096 306097 306098 306099 306100 306101 306102 306103 306104 306105 306106 306107 306108 306109 306110 306111 306112 306113 306114 306115 306116 306117 306118 306119 306120 306121 306122 306123 306124 306125 306126 306127 306128 306129 306130 306131 306132 306133 306134 306135 306136 306137 306138 306139 306140 306141 306142 306143 306144 306145 306146 306147 306148 306149 306150 306151 306152 306153 306154 306155 306156 306157 306158 306159 306160 306161 306162 306163 306164 306165 306166 306167 306168 306169 306170 306171 306172 306173 306174 306175 306176 306177 306178 306179 306180 306181 306182 306183 306184 306185 306186 306187 306188 306189 306190 306191 306192 306193 306194 306195 306196 306197 306198 306199 306200 306201 306202 306203 306204 306205 306206 306207 306208 306209 306210 306211 306212 306213 306214 306215 306216 306217 306218 306219 306220 306221 306222 306223 306224 306225 306226 306227 306228 306229 306230 306231 306232 306233 306234 306235 306236 306237 306238 306239 306240 306241 306242 306243 306244 306245 306246 306247 306248 306249 306250 306251 306252 306253 306254 306255 306256 306257 306258> # SplitBus
mul in 2 <306020 103> out 1 <306259>     # cond trueterm
const-mul-neg-1 in 1 <306020> out 1 <306260> # cond minuscond
add in 2 <100 306260> out 1 <306261>     # cond negcond
mul in 2 <306261 305985> out 1 <306262>  # cond falseterm
add in 2 <306259 306262> out 1 <306263>  # cond result
const-mul-ffffffff in 1 <94> out 1 <306264> # multiply-by-constant 4294967295
add in 2 <94 95> out 1 <306265>          # ArithBusReq.AddReq(DFG.Input,DFG.Input)
add in 2 <306265 306264> out 1 <306266>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <306266> out 1 <306267> # multiply-by-constant 4294967295
add in 2 <306265 306267> out 1 <306268>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <94> out 1 <306269> # multiply-by-constant 4294967295
add in 2 <95 306269> out 1 <306270>      # 'CmpLT DFG.Input - DFG.Input'
split in 1 <306270> out 65 <306271 306272 306273 306274 306275 306276 306277 306278 306279 306280 306281 306282 306283 306284 306285 306286 306287 306288 306289 306290 306291 306292 306293 306294 306295 306296 306297 306298 306299 306300 306301 306302 306303 306304 306305 306306 306307 306308 306309 306310 306311 306312 306313 306314 306315 306316 306317 306318 306319 306320 306321 306322 306323 306324 306325 306326 306327 306328 306329 306330 306331 306332 306333 306334 306335> # SplitBus
mul in 2 <306302 306268> out 1 <306336>  # cond trueterm
const-mul-neg-1 in 1 <306302> out 1 <306337> # cond minuscond
add in 2 <100 306337> out 1 <306338>     # cond negcond
mul in 2 <306338 95> out 1 <306339>      # cond falseterm
add in 2 <306336 306339> out 1 <306340>  # cond result
const-mul-ffffffff in 1 <306340> out 1 <306341> # multiply-by-constant 4294967295
add in 2 <306340 96> out 1 <306342>      # ArithBusReq.AddReq(DFG.Conditional,DFG.Input)
add in 2 <306342 306341> out 1 <306343>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <306343> out 1 <306344> # multiply-by-constant 4294967295
add in 2 <306342 306344> out 1 <306345>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <306340> out 1 <306346> # multiply-by-constant 4294967295
add in 2 <96 306346> out 1 <306347>      # 'CmpLT DFG.Input - DFG.Conditional'
split in 1 <306347> out 131 <306348 306349 306350 306351 306352 306353 306354 306355 306356 306357 306358 306359 306360 306361 306362 306363 306364 306365 306366 306367 306368 306369 306370 306371 306372 306373 306374 306375 306376 306377 306378 306379 306380 306381 306382 306383 306384 306385 306386 306387 306388 306389 306390 306391 306392 306393 306394 306395 306396 306397 306398 306399 306400 306401 306402 306403 306404 306405 306406 306407 306408 306409 306410 306411 306412 306413 306414 306415 306416 306417 306418 306419 306420 306421 306422 306423 306424 306425 306426 306427 306428 306429 306430 306431 306432 306433 306434 306435 306436 306437 306438 306439 306440 306441 306442 306443 306444 306445 306446 306447 306448 306449 306450 306451 306452 306453 306454 306455 306456 306457 306458 306459 306460 306461 306462 306463 306464 306465 306466 306467 306468 306469 306470 306471 306472 306473 306474 306475 306476 306477 306478> # SplitBus
mul in 2 <306379 306345> out 1 <306479>  # cond trueterm
const-mul-neg-1 in 1 <306379> out 1 <306480> # cond minuscond
add in 2 <100 306480> out 1 <306481>     # cond negcond
mul in 2 <306481 96> out 1 <306482>      # cond falseterm
add in 2 <306479 306482> out 1 <306483>  # cond result
const-mul-ffffffff in 1 <306483> out 1 <306484> # multiply-by-constant 4294967295
add in 2 <306483 97> out 1 <306485>      # ArithBusReq.AddReq(DFG.Conditional,DFG.Input)
add in 2 <306485 306484> out 1 <306486>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <306483> out 1 <306487> # multiply-by-constant 4294967295
add in 2 <97 306487> out 1 <306488>      # 'CmpLT DFG.Input - DFG.Conditional'
split in 1 <306488> out 197 <306489 306490 306491 306492 306493 306494 306495 306496 306497 306498 306499 306500 306501 306502 306503 306504 306505 306506 306507 306508 306509 306510 306511 306512 306513 306514 306515 306516 306517 306518 306519 306520 306521 306522 306523 306524 306525 306526 306527 306528 306529 306530 306531 306532 306533 306534 306535 306536 306537 306538 306539 306540 306541 306542 306543 306544 306545 306546 306547 306548 306549 306550 306551 306552 306553 306554 306555 306556 306557 306558 306559 306560 306561 306562 306563 306564 306565 306566 306567 306568 306569 306570 306571 306572 306573 306574 306575 306576 306577 306578 306579 306580 306581 306582 306583 306584 306585 306586 306587 306588 306589 306590 306591 306592 306593 306594 306595 306596 306597 306598 306599 306600 306601 306602 306603 306604 306605 306606 306607 306608 306609 306610 306611 306612 306613 306614 306615 306616 306617 306618 306619 306620 306621 306622 306623 306624 306625 306626 306627 306628 306629 306630 306631 306632 306633 306634 306635 306636 306637 306638 306639 306640 306641 306642 306643 306644 306645 306646 306647 306648 306649 306650 306651 306652 306653 306654 306655 306656 306657 306658 306659 306660 306661 306662 306663 306664 306665 306666 306667 306668 306669 306670 306671 306672 306673 306674 306675 306676 306677 306678 306679 306680 306681 306682 306683 306684 306685> # SplitBus
mul in 2 <306520 306486> out 1 <306686>  # cond trueterm
const-mul-neg-1 in 1 <306520> out 1 <306687> # cond minuscond
add in 2 <100 306687> out 1 <306688>     # cond negcond
mul in 2 <306688 306483> out 1 <306689>  # cond falseterm
add in 2 <306686 306689> out 1 <306690>  # cond result
mul in 2 <306379 306343> out 1 <306691>  # cond trueterm
const-mul-neg-1 in 1 <306379> out 1 <306692> # cond minuscond
add in 2 <100 306692> out 1 <306693>     # cond negcond
mul in 2 <306693 306340> out 1 <306694>  # cond falseterm
add in 2 <306691 306694> out 1 <306695>  # cond result
mul in 2 <306302 306266> out 1 <306696>  # cond trueterm
const-mul-neg-1 in 1 <306302> out 1 <306697> # cond minuscond
add in 2 <100 306697> out 1 <306698>     # cond negcond
mul in 2 <306698 94> out 1 <306699>      # cond falseterm
add in 2 <306696 306699> out 1 <306700>  # cond result
const-mul-ffffffff in 1 <306700> out 1 <306701> # multiply-by-constant 4294967295
add in 2 <306700 306695> out 1 <306702>  # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
add in 2 <306702 306701> out 1 <306703>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <306703> out 1 <306704> # multiply-by-constant 4294967295
add in 2 <306702 306704> out 1 <306705>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <306700> out 1 <306706> # multiply-by-constant 4294967295
add in 2 <306695 306706> out 1 <306707>  # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <306707> out 132 <306708 306709 306710 306711 306712 306713 306714 306715 306716 306717 306718 306719 306720 306721 306722 306723 306724 306725 306726 306727 306728 306729 306730 306731 306732 306733 306734 306735 306736 306737 306738 306739 306740 306741 306742 306743 306744 306745 306746 306747 306748 306749 306750 306751 306752 306753 306754 306755 306756 306757 306758 306759 306760 306761 306762 306763 306764 306765 306766 306767 306768 306769 306770 306771 306772 306773 306774 306775 306776 306777 306778 306779 306780 306781 306782 306783 306784 306785 306786 306787 306788 306789 306790 306791 306792 306793 306794 306795 306796 306797 306798 306799 306800 306801 306802 306803 306804 306805 306806 306807 306808 306809 306810 306811 306812 306813 306814 306815 306816 306817 306818 306819 306820 306821 306822 306823 306824 306825 306826 306827 306828 306829 306830 306831 306832 306833 306834 306835 306836 306837 306838 306839> # SplitBus
mul in 2 <306739 306705> out 1 <306840>  # cond trueterm
const-mul-neg-1 in 1 <306739> out 1 <306841> # cond minuscond
add in 2 <100 306841> out 1 <306842>     # cond negcond
mul in 2 <306842 306695> out 1 <306843>  # cond falseterm
add in 2 <306840 306843> out 1 <306844>  # cond result
const-mul-ffffffff in 1 <306844> out 1 <306845> # multiply-by-constant 4294967295
add in 2 <306844 306690> out 1 <306846>  # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
add in 2 <306846 306845> out 1 <306847>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <306847> out 1 <306848> # multiply-by-constant 4294967295
add in 2 <306846 306848> out 1 <306849>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <306844> out 1 <306850> # multiply-by-constant 4294967295
add in 2 <306690 306850> out 1 <306851>  # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <306851> out 199 <306852 306853 306854 306855 306856 306857 306858 306859 306860 306861 306862 306863 306864 306865 306866 306867 306868 306869 306870 306871 306872 306873 306874 306875 306876 306877 306878 306879 306880 306881 306882 306883 306884 306885 306886 306887 306888 306889 306890 306891 306892 306893 306894 306895 306896 306897 306898 306899 306900 306901 306902 306903 306904 306905 306906 306907 306908 306909 306910 306911 306912 306913 306914 306915 306916 306917 306918 306919 306920 306921 306922 306923 306924 306925 306926 306927 306928 306929 306930 306931 306932 306933 306934 306935 306936 306937 306938 306939 306940 306941 306942 306943 306944 306945 306946 306947 306948 306949 306950 306951 306952 306953 306954 306955 306956 306957 306958 306959 306960 306961 306962 306963 306964 306965 306966 306967 306968 306969 306970 306971 306972 306973 306974 306975 306976 306977 306978 306979 306980 306981 306982 306983 306984 306985 306986 306987 306988 306989 306990 306991 306992 306993 306994 306995 306996 306997 306998 306999 307000 307001 307002 307003 307004 307005 307006 307007 307008 307009 307010 307011 307012 307013 307014 307015 307016 307017 307018 307019 307020 307021 307022 307023 307024 307025 307026 307027 307028 307029 307030 307031 307032 307033 307034 307035 307036 307037 307038 307039 307040 307041 307042 307043 307044 307045 307046 307047 307048 307049 307050> # SplitBus
mul in 2 <306883 306849> out 1 <307051>  # cond trueterm
const-mul-neg-1 in 1 <306883> out 1 <307052> # cond minuscond
add in 2 <100 307052> out 1 <307053>     # cond negcond
mul in 2 <307053 306690> out 1 <307054>  # cond falseterm
add in 2 <307051 307054> out 1 <307055>  # cond result
const-mul-ffffffff in 1 <307055> out 1 <307056> # multiply-by-constant 4294967295
const-mul-ffffffff in 1 <306486> out 1 <307057> # multiply-by-constant 4294967295
add in 2 <306485 307057> out 1 <307058>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
mul in 2 <306520 307058> out 1 <307059>  # cond trueterm
const-mul-neg-1 in 1 <306520> out 1 <307060> # cond minuscond
add in 2 <100 307060> out 1 <307061>     # cond negcond
mul in 2 <307061 97> out 1 <307062>      # cond falseterm
add in 2 <307059 307062> out 1 <307063>  # cond result
const-mul-ffffffff in 1 <307063> out 1 <307064> # multiply-by-constant 4294967295
add in 2 <307063 98> out 1 <307065>      # ArithBusReq.AddReq(DFG.Conditional,DFG.Input)
split in 1 <307065> out 231 <307066 307067 307068 307069 307070 307071 307072 307073 307074 307075 307076 307077 307078 307079 307080 307081 307082 307083 307084 307085 307086 307087 307088 307089 307090 307091 307092 307093 307094 307095 307096 307097 307098 307099 307100 307101 307102 307103 307104 307105 307106 307107 307108 307109 307110 307111 307112 307113 307114 307115 307116 307117 307118 307119 307120 307121 307122 307123 307124 307125 307126 307127 307128 307129 307130 307131 307132 307133 307134 307135 307136 307137 307138 307139 307140 307141 307142 307143 307144 307145 307146 307147 307148 307149 307150 307151 307152 307153 307154 307155 307156 307157 307158 307159 307160 307161 307162 307163 307164 307165 307166 307167 307168 307169 307170 307171 307172 307173 307174 307175 307176 307177 307178 307179 307180 307181 307182 307183 307184 307185 307186 307187 307188 307189 307190 307191 307192 307193 307194 307195 307196 307197 307198 307199 307200 307201 307202 307203 307204 307205 307206 307207 307208 307209 307210 307211 307212 307213 307214 307215 307216 307217 307218 307219 307220 307221 307222 307223 307224 307225 307226 307227 307228 307229 307230 307231 307232 307233 307234 307235 307236 307237 307238 307239 307240 307241 307242 307243 307244 307245 307246 307247 307248 307249 307250 307251 307252 307253 307254 307255 307256 307257 307258 307259 307260 307261 307262 307263 307264 307265 307266 307267 307268 307269 307270 307271 307272 307273 307274 307275 307276 307277 307278 307279 307280 307281 307282 307283 307284 307285 307286 307287 307288 307289 307290 307291 307292 307293 307294 307295 307296> # SplitBus
const-mul-2 in 1 <307097> out 1 <307297> # join source bit 31
add in 2 <307096 307297> out 1 <307298>  # join source bit 30
const-mul-2 in 1 <307298> out 1 <307299> # join
add in 2 <307095 307299> out 1 <307300>  # join source bit 29
const-mul-2 in 1 <307300> out 1 <307301> # join
add in 2 <307094 307301> out 1 <307302>  # join source bit 28
const-mul-2 in 1 <307302> out 1 <307303> # join
add in 2 <307093 307303> out 1 <307304>  # join source bit 27
const-mul-2 in 1 <307304> out 1 <307305> # join
add in 2 <307092 307305> out 1 <307306>  # join source bit 26
const-mul-2 in 1 <307306> out 1 <307307> # join
add in 2 <307091 307307> out 1 <307308>  # join source bit 25
const-mul-2 in 1 <307308> out 1 <307309> # join
add in 2 <307090 307309> out 1 <307310>  # join source bit 24
const-mul-2 in 1 <307310> out 1 <307311> # join
add in 2 <307089 307311> out 1 <307312>  # join source bit 23
const-mul-2 in 1 <307312> out 1 <307313> # join
add in 2 <307088 307313> out 1 <307314>  # join source bit 22
const-mul-2 in 1 <307314> out 1 <307315> # join
add in 2 <307087 307315> out 1 <307316>  # join source bit 21
const-mul-2 in 1 <307316> out 1 <307317> # join
add in 2 <307086 307317> out 1 <307318>  # join source bit 20
const-mul-2 in 1 <307318> out 1 <307319> # join
add in 2 <307085 307319> out 1 <307320>  # join source bit 19
const-mul-2 in 1 <307320> out 1 <307321> # join
add in 2 <307084 307321> out 1 <307322>  # join source bit 18
const-mul-2 in 1 <307322> out 1 <307323> # join
add in 2 <307083 307323> out 1 <307324>  # join source bit 17
const-mul-2 in 1 <307324> out 1 <307325> # join
add in 2 <307082 307325> out 1 <307326>  # join source bit 16
const-mul-2 in 1 <307326> out 1 <307327> # join
add in 2 <307081 307327> out 1 <307328>  # join source bit 15
const-mul-2 in 1 <307328> out 1 <307329> # join
add in 2 <307080 307329> out 1 <307330>  # join source bit 14
const-mul-2 in 1 <307330> out 1 <307331> # join
add in 2 <307079 307331> out 1 <307332>  # join source bit 13
const-mul-2 in 1 <307332> out 1 <307333> # join
add in 2 <307078 307333> out 1 <307334>  # join source bit 12
const-mul-2 in 1 <307334> out 1 <307335> # join
add in 2 <307077 307335> out 1 <307336>  # join source bit 11
const-mul-2 in 1 <307336> out 1 <307337> # join
add in 2 <307076 307337> out 1 <307338>  # join source bit 10
const-mul-2 in 1 <307338> out 1 <307339> # join
add in 2 <307075 307339> out 1 <307340>  # join source bit 9
const-mul-2 in 1 <307340> out 1 <307341> # join
add in 2 <307074 307341> out 1 <307342>  # join source bit 8
const-mul-2 in 1 <307342> out 1 <307343> # join
add in 2 <307073 307343> out 1 <307344>  # join source bit 7
const-mul-2 in 1 <307344> out 1 <307345> # join
add in 2 <307072 307345> out 1 <307346>  # join source bit 6
const-mul-2 in 1 <307346> out 1 <307347> # join
add in 2 <307071 307347> out 1 <307348>  # join source bit 5
const-mul-2 in 1 <307348> out 1 <307349> # join
add in 2 <307070 307349> out 1 <307350>  # join source bit 4
const-mul-2 in 1 <307350> out 1 <307351> # join
add in 2 <307069 307351> out 1 <307352>  # join source bit 3
const-mul-2 in 1 <307352> out 1 <307353> # join
add in 2 <307068 307353> out 1 <307354>  # join source bit 2
const-mul-2 in 1 <307354> out 1 <307355> # join
add in 2 <307067 307355> out 1 <307356>  # join source bit 1
const-mul-2 in 1 <307356> out 1 <307357> # join
add in 2 <307066 307357> out 1 <307358>  # join source bit 0
add in 2 <307358 307358> out 1 <307359>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <307063> out 1 <307360> # multiply-by-constant 4294967295
add in 2 <98 307360> out 1 <307361>      # 'CmpLT DFG.Input - DFG.Conditional'
split in 1 <307361> out 263 <307362 307363 307364 307365 307366 307367 307368 307369 307370 307371 307372 307373 307374 307375 307376 307377 307378 307379 307380 307381 307382 307383 307384 307385 307386 307387 307388 307389 307390 307391 307392 307393 307394 307395 307396 307397 307398 307399 307400 307401 307402 307403 307404 307405 307406 307407 307408 307409 307410 307411 307412 307413 307414 307415 307416 307417 307418 307419 307420 307421 307422 307423 307424 307425 307426 307427 307428 307429 307430 307431 307432 307433 307434 307435 307436 307437 307438 307439 307440 307441 307442 307443 307444 307445 307446 307447 307448 307449 307450 307451 307452 307453 307454 307455 307456 307457 307458 307459 307460 307461 307462 307463 307464 307465 307466 307467 307468 307469 307470 307471 307472 307473 307474 307475 307476 307477 307478 307479 307480 307481 307482 307483 307484 307485 307486 307487 307488 307489 307490 307491 307492 307493 307494 307495 307496 307497 307498 307499 307500 307501 307502 307503 307504 307505 307506 307507 307508 307509 307510 307511 307512 307513 307514 307515 307516 307517 307518 307519 307520 307521 307522 307523 307524 307525 307526 307527 307528 307529 307530 307531 307532 307533 307534 307535 307536 307537 307538 307539 307540 307541 307542 307543 307544 307545 307546 307547 307548 307549 307550 307551 307552 307553 307554 307555 307556 307557 307558 307559 307560 307561 307562 307563 307564 307565 307566 307567 307568 307569 307570 307571 307572 307573 307574 307575 307576 307577 307578 307579 307580 307581 307582 307583 307584 307585 307586 307587 307588 307589 307590 307591 307592 307593 307594 307595 307596 307597 307598 307599 307600 307601 307602 307603 307604 307605 307606 307607 307608 307609 307610 307611 307612 307613 307614 307615 307616 307617 307618 307619 307620 307621 307622 307623 307624> # SplitBus
mul in 2 <307393 307359> out 1 <307625>  # cond trueterm
const-mul-neg-1 in 1 <307393> out 1 <307626> # cond minuscond
add in 2 <100 307626> out 1 <307627>     # cond negcond
mul in 2 <307627 307063> out 1 <307628>  # cond falseterm
add in 2 <307625 307628> out 1 <307629>  # cond result
add in 2 <307055 307629> out 1 <307630>  # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
split in 1 <307630> outplitBus
const-mul-2 in 1 <307662> out 1 <307864> # join source bit 31
add in 2 <307661 307864> out 1 <307865>  # join source bit 30
const-mul-2 in 1 <307865> out 1 <307866> # join
add in 2 <307660 307866> out 1 <307867>  # join source bit 29
const-mul-2 in 1 <307867> out 1 <307868> # join
add in 2 <307659 307868> out 1 <307869>  # join source bit 28
const-mul-2 in 1 <307869> out 1 <307870> # join
add in 2 <307658 307870> out 1 <307871>  # join source bit 27
const-mul-2 in 1 <307871> out 1 <307872> # join
add in 2 <307657 307872> out 1 <307873>  # join source bit 26
const-mul-2 in 1 <307873> out 1 <307874> # join
add in 2 <307656 307874> out 1 <307875>  # join source bit 25
const-mul-2 in 1 <307875> out 1 <307876> # join
add in 2 <307655 307876> out 1 <307877>  # join source bit 24
const-mul-2 in 1 <307877> out 1 <307878> # join
add in 2 <307654 307878> out 1 <307879>  # join source bit 23
const-mul-2 in 1 <307879> out 1 <307880> # join
add in 2 <307653 307880> out 1 <307881>  # join source bit 22
const-mul-2 in 1 <307881> out 1 <307882> # join
add in 2 <307652 307882> out 1 <307883>  # join source bit 21
const-mul-2 in 1 <307883> out 1 <307884> # join
add in 2 <307651 307884> out 1 <307885>  # join source bit 20
const-mul-2 in 1 <307885> out 1 <307886> # join
add in 2 <307650 307886> out 1 <307887>  # join source bit 19
const-mul-2 in 1 <307887> out 1 <307888> # join
add in 2 <307649 307888> out 1 <307889>  # join source bit 18
const-mul-2 in 1 <307889> out 1 <307890> # join
add in 2 <307648 307890> out 1 <307891>  # join source bit 17
const-mul-2 in 1 <307891> out 1 <307892> # join
add in 2 <307647 307892> out 1 <307893>  # join source bit 16
const-mul-2 in 1 <307893> out 1 <307894> # join
add in 2 <307646 307894> out 1 <307895>  # join source bit 15
const-mul-2 in 1 <307895> out 1 <307896> # join
add in 2 <307645 307896> out 1 <307897>  # join source bit 14
const-mul-2 in 1 <307897> out 1 <307898> # join
add in 2 <307644 307898> out 1 <307899>  # join source bit 13
const-mul-2 in 1 <307899> out 1 <307900> # join
add in 2 <307643 307900> out 1 <307901>  # join source bit 12
const-mul-2 in 1 <307901> out 1 <307902> # join
add in 2 <307642 307902> out 1 <307903>  # join source bit 11
const-mul-2 in 1 <307903> out 1 <307904> # join
add in 2 <307641 307904> out 1 <307905>  # join source bit 10
const-mul-2 in 1 <307905> out 1 <307906> # join
add in 2 <307640 307906> out 1 <307907>  # join source bit 9
const-mul-2 in 1 <307907> out 1 <307908> # join
add in 2 <307639 307908> out 1 <307909>  # join source bit 8
const-mul-2 in 1 <307909> out 1 <307910> # join
add in 2 <307638 307910> out 1 <307911>  # join source bit 7
const-mul-2 in 1 <307911> out 1 <307912> # join
add in 2 <307637 307912> out 1 <307913>  # join source bit 6
const-mul-2 in 1 <307913> out 1 <307914> # join
add in 2 <307636 307914> out 1 <307915>  # join source bit 5
const-mul-2 in 1 <307915> out 1 <307916> # join
add in 2 <307635 307916> out 1 <307917>  # join source bit 4
const-mul-2 in 1 <307917> out 1 <307918> # join
add in 2 <307634 307918> out 1 <307919>  # join source bit 3
const-mul-2 in 1 <307919> out 1 <307920> # join
add in 2 <307633 307920> out 1 <307921>  # join source bit 2
const-mul-2 in 1 <307921> out 1 <307922> # join
add in 2 <307632 307922> out 1 <307923>  # join source bit 1
const-mul-2 in 1 <307923> out 1 <307924> # join
add in 2 <307631 307924> out 1 <307925>  # join source bit 0
add in 2 <307925 307925> out 1 <307926>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <307055> out 1 <307927> # multiply-by-constant 4294967295
add in 2 <307629 307927> out 1 <307928>  # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <307928> outplitBus
mul in 2 <307960 307926> out 1 <308194>  # cond trueterm
const-mul-neg-1 in 1 <307960> out 1 <308195> # cond minuscond
add in 2 <100 308195> out 1 <308196>     # cond negcond
mul in 2 <308196 307055> out 1 <308197>  # cond falseterm
add in 2 <308194 308197> out 1 <308198>  # cond result
mul in 2 <306883 306847> out 1 <308199>  # cond trueterm
const-mul-neg-1 in 1 <306883> out 1 <308200> # cond minuscond
add in 2 <100 308200> out 1 <308201>     # cond negcond
mul in 2 <308201 306844> out 1 <308202>  # cond falseterm
add in 2 <308199 308202> out 1 <308203>  # cond result
mul in 2 <306739 306703> out 1 <308204>  # cond trueterm
const-mul-neg-1 in 1 <306739> out 1 <308205> # cond minuscond
add in 2 <100 308205> out 1 <308206>     # cond negcond
mul in 2 <308206 306700> out 1 <308207>  # cond falseterm
add in 2 <308204 308207> out 1 <308208>  # cond result
const-mul-ffffffff in 1 <308208> out 1 <308209> # multiply-by-constant 4294967295
add in 2 <308208 308203> out 1 <308210>  # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
add in 2 <308210 308209> out 1 <308211>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <308211> out 1 <308212> # multiply-by-constant 4294967295
add in 2 <308210 308212> out 1 <308213>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <308208> out 1 <308214> # multiply-by-constant 4294967295
add in 2 <308203 308214> out 1 <308215>  # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <308215> out 200 <308216 308217 308218 308219 308220 308221 308222 308223 308224 308225 308226 308227 308228 308229 308230 308231 308232 308233 308234 308235 308236 308237 308238 308239 308240 308241 308242 308243 308244 308245 308246 308247 308248 308249 308250 308251 308252 308253 308254 308255 308256 308257 308258 308259 308260 308261 308262 308263 308264 308265 308266 308267 308268 308269 308270 308271 308272 308273 308274 308275 308276 308277 308278 308279 308280 308281 308282 308283 308284 308285 308286 308287 308288 308289 308290 308291 308292 308293 308294 308295 308296 308297 308298 308299 308300 308301 308302 308303 308304 308305 308306 308307 308308 308309 308310 308311 308312 308313 308314 308315 308316 308317 308318 308319 308320 308321 308322 308323 308324 308325 308326 308327 308328 308329 308330 308331 308332 308333 308334 308335 308336 308337 308338 308339 308340 308341 308342 308343 308344 308345 308346 308347 308348 308349 308350 308351 308352 308353 308354 308355 308356 308357 308358 308359 308360 308361 308362 308363 308364 308365 308366 308367 308368 308369 308370 308371 308372 308373 308374 308375 308376 308377 308378 308379 308380 308381 308382 308383 308384 308385 308386 308387 308388 308389 308390 308391 308392 308393 308394 308395 308396 308397 308398 308399 308400 308401 308402 308403 308404 308405 308406 308407 308408 308409 308410 308411 308412 308413 308414 308415> # SplitBus
mul in 2 <308247 308213> out 1 <308416>  # cond trueterm
const-mul-neg-1 in 1 <308247> out 1 <308417> # cond minuscond
add in 2 <100 308417> out 1 <308418>     # cond negcond
mul in 2 <308418 308203> out 1 <308419>  # cond falseterm
add in 2 <308416 308419> out 1 <308420>  # cond result
const-mul-ffffffff in 1 <308420> out 1 <308421> # multiply-by-constant 4294967295
add in 2 <308420 308198> out 1 <308422>  # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
split in 1 <308422> outplitBus
const-mul-2 in 1 <308454> out 1 <308658> # join source bit 31
add in 2 <308453 308658> out 1 <308659>  # join source bit 30
const-mul-2 in 1 <308659> out 1 <308660> # join
add in 2 <308452 308660> out 1 <308661>  # join source bit 29
const-mul-2 in 1 <308661> out 1 <308662> # join
add in 2 <308451 308662> out 1 <308663>  # join source bit 28
const-mul-2 in 1 <308663> out 1 <308664> # join
add in 2 <308450 308664> out 1 <308665>  # join source bit 27
const-mul-2 in 1 <308665> out 1 <308666> # join
add in 2 <308449 308666> out 1 <308667>  # join source bit 26
const-mul-2 in 1 <308667> out 1 <308668> # join
add in 2 <308448 308668> out 1 <308669>  # join source bit 25
const-mul-2 in 1 <308669> out 1 <308670> # join
add in 2 <308447 308670> out 1 <308671>  # join source bit 24
const-mul-2 in 1 <308671> out 1 <308672> # join
add in 2 <308446 308672> out 1 <308673>  # join source bit 23
const-mul-2 in 1 <308673> out 1 <308674> # join
add in 2 <308445 308674> out 1 <308675>  # join source bit 22
const-mul-2 in 1 <308675> out 1 <308676> # join
add in 2 <308444 308676> out 1 <308677>  # join source bit 21
const-mul-2 in 1 <308677> out 1 <308678> # join
add in 2 <308443 308678> out 1 <308679>  # join source bit 20
const-mul-2 in 1 <308679> out 1 <308680> # join
add in 2 <308442 308680> out 1 <308681>  # join source bit 19
const-mul-2 in 1 <308681> out 1 <308682> # join
add in 2 <308441 308682> out 1 <308683>  # join source bit 18
const-mul-2 in 1 <308683> out 1 <308684> # join
add in 2 <308440 308684> out 1 <308685>  # join source bit 17
const-mul-2 in 1 <308685> out 1 <308686> # join
add in 2 <308439 308686> out 1 <308687>  # join source bit 16
const-mul-2 in 1 <308687> out 1 <308688> # join
add in 2 <308438 308688> out 1 <308689>  # join source bit 15
const-mul-2 in 1 <308689> out 1 <308690> # join
add in 2 <308437 308690> out 1 <308691>  # join source bit 14
const-mul-2 in 1 <308691> out 1 <308692> # join
add in 2 <308436 308692> out 1 <308693>  # join source bit 13
const-mul-2 in 1 <308693> out 1 <308694> # join
add in 2 <308435 308694> out 1 <308695>  # join source bit 12
const-mul-2 in 1 <308695> out 1 <308696> # join
add in 2 <308434 308696> out 1 <308697>  # join source bit 11
const-mul-2 in 1 <308697> out 1 <308698> # join
add in 2 <308433 308698> out 1 <308699>  # join source bit 10
const-mul-2 in 1 <308699> out 1 <308700> # join
add in 2 <308432 308700> out 1 <308701>  # join source bit 9
const-mul-2 in 1 <308701> out 1 <308702> # join
add in 2 <308431 308702> out 1 <308703>  # join source bit 8
const-mul-2 in 1 <308703> out 1 <308704> # join
add in 2 <308430 308704> out 1 <308705>  # join source bit 7
const-mul-2 in 1 <308705> out 1 <308706> # join
add in 2 <308429 308706> out 1 <308707>  # join source bit 6
const-mul-2 in 1 <308707> out 1 <308708> # join
add in 2 <308428 308708> out 1 <308709>  # join source bit 5
const-mul-2 in 1 <308709> out 1 <308710> # join
add in 2 <308427 308710> out 1 <308711>  # join source bit 4
const-mul-2 in 1 <308711> out 1 <308712> # join
add in 2 <308426 308712> out 1 <308713>  # join source bit 3
const-mul-2 in 1 <308713> out 1 <308714> # join
add in 2 <308425 308714> out 1 <308715>  # join source bit 2
const-mul-2 in 1 <308715> out 1 <308716> # join
add in 2 <308424 308716> out 1 <308717>  # join source bit 1
const-mul-2 in 1 <308717> out 1 <308718> # join
add in 2 <308423 308718> out 1 <308719>  # join source bit 0
add in 2 <308719 308719> out 1 <308720>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <308720> out 1 <308721> # multiply-by-constant 4294967295
add in 2 <308422 308721> out 1 <308722>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <308420> out 1 <308723> # multiply-by-constant 4294967295
add in 2 <308198 308723> out 1 <308724>  # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <308724> outplitBus
mul in 2 <308756 308722> out 1 <308992>  # cond trueterm
const-mul-neg-1 in 1 <308756> out 1 <308993> # cond minuscond
add in 2 <100 308993> out 1 <308994>     # cond negcond
mul in 2 <308994 308198> out 1 <308995>  # cond falseterm
add in 2 <308992 308995> out 1 <308996>  # cond result
add in 2 <308996 104> out 1 <308997>     # ArithBusReq.AddReq(DFG.Conditional,DFG.Constant)
const-mul-ffffffff in 1 <96> out 1 <308998> # multiply-by-constant 4294967295
add in 2 <308997 308998> out 1 <308999>  # 'CmpLT DFG.Add - DFG.Input'
split in 1 <308999> outplitBus
mul in 2 <309031 103> out 1 <309238>     # cond trueterm
const-mul-neg-1 in 1 <309031> out 1 <309239> # cond minuscond
add in 2 <100 309239> out 1 <309240>     # cond negcond
mul in 2 <309240 102> out 1 <309241>     # cond falseterm
add in 2 <309238 309241> out 1 <309242>  # cond result
add in 2 <308996 3084> out 1 <309243>    # ArithBusReq.AddReq(DFG.Conditional,DFG.Negate)
const-mul-ffffffff in 1 <309243> out 1 <309244> # multiply-by-constant 4294967295
add in 2 <96 309244> out 1 <309245>      # 'CmpLT DFG.Input - DFG.Subtract'
split in 1 <309245> out 270 <309246 309247 309248 309249 309250 309251 309252 309253 309254 309255 309256 309257 309258 309259 309260 309261 309262 309263 309264 309265 309266 309267 309268 309269 309270 309271 309272 309273 309274 309275 309276 309277 309278 309279 309280 309281 309282 309283 309284 309285 309286 309287 309288 309289 309290 309291 309292 309293 309294 309295 309296 309297 309298 309299 309300 309301 309302 309303 309304 309305 309306 309307 309308 309309 309310 309311 309312 309313 309314 309315 309316 309317 309318 309319 309320 309321 309322 309323 309324 309325 309326 309327 309328 309329 309330 309331 309332 309333 309334 309335 309336 309337 309338 309339 309340 309341 309342 309343 309344 309345 309346 309347 309348 309349 309350 309351 309352 309353 309354 309355 309356 309357 309358 309359 309360 309361 309362 309363 309364 309365 309366 309367 309368 309369 309370 309371 309372 309373 309374 309375 309376 309377 309378 309379 309380 309381 309382 309383 309384 309385 309386 309387 309388 309389 309390 309391 309392 309393 309394 309395 309396 309397 309398 309399 309400 309401 309402 309403 309404 309405 309406 309407 309408 309409 309410 309411 309412 309413 309414 309415 309416 309417 309418 309419 309420 309421 309422 309423 309424 309425 309426 309427 309428 309429 309430 309431 309432 309433 309434 309435 309436 309437 309438 309439 309440 309441 309442 309443 309444 309445 309446 309447 309448 309449 309450 309451 309452 309453 309454 309455 309456 309457 309458 309459 309460 309461 309462 309463 309464 309465 309466 309467 309468 309469 309470 309471 309472 309473 309474 309475 309476 309477 309478 309479 309480 309481 309482 309483 309484 309485 309486 309487 309488 309489 309490 309491 309492 309493 309494 309495 309496 309497 309498 309499 309500 309501 309502 309503 309504 309505 309506 309507 309508 309509 309510 309511 309512 309513 309514 309515> # SplitBus
mul in 2 <309277 103> out 1 <309516>     # cond trueterm
const-mul-neg-1 in 1 <309277> out 1 <309517> # cond minuscond
add in 2 <100 309517> out 1 <309518>     # cond negcond
mul in 2 <309518 309242> out 1 <309519>  # cond falseterm
add in 2 <309516 309519> out 1 <309520>  # cond result
const-mul-ffffffff in 1 <95> out 1 <309521> # multiply-by-constant 4294967295
add in 2 <95 96> out 1 <309522>          # ArithBusReq.AddReq(DFG.Input,DFG.Input)
add in 2 <309522 309521> out 1 <309523>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <309523> out 1 <309524> # multiply-by-constant 4294967295
add in 2 <309522 309524> out 1 <309525>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <95> out 1 <309526> # multiply-by-constant 4294967295
add in 2 <96 309526> out 1 <309527>      # 'CmpLT DFG.Input - DFG.Input'
split in 1 <309527> out 65 <309528 309529 309530 309531 309532 309533 309534 309535 309536 309537 309538 309539 309540 309541 309542 309543 309544 309545 309546 309547 309548 309549 309550 309551 309552 309553 309554 309555 309556 309557 309558 309559 309560 309561 309562 309563 309564 309565 309566 309567 309568 309569 309570 309571 309572 309573 309574 309575 309576 309577 309578 309579 309580 309581 309582 309583 309584 309585 309586 309587 309588 309589 309590 309591 309592> # SplitBus
mul in 2 <309559 309525> out 1 <309593>  # cond trueterm
const-mul-neg-1 in 1 <309559> out 1 <309594> # cond minuscond
add in 2 <100 309594> out 1 <309595>     # cond negcond
mul in 2 <309595 96> out 1 <309596>      # cond falseterm
add in 2 <309593 309596> out 1 <309597>  # cond result
const-mul-ffffffff in 1 <309597> out 1 <309598> # multiply-by-constant 4294967295
add in 2 <309597 97> out 1 <309599>      # ArithBusReq.AddReq(DFG.Conditional,DFG.Input)
add in 2 <309599 309598> out 1 <309600>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <309600> out 1 <309601> # multiply-by-constant 4294967295
add in 2 <309599 309601> out 1 <309602>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <309597> out 1 <309603> # multiply-by-constant 4294967295
add in 2 <97 309603> out 1 <309604>      # 'CmpLT DFG.Input - DFG.Conditional'
split in 1 <309604> out 131 <309605 309606 309607 309608 309609 309610 309611 309612 309613 309614 309615 309616 309617 309618 309619 309620 309621 309622 309623 309624 309625 309626 309627 309628 309629 309630 309631 309632 309633 309634 309635 309636 309637 309638 309639 309640 309641 309642 309643 309644 309645 309646 309647 309648 309649 309650 309651 309652 309653 309654 309655 309656 309657 309658 309659 309660 309661 309662 309663 309664 309665 309666 309667 309668 309669 309670 309671 309672 309673 309674 309675 309676 309677 309678 309679 309680 309681 309682 309683 309684 309685 309686 309687 309688 309689 309690 309691 309692 309693 309694 309695 309696 309697 309698 309699 309700 309701 309702 309703 309704 309705 309706 309707 309708 309709 309710 309711 309712 309713 309714 309715 309716 309717 309718 309719 309720 309721 309722 309723 309724 309725 309726 309727 309728 309729 309730 309731 309732 309733 309734 309735> # SplitBus
mul in 2 <309636 309602> out 1 <309736>  # cond trueterm
const-mul-neg-1 in 1 <309636> out 1 <309737> # cond minuscond
add in 2 <100 309737> out 1 <309738>     # cond negcond
mul in 2 <309738 97> out 1 <309739>      # cond falseterm
add in 2 <309736 309739> out 1 <309740>  # cond result
const-mul-ffffffff in 1 <309740> out 1 <309741> # multiply-by-constant 4294967295
add in 2 <309740 98> out 1 <309742>      # ArithBusReq.AddReq(DFG.Conditional,DFG.Input)
add in 2 <309742 309741> out 1 <309743>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <309740> out 1 <309744> # multiply-by-constant 4294967295
add in 2 <98 309744> out 1 <309745>      # 'CmpLT DFG.Input - DFG.Conditional'
split in 1 <309745> out 197 <309746 309747 309748 309749 309750 309751 309752 309753 309754 309755 309756 309757 309758 309759 309760 309761 309762 309763 309764 309765 309766 309767 309768 309769 309770 309771 309772 309773 309774 309775 309776 309777 309778 309779 309780 309781 309782 309783 309784 309785 309786 309787 309788 309789 309790 309791 309792 309793 309794 309795 309796 309797 309798 309799 309800 309801 309802 309803 309804 309805 309806 309807 309808 309809 309810 309811 309812 309813 309814 309815 309816 309817 309818 309819 309820 309821 309822 309823 309824 309825 309826 309827 309828 309829 309830 309831 309832 309833 309834 309835 309836 309837 309838 309839 309840 309841 309842 309843 309844 309845 309846 309847 309848 309849 309850 309851 309852 309853 309854 309855 309856 309857 309858 309859 309860 309861 309862 309863 309864 309865 309866 309867 309868 309869 309870 309871 309872 309873 309874 309875 309876 309877 309878 309879 309880 309881 309882 309883 309884 309885 309886 309887 309888 309889 309890 309891 309892 309893 309894 309895 309896 309897 309898 309899 309900 309901 309902 309903 309904 309905 309906 309907 309908 309909 309910 309911 309912 309913 309914 309915 309916 309917 309918 309919 309920 309921 309922 309923 309924 309925 309926 309927 309928 309929 309930 309931 309932 309933 309934 309935 309936 309937 309938 309939 309940 309941 309942> # SplitBus
mul in 2 <309777 309743> out 1 <309943>  # cond trueterm
const-mul-neg-1 in 1 <309777> out 1 <309944> # cond minuscond
add in 2 <100 309944> out 1 <309945>     # cond negcond
mul in 2 <309945 309740> out 1 <309946>  # cond falseterm
add in 2 <309943 309946> out 1 <309947>  # cond result
mul in 2 <309636 309600> out 1 <309948>  # cond trueterm
const-mul-neg-1 in 1 <309636> out 1 <309949> # cond minuscond
add in 2 <100 309949> out 1 <309950>     # cond negcond
mul in 2 <309950 309597> out 1 <309951>  # cond falseterm
add in 2 <309948 309951> out 1 <309952>  # cond result
mul in 2 <309559 309523> out 1 <309953>  # cond trueterm
const-mul-neg-1 in 1 <309559> out 1 <309954> # cond minuscond
add in 2 <100 309954> out 1 <309955>     # cond negcond
mul in 2 <309955 95> out 1 <309956>      # cond falseterm
add in 2 <309953 309956> out 1 <309957>  # cond result
const-mul-ffffffff in 1 <309957> out 1 <309958> # multiply-by-constant 4294967295
add in 2 <309957 309952> out 1 <309959>  # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
add in 2 <309959 309958> out 1 <309960>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <309960> out 1 <309961> # multiply-by-constant 4294967295
add in 2 <309959 309961> out 1 <309962>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <309957> out 1 <309963> # multiply-by-constant 4294967295
add in 2 <309952 309963> out 1 <309964>  # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <309964> out 132 <309965 309966 309967 309968 309969 309970 309971 309972 309973 309974 309975 309976 309977 309978 309979 309980 309981 309982 309983 309984 309985 309986 309987 309988 309989 309990 309991 309992 309993 309994 309995 309996 309997 309998 309999 310000 310001 310002 310003 310004 310005 310006 310007 310008 310009 310010 310011 310012 310013 310014 310015 310016 310017 310018 310019 310020 310021 310022 310023 310024 310025 310026 310027 310028 310029 310030 310031 310032 310033 310034 310035 310036 310037 310038 310039 310040 310041 310042 310043 310044 310045 310046 310047 310048 310049 310050 310051 310052 310053 310054 310055 310056 310057 310058 310059 310060 310061 310062 310063 310064 310065 310066 310067 310068 310069 310070 310071 310072 310073 310074 310075 310076 310077 310078 310079 310080 310081 310082 310083 310084 310085 310086 310087 310088 310089 310090 310091 310092 310093 310094 310095 310096> # SplitBus
mul in 2 <309996 309962> out 1 <310097>  # cond trueterm
const-mul-neg-1 in 1 <309996> out 1 <310098> # cond minuscond
add in 2 <100 310098> out 1 <310099>     # cond negcond
mul in 2 <310099 309952> out 1 <310100>  # cond falseterm
add in 2 <310097 310100> out 1 <310101>  # cond result
const-mul-ffffffff in 1 <310101> out 1 <310102> # multiply-by-constant 4294967295
add in 2 <310101 309947> out 1 <310103>  # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
add in 2 <310103 310102> out 1 <310104>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <310104> out 1 <310105> # multiply-by-constant 4294967295
add in 2 <310103 310105> out 1 <310106>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <310101> out 1 <310107> # multiply-by-constant 4294967295
add in 2 <309947 310107> out 1 <310108>  # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <310108> out 199 <310109 310110 310111 310112 310113 310114 310115 310116 310117 310118 310119 310120 310121 310122 310123 310124 310125 310126 310127 310128 310129 310130 310131 310132 310133 310134 310135 310136 310137 310138 310139 310140 310141 310142 310143 310144 310145 310146 310147 310148 310149 310150 310151 310152 310153 310154 310155 310156 310157 310158 310159 310160 310161 310162 310163 310164 310165 310166 310167 310168 310169 310170 310171 310172 310173 310174 310175 310176 310177 310178 310179 310180 310181 310182 310183 310184 310185 310186 310187 310188 310189 310190 310191 310192 310193 310194 310195 310196 310197 310198 310199 310200 310201 310202 310203 310204 310205 310206 310207 310208 310209 310210 310211 310212 310213 310214 310215 310216 310217 310218 310219 310220 310221 310222 310223 310224 310225 310226 310227 310228 310229 310230 310231 310232 310233 310234 310235 310236 310237 310238 310239 310240 310241 310242 310243 310244 310245 310246 310247 310248 310249 310250 310251 310252 310253 310254 310255 310256 310257 310258 310259 310260 310261 310262 310263 310264 310265 310266 310267 310268 310269 310270 310271 310272 310273 310274 310275 310276 310277 310278 310279 310280 310281 310282 310283 310284 310285 310286 310287 310288 310289 310290 310291 310292 310293 310294 310295 310296 310297 310298 310299 310300 310301 310302 310303 310304 310305 310306 310307> # SplitBus
mul in 2 <310140 310106> out 1 <310308>  # cond trueterm
const-mul-neg-1 in 1 <310140> out 1 <310309> # cond minuscond
add in 2 <100 310309> out 1 <310310>     # cond negcond
mul in 2 <310310 309947> out 1 <310311>  # cond falseterm
add in 2 <310308 310311> out 1 <310312>  # cond result
const-mul-ffffffff in 1 <310312> out 1 <310313> # multiply-by-constant 4294967295
const-mul-ffffffff in 1 <309743> out 1 <310314> # multiply-by-constant 4294967295
add in 2 <309742 310314> out 1 <310315>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
mul in 2 <309777 310315> out 1 <310316>  # cond trueterm
const-mul-neg-1 in 1 <309777> out 1 <310317> # cond minuscond
add in 2 <100 310317> out 1 <310318>     # cond negcond
mul in 2 <310318 98> out 1 <310319>      # cond falseterm
add in 2 <310316 310319> out 1 <310320>  # cond result
const-mul-ffffffff in 1 <310320> out 1 <310321> # multiply-by-constant 4294967295
add in 2 <310320 99> out 1 <310322>      # ArithBusReq.AddReq(DFG.Conditional,DFG.Input)
split in 1 <310322> outplitBus
const-mul-2 in 1 <310354> out 1 <310554> # join source bit 31
add in 2 <310353 310554> out 1 <310555>  # join source bit 30
const-mul-2 in 1 <310555> out 1 <310556> # join
add in 2 <310352 310556> out 1 <310557>  # join source bit 29
const-mul-2 in 1 <310557> out 1 <310558> # join
add in 2 <310351 310558> out 1 <310559>  # join source bit 28
const-mul-2 in 1 <310559> out 1 <310560> # join
add in 2 <310350 310560> out 1 <310561>  # join source bit 27
const-mul-2 in 1 <310561> out 1 <310562> # join
add in 2 <310349 310562> out 1 <310563>  # join source bit 26
const-mul-2 in 1 <310563> out 1 <310564> # join
add in 2 <310348 310564> out 1 <310565>  # join source bit 25
const-mul-2 in 1 <310565> out 1 <310566> # join
add in 2 <310347 310566> out 1 <310567>  # join source bit 24
const-mul-2 in 1 <310567> out 1 <310568> # join
add in 2 <310346 310568> out 1 <310569>  # join source bit 23
const-mul-2 in 1 <310569> out 1 <310570> # join
add in 2 <310345 310570> out 1 <310571>  # join source bit 22
const-mul-2 in 1 <310571> out 1 <310572> # join
add in 2 <310344 310572> out 1 <310573>  # join source bit 21
const-mul-2 in 1 <310573> out 1 <310574> # join
add in 2 <310343 310574> out 1 <310575>  # join source bit 20
const-mul-2 in 1 <310575> out 1 <310576> # join
add in 2 <310342 310576> out 1 <310577>  # join source bit 19
const-mul-2 in 1 <310577> out 1 <310578> # join
add in 2 <310341 310578> out 1 <310579>  # join source bit 18
const-mul-2 in 1 <310579> out 1 <310580> # join
add in 2 <310340 310580> out 1 <310581>  # join source bit 17
const-mul-2 in 1 <310581> out 1 <310582> # join
add in 2 <310339 310582> out 1 <310583>  # join source bit 16
const-mul-2 in 1 <310583> out 1 <310584> # join
add in 2 <310338 310584> out 1 <310585>  # join source bit 15
const-mul-2 in 1 <310585> out 1 <310586> # join
add in 2 <310337 310586> out 1 <310587>  # join source bit 14
const-mul-2 in 1 <310587> out 1 <310588> # join
add in 2 <310336 310588> out 1 <310589>  # join source bit 13
const-mul-2 in 1 <310589> out 1 <310590> # join
add in 2 <310335 310590> out 1 <310591>  # join source bit 12
const-mul-2 in 1 <310591> out 1 <310592> # join
add in 2 <310334 310592> out 1 <310593>  # join source bit 11
const-mul-2 in 1 <310593> out 1 <310594> # join
add in 2 <310333 310594> out 1 <310595>  # join source bit 10
const-mul-2 in 1 <310595> out 1 <310596> # join
add in 2 <310332 310596> out 1 <310597>  # join source bit 9
const-mul-2 in 1 <310597> out 1 <310598> # join
add in 2 <310331 310598> out 1 <310599>  # join source bit 8
const-mul-2 in 1 <310599> out 1 <310600> # join
add in 2 <310330 310600> out 1 <310601>  # join source bit 7
const-mul-2 in 1 <310601> out 1 <310602> # join
add in 2 <310329 310602> out 1 <310603>  # join source bit 6
const-mul-2 in 1 <310603> out 1 <310604> # join
add in 2 <310328 310604> out 1 <310605>  # join source bit 5
const-mul-2 in 1 <310605> out 1 <310606> # join
add in 2 <310327 310606> out 1 <310607>  # join source bit 4
const-mul-2 in 1 <310607> out 1 <310608> # join
add in 2 <310326 310608> out 1 <310609>  # join source bit 3
const-mul-2 in 1 <310609> out 1 <310610> # join
add in 2 <310325 310610> out 1 <310611>  # join source bit 2
const-mul-2 in 1 <310611> out 1 <310612> # join
add in 2 <310324 310612> out 1 <310613>  # join source bit 1
const-mul-2 in 1 <310613> out 1 <310614> # join
add in 2 <310323 310614> out 1 <310615>  # join source bit 0
add in 2 <310615 310615> out 1 <310616>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <310320> out 1 <310617> # multiply-by-constant 4294967295
add in 2 <99 310617> out 1 <310618>      # 'CmpLT DFG.Input - DFG.Conditional'
split in 1 <310618> outplitBus
mul in 2 <310650 310616> out 1 <310882>  # cond trueterm
const-mul-neg-1 in 1 <310650> out 1 <310883> # cond minuscond
add in 2 <100 310883> out 1 <310884>     # cond negcond
mul in 2 <310884 310320> out 1 <310885>  # cond falseterm
add in 2 <310882 310885> out 1 <310886>  # cond result
add in 2 <310312 310886> out 1 <310887>  # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
split in 1 <310887> out 233 <310888 310889 310890 310891 310892 310893 310894 310895 310896 310897 310898 310899 310900 310901 310902 310903 310904 310905 310906 310907 310908 310909 310910 310911 310912 310913 310914 310915 310916 310917 310918 310919 310920 310921 310922 310923 310924 310925 310926 310927 310928 310929 310930 310931 310932 310933 310934 310935 310936 310937 310938 310939 310940 310941 310942 310943 310944 310945 310946 310947 310948 310949 310950 310951 310952 310953 310954 310955 310956 310957 310958 310959 310960 310961 310962 310963 310964 310965 310966 310967 310968 310969 310970 310971 310972 310973 310974 310975 310976 310977 310978 310979 310980 310981 310982 310983 310984 310985 310986 310987 310988 310989 310990 310991 310992 310993 310994 310995 310996 310997 310998 310999 311000 311001 311002 311003 311004 311005 311006 311007 311008 311009 311010 311011 311012 311013 311014 311015 311016 311017 311018 311019 311020 311021 311022 311023 311024 311025 311026 311027 311028 311029 311030 311031 311032 311033 311034 311035 311036 311037 311038 311039 311040 311041 311042 311043 311044 311045 311046 311047 311048 311049 311050 311051 311052 311053 311054 311055 311056 311057 311058 311059 311060 311061 311062 311063 311064 311065 311066 311067 311068 311069 311070 311071 311072 311073 311074 311075 311076 311077 311078 311079 311080 311081 311082 311083 311084 311085 311086 311087 311088 311089 311090 311091 311092 311093 311094 311095 311096 311097 311098 311099 311100 311101 311102 311103 311104 311105 311106 311107 311108 311109 311110 311111 311112 311113 311114 311115 311116 311117 311118 311119 311120> # SplitBus
const-mul-2 in 1 <310919> out 1 <311121> # join source bit 31
add in 2 <310918 311121> out 1 <311122>  # join source bit 30
const-mul-2 in 1 <311122> out 1 <311123> # join
add in 2 <310917 311123> out 1 <311124>  # join source bit 29
const-mul-2 in 1 <311124> out 1 <311125> # join
add in 2 <310916 311125> out 1 <311126>  # join source bit 28
const-mul-2 in 1 <311126> out 1 <311127> # join
add in 2 <310915 311127> out 1 <311128>  # join source bit 27
const-mul-2 in 1 <311128> out 1 <311129> # join
add in 2 <310914 311129> out 1 <311130>  # join source bit 26
const-mul-2 in 1 <311130> out 1 <311131> # join
add in 2 <310913 311131> out 1 <311132>  # join source bit 25
const-mul-2 in 1 <311132> out 1 <311133> # join
add in 2 <310912 311133> out 1 <311134>  # join source bit 24
const-mul-2 in 1 <311134> out 1 <311135> # join
add in 2 <310911 311135> out 1 <311136>  # join source bit 23
const-mul-2 in 1 <311136> out 1 <311137> # join
add in 2 <310910 311137> out 1 <311138>  # join source bit 22
const-mul-2 in 1 <311138> out 1 <311139> # join
add in 2 <310909 311139> out 1 <311140>  # join source bit 21
const-mul-2 in 1 <311140> out 1 <311141> # join
add in 2 <310908 311141> out 1 <311142>  # join source bit 20
const-mul-2 in 1 <311142> out 1 <311143> # join
add in 2 <310907 311143> out 1 <311144>  # join source bit 19
const-mul-2 in 1 <311144> out 1 <311145> # join
add in 2 <310906 311145> out 1 <311146>  # join source bit 18
const-mul-2 in 1 <311146> out 1 <311147> # join
add in 2 <310905 311147> out 1 <311148>  # join source bit 17
const-mul-2 in 1 <311148> out 1 <311149> # join
add in 2 <310904 311149> out 1 <311150>  # join source bit 16
const-mul-2 in 1 <311150> out 1 <311151> # join
add in 2 <310903 311151> out 1 <311152>  # join source bit 15
const-mul-2 in 1 <311152> out 1 <311153> # join
add in 2 <310902 311153> out 1 <311154>  # join source bit 14
const-mul-2 in 1 <311154> out 1 <311155> # join
add in 2 <310901 311155> out 1 <311156>  # join source bit 13
const-mul-2 in 1 <311156> out 1 <311157> # join
add in 2 <310900 311157> out 1 <311158>  # join source bit 12
const-mul-2 in 1 <311158> out 1 <311159> # join
add in 2 <310899 311159> out 1 <311160>  # join source bit 11
const-mul-2 in 1 <311160> out 1 <311161> # join
add in 2 <310898 311161> out 1 <311162>  # join source bit 10
const-mul-2 in 1 <311162> out 1 <311163> # join
add in 2 <310897 311163> out 1 <311164>  # join source bit 9
const-mul-2 in 1 <311164> out 1 <311165> # join
add in 2 <310896 311165> out 1 <311166>  # join source bit 8
const-mul-2 in 1 <311166> out 1 <311167> # join
add in 2 <310895 311167> out 1 <311168>  # join source bit 7
const-mul-2 in 1 <311168> out 1 <311169> # join
add in 2 <310894 311169> out 1 <311170>  # join source bit 6
const-mul-2 in 1 <311170> out 1 <311171> # join
add in 2 <310893 311171> out 1 <311172>  # join source bit 5
const-mul-2 in 1 <311172> out 1 <311173> # join
add in 2 <310892 311173> out 1 <311174>  # join source bit 4
const-mul-2 in 1 <311174> out 1 <311175> # join
add in 2 <310891 311175> out 1 <311176>  # join source bit 3
const-mul-2 in 1 <311176> out 1 <311177> # join
add in 2 <310890 311177> out 1 <311178>  # join source bit 2
const-mul-2 in 1 <311178> out 1 <311179> # join
add in 2 <310889 311179> out 1 <311180>  # join source bit 1
const-mul-2 in 1 <311180> out 1 <311181> # join
add in 2 <310888 311181> out 1 <311182>  # join source bit 0
add in 2 <311182 311182> out 1 <311183>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <310312> out 1 <311184> # multiply-by-constant 4294967295
add in 2 <310886 311184> out 1 <311185>  # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <311185> out 265 <311186 311187 311188 311189 311190 311191 311192 311193 311194 311195 311196 311197 311198 311199 311200 311201 311202 311203 311204 311205 311206 311207 311208 311209 311210 311211 311212 311213 311214 311215 311216 311217 311218 311219 311220 311221 311222 311223 311224 311225 311226 311227 311228 311229 311230 311231 311232 311233 311234 311235 311236 311237 311238 311239 311240 311241 311242 311243 311244 311245 311246 311247 311248 311249 311250 311251 311252 311253 311254 311255 311256 311257 311258 311259 311260 311261 311262 311263 311264 311265 311266 311267 311268 311269 311270 311271 311272 311273 311274 311275 311276 311277 311278 311279 311280 311281 311282 311283 311284 311285 311286 311287 311288 311289 311290 311291 311292 311293 311294 311295 311296 311297 311298 311299 311300 311301 311302 311303 311304 311305 311306 311307 311308 311309 311310 311311 311312 311313 311314 311315 311316 311317 311318 311319 311320 311321 311322 311323 311324 311325 311326 311327 311328 311329 311330 311331 311332 311333 311334 311335 311336 311337 311338 311339 311340 311341 311342 311343 311344 311345 311346 311347 311348 311349 311350 311351 311352 311353 311354 311355 311356 311357 311358 311359 311360 311361 311362 311363 311364 311365 311366 311367 311368 311369 311370 311371 311372 311373 311374 311375 311376 311377 311378 311379 311380 311381 311382 311383 311384 311385 311386 311387 311388 311389 311390 311391 311392 311393 311394 311395 311396 311397 311398 311399 311400 311401 311402 311403 311404 311405 311406 311407 311408 311409 311410 311411 311412 311413 311414 311415 311416 311417 311418 311419 311420 311421 311422 311423 311424 311425 311426 311427 311428 311429 311430 311431 311432 311433 311434 311435 311436 311437 311438 311439 311440 311441 311442 311443 311444 311445 311446 311447 311448 311449 311450> # SplitBus
mul in 2 <311217 311183> out 1 <311451>  # cond trueterm
const-mul-neg-1 in 1 <311217> out 1 <311452> # cond minuscond
add in 2 <100 311452> out 1 <311453>     # cond negcond
mul in 2 <311453 310312> out 1 <311454>  # cond falseterm
add in 2 <311451 311454> out 1 <311455>  # cond result
mul in 2 <310140 310104> out 1 <311456>  # cond trueterm
const-mul-neg-1 in 1 <310140> out 1 <311457> # cond minuscond
add in 2 <100 311457> out 1 <311458>     # cond negcond
mul in 2 <311458 310101> out 1 <311459>  # cond falseterm
add in 2 <311456 311459> out 1 <311460>  # cond result
mul in 2 <309996 309960> out 1 <311461>  # cond trueterm
const-mul-neg-1 in 1 <309996> out 1 <311462> # cond minuscond
add in 2 <100 311462> out 1 <311463>     # cond negcond
mul in 2 <311463 309957> out 1 <311464>  # cond falseterm
add in 2 <311461 311464> out 1 <311465>  # cond result
const-mul-ffffffff in 1 <311465> out 1 <311466> # multiply-by-constant 4294967295
add in 2 <311465 311460> out 1 <311467>  # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
add in 2 <311467 311466> out 1 <311468>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <311468> out 1 <311469> # multiply-by-constant 4294967295
add in 2 <311467 311469> out 1 <311470>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <311465> out 1 <311471> # multiply-by-constant 4294967295
add in 2 <311460 311471> out 1 <311472>  # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <311472> out 200 <311473 311474 311475 311476 311477 311478 311479 311480 311481 311482 311483 311484 311485 311486 311487 311488 311489 311490 311491 311492 311493 311494 311495 311496 311497 311498 311499 311500 311501 311502 311503 311504 311505 311506 311507 311508 311509 311510 311511 311512 311513 311514 311515 311516 311517 311518 311519 311520 311521 311522 311523 311524 311525 311526 311527 311528 311529 311530 311531 311532 311533 311534 311535 311536 311537 311538 311539 311540 311541 311542 311543 311544 311545 311546 311547 311548 311549 311550 311551 311552 311553 311554 311555 311556 311557 311558 311559 311560 311561 311562 311563 311564 311565 311566 311567 311568 311569 311570 311571 311572 311573 311574 311575 311576 311577 311578 311579 311580 311581 311582 311583 311584 311585 311586 311587 311588 311589 311590 311591 311592 311593 311594 311595 311596 311597 311598 311599 311600 311601 311602 311603 311604 311605 311606 311607 311608 311609 311610 311611 311612 311613 311614 311615 311616 311617 311618 311619 311620 311621 311622 311623 311624 311625 311626 311627 311628 311629 311630 311631 311632 311633 311634 311635 311636 311637 311638 311639 311640 311641 311642 311643 311644 311645 311646 311647 311648 311649 311650 311651 311652 311653 311654 311655 311656 311657 311658 311659 311660 311661 311662 311663 311664 311665 311666 311667 311668 311669 311670 311671 311672> # SplitBus
mul in 2 <311504 311470> out 1 <311673>  # cond trueterm
const-mul-neg-1 in 1 <311504> out 1 <311674> # cond minuscond
add in 2 <100 311674> out 1 <311675>     # cond negcond
mul in 2 <311675 311460> out 1 <311676>  # cond falseterm
add in 2 <311673 311676> out 1 <311677>  # cond result
const-mul-ffffffff in 1 <311677> out 1 <311678> # multiply-by-constant 4294967295
add in 2 <311677 311455> out 1 <311679>  # ArithBusReq.AddReq(DFG.Conditional,DFG.Conditional)
split in 1 <311679> out 235 <311680 311681 311682 311683 311684 311685 311686 311687 311688 311689 311690 311691 311692 311693 311694 311695 311696 311697 311698 311699 311700 311701 311702 311703 311704 311705 311706 311707 311708 311709 311710 311711 311712 311713 311714 311715 311716 311717 311718 311719 311720 311721 311722 311723 311724 311725 311726 311727 311728 311729 311730 311731 311732 311733 311734 311735 311736 311737 311738 311739 311740 311741 311742 311743 311744 311745 311746 311747 311748 311749 311750 311751 311752 311753 311754 311755 311756 311757 311758 311759 311760 311761 311762 311763 311764 311765 311766 311767 311768 311769 311770 311771 311772 311773 311774 311775 311776 311777 311778 311779 311780 311781 311782 311783 311784 311785 311786 311787 311788 311789 311790 311791 311792 311793 311794 311795 311796 311797 311798 311799 311800 311801 311802 311803 311804 311805 311806 311807 311808 311809 311810 311811 311812 311813 311814 311815 311816 311817 311818 311819 311820 311821 311822 311823 311824 311825 311826 311827 311828 311829 311830 311831 311832 311833 311834 311835 311836 311837 311838 311839 311840 311841 311842 311843 311844 311845 311846 311847 311848 311849 311850 311851 311852 311853 311854 311855 311856 311857 311858 311859 311860 311861 311862 311863 311864 311865 311866 311867 311868 311869 311870 311871 311872 311873 311874 311875 311876 311877 311878 311879 311880 311881 311882 311883 311884 311885 311886 311887 311888 311889 311890 311891 311892 311893 311894 311895 311896 311897 311898 311899 311900 311901 311902 311903 311904 311905 311906 311907 311908 311909 311910 311911 311912 311913 311914> # SplitBus
const-mul-2 in 1 <311711> out 1 <311915> # join source bit 31
add in 2 <311710 311915> out 1 <311916>  # join source bit 30
const-mul-2 in 1 <311916> out 1 <311917> # join
add in 2 <311709 311917> out 1 <311918>  # join source bit 29
const-mul-2 in 1 <311918> out 1 <311919> # join
add in 2 <311708 311919> out 1 <311920>  # join source bit 28
const-mul-2 in 1 <311920> out 1 <311921> # join
add in 2 <311707 311921> out 1 <311922>  # join source bit 27
const-mul-2 in 1 <311922> out 1 <311923> # join
add in 2 <311706 311923> out 1 <311924>  # join source bit 26
const-mul-2 in 1 <311924> out 1 <311925> # join
add in 2 <311705 311925> out 1 <311926>  # join source bit 25
const-mul-2 in 1 <311926> out 1 <311927> # join
add in 2 <311704 311927> out 1 <311928>  # join source bit 24
const-mul-2 in 1 <311928> out 1 <311929> # join
add in 2 <311703 311929> out 1 <311930>  # join source bit 23
const-mul-2 in 1 <311930> out 1 <311931> # join
add in 2 <311702 311931> out 1 <311932>  # join source bit 22
const-mul-2 in 1 <311932> out 1 <311933> # join
add in 2 <311701 311933> out 1 <311934>  # join source bit 21
const-mul-2 in 1 <311934> out 1 <311935> # join
add in 2 <311700 311935> out 1 <311936>  # join source bit 20
const-mul-2 in 1 <311936> out 1 <311937> # join
add in 2 <311699 311937> out 1 <311938>  # join source bit 19
const-mul-2 in 1 <311938> out 1 <311939> # join
add in 2 <311698 311939> out 1 <311940>  # join source bit 18
const-mul-2 in 1 <311940> out 1 <311941> # join
add in 2 <311697 311941> out 1 <311942>  # join source bit 17
const-mul-2 in 1 <311942> out 1 <311943> # join
add in 2 <311696 311943> out 1 <311944>  # join source bit 16
const-mul-2 in 1 <311944> out 1 <311945> # join
add in 2 <311695 311945> out 1 <311946>  # join source bit 15
const-mul-2 in 1 <311946> out 1 <311947> # join
add in 2 <311694 311947> out 1 <311948>  # join source bit 14
const-mul-2 in 1 <311948> out 1 <311949> # join
add in 2 <311693 311949> out 1 <311950>  # join source bit 13
const-mul-2 in 1 <311950> out 1 <311951> # join
add in 2 <311692 311951> out 1 <311952>  # join source bit 12
const-mul-2 in 1 <311952> out 1 <311953> # join
add in 2 <311691 311953> out 1 <311954>  # join source bit 11
const-mul-2 in 1 <311954> out 1 <311955> # join
add in 2 <311690 311955> out 1 <311956>  # join source bit 10
const-mul-2 in 1 <311956> out 1 <311957> # join
add in 2 <311689 311957> out 1 <311958>  # join source bit 9
const-mul-2 in 1 <311958> out 1 <311959> # join
add in 2 <311688 311959> out 1 <311960>  # join source bit 8
const-mul-2 in 1 <311960> out 1 <311961> # join
add in 2 <311687 311961> out 1 <311962>  # join source bit 7
const-mul-2 in 1 <311962> out 1 <311963> # join
add in 2 <311686 311963> out 1 <311964>  # join source bit 6
const-mul-2 in 1 <311964> out 1 <311965> # join
add in 2 <311685 311965> out 1 <311966>  # join source bit 5
const-mul-2 in 1 <311966> out 1 <311967> # join
add in 2 <311684 311967> out 1 <311968>  # join source bit 4
const-mul-2 in 1 <311968> out 1 <311969> # join
add in 2 <311683 311969> out 1 <311970>  # join source bit 3
const-mul-2 in 1 <311970> out 1 <311971> # join
add in 2 <311682 311971> out 1 <311972>  # join source bit 2
const-mul-2 in 1 <311972> out 1 <311973> # join
add in 2 <311681 311973> out 1 <311974>  # join source bit 1
const-mul-2 in 1 <311974> out 1 <311975> # join
add in 2 <311680 311975> out 1 <311976>  # join source bit 0
add in 2 <311976 311976> out 1 <311977>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <311977> out 1 <311978> # multiply-by-constant 4294967295
add in 2 <311679 311978> out 1 <311979>  # ArithBusReq.AddReq(DFG.Add,DFG.Negate)
const-mul-ffffffff in 1 <311677> out 1 <311980> # multiply-by-constant 4294967295
add in 2 <311455 311980> out 1 <311981>  # 'CmpLT DFG.Conditional - DFG.Conditional'
split in 1 <311981> out 267 <311982 311983 311984 311985 311986 311987 311988 311989 311990 311991 311992 311993 311994 311995 311996 311997 311998 311999 312000 312001 312002 312003 312004 312005 312006 312007 312008 312009 312010 312011 312012 312013 312014 312015 312016 312017 312018 312019 312020 312021 312022 312023 312024 312025 312026 312027 312028 312029 312030 312031 312032 312033 312034 312035 312036 312037 312038 312039 312040 312041 312042 312043 312044 312045 312046 312047 312048 312049 312050 312051 312052 312053 312054 312055 312056 312057 312058 312059 312060 312061 312062 312063 312064 312065 312066 312067 312068 312069 312070 312071 312072 312073 312074 312075 312076 312077 312078 312079 312080 312081 312082 312083 312084 312085 312086 312087 312088 312089 312090 312091 312092 312093 312094 312095 312096 312097 312098 312099 312100 312101 312102 312103 312104 312105 312106 312107 312108 312109 312110 312111 312112 312113 312114 312115 312116 312117 312118 312119 312120 312121 312122 312123 312124 312125 312126 312127 312128 312129 312130 312131 312132 312133 312134 312135 312136 312137 312138 312139 312140 312141 312142 312143 312144 312145 312146 312147 312148 312149 312150 312151 312152 312153 312154 312155 312156 312157 312158 312159 312160 312161 312162 312163 312164 312165 312166 312167 312168 312169 312170 312171 312172 312173 312174 312175 312176 312177 312178 312179 312180 312181 312182 312183 312184 312185 312186 312187 312188 312189 312190 312191 312192 312193 312194 312195 312196 312197 312198 312199 312200 312201 312202 312203 312204 312205 312206 312207 312208 312209 312210 312211 312212 312213 312214 312215 312216 312217 312218 312219 312220 312221 312222 312223 312224 312225 312226 312227 312228 312229 312230 312231 312232 312233 312234 312235 312236 312237 312238 312239 312240 312241 312242 312243 312244 312245 312246 312247 312248> # SplitBus
mul in 2 <312013 311979> out 1 <312249>  # cond trueterm
const-mul-neg-1 in 1 <312013> out 1 <312250> # cond minuscond
add in 2 <100 312250> out 1 <312251>     # cond negcond
mul in 2 <312251 311455> out 1 <312252>  # cond falseterm
add in 2 <312249 312252> out 1 <312253>  # cond result
add in 2 <312253 104> out 1 <312254>     # ArithBusReq.AddReq(DFG.Conditional,DFG.Constant)
const-mul-ffffffff in 1 <97> out 1 <312255> # multiply-by-constant 4294967295
add in 2 <312254 312255> out 1 <312256>  # 'CmpLT DFG.Add - DFG.Input'
split in 1 <312256> out 238 <312257 312258 312259 312260 312261 312262 312263 312264 312265 312266 312267 312268 312269 312270 312271 312272 312273 312274 312275 312276 312277 312278 312279 312280 312281 312282 312283 312284 312285 312286 312287 312288 312289 312290 312291 312292 312293 312294 312295 312296 312297 312298 312299 312300 312301 312302 312303 312304 312305 312306 312307 312308 312309 312310 312311 312312 312313 312314 312315 312316 312317 312318 312319 312320 312321 312322 312323 312324 312325 312326 312327 312328 312329 312330 312331 312332 312333 312334 312335 312336 312337 312338 312339 312340 312341 312342 312343 312344 312345 312346 312347 312348 312349 312350 312351 312352 312353 312354 312355 312356 312357 312358 312359 312360 312361 312362 312363 312364 312365 312366 312367 312368 312369 312370 312371 312372 312373 312374 312375 312376 312377 312378 312379 312380 312381 312382 312383 312384 312385 312386 312387 312388 312389 312390 312391 312392 312393 312394 312395 312396 312397 312398 312399 312400 312401 312402 312403 312404 312405 312406 312407 312408 312409 312410 312411 312412 312413 312414 312415 312416 312417 312418 312419 312420 312421 312422 312423 312424 312425 312426 312427 312428 312429 312430 312431 312432 312433 312434 312435 312436 312437 312438 312439 312440 312441 312442 312443 312444 312445 312446 312447 312448 312449 312450 312451 312452 312453 312454 312455 312456 312457 312458 312459 312460 312461 312462 312463 312464 312465 312466 312467 312468 312469 312470 312471 312472 312473 312474 312475 312476 312477 312478 312479 312480 312481 312482 312483 312484 312485 312486 312487 312488 312489 312490 312491 312492 312493 312494> # SplitBus
mul in 2 <312288 103> out 1 <312495>     # cond trueterm
const-mul-neg-1 in 1 <312288> out 1 <312496> # cond minuscond
add in 2 <100 312496> out 1 <312497>     # cond negcond
mul in 2 <312497 102> out 1 <312498>     # cond falseterm
add in 2 <312495 312498> out 1 <312499>  # cond result
add in 2 <312253 3084> out 1 <312500>    # ArithBusReq.AddReq(DFG.Conditional,DFG.Negate)
const-mul-ffffffff in 1 <312500> out 1 <312501> # multiply-by-constant 4294967295
add in 2 <97 312501> out 1 <312502>      # 'CmpLT DFG.Input - DFG.Subtract'
split in 1 <312502> outplitBus
mul in 2 <312534 103> out 1 <312773>     # cond trueterm
const-mul-neg-1 in 1 <312534> out 1 <312774> # cond minuscond
add in 2 <100 312774> out 1 <312775>     # cond negcond
mul in 2 <312775 312499> out 1 <312776>  # cond falseterm
add in 2 <312773 312776> out 1 <312777>  # cond result
mul in 2 <100 102> out 1 <312778>        # output-cast
output 312778                            # 
mul in 2 <100 102> out 1 <312779>        # output-cast
output 312779                            # 
mul in 2 <100 3362> out 1 <312780>       # output-cast
output 312780                            # 
mul in 2 <100 6619> out 1 <312781>       # output-cast
output 312781                            # 
mul in 2 <100 9876> out 1 <312782>       # output-cast
output 312782                            # 
mul in 2 <100 13133> out 1 <312783>      # output-cast
output 312783                            # 
mul in 2 <100 16390> out 1 <312784>      # output-cast
output 312784                            # 
mul in 2 <100 19647> out 1 <312785>      # output-cast
output 312785                            # 
mul in 2 <100 22904> out 1 <312786>      # output-cast
output 312786                            # 
mul in 2 <100 26161> out 1 <312787>      # output-cast
output 312787                            # 
mul in 2 <100 29418> out 1 <312788>      # output-cast
output 312788                            # 
mul in 2 <100 32675> out 1 <312789>      # output-cast
output 312789                            # 
mul in 2 <100 35932> out 1 <312790>      # output-cast
output 312790                            # 
mul in 2 <100 39189> out 1 <312791>      # output-cast
output 312791                            # 
mul in 2 <100 42446> out 1 <312792>      # output-cast
output 312792                            # 
mul in 2 <100 45703> out 1 <312793>      # output-cast
output 312793                            # 
mul in 2 <100 48960> out 1 <312794>      # output-cast
output 312794                            # 
mul in 2 <100 52217> out 1 <312795>      # output-cast
output 312795                            # 
mul in 2 <100 55474> out 1 <312796>      # output-cast
output 312796                            # 
mul in 2 <100 58731> out 1 <312797>      # output-cast
output 312797                            # 
mul in 2 <100 61988> out 1 <312798>      # output-cast
output 312798                            # 
mul in 2 <100 65245> out 1 <312799>      # output-cast
output 312799                            # 
mul in 2 <100 68502> out 1 <312800>      # output-cast
output 312800                            # 
mul in 2 <100 71759> out 1 <312801>      # output-cast
output 312801                            # 
mul in 2 <100 75016> out 1 <312802>      # output-cast
output 312802                            # 
mul in 2 <100 78273> out 1 <312803>      # output-cast
output 312803                            # 
mul in 2 <100 81530> out 1 <312804>      # output-cast
output 312804                            # 
mul in 2 <100 84787> out 1 <312805>      # output-cast
output 312805                            # 
mul in 2 <100 88044> out 1 <312806>      # output-cast
output 312806                            # 
mul in 2 <100 91301> out 1 <312807>      # output-cast
output 312807                            # 
mul in 2 <100 94558> out 1 <312808>      # output-cast
output 312808                            # 
mul in 2 <100 97815> out 1 <312809>      # output-cast
output 312809                            # 
mul in 2 <100 101072> out 1 <312810>     # output-cast
output 312810                            # 
mul in 2 <100 104329> out 1 <312811>     # output-cast
output 312811                            # 
mul in 2 <100 107586> out 1 <312812>     # output-cast
output 312812                            # 
mul in 2 <100 110843> out 1 <312813>     # output-cast
output 312813                            # 
mul in 2 <100 114100> out 1 <312814>     # output-cast
output 312814                            # 
mul in 2 <100 117357> out 1 <312815>     # output-cast
output 312815                            # 
mul in 2 <100 120614> out 1 <312816>     # output-cast
output 312816                            # 
mul in 2 <100 123871> out 1 <312817>     # output-cast
output 312817                            # 
mul in 2 <100 127128> out 1 <312818>     # output-cast
output 312818                            # 
mul in 2 <100 130385> out 1 <312819>     # output-cast
output 312819                            # 
mul in 2 <100 133642> out 1 <312820>     # output-cast
output 312820                            # 
mul in 2 <100 136899> out 1 <312821>     # output-cast
output 312821                            # 
mul in 2 <100 140156> out 1 <312822>     # output-cast
output 312822                            # 
mul in 2 <100 143413> out 1 <312823>     # output-cast
output 312823                            # 
mul in 2 <100 146670> out 1 <312824>     # output-cast
output 312824                            # 
mul in 2 <100 149927> out 1 <312825>     # output-cast
output 312825                            # 
mul in 2 <100 153184> out 1 <312826>     # output-cast
output 312826                            # 
mul in 2 <100 156441> out 1 <312827>     # output-cast
output 312827                            # 
mul in 2 <100 159698> out 1 <312828>     # output-cast
output 312828                            # 
mul in 2 <100 162955> out 1 <312829>     # output-cast
output 312829                            # 
mul in 2 <100 166212> out 1 <312830>     # output-cast
output 312830                            # 
mul in 2 <100 169469> out 1 <312831>     # output-cast
output 312831                            # 
mul in 2 <100 172726> out 1 <312832>     # output-cast
output 312832                            # 
mul in 2 <100 175983> out 1 <312833>     # output-cast
output 312833                            # 
mul in 2 <100 179240> out 1 <312834>     # output-cast
output 312834                            # 
mul in 2 <100 182497> out 1 <312835>     # output-cast
output 312835                            # 
mul in 2 <100 185754> out 1 <312836>     # output-cast
output 312836                            # 
mul in 2 <100 189011> out 1 <312837>     # output-cast
output 312837                            # 
mul in 2 <100 192268> out 1 <312838>     # output-cast
output 312838                            # 
mul in 2 <100 195525> out 1 <312839>     # output-cast
output 312839                            # 
mul in 2 <100 198782> out 1 <312840>     # output-cast
output 312840                            # 
mul in 2 <100 202039> out 1 <312841>     # output-cast
output 312841                            # 
mul in 2 <100 205296> out 1 <312842>     # output-cast
output 312842                            # 
mul in 2 <100 208553> out 1 <312843>     # output-cast
output 312843                            # 
mul in 2 <100 211810> out 1 <312844>     # output-cast
output 312844                            # 
mul in 2 <100 215067> out 1 <312845>     # output-cast
output 312845                            # 
mul in 2 <100 218324> out 1 <312846>     # output-cast
output 312846                            # 
mul in 2 <100 221581> out 1 <312847>     # output-cast
output 312847                            # 
mul in 2 <100 224838> out 1 <312848>     # output-cast
output 312848                            # 
mul in 2 <100 228095> out 1 <312849>     # output-cast
output 312849                            # 
mul in 2 <100 231352> out 1 <312850>     # output-cast
output 312850                            # 
mul in 2 <100 234609> out 1 <312851>     # output-cast
output 312851                            # 
mul in 2 <100 237866> out 1 <312852>     # output-cast
output 312852                            # 
mul in 2 <100 241123> out 1 <312853>     # output-cast
output 312853                            # 
mul in 2 <100 244380> out 1 <312854>     # output-cast
output 312854                            # 
mul in 2 <100 247637> out 1 <312855>     # output-cast
output 312855                            # 
mul in 2 <100 250894> out 1 <312856>     # output-cast
output 312856                            # 
mul in 2 <100 254151> out 1 <312857>     # output-cast
output 312857                            # 
mul in 2 <100 257408> out 1 <312858>     # output-cast
output 312858                            # 
mul in 2 <100 260665> out 1 <312859>     # output-cast
output 312859                            # 
mul in 2 <100 263922> out 1 <312860>     # output-cast
output 312860                            # 
mul in 2 <100 267179> out 1 <312861>     # output-cast
output 312861                            # 
mul in 2 <100 270436> out 1 <312862>     # output-cast
output 312862                            # 
mul in 2 <100 273693> out 1 <312863>     # output-cast
output 312863                            # 
mul in 2 <100 276950> out 1 <312864>     # output-cast
output 312864                            # 
mul in 2 <100 280207> out 1 <312865>     # output-cast
output 312865                            # 
mul in 2 <100 283464> out 1 <312866>     # output-cast
output 312866                            # 
mul in 2 <100 286721> out 1 <312867>     # output-cast
output 312867                            # 
mul in 2 <100 289978> out 1 <312868>     # output-cast
output 312868                            # 
mul in 2 <100 293235> out 1 <312869>     # output-cast
output 312869                            # 
mul in 2 <100 296492> out 1 <312870>     # output-cast
output 312870                            # 
mul in 2 <100 299749> out 1 <312871>     # output-cast
output 312871                            # 
mul in 2 <100 303006> out 1 <312872>     # output-cast
output 312872                            # 
mul in 2 <100 306263> out 1 <312873>     # output-cast
output 312873                            # 
mul in 2 <100 309520> out 1 <312874>     # output-cast
output 312874                            # 
mul in 2 <100 312777> out 1 <312875>     # output-cast
output 312875                            # 
mul in 2 <100 102> out 1 <312876>        # output-cast
output 312876                            # 
mul in 2 <100 102> out 1 <312877>        # output-cast
output 312877                            # 
